!function (e) {
  var t = {};
  function n(i) {
    if (t[i]) return t[i].exports;
    var r = t[i] = {i: i, l: false, exports: {}};
    return e[i].call(r.exports, r, r.exports, n), r.l = true, r.exports;
  }
  n.m = e, n.c = t, n.d = function (e, t, i) {
    n.o(e, t) || Object.defineProperty(e, t, {enumerable: true, get: i});
  }, n.r = function (e) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e, "__esModule", {value: true});
  }, n.t = function (e, t) {
    if (1 & t && (e = n(e)), 8 & t) return e;
    if (4 & t && "object" == typeof e && e && e.__esModule) return e;
    var i = Object.create(null);
    if (n.r(i), Object.defineProperty(i, "default", {enumerable: true, value: e}), 2 & t && "string" != typeof e) for (var r in e) n.d(i, r, function (t) {
      return e[t];
    }.bind(null, r));
    return i;
  }, n.n = function (e) {
    var t = e && e.__esModule ? function () {
      return e.default;
    } : function () {
      return e;
    };
    return n.d(t, "a", t), t;
  }, n.o = function (e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
  }, n.p = "/games/mineenergy/js/v0.045/", n(n.s = 231);
}([function (e, t, n) {
  "use strict";
  function i() {}
  n.r(t), n.d(t, "ACESFilmicToneMapping", function () {
    return ce;
  }), n.d(t, "AddEquation", function () {
    return R;
  }), n.d(t, "AddOperation", function () {
    return ie;
  }), n.d(t, "AdditiveBlending", function () {
    return A;
  }), n.d(t, "AlphaFormat", function () {
    return Ge;
  }), n.d(t, "AlwaysDepth", function () {
    return X;
  }), n.d(t, "AlwaysStencilFunc", function () {
    return an;
  }), n.d(t, "AmbientLight", function () {
    return Rh;
  }), n.d(t, "AmbientLightProbe", function () {
    return eu;
  }), n.d(t, "AnimationClip", function () {
    return Fc;
  }), n.d(t, "AnimationLoader", function () {
    return $c;
  }), n.d(t, "AnimationMixer", function () {
    return ku;
  }), n.d(t, "AnimationObjectGroup", function () {
    return Mu;
  }), n.d(t, "AnimationUtils", function () {
    return qc;
  }), n.d(t, "ArcCurve", function () {
    return eh;
  }), n.d(t, "ArrayCamera", function () {
    return Zs;
  }), n.d(t, "ArrowHelper", function () {
    return kd;
  }), n.d(t, "Audio", function () {
    return hu;
  }), n.d(t, "AudioAnalyser", function () {
    return gu;
  }), n.d(t, "AudioContext", function () {
    return Yh;
  }), n.d(t, "AudioListener", function () {
    return cu;
  }), n.d(t, "AudioLoader", function () {
    return Jh;
  }), n.d(t, "AxesHelper", function () {
    return Rd;
  }), n.d(t, "AxisHelper", function () {
    return ip;
  }), n.d(t, "BackSide", function () {
    return y;
  }), n.d(t, "BasicDepthPacking", function () {
    return Ut;
  }), n.d(t, "BasicShadowMap", function () {
    return p;
  }), n.d(t, "BinaryTextureLoader", function () {
    return lp;
  }), n.d(t, "Bone", function () {
    return La;
  }), n.d(t, "BooleanKeyframeTrack", function () {
    return Rc;
  }), n.d(t, "BoundingBoxHelper", function () {
    return rp;
  }), n.d(t, "Box2", function () {
    return zu;
  }), n.d(t, "Box3", function () {
    return hi;
  }), n.d(t, "Box3Helper", function () {
    return qd;
  }), n.d(t, "BoxBufferGeometry", function () {
    return Ir;
  }), n.d(t, "BoxGeometry", function () {
    return Or;
  }), n.d(t, "BoxHelper", function () {
    return Ed;
  }), n.d(t, "BufferAttribute", function () {
    return Hi;
  }), n.d(t, "BufferGeometry", function () {
    return cr;
  }), n.d(t, "BufferGeometryLoader", function () {
    return Bh;
  }), n.d(t, "ByteType", function () {
    return Le;
  }), n.d(t, "Cache", function () {
    return Nc;
  }), n.d(t, "Camera", function () {
    return Gr;
  }), n.d(t, "CameraHelper", function () {
    return bd;
  }), n.d(t, "CanvasRenderer", function () {
    return hp;
  }), n.d(t, "CanvasTexture", function () {
    return Qa;
  }), n.d(t, "CatmullRomCurve3", function () {
    return sh;
  }), n.d(t, "CineonToneMapping", function () {
    return le;
  }), n.d(t, "CircleBufferGeometry", function () {
    return dc;
  }), n.d(t, "CircleGeometry", function () {
    return uc;
  }), n.d(t, "ClampToEdgeWrapping", function () {
    return _e;
  }), n.d(t, "Clock", function () {
    return ru;
  }), n.d(t, "ClosedSplineCurve3", function () {
    return ep;
  }), n.d(t, "Color", function () {
    return Ii;
  }), n.d(t, "ColorKeyframeTrack", function () {
    return Lc;
  }), n.d(t, "CompressedTexture", function () {
    return Za;
  }), n.d(t, "CompressedTextureLoader", function () {
    return Wc;
  }), n.d(t, "ConeBufferGeometry", function () {
    return hc;
  }), n.d(t, "ConeGeometry", function () {
    return cc;
  }), n.d(t, "CubeCamera", function () {
    return Wr;
  }), n.d(t, "CubeGeometry", function () {
    return Or;
  }), n.d(t, "CubeReflectionMapping", function () {
    return ue;
  }), n.d(t, "CubeRefractionMapping", function () {
    return de;
  }), n.d(t, "CubeTexture", function () {
    return wo;
  }), n.d(t, "CubeTextureLoader", function () {
    return Jc;
  }), n.d(t, "CubeUVReflectionMapping", function () {
    return ge;
  }), n.d(t, "CubeUVRefractionMapping", function () {
    return ve;
  }), n.d(t, "CubicBezierCurve", function () {
    return hh;
  }), n.d(t, "CubicBezierCurve3", function () {
    return uh;
  }), n.d(t, "CubicInterpolant", function () {
    return Ac;
  }), n.d(t, "CullFaceBack", function () {
    return l;
  }), n.d(t, "CullFaceFront", function () {
    return c;
  }), n.d(t, "CullFaceFrontBack", function () {
    return h;
  }), n.d(t, "CullFaceNone", function () {
    return a;
  }), n.d(t, "Curve", function () {
    return Zc;
  }), n.d(t, "CurvePath", function () {
    return yh;
  }), n.d(t, "CustomBlending", function () {
    return k;
  }), n.d(t, "CylinderBufferGeometry", function () {
    return lc;
  }), n.d(t, "CylinderGeometry", function () {
    return ac;
  }), n.d(t, "Cylindrical", function () {
    return Bu;
  }), n.d(t, "DataTexture", function () {
    return Yr;
  }), n.d(t, "DataTexture2DArray", function () {
    return So;
  }), n.d(t, "DataTexture3D", function () {
    return Eo;
  }), n.d(t, "DataTextureLoader", function () {
    return Xc;
  }), n.d(t, "DecrementStencilOp", function () {
    return Yt;
  }), n.d(t, "DecrementWrapStencilOp", function () {
    return Kt;
  }), n.d(t, "DefaultLoadingManager", function () {
    return Vc;
  }), n.d(t, "DepthFormat", function () {
    return Ye;
  }), n.d(t, "DepthStencilFormat", function () {
    return Je;
  }), n.d(t, "DepthTexture", function () {
    return el;
  }), n.d(t, "DirectionalLight", function () {
    return kh;
  }), n.d(t, "DirectionalLightHelper", function () {
    return yd;
  }), n.d(t, "DirectionalLightShadow", function () {
    return Ch;
  }), n.d(t, "DiscreteInterpolant", function () {
    return Cc;
  }), n.d(t, "DodecahedronBufferGeometry", function () {
    return pl;
  }), n.d(t, "DodecahedronGeometry", function () {
    return dl;
  }), n.d(t, "DoubleSide", function () {
    return _;
  }), n.d(t, "DstAlphaFactor", function () {
    return V;
  }), n.d(t, "DstColorFactor", function () {
    return H;
  }), n.d(t, "DynamicBufferAttribute", function () {
    return Hd;
  }), n.d(t, "EdgesGeometry", function () {
    return sc;
  }), n.d(t, "EdgesHelper", function () {
    return op;
  }), n.d(t, "EllipseCurve", function () {
    return Qc;
  }), n.d(t, "EqualDepth", function () {
    return K;
  }), n.d(t, "EqualStencilFunc", function () {
    return tn;
  }), n.d(t, "EquirectangularReflectionMapping", function () {
    return pe;
  }), n.d(t, "EquirectangularRefractionMapping", function () {
    return me;
  }), n.d(t, "Euler", function () {
    return On;
  }), n.d(t, "EventDispatcher", function () {
    return i;
  }), n.d(t, "ExtrudeBufferGeometry", function () {
    return $l;
  }), n.d(t, "ExtrudeGeometry", function () {
    return jl;
  }), n.d(t, "Face3", function () {
    return Ni;
  }), n.d(t, "Face4", function () {
    return Ld;
  }), n.d(t, "FaceColors", function () {
    return S;
  }), n.d(t, "FaceNormalsHelper", function () {
    return md;
  }), n.d(t, "FileLoader", function () {
    return jc;
  }), n.d(t, "FlatShading", function () {
    return x;
  }), n.d(t, "Float32Attribute", function () {
    return Zd;
  }), n.d(t, "Float32BufferAttribute", function () {
    return Zi;
  }), n.d(t, "Float64Attribute", function () {
    return Qd;
  }), n.d(t, "Float64BufferAttribute", function () {
    return Qi;
  }), n.d(t, "FloatType", function () {
    return Be;
  }), n.d(t, "Fog", function () {
    return aa;
  }), n.d(t, "FogExp2", function () {
    return sa;
  }), n.d(t, "Font", function () {
    return $h;
  }), n.d(t, "FontLoader", function () {
    return Xh;
  }), n.d(t, "FrontFaceDirectionCCW", function () {
    return d;
  }), n.d(t, "FrontFaceDirectionCW", function () {
    return u;
  }), n.d(t, "FrontSide", function () {
    return v;
  }), n.d(t, "Frustum", function () {
    return no;
  }), n.d(t, "GammaEncoding", function () {
    return Ot;
  }), n.d(t, "Geometry", function () {
    return Dr;
  }), n.d(t, "GeometryUtils", function () {
    return cp;
  }), n.d(t, "GreaterDepth", function () {
    return Q;
  }), n.d(t, "GreaterEqualDepth", function () {
    return Z;
  }), n.d(t, "GreaterEqualStencilFunc", function () {
    return sn;
  }), n.d(t, "GreaterStencilFunc", function () {
    return rn;
  }), n.d(t, "GridHelper", function () {
    return ld;
  }), n.d(t, "Group", function () {
    return Ks;
  }), n.d(t, "HalfFloatType", function () {
    return Fe;
  }), n.d(t, "HemisphereLight", function () {
    return wh;
  }), n.d(t, "HemisphereLightHelper", function () {
    return sd;
  }), n.d(t, "HemisphereLightProbe", function () {
    return Qh;
  }), n.d(t, "IcosahedronBufferGeometry", function () {
    return ul;
  }), n.d(t, "IcosahedronGeometry", function () {
    return hl;
  }), n.d(t, "ImageBitmapLoader", function () {
    return Hh;
  }), n.d(t, "ImageLoader", function () {
    return Yc;
  }), n.d(t, "ImageUtils", function () {
    return _n;
  }), n.d(t, "ImmediateRenderObject", function () {
    return Gu;
  }), n.d(t, "IncrementStencilOp", function () {
    return Xt;
  }), n.d(t, "IncrementWrapStencilOp", function () {
    return Jt;
  }), n.d(t, "InstancedBufferAttribute", function () {
    return Ih;
  }), n.d(t, "InstancedBufferGeometry", function () {
    return Oh;
  }), n.d(t, "InstancedInterleavedBuffer", function () {
    return Lu;
  }), n.d(t, "Int16Attribute", function () {
    return Xd;
  }), n.d(t, "Int16BufferAttribute", function () {
    return Xi;
  }), n.d(t, "Int32Attribute", function () {
    return Jd;
  }), n.d(t, "Int32BufferAttribute", function () {
    return Ji;
  }), n.d(t, "Int8Attribute", function () {
    return jd;
  }), n.d(t, "Int8BufferAttribute", function () {
    return ji;
  }), n.d(t, "IntType", function () {
    return Oe;
  }), n.d(t, "InterleavedBuffer", function () {
    return la;
  }), n.d(t, "InterleavedBufferAttribute", function () {
    return ca;
  }), n.d(t, "Interpolant", function () {
    return Tc;
  }), n.d(t, "InterpolateDiscrete", function () {
    return Et;
  }), n.d(t, "InterpolateLinear", function () {
    return qt;
  }), n.d(t, "InterpolateSmooth", function () {
    return Tt;
  }), n.d(t, "InvertStencilOp", function () {
    return Zt;
  }), n.d(t, "JSONLoader", function () {
    return up;
  }), n.d(t, "KeepStencilOp", function () {
    return $t;
  }), n.d(t, "KeyframeTrack", function () {
    return kc;
  }), n.d(t, "LOD", function () {
    return Aa;
  }), n.d(t, "LatheBufferGeometry", function () {
    return nc;
  }), n.d(t, "LatheGeometry", function () {
    return tc;
  }), n.d(t, "Layers", function () {
    return In;
  }), n.d(t, "LensFlare", function () {
    return pp;
  }), n.d(t, "LessDepth", function () {
    return Y;
  }), n.d(t, "LessEqualDepth", function () {
    return J;
  }), n.d(t, "LessEqualStencilFunc", function () {
    return nn;
  }), n.d(t, "LessStencilFunc", function () {
    return en;
  }), n.d(t, "Light", function () {
    return bh;
  }), n.d(t, "LightProbe", function () {
    return Zh;
  }), n.d(t, "LightProbeHelper", function () {
    return ad;
  }), n.d(t, "LightShadow", function () {
    return Sh;
  }), n.d(t, "Line", function () {
    return za;
  }), n.d(t, "Line3", function () {
    return Vu;
  }), n.d(t, "LineBasicMaterial", function () {
    return Pa;
  }), n.d(t, "LineCurve", function () {
    return dh;
  }), n.d(t, "LineCurve3", function () {
    return ph;
  }), n.d(t, "LineDashedMaterial", function () {
    return Sc;
  }), n.d(t, "LineLoop", function () {
    return Ga;
  }), n.d(t, "LinePieces", function () {
    return Dd;
  }), n.d(t, "LineSegments", function () {
    return Va;
  }), n.d(t, "LineStrip", function () {
    return Pd;
  }), n.d(t, "LinearEncoding", function () {
    return Pt;
  }), n.d(t, "LinearFilter", function () {
    return Te;
  }), n.d(t, "LinearInterpolant", function () {
    return Mc;
  }), n.d(t, "LinearMipMapLinearFilter", function () {
    return ke;
  }), n.d(t, "LinearMipMapNearestFilter", function () {
    return Me;
  }), n.d(t, "LinearMipmapLinearFilter", function () {
    return Ce;
  }), n.d(t, "LinearMipmapNearestFilter", function () {
    return Ae;
  }), n.d(t, "LinearToneMapping", function () {
    return oe;
  }), n.d(t, "Loader", function () {
    return Gc;
  }), n.d(t, "LoaderUtils", function () {
    return Dh;
  }), n.d(t, "LoadingManager", function () {
    return Uc;
  }), n.d(t, "LogLuvEncoding", function () {
    return Bt;
  }), n.d(t, "LoopOnce", function () {
    return bt;
  }), n.d(t, "LoopPingPong", function () {
    return St;
  }), n.d(t, "LoopRepeat", function () {
    return wt;
  }), n.d(t, "LuminanceAlphaFormat", function () {
    return We;
  }), n.d(t, "LuminanceFormat", function () {
    return $e;
  }), n.d(t, "MOUSE", function () {
    return o;
  }), n.d(t, "Material", function () {
    return Vi;
  }), n.d(t, "MaterialLoader", function () {
    return Ph;
  }), n.d(t, "Math", function () {
    return hn;
  }), n.d(t, "Matrix3", function () {
    return yn;
  }), n.d(t, "Matrix4", function () {
    return Ln;
  }), n.d(t, "MaxEquation", function () {
    return O;
  }), n.d(t, "Mesh", function () {
    return Ar;
  }), n.d(t, "MeshBasicMaterial", function () {
    return Gi;
  }), n.d(t, "MeshDepthMaterial", function () {
    return Gs;
  }), n.d(t, "MeshDistanceMaterial", function () {
    return Hs;
  }), n.d(t, "MeshFaceMaterial", function () {
    return Od;
  }), n.d(t, "MeshLambertMaterial", function () {
    return bc;
  }), n.d(t, "MeshMatcapMaterial", function () {
    return wc;
  }), n.d(t, "MeshNormalMaterial", function () {
    return xc;
  }), n.d(t, "MeshPhongMaterial", function () {
    return yc;
  }), n.d(t, "MeshPhysicalMaterial", function () {
    return vc;
  }), n.d(t, "MeshStandardMaterial", function () {
    return gc;
  }), n.d(t, "MeshToonMaterial", function () {
    return _c;
  }), n.d(t, "MinEquation", function () {
    return D;
  }), n.d(t, "MirroredRepeatWrapping", function () {
    return xe;
  }), n.d(t, "MixOperation", function () {
    return ne;
  }), n.d(t, "MultiMaterial", function () {
    return Id;
  }), n.d(t, "MultiplyBlending", function () {
    return C;
  }), n.d(t, "MultiplyOperation", function () {
    return te;
  }), n.d(t, "NearestFilter", function () {
    return be;
  }), n.d(t, "NearestMipMapLinearFilter", function () {
    return qe;
  }), n.d(t, "NearestMipMapNearestFilter", function () {
    return Se;
  }), n.d(t, "NearestMipmapLinearFilter", function () {
    return Ee;
  }), n.d(t, "NearestMipmapNearestFilter", function () {
    return we;
  }), n.d(t, "NeverDepth", function () {
    return W;
  }), n.d(t, "NeverStencilFunc", function () {
    return Qt;
  }), n.d(t, "NoBlending", function () {
    return q;
  }), n.d(t, "NoColors", function () {
    return w;
  }), n.d(t, "NoToneMapping", function () {
    return re;
  }), n.d(t, "NormalBlending", function () {
    return T;
  }), n.d(t, "NotEqualDepth", function () {
    return ee;
  }), n.d(t, "NotEqualStencilFunc", function () {
    return on;
  }), n.d(t, "NumberKeyframeTrack", function () {
    return Pc;
  }), n.d(t, "Object3D", function () {
    return Jn;
  }), n.d(t, "ObjectLoader", function () {
    return zh;
  }), n.d(t, "ObjectSpaceNormalMap", function () {
    return Ht;
  }), n.d(t, "OctahedronBufferGeometry", function () {
    return cl;
  }), n.d(t, "OctahedronGeometry", function () {
    return ll;
  }), n.d(t, "OneFactor", function () {
    return B;
  }), n.d(t, "OneMinusDstAlphaFactor", function () {
    return G;
  }), n.d(t, "OneMinusDstColorFactor", function () {
    return j;
  }), n.d(t, "OneMinusSrcAlphaFactor", function () {
    return U;
  }), n.d(t, "OneMinusSrcColorFactor", function () {
    return z;
  }), n.d(t, "OrthographicCamera", function () {
    return Mh;
  }), n.d(t, "PCFShadowMap", function () {
    return m;
  }), n.d(t, "PCFSoftShadowMap", function () {
    return f;
  }), n.d(t, "ParametricBufferGeometry", function () {
    return il;
  }), n.d(t, "ParametricGeometry", function () {
    return nl;
  }), n.d(t, "Particle", function () {
    return Fd;
  }), n.d(t, "ParticleBasicMaterial", function () {
    return Ud;
  }), n.d(t, "ParticleSystem", function () {
    return zd;
  }), n.d(t, "ParticleSystemMaterial", function () {
    return Vd;
  }), n.d(t, "Path", function () {
    return _h;
  }), n.d(t, "PerspectiveCamera", function () {
    return Hr;
  }), n.d(t, "Plane", function () {
    return Qr;
  }), n.d(t, "PlaneBufferGeometry", function () {
    return co;
  }), n.d(t, "PlaneGeometry", function () {
    return lo;
  }), n.d(t, "PlaneHelper", function () {
    return Td;
  }), n.d(t, "PointCloud", function () {
    return Bd;
  }), n.d(t, "PointCloudMaterial", function () {
    return Nd;
  }), n.d(t, "PointLight", function () {
    return Ah;
  }), n.d(t, "PointLightHelper", function () {
    return td;
  }), n.d(t, "Points", function () {
    return Ya;
  }), n.d(t, "PointsMaterial", function () {
    return Ha;
  }), n.d(t, "PolarGridHelper", function () {
    return cd;
  }), n.d(t, "PolyhedronBufferGeometry", function () {
    return ol;
  }), n.d(t, "PolyhedronGeometry", function () {
    return rl;
  }), n.d(t, "PositionalAudio", function () {
    return fu;
  }), n.d(t, "PositionalAudioHelper", function () {
    return hd;
  }), n.d(t, "PropertyBinding", function () {
    return Au;
  }), n.d(t, "PropertyMixer", function () {
    return vu;
  }), n.d(t, "QuadraticBezierCurve", function () {
    return mh;
  }), n.d(t, "QuadraticBezierCurve3", function () {
    return fh;
  }), n.d(t, "Quaternion", function () {
    return dn;
  }), n.d(t, "QuaternionKeyframeTrack", function () {
    return Oc;
  }), n.d(t, "QuaternionLinearInterpolant", function () {
    return Dc;
  }), n.d(t, "REVISION", function () {
    return r;
  }), n.d(t, "RGBADepthPacking", function () {
    return Vt;
  }), n.d(t, "RGBAFormat", function () {
    return je;
  }), n.d(t, "RGBA_ASTC_10x10_Format", function () {
    return yt;
  }), n.d(t, "RGBA_ASTC_10x5_Format", function () {
    return ft;
  }), n.d(t, "RGBA_ASTC_10x6_Format", function () {
    return gt;
  }), n.d(t, "RGBA_ASTC_10x8_Format", function () {
    return vt;
  }), n.d(t, "RGBA_ASTC_12x10_Format", function () {
    return _t;
  }), n.d(t, "RGBA_ASTC_12x12_Format", function () {
    return xt;
  }), n.d(t, "RGBA_ASTC_4x4_Format", function () {
    return at;
  }), n.d(t, "RGBA_ASTC_5x4_Format", function () {
    return lt;
  }), n.d(t, "RGBA_ASTC_5x5_Format", function () {
    return ct;
  }), n.d(t, "RGBA_ASTC_6x5_Format", function () {
    return ht;
  }), n.d(t, "RGBA_ASTC_6x6_Format", function () {
    return ut;
  }), n.d(t, "RGBA_ASTC_8x5_Format", function () {
    return dt;
  }), n.d(t, "RGBA_ASTC_8x6_Format", function () {
    return pt;
  }), n.d(t, "RGBA_ASTC_8x8_Format", function () {
    return mt;
  }), n.d(t, "RGBA_PVRTC_2BPPV1_Format", function () {
    return ot;
  }), n.d(t, "RGBA_PVRTC_4BPPV1_Format", function () {
    return rt;
  }), n.d(t, "RGBA_S3TC_DXT1_Format", function () {
    return Qe;
  }), n.d(t, "RGBA_S3TC_DXT3_Format", function () {
    return et;
  }), n.d(t, "RGBA_S3TC_DXT5_Format", function () {
    return tt;
  }), n.d(t, "RGBDEncoding", function () {
    return Nt;
  }), n.d(t, "RGBEEncoding", function () {
    return It;
  }), n.d(t, "RGBEFormat", function () {
    return Xe;
  }), n.d(t, "RGBFormat", function () {
    return He;
  }), n.d(t, "RGBM16Encoding", function () {
    return zt;
  }), n.d(t, "RGBM7Encoding", function () {
    return Ft;
  }), n.d(t, "RGB_ETC1_Format", function () {
    return st;
  }), n.d(t, "RGB_PVRTC_2BPPV1_Format", function () {
    return it;
  }), n.d(t, "RGB_PVRTC_4BPPV1_Format", function () {
    return nt;
  }), n.d(t, "RGB_S3TC_DXT1_Format", function () {
    return Ze;
  }), n.d(t, "RawShaderMaterial", function () {
    return fc;
  }), n.d(t, "Ray", function () {
    return bi;
  }), n.d(t, "Raycaster", function () {
    return Pu;
  }), n.d(t, "RectAreaLight", function () {
    return Lh;
  }), n.d(t, "RectAreaLightHelper", function () {
    return nd;
  }), n.d(t, "RedFormat", function () {
    return Ke;
  }), n.d(t, "ReinhardToneMapping", function () {
    return se;
  }), n.d(t, "RepeatWrapping", function () {
    return ye;
  }), n.d(t, "ReplaceStencilOp", function () {
    return Wt;
  }), n.d(t, "ReverseSubtractEquation", function () {
    return P;
  }), n.d(t, "RingBufferGeometry", function () {
    return ec;
  }), n.d(t, "RingGeometry", function () {
    return Ql;
  }), n.d(t, "Scene", function () {
    return Kn;
  }), n.d(t, "SceneUtils", function () {
    return dp;
  }), n.d(t, "ShaderChunk", function () {
    return io;
  }), n.d(t, "ShaderLib", function () {
    return oo;
  }), n.d(t, "ShaderMaterial", function () {
    return Vr;
  }), n.d(t, "ShadowMaterial", function () {
    return mc;
  }), n.d(t, "Shape", function () {
    return xh;
  }), n.d(t, "ShapeBufferGeometry", function () {
    return rc;
  }), n.d(t, "ShapeGeometry", function () {
    return ic;
  }), n.d(t, "ShapePath", function () {
    return jh;
  }), n.d(t, "ShapeUtils", function () {
    return Vl;
  }), n.d(t, "ShortType", function () {
    return Pe;
  }), n.d(t, "Skeleton", function () {
    return Ra;
  }), n.d(t, "SkeletonHelper", function () {
    return ed;
  }), n.d(t, "SkinnedMesh", function () {
    return Ma;
  }), n.d(t, "SmoothShading", function () {
    return b;
  }), n.d(t, "Sphere", function () {
    return pi;
  }), n.d(t, "SphereBufferGeometry", function () {
    return Zl;
  }), n.d(t, "SphereGeometry", function () {
    return Kl;
  }), n.d(t, "Spherical", function () {
    return Iu;
  }), n.d(t, "SphericalHarmonics3", function () {
    return Kh;
  }), n.d(t, "SphericalReflectionMapping", function () {
    return fe;
  }), n.d(t, "Spline", function () {
    return np;
  }), n.d(t, "SplineCurve", function () {
    return gh;
  }), n.d(t, "SplineCurve3", function () {
    return tp;
  }), n.d(t, "SpotLight", function () {
    return qh;
  }), n.d(t, "SpotLightHelper", function () {
    return Ju;
  }), n.d(t, "SpotLightShadow", function () {
    return Eh;
  }), n.d(t, "Sprite", function () {
    return Sa;
  }), n.d(t, "SpriteMaterial", function () {
    return ha;
  }), n.d(t, "SrcAlphaFactor", function () {
    return N;
  }), n.d(t, "SrcAlphaSaturateFactor", function () {
    return $;
  }), n.d(t, "SrcColorFactor", function () {
    return F;
  }), n.d(t, "StereoCamera", function () {
    return iu;
  }), n.d(t, "StringKeyframeTrack", function () {
    return Ic;
  }), n.d(t, "SubtractEquation", function () {
    return L;
  }), n.d(t, "SubtractiveBlending", function () {
    return M;
  }), n.d(t, "TOUCH", function () {
    return s;
  }), n.d(t, "TangentSpaceNormalMap", function () {
    return Gt;
  }), n.d(t, "TetrahedronBufferGeometry", function () {
    return al;
  }), n.d(t, "TetrahedronGeometry", function () {
    return sl;
  }), n.d(t, "TextBufferGeometry", function () {
    return Jl;
  }), n.d(t, "TextGeometry", function () {
    return Yl;
  }), n.d(t, "Texture", function () {
    return bn;
  }), n.d(t, "TextureLoader", function () {
    return Kc;
  }), n.d(t, "TorusBufferGeometry", function () {
    return _l;
  }), n.d(t, "TorusGeometry", function () {
    return yl;
  }), n.d(t, "TorusKnotBufferGeometry", function () {
    return vl;
  }), n.d(t, "TorusKnotGeometry", function () {
    return gl;
  }), n.d(t, "Triangle", function () {
    return Li;
  }), n.d(t, "TriangleFanDrawMode", function () {
    return Lt;
  }), n.d(t, "TriangleStripDrawMode", function () {
    return Rt;
  }), n.d(t, "TrianglesDrawMode", function () {
    return kt;
  }), n.d(t, "TubeBufferGeometry", function () {
    return fl;
  }), n.d(t, "TubeGeometry", function () {
    return ml;
  }), n.d(t, "UVMapping", function () {
    return he;
  }), n.d(t, "Uint16Attribute", function () {
    return Yd;
  }), n.d(t, "Uint16BufferAttribute", function () {
    return Yi;
  }), n.d(t, "Uint32Attribute", function () {
    return Kd;
  }), n.d(t, "Uint32BufferAttribute", function () {
    return Ki;
  }), n.d(t, "Uint8Attribute", function () {
    return $d;
  }), n.d(t, "Uint8BufferAttribute", function () {
    return $i;
  }), n.d(t, "Uint8ClampedAttribute", function () {
    return Wd;
  }), n.d(t, "Uint8ClampedBufferAttribute", function () {
    return Wi;
  }), n.d(t, "Uncharted2ToneMapping", function () {
    return ae;
  }), n.d(t, "Uniform", function () {
    return Ru;
  }), n.d(t, "UniformsLib", function () {
    return ro;
  }), n.d(t, "UniformsUtils", function () {
    return zr;
  }), n.d(t, "UnsignedByteType", function () {
    return Re;
  }), n.d(t, "UnsignedInt248Type", function () {
    return Ve;
  }), n.d(t, "UnsignedIntType", function () {
    return Ie;
  }), n.d(t, "UnsignedShort4444Type", function () {
    return ze;
  }), n.d(t, "UnsignedShort5551Type", function () {
    return Ne;
  }), n.d(t, "UnsignedShort565Type", function () {
    return Ue;
  }), n.d(t, "UnsignedShortType", function () {
    return De;
  }), n.d(t, "VSMShadowMap", function () {
    return g;
  }), n.d(t, "Vector2", function () {
    return un;
  }), n.d(t, "Vector3", function () {
    return fn;
  }), n.d(t, "Vector4", function () {
    return wn;
  }), n.d(t, "VectorKeyframeTrack", function () {
    return Bc;
  }), n.d(t, "Vertex", function () {
    return Gd;
  }), n.d(t, "VertexColors", function () {
    return E;
  }), n.d(t, "VertexNormalsHelper", function () {
    return Xu;
  }), n.d(t, "VideoTexture", function () {
    return Ka;
  }), n.d(t, "WebGLMultisampleRenderTarget", function () {
    return En;
  }), n.d(t, "WebGLRenderTarget", function () {
    return Sn;
  }), n.d(t, "WebGLRenderTargetCube", function () {
    return Xr;
  }), n.d(t, "WebGLRenderer", function () {
    return oa;
  }), n.d(t, "WebGLUtils", function () {
    return Js;
  }), n.d(t, "WireframeGeometry", function () {
    return tl;
  }), n.d(t, "WireframeHelper", function () {
    return sp;
  }), n.d(t, "WrapAroundEnding", function () {
    return Ct;
  }), n.d(t, "XHRLoader", function () {
    return ap;
  }), n.d(t, "ZeroCurvatureEnding", function () {
    return At;
  }), n.d(t, "ZeroFactor", function () {
    return I;
  }), n.d(t, "ZeroSlopeEnding", function () {
    return Mt;
  }), n.d(t, "ZeroStencilOp", function () {
    return jt;
  }), n.d(t, "sRGBEncoding", function () {
    return Dt;
  }), undefined === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), undefined === Number.isInteger && (Number.isInteger = function (e) {
    return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
  }), undefined === Math.sign && (Math.sign = function (e) {
    return e < 0 ? -1 : e > 0 ? 1 : +e;
  }), "name" in Function.prototype == false && Object.defineProperty(Function.prototype, "name", {get: function () {
    return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
  }}), undefined === Object.assign && (Object.assign = function (e) {
    if (null == e) throw new TypeError("Cannot convert undefined or null to object");
    for (var t = Object(e), n = 1; n < arguments.length; n++) {
      var i = arguments[n];
      if (null != i) for (var r in i) Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r]);
    }
    return t;
  }), Object.assign(i.prototype, {addEventListener: function (e, t) {
    undefined === this._listeners && (this._listeners = {});
    var n = this._listeners;
    undefined === n[e] && (n[e] = []), -1 === n[e].indexOf(t) && n[e].push(t);
  }, hasEventListener: function (e, t) {
    if (undefined === this._listeners) return false;
    var n = this._listeners;
    return undefined !== n[e] && -1 !== n[e].indexOf(t);
  }, removeEventListener: function (e, t) {
    if (undefined !== this._listeners) {
      var n = this._listeners[e];
      if (undefined !== n) {
        var i = n.indexOf(t);
        -1 !== i && n.splice(i, 1);
      }
    }
  }, dispatchEvent: function (e) {
    if (undefined !== this._listeners) {
      var t = this._listeners[e.type];
      if (undefined !== t) {
        e.target = this;
        for (var n = t.slice(0), i = 0, r = n.length; i < r; i++) n[i].call(this, e);
      }
    }
  }});
  for (var r = "108", o = {LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2}, s = {ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3}, a = 0, l = 1, c = 2, h = 3, u = 0, d = 1, p = 0, m = 1, f = 2, g = 3, v = 0, y = 1, _ = 2, x = 1, b = 2, w = 0, S = 1, E = 2, q = 0, T = 1, A = 2, M = 3, C = 4, k = 5, R = 100, L = 101, P = 102, D = 103, O = 104, I = 200, B = 201, F = 202, z = 203, N = 204, U = 205, V = 206, G = 207, H = 208, j = 209, $ = 210, W = 0, X = 1, Y = 2, J = 3, K = 4, Z = 5, Q = 6, ee = 7, te = 0, ne = 1, ie = 2, re = 0, oe = 1, se = 2, ae = 3, le = 4, ce = 5, he = 300, ue = 301, de = 302, pe = 303, me = 304, fe = 305, ge = 306, ve = 307, ye = 1e3, _e = 1001, xe = 1002, be = 1003, we = 1004, Se = 1004, Ee = 1005, qe = 1005, Te = 1006, Ae = 1007, Me = 1007, Ce = 1008, ke = 1008, Re = 1009, Le = 1010, Pe = 1011, De = 1012, Oe = 1013, Ie = 1014, Be = 1015, Fe = 1016, ze = 1017, Ne = 1018, Ue = 1019, Ve = 1020, Ge = 1021, He = 1022, je = 1023, $e = 1024, We = 1025, Xe = je, Ye = 1026, Je = 1027, Ke = 1028, Ze = 33776, Qe = 33777, et = 33778, tt = 33779, nt = 35840, it = 35841, rt = 35842, ot = 35843, st = 36196, at = 37808, lt = 37809, ct = 37810, ht = 37811, ut = 37812, dt = 37813, pt = 37814, mt = 37815, ft = 37816, gt = 37817, vt = 37818, yt = 37819, _t = 37820, xt = 37821, bt = 2200, wt = 2201, St = 2202, Et = 2300, qt = 2301, Tt = 2302, At = 2400, Mt = 2401, Ct = 2402, kt = 0, Rt = 1, Lt = 2, Pt = 3e3, Dt = 3001, Ot = 3007, It = 3002, Bt = 3003, Ft = 3004, zt = 3005, Nt = 3006, Ut = 3200, Vt = 3201, Gt = 0, Ht = 1, jt = 0, $t = 7680, Wt = 7681, Xt = 7682, Yt = 7683, Jt = 34055, Kt = 34056, Zt = 5386, Qt = 512, en = 513, tn = 514, nn = 515, rn = 516, on = 517, sn = 518, an = 519, ln = [], cn = 0; cn < 256; cn++) ln[cn] = (cn < 16 ? "0" : "") + cn.toString(16);
  var hn = {DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function () {
    var e = 4294967295 * Math.random() | 0, t = 4294967295 * Math.random() | 0, n = 4294967295 * Math.random() | 0, i = 4294967295 * Math.random() | 0;
    return (ln[255 & e] + ln[e >> 8 & 255] + ln[e >> 16 & 255] + ln[e >> 24 & 255] + "-" + ln[255 & t] + ln[t >> 8 & 255] + "-" + ln[t >> 16 & 15 | 64] + ln[t >> 24 & 255] + "-" + ln[63 & n | 128] + ln[n >> 8 & 255] + "-" + ln[n >> 16 & 255] + ln[n >> 24 & 255] + ln[255 & i] + ln[i >> 8 & 255] + ln[i >> 16 & 255] + ln[i >> 24 & 255]).toUpperCase();
  }, clamp: function (e, t, n) {
    return Math.max(t, Math.min(n, e));
  }, euclideanModulo: function (e, t) {
    return (e % t + t) % t;
  }, mapLinear: function (e, t, n, i, r) {
    return i + (e - t) * (r - i) / (n - t);
  }, lerp: function (e, t, n) {
    return (1 - n) * e + n * t;
  }, smoothstep: function (e, t, n) {
    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e);
  }, smootherstep: function (e, t, n) {
    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10);
  }, randInt: function (e, t) {
    return e + Math.floor(Math.random() * (t - e + 1));
  }, randFloat: function (e, t) {
    return e + Math.random() * (t - e);
  }, randFloatSpread: function (e) {
    return e * (0.5 - Math.random());
  }, degToRad: function (e) {
    return e * hn.DEG2RAD;
  }, radToDeg: function (e) {
    return e * hn.RAD2DEG;
  }, isPowerOfTwo: function (e) {
    return 0 == (e & e - 1) && 0 !== e;
  }, ceilPowerOfTwo: function (e) {
    return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
  }, floorPowerOfTwo: function (e) {
    return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
  }};
  function un(e, t) {
    this.x = e || 0, this.y = t || 0;
  }
  function dn(e, t, n, i) {
    this._x = e || 0, this._y = t || 0, this._z = n || 0, this._w = undefined !== i ? i : 1;
  }
  Object.defineProperties(un.prototype, {width: {get: function () {
    return this.x;
  }, set: function (e) {
    this.x = e;
  }}, height: {get: function () {
    return this.y;
  }, set: function (e) {
    this.y = e;
  }}}), Object.assign(un.prototype, {isVector2: true, set: function (e, t) {
    return this.x = e, this.y = t, this;
  }, setScalar: function (e) {
    return this.x = e, this.y = e, this;
  }, setX: function (e) {
    return this.x = e, this;
  }, setY: function (e) {
    return this.y = e, this;
  }, setComponent: function (e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }, getComponent: function (e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }, clone: function () {
    return new this.constructor(this.x, this.y);
  }, copy: function (e) {
    return this.x = e.x, this.y = e.y, this;
  }, add: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);
  }, addScalar: function (e) {
    return this.x += e, this.y += e, this;
  }, addVectors: function (e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this;
  }, addScaledVector: function (e, t) {
    return this.x += e.x * t, this.y += e.y * t, this;
  }, sub: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);
  }, subScalar: function (e) {
    return this.x -= e, this.y -= e, this;
  }, subVectors: function (e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this;
  }, multiply: function (e) {
    return this.x *= e.x, this.y *= e.y, this;
  }, multiplyScalar: function (e) {
    return this.x *= e, this.y *= e, this;
  }, divide: function (e) {
    return this.x /= e.x, this.y /= e.y, this;
  }, divideScalar: function (e) {
    return this.multiplyScalar(1 / e);
  }, applyMatrix3: function (e) {
    var t = this.x, n = this.y, i = e.elements;
    return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
  }, min: function (e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
  }, max: function (e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
  }, clamp: function (e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
  }, clampScalar: function (e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
  }, clampLength: function (e, t) {
    var n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
  }, floor: function () {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
  }, ceil: function () {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
  }, round: function () {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
  }, roundToZero: function () {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
  }, negate: function () {
    return this.x = -this.x, this.y = -this.y, this;
  }, dot: function (e) {
    return this.x * e.x + this.y * e.y;
  }, cross: function (e) {
    return this.x * e.y - this.y * e.x;
  }, lengthSq: function () {
    return this.x * this.x + this.y * this.y;
  }, length: function () {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }, manhattanLength: function () {
    return Math.abs(this.x) + Math.abs(this.y);
  }, normalize: function () {
    return this.divideScalar(this.length() || 1);
  }, angle: function () {
    var e = Math.atan2(this.y, this.x);
    return e < 0 && (e += 2 * Math.PI), e;
  }, distanceTo: function (e) {
    return Math.sqrt(this.distanceToSquared(e));
  }, distanceToSquared: function (e) {
    var t = this.x - e.x, n = this.y - e.y;
    return t * t + n * n;
  }, manhattanDistanceTo: function (e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }, setLength: function (e) {
    return this.normalize().multiplyScalar(e);
  }, lerp: function (e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
  }, lerpVectors: function (e, t, n) {
    return this.subVectors(t, e).multiplyScalar(n).add(e);
  }, equals: function (e) {
    return e.x === this.x && e.y === this.y;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.x = e[t], this.y = e[t + 1], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e;
  }, fromBufferAttribute: function (e, t, n) {
    return undefined !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this;
  }, rotateAround: function (e, t) {
    var n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, o = this.y - e.y;
    return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this;
  }}), Object.assign(dn, {slerp: function (e, t, n, i) {
    return n.copy(e).slerp(t, i);
  }, slerpFlat: function (e, t, n, i, r, o, s) {
    var a = n[i + 0], l = n[i + 1], c = n[i + 2], h = n[i + 3], u = r[o + 0], d = r[o + 1], p = r[o + 2], m = r[o + 3];
    if (h !== m || a !== u || l !== d || c !== p) {
      var f = 1 - s, g = a * u + l * d + c * p + h * m, v = g >= 0 ? 1 : -1, y = 1 - g * g;
      if (y > Number.EPSILON) {
        var _ = Math.sqrt(y), x = Math.atan2(_, g * v);
        f = Math.sin(f * x) / _, s = Math.sin(s * x) / _;
      }
      var b = s * v;
      if (a = a * f + u * b, l = l * f + d * b, c = c * f + p * b, h = h * f + m * b, f === 1 - s) {
        var w = 1 / Math.sqrt(a * a + l * l + c * c + h * h);
        a *= w, l *= w, c *= w, h *= w;
      }
    }
    e[t] = a, e[t + 1] = l, e[t + 2] = c, e[t + 3] = h;
  }}), Object.defineProperties(dn.prototype, {x: {get: function () {
    return this._x;
  }, set: function (e) {
    this._x = e, this._onChangeCallback();
  }}, y: {get: function () {
    return this._y;
  }, set: function (e) {
    this._y = e, this._onChangeCallback();
  }}, z: {get: function () {
    return this._z;
  }, set: function (e) {
    this._z = e, this._onChangeCallback();
  }}, w: {get: function () {
    return this._w;
  }, set: function (e) {
    this._w = e, this._onChangeCallback();
  }}}), Object.assign(dn.prototype, {isQuaternion: true, set: function (e, t, n, i) {
    return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
  }, clone: function () {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }, copy: function (e) {
    return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
  }, setFromEuler: function (e, t) {
    if (!e || !e.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
    var n = e._x, i = e._y, r = e._z, o = e.order, s = Math.cos, a = Math.sin, l = s(n / 2), c = s(i / 2), h = s(r / 2), u = a(n / 2), d = a(i / 2), p = a(r / 2);
    return "XYZ" === o ? (this._x = u * c * h + l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h - u * d * p) : "YXZ" === o ? (this._x = u * c * h + l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h + u * d * p) : "ZXY" === o ? (this._x = u * c * h - l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h - u * d * p) : "ZYX" === o ? (this._x = u * c * h - l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h + u * d * p) : "YZX" === o ? (this._x = u * c * h + l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h - u * d * p) : "XZY" === o && (this._x = u * c * h - l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h + u * d * p), false !== t && this._onChangeCallback(), this;
  }, setFromAxisAngle: function (e, t) {
    var n = t / 2, i = Math.sin(n);
    return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
  }, setFromRotationMatrix: function (e) {
    var t, n = e.elements, i = n[0], r = n[4], o = n[8], s = n[1], a = n[5], l = n[9], c = n[2], h = n[6], u = n[10], d = i + a + u;
    return d > 0 ? (t = 0.5 / Math.sqrt(d + 1), this._w = 0.25 / t, this._x = (h - l) * t, this._y = (o - c) * t, this._z = (s - r) * t) : i > a && i > u ? (t = 2 * Math.sqrt(1 + i - a - u), this._w = (h - l) / t, this._x = 0.25 * t, this._y = (r + s) / t, this._z = (o + c) / t) : a > u ? (t = 2 * Math.sqrt(1 + a - i - u), this._w = (o - c) / t, this._x = (r + s) / t, this._y = 0.25 * t, this._z = (l + h) / t) : (t = 2 * Math.sqrt(1 + u - i - a), this._w = (s - r) / t, this._x = (o + c) / t, this._y = (l + h) / t, this._z = 0.25 * t), this._onChangeCallback(), this;
  }, setFromUnitVectors: function (e, t) {
    var n = e.dot(t) + 1;
    return n < 0.000001 ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
  }, angleTo: function (e) {
    return 2 * Math.acos(Math.abs(hn.clamp(this.dot(e), -1, 1)));
  }, rotateTowards: function (e, t) {
    var n = this.angleTo(e);
    if (0 === n) return this;
    var i = Math.min(1, t / n);
    return this.slerp(e, i), this;
  }, inverse: function () {
    return this.conjugate();
  }, conjugate: function () {
    return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
  }, dot: function (e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }, lengthSq: function () {
    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
  }, length: function () {
    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
  }, normalize: function () {
    var e = this.length();
    return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
  }, multiply: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
  }, premultiply: function (e) {
    return this.multiplyQuaternions(e, this);
  }, multiplyQuaternions: function (e, t) {
    var n = e._x, i = e._y, r = e._z, o = e._w, s = t._x, a = t._y, l = t._z, c = t._w;
    return this._x = n * c + o * s + i * l - r * a, this._y = i * c + o * a + r * s - n * l, this._z = r * c + o * l + n * a - i * s, this._w = o * c - n * s - i * a - r * l, this._onChangeCallback(), this;
  }, slerp: function (e, t) {
    if (0 === t) return this;
    if (1 === t) return this.copy(e);
    var n = this._x, i = this._y, r = this._z, o = this._w, s = o * e._w + n * e._x + i * e._y + r * e._z;
    if (s < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, s = -s) : this.copy(e), s >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
    var a = 1 - s * s;
    if (a <= Number.EPSILON) {
      var l = 1 - t;
      return this._w = l * o + t * this._w, this._x = l * n + t * this._x, this._y = l * i + t * this._y, this._z = l * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
    }
    var c = Math.sqrt(a), h = Math.atan2(c, s), u = Math.sin((1 - t) * h) / c, d = Math.sin(t * h) / c;
    return this._w = o * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
  }, equals: function (e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
  }, _onChange: function (e) {
    return this._onChangeCallback = e, this;
  }, _onChangeCallback: function () {}});
  var pn = new fn, mn = new dn;
  function fn(e, t, n) {
    this.x = e || 0, this.y = t || 0, this.z = n || 0;
  }
  Object.assign(fn.prototype, {isVector3: true, set: function (e, t, n) {
    return this.x = e, this.y = t, this.z = n, this;
  }, setScalar: function (e) {
    return this.x = e, this.y = e, this.z = e, this;
  }, setX: function (e) {
    return this.x = e, this;
  }, setY: function (e) {
    return this.y = e, this;
  }, setZ: function (e) {
    return this.z = e, this;
  }, setComponent: function (e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }, getComponent: function (e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }, clone: function () {
    return new this.constructor(this.x, this.y, this.z);
  }, copy: function (e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this;
  }, add: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);
  }, addScalar: function (e) {
    return this.x += e, this.y += e, this.z += e, this;
  }, addVectors: function (e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
  }, addScaledVector: function (e, t) {
    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
  }, sub: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);
  }, subScalar: function (e) {
    return this.x -= e, this.y -= e, this.z -= e, this;
  }, subVectors: function (e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
  }, multiply: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);
  }, multiplyScalar: function (e) {
    return this.x *= e, this.y *= e, this.z *= e, this;
  }, multiplyVectors: function (e, t) {
    return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
  }, applyEuler: function (e) {
    return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(mn.setFromEuler(e));
  }, applyAxisAngle: function (e, t) {
    return this.applyQuaternion(mn.setFromAxisAngle(e, t));
  }, applyMatrix3: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.elements;
    return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
  }, applyMatrix4: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.elements, o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
    return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this;
  }, applyQuaternion: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.x, o = e.y, s = e.z, a = e.w, l = a * t + o * i - s * n, c = a * n + s * t - r * i, h = a * i + r * n - o * t, u = -r * t - o * n - s * i;
    return this.x = l * a + u * -r + c * -s - h * -o, this.y = c * a + u * -o + h * -r - l * -s, this.z = h * a + u * -s + l * -o - c * -r, this;
  }, project: function (e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
  }, unproject: function (e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
  }, transformDirection: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.elements;
    return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
  }, divide: function (e) {
    return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
  }, divideScalar: function (e) {
    return this.multiplyScalar(1 / e);
  }, min: function (e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
  }, max: function (e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
  }, clamp: function (e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
  }, clampScalar: function (e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
  }, clampLength: function (e, t) {
    var n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
  }, floor: function () {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
  }, ceil: function () {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
  }, round: function () {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
  }, roundToZero: function () {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
  }, negate: function () {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
  }, dot: function (e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }, lengthSq: function () {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }, length: function () {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }, manhattanLength: function () {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }, normalize: function () {
    return this.divideScalar(this.length() || 1);
  }, setLength: function (e) {
    return this.normalize().multiplyScalar(e);
  }, lerp: function (e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
  }, lerpVectors: function (e, t, n) {
    return this.subVectors(t, e).multiplyScalar(n).add(e);
  }, cross: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e);
  }, crossVectors: function (e, t) {
    var n = e.x, i = e.y, r = e.z, o = t.x, s = t.y, a = t.z;
    return this.x = i * a - r * s, this.y = r * o - n * a, this.z = n * s - i * o, this;
  }, projectOnVector: function (e) {
    var t = e.dot(this) / e.lengthSq();
    return this.copy(e).multiplyScalar(t);
  }, projectOnPlane: function (e) {
    return pn.copy(this).projectOnVector(e), this.sub(pn);
  }, reflect: function (e) {
    return this.sub(pn.copy(e).multiplyScalar(2 * this.dot(e)));
  }, angleTo: function (e) {
    var t = this.dot(e) / Math.sqrt(this.lengthSq() * e.lengthSq());
    return Math.acos(hn.clamp(t, -1, 1));
  }, distanceTo: function (e) {
    return Math.sqrt(this.distanceToSquared(e));
  }, distanceToSquared: function (e) {
    var t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
    return t * t + n * n + i * i;
  }, manhattanDistanceTo: function (e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
  }, setFromSpherical: function (e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }, setFromSphericalCoords: function (e, t, n) {
    var i = Math.sin(t) * e;
    return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
  }, setFromCylindrical: function (e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }, setFromCylindricalCoords: function (e, t, n) {
    return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
  }, setFromMatrixPosition: function (e) {
    var t = e.elements;
    return this.x = t[12], this.y = t[13], this.z = t[14], this;
  }, setFromMatrixScale: function (e) {
    var t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
    return this.x = t, this.y = n, this.z = i, this;
  }, setFromMatrixColumn: function (e, t) {
    return this.fromArray(e.elements, 4 * t);
  }, equals: function (e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
  }, fromBufferAttribute: function (e, t, n) {
    return undefined !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
  }});
  var gn, vn = new fn;
  function yn() {
    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
  }
  Object.assign(yn.prototype, {isMatrix3: true, set: function (e, t, n, i, r, o, s, a, l) {
    var c = this.elements;
    return c[0] = e, c[1] = i, c[2] = s, c[3] = t, c[4] = r, c[5] = a, c[6] = n, c[7] = o, c[8] = l, this;
  }, identity: function () {
    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
  }, clone: function () {
    return (new this.constructor).fromArray(this.elements);
  }, copy: function (e) {
    var t = this.elements, n = e.elements;
    return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
  }, setFromMatrix4: function (e) {
    var t = e.elements;
    return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
  }, applyToBufferAttribute: function (e) {
    for (var t = 0, n = e.count; t < n; t++) vn.x = e.getX(t), vn.y = e.getY(t), vn.z = e.getZ(t), vn.applyMatrix3(this), e.setXYZ(t, vn.x, vn.y, vn.z);
    return e;
  }, multiply: function (e) {
    return this.multiplyMatrices(this, e);
  }, premultiply: function (e) {
    return this.multiplyMatrices(e, this);
  }, multiplyMatrices: function (e, t) {
    var n = e.elements, i = t.elements, r = this.elements, o = n[0], s = n[3], a = n[6], l = n[1], c = n[4], h = n[7], u = n[2], d = n[5], p = n[8], m = i[0], f = i[3], g = i[6], v = i[1], y = i[4], _ = i[7], x = i[2], b = i[5], w = i[8];
    return r[0] = o * m + s * v + a * x, r[3] = o * f + s * y + a * b, r[6] = o * g + s * _ + a * w, r[1] = l * m + c * v + h * x, r[4] = l * f + c * y + h * b, r[7] = l * g + c * _ + h * w, r[2] = u * m + d * v + p * x, r[5] = u * f + d * y + p * b, r[8] = u * g + d * _ + p * w, this;
  }, multiplyScalar: function (e) {
    var t = this.elements;
    return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
  }, determinant: function () {
    var e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], s = e[5], a = e[6], l = e[7], c = e[8];
    return t * o * c - t * s * l - n * r * c + n * s * a + i * r * l - i * o * a;
  }, getInverse: function (e, t) {
    e && e.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
    var n = e.elements, i = this.elements, r = n[0], o = n[1], s = n[2], a = n[3], l = n[4], c = n[5], h = n[6], u = n[7], d = n[8], p = d * l - c * u, m = c * h - d * a, f = u * a - l * h, g = r * p + o * m + s * f;
    if (0 === g) {
      var v = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
      if (true === t) throw new Error(v);
      return console.warn(v), this.identity();
    }
    var y = 1 / g;
    return i[0] = p * y, i[1] = (s * u - d * o) * y, i[2] = (c * o - s * l) * y, i[3] = m * y, i[4] = (d * r - s * h) * y, i[5] = (s * a - c * r) * y, i[6] = f * y, i[7] = (o * h - u * r) * y, i[8] = (l * r - o * a) * y, this;
  }, transpose: function () {
    var e, t = this.elements;
    return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
  }, getNormalMatrix: function (e) {
    return this.setFromMatrix4(e).getInverse(this).transpose();
  }, transposeIntoArray: function (e) {
    var t = this.elements;
    return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
  }, setUvTransform: function (e, t, n, i, r, o, s) {
    var a = Math.cos(r), l = Math.sin(r);
    this.set(n * a, n * l, -n * (a * o + l * s) + o + e, -i * l, i * a, -i * (-l * o + a * s) + s + t, 0, 0, 1);
  }, scale: function (e, t) {
    var n = this.elements;
    return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this;
  }, rotate: function (e) {
    var t = Math.cos(e), n = Math.sin(e), i = this.elements, r = i[0], o = i[3], s = i[6], a = i[1], l = i[4], c = i[7];
    return i[0] = t * r + n * a, i[3] = t * o + n * l, i[6] = t * s + n * c, i[1] = -n * r + t * a, i[4] = -n * o + t * l, i[7] = -n * s + t * c, this;
  }, translate: function (e, t) {
    var n = this.elements;
    return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this;
  }, equals: function (e) {
    for (var t = this.elements, n = e.elements, i = 0; i < 9; i++) if (t[i] !== n[i]) return false;
    return true;
  }, fromArray: function (e, t) {
    undefined === t && (t = 0);
    for (var n = 0; n < 9; n++) this.elements[n] = e[n + t];
    return this;
  }, toArray: function (e, t) {
    undefined === e && (e = []), undefined === t && (t = 0);
    var n = this.elements;
    return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
  }});
  var _n = {getDataURL: function (e) {
    var t;
    if ("undefined" == typeof HTMLCanvasElement) return e.src;
    if (e instanceof HTMLCanvasElement) t = e; else {
      undefined === gn && (gn = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), gn.width = e.width, gn.height = e.height;
      var n = gn.getContext("2d");
      e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = gn;
    }
    return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", 0.6) : t.toDataURL("image/png");
  }}, xn = 0;
  function bn(e, t, n, i, r, o, s, a, l, c) {
    Object.defineProperty(this, "id", {value: xn++}), this.uuid = hn.generateUUID(), this.name = "", this.image = undefined !== e ? e : bn.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = undefined !== t ? t : bn.DEFAULT_MAPPING, this.wrapS = undefined !== n ? n : _e, this.wrapT = undefined !== i ? i : _e, this.magFilter = undefined !== r ? r : Te, this.minFilter = undefined !== o ? o : Ce, this.anisotropy = undefined !== l ? l : 1, this.format = undefined !== s ? s : je, this.type = undefined !== a ? a : Re, this.offset = new un(0, 0), this.repeat = new un(1, 1), this.center = new un(0, 0), this.rotation = 0, this.matrixAutoUpdate = true, this.matrix = new yn, this.generateMipmaps = true, this.premultiplyAlpha = false, this.flipY = true, this.unpackAlignment = 4, this.encoding = undefined !== c ? c : Pt, this.version = 0, this.onUpdate = null;
  }
  function wn(e, t, n, i) {
    this.x = e || 0, this.y = t || 0, this.z = n || 0, this.w = undefined !== i ? i : 1;
  }
  function Sn(e, t, n) {
    this.width = e, this.height = t, this.scissor = new wn(0, 0, e, t), this.scissorTest = false, this.viewport = new wn(0, 0, e, t), n = n || {}, this.texture = new bn(undefined, undefined, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.image = {}, this.texture.image.width = e, this.texture.image.height = t, this.texture.generateMipmaps = undefined !== n.generateMipmaps && n.generateMipmaps, this.texture.minFilter = undefined !== n.minFilter ? n.minFilter : Te, this.depthBuffer = undefined === n.depthBuffer || n.depthBuffer, this.stencilBuffer = undefined === n.stencilBuffer || n.stencilBuffer, this.depthTexture = undefined !== n.depthTexture ? n.depthTexture : null;
  }
  function En(e, t, n) {
    Sn.call(this, e, t, n), this.samples = 4;
  }
  bn.DEFAULT_IMAGE = undefined, bn.DEFAULT_MAPPING = he, bn.prototype = Object.assign(Object.create(i.prototype), {constructor: bn, isTexture: true, updateMatrix: function () {
    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this;
  }, toJSON: function (e) {
    var t = undefined === e || "string" == typeof e;
    if (!t && undefined !== e.textures[this.uuid]) return e.textures[this.uuid];
    var n = {metadata: {version: 4.5, type: "Texture", generator: "Texture.toJSON"}, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, type: this.type, encoding: this.encoding, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY, premultiplyAlpha: this.premultiplyAlpha, unpackAlignment: this.unpackAlignment};
    if (undefined !== this.image) {
      var i = this.image;
      if (undefined === i.uuid && (i.uuid = hn.generateUUID()), !t && undefined === e.images[i.uuid]) {
        var r;
        if (Array.isArray(i)) {
          r = [];
          for (var o = 0, s = i.length; o < s; o++) r.push(_n.getDataURL(i[o]));
        } else r = _n.getDataURL(i);
        e.images[i.uuid] = {uuid: i.uuid, url: r};
      }
      n.image = i.uuid;
    }
    return t || (e.textures[this.uuid] = n), n;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }, transformUv: function (e) {
    if (this.mapping !== he) return e;
    if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS) {
      case ye:
        e.x = e.x - Math.floor(e.x);
        break;
      case _e:
        e.x = e.x < 0 ? 0 : 1;
        break;
      case xe:
        1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
    }
    if (e.y < 0 || e.y > 1) switch (this.wrapT) {
      case ye:
        e.y = e.y - Math.floor(e.y);
        break;
      case _e:
        e.y = e.y < 0 ? 0 : 1;
        break;
      case xe:
        1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
    }
    return this.flipY && (e.y = 1 - e.y), e;
  }}), Object.defineProperty(bn.prototype, "needsUpdate", {set: function (e) {
    true === e && this.version++;
  }}), Object.defineProperties(wn.prototype, {width: {get: function () {
    return this.z;
  }, set: function (e) {
    this.z = e;
  }}, height: {get: function () {
    return this.w;
  }, set: function (e) {
    this.w = e;
  }}}), Object.assign(wn.prototype, {isVector4: true, set: function (e, t, n, i) {
    return this.x = e, this.y = t, this.z = n, this.w = i, this;
  }, setScalar: function (e) {
    return this.x = e, this.y = e, this.z = e, this.w = e, this;
  }, setX: function (e) {
    return this.x = e, this;
  }, setY: function (e) {
    return this.y = e, this;
  }, setZ: function (e) {
    return this.z = e, this;
  }, setW: function (e) {
    return this.w = e, this;
  }, setComponent: function (e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      case 3:
        this.w = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }, getComponent: function (e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }, clone: function () {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }, copy: function (e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this.w = undefined !== e.w ? e.w : 1, this;
  }, add: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);
  }, addScalar: function (e) {
    return this.x += e, this.y += e, this.z += e, this.w += e, this;
  }, addVectors: function (e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
  }, addScaledVector: function (e, t) {
    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
  }, sub: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);
  }, subScalar: function (e) {
    return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
  }, subVectors: function (e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
  }, multiplyScalar: function (e) {
    return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
  }, applyMatrix4: function (e) {
    var t = this.x, n = this.y, i = this.z, r = this.w, o = e.elements;
    return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this;
  }, divideScalar: function (e) {
    return this.multiplyScalar(1 / e);
  }, setAxisAngleFromQuaternion: function (e) {
    this.w = 2 * Math.acos(e.w);
    var t = Math.sqrt(1 - e.w * e.w);
    return t < 0.0001 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
  }, setAxisAngleFromRotationMatrix: function (e) {
    var t, n, i, r, o = e.elements, s = o[0], a = o[4], l = o[8], c = o[1], h = o[5], u = o[9], d = o[2], p = o[6], m = o[10];
    if (Math.abs(a - c) < 0.01 && Math.abs(l - d) < 0.01 && Math.abs(u - p) < 0.01) {
      if (Math.abs(a + c) < 0.1 && Math.abs(l + d) < 0.1 && Math.abs(u + p) < 0.1 && Math.abs(s + h + m - 3) < 0.1) return this.set(1, 0, 0, 0), this;
      t = Math.PI;
      var f = (s + 1) / 2, g = (h + 1) / 2, v = (m + 1) / 2, y = (a + c) / 4, _ = (l + d) / 4, x = (u + p) / 4;
      return f > g && f > v ? f < 0.01 ? (n = 0, i = 0.707106781, r = 0.707106781) : (i = y / (n = Math.sqrt(f)), r = _ / n) : g > v ? g < 0.01 ? (n = 0.707106781, i = 0, r = 0.707106781) : (n = y / (i = Math.sqrt(g)), r = x / i) : v < 0.01 ? (n = 0.707106781, i = 0.707106781, r = 0) : (n = _ / (r = Math.sqrt(v)), i = x / r), this.set(n, i, r, t), this;
    }
    var b = Math.sqrt((p - u) * (p - u) + (l - d) * (l - d) + (c - a) * (c - a));
    return Math.abs(b) < 0.001 && (b = 1), this.x = (p - u) / b, this.y = (l - d) / b, this.z = (c - a) / b, this.w = Math.acos((s + h + m - 1) / 2), this;
  }, min: function (e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
  }, max: function (e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
  }, clamp: function (e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
  }, clampScalar: function (e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
  }, clampLength: function (e, t) {
    var n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
  }, floor: function () {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
  }, ceil: function () {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
  }, round: function () {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
  }, roundToZero: function () {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
  }, negate: function () {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
  }, dot: function (e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }, lengthSq: function () {
    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
  }, length: function () {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
  }, manhattanLength: function () {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
  }, normalize: function () {
    return this.divideScalar(this.length() || 1);
  }, setLength: function (e) {
    return this.normalize().multiplyScalar(e);
  }, lerp: function (e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
  }, lerpVectors: function (e, t, n) {
    return this.subVectors(t, e).multiplyScalar(n).add(e);
  }, equals: function (e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
  }, fromBufferAttribute: function (e, t, n) {
    return undefined !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
  }}), Sn.prototype = Object.assign(Object.create(i.prototype), {constructor: Sn, isWebGLRenderTarget: true, setSize: function (e, t) {
    this.width === e && this.height === t || (this.width = e, this.height = t, this.texture.image.width = e, this.texture.image.height = t, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.width = e.width, this.height = e.height, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }}), En.prototype = Object.assign(Object.create(Sn.prototype), {constructor: En, isWebGLMultisampleRenderTarget: true, copy: function (e) {
    return Sn.prototype.copy.call(this, e), this.samples = e.samples, this;
  }});
  var qn = new fn, Tn = new Ln, An = new fn(0, 0, 0), Mn = new fn(1, 1, 1), Cn = new fn, kn = new fn, Rn = new fn;
  function Ln() {
    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
  }
  Object.assign(Ln.prototype, {isMatrix4: true, set: function (e, t, n, i, r, o, s, a, l, c, h, u, d, p, m, f) {
    var g = this.elements;
    return g[0] = e, g[4] = t, g[8] = n, g[12] = i, g[1] = r, g[5] = o, g[9] = s, g[13] = a, g[2] = l, g[6] = c, g[10] = h, g[14] = u, g[3] = d, g[7] = p, g[11] = m, g[15] = f, this;
  }, identity: function () {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }, clone: function () {
    return (new Ln).fromArray(this.elements);
  }, copy: function (e) {
    var t = this.elements, n = e.elements;
    return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
  }, copyPosition: function (e) {
    var t = this.elements, n = e.elements;
    return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
  }, extractBasis: function (e, t, n) {
    return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
  }, makeBasis: function (e, t, n) {
    return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
  }, extractRotation: function (e) {
    var t = this.elements, n = e.elements, i = 1 / qn.setFromMatrixColumn(e, 0).length(), r = 1 / qn.setFromMatrixColumn(e, 1).length(), o = 1 / qn.setFromMatrixColumn(e, 2).length();
    return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
  }, makeRotationFromEuler: function (e) {
    e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
    var t = this.elements, n = e.x, i = e.y, r = e.z, o = Math.cos(n), s = Math.sin(n), a = Math.cos(i), l = Math.sin(i), c = Math.cos(r), h = Math.sin(r);
    if ("XYZ" === e.order) {
      var u = o * c, d = o * h, p = s * c, m = s * h;
      t[0] = a * c, t[4] = -a * h, t[8] = l, t[1] = d + p * l, t[5] = u - m * l, t[9] = -s * a, t[2] = m - u * l, t[6] = p + d * l, t[10] = o * a;
    } else if ("YXZ" === e.order) {
      var f = a * c, g = a * h, v = l * c, y = l * h;
      t[0] = f + y * s, t[4] = v * s - g, t[8] = o * l, t[1] = o * h, t[5] = o * c, t[9] = -s, t[2] = g * s - v, t[6] = y + f * s, t[10] = o * a;
    } else if ("ZXY" === e.order) {
      f = a * c, g = a * h, v = l * c, y = l * h;
      t[0] = f - y * s, t[4] = -o * h, t[8] = v + g * s, t[1] = g + v * s, t[5] = o * c, t[9] = y - f * s, t[2] = -o * l, t[6] = s, t[10] = o * a;
    } else if ("ZYX" === e.order) {
      u = o * c, d = o * h, p = s * c, m = s * h;
      t[0] = a * c, t[4] = p * l - d, t[8] = u * l + m, t[1] = a * h, t[5] = m * l + u, t[9] = d * l - p, t[2] = -l, t[6] = s * a, t[10] = o * a;
    } else if ("YZX" === e.order) {
      var _ = o * a, x = o * l, b = s * a, w = s * l;
      t[0] = a * c, t[4] = w - _ * h, t[8] = b * h + x, t[1] = h, t[5] = o * c, t[9] = -s * c, t[2] = -l * c, t[6] = x * h + b, t[10] = _ - w * h;
    } else if ("XZY" === e.order) {
      _ = o * a, x = o * l, b = s * a, w = s * l;
      t[0] = a * c, t[4] = -h, t[8] = l * c, t[1] = _ * h + w, t[5] = o * c, t[9] = x * h - b, t[2] = b * h - x, t[6] = s * c, t[10] = w * h + _;
    }
    return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
  }, makeRotationFromQuaternion: function (e) {
    return this.compose(An, e, Mn);
  }, lookAt: function (e, t, n) {
    var i = this.elements;
    return Rn.subVectors(e, t), 0 === Rn.lengthSq() && (Rn.z = 1), Rn.normalize(), Cn.crossVectors(n, Rn), 0 === Cn.lengthSq() && (1 === Math.abs(n.z) ? Rn.x += 0.0001 : Rn.z += 0.0001, Rn.normalize(), Cn.crossVectors(n, Rn)), Cn.normalize(), kn.crossVectors(Rn, Cn), i[0] = Cn.x, i[4] = kn.x, i[8] = Rn.x, i[1] = Cn.y, i[5] = kn.y, i[9] = Rn.y, i[2] = Cn.z, i[6] = kn.z, i[10] = Rn.z, this;
  }, multiply: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
  }, premultiply: function (e) {
    return this.multiplyMatrices(e, this);
  }, multiplyMatrices: function (e, t) {
    var n = e.elements, i = t.elements, r = this.elements, o = n[0], s = n[4], a = n[8], l = n[12], c = n[1], h = n[5], u = n[9], d = n[13], p = n[2], m = n[6], f = n[10], g = n[14], v = n[3], y = n[7], _ = n[11], x = n[15], b = i[0], w = i[4], S = i[8], E = i[12], q = i[1], T = i[5], A = i[9], M = i[13], C = i[2], k = i[6], R = i[10], L = i[14], P = i[3], D = i[7], O = i[11], I = i[15];
    return r[0] = o * b + s * q + a * C + l * P, r[4] = o * w + s * T + a * k + l * D, r[8] = o * S + s * A + a * R + l * O, r[12] = o * E + s * M + a * L + l * I, r[1] = c * b + h * q + u * C + d * P, r[5] = c * w + h * T + u * k + d * D, r[9] = c * S + h * A + u * R + d * O, r[13] = c * E + h * M + u * L + d * I, r[2] = p * b + m * q + f * C + g * P, r[6] = p * w + m * T + f * k + g * D, r[10] = p * S + m * A + f * R + g * O, r[14] = p * E + m * M + f * L + g * I, r[3] = v * b + y * q + _ * C + x * P, r[7] = v * w + y * T + _ * k + x * D, r[11] = v * S + y * A + _ * R + x * O, r[15] = v * E + y * M + _ * L + x * I, this;
  }, multiplyScalar: function (e) {
    var t = this.elements;
    return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
  }, applyToBufferAttribute: function (e) {
    for (var t = 0, n = e.count; t < n; t++) qn.x = e.getX(t), qn.y = e.getY(t), qn.z = e.getZ(t), qn.applyMatrix4(this), e.setXYZ(t, qn.x, qn.y, qn.z);
    return e;
  }, determinant: function () {
    var e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], o = e[1], s = e[5], a = e[9], l = e[13], c = e[2], h = e[6], u = e[10], d = e[14];
    return e[3] * (+r * a * h - i * l * h - r * s * u + n * l * u + i * s * d - n * a * d) + e[7] * (+t * a * d - t * l * u + r * o * u - i * o * d + i * l * c - r * a * c) + e[11] * (+t * l * h - t * s * d - r * o * h + n * o * d + r * s * c - n * l * c) + e[15] * (-i * s * c - t * a * h + t * s * u + i * o * h - n * o * u + n * a * c);
  }, transpose: function () {
    var e, t = this.elements;
    return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this;
  }, setPosition: function (e, t, n) {
    var i = this.elements;
    return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
  }, getInverse: function (e, t) {
    var n = this.elements, i = e.elements, r = i[0], o = i[1], s = i[2], a = i[3], l = i[4], c = i[5], h = i[6], u = i[7], d = i[8], p = i[9], m = i[10], f = i[11], g = i[12], v = i[13], y = i[14], _ = i[15], x = p * y * u - v * m * u + v * h * f - c * y * f - p * h * _ + c * m * _, b = g * m * u - d * y * u - g * h * f + l * y * f + d * h * _ - l * m * _, w = d * v * u - g * p * u + g * c * f - l * v * f - d * c * _ + l * p * _, S = g * p * h - d * v * h - g * c * m + l * v * m + d * c * y - l * p * y, E = r * x + o * b + s * w + a * S;
    if (0 === E) {
      var q = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
      if (true === t) throw new Error(q);
      return console.warn(q), this.identity();
    }
    var T = 1 / E;
    return n[0] = x * T, n[1] = (v * m * a - p * y * a - v * s * f + o * y * f + p * s * _ - o * m * _) * T, n[2] = (c * y * a - v * h * a + v * s * u - o * y * u - c * s * _ + o * h * _) * T, n[3] = (p * h * a - c * m * a - p * s * u + o * m * u + c * s * f - o * h * f) * T, n[4] = b * T, n[5] = (d * y * a - g * m * a + g * s * f - r * y * f - d * s * _ + r * m * _) * T, n[6] = (g * h * a - l * y * a - g * s * u + r * y * u + l * s * _ - r * h * _) * T, n[7] = (l * m * a - d * h * a + d * s * u - r * m * u - l * s * f + r * h * f) * T, n[8] = w * T, n[9] = (g * p * a - d * v * a - g * o * f + r * v * f + d * o * _ - r * p * _) * T, n[10] = (l * v * a - g * c * a + g * o * u - r * v * u - l * o * _ + r * c * _) * T, n[11] = (d * c * a - l * p * a - d * o * u + r * p * u + l * o * f - r * c * f) * T, n[12] = S * T, n[13] = (d * v * s - g * p * s + g * o * m - r * v * m - d * o * y + r * p * y) * T, n[14] = (g * c * s - l * v * s - g * o * h + r * v * h + l * o * y - r * c * y) * T, n[15] = (l * p * s - d * c * s + d * o * h - r * p * h - l * o * m + r * c * m) * T, this;
  }, scale: function (e) {
    var t = this.elements, n = e.x, i = e.y, r = e.z;
    return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
  }, getMaxScaleOnAxis: function () {
    var e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(t, n, i));
  }, makeTranslation: function (e, t, n) {
    return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
  }, makeRotationX: function (e) {
    var t = Math.cos(e), n = Math.sin(e);
    return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
  }, makeRotationY: function (e) {
    var t = Math.cos(e), n = Math.sin(e);
    return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
  }, makeRotationZ: function (e) {
    var t = Math.cos(e), n = Math.sin(e);
    return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }, makeRotationAxis: function (e, t) {
    var n = Math.cos(t), i = Math.sin(t), r = 1 - n, o = e.x, s = e.y, a = e.z, l = r * o, c = r * s;
    return this.set(l * o + n, l * s - i * a, l * a + i * s, 0, l * s + i * a, c * s + n, c * a - i * o, 0, l * a - i * s, c * a + i * o, r * a * a + n, 0, 0, 0, 0, 1), this;
  }, makeScale: function (e, t, n) {
    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
  }, makeShear: function (e, t, n) {
    return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1), this;
  }, compose: function (e, t, n) {
    var i = this.elements, r = t._x, o = t._y, s = t._z, a = t._w, l = r + r, c = o + o, h = s + s, u = r * l, d = r * c, p = r * h, m = o * c, f = o * h, g = s * h, v = a * l, y = a * c, _ = a * h, x = n.x, b = n.y, w = n.z;
    return i[0] = (1 - (m + g)) * x, i[1] = (d + _) * x, i[2] = (p - y) * x, i[3] = 0, i[4] = (d - _) * b, i[5] = (1 - (u + g)) * b, i[6] = (f + v) * b, i[7] = 0, i[8] = (p + y) * w, i[9] = (f - v) * w, i[10] = (1 - (u + m)) * w, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
  }, decompose: function (e, t, n) {
    var i = this.elements, r = qn.set(i[0], i[1], i[2]).length(), o = qn.set(i[4], i[5], i[6]).length(), s = qn.set(i[8], i[9], i[10]).length();
    this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], Tn.copy(this);
    var a = 1 / r, l = 1 / o, c = 1 / s;
    return Tn.elements[0] *= a, Tn.elements[1] *= a, Tn.elements[2] *= a, Tn.elements[4] *= l, Tn.elements[5] *= l, Tn.elements[6] *= l, Tn.elements[8] *= c, Tn.elements[9] *= c, Tn.elements[10] *= c, t.setFromRotationMatrix(Tn), n.x = r, n.y = o, n.z = s, this;
  }, makePerspective: function (e, t, n, i, r, o) {
    undefined === o && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
    var s = this.elements, a = 2 * r / (t - e), l = 2 * r / (n - i), c = (t + e) / (t - e), h = (n + i) / (n - i), u = -(o + r) / (o - r), d = -2 * o * r / (o - r);
    return s[0] = a, s[4] = 0, s[8] = c, s[12] = 0, s[1] = 0, s[5] = l, s[9] = h, s[13] = 0, s[2] = 0, s[6] = 0, s[10] = u, s[14] = d, s[3] = 0, s[7] = 0, s[11] = -1, s[15] = 0, this;
  }, makeOrthographic: function (e, t, n, i, r, o) {
    var s = this.elements, a = 1 / (t - e), l = 1 / (n - i), c = 1 / (o - r), h = (t + e) * a, u = (n + i) * l, d = (o + r) * c;
    return s[0] = 2 * a, s[4] = 0, s[8] = 0, s[12] = -h, s[1] = 0, s[5] = 2 * l, s[9] = 0, s[13] = -u, s[2] = 0, s[6] = 0, s[10] = -2 * c, s[14] = -d, s[3] = 0, s[7] = 0, s[11] = 0, s[15] = 1, this;
  }, equals: function (e) {
    for (var t = this.elements, n = e.elements, i = 0; i < 16; i++) if (t[i] !== n[i]) return false;
    return true;
  }, fromArray: function (e, t) {
    undefined === t && (t = 0);
    for (var n = 0; n < 16; n++) this.elements[n] = e[n + t];
    return this;
  }, toArray: function (e, t) {
    undefined === e && (e = []), undefined === t && (t = 0);
    var n = this.elements;
    return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
  }});
  var Pn = new Ln, Dn = new dn;
  function On(e, t, n, i) {
    this._x = e || 0, this._y = t || 0, this._z = n || 0, this._order = i || On.DefaultOrder;
  }
  function In() {
    this.mask = 1;
  }
  On.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], On.DefaultOrder = "XYZ", Object.defineProperties(On.prototype, {x: {get: function () {
    return this._x;
  }, set: function (e) {
    this._x = e, this._onChangeCallback();
  }}, y: {get: function () {
    return this._y;
  }, set: function (e) {
    this._y = e, this._onChangeCallback();
  }}, z: {get: function () {
    return this._z;
  }, set: function (e) {
    this._z = e, this._onChangeCallback();
  }}, order: {get: function () {
    return this._order;
  }, set: function (e) {
    this._order = e, this._onChangeCallback();
  }}}), Object.assign(On.prototype, {isEuler: true, set: function (e, t, n, i) {
    return this._x = e, this._y = t, this._z = n, this._order = i || this._order, this._onChangeCallback(), this;
  }, clone: function () {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }, copy: function (e) {
    return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
  }, setFromRotationMatrix: function (e, t, n) {
    var i = hn.clamp, r = e.elements, o = r[0], s = r[4], a = r[8], l = r[1], c = r[5], h = r[9], u = r[2], d = r[6], p = r[10];
    return "XYZ" === (t = t || this._order) ? (this._y = Math.asin(i(a, -1, 1)), Math.abs(a) < 0.9999999 ? (this._x = Math.atan2(-h, p), this._z = Math.atan2(-s, o)) : (this._x = Math.atan2(d, c), this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-i(h, -1, 1)), Math.abs(h) < 0.9999999 ? (this._y = Math.atan2(a, p), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, o), this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(i(d, -1, 1)), Math.abs(d) < 0.9999999 ? (this._y = Math.atan2(-u, p), this._z = Math.atan2(-s, c)) : (this._y = 0, this._z = Math.atan2(l, o))) : "ZYX" === t ? (this._y = Math.asin(-i(u, -1, 1)), Math.abs(u) < 0.9999999 ? (this._x = Math.atan2(d, p), this._z = Math.atan2(l, o)) : (this._x = 0, this._z = Math.atan2(-s, c))) : "YZX" === t ? (this._z = Math.asin(i(l, -1, 1)), Math.abs(l) < 0.9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-u, o)) : (this._x = 0, this._y = Math.atan2(a, p))) : "XZY" === t ? (this._z = Math.asin(-i(s, -1, 1)), Math.abs(s) < 0.9999999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(a, o)) : (this._x = Math.atan2(-h, p), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t), this._order = t, false !== n && this._onChangeCallback(), this;
  }, setFromQuaternion: function (e, t, n) {
    return Pn.makeRotationFromQuaternion(e), this.setFromRotationMatrix(Pn, t, n);
  }, setFromVector3: function (e, t) {
    return this.set(e.x, e.y, e.z, t || this._order);
  }, reorder: function (e) {
    return Dn.setFromEuler(this), this.setFromQuaternion(Dn, e);
  }, equals: function (e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
  }, fromArray: function (e) {
    return this._x = e[0], this._y = e[1], this._z = e[2], undefined !== e[3] && (this._order = e[3]), this._onChangeCallback(), this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
  }, toVector3: function (e) {
    return e ? e.set(this._x, this._y, this._z) : new fn(this._x, this._y, this._z);
  }, _onChange: function (e) {
    return this._onChangeCallback = e, this;
  }, _onChangeCallback: function () {}}), Object.assign(In.prototype, {set: function (e) {
    this.mask = 1 << e | 0;
  }, enable: function (e) {
    this.mask |= 1 << e | 0;
  }, enableAll: function () {
    this.mask = -1;
  }, toggle: function (e) {
    this.mask ^= 1 << e | 0;
  }, disable: function (e) {
    this.mask &= ~(1 << e | 0);
  }, disableAll: function () {
    this.mask = 0;
  }, test: function (e) {
    return 0 != (this.mask & e.mask);
  }});
  var Bn = 0, Fn = new fn, zn = new dn, Nn = new Ln, Un = new fn, Vn = new fn, Gn = new fn, Hn = new dn, jn = new fn(1, 0, 0), $n = new fn(0, 1, 0), Wn = new fn(0, 0, 1), Xn = {type: "added"}, Yn = {type: "removed"};
  function Jn() {
    Object.defineProperty(this, "id", {value: Bn++}), this.uuid = hn.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Jn.DefaultUp.clone();
    var e = new fn, t = new On, n = new dn, i = new fn(1, 1, 1);
    t._onChange(function () {
      n.setFromEuler(t, false);
    }), n._onChange(function () {
      t.setFromQuaternion(n, undefined, false);
    }), Object.defineProperties(this, {position: {configurable: true, enumerable: true, value: e}, rotation: {configurable: true, enumerable: true, value: t}, quaternion: {configurable: true, enumerable: true, value: n}, scale: {configurable: true, enumerable: true, value: i}, modelViewMatrix: {value: new Ln}, normalMatrix: {value: new yn}}), this.matrix = new Ln, this.matrixWorld = new Ln, this.matrixAutoUpdate = Jn.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = false, this.layers = new In, this.visible = true, this.castShadow = false, this.receiveShadow = false, this.frustumCulled = true, this.renderOrder = 0, this.userData = {};
  }
  function Kn() {
    Jn.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = true, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {detail: this}));
  }
  Jn.DefaultUp = new fn(0, 1, 0), Jn.DefaultMatrixAutoUpdate = true, Jn.prototype = Object.assign(Object.create(i.prototype), {constructor: Jn, isObject3D: true, onBeforeRender: function () {}, onAfterRender: function () {}, applyMatrix: function (e) {
    this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
  }, applyQuaternion: function (e) {
    return this.quaternion.premultiply(e), this;
  }, setRotationFromAxisAngle: function (e, t) {
    this.quaternion.setFromAxisAngle(e, t);
  }, setRotationFromEuler: function (e) {
    this.quaternion.setFromEuler(e, true);
  }, setRotationFromMatrix: function (e) {
    this.quaternion.setFromRotationMatrix(e);
  }, setRotationFromQuaternion: function (e) {
    this.quaternion.copy(e);
  }, rotateOnAxis: function (e, t) {
    return zn.setFromAxisAngle(e, t), this.quaternion.multiply(zn), this;
  }, rotateOnWorldAxis: function (e, t) {
    return zn.setFromAxisAngle(e, t), this.quaternion.premultiply(zn), this;
  }, rotateX: function (e) {
    return this.rotateOnAxis(jn, e);
  }, rotateY: function (e) {
    return this.rotateOnAxis($n, e);
  }, rotateZ: function (e) {
    return this.rotateOnAxis(Wn, e);
  }, translateOnAxis: function (e, t) {
    return Fn.copy(e).applyQuaternion(this.quaternion), this.position.add(Fn.multiplyScalar(t)), this;
  }, translateX: function (e) {
    return this.translateOnAxis(jn, e);
  }, translateY: function (e) {
    return this.translateOnAxis($n, e);
  }, translateZ: function (e) {
    return this.translateOnAxis(Wn, e);
  }, localToWorld: function (e) {
    return e.applyMatrix4(this.matrixWorld);
  }, worldToLocal: function (e) {
    return e.applyMatrix4(Nn.getInverse(this.matrixWorld));
  }, lookAt: function (e, t, n) {
    e.isVector3 ? Un.copy(e) : Un.set(e, t, n);
    var i = this.parent;
    this.updateWorldMatrix(true, false), Vn.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Nn.lookAt(Vn, Un, this.up) : Nn.lookAt(Un, Vn, this.up), this.quaternion.setFromRotationMatrix(Nn), i && (Nn.extractRotation(i.matrixWorld), zn.setFromRotationMatrix(Nn), this.quaternion.premultiply(zn.inverse()));
  }, add: function (e) {
    if (arguments.length > 1) {
      for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
      return this;
    }
    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(Xn)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
  }, remove: function (e) {
    if (arguments.length > 1) {
      for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
      return this;
    }
    var n = this.children.indexOf(e);
    return -1 !== n && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(Yn)), this;
  }, attach: function (e) {
    return this.updateWorldMatrix(true, false), Nn.getInverse(this.matrixWorld), null !== e.parent && (e.parent.updateWorldMatrix(true, false), Nn.multiply(e.parent.matrixWorld)), e.applyMatrix(Nn), e.updateWorldMatrix(false, false), this.add(e), this;
  }, getObjectById: function (e) {
    return this.getObjectByProperty("id", e);
  }, getObjectByName: function (e) {
    return this.getObjectByProperty("name", e);
  }, getObjectByProperty: function (e, t) {
    if (this[e] === t) return this;
    for (var n = 0, i = this.children.length; n < i; n++) {
      var r = this.children[n].getObjectByProperty(e, t);
      if (undefined !== r) return r;
    }
  }, getWorldPosition: function (e) {
    return undefined === e && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), e = new fn), this.updateMatrixWorld(true), e.setFromMatrixPosition(this.matrixWorld);
  }, getWorldQuaternion: function (e) {
    return undefined === e && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), e = new dn), this.updateMatrixWorld(true), this.matrixWorld.decompose(Vn, e, Gn), e;
  }, getWorldScale: function (e) {
    return undefined === e && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), e = new fn), this.updateMatrixWorld(true), this.matrixWorld.decompose(Vn, Hn, e), e;
  }, getWorldDirection: function (e) {
    undefined === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), e = new fn), this.updateMatrixWorld(true);
    var t = this.matrixWorld.elements;
    return e.set(t[8], t[9], t[10]).normalize();
  }, raycast: function () {}, traverse: function (e) {
    e(this);
    for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].traverse(e);
  }, traverseVisible: function (e) {
    if (false !== this.visible) {
      e(this);
      for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].traverseVisible(e);
    }
  }, traverseAncestors: function (e) {
    var t = this.parent;
    null !== t && (e(t), t.traverseAncestors(e));
  }, updateMatrix: function () {
    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = true;
  }, updateMatrixWorld: function (e) {
    this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = false, e = true);
    for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].updateMatrixWorld(e);
  }, updateWorldMatrix: function (e, t) {
    var n = this.parent;
    if (true === e && null !== n && n.updateWorldMatrix(true, false), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), true === t) for (var i = this.children, r = 0, o = i.length; r < o; r++) i[r].updateWorldMatrix(false, true);
  }, toJSON: function (e) {
    var t = undefined === e || "string" == typeof e, n = {};
    t && (e = {geometries: {}, materials: {}, textures: {}, images: {}, shapes: {}}, n.metadata = {version: 4.5, type: "Object", generator: "Object3D.toJSON"});
    var i = {};
    function r(t, n) {
      return undefined === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid;
    }
    if (i.uuid = this.uuid, i.type = this.type, "" !== this.name && (i.name = this.name), true === this.castShadow && (i.castShadow = true), true === this.receiveShadow && (i.receiveShadow = true), false === this.visible && (i.visible = false), false === this.frustumCulled && (i.frustumCulled = false), 0 !== this.renderOrder && (i.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), false === this.matrixAutoUpdate && (i.matrixAutoUpdate = false), this.isMesh && this.drawMode !== kt && (i.drawMode = this.drawMode), this.isMesh || this.isLine || this.isPoints) {
      i.geometry = (undefined === e.geometries[this.geometry.uuid] && (e.geometries[this.geometry.uuid] = this.geometry.toJSON(e)), this.geometry.uuid);
      var o = this.geometry.parameters;
      if (undefined !== o && undefined !== o.shapes) {
        var s = o.shapes;
        if (Array.isArray(s)) for (var a = 0, l = s.length; a < l; a++) {
          var c = s[a];
          undefined === e.shapes[c.uuid] && (e.shapes[c.uuid] = c.toJSON(e)), c.uuid;
        } else undefined === e.shapes[s.uuid] && (e.shapes[s.uuid] = s.toJSON(e)), s.uuid;
      }
    }
    if (undefined !== this.material) if (Array.isArray(this.material)) {
      var h = [];
      for (a = 0, l = this.material.length; a < l; a++) h.push((undefined === e.materials[this.material[a].uuid] && (e.materials[this.material[a].uuid] = this.material[a].toJSON(e)), this.material[a].uuid));
      i.material = h;
    } else i.material = (undefined === e.materials[this.material.uuid] && (e.materials[this.material.uuid] = this.material.toJSON(e)), this.material.uuid);
    if (this.children.length > 0) {
      i.children = [];
      for (a = 0; a < this.children.length; a++) i.children.push(this.children[a].toJSON(e).object);
    }
    if (t) {
      var u = f(e.geometries), d = f(e.materials), p = f(e.textures), m = f(e.images);
      s = f(e.shapes);
      u.length > 0 && (n.geometries = u), d.length > 0 && (n.materials = d), p.length > 0 && (n.textures = p), m.length > 0 && (n.images = m), s.length > 0 && (n.shapes = s);
    }
    return n.object = i, n;
    function f(e) {
      var t = [];
      for (var n in e) {
        var i = e[n];
        delete i.metadata, t.push(i);
      }
      return t;
    }
  }, clone: function (e) {
    return (new this.constructor).copy(this, e);
  }, copy: function (e, t) {
    if (undefined === t && (t = true), this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), true === t) for (var n = 0; n < e.children.length; n++) {
      var i = e.children[n];
      this.add(i.clone());
    }
    return this;
  }}), Kn.prototype = Object.assign(Object.create(Jn.prototype), {constructor: Kn, isScene: true, copy: function (e, t) {
    return Jn.prototype.copy.call(this, e, t), null !== e.background && (this.background = e.background.clone()), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
  }, toJSON: function (e) {
    var t = Jn.prototype.toJSON.call(this, e);
    return null !== this.background && (t.object.background = this.background.toJSON(e)), null !== this.fog && (t.object.fog = this.fog.toJSON()), t;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }});
  var Zn = [new fn, new fn, new fn, new fn, new fn, new fn, new fn, new fn], Qn = new fn, ei = new fn, ti = new fn, ni = new fn, ii = new fn, ri = new fn, oi = new fn, si = new fn, ai = new fn, li = new fn, ci = new fn;
  function hi(e, t) {
    this.min = undefined !== e ? e : new fn(Infinity, Infinity, Infinity), this.max = undefined !== t ? t : new fn(-Infinity, -Infinity, -Infinity);
  }
  function ui(e, t, n, i, r) {
    var o, s;
    for (o = 0, s = e.length - 3; o <= s; o += 3) {
      ci.fromArray(e, o);
      var a = r.x * Math.abs(ci.x) + r.y * Math.abs(ci.y) + r.z * Math.abs(ci.z), l = t.dot(ci), c = n.dot(ci), h = i.dot(ci);
      if (Math.max(-Math.max(l, c, h), Math.min(l, c, h)) > a) return false;
    }
    return true;
  }
  Object.assign(hi.prototype, {isBox3: true, set: function (e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }, setFromArray: function (e) {
    for (var t = Infinity, n = Infinity, i = Infinity, r = -Infinity, o = -Infinity, s = -Infinity, a = 0, l = e.length; a < l; a += 3) {
      var c = e[a], h = e[a + 1], u = e[a + 2];
      c < t && (t = c), h < n && (n = h), u < i && (i = u), c > r && (r = c), h > o && (o = h), u > s && (s = u);
    }
    return this.min.set(t, n, i), this.max.set(r, o, s), this;
  }, setFromBufferAttribute: function (e) {
    for (var t = Infinity, n = Infinity, i = Infinity, r = -Infinity, o = -Infinity, s = -Infinity, a = 0, l = e.count; a < l; a++) {
      var c = e.getX(a), h = e.getY(a), u = e.getZ(a);
      c < t && (t = c), h < n && (n = h), u < i && (i = u), c > r && (r = c), h > o && (o = h), u > s && (s = u);
    }
    return this.min.set(t, n, i), this.max.set(r, o, s), this;
  }, setFromPoints: function (e) {
    this.makeEmpty();
    for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
    return this;
  }, setFromCenterAndSize: function (e, t) {
    var n = Qn.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
  }, setFromObject: function (e) {
    return this.makeEmpty(), this.expandByObject(e);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }, makeEmpty: function () {
    return this.min.x = this.min.y = this.min.z = Infinity, this.max.x = this.max.y = this.max.z = -Infinity, this;
  }, isEmpty: function () {
    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
  }, getCenter: function (e) {
    return undefined === e && (console.warn("THREE.Box3: .getCenter() target is now required"), e = new fn), this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }, getSize: function (e) {
    return undefined === e && (console.warn("THREE.Box3: .getSize() target is now required"), e = new fn), this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }, expandByPoint: function (e) {
    return this.min.min(e), this.max.max(e), this;
  }, expandByVector: function (e) {
    return this.min.sub(e), this.max.add(e), this;
  }, expandByScalar: function (e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }, expandByObject: function (e) {
    var t, n;
    e.updateWorldMatrix(false, false);
    var i = e.geometry;
    if (undefined !== i) if (i.isGeometry) {
      var r = i.vertices;
      for (t = 0, n = r.length; t < n; t++) Qn.copy(r[t]), Qn.applyMatrix4(e.matrixWorld), this.expandByPoint(Qn);
    } else if (i.isBufferGeometry) {
      var o = i.attributes.position;
      if (undefined !== o) for (t = 0, n = o.count; t < n; t++) Qn.fromBufferAttribute(o, t).applyMatrix4(e.matrixWorld), this.expandByPoint(Qn);
    }
    var s = e.children;
    for (t = 0, n = s.length; t < n; t++) this.expandByObject(s[t]);
    return this;
  }, containsPoint: function (e) {
    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
  }, containsBox: function (e) {
    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
  }, getParameter: function (e, t) {
    return undefined === t && (console.warn("THREE.Box3: .getParameter() target is now required"), t = new fn), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
  }, intersectsBox: function (e) {
    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
  }, intersectsSphere: function (e) {
    return this.clampPoint(e.center, Qn), Qn.distanceToSquared(e.center) <= e.radius * e.radius;
  }, intersectsPlane: function (e) {
    var t, n;
    return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
  }, intersectsTriangle: function (e) {
    if (this.isEmpty()) return false;
    this.getCenter(si), ai.subVectors(this.max, si), ei.subVectors(e.a, si), ti.subVectors(e.b, si), ni.subVectors(e.c, si), ii.subVectors(ti, ei), ri.subVectors(ni, ti), oi.subVectors(ei, ni);
    var t = [0, -ii.z, ii.y, 0, -ri.z, ri.y, 0, -oi.z, oi.y, ii.z, 0, -ii.x, ri.z, 0, -ri.x, oi.z, 0, -oi.x, -ii.y, ii.x, 0, -ri.y, ri.x, 0, -oi.y, oi.x, 0];
    return !!ui(t, ei, ti, ni, ai) && (!!ui(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], ei, ti, ni, ai) && (li.crossVectors(ii, ri), ui(t = [li.x, li.y, li.z], ei, ti, ni, ai)));
  }, clampPoint: function (e, t) {
    return undefined === t && (console.warn("THREE.Box3: .clampPoint() target is now required"), t = new fn), t.copy(e).clamp(this.min, this.max);
  }, distanceToPoint: function (e) {
    return Qn.copy(e).clamp(this.min, this.max).sub(e).length();
  }, getBoundingSphere: function (e) {
    return undefined === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"), this.getCenter(e.center), e.radius = 0.5 * this.getSize(Qn).length(), e;
  }, intersect: function (e) {
    return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
  }, union: function (e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }, applyMatrix4: function (e) {
    return this.isEmpty() ? this : (Zn[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), Zn[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), Zn[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), Zn[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), Zn[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), Zn[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), Zn[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), Zn[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(Zn), this);
  }, translate: function (e) {
    return this.min.add(e), this.max.add(e), this;
  }, equals: function (e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }});
  var di = new hi;
  function pi(e, t) {
    this.center = undefined !== e ? e : new fn, this.radius = undefined !== t ? t : 0;
  }
  Object.assign(pi.prototype, {set: function (e, t) {
    return this.center.copy(e), this.radius = t, this;
  }, setFromPoints: function (e, t) {
    var n = this.center;
    undefined !== t ? n.copy(t) : di.setFromPoints(e).getCenter(n);
    for (var i = 0, r = 0, o = e.length; r < o; r++) i = Math.max(i, n.distanceToSquared(e[r]));
    return this.radius = Math.sqrt(i), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.center.copy(e.center), this.radius = e.radius, this;
  }, empty: function () {
    return this.radius <= 0;
  }, containsPoint: function (e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }, distanceToPoint: function (e) {
    return e.distanceTo(this.center) - this.radius;
  }, intersectsSphere: function (e) {
    var t = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= t * t;
  }, intersectsBox: function (e) {
    return e.intersectsSphere(this);
  }, intersectsPlane: function (e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }, clampPoint: function (e, t) {
    var n = this.center.distanceToSquared(e);
    return undefined === t && (console.warn("THREE.Sphere: .clampPoint() target is now required"), t = new fn), t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
  }, getBoundingBox: function (e) {
    return undefined === e && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), e = new hi), e.set(this.center, this.center), e.expandByScalar(this.radius), e;
  }, applyMatrix4: function (e) {
    return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
  }, translate: function (e) {
    return this.center.add(e), this;
  }, equals: function (e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }});
  var mi = new fn, fi = new fn, gi = new fn, vi = new fn, yi = new fn, _i = new fn, xi = new fn;
  function bi(e, t) {
    this.origin = undefined !== e ? e : new fn, this.direction = undefined !== t ? t : new fn;
  }
  Object.assign(bi.prototype, {set: function (e, t) {
    return this.origin.copy(e), this.direction.copy(t), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
  }, at: function (e, t) {
    return undefined === t && (console.warn("THREE.Ray: .at() target is now required"), t = new fn), t.copy(this.direction).multiplyScalar(e).add(this.origin);
  }, lookAt: function (e) {
    return this.direction.copy(e).sub(this.origin).normalize(), this;
  }, recast: function (e) {
    return this.origin.copy(this.at(e, mi)), this;
  }, closestPointToPoint: function (e, t) {
    undefined === t && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), t = new fn), t.subVectors(e, this.origin);
    var n = t.dot(this.direction);
    return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin);
  }, distanceToPoint: function (e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }, distanceSqToPoint: function (e) {
    var t = mi.subVectors(e, this.origin).dot(this.direction);
    return t < 0 ? this.origin.distanceToSquared(e) : (mi.copy(this.direction).multiplyScalar(t).add(this.origin), mi.distanceToSquared(e));
  }, distanceSqToSegment: function (e, t, n, i) {
    fi.copy(e).add(t).multiplyScalar(0.5), gi.copy(t).sub(e).normalize(), vi.copy(this.origin).sub(fi);
    var r, o, s, a, l = 0.5 * e.distanceTo(t), c = -this.direction.dot(gi), h = vi.dot(this.direction), u = -vi.dot(gi), d = vi.lengthSq(), p = Math.abs(1 - c * c);
    if (p > 0) if (o = c * h - u, a = l * p, (r = c * u - h) >= 0) if (o >= -a) if (o <= a) {
      var m = 1 / p;
      s = (r *= m) * (r + c * (o *= m) + 2 * h) + o * (c * r + o + 2 * u) + d;
    } else o = l, s = -(r = Math.max(0, -(c * o + h))) * r + o * (o + 2 * u) + d; else o = -l, s = -(r = Math.max(0, -(c * o + h))) * r + o * (o + 2 * u) + d; else o <= -a ? s = -(r = Math.max(0, -(-c * l + h))) * r + (o = r > 0 ? -l : Math.min(Math.max(-l, -u), l)) * (o + 2 * u) + d : o <= a ? (r = 0, s = (o = Math.min(Math.max(-l, -u), l)) * (o + 2 * u) + d) : s = -(r = Math.max(0, -(c * l + h))) * r + (o = r > 0 ? l : Math.min(Math.max(-l, -u), l)) * (o + 2 * u) + d; else o = c > 0 ? -l : l, s = -(r = Math.max(0, -(c * o + h))) * r + o * (o + 2 * u) + d;
    return n && n.copy(this.direction).multiplyScalar(r).add(this.origin), i && i.copy(gi).multiplyScalar(o).add(fi), s;
  }, intersectSphere: function (e, t) {
    mi.subVectors(e.center, this.origin);
    var n = mi.dot(this.direction), i = mi.dot(mi) - n * n, r = e.radius * e.radius;
    if (i > r) return null;
    var o = Math.sqrt(r - i), s = n - o, a = n + o;
    return s < 0 && a < 0 ? null : s < 0 ? this.at(a, t) : this.at(s, t);
  }, intersectsSphere: function (e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }, distanceToPlane: function (e) {
    var t = e.normal.dot(this.direction);
    if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
    var n = -(this.origin.dot(e.normal) + e.constant) / t;
    return n >= 0 ? n : null;
  }, intersectPlane: function (e, t) {
    var n = this.distanceToPlane(e);
    return null === n ? null : this.at(n, t);
  }, intersectsPlane: function (e) {
    var t = e.distanceToPoint(this.origin);
    return 0 === t || e.normal.dot(this.direction) * t < 0;
  }, intersectBox: function (e, t) {
    var n, i, r, o, s, a, l = 1 / this.direction.x, c = 1 / this.direction.y, h = 1 / this.direction.z, u = this.origin;
    return l >= 0 ? (n = (e.min.x - u.x) * l, i = (e.max.x - u.x) * l) : (n = (e.max.x - u.x) * l, i = (e.min.x - u.x) * l), c >= 0 ? (r = (e.min.y - u.y) * c, o = (e.max.y - u.y) * c) : (r = (e.max.y - u.y) * c, o = (e.min.y - u.y) * c), n > o || r > i ? null : ((r > n || n != n) && (n = r), (o < i || i != i) && (i = o), h >= 0 ? (s = (e.min.z - u.z) * h, a = (e.max.z - u.z) * h) : (s = (e.max.z - u.z) * h, a = (e.min.z - u.z) * h), n > a || s > i ? null : ((s > n || n != n) && (n = s), (a < i || i != i) && (i = a), i < 0 ? null : this.at(n >= 0 ? n : i, t)));
  }, intersectsBox: function (e) {
    return null !== this.intersectBox(e, mi);
  }, intersectTriangle: function (e, t, n, i, r) {
    yi.subVectors(t, e), _i.subVectors(n, e), xi.crossVectors(yi, _i);
    var o, s = this.direction.dot(xi);
    if (s > 0) {
      if (i) return null;
      o = 1;
    } else {
      if (!(s < 0)) return null;
      o = -1, s = -s;
    }
    vi.subVectors(this.origin, e);
    var a = o * this.direction.dot(_i.crossVectors(vi, _i));
    if (a < 0) return null;
    var l = o * this.direction.dot(yi.cross(vi));
    if (l < 0) return null;
    if (a + l > s) return null;
    var c = -o * vi.dot(xi);
    return c < 0 ? null : this.at(c / s, r);
  }, applyMatrix4: function (e) {
    return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
  }, equals: function (e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }});
  var wi = new fn, Si = new fn, Ei = new fn, qi = new fn, Ti = new fn, Ai = new fn, Mi = new fn, Ci = new fn, ki = new fn, Ri = new fn;
  function Li(e, t, n) {
    this.a = undefined !== e ? e : new fn, this.b = undefined !== t ? t : new fn, this.c = undefined !== n ? n : new fn;
  }
  Object.assign(Li, {getNormal: function (e, t, n, i) {
    undefined === i && (console.warn("THREE.Triangle: .getNormal() target is now required"), i = new fn), i.subVectors(n, t), wi.subVectors(e, t), i.cross(wi);
    var r = i.lengthSq();
    return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
  }, getBarycoord: function (e, t, n, i, r) {
    wi.subVectors(i, t), Si.subVectors(n, t), Ei.subVectors(e, t);
    var o = wi.dot(wi), s = wi.dot(Si), a = wi.dot(Ei), l = Si.dot(Si), c = Si.dot(Ei), h = o * l - s * s;
    if (undefined === r && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), r = new fn), 0 === h) return r.set(-2, -1, -1);
    var u = 1 / h, d = (l * a - s * c) * u, p = (o * c - s * a) * u;
    return r.set(1 - d - p, p, d);
  }, containsPoint: function (e, t, n, i) {
    return Li.getBarycoord(e, t, n, i, qi), qi.x >= 0 && qi.y >= 0 && qi.x + qi.y <= 1;
  }, getUV: function (e, t, n, i, r, o, s, a) {
    return this.getBarycoord(e, t, n, i, qi), a.set(0, 0), a.addScaledVector(r, qi.x), a.addScaledVector(o, qi.y), a.addScaledVector(s, qi.z), a;
  }, isFrontFacing: function (e, t, n, i) {
    return wi.subVectors(n, t), Si.subVectors(e, t), wi.cross(Si).dot(i) < 0;
  }}), Object.assign(Li.prototype, {set: function (e, t, n) {
    return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
  }, setFromPointsAndIndices: function (e, t, n, i) {
    return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
  }, getArea: function () {
    return wi.subVectors(this.c, this.b), Si.subVectors(this.a, this.b), 0.5 * wi.cross(Si).length();
  }, getMidpoint: function (e) {
    return undefined === e && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), e = new fn), e.addVectors(this.a, this.b).add(this.c).multiplyScalar(0.3333333333333333);
  }, getNormal: function (e) {
    return Li.getNormal(this.a, this.b, this.c, e);
  }, getPlane: function (e) {
    return undefined === e && (console.warn("THREE.Triangle: .getPlane() target is now required"), e = new fn), e.setFromCoplanarPoints(this.a, this.b, this.c);
  }, getBarycoord: function (e, t) {
    return Li.getBarycoord(e, this.a, this.b, this.c, t);
  }, getUV: function (e, t, n, i, r) {
    return Li.getUV(e, this.a, this.b, this.c, t, n, i, r);
  }, containsPoint: function (e) {
    return Li.containsPoint(e, this.a, this.b, this.c);
  }, isFrontFacing: function (e) {
    return Li.isFrontFacing(this.a, this.b, this.c, e);
  }, intersectsBox: function (e) {
    return e.intersectsTriangle(this);
  }, closestPointToPoint: function (e, t) {
    undefined === t && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), t = new fn);
    var n, i, r = this.a, o = this.b, s = this.c;
    Ti.subVectors(o, r), Ai.subVectors(s, r), Ci.subVectors(e, r);
    var a = Ti.dot(Ci), l = Ai.dot(Ci);
    if (a <= 0 && l <= 0) return t.copy(r);
    ki.subVectors(e, o);
    var c = Ti.dot(ki), h = Ai.dot(ki);
    if (c >= 0 && h <= c) return t.copy(o);
    var u = a * h - c * l;
    if (u <= 0 && a >= 0 && c <= 0) return n = a / (a - c), t.copy(r).addScaledVector(Ti, n);
    Ri.subVectors(e, s);
    var d = Ti.dot(Ri), p = Ai.dot(Ri);
    if (p >= 0 && d <= p) return t.copy(s);
    var m = d * l - a * p;
    if (m <= 0 && l >= 0 && p <= 0) return i = l / (l - p), t.copy(r).addScaledVector(Ai, i);
    var f = c * p - d * h;
    if (f <= 0 && h - c >= 0 && d - p >= 0) return Mi.subVectors(s, o), i = (h - c) / (h - c + (d - p)), t.copy(o).addScaledVector(Mi, i);
    var g = 1 / (f + m + u);
    return n = m * g, i = u * g, t.copy(r).addScaledVector(Ti, n).addScaledVector(Ai, i);
  }, equals: function (e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }});
  var Pi = {aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074}, Di = {h: 0, s: 0, l: 0}, Oi = {h: 0, s: 0, l: 0};
  function Ii(e, t, n) {
    return undefined === t && undefined === n ? this.set(e) : this.setRGB(e, t, n);
  }
  function Bi(e, t, n) {
    return n < 0 && (n += 1), n > 1 && (n -= 1), n < 0.16666666666666666 ? e + 6 * (t - e) * n : n < 0.5 ? t : n < 0.6666666666666666 ? e + 6 * (t - e) * (0.6666666666666666 - n) : e;
  }
  function Fi(e) {
    return e < 0.04045 ? 0.0773993808 * e : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
  }
  function zi(e) {
    return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
  }
  function Ni(e, t, n, i, r, o) {
    this.a = e, this.b = t, this.c = n, this.normal = i && i.isVector3 ? i : new fn, this.vertexNormals = Array.isArray(i) ? i : [], this.color = r && r.isColor ? r : new Ii, this.vertexColors = Array.isArray(r) ? r : [], this.materialIndex = undefined !== o ? o : 0;
  }
  Object.assign(Ii.prototype, {isColor: true, r: 1, g: 1, b: 1, set: function (e) {
    return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e), this;
  }, setScalar: function (e) {
    return this.r = e, this.g = e, this.b = e, this;
  }, setHex: function (e) {
    return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this;
  }, setRGB: function (e, t, n) {
    return this.r = e, this.g = t, this.b = n, this;
  }, setHSL: function (e, t, n) {
    if (e = hn.euclideanModulo(e, 1), t = hn.clamp(t, 0, 1), n = hn.clamp(n, 0, 1), 0 === t) this.r = this.g = this.b = n; else {
      var i = n <= 0.5 ? n * (1 + t) : n + t - n * t, r = 2 * n - i;
      this.r = (e + 0.3333333333333333 < 0 && (e + 0.3333333333333333 += 1), e + 0.3333333333333333 > 1 && (e + 0.3333333333333333 -= 1), e + 0.3333333333333333 < 0.16666666666666666 ? r + 6 * (i - r) * (e + 0.3333333333333333) : e + 0.3333333333333333 < 0.5 ? i : e + 0.3333333333333333 < 0.6666666666666666 ? r + 6 * (i - r) * (0.6666666666666666 - (e + 0.3333333333333333)) : r), this.g = (e < 0 && (e += 1), e > 1 && (e -= 1), e < 0.16666666666666666 ? r + 6 * (i - r) * e : e < 0.5 ? i : e < 0.6666666666666666 ? r + 6 * (i - r) * (0.6666666666666666 - e) : r), this.b = (e - 0.3333333333333333 < 0 && (e - 0.3333333333333333 += 1), e - 0.3333333333333333 > 1 && (e - 0.3333333333333333 -= 1), e - 0.3333333333333333 < 0.16666666666666666 ? r + 6 * (i - r) * (e - 0.3333333333333333) : e - 0.3333333333333333 < 0.5 ? i : e - 0.3333333333333333 < 0.6666666666666666 ? r + 6 * (i - r) * (0.6666666666666666 - (e - 0.3333333333333333)) : r);
    }
    return this;
  }, setStyle: function (e) {
    function t(t) {
      undefined !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
    }
    var n;
    if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
      var i, r = n[1], o = n[2];
      switch (r) {
        case "rgb":
        case "rgba":
          if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[5]), this;
          if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[5]), this;
          break;
        case "hsl":
        case "hsla":
          if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
            var s = parseFloat(i[1]) / 360, a = parseInt(i[2], 10) / 100, l = parseInt(i[3], 10) / 100;
            return t(i[5]), this.setHSL(s, a, l);
          }
      }
    } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
      var c, h = (c = n[1]).length;
      if (3 === h) return this.r = parseInt(c.charAt(0) + c.charAt(0), 16) / 255, this.g = parseInt(c.charAt(1) + c.charAt(1), 16) / 255, this.b = parseInt(c.charAt(2) + c.charAt(2), 16) / 255, this;
      if (6 === h) return this.r = parseInt(c.charAt(0) + c.charAt(1), 16) / 255, this.g = parseInt(c.charAt(2) + c.charAt(3), 16) / 255, this.b = parseInt(c.charAt(4) + c.charAt(5), 16) / 255, this;
    }
    e && e.length > 0 && (undefined !== (c = Pi[e]) ? this.setHex(c) : console.warn("THREE.Color: Unknown color " + e));
    return this;
  }, clone: function () {
    return new this.constructor(this.r, this.g, this.b);
  }, copy: function (e) {
    return this.r = e.r, this.g = e.g, this.b = e.b, this;
  }, copyGammaToLinear: function (e, t) {
    return undefined === t && (t = 2), this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this;
  }, copyLinearToGamma: function (e, t) {
    undefined === t && (t = 2);
    var n = t > 0 ? 1 / t : 1;
    return this.r = Math.pow(e.r, n), this.g = Math.pow(e.g, n), this.b = Math.pow(e.b, n), this;
  }, convertGammaToLinear: function (e) {
    return this.copyGammaToLinear(this, e), this;
  }, convertLinearToGamma: function (e) {
    return this.copyLinearToGamma(this, e), this;
  }, copySRGBToLinear: function (e) {
    return this.r = Fi(e.r), this.g = Fi(e.g), this.b = Fi(e.b), this;
  }, copyLinearToSRGB: function (e) {
    return this.r = zi(e.r), this.g = zi(e.g), this.b = zi(e.b), this;
  }, convertSRGBToLinear: function () {
    return this.copySRGBToLinear(this), this;
  }, convertLinearToSRGB: function () {
    return this.copyLinearToSRGB(this), this;
  }, getHex: function () {
    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
  }, getHexString: function () {
    return ("000000" + this.getHex().toString(16)).slice(-6);
  }, getHSL: function (e) {
    undefined === e && (console.warn("THREE.Color: .getHSL() target is now required"), e = {h: 0, s: 0, l: 0});
    var t, n, i = this.r, r = this.g, o = this.b, s = Math.max(i, r, o), a = Math.min(i, r, o), l = (a + s) / 2;
    if (a === s) t = 0, n = 0; else {
      var c = s - a;
      switch (n = l <= 0.5 ? c / (s + a) : c / (2 - s - a), s) {
        case i:
          t = (r - o) / c + (r < o ? 6 : 0);
          break;
        case r:
          t = (o - i) / c + 2;
          break;
        case o:
          t = (i - r) / c + 4;
      }
      t /= 6;
    }
    return e.h = t, e.s = n, e.l = l, e;
  }, getStyle: function () {
    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
  }, offsetHSL: function (e, t, n) {
    return this.getHSL(Di), Di.h += e, Di.s += t, Di.l += n, this.setHSL(Di.h, Di.s, Di.l), this;
  }, add: function (e) {
    return this.r += e.r, this.g += e.g, this.b += e.b, this;
  }, addColors: function (e, t) {
    return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
  }, addScalar: function (e) {
    return this.r += e, this.g += e, this.b += e, this;
  }, sub: function (e) {
    return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
  }, multiply: function (e) {
    return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
  }, multiplyScalar: function (e) {
    return this.r *= e, this.g *= e, this.b *= e, this;
  }, lerp: function (e, t) {
    return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
  }, lerpHSL: function (e, t) {
    this.getHSL(Di), e.getHSL(Oi);
    var n = hn.lerp(Di.h, Oi.h, t), i = hn.lerp(Di.s, Oi.s, t), r = hn.lerp(Di.l, Oi.l, t);
    return this.setHSL(n, i, r), this;
  }, equals: function (e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
  }, toJSON: function () {
    return this.getHex();
  }}), Object.assign(Ni.prototype, {clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    this.a = e.a, this.b = e.b, this.c = e.c, this.normal.copy(e.normal), this.color.copy(e.color), this.materialIndex = e.materialIndex;
    for (var t = 0, n = e.vertexNormals.length; t < n; t++) this.vertexNormals[t] = e.vertexNormals[t].clone();
    for (t = 0, n = e.vertexColors.length; t < n; t++) this.vertexColors[t] = e.vertexColors[t].clone();
    return this;
  }});
  var Ui = 0;
  function Vi() {
    Object.defineProperty(this, "id", {value: Ui++}), this.uuid = hn.generateUUID(), this.name = "", this.type = "Material", this.fog = true, this.lights = true, this.blending = T, this.side = v, this.flatShading = false, this.vertexTangents = false, this.vertexColors = w, this.opacity = 1, this.transparent = false, this.blendSrc = N, this.blendDst = U, this.blendEquation = R, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = J, this.depthTest = true, this.depthWrite = true, this.stencilFunc = an, this.stencilRef = 0, this.stencilMask = 255, this.stencilFail = $t, this.stencilZFail = $t, this.stencilZPass = $t, this.stencilWrite = false, this.clippingPlanes = null, this.clipIntersection = false, this.clipShadows = false, this.shadowSide = null, this.colorWrite = true, this.precision = null, this.polygonOffset = false, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = false, this.alphaTest = 0, this.premultipliedAlpha = false, this.visible = true, this.toneMapped = true, this.userData = {}, this.needsUpdate = true;
  }
  function Gi(e) {
    Vi.call(this), this.type = "MeshBasicMaterial", this.color = new Ii(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = te, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.lights = false, this.setValues(e);
  }
  function Hi(e, t, n) {
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    this.name = "", this.array = e, this.itemSize = t, this.count = undefined !== e ? e.length / t : 0, this.normalized = true === n, this.dynamic = false, this.updateRange = {offset: 0, count: -1}, this.version = 0;
  }
  function ji(e, t, n) {
    Hi.call(this, new Int8Array(e), t, n);
  }
  function $i(e, t, n) {
    Hi.call(this, new Uint8Array(e), t, n);
  }
  function Wi(e, t, n) {
    Hi.call(this, new Uint8ClampedArray(e), t, n);
  }
  function Xi(e, t, n) {
    Hi.call(this, new Int16Array(e), t, n);
  }
  function Yi(e, t, n) {
    Hi.call(this, new Uint16Array(e), t, n);
  }
  function Ji(e, t, n) {
    Hi.call(this, new Int32Array(e), t, n);
  }
  function Ki(e, t, n) {
    Hi.call(this, new Uint32Array(e), t, n);
  }
  function Zi(e, t, n) {
    Hi.call(this, new Float32Array(e), t, n);
  }
  function Qi(e, t, n) {
    Hi.call(this, new Float64Array(e), t, n);
  }
  function er() {
    this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = false, this.normalsNeedUpdate = false, this.colorsNeedUpdate = false, this.uvsNeedUpdate = false, this.groupsNeedUpdate = false;
  }
  function tr(e) {
    if (0 === e.length) return -Infinity;
    for (var t = e[0], n = 1, i = e.length; n < i; ++n) e[n] > t && (t = e[n]);
    return t;
  }
  Vi.prototype = Object.assign(Object.create(i.prototype), {constructor: Vi, isMaterial: true, onBeforeCompile: function () {}, setValues: function (e) {
    if (undefined !== e) for (var t in e) {
      var n = e[t];
      if (undefined !== n) if ("shading" !== t) {
        var i = this[t];
        undefined !== i ? i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.");
      } else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = n === x; else console.warn("THREE.Material: '" + t + "' parameter is undefined.");
    }
  }, toJSON: function (e) {
    var t = undefined === e || "string" == typeof e;
    t && (e = {textures: {}, images: {}});
    var n = {metadata: {version: 4.5, type: "Material", generator: "Material.toJSON"}};
    function i(e) {
      var t = [];
      for (var n in e) {
        var i = e[n];
        delete i.metadata, t.push(i);
      }
      return t;
    }
    if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), undefined !== this.roughness && (n.roughness = this.roughness), undefined !== this.metalness && (n.metalness = this.metalness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), undefined !== this.shininess && (n.shininess = this.shininess), undefined !== this.clearcoat && (n.clearcoat = this.clearcoat), undefined !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, n.reflectivity = this.reflectivity, n.refractionRatio = this.refractionRatio, undefined !== this.combine && (n.combine = this.combine), undefined !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), undefined !== this.size && (n.size = this.size), undefined !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== T && (n.blending = this.blending), true === this.flatShading && (n.flatShading = this.flatShading), this.side !== v && (n.side = this.side), this.vertexColors !== w && (n.vertexColors = this.vertexColors), this.opacity < 1 && (n.opacity = this.opacity), true === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.stencilWrite = this.stencilWrite, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilMask = this.stencilMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), true === this.polygonOffset && (n.polygonOffset = true), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), undefined !== this.dashSize && (n.dashSize = this.dashSize), undefined !== this.gapSize && (n.gapSize = this.gapSize), undefined !== this.scale && (n.scale = this.scale), true === this.dithering && (n.dithering = true), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), true === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), true === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), true === this.morphTargets && (n.morphTargets = true), true === this.morphNormals && (n.morphNormals = true), true === this.skinning && (n.skinning = true), false === this.visible && (n.visible = false), false === this.toneMapped && (n.toneMapped = false), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), t) {
      var r = i(e.textures), o = i(e.images);
      r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
    }
    return n;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    this.name = e.name, this.fog = e.fog, this.lights = e.lights, this.blending = e.blending, this.side = e.side, this.flatShading = e.flatShading, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWrite = e.stencilWrite, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilMask = e.stencilMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this.clipShadows = e.clipShadows, this.clipIntersection = e.clipIntersection;
    var t = e.clippingPlanes, n = null;
    if (null !== t) {
      var i = t.length;
      n = new Array(i);
      for (var r = 0; r !== i; ++r) n[r] = t[r].clone();
    }
    return this.clippingPlanes = n, this.shadowSide = e.shadowSide, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }}), Gi.prototype = Object.create(Vi.prototype), Gi.prototype.constructor = Gi, Gi.prototype.isMeshBasicMaterial = true, Gi.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this;
  }, Object.defineProperty(Hi.prototype, "needsUpdate", {set: function (e) {
    true === e && this.version++;
  }}), Object.assign(Hi.prototype, {isBufferAttribute: true, onUploadCallback: function () {}, setArray: function (e) {
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    return this.count = undefined !== e ? e.length / this.itemSize : 0, this.array = e, this;
  }, setDynamic: function (e) {
    return this.dynamic = e, this;
  }, copy: function (e) {
    return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.dynamic = e.dynamic, this;
  }, copyAt: function (e, t, n) {
    e *= this.itemSize, n *= t.itemSize;
    for (var i = 0, r = this.itemSize; i < r; i++) this.array[e + i] = t.array[n + i];
    return this;
  }, copyArray: function (e) {
    return this.array.set(e), this;
  }, copyColorsArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new Ii), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b;
    }
    return this;
  }, copyVector2sArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new un), t[n++] = o.x, t[n++] = o.y;
    }
    return this;
  }, copyVector3sArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new fn), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z;
    }
    return this;
  }, copyVector4sArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new wn), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w;
    }
    return this;
  }, set: function (e, t) {
    return undefined === t && (t = 0), this.array.set(e, t), this;
  }, getX: function (e) {
    return this.array[e * this.itemSize];
  }, setX: function (e, t) {
    return this.array[e * this.itemSize] = t, this;
  }, getY: function (e) {
    return this.array[e * this.itemSize + 1];
  }, setY: function (e, t) {
    return this.array[e * this.itemSize + 1] = t, this;
  }, getZ: function (e) {
    return this.array[e * this.itemSize + 2];
  }, setZ: function (e, t) {
    return this.array[e * this.itemSize + 2] = t, this;
  }, getW: function (e) {
    return this.array[e * this.itemSize + 3];
  }, setW: function (e, t) {
    return this.array[e * this.itemSize + 3] = t, this;
  }, setXY: function (e, t, n) {
    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this;
  }, setXYZ: function (e, t, n, i) {
    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
  }, setXYZW: function (e, t, n, i, r) {
    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
  }, onUpload: function (e) {
    return this.onUploadCallback = e, this;
  }, clone: function () {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }, toJSON: function () {
    return {itemSize: this.itemSize, type: this.array.constructor.name, array: Array.prototype.slice.call(this.array), normalized: this.normalized};
  }}), ji.prototype = Object.create(Hi.prototype), ji.prototype.constructor = ji, $i.prototype = Object.create(Hi.prototype), $i.prototype.constructor = $i, Wi.prototype = Object.create(Hi.prototype), Wi.prototype.constructor = Wi, Xi.prototype = Object.create(Hi.prototype), Xi.prototype.constructor = Xi, Yi.prototype = Object.create(Hi.prototype), Yi.prototype.constructor = Yi, Ji.prototype = Object.create(Hi.prototype), Ji.prototype.constructor = Ji, Ki.prototype = Object.create(Hi.prototype), Ki.prototype.constructor = Ki, Zi.prototype = Object.create(Hi.prototype), Zi.prototype.constructor = Zi, Qi.prototype = Object.create(Hi.prototype), Qi.prototype.constructor = Qi, Object.assign(er.prototype, {computeGroups: function (e) {
    for (var t, n = [], i = undefined, r = e.faces, o = 0; o < r.length; o++) {
      var s = r[o];
      s.materialIndex !== i && (i = s.materialIndex, undefined !== t && (t.count = 3 * o - t.start, n.push(t)), t = {start: 3 * o, materialIndex: i});
    }
    undefined !== t && (t.count = 3 * o - t.start, n.push(t)), this.groups = n;
  }, fromGeometry: function (e) {
    var t, n = e.faces, i = e.vertices, r = e.faceVertexUvs, o = r[0] && r[0].length > 0, s = r[1] && r[1].length > 0, a = e.morphTargets, l = a.length;
    if (l > 0) {
      t = [];
      for (var c = 0; c < l; c++) t[c] = {name: a[c].name, data: []};
      this.morphTargets.position = t;
    }
    var h, u = e.morphNormals, d = u.length;
    if (d > 0) {
      h = [];
      for (c = 0; c < d; c++) h[c] = {name: u[c].name, data: []};
      this.morphTargets.normal = h;
    }
    var p = e.skinIndices, m = e.skinWeights, f = p.length === i.length, g = m.length === i.length;
    i.length > 0 && 0 === n.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
    for (c = 0; c < n.length; c++) {
      var v = n[c];
      this.vertices.push(i[v.a], i[v.b], i[v.c]);
      var y = v.vertexNormals;
      if (3 === y.length) this.normals.push(y[0], y[1], y[2]); else {
        var _ = v.normal;
        this.normals.push(_, _, _);
      }
      var x, b = v.vertexColors;
      if (3 === b.length) this.colors.push(b[0], b[1], b[2]); else {
        var w = v.color;
        this.colors.push(w, w, w);
      }
      if (true === o) undefined !== (x = r[0][c]) ? this.uvs.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", c), this.uvs.push(new un, new un, new un));
      if (true === s) undefined !== (x = r[1][c]) ? this.uvs2.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", c), this.uvs2.push(new un, new un, new un));
      for (var S = 0; S < l; S++) {
        var E = a[S].vertices;
        t[S].data.push(E[v.a], E[v.b], E[v.c]);
      }
      for (S = 0; S < d; S++) {
        var q = u[S].vertexNormals[c];
        h[S].data.push(q.a, q.b, q.c);
      }
      f && this.skinIndices.push(p[v.a], p[v.b], p[v.c]), g && this.skinWeights.push(m[v.a], m[v.b], m[v.c]);
    }
    return this.computeGroups(e), this.verticesNeedUpdate = e.verticesNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this;
  }});
  var nr = 1, ir = new Ln, rr = new Jn, or = new fn, sr = new hi, ar = new hi, lr = new fn;
  function cr() {
    Object.defineProperty(this, "id", {value: nr += 2}), this.uuid = hn.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {start: 0, count: Infinity}, this.userData = {};
  }
  cr.prototype = Object.assign(Object.create(i.prototype), {constructor: cr, isBufferGeometry: true, getIndex: function () {
    return this.index;
  }, setIndex: function (e) {
    Array.isArray(e) ? this.index = new (tr(e) > 65535 ? Ki : Yi)(e, 1) : this.index = e;
  }, addAttribute: function (e, t) {
    return t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(t), this) : (this.attributes[e] = t, this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(e, new Hi(arguments[1], arguments[2])));
  }, getAttribute: function (e) {
    return this.attributes[e];
  }, removeAttribute: function (e) {
    return delete this.attributes[e], this;
  }, addGroup: function (e, t, n) {
    this.groups.push({start: e, count: t, materialIndex: undefined !== n ? n : 0});
  }, clearGroups: function () {
    this.groups = [];
  }, setDrawRange: function (e, t) {
    this.drawRange.start = e, this.drawRange.count = t;
  }, applyMatrix: function (e) {
    var t = this.attributes.position;
    undefined !== t && (e.applyToBufferAttribute(t), t.needsUpdate = true);
    var n = this.attributes.normal;
    undefined !== n && ((new yn).getNormalMatrix(e).applyToBufferAttribute(n), n.needsUpdate = true);
    var i = this.attributes.tangent;
    undefined !== i && ((new yn).getNormalMatrix(e).applyToBufferAttribute(i), i.needsUpdate = true);
    return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this;
  }, rotateX: function (e) {
    return ir.makeRotationX(e), this.applyMatrix(ir), this;
  }, rotateY: function (e) {
    return ir.makeRotationY(e), this.applyMatrix(ir), this;
  }, rotateZ: function (e) {
    return ir.makeRotationZ(e), this.applyMatrix(ir), this;
  }, translate: function (e, t, n) {
    return ir.makeTranslation(e, t, n), this.applyMatrix(ir), this;
  }, scale: function (e, t, n) {
    return ir.makeScale(e, t, n), this.applyMatrix(ir), this;
  }, lookAt: function (e) {
    return rr.lookAt(e), rr.updateMatrix(), this.applyMatrix(rr.matrix), this;
  }, center: function () {
    return this.computeBoundingBox(), this.boundingBox.getCenter(or).negate(), this.translate(or.x, or.y, or.z), this;
  }, setFromObject: function (e) {
    var t = e.geometry;
    if (e.isPoints || e.isLine) {
      var n = new Zi(3 * t.vertices.length, 3), i = new Zi(3 * t.colors.length, 3);
      if (this.addAttribute("position", n.copyVector3sArray(t.vertices)), this.addAttribute("color", i.copyColorsArray(t.colors)), t.lineDistances && t.lineDistances.length === t.vertices.length) {
        var r = new Zi(t.lineDistances.length, 1);
        this.addAttribute("lineDistance", r.copyArray(t.lineDistances));
      }
      null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone());
    } else e.isMesh && t && t.isGeometry && this.fromGeometry(t);
    return this;
  }, setFromPoints: function (e) {
    for (var t = [], n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      t.push(r.x, r.y, r.z || 0);
    }
    return this.addAttribute("position", new Zi(t, 3)), this;
  }, updateFromObject: function (e) {
    var t, n = e.geometry;
    if (e.isMesh) {
      var i = n.__directGeometry;
      if (true === n.elementsNeedUpdate && (i = undefined, n.elementsNeedUpdate = false), undefined === i) return this.fromGeometry(n);
      i.verticesNeedUpdate = n.verticesNeedUpdate, i.normalsNeedUpdate = n.normalsNeedUpdate, i.colorsNeedUpdate = n.colorsNeedUpdate, i.uvsNeedUpdate = n.uvsNeedUpdate, i.groupsNeedUpdate = n.groupsNeedUpdate, n.verticesNeedUpdate = false, n.normalsNeedUpdate = false, n.colorsNeedUpdate = false, n.uvsNeedUpdate = false, n.groupsNeedUpdate = false, n = i;
    }
    return true === n.verticesNeedUpdate && (undefined !== (t = this.attributes.position) && (t.copyVector3sArray(n.vertices), t.needsUpdate = true), n.verticesNeedUpdate = false), true === n.normalsNeedUpdate && (undefined !== (t = this.attributes.normal) && (t.copyVector3sArray(n.normals), t.needsUpdate = true), n.normalsNeedUpdate = false), true === n.colorsNeedUpdate && (undefined !== (t = this.attributes.color) && (t.copyColorsArray(n.colors), t.needsUpdate = true), n.colorsNeedUpdate = false), n.uvsNeedUpdate && (undefined !== (t = this.attributes.uv) && (t.copyVector2sArray(n.uvs), t.needsUpdate = true), n.uvsNeedUpdate = false), n.lineDistancesNeedUpdate && (undefined !== (t = this.attributes.lineDistance) && (t.copyArray(n.lineDistances), t.needsUpdate = true), n.lineDistancesNeedUpdate = false), n.groupsNeedUpdate && (n.computeGroups(e.geometry), this.groups = n.groups, n.groupsNeedUpdate = false), this;
  }, fromGeometry: function (e) {
    return e.__directGeometry = (new er).fromGeometry(e), this.fromDirectGeometry(e.__directGeometry);
  }, fromDirectGeometry: function (e) {
    var t = new Float32Array(3 * e.vertices.length);
    if (this.addAttribute("position", new Hi(t, 3).copyVector3sArray(e.vertices)), e.normals.length > 0) {
      var n = new Float32Array(3 * e.normals.length);
      this.addAttribute("normal", new Hi(n, 3).copyVector3sArray(e.normals));
    }
    if (e.colors.length > 0) {
      var i = new Float32Array(3 * e.colors.length);
      this.addAttribute("color", new Hi(i, 3).copyColorsArray(e.colors));
    }
    if (e.uvs.length > 0) {
      var r = new Float32Array(2 * e.uvs.length);
      this.addAttribute("uv", new Hi(r, 2).copyVector2sArray(e.uvs));
    }
    if (e.uvs2.length > 0) {
      var o = new Float32Array(2 * e.uvs2.length);
      this.addAttribute("uv2", new Hi(o, 2).copyVector2sArray(e.uvs2));
    }
    for (var s in this.groups = e.groups, e.morphTargets) {
      for (var a = [], l = e.morphTargets[s], c = 0, h = l.length; c < h; c++) {
        var u = l[c], d = new Zi(3 * u.data.length, 3);
        d.name = u.name, a.push(d.copyVector3sArray(u.data));
      }
      this.morphAttributes[s] = a;
    }
    if (e.skinIndices.length > 0) {
      var p = new Zi(4 * e.skinIndices.length, 4);
      this.addAttribute("skinIndex", p.copyVector4sArray(e.skinIndices));
    }
    if (e.skinWeights.length > 0) {
      var m = new Zi(4 * e.skinWeights.length, 4);
      this.addAttribute("skinWeight", m.copyVector4sArray(e.skinWeights));
    }
    return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this;
  }, computeBoundingBox: function () {
    null === this.boundingBox && (this.boundingBox = new hi);
    var e = this.attributes.position, t = this.morphAttributes.position;
    if (undefined !== e) {
      if (this.boundingBox.setFromBufferAttribute(e), t) for (var n = 0, i = t.length; n < i; n++) {
        var r = t[n];
        sr.setFromBufferAttribute(r), this.boundingBox.expandByPoint(sr.min), this.boundingBox.expandByPoint(sr.max);
      }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
  }, computeBoundingSphere: function () {
    null === this.boundingSphere && (this.boundingSphere = new pi);
    var e = this.attributes.position, t = this.morphAttributes.position;
    if (e) {
      var n = this.boundingSphere.center;
      if (sr.setFromBufferAttribute(e), t) for (var i = 0, r = t.length; i < r; i++) {
        var o = t[i];
        ar.setFromBufferAttribute(o), sr.expandByPoint(ar.min), sr.expandByPoint(ar.max);
      }
      sr.getCenter(n);
      var s = 0;
      for (i = 0, r = e.count; i < r; i++) lr.fromBufferAttribute(e, i), s = Math.max(s, n.distanceToSquared(lr));
      if (t) for (i = 0, r = t.length; i < r; i++) for (var a = 0, l = (o = t[i]).count; a < l; a++) lr.fromBufferAttribute(o, a), s = Math.max(s, n.distanceToSquared(lr));
      this.boundingSphere.radius = Math.sqrt(s), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
    }
  }, computeFaceNormals: function () {}, computeVertexNormals: function () {
    var e = this.index, t = this.attributes;
    if (t.position) {
      var n = t.position.array;
      if (undefined === t.normal) this.addAttribute("normal", new Hi(new Float32Array(n.length), 3)); else for (var i = t.normal.array, r = 0, o = i.length; r < o; r++) i[r] = 0;
      var s, a, l, c = t.normal.array, h = new fn, u = new fn, d = new fn, p = new fn, m = new fn;
      if (e) {
        var f = e.array;
        for (r = 0, o = e.count; r < o; r += 3) s = 3 * f[r + 0], a = 3 * f[r + 1], l = 3 * f[r + 2], h.fromArray(n, s), u.fromArray(n, a), d.fromArray(n, l), p.subVectors(d, u), m.subVectors(h, u), p.cross(m), c[s] += p.x, c[s + 1] += p.y, c[s + 2] += p.z, c[a] += p.x, c[a + 1] += p.y, c[a + 2] += p.z, c[l] += p.x, c[l + 1] += p.y, c[l + 2] += p.z;
      } else for (r = 0, o = n.length; r < o; r += 9) h.fromArray(n, r), u.fromArray(n, r + 3), d.fromArray(n, r + 6), p.subVectors(d, u), m.subVectors(h, u), p.cross(m), c[r] = p.x, c[r + 1] = p.y, c[r + 2] = p.z, c[r + 3] = p.x, c[r + 4] = p.y, c[r + 5] = p.z, c[r + 6] = p.x, c[r + 7] = p.y, c[r + 8] = p.z;
      this.normalizeNormals(), t.normal.needsUpdate = true;
    }
  }, merge: function (e, t) {
    if (e && e.isBufferGeometry) {
      undefined === t && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
      var n = this.attributes;
      for (var i in n) if (undefined !== e.attributes[i]) for (var r = n[i].array, o = e.attributes[i], s = o.array, a = o.itemSize * t, l = Math.min(s.length, r.length - a), c = 0, h = a; c < l; c++, h++) r[h] = s[c];
      return this;
    }
    console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
  }, normalizeNormals: function () {
    for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++) lr.x = e.getX(t), lr.y = e.getY(t), lr.z = e.getZ(t), lr.normalize(), e.setXYZ(t, lr.x, lr.y, lr.z);
  }, toNonIndexed: function () {
    function e(e, t) {
      for (var n = e.array, i = e.itemSize, r = new n.constructor(t.length * i), o = 0, s = 0, a = 0, l = t.length; a < l; a++) {
        o = t[a] * i;
        for (var c = 0; c < i; c++) r[s++] = n[o++];
      }
      return new Hi(r, i);
    }
    if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
    var t = new cr, n = this.index.array, i = this.attributes;
    for (var r in i) {
      var o = e(i[r], n);
      t.addAttribute(r, o);
    }
    var s = this.morphAttributes;
    for (r in s) {
      for (var a = [], l = s[r], c = 0, h = l.length; c < h; c++) {
        o = e(l[c], n);
        a.push(o);
      }
      t.morphAttributes[r] = a;
    }
    for (var u = this.groups, d = (c = 0, u.length); c < d; c++) {
      var p = u[c];
      t.addGroup(p.start, p.count, p.materialIndex);
    }
    return t;
  }, toJSON: function () {
    var e = {metadata: {version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON"}};
    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), undefined !== this.parameters) {
      var t = this.parameters;
      for (var n in t) undefined !== t[n] && (e[n] = t[n]);
      return e;
    }
    e.data = {attributes: {}};
    var i = this.index;
    null !== i && (e.data.index = {type: i.array.constructor.name, array: Array.prototype.slice.call(i.array)});
    var r = this.attributes;
    for (var n in r) {
      var o = (d = r[n]).toJSON();
      "" !== d.name && (o.name = d.name), e.data.attributes[n] = o;
    }
    var s = {}, a = false;
    for (var n in this.morphAttributes) {
      for (var l = this.morphAttributes[n], c = [], h = 0, u = l.length; h < u; h++) {
        var d;
        o = (d = l[h]).toJSON();
        "" !== d.name && (o.name = d.name), c.push(o);
      }
      c.length > 0 && (s[n] = c, a = true);
    }
    a && (e.data.morphAttributes = s);
    var p = this.groups;
    p.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(p)));
    var m = this.boundingSphere;
    return null !== m && (e.data.boundingSphere = {center: m.center.toArray(), radius: m.radius}), e;
  }, clone: function () {
    return (new cr).copy(this);
  }, copy: function (e) {
    var t, n, i;
    this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
    var r = e.index;
    null !== r && this.setIndex(r.clone());
    var o = e.attributes;
    for (t in o) {
      var s = o[t];
      this.addAttribute(t, s.clone());
    }
    var a = e.morphAttributes;
    for (t in a) {
      var l = [], c = a[t];
      for (n = 0, i = c.length; n < i; n++) l.push(c[n].clone());
      this.morphAttributes[t] = l;
    }
    var h = e.groups;
    for (n = 0, i = h.length; n < i; n++) {
      var u = h[n];
      this.addGroup(u.start, u.count, u.materialIndex);
    }
    var d = e.boundingBox;
    null !== d && (this.boundingBox = d.clone());
    var p = e.boundingSphere;
    return null !== p && (this.boundingSphere = p.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }});
  var hr = new Ln, ur = new bi, dr = new pi, pr = new fn, mr = new fn, fr = new fn, gr = new fn, vr = new fn, yr = new fn, _r = new fn, xr = new fn, br = new fn, wr = new un, Sr = new un, Er = new un, qr = new fn, Tr = new fn;
  function Ar(e, t) {
    Jn.call(this), this.type = "Mesh", this.geometry = undefined !== e ? e : new cr, this.material = undefined !== t ? t : new Gi({color: 16777215 * Math.random()}), this.drawMode = kt, this.updateMorphTargets();
  }
  function Mr(e, t, n, i, r, o, s, a) {
    if (null === (t.side === y ? i.intersectTriangle(s, o, r, true, a) : i.intersectTriangle(r, o, s, t.side !== _, a))) return null;
    Tr.copy(a), Tr.applyMatrix4(e.matrixWorld);
    var l = n.ray.origin.distanceTo(Tr);
    return l < n.near || l > n.far ? null : {distance: l, point: Tr.clone(), object: e};
  }
  function Cr(e, t, n, i, r, o, s, a, l, c, h) {
    pr.fromBufferAttribute(r, l), mr.fromBufferAttribute(r, c), fr.fromBufferAttribute(r, h);
    var u = e.morphTargetInfluences;
    if (t.morphTargets && o && u) {
      _r.set(0, 0, 0), xr.set(0, 0, 0), br.set(0, 0, 0);
      for (var d = 0, p = o.length; d < p; d++) {
        var m = u[d], f = o[d];
        0 !== m && (gr.fromBufferAttribute(f, l), vr.fromBufferAttribute(f, c), yr.fromBufferAttribute(f, h), _r.addScaledVector(gr.sub(pr), m), xr.addScaledVector(vr.sub(mr), m), br.addScaledVector(yr.sub(fr), m));
      }
      pr.add(_r), mr.add(xr), fr.add(br);
    }
    var g = Mr(e, t, n, i, pr, mr, fr, qr);
    if (g) {
      s && (wr.fromBufferAttribute(s, l), Sr.fromBufferAttribute(s, c), Er.fromBufferAttribute(s, h), g.uv = Li.getUV(qr, pr, mr, fr, wr, Sr, Er, new un)), a && (wr.fromBufferAttribute(a, l), Sr.fromBufferAttribute(a, c), Er.fromBufferAttribute(a, h), g.uv2 = Li.getUV(qr, pr, mr, fr, wr, Sr, Er, new un));
      var v = new Ni(l, c, h);
      Li.getNormal(pr, mr, fr, v.normal), g.face = v;
    }
    return g;
  }
  Ar.prototype = Object.assign(Object.create(Jn.prototype), {constructor: Ar, isMesh: true, setDrawMode: function (e) {
    this.drawMode = e;
  }, copy: function (e) {
    return Jn.prototype.copy.call(this, e), this.drawMode = e.drawMode, undefined !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), undefined !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this;
  }, updateMorphTargets: function () {
    var e, t, n, i = this.geometry;
    if (i.isBufferGeometry) {
      var r = i.morphAttributes, o = Object.keys(r);
      if (o.length > 0) {
        var s = r[o[0]];
        if (undefined !== s) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = s.length; e < t; e++) n = s[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e;
      }
    } else {
      var a = i.morphTargets;
      undefined !== a && a.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
  }, raycast: function (e, t) {
    var n, i = this.geometry, r = this.material, o = this.matrixWorld;
    if (undefined !== r && (null === i.boundingSphere && i.computeBoundingSphere(), dr.copy(i.boundingSphere), dr.applyMatrix4(o), false !== e.ray.intersectsSphere(dr) && (hr.getInverse(o), ur.copy(e.ray).applyMatrix4(hr), null === i.boundingBox || false !== ur.intersectsBox(i.boundingBox)))) if (i.isBufferGeometry) {
      var s, a, l, c, h, u, d, p, m, f = i.index, g = i.attributes.position, v = i.morphAttributes.position, y = i.attributes.uv, _ = i.attributes.uv2, x = i.groups, b = i.drawRange;
      if (null !== f) if (Array.isArray(r)) for (c = 0, u = x.length; c < u; c++) for (m = r[(p = x[c]).materialIndex], h = Math.max(p.start, b.start), d = Math.min(p.start + p.count, b.start + b.count); h < d; h += 3) s = f.getX(h), a = f.getX(h + 1), l = f.getX(h + 2), (n = Cr(this, m, e, ur, g, v, y, _, s, a, l)) && (n.faceIndex = Math.floor(h / 3), n.face.materialIndex = p.materialIndex, t.push(n)); else for (c = Math.max(0, b.start), u = Math.min(f.count, b.start + b.count); c < u; c += 3) s = f.getX(c), a = f.getX(c + 1), l = f.getX(c + 2), (n = Cr(this, r, e, ur, g, v, y, _, s, a, l)) && (n.faceIndex = Math.floor(c / 3), t.push(n)); else if (undefined !== g) if (Array.isArray(r)) for (c = 0, u = x.length; c < u; c++) for (m = r[(p = x[c]).materialIndex], h = Math.max(p.start, b.start), d = Math.min(p.start + p.count, b.start + b.count); h < d; h += 3) (n = Cr(this, m, e, ur, g, v, y, _, s = h, a = h + 1, l = h + 2)) && (n.faceIndex = Math.floor(h / 3), n.face.materialIndex = p.materialIndex, t.push(n)); else for (c = Math.max(0, b.start), u = Math.min(g.count, b.start + b.count); c < u; c += 3) (n = Cr(this, r, e, ur, g, v, y, _, s = c, a = c + 1, l = c + 2)) && (n.faceIndex = Math.floor(c / 3), t.push(n));
    } else if (i.isGeometry) {
      var w, S, E, q, T = Array.isArray(r), A = i.vertices, M = i.faces, C = i.faceVertexUvs[0];
      C.length > 0 && (q = C);
      for (var k = 0, R = M.length; k < R; k++) {
        var L = M[k], P = T ? r[L.materialIndex] : r;
        if (undefined !== P && (w = A[L.a], S = A[L.b], E = A[L.c], n = Mr(this, P, e, ur, w, S, E, qr))) {
          if (q && q[k]) {
            var D = q[k];
            wr.copy(D[0]), Sr.copy(D[1]), Er.copy(D[2]), n.uv = Li.getUV(qr, w, S, E, wr, Sr, Er, new un);
          }
          n.face = L, n.faceIndex = k, t.push(n);
        }
      }
    }
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }});
  var kr = 0, Rr = new Ln, Lr = new Jn, Pr = new fn;
  function Dr() {
    Object.defineProperty(this, "id", {value: kr += 2}), this.uuid = hn.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = false, this.verticesNeedUpdate = false, this.uvsNeedUpdate = false, this.normalsNeedUpdate = false, this.colorsNeedUpdate = false, this.lineDistancesNeedUpdate = false, this.groupsNeedUpdate = false;
  }
  function Or(e, t, n, i, r, o) {
    Dr.call(this), this.type = "BoxGeometry", this.parameters = {width: e, height: t, depth: n, widthSegments: i, heightSegments: r, depthSegments: o}, this.fromBufferGeometry(new Ir(e, t, n, i, r, o)), this.mergeVertices();
  }
  function Ir(e, t, n, i, r, o) {
    cr.call(this), this.type = "BoxBufferGeometry", this.parameters = {width: e, height: t, depth: n, widthSegments: i, heightSegments: r, depthSegments: o};
    var s = this;
    e = e || 1, t = t || 1, n = n || 1, i = Math.floor(i) || 1, r = Math.floor(r) || 1, o = Math.floor(o) || 1;
    var a = [], l = [], c = [], h = [], u = 0, d = 0;
    function p(e, t, n, i, r, o, p, m, f, g, v) {
      var y, _, x = o / f, b = p / g, w = o / 2, S = p / 2, E = m / 2, q = f + 1, T = g + 1, A = 0, M = 0, C = new fn;
      for (_ = 0; _ < T; _++) {
        var k = _ * b - S;
        for (y = 0; y < q; y++) {
          var R = y * x - w;
          C[e] = R * i, C[t] = k * r, C[n] = E, l.push(C.x, C.y, C.z), C[e] = 0, C[t] = 0, C[n] = m > 0 ? 1 : -1, c.push(C.x, C.y, C.z), h.push(y / f), h.push(1 - _ / g), A += 1;
        }
      }
      for (_ = 0; _ < g; _++) for (y = 0; y < f; y++) {
        var L = u + y + q * _, P = u + y + q * (_ + 1), D = u + (y + 1) + q * (_ + 1), O = u + (y + 1) + q * _;
        a.push(L, P, O), a.push(P, D, O), M += 6;
      }
      s.addGroup(d, M, v), d += M, u += A;
    }
    p("z", "y", "x", -1, -1, n, t, e, o, r, 0), p("z", "y", "x", 1, -1, n, t, -e, o, r, 1), p("x", "z", "y", 1, 1, e, n, t, i, o, 2), p("x", "z", "y", 1, -1, e, n, -t, i, o, 3), p("x", "y", "z", 1, -1, e, t, n, i, r, 4), p("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(a), this.addAttribute("position", new Zi(l, 3)), this.addAttribute("normal", new Zi(c, 3)), this.addAttribute("uv", new Zi(h, 2));
  }
  function Br(e) {
    var t = {};
    for (var n in e) for (var i in t[n] = {}, e[n]) {
      var r = e[n][i];
      r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? t[n][i] = r.clone() : Array.isArray(r) ? t[n][i] = r.slice() : t[n][i] = r;
    }
    return t;
  }
  function Fr(e) {
    for (var t = {}, n = 0; n < e.length; n++) {
      var i = Br(e[n]);
      for (var r in i) t[r] = i[r];
    }
    return t;
  }
  Dr.prototype = Object.assign(Object.create(i.prototype), {constructor: Dr, isGeometry: true, applyMatrix: function (e) {
    for (var t = (new yn).getNormalMatrix(e), n = 0, i = this.vertices.length; n < i; n++) {
      this.vertices[n].applyMatrix4(e);
    }
    for (n = 0, i = this.faces.length; n < i; n++) {
      var r = this.faces[n];
      r.normal.applyMatrix3(t).normalize();
      for (var o = 0, s = r.vertexNormals.length; o < s; o++) r.vertexNormals[o].applyMatrix3(t).normalize();
    }
    return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = true, this.normalsNeedUpdate = true, this;
  }, rotateX: function (e) {
    return Rr.makeRotationX(e), this.applyMatrix(Rr), this;
  }, rotateY: function (e) {
    return Rr.makeRotationY(e), this.applyMatrix(Rr), this;
  }, rotateZ: function (e) {
    return Rr.makeRotationZ(e), this.applyMatrix(Rr), this;
  }, translate: function (e, t, n) {
    return Rr.makeTranslation(e, t, n), this.applyMatrix(Rr), this;
  }, scale: function (e, t, n) {
    return Rr.makeScale(e, t, n), this.applyMatrix(Rr), this;
  }, lookAt: function (e) {
    return Lr.lookAt(e), Lr.updateMatrix(), this.applyMatrix(Lr.matrix), this;
  }, fromBufferGeometry: function (e) {
    var t = this, n = null !== e.index ? e.index.array : undefined, i = e.attributes, r = i.position.array, o = undefined !== i.normal ? i.normal.array : undefined, s = undefined !== i.color ? i.color.array : undefined, a = undefined !== i.uv ? i.uv.array : undefined, l = undefined !== i.uv2 ? i.uv2.array : undefined;
    undefined !== l && (this.faceVertexUvs[1] = []);
    for (var c = 0; c < r.length; c += 3) t.vertices.push((new fn).fromArray(r, c)), undefined !== s && t.colors.push((new Ii).fromArray(s, c));
    function h(e, n, i, r) {
      var c = undefined === s ? [] : [t.colors[e].clone(), t.colors[n].clone(), t.colors[i].clone()], h = new Ni(e, n, i, undefined === o ? [] : [(new fn).fromArray(o, 3 * e), (new fn).fromArray(o, 3 * n), (new fn).fromArray(o, 3 * i)], c, r);
      t.faces.push(h), undefined !== a && t.faceVertexUvs[0].push([(new un).fromArray(a, 2 * e), (new un).fromArray(a, 2 * n), (new un).fromArray(a, 2 * i)]), undefined !== l && t.faceVertexUvs[1].push([(new un).fromArray(l, 2 * e), (new un).fromArray(l, 2 * n), (new un).fromArray(l, 2 * i)]);
    }
    var u = e.groups;
    if (u.length > 0) for (c = 0; c < u.length; c++) for (var d = u[c], p = d.start, m = p, f = p + d.count; m < f; m += 3) undefined !== n ? h(n[m], n[m + 1], n[m + 2], d.materialIndex) : h(m, m + 1, m + 2, d.materialIndex); else if (undefined !== n) for (c = 0; c < n.length; c += 3) h(n[c], n[c + 1], n[c + 2]); else for (c = 0; c < r.length / 3; c += 3) h(c, c + 1, c + 2);
    return this.computeFaceNormals(), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), this;
  }, center: function () {
    return this.computeBoundingBox(), this.boundingBox.getCenter(Pr).negate(), this.translate(Pr.x, Pr.y, Pr.z), this;
  }, normalize: function () {
    this.computeBoundingSphere();
    var e = this.boundingSphere.center, t = this.boundingSphere.radius, n = 0 === t ? 1 : 1 / t, i = new Ln;
    return i.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1), this.applyMatrix(i), this;
  }, computeFaceNormals: function () {
    for (var e = new fn, t = new fn, n = 0, i = this.faces.length; n < i; n++) {
      var r = this.faces[n], o = this.vertices[r.a], s = this.vertices[r.b], a = this.vertices[r.c];
      e.subVectors(a, s), t.subVectors(o, s), e.cross(t), e.normalize(), r.normal.copy(e);
    }
  }, computeVertexNormals: function (e) {
    var t, n, i, r, o, s;
    for (undefined === e && (e = true), s = new Array(this.vertices.length), t = 0, n = this.vertices.length; t < n; t++) s[t] = new fn;
    if (e) {
      var a, l, c, h = new fn, u = new fn;
      for (i = 0, r = this.faces.length; i < r; i++) o = this.faces[i], a = this.vertices[o.a], l = this.vertices[o.b], c = this.vertices[o.c], h.subVectors(c, l), u.subVectors(a, l), h.cross(u), s[o.a].add(h), s[o.b].add(h), s[o.c].add(h);
    } else for (this.computeFaceNormals(), i = 0, r = this.faces.length; i < r; i++) s[(o = this.faces[i]).a].add(o.normal), s[o.b].add(o.normal), s[o.c].add(o.normal);
    for (t = 0, n = this.vertices.length; t < n; t++) s[t].normalize();
    for (i = 0, r = this.faces.length; i < r; i++) {
      var d = (o = this.faces[i]).vertexNormals;
      3 === d.length ? (d[0].copy(s[o.a]), d[1].copy(s[o.b]), d[2].copy(s[o.c])) : (d[0] = s[o.a].clone(), d[1] = s[o.b].clone(), d[2] = s[o.c].clone());
    }
    this.faces.length > 0 && (this.normalsNeedUpdate = true);
  }, computeFlatVertexNormals: function () {
    var e, t, n;
    for (this.computeFaceNormals(), e = 0, t = this.faces.length; e < t; e++) {
      var i = (n = this.faces[e]).vertexNormals;
      3 === i.length ? (i[0].copy(n.normal), i[1].copy(n.normal), i[2].copy(n.normal)) : (i[0] = n.normal.clone(), i[1] = n.normal.clone(), i[2] = n.normal.clone());
    }
    this.faces.length > 0 && (this.normalsNeedUpdate = true);
  }, computeMorphNormals: function () {
    var e, t, n, i, r;
    for (n = 0, i = this.faces.length; n < i; n++) for ((r = this.faces[n]).__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(), r.__originalVertexNormals || (r.__originalVertexNormals = []), e = 0, t = r.vertexNormals.length; e < t; e++) r.__originalVertexNormals[e] ? r.__originalVertexNormals[e].copy(r.vertexNormals[e]) : r.__originalVertexNormals[e] = r.vertexNormals[e].clone();
    var o = new Dr;
    for (o.faces = this.faces, e = 0, t = this.morphTargets.length; e < t; e++) {
      if (!this.morphNormals[e]) {
        this.morphNormals[e] = {}, this.morphNormals[e].faceNormals = [], this.morphNormals[e].vertexNormals = [];
        var s = this.morphNormals[e].faceNormals, a = this.morphNormals[e].vertexNormals;
        for (n = 0, i = this.faces.length; n < i; n++) l = new fn, c = {a: new fn, b: new fn, c: new fn}, s.push(l), a.push(c);
      }
      var l, c, h = this.morphNormals[e];
      for (o.vertices = this.morphTargets[e].vertices, o.computeFaceNormals(), o.computeVertexNormals(), n = 0, i = this.faces.length; n < i; n++) r = this.faces[n], l = h.faceNormals[n], c = h.vertexNormals[n], l.copy(r.normal), c.a.copy(r.vertexNormals[0]), c.b.copy(r.vertexNormals[1]), c.c.copy(r.vertexNormals[2]);
    }
    for (n = 0, i = this.faces.length; n < i; n++) (r = this.faces[n]).normal = r.__originalFaceNormal, r.vertexNormals = r.__originalVertexNormals;
  }, computeBoundingBox: function () {
    null === this.boundingBox && (this.boundingBox = new hi), this.boundingBox.setFromPoints(this.vertices);
  }, computeBoundingSphere: function () {
    null === this.boundingSphere && (this.boundingSphere = new pi), this.boundingSphere.setFromPoints(this.vertices);
  }, merge: function (e, t, n) {
    if (e && e.isGeometry) {
      var i, r = this.vertices.length, o = this.vertices, s = e.vertices, a = this.faces, l = e.faces, c = this.colors, h = e.colors;
      undefined === n && (n = 0), undefined !== t && (i = (new yn).getNormalMatrix(t));
      for (var u = 0, d = s.length; u < d; u++) {
        var p = s[u].clone();
        undefined !== t && p.applyMatrix4(t), o.push(p);
      }
      for (u = 0, d = h.length; u < d; u++) c.push(h[u].clone());
      for (u = 0, d = l.length; u < d; u++) {
        var m, f, g, v = l[u], y = v.vertexNormals, _ = v.vertexColors;
        (m = new Ni(v.a + r, v.b + r, v.c + r)).normal.copy(v.normal), undefined !== i && m.normal.applyMatrix3(i).normalize();
        for (var x = 0, b = y.length; x < b; x++) f = y[x].clone(), undefined !== i && f.applyMatrix3(i).normalize(), m.vertexNormals.push(f);
        m.color.copy(v.color);
        for (x = 0, b = _.length; x < b; x++) g = _[x], m.vertexColors.push(g.clone());
        m.materialIndex = v.materialIndex + n, a.push(m);
      }
      for (u = 0, d = e.faceVertexUvs.length; u < d; u++) {
        var w = e.faceVertexUvs[u];
        undefined === this.faceVertexUvs[u] && (this.faceVertexUvs[u] = []);
        for (x = 0, b = w.length; x < b; x++) {
          for (var S = w[x], E = [], q = 0, T = S.length; q < T; q++) E.push(S[q].clone());
          this.faceVertexUvs[u].push(E);
        }
      }
    } else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e);
  }, mergeMesh: function (e) {
    e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(), this.merge(e.geometry, e.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e);
  }, mergeVertices: function () {
    var e, t, n, i, r, o, s, a, l = {}, c = [], h = [], u = Math.pow(10, 4);
    for (n = 0, i = this.vertices.length; n < i; n++) e = this.vertices[n], undefined === l[t = Math.round(e.x * u) + "_" + Math.round(e.y * u) + "_" + Math.round(e.z * u)] ? (l[t] = n, c.push(this.vertices[n]), h[n] = c.length - 1) : h[n] = h[l[t]];
    var d = [];
    for (n = 0, i = this.faces.length; n < i; n++) {
      (r = this.faces[n]).a = h[r.a], r.b = h[r.b], r.c = h[r.c], o = [r.a, r.b, r.c];
      for (var p = 0; p < 3; p++) if (o[p] === o[(p + 1) % 3]) {
        d.push(n);
        break;
      }
    }
    for (n = d.length - 1; n >= 0; n--) {
      var m = d[n];
      for (this.faces.splice(m, 1), s = 0, a = this.faceVertexUvs.length; s < a; s++) this.faceVertexUvs[s].splice(m, 1);
    }
    var f = this.vertices.length - c.length;
    return this.vertices = c, f;
  }, setFromPoints: function (e) {
    this.vertices = [];
    for (var t = 0, n = e.length; t < n; t++) {
      var i = e[t];
      this.vertices.push(new fn(i.x, i.y, i.z || 0));
    }
    return this;
  }, sortFacesByMaterialIndex: function () {
    for (var e = this.faces, t = e.length, n = 0; n < t; n++) e[n]._id = n;
    e.sort(function (e, t) {
      return e.materialIndex - t.materialIndex;
    });
    var i, r, o = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
    o && o.length === t && (i = []), s && s.length === t && (r = []);
    for (n = 0; n < t; n++) {
      var a = e[n]._id;
      i && i.push(o[a]), r && r.push(s[a]);
    }
    i && (this.faceVertexUvs[0] = i), r && (this.faceVertexUvs[1] = r);
  }, toJSON: function () {
    var e = {metadata: {version: 4.5, type: "Geometry", generator: "Geometry.toJSON"}};
    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), undefined !== this.parameters) {
      var t = this.parameters;
      for (var n in t) undefined !== t[n] && (e[n] = t[n]);
      return e;
    }
    for (var i = [], r = 0; r < this.vertices.length; r++) {
      var o = this.vertices[r];
      i.push(o.x, o.y, o.z);
    }
    var s = [], a = [], l = {}, c = [], h = {}, u = [], d = {};
    for (r = 0; r < this.faces.length; r++) {
      var p = this.faces[r], m = undefined !== this.faceVertexUvs[0][r], f = p.normal.length() > 0, g = p.vertexNormals.length > 0, v = 1 !== p.color.r || 1 !== p.color.g || 1 !== p.color.b, y = p.vertexColors.length > 0, _ = 0;
      if (_ = S(_, 0, 0), _ = S(_, 1, true), _ = S(_, 2, false), _ = S(_, 3, m), _ = S(_, 4, f), _ = S(_, 5, g), _ = S(_, 6, v), _ = S(_, 7, y), s.push(_), s.push(p.a, p.b, p.c), s.push(p.materialIndex), m) {
        var x = this.faceVertexUvs[0][r];
        s.push(T(x[0]), T(x[1]), T(x[2]));
      }
      if (f && s.push(E(p.normal)), g) {
        var b = p.vertexNormals;
        s.push(E(b[0]), E(b[1]), E(b[2]));
      }
      if (v && s.push(q(p.color)), y) {
        var w = p.vertexColors;
        s.push(q(w[0]), q(w[1]), q(w[2]));
      }
    }
    function S(e, t, n) {
      return n ? e | 1 << t : e & ~(1 << t);
    }
    function E(e) {
      var t = e.x.toString() + e.y.toString() + e.z.toString();
      return undefined !== l[t] ? l[t] : (l[t] = a.length / 3, a.push(e.x, e.y, e.z), l[t]);
    }
    function q(e) {
      var t = e.r.toString() + e.g.toString() + e.b.toString();
      return undefined !== h[t] ? h[t] : (h[t] = c.length, c.push(e.getHex()), h[t]);
    }
    function T(e) {
      var t = e.x.toString() + e.y.toString();
      return undefined !== d[t] ? d[t] : (d[t] = u.length / 2, u.push(e.x, e.y), d[t]);
    }
    return e.data = {}, e.data.vertices = i, e.data.normals = a, c.length > 0 && (e.data.colors = c), u.length > 0 && (e.data.uvs = [u]), e.data.faces = s, e;
  }, clone: function () {
    return (new Dr).copy(this);
  }, copy: function (e) {
    var t, n, i, r, o, s;
    this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
    var a = e.vertices;
    for (t = 0, n = a.length; t < n; t++) this.vertices.push(a[t].clone());
    var l = e.colors;
    for (t = 0, n = l.length; t < n; t++) this.colors.push(l[t].clone());
    var c = e.faces;
    for (t = 0, n = c.length; t < n; t++) this.faces.push(c[t].clone());
    for (t = 0, n = e.faceVertexUvs.length; t < n; t++) {
      var h = e.faceVertexUvs[t];
      for (undefined === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []), i = 0, r = h.length; i < r; i++) {
        var u = h[i], d = [];
        for (o = 0, s = u.length; o < s; o++) {
          var p = u[o];
          d.push(p.clone());
        }
        this.faceVertexUvs[t].push(d);
      }
    }
    var m = e.morphTargets;
    for (t = 0, n = m.length; t < n; t++) {
      var f = {};
      if (f.name = m[t].name, undefined !== m[t].vertices) for (f.vertices = [], i = 0, r = m[t].vertices.length; i < r; i++) f.vertices.push(m[t].vertices[i].clone());
      if (undefined !== m[t].normals) for (f.normals = [], i = 0, r = m[t].normals.length; i < r; i++) f.normals.push(m[t].normals[i].clone());
      this.morphTargets.push(f);
    }
    var g = e.morphNormals;
    for (t = 0, n = g.length; t < n; t++) {
      var v = {};
      if (undefined !== g[t].vertexNormals) for (v.vertexNormals = [], i = 0, r = g[t].vertexNormals.length; i < r; i++) {
        var y = g[t].vertexNormals[i], _ = {};
        _.a = y.a.clone(), _.b = y.b.clone(), _.c = y.c.clone(), v.vertexNormals.push(_);
      }
      if (undefined !== g[t].faceNormals) for (v.faceNormals = [], i = 0, r = g[t].faceNormals.length; i < r; i++) v.faceNormals.push(g[t].faceNormals[i].clone());
      this.morphNormals.push(v);
    }
    var x = e.skinWeights;
    for (t = 0, n = x.length; t < n; t++) this.skinWeights.push(x[t].clone());
    var b = e.skinIndices;
    for (t = 0, n = b.length; t < n; t++) this.skinIndices.push(b[t].clone());
    var w = e.lineDistances;
    for (t = 0, n = w.length; t < n; t++) this.lineDistances.push(w[t]);
    var S = e.boundingBox;
    null !== S && (this.boundingBox = S.clone());
    var E = e.boundingSphere;
    return null !== E && (this.boundingSphere = E.clone()), this.elementsNeedUpdate = e.elementsNeedUpdate, this.verticesNeedUpdate = e.verticesNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }}), Or.prototype = Object.create(Dr.prototype), Or.prototype.constructor = Or, Ir.prototype = Object.create(cr.prototype), Ir.prototype.constructor = Ir;
  var zr = {clone: Br, merge: Fr}, Nr = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", Ur = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";
  function Vr(e) {
    Vi.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = Nr, this.fragmentShader = Ur, this.linewidth = 1, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.clipping = false, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.extensions = {derivatives: false, fragDepth: false, drawBuffers: false, shaderTextureLOD: false}, this.defaultAttributeValues = {color: [1, 1, 1], uv: [0, 0], uv2: [0, 0]}, this.index0AttributeName = undefined, this.uniformsNeedUpdate = false, undefined !== e && (undefined !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
  }
  function Gr() {
    Jn.call(this), this.type = "Camera", this.matrixWorldInverse = new Ln, this.projectionMatrix = new Ln, this.projectionMatrixInverse = new Ln;
  }
  function Hr(e, t, n, i) {
    Gr.call(this), this.type = "PerspectiveCamera", this.fov = undefined !== e ? e : 50, this.zoom = 1, this.near = undefined !== n ? n : 0.1, this.far = undefined !== i ? i : 2e3, this.focus = 10, this.aspect = undefined !== t ? t : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
  }
  Vr.prototype = Object.create(Vi.prototype), Vr.prototype.constructor = Vr, Vr.prototype.isShaderMaterial = true, Vr.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Br(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this.extensions = e.extensions, this;
  }, Vr.prototype.toJSON = function (e) {
    var t = Vi.prototype.toJSON.call(this, e);
    for (var n in t.uniforms = {}, this.uniforms) {
      var i = this.uniforms[n].value;
      i && i.isTexture ? t.uniforms[n] = {type: "t", value: i.toJSON(e).uuid} : i && i.isColor ? t.uniforms[n] = {type: "c", value: i.getHex()} : i && i.isVector2 ? t.uniforms[n] = {type: "v2", value: i.toArray()} : i && i.isVector3 ? t.uniforms[n] = {type: "v3", value: i.toArray()} : i && i.isVector4 ? t.uniforms[n] = {type: "v4", value: i.toArray()} : i && i.isMatrix3 ? t.uniforms[n] = {type: "m3", value: i.toArray()} : i && i.isMatrix4 ? t.uniforms[n] = {type: "m4", value: i.toArray()} : t.uniforms[n] = {value: i};
    }
    Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
    var r = {};
    for (var o in this.extensions) true === this.extensions[o] && (r[o] = true);
    return Object.keys(r).length > 0 && (t.extensions = r), t;
  }, Gr.prototype = Object.assign(Object.create(Jn.prototype), {constructor: Gr, isCamera: true, copy: function (e, t) {
    return Jn.prototype.copy.call(this, e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
  }, getWorldDirection: function (e) {
    undefined === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), e = new fn), this.updateMatrixWorld(true);
    var t = this.matrixWorld.elements;
    return e.set(-t[8], -t[9], -t[10]).normalize();
  }, updateMatrixWorld: function (e) {
    Jn.prototype.updateMatrixWorld.call(this, e), this.matrixWorldInverse.getInverse(this.matrixWorld);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }}), Hr.prototype = Object.assign(Object.create(Gr.prototype), {constructor: Hr, isPerspectiveCamera: true, copy: function (e, t) {
    return Gr.prototype.copy.call(this, e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = null === e.view ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
  }, setFocalLength: function (e) {
    var t = 0.5 * this.getFilmHeight() / e;
    this.fov = 2 * hn.RAD2DEG * Math.atan(t), this.updateProjectionMatrix();
  }, getFocalLength: function () {
    var e = Math.tan(0.5 * hn.DEG2RAD * this.fov);
    return 0.5 * this.getFilmHeight() / e;
  }, getEffectiveFOV: function () {
    return 2 * hn.RAD2DEG * Math.atan(Math.tan(0.5 * hn.DEG2RAD * this.fov) / this.zoom);
  }, getFilmWidth: function () {
    return this.filmGauge * Math.min(this.aspect, 1);
  }, getFilmHeight: function () {
    return this.filmGauge / Math.max(this.aspect, 1);
  }, setViewOffset: function (e, t, n, i, r, o) {
    this.aspect = e / t, null === this.view && (this.view = {enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1}), this.view.enabled = true, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
  }, clearViewOffset: function () {
    null !== this.view && (this.view.enabled = false), this.updateProjectionMatrix();
  }, updateProjectionMatrix: function () {
    var e = this.near, t = e * Math.tan(0.5 * hn.DEG2RAD * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -0.5 * i, o = this.view;
    if (null !== this.view && this.view.enabled) {
      var s = o.fullWidth, a = o.fullHeight;
      r += o.offsetX * i / s, t -= o.offsetY * n / a, i *= o.width / s, n *= o.height / a;
    }
    var l = this.filmOffset;
    0 !== l && (r += e * l / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix);
  }, toJSON: function (e) {
    var t = Jn.prototype.toJSON.call(this, e);
    return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
  }});
  var jr = 90, $r = 1;
  function Wr(e, t, n, i) {
    Jn.call(this), this.type = "CubeCamera";
    var r = new Hr(jr, $r, e, t);
    r.up.set(0, -1, 0), r.lookAt(new fn(1, 0, 0)), this.add(r);
    var o = new Hr(jr, $r, e, t);
    o.up.set(0, -1, 0), o.lookAt(new fn(-1, 0, 0)), this.add(o);
    var s = new Hr(jr, $r, e, t);
    s.up.set(0, 0, 1), s.lookAt(new fn(0, 1, 0)), this.add(s);
    var a = new Hr(jr, $r, e, t);
    a.up.set(0, 0, -1), a.lookAt(new fn(0, -1, 0)), this.add(a);
    var l = new Hr(jr, $r, e, t);
    l.up.set(0, -1, 0), l.lookAt(new fn(0, 0, 1)), this.add(l);
    var c = new Hr(jr, $r, e, t);
    c.up.set(0, -1, 0), c.lookAt(new fn(0, 0, -1)), this.add(c), i = i || {format: He, magFilter: Te, minFilter: Te}, this.renderTarget = new Xr(n, n, i), this.renderTarget.texture.name = "CubeCamera", this.update = function (e, t) {
      null === this.parent && this.updateMatrixWorld();
      var n = e.getRenderTarget(), i = this.renderTarget, h = i.texture.generateMipmaps;
      i.texture.generateMipmaps = false, e.setRenderTarget(i, 0), e.render(t, r), e.setRenderTarget(i, 1), e.render(t, o), e.setRenderTarget(i, 2), e.render(t, s), e.setRenderTarget(i, 3), e.render(t, a), e.setRenderTarget(i, 4), e.render(t, l), i.texture.generateMipmaps = h, e.setRenderTarget(i, 5), e.render(t, c), e.setRenderTarget(n);
    }, this.clear = function (e, t, n, i) {
      for (var r = e.getRenderTarget(), o = this.renderTarget, s = 0; s < 6; s++) e.setRenderTarget(o, s), e.clear(t, n, i);
      e.setRenderTarget(r);
    };
  }
  function Xr(e, t, n) {
    Sn.call(this, e, t, n);
  }
  function Yr(e, t, n, i, r, o, s, a, l, c, h, u) {
    bn.call(this, null, o, s, a, l, c, i, r, h, u), this.image = {data: e, width: t, height: n}, this.magFilter = undefined !== l ? l : be, this.minFilter = undefined !== c ? c : be, this.generateMipmaps = false, this.flipY = false, this.unpackAlignment = 1;
  }
  Wr.prototype = Object.create(Jn.prototype), Wr.prototype.constructor = Wr, Xr.prototype = Object.create(Sn.prototype), Xr.prototype.constructor = Xr, Xr.prototype.isWebGLRenderTargetCube = true, Xr.prototype.fromEquirectangularTexture = function (e, t) {
    this.texture.type = t.type, this.texture.format = t.format, this.texture.encoding = t.encoding;
    var n = new Kn, i = {uniforms: {tEquirect: {value: null}}, vertexShader: ["varying vec3 vWorldDirection;", "vec3 transformDirection( in vec3 dir, in mat4 matrix ) {", "	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );", "}", "void main() {", "	vWorldDirection = transformDirection( position, modelMatrix );", "	#include <begin_vertex>", "	#include <project_vertex>", "}"].join("\n"), fragmentShader: ["uniform sampler2D tEquirect;", "varying vec3 vWorldDirection;", "#define RECIPROCAL_PI 0.31830988618", "#define RECIPROCAL_PI2 0.15915494", "void main() {", "	vec3 direction = normalize( vWorldDirection );", "	vec2 sampleUV;", "	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;", "	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "	gl_FragColor = texture2D( tEquirect, sampleUV );", "}"].join("\n")}, r = new Vr({type: "CubemapFromEquirect", uniforms: Br(i.uniforms), vertexShader: i.vertexShader, fragmentShader: i.fragmentShader, side: y, blending: q});
    r.uniforms.tEquirect.value = t;
    var o = new Ar(new Ir(5, 5, 5), r);
    n.add(o);
    var s = new Wr(1, 10, 1);
    return s.renderTarget = this, s.renderTarget.texture.name = "CubeCameraTexture", s.update(e, n), o.geometry.dispose(), o.material.dispose(), this;
  }, Yr.prototype = Object.create(bn.prototype), Yr.prototype.constructor = Yr, Yr.prototype.isDataTexture = true;
  var Jr = new fn, Kr = new fn, Zr = new yn;
  function Qr(e, t) {
    this.normal = undefined !== e ? e : new fn(1, 0, 0), this.constant = undefined !== t ? t : 0;
  }
  Object.assign(Qr.prototype, {isPlane: true, set: function (e, t) {
    return this.normal.copy(e), this.constant = t, this;
  }, setComponents: function (e, t, n, i) {
    return this.normal.set(e, t, n), this.constant = i, this;
  }, setFromNormalAndCoplanarPoint: function (e, t) {
    return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
  }, setFromCoplanarPoints: function (e, t, n) {
    var i = Jr.subVectors(n, t).cross(Kr.subVectors(e, t)).normalize();
    return this.setFromNormalAndCoplanarPoint(i, e), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.normal.copy(e.normal), this.constant = e.constant, this;
  }, normalize: function () {
    var e = 1 / this.normal.length();
    return this.normal.multiplyScalar(e), this.constant *= e, this;
  }, negate: function () {
    return this.constant *= -1, this.normal.negate(), this;
  }, distanceToPoint: function (e) {
    return this.normal.dot(e) + this.constant;
  }, distanceToSphere: function (e) {
    return this.distanceToPoint(e.center) - e.radius;
  }, projectPoint: function (e, t) {
    return undefined === t && (console.warn("THREE.Plane: .projectPoint() target is now required"), t = new fn), t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
  }, intersectLine: function (e, t) {
    undefined === t && (console.warn("THREE.Plane: .intersectLine() target is now required"), t = new fn);
    var n = e.delta(Jr), i = this.normal.dot(n);
    if (0 === i) return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : undefined;
    var r = -(e.start.dot(this.normal) + this.constant) / i;
    return r < 0 || r > 1 ? undefined : t.copy(n).multiplyScalar(r).add(e.start);
  }, intersectsLine: function (e) {
    var t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
    return t < 0 && n > 0 || n < 0 && t > 0;
  }, intersectsBox: function (e) {
    return e.intersectsPlane(this);
  }, intersectsSphere: function (e) {
    return e.intersectsPlane(this);
  }, coplanarPoint: function (e) {
    return undefined === e && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), e = new fn), e.copy(this.normal).multiplyScalar(-this.constant);
  }, applyMatrix4: function (e, t) {
    var n = t || Zr.getNormalMatrix(e), i = this.coplanarPoint(Jr).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
    return this.constant = -i.dot(r), this;
  }, translate: function (e) {
    return this.constant -= e.dot(this.normal), this;
  }, equals: function (e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }});
  var eo = new pi, to = new fn;
  function no(e, t, n, i, r, o) {
    this.planes = [undefined !== e ? e : new Qr, undefined !== t ? t : new Qr, undefined !== n ? n : new Qr, undefined !== i ? i : new Qr, undefined !== r ? r : new Qr, undefined !== o ? o : new Qr];
  }
  Object.assign(no.prototype, {set: function (e, t, n, i, r, o) {
    var s = this.planes;
    return s[0].copy(e), s[1].copy(t), s[2].copy(n), s[3].copy(i), s[4].copy(r), s[5].copy(o), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
    return this;
  }, setFromMatrix: function (e) {
    var t = this.planes, n = e.elements, i = n[0], r = n[1], o = n[2], s = n[3], a = n[4], l = n[5], c = n[6], h = n[7], u = n[8], d = n[9], p = n[10], m = n[11], f = n[12], g = n[13], v = n[14], y = n[15];
    return t[0].setComponents(s - i, h - a, m - u, y - f).normalize(), t[1].setComponents(s + i, h + a, m + u, y + f).normalize(), t[2].setComponents(s + r, h + l, m + d, y + g).normalize(), t[3].setComponents(s - r, h - l, m - d, y - g).normalize(), t[4].setComponents(s - o, h - c, m - p, y - v).normalize(), t[5].setComponents(s + o, h + c, m + p, y + v).normalize(), this;
  }, intersectsObject: function (e) {
    var t = e.geometry;
    return null === t.boundingSphere && t.computeBoundingSphere(), eo.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(eo);
  }, intersectsSprite: function (e) {
    return eo.center.set(0, 0, 0), eo.radius = 0.7071067811865476, eo.applyMatrix4(e.matrixWorld), this.intersectsSphere(eo);
  }, intersectsSphere: function (e) {
    for (var t = this.planes, n = e.center, i = -e.radius, r = 0; r < 6; r++) {
      if (t[r].distanceToPoint(n) < i) return false;
    }
    return true;
  }, intersectsBox: function (e) {
    for (var t = this.planes, n = 0; n < 6; n++) {
      var i = t[n];
      if (to.x = i.normal.x > 0 ? e.max.x : e.min.x, to.y = i.normal.y > 0 ? e.max.y : e.min.y, to.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(to) < 0) return false;
    }
    return true;
  }, containsPoint: function (e) {
    for (var t = this.planes, n = 0; n < 6; n++) if (t[n].distanceToPoint(e) < 0) return false;
    return true;
  }});
  var io = {alphamap_fragment: "#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif", alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif", alphatest_fragment: "#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif", aomap_fragment: "#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif", aomap_pars_fragment: "#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif", begin_vertex: "vec3 transformed = vec3( position );", beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif", bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	return vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n#else\n	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n	}\n	return 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n	return Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + viewDir );\n	float dotNL = saturate( dot( normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE  = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS  = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	return specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	vec3 FssEss = F * brdf.x + brdf.y;\n	float Ess = brdf.x + brdf.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n	float invAlpha  = 1.0 / roughness;\n	float cos2h = NoH * NoH;\n	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n	vec3 N = geometry.normal;\n	vec3 V = geometry.viewDir;\n	vec3 H = normalize( V + L );\n	float dotNH = saturate( dot( N, H ) );\n	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif", bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif", clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		if ( clipped ) discard;\n	#endif\n#endif", clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n	#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n		varying vec3 vViewPosition;\n	#endif\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif", clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n	varying vec3 vViewPosition;\n#endif", clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n	vViewPosition = - mvPosition.xyz;\n#endif", color_fragment: "#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif", color_pars_fragment: "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif", color_pars_vertex: "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif", color_vertex: "#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif", common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}", cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n	vec3 absDirection = abs(direction);\n	int face = -1;\n	if( absDirection.x > absDirection.z ) {\n		if(absDirection.x > absDirection.y )\n			face = direction.x > 0.0 ? 0 : 3;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	else {\n		if(absDirection.z > absDirection.y )\n			face = direction.z > 0.0 ? 2 : 5;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n	float dxRoughness = dFdx(roughness);\n	float dyRoughness = dFdy(roughness);\n	vec3 dx = dFdx( vec * scale * dxRoughness );\n	vec3 dy = dFdy( vec * scale * dyRoughness );\n	float d = max( dot( dx, dx ), dot( dy, dy ) );\n	d = clamp(d, 1.0, cubeUV_rangeClamp);\n	float mipLevel = 0.5 * log2(d);\n	return vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n	float a = 16.0 * cubeUV_rcpTextureSize;\n	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n	float powScale = exp2_packed.x * exp2_packed.y;\n	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n	bool bRes = mipLevel == 0.0;\n	scale =  bRes && (scale < a) ? a : scale;\n	vec3 r;\n	vec2 offset;\n	int face = getFaceFromDirection(direction);\n	float rcpPowScale = 1.0 / powScale;\n	if( face == 0) {\n		r = vec3(direction.x, -direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 1) {\n		r = vec3(direction.y, direction.x, direction.z);\n		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 2) {\n		r = vec3(direction.z, direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 3) {\n		r = vec3(direction.x, direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	else if( face == 4) {\n		r = vec3(direction.y, direction.x, -direction.z);\n		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	else {\n		r = vec3(direction.z, -direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	r = normalize(r);\n	float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n	vec2 base = offset + vec2( texelOffset );\n	return base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n	float roughnessVal = roughness* cubeUV_maxLods3;\n	float r1 = floor(roughnessVal);\n	float r2 = r1 + 1.0;\n	float t = fract(roughnessVal);\n	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n	float s = mipInfo.y;\n	float level0 = mipInfo.x;\n	float level1 = level0 + 1.0;\n	level1 = level1 > 5.0 ? 5.0 : level1;\n	level0 += min( floor( s + 0.5 ), 5.0 );\n	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n	vec4 result = mix(color10, color20, t);\n	return vec4(result.rgb, 1.0);\n}\n#endif", defaultnormal_vertex: "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = normalMatrix * objectTangent;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif", displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif", displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif", emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif", emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif", encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );", encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = min( floor( D ) / 255.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}", envmap_fragment: "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		reflectVec = normalize( reflectVec );\n		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		reflectVec = normalize( reflectVec );\n		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	envColor = envMapTexelToLinear( envColor );\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif", envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif", envmap_pars_fragment: "#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif", envmap_pars_vertex: "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif", envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float sigma = PI * roughness * roughness / ( 1.0 + roughness );\n		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n		  vec3 reflectVec = reflect( -viewDir, normal );\n		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n		#else\n		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif", envmap_vertex: "#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif", fog_vertex: "#ifdef USE_FOG\n	fogDepth = -mvPosition.z;\n#endif", fog_pars_vertex: "#ifdef USE_FOG\n	varying float fogDepth;\n#endif", fog_fragment: "#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif", fog_pars_fragment: "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float fogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif", gradientmap_pars_fragment: "#ifdef TOON\n	uniform sampler2D gradientMap;\n	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n		float dotNL = dot( normal, lightDirection );\n		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n		#ifdef USE_GRADIENTMAP\n			return texture2D( gradientMap, coord ).rgb;\n		#else\n			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n		#endif\n	}\n#endif", lightmap_fragment: "#ifdef USE_LIGHTMAP\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif", lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif", lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif", lights_pars_begin: "uniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n		float shadowCameraNear;\n		float shadowCameraFar;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		directLight.color = pointLight.color;\n		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n		directLight.visible = ( directLight.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( angleCos > spotLight.coneCos ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif", lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;", lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	#ifdef TOON\n		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	#else\n		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n		vec3 irradiance = dotNL * directLight.color;\n	#endif\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)", lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef REFLECTIVITY\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n	material.clearcoat = saturate( clearcoat );	material.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheen;\n#endif", lights_physical_pars_fragment: "struct PhysicalMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n#ifdef CLEARCOAT\n	float clearcoat;\n	float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	vec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.specularRoughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifdef CLEARCOAT\n		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = ccDotNL * directLight.color;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			ccIrradiance *= PI;\n		#endif\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n			material.specularRoughness,\n			directLight.direction,\n			geometry,\n			material.sheenColor\n		);\n	#else\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n	#endif\n	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef CLEARCOAT\n		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n		float ccDotNL = ccDotNV;\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	float clearcoatInv = 1.0 - clearcoatDHR;\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n	reflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}", lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n#ifdef CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif", lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n	#ifdef CLEARCOAT\n		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n	#endif\n#endif", lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif", logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif", logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n#endif", logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif", logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n	#else\n		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n		gl_Position.z *= gl_Position.w;\n	#endif\n#endif", map_fragment: "#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif", map_pars_fragment: "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif", map_particle_fragment: "#ifdef USE_MAP\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif", map_particle_pars_fragment: "#ifdef USE_MAP\n	uniform mat3 uvTransform;\n	uniform sampler2D map;\n#endif", metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif", metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif", morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif", morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif", morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n#endif", normal_fragment_begin: "#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;", normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	#ifdef USE_TANGENT\n		mat3 vTBN = mat3( tangent, bitangent, normal );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( -vViewPosition, normal, normalScale, normalMap );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif", normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 normalScale, in sampler2D normalMap ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		float scale = sign( st1.t * st0.s - st0.t * st1.s );\n		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy *= normalScale;\n		#ifdef DOUBLE_SIDED\n			vec3 NfromST = cross( S, T );\n			if( dot( NfromST, N ) > 0.0 ) {\n				S *= -1.0;\n				T *= -1.0;\n			}\n		#else\n			mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#endif\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif", clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif", clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 vTBN = mat3( tangent, bitangent, clearcoatNormal );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = clearcoatNormalScale * mapN.xy;\n		clearcoatNormal = normalize( vTBN * mapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatNormalScale, clearcoatNormalMap );\n	#endif\n#endif", clearcoat_normalmap_pars_fragment: "#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif", packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 encodeHalfRGBA ( vec2 v ) {\n	vec4 encoded = vec4( 0.0 );\n	const vec2 offset = vec2( 1.0 / 255.0, 0.0 );\n	encoded.xy = vec2( v.x, fract( v.x * 255.0 ) );\n	encoded.xy = encoded.xy - ( encoded.yy * offset );\n	encoded.zw = vec2( v.y, fract( v.y * 255.0 ) );\n	encoded.zw = encoded.zw - ( encoded.ww * offset );\n	return encoded;\n}\nvec2 decodeHalfRGBA( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}", premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif", project_vertex: "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;", dithering_fragment: "#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif", dithering_pars_fragment: "#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif", roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif", roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif", shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return decodeHalfRGBA( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n		const vec2 offset = vec2( 0.0, 1.0 );\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n		vec2 f = fract( uv * size + 0.5 );\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n		return c;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			shadow = (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif", shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif", shadowmap_vertex: "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif", shadowmask_pars_fragment: "float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLight directionalLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLight spotLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLight pointLight;\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}", skinbase_vertex: "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif", skinning_pars_vertex: "#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif", skinning_vertex: "#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif", skinnormal_vertex: "#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif", specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif", specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif", tonemapping_fragment: "#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif", tonemapping_pars_fragment: "#ifndef saturate\n	#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}", uv_pars_fragment: "#ifdef USE_UV\n	varying vec2 vUv;\n#endif", uv_pars_vertex: "#ifdef USE_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif", uv_vertex: "#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif", uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif", uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n#endif", uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = uv2;\n#endif", worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif", background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}", background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}", cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = mapTexelToLinear( texColor );\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}", cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}", depth_frag: "#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n	#endif\n}", depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}", distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}", distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}", equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV;\n	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}", equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}", linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}", linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}", meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}", meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}", meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}", meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}", meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#ifndef FLAT_SHADED\n		vNormal = normalize( transformedNormal );\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}", meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}", meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n	#define REFLECTIVITY\n	#define CLEARCOAT\n	#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n	uniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n	uniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#ifdef TRANSPARENCY\n		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n	#endif\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}", meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}", normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}", points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}", points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}", shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <fog_fragment>\n}", shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}", sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}", sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}"}, ro = {common: {diffuse: {value: new Ii(15658734)}, opacity: {value: 1}, map: {value: null}, uvTransform: {value: new yn}, alphaMap: {value: null}}, specularmap: {specularMap: {value: null}}, envmap: {envMap: {value: null}, flipEnvMap: {value: -1}, reflectivity: {value: 1}, refractionRatio: {value: 0.98}, maxMipLevel: {value: 0}}, aomap: {aoMap: {value: null}, aoMapIntensity: {value: 1}}, lightmap: {lightMap: {value: null}, lightMapIntensity: {value: 1}}, emissivemap: {emissiveMap: {value: null}}, bumpmap: {bumpMap: {value: null}, bumpScale: {value: 1}}, normalmap: {normalMap: {value: null}, normalScale: {value: new un(1, 1)}}, displacementmap: {displacementMap: {value: null}, displacementScale: {value: 1}, displacementBias: {value: 0}}, roughnessmap: {roughnessMap: {value: null}}, metalnessmap: {metalnessMap: {value: null}}, gradientmap: {gradientMap: {value: null}}, fog: {fogDensity: {value: 0.00025}, fogNear: {value: 1}, fogFar: {value: 2e3}, fogColor: {value: new Ii(16777215)}}, lights: {ambientLightColor: {value: []}, lightProbe: {value: []}, directionalLights: {value: [], properties: {direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}}}, directionalShadowMap: {value: []}, directionalShadowMatrix: {value: []}, spotLights: {value: [], properties: {color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}}}, spotShadowMap: {value: []}, spotShadowMatrix: {value: []}, pointLights: {value: [], properties: {color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {}}}, pointShadowMap: {value: []}, pointShadowMatrix: {value: []}, hemisphereLights: {value: [], properties: {direction: {}, skyColor: {}, groundColor: {}}}, rectAreaLights: {value: [], properties: {color: {}, position: {}, width: {}, height: {}}}}, points: {diffuse: {value: new Ii(15658734)}, opacity: {value: 1}, size: {value: 1}, scale: {value: 1}, map: {value: null}, uvTransform: {value: new yn}}, sprite: {diffuse: {value: new Ii(15658734)}, opacity: {value: 1}, center: {value: new un(0.5, 0.5)}, rotation: {value: 0}, map: {value: null}, uvTransform: {value: new yn}}}, oo = {basic: {uniforms: Fr([ro.common, ro.specularmap, ro.envmap, ro.aomap, ro.lightmap, ro.fog]), vertexShader: io.meshbasic_vert, fragmentShader: io.meshbasic_frag}, lambert: {uniforms: Fr([ro.common, ro.specularmap, ro.envmap, ro.aomap, ro.lightmap, ro.emissivemap, ro.fog, ro.lights, {emissive: {value: new Ii(0)}}]), vertexShader: io.meshlambert_vert, fragmentShader: io.meshlambert_frag}, phong: {uniforms: Fr([ro.common, ro.specularmap, ro.envmap, ro.aomap, ro.lightmap, ro.emissivemap, ro.bumpmap, ro.normalmap, ro.displacementmap, ro.gradientmap, ro.fog, ro.lights, {emissive: {value: new Ii(0)}, specular: {value: new Ii(1118481)}, shininess: {value: 30}}]), vertexShader: io.meshphong_vert, fragmentShader: io.meshphong_frag}, standard: {uniforms: Fr([ro.common, ro.envmap, ro.aomap, ro.lightmap, ro.emissivemap, ro.bumpmap, ro.normalmap, ro.displacementmap, ro.roughnessmap, ro.metalnessmap, ro.fog, ro.lights, {emissive: {value: new Ii(0)}, roughness: {value: 0.5}, metalness: {value: 0.5}, envMapIntensity: {value: 1}}]), vertexShader: io.meshphysical_vert, fragmentShader: io.meshphysical_frag}, matcap: {uniforms: Fr([ro.common, ro.bumpmap, ro.normalmap, ro.displacementmap, ro.fog, {matcap: {value: null}}]), vertexShader: io.meshmatcap_vert, fragmentShader: io.meshmatcap_frag}, points: {uniforms: Fr([ro.points, ro.fog]), vertexShader: io.points_vert, fragmentShader: io.points_frag}, dashed: {uniforms: Fr([ro.common, ro.fog, {scale: {value: 1}, dashSize: {value: 1}, totalSize: {value: 2}}]), vertexShader: io.linedashed_vert, fragmentShader: io.linedashed_frag}, depth: {uniforms: Fr([ro.common, ro.displacementmap]), vertexShader: io.depth_vert, fragmentShader: io.depth_frag}, normal: {uniforms: Fr([ro.common, ro.bumpmap, ro.normalmap, ro.displacementmap, {opacity: {value: 1}}]), vertexShader: io.normal_vert, fragmentShader: io.normal_frag}, sprite: {uniforms: Fr([ro.sprite, ro.fog]), vertexShader: io.sprite_vert, fragmentShader: io.sprite_frag}, background: {uniforms: {uvTransform: {value: new yn}, t2D: {value: null}}, vertexShader: io.background_vert, fragmentShader: io.background_frag}, cube: {uniforms: {tCube: {value: null}, tFlip: {value: -1}, opacity: {value: 1}}, vertexShader: io.cube_vert, fragmentShader: io.cube_frag}, equirect: {uniforms: {tEquirect: {value: null}}, vertexShader: io.equirect_vert, fragmentShader: io.equirect_frag}, distanceRGBA: {uniforms: Fr([ro.common, ro.displacementmap, {referencePosition: {value: new fn}, nearDistance: {value: 1}, farDistance: {value: 1e3}}]), vertexShader: io.distanceRGBA_vert, fragmentShader: io.distanceRGBA_frag}, shadow: {uniforms: Fr([ro.lights, ro.fog, {color: {value: new Ii(0)}, opacity: {value: 1}}]), vertexShader: io.shadow_vert, fragmentShader: io.shadow_frag}};
  function so() {
    var e = null, t = false, n = null;
    function i(r, o) {
      false !== t && (n(r, o), e.requestAnimationFrame(i));
    }
    return {start: function () {
      true !== t && null !== n && (e.requestAnimationFrame(i), t = true);
    }, stop: function () {
      t = false;
    }, setAnimationLoop: function (e) {
      n = e;
    }, setContext: function (t) {
      e = t;
    }};
  }
  function ao(e) {
    var t = new WeakMap;
    return {get: function (e) {
      return e.isInterleavedBufferAttribute && (e = e.data), t.get(e);
    }, remove: function (n) {
      n.isInterleavedBufferAttribute && (n = n.data);
      var i = t.get(n);
      i && (e.deleteBuffer(i.buffer), t.delete(n));
    }, update: function (n, i) {
      n.isInterleavedBufferAttribute && (n = n.data);
      var r = t.get(n);
      undefined === r ? t.set(n, function (t, n) {
        var i = t.array, r = t.dynamic ? 35048 : 35044, o = e.createBuffer();
        e.bindBuffer(n, o), e.bufferData(n, i, r), t.onUploadCallback();
        var s = 5126;
        return i instanceof Float32Array ? s = 5126 : i instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : i instanceof Uint16Array ? s = 5123 : i instanceof Int16Array ? s = 5122 : i instanceof Uint32Array ? s = 5125 : i instanceof Int32Array ? s = 5124 : i instanceof Int8Array ? s = 5120 : i instanceof Uint8Array && (s = 5121), {buffer: o, type: s, bytesPerElement: i.BYTES_PER_ELEMENT, version: t.version};
      }(n, i)) : r.version < n.version && (!function (t, n, i) {
        var r = n.array, o = n.updateRange;
        e.bindBuffer(i, t), false === n.dynamic ? e.bufferData(i, r, 35044) : -1 === o.count ? e.bufferSubData(i, 0, r) : 0 === o.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (e.bufferSubData(i, o.offset * r.BYTES_PER_ELEMENT, r.subarray(o.offset, o.offset + o.count)), o.count = -1);
      }(r.buffer, n, i), r.version = n.version);
    }};
  }
  function lo(e, t, n, i) {
    Dr.call(this), this.type = "PlaneGeometry", this.parameters = {width: e, height: t, widthSegments: n, heightSegments: i}, this.fromBufferGeometry(new co(e, t, n, i)), this.mergeVertices();
  }
  function co(e, t, n, i) {
    cr.call(this), this.type = "PlaneBufferGeometry", this.parameters = {width: e, height: t, widthSegments: n, heightSegments: i};
    var r, o, s = (e = e || 1) / 2, a = (t = t || 1) / 2, l = Math.floor(n) || 1, c = Math.floor(i) || 1, h = l + 1, u = c + 1, d = e / l, p = t / c, m = [], f = [], g = [], v = [];
    for (o = 0; o < u; o++) {
      var y = o * p - a;
      for (r = 0; r < h; r++) {
        var _ = r * d - s;
        f.push(_, -y, 0), g.push(0, 0, 1), v.push(r / l), v.push(1 - o / c);
      }
    }
    for (o = 0; o < c; o++) for (r = 0; r < l; r++) {
      var x = r + h * o, b = r + h * (o + 1), w = r + 1 + h * (o + 1), S = r + 1 + h * o;
      m.push(x, b, S), m.push(b, w, S);
    }
    this.setIndex(m), this.addAttribute("position", new Zi(f, 3)), this.addAttribute("normal", new Zi(g, 3)), this.addAttribute("uv", new Zi(v, 2));
  }
  function ho(e, t, n, i) {
    var r, o, s = new Ii(0), a = 0, l = null, c = 0;
    function h(e, n) {
      t.buffers.color.setClear(e.r, e.g, e.b, n, i);
    }
    return {getClearColor: function () {
      return s;
    }, setClearColor: function (e, t) {
      s.set(e), h(s, a = undefined !== t ? t : 1);
    }, getClearAlpha: function () {
      return a;
    }, setClearAlpha: function (e) {
      h(s, a = e);
    }, render: function (t, i, u, d) {
      var p = i.background, m = e.vr, f = m.getSession && m.getSession();
      if (f && "additive" === f.environmentBlendMode && (p = null), null === p ? (h(s, a), l = null, c = 0) : p && p.isColor && (h(p, 1), d = true, l = null, c = 0), (e.autoClear || d) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), p && (p.isCubeTexture || p.isWebGLRenderTargetCube)) {
        undefined === o && ((o = new Ar(new Ir(1, 1, 1), new Vr({type: "BackgroundCubeMaterial", uniforms: Br(oo.cube.uniforms), vertexShader: oo.cube.vertexShader, fragmentShader: oo.cube.fragmentShader, side: y, depthTest: false, depthWrite: false, fog: false}))).geometry.removeAttribute("normal"), o.geometry.removeAttribute("uv"), o.onBeforeRender = function (e, t, n) {
          this.matrixWorld.copyPosition(n.matrixWorld);
        }, Object.defineProperty(o.material, "map", {get: function () {
          return this.uniforms.tCube.value;
        }}), n.update(o));
        var g = p.isWebGLRenderTargetCube ? p.texture : p;
        o.material.uniforms.tCube.value = g, o.material.uniforms.tFlip.value = p.isWebGLRenderTargetCube ? 1 : -1, l === p && c === g.version || (o.material.needsUpdate = true, l = p, c = g.version), t.unshift(o, o.geometry, o.material, 0, 0, null);
      } else p && p.isTexture && (undefined === r && ((r = new Ar(new co(2, 2), new Vr({type: "BackgroundMaterial", uniforms: Br(oo.background.uniforms), vertexShader: oo.background.vertexShader, fragmentShader: oo.background.fragmentShader, side: v, depthTest: false, depthWrite: false, fog: false}))).geometry.removeAttribute("normal"), Object.defineProperty(r.material, "map", {get: function () {
        return this.uniforms.t2D.value;
      }}), n.update(r)), r.material.uniforms.t2D.value = p, true === p.matrixAutoUpdate && p.updateMatrix(), r.material.uniforms.uvTransform.value.copy(p.matrix), l === p && c === p.version || (r.material.needsUpdate = true, l = p, c = p.version), t.unshift(r, r.geometry, r.material, 0, 0, null));
    }};
  }
  function uo(e, t, n, i) {
    var r;
    this.setMode = function (e) {
      r = e;
    }, this.render = function (t, i) {
      e.drawArrays(r, t, i), n.update(i, r);
    }, this.renderInstances = function (o, s, a) {
      var l, c;
      if (i.isWebGL2) l = e, c = "drawArraysInstanced"; else if (c = "drawArraysInstancedANGLE", null === (l = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      l[c](r, s, a, o.maxInstancedCount), n.update(a, r, o.maxInstancedCount);
    };
  }
  function po(e, t, n) {
    var i;
    function r(t) {
      if ("highp" === t) {
        if (e.getShaderPrecisionFormat(35633, 36338).precision > 0 && e.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
        t = "mediump";
      }
      return "mediump" === t && e.getShaderPrecisionFormat(35633, 36337).precision > 0 && e.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
    }
    var o = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext, s = undefined !== n.precision ? n.precision : "highp", a = r(s);
    a !== s && (console.warn("THREE.WebGLRenderer:", s, "not supported, using", a, "instead."), s = a);
    var l = true === n.logarithmicDepthBuffer, c = e.getParameter(34930), h = e.getParameter(35660), u = e.getParameter(3379), d = e.getParameter(34076), p = e.getParameter(34921), m = e.getParameter(36347), f = e.getParameter(36348), g = e.getParameter(36349), v = h > 0, y = o || !!t.get("OES_texture_float");
    return {isWebGL2: o, getMaxAnisotropy: function () {
      if (undefined !== i) return i;
      var n = t.get("EXT_texture_filter_anisotropic");
      return i = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
    }, getMaxPrecision: r, precision: s, logarithmicDepthBuffer: l, maxTextures: c, maxVertexTextures: h, maxTextureSize: u, maxCubemapSize: d, maxAttributes: p, maxVertexUniforms: m, maxVaryings: f, maxFragmentUniforms: g, vertexTextures: v, floatFragmentTextures: y, floatVertexTextures: v && y, maxSamples: o ? e.getParameter(36183) : 0};
  }
  function mo() {
    var e = this, t = null, n = 0, i = false, r = false, o = new Qr, s = new yn, a = {value: null, needsUpdate: false};
    function l() {
      a.value !== t && (a.value = t, a.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function c(t, n, i, r) {
      var l = null !== t ? t.length : 0, c = null;
      if (0 !== l) {
        if (c = a.value, true !== r || null === c) {
          var h = i + 4 * l, u = n.matrixWorldInverse;
          s.getNormalMatrix(u), (null === c || c.length < h) && (c = new Float32Array(h));
          for (var d = 0, p = i; d !== l; ++d, p += 4) o.copy(t[d]).applyMatrix4(u, s), o.normal.toArray(c, p), c[p + 3] = o.constant;
        }
        a.value = c, a.needsUpdate = true;
      }
      return e.numPlanes = l, c;
    }
    this.uniform = a, this.numPlanes = 0, this.numIntersection = 0, this.init = function (e, r, o) {
      var s = 0 !== e.length || r || 0 !== n || i;
      return i = r, t = c(e, o, 0), n = e.length, s;
    }, this.beginShadows = function () {
      r = true, c(null);
    }, this.endShadows = function () {
      r = false, l();
    }, this.setState = function (e, o, s, h, u, d) {
      if (!i || null === e || 0 === e.length || r && !s) r ? c(null) : l(); else {
        var p = r ? 0 : n, m = 4 * p, f = u.clippingState || null;
        a.value = f, f = c(e, h, m, d);
        for (var g = 0; g !== m; ++g) f[g] = t[g];
        u.clippingState = f, this.numIntersection = o ? this.numPlanes : 0, this.numPlanes += p;
      }
    };
  }
  function fo(e) {
    var t = {};
    return {get: function (n) {
      if (undefined !== t[n]) return t[n];
      var i;
      switch (n) {
        case "WEBGL_depth_texture":
          i = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
          break;
        case "EXT_texture_filter_anisotropic":
          i = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
          break;
        case "WEBGL_compressed_texture_s3tc":
          i = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
          break;
        case "WEBGL_compressed_texture_pvrtc":
          i = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
          break;
        default:
          i = e.getExtension(n);
      }
      return null === i && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), t[n] = i, i;
    }};
  }
  function go(e, t, n) {
    var i = new WeakMap, r = new WeakMap;
    function o(e) {
      var s = e.target, a = i.get(s);
      for (var l in null !== a.index && t.remove(a.index), a.attributes) t.remove(a.attributes[l]);
      s.removeEventListener("dispose", o), i.delete(s);
      var c = r.get(a);
      c && (t.remove(c), r.delete(a)), n.memory.geometries--;
    }
    function s(e) {
      var n = [], i = e.index, o = e.attributes.position, s = 0;
      if (null !== i) {
        var a = i.array;
        s = i.version;
        for (var l = 0, c = a.length; l < c; l += 3) {
          var h = a[l + 0], u = a[l + 1], d = a[l + 2];
          n.push(h, u, u, d, d, h);
        }
      } else {
        a = o.array;
        s = o.version;
        for (l = 0, c = a.length / 3 - 1; l < c; l += 3) {
          h = l + 0, u = l + 1, d = l + 2;
          n.push(h, u, u, d, d, h);
        }
      }
      var p = new (tr(n) > 65535 ? Ki : Yi)(n, 1);
      p.version = s, t.update(p, 34963);
      var m = r.get(e);
      m && t.remove(m), r.set(e, p);
    }
    return {get: function (e, t) {
      var r = i.get(t);
      return r || (t.addEventListener("dispose", o), t.isBufferGeometry ? r = t : t.isGeometry && (undefined === t._bufferGeometry && (t._bufferGeometry = (new cr).setFromObject(e)), r = t._bufferGeometry), i.set(t, r), n.memory.geometries++, r);
    }, update: function (e) {
      var n = e.index, i = e.attributes;
      for (var r in null !== n && t.update(n, 34963), i) t.update(i[r], 34962);
      var o = e.morphAttributes;
      for (var r in o) for (var s = o[r], a = 0, l = s.length; a < l; a++) t.update(s[a], 34962);
    }, getWireframeAttribute: function (e) {
      var t = r.get(e);
      if (t) {
        var n = e.index;
        null !== n && t.version < n.version && s(e);
      } else s(e);
      return r.get(e);
    }};
  }
  function vo(e, t, n, i) {
    var r, o, s;
    this.setMode = function (e) {
      r = e;
    }, this.setIndex = function (e) {
      o = e.type, s = e.bytesPerElement;
    }, this.render = function (t, i) {
      e.drawElements(r, i, o, t * s), n.update(i, r);
    }, this.renderInstances = function (a, l, c) {
      var h, u;
      if (i.isWebGL2) h = e, u = "drawElementsInstanced"; else if (u = "drawElementsInstancedANGLE", null === (h = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      h[u](r, c, o, l * s, a.maxInstancedCount), n.update(c, r, a.maxInstancedCount);
    };
  }
  function yo(e) {
    var t = {frame: 0, calls: 0, triangles: 0, points: 0, lines: 0};
    return {memory: {geometries: 0, textures: 0}, render: t, programs: null, autoReset: true, reset: function () {
      t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }, update: function (e, n, i) {
      switch (i = i || 1, t.calls++, n) {
        case 4:
          t.triangles += i * (e / 3);
          break;
        case 5:
        case 6:
          t.triangles += i * (e - 2);
          break;
        case 1:
          t.lines += i * (e / 2);
          break;
        case 3:
          t.lines += i * (e - 1);
          break;
        case 2:
          t.lines += i * e;
          break;
        case 0:
          t.points += i * e;
          break;
        default:
          console.error("THREE.WebGLInfo: Unknown draw mode:", n);
      }
    }};
  }
  function _o(e, t) {
    return Math.abs(t[1]) - Math.abs(e[1]);
  }
  function xo(e) {
    var t = {}, n = new Float32Array(8);
    return {update: function (i, r, o, s) {
      var a = i.morphTargetInfluences, l = a.length, c = t[r.id];
      if (undefined === c) {
        c = [];
        for (var h = 0; h < l; h++) c[h] = [h, 0];
        t[r.id] = c;
      }
      var u = o.morphTargets && r.morphAttributes.position, d = o.morphNormals && r.morphAttributes.normal;
      for (h = 0; h < l; h++) {
        0 !== (p = c[h])[1] && (u && r.removeAttribute("morphTarget" + h), d && r.removeAttribute("morphNormal" + h));
      }
      for (h = 0; h < l; h++) {
        (p = c[h])[0] = h, p[1] = a[h];
      }
      for (c.sort(_o), h = 0; h < 8; h++) {
        var p;
        if (p = c[h]) {
          var m = p[0], f = p[1];
          if (f) {
            u && r.addAttribute("morphTarget" + h, u[m]), d && r.addAttribute("morphNormal" + h, d[m]), n[h] = f;
            continue;
          }
        }
        n[h] = 0;
      }
      s.getUniforms().setValue(e, "morphTargetInfluences", n);
    }};
  }
  function bo(e, t) {
    var n = {};
    return {update: function (i) {
      var r = t.render.frame, o = i.geometry, s = e.get(i, o);
      return n[s.id] !== r && (o.isGeometry && s.updateFromObject(i), e.update(s), n[s.id] = r), s;
    }, dispose: function () {
      n = {};
    }};
  }
  function wo(e, t, n, i, r, o, s, a, l, c) {
    e = undefined !== e ? e : [], t = undefined !== t ? t : ue, s = undefined !== s ? s : He, bn.call(this, e, t, n, i, r, o, s, a, l, c), this.flipY = false;
  }
  function So(e, t, n, i) {
    bn.call(this, null), this.image = {data: e, width: t, height: n, depth: i}, this.magFilter = be, this.minFilter = be, this.wrapR = _e, this.generateMipmaps = false, this.flipY = false;
  }
  function Eo(e, t, n, i) {
    bn.call(this, null), this.image = {data: e, width: t, height: n, depth: i}, this.magFilter = be, this.minFilter = be, this.wrapR = _e, this.generateMipmaps = false, this.flipY = false;
  }
  oo.physical = {uniforms: Fr([oo.standard.uniforms, {transparency: {value: 0}, clearcoat: {value: 0}, clearcoatRoughness: {value: 0}, sheen: {value: new Ii(0)}, clearcoatNormalScale: {value: new un(1, 1)}, clearcoatNormalMap: {value: null}}]), vertexShader: io.meshphysical_vert, fragmentShader: io.meshphysical_frag}, lo.prototype = Object.create(Dr.prototype), lo.prototype.constructor = lo, co.prototype = Object.create(cr.prototype), co.prototype.constructor = co, wo.prototype = Object.create(bn.prototype), wo.prototype.constructor = wo, wo.prototype.isCubeTexture = true, Object.defineProperty(wo.prototype, "images", {get: function () {
    return this.image;
  }, set: function (e) {
    this.image = e;
  }}), So.prototype = Object.create(bn.prototype), So.prototype.constructor = So, So.prototype.isDataTexture2DArray = true, Eo.prototype = Object.create(bn.prototype), Eo.prototype.constructor = Eo, Eo.prototype.isDataTexture3D = true;
  var qo = new bn, To = new So, Ao = new Eo, Mo = new wo, Co = [], ko = [], Ro = new Float32Array(16), Lo = new Float32Array(9), Po = new Float32Array(4);
  function Do(e, t, n) {
    var i = e[0];
    if (i <= 0 || i > 0) return e;
    var r = t * n, o = Co[r];
    if (undefined === o && (o = new Float32Array(r), Co[r] = o), 0 !== t) {
      i.toArray(o, 0);
      for (var s = 1, a = 0; s !== t; ++s) a += n, e[s].toArray(o, a);
    }
    return o;
  }
  function Oo(e, t) {
    if (e.length !== t.length) return false;
    for (var n = 0, i = e.length; n < i; n++) if (e[n] !== t[n]) return false;
    return true;
  }
  function Io(e, t) {
    for (var n = 0, i = t.length; n < i; n++) e[n] = t[n];
  }
  function Bo(e, t) {
    var n = ko[t];
    undefined === n && (n = new Int32Array(t), ko[t] = n);
    for (var i = 0; i !== t; ++i) n[i] = e.allocateTextureUnit();
    return n;
  }
  function Fo(e, t) {
    var n = this.cache;
    n[0] !== t && (e.uniform1f(this.addr, t), n[0] = t);
  }
  function zo(e, t) {
    var n = this.cache;
    if (undefined !== t.x) n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y), n[0] = t.x, n[1] = t.y); else {
      if (Oo(n, t)) return;
      e.uniform2fv(this.addr, t), Io(n, t);
    }
  }
  function No(e, t) {
    var n = this.cache;
    if (undefined !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z), n[0] = t.x, n[1] = t.y, n[2] = t.z); else if (undefined !== t.r) n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b), n[0] = t.r, n[1] = t.g, n[2] = t.b); else {
      if (Oo(n, t)) return;
      e.uniform3fv(this.addr, t), Io(n, t);
    }
  }
  function Uo(e, t) {
    var n = this.cache;
    if (undefined !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w), n[0] = t.x, n[1] = t.y, n[2] = t.z, n[3] = t.w); else {
      if (Oo(n, t)) return;
      e.uniform4fv(this.addr, t), Io(n, t);
    }
  }
  function Vo(e, t) {
    var n = this.cache, i = t.elements;
    if (undefined === i) {
      if (Oo(n, t)) return;
      e.uniformMatrix2fv(this.addr, false, t), Io(n, t);
    } else {
      if (Oo(n, i)) return;
      Po.set(i), e.uniformMatrix2fv(this.addr, false, Po), Io(n, i);
    }
  }
  function Go(e, t) {
    var n = this.cache, i = t.elements;
    if (undefined === i) {
      if (Oo(n, t)) return;
      e.uniformMatrix3fv(this.addr, false, t), Io(n, t);
    } else {
      if (Oo(n, i)) return;
      Lo.set(i), e.uniformMatrix3fv(this.addr, false, Lo), Io(n, i);
    }
  }
  function Ho(e, t) {
    var n = this.cache, i = t.elements;
    if (undefined === i) {
      if (Oo(n, t)) return;
      e.uniformMatrix4fv(this.addr, false, t), Io(n, t);
    } else {
      if (Oo(n, i)) return;
      Ro.set(i), e.uniformMatrix4fv(this.addr, false, Ro), Io(n, i);
    }
  }
  function jo(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.safeSetTexture2D(t || qo, r);
  }
  function $o(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.setTexture2DArray(t || To, r);
  }
  function Wo(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.setTexture3D(t || Ao, r);
  }
  function Xo(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.safeSetTextureCube(t || Mo, r);
  }
  function Yo(e, t) {
    var n = this.cache;
    n[0] !== t && (e.uniform1i(this.addr, t), n[0] = t);
  }
  function Jo(e, t) {
    var n = this.cache;
    Oo(n, t) || (e.uniform2iv(this.addr, t), Io(n, t));
  }
  function Ko(e, t) {
    var n = this.cache;
    Oo(n, t) || (e.uniform3iv(this.addr, t), Io(n, t));
  }
  function Zo(e, t) {
    var n = this.cache;
    Oo(n, t) || (e.uniform4iv(this.addr, t), Io(n, t));
  }
  function Qo(e, t) {
    e.uniform1fv(this.addr, t);
  }
  function es(e, t) {
    e.uniform1iv(this.addr, t);
  }
  function ts(e, t) {
    e.uniform2iv(this.addr, t);
  }
  function ns(e, t) {
    e.uniform3iv(this.addr, t);
  }
  function is(e, t) {
    e.uniform4iv(this.addr, t);
  }
  function rs(e, t) {
    var n = Do(t, this.size, 2);
    e.uniform2fv(this.addr, n);
  }
  function os(e, t) {
    var n = Do(t, this.size, 3);
    e.uniform3fv(this.addr, n);
  }
  function ss(e, t) {
    var n = Do(t, this.size, 4);
    e.uniform4fv(this.addr, n);
  }
  function as(e, t) {
    var n = Do(t, this.size, 4);
    e.uniformMatrix2fv(this.addr, false, n);
  }
  function ls(e, t) {
    var n = Do(t, this.size, 9);
    e.uniformMatrix3fv(this.addr, false, n);
  }
  function cs(e, t) {
    var n = Do(t, this.size, 16);
    e.uniformMatrix4fv(this.addr, false, n);
  }
  function hs(e, t, n) {
    var i = t.length, r = Bo(n, i);
    e.uniform1iv(this.addr, r);
    for (var o = 0; o !== i; ++o) n.safeSetTexture2D(t[o] || qo, r[o]);
  }
  function us(e, t, n) {
    var i = t.length, r = Bo(n, i);
    e.uniform1iv(this.addr, r);
    for (var o = 0; o !== i; ++o) n.safeSetTextureCube(t[o] || Mo, r[o]);
  }
  function ds(e, t, n) {
    this.id = e, this.addr = n, this.cache = [], this.setValue = function (e) {
      switch (e) {
        case 5126:
          return Fo;
        case 35664:
          return zo;
        case 35665:
          return No;
        case 35666:
          return Uo;
        case 35674:
          return Vo;
        case 35675:
          return Go;
        case 35676:
          return Ho;
        case 35678:
        case 36198:
          return jo;
        case 35679:
          return Wo;
        case 35680:
          return Xo;
        case 36289:
          return $o;
        case 5124:
        case 35670:
          return Yo;
        case 35667:
        case 35671:
          return Jo;
        case 35668:
        case 35672:
          return Ko;
        case 35669:
        case 35673:
          return Zo;
      }
    }(t.type);
  }
  function ps(e, t, n) {
    this.id = e, this.addr = n, this.cache = [], this.size = t.size, this.setValue = function (e) {
      switch (e) {
        case 5126:
          return Qo;
        case 35664:
          return rs;
        case 35665:
          return os;
        case 35666:
          return ss;
        case 35674:
          return as;
        case 35675:
          return ls;
        case 35676:
          return cs;
        case 35678:
          return hs;
        case 35680:
          return us;
        case 5124:
        case 35670:
          return es;
        case 35667:
        case 35671:
          return ts;
        case 35668:
        case 35672:
          return ns;
        case 35669:
        case 35673:
          return is;
      }
    }(t.type);
  }
  function ms(e) {
    this.id = e, this.seq = [], this.map = {};
  }
  ps.prototype.updateCache = function (e) {
    var t = this.cache;
    e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)), Io(t, e);
  }, ms.prototype.setValue = function (e, t, n) {
    for (var i = this.seq, r = 0, o = i.length; r !== o; ++r) {
      var s = i[r];
      s.setValue(e, t[s.id], n);
    }
  };
  var fs = /([\w\d_]+)(\])?(\[|\.)?/g;
  function gs(e, t) {
    e.seq.push(t), e.map[t.id] = t;
  }
  function vs(e, t, n) {
    var i = e.name, r = i.length;
    for (fs.lastIndex = 0;;) {
      var o = fs.exec(i), s = fs.lastIndex, a = o[1], l = "]" === o[2], c = o[3];
      if (l && (a |= 0), undefined === c || "[" === c && s + 2 === r) {
        gs(n, undefined === c ? new ds(a, e, t) : new ps(a, e, t));
        break;
      }
      var h = n.map[a];
      undefined === h && gs(n, h = new ms(a)), n = h;
    }
  }
  function ys(e, t) {
    this.seq = [], this.map = {};
    for (var n = e.getProgramParameter(t, 35718), i = 0; i < n; ++i) {
      var r = e.getActiveUniform(t, i);
      vs(r, e.getUniformLocation(t, r.name), this);
    }
  }
  function _s(e, t, n) {
    var i = e.createShader(t);
    return e.shaderSource(i, n), e.compileShader(i), i;
  }
  ys.prototype.setValue = function (e, t, n, i) {
    var r = this.map[t];
    undefined !== r && r.setValue(e, n, i);
  }, ys.prototype.setOptional = function (e, t, n) {
    var i = t[n];
    undefined !== i && this.setValue(e, n, i);
  }, ys.upload = function (e, t, n, i) {
    for (var r = 0, o = t.length; r !== o; ++r) {
      var s = t[r], a = n[s.id];
      false !== a.needsUpdate && s.setValue(e, a.value, i);
    }
  }, ys.seqWithValue = function (e, t) {
    for (var n = [], i = 0, r = e.length; i !== r; ++i) {
      var o = e[i];
      o.id in t && n.push(o);
    }
    return n;
  };
  var xs = 0;
  function bs(e) {
    switch (e) {
      case Pt:
        return ["Linear", "( value )"];
      case Dt:
        return ["sRGB", "( value )"];
      case It:
        return ["RGBE", "( value )"];
      case Ft:
        return ["RGBM", "( value, 7.0 )"];
      case zt:
        return ["RGBM", "( value, 16.0 )"];
      case Nt:
        return ["RGBD", "( value, 256.0 )"];
      case Ot:
        return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
      case Bt:
        return ["LogLuv", "( value )"];
      default:
        throw new Error("unsupported encoding: " + e);
    }
  }
  function ws(e, t, n) {
    var i = e.getShaderParameter(t, 35713), r = e.getShaderInfoLog(t).trim();
    return i && "" === r ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + r + function (e) {
      for (var t = e.split("\n"), n = 0; n < t.length; n++) t[n] = n + 1 + ": " + t[n];
      return t.join("\n");
    }(e.getShaderSource(t));
  }
  function Ss(e, t) {
    var n = bs(t);
    return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }";
  }
  function Es(e, t) {
    var n;
    switch (t) {
      case oe:
        n = "Linear";
        break;
      case se:
        n = "Reinhard";
        break;
      case ae:
        n = "Uncharted2";
        break;
      case le:
        n = "OptimizedCineon";
        break;
      case ce:
        n = "ACESFilmic";
        break;
      default:
        throw new Error("unsupported toneMapping: " + t);
    }
    return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }";
  }
  function qs(e) {
    return "" !== e;
  }
  function Ts(e, t) {
    return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
  }
  function As(e, t) {
    return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection);
  }
  function Ms(e) {
    return e.replace(/^[ \t]*#include +<([\w\d./]+)>/gm, function (e, t) {
      var n = io[t];
      if (undefined === n) throw new Error("Can not resolve #include <" + t + ">");
      return Ms(n);
    });
  }
  function Cs(e) {
    return e.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function (e, t, n, i) {
      for (var r = "", o = parseInt(t); o < parseInt(n); o++) r += i.replace(/\[ i \]/g, "[ " + o + " ]").replace(/UNROLLED_LOOP_INDEX/g, o);
      return r;
    });
  }
  function ks(e, t, n, i, r, o, s) {
    var a = e.getContext(), l = i.defines, c = r.vertexShader, h = r.fragmentShader, u = "SHADOWMAP_TYPE_BASIC";
    o.shadowMapType === m ? u = "SHADOWMAP_TYPE_PCF" : o.shadowMapType === f ? u = "SHADOWMAP_TYPE_PCF_SOFT" : o.shadowMapType === g && (u = "SHADOWMAP_TYPE_VSM");
    var d = "ENVMAP_TYPE_CUBE", p = "ENVMAP_MODE_REFLECTION", v = "ENVMAP_BLENDING_MULTIPLY";
    if (o.envMap) {
      switch (i.envMap.mapping) {
        case ue:
        case de:
          d = "ENVMAP_TYPE_CUBE";
          break;
        case ge:
        case ve:
          d = "ENVMAP_TYPE_CUBE_UV";
          break;
        case pe:
        case me:
          d = "ENVMAP_TYPE_EQUIREC";
          break;
        case fe:
          d = "ENVMAP_TYPE_SPHERE";
      }
      switch (i.envMap.mapping) {
        case de:
        case me:
          p = "ENVMAP_MODE_REFRACTION";
      }
      switch (i.combine) {
        case te:
          v = "ENVMAP_BLENDING_MULTIPLY";
          break;
        case ne:
          v = "ENVMAP_BLENDING_MIX";
          break;
        case ie:
          v = "ENVMAP_BLENDING_ADD";
      }
    }
    var y, _, x, b, w, S = e.gammaFactor > 0 ? e.gammaFactor : 1, E = s.isWebGL2 ? "" : function (e, t, n) {
      return [(e = e || {}).derivatives || t.envMapCubeUV || t.bumpMap || t.tangentSpaceNormalMap || t.clearcoatNormalMap || t.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (e.fragDepth || t.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", e.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (e.shaderTextureLOD || t.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(qs).join("\n");
    }(i.extensions, o, t), q = function (e) {
      var t = [];
      for (var n in e) {
        var i = e[n];
        false !== i && t.push("#define " + n + " " + i);
      }
      return t.join("\n");
    }(l), T = a.createProgram();
    if (i.isRawShaderMaterial ? ((y = [q].filter(qs).join("\n")).length > 0 && (y += "\n"), (_ = [E, q].filter(qs).join("\n")).length > 0 && (_ += "\n")) : (y = ["precision " + o.precision + " float;", "precision " + o.precision + " int;", "highp" === o.precision ? "#define HIGH_PRECISION" : "", "#define SHADER_NAME " + r.name, q, o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + S, "#define MAX_BONES " + o.maxBones, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp2 ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + p : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.normalMap && o.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", o.normalMap && o.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", o.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", o.displacementMap && o.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.vertexTangents ? "#define USE_TANGENT" : "", o.vertexColors ? "#define USE_COLOR" : "", o.vertexUvs ? "#define USE_UV" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.skinning ? "#define USE_SKINNING" : "", o.useVertexTexture ? "#define BONE_TEXTURE" : "", o.morphTargets ? "#define USE_MORPHTARGETS" : "", o.morphNormals && false === o.flatShading ? "#define USE_MORPHNORMALS" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + u : "", o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && (s.isWebGL2 || t.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "	attribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", "\n"].filter(qs).join("\n"), _ = [E, "precision " + o.precision + " float;", "precision " + o.precision + " int;", "highp" === o.precision ? "#define HIGH_PRECISION" : "", "#define SHADER_NAME " + r.name, q, o.alphaTest ? "#define ALPHATEST " + o.alphaTest + (o.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + S, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp2 ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.matcap ? "#define USE_MATCAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + d : "", o.envMap ? "#define " + p : "", o.envMap ? "#define " + v : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.normalMap && o.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", o.normalMap && o.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", o.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.sheen ? "#define USE_SHEEN" : "", o.vertexTangents ? "#define USE_TANGENT" : "", o.vertexColors ? "#define USE_COLOR" : "", o.vertexUvs ? "#define USE_UV" : "", o.gradientMap ? "#define USE_GRADIENTMAP" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + u : "", o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", o.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && (s.isWebGL2 || t.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", (i.extensions && i.extensions.shaderTextureLOD || o.envMap) && (s.isWebGL2 || t.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", o.toneMapping !== re ? "#define TONE_MAPPING" : "", o.toneMapping !== re ? io.tonemapping_pars_fragment : "", o.toneMapping !== re ? Es("toneMapping", o.toneMapping) : "", o.dithering ? "#define DITHERING" : "", o.outputEncoding || o.mapEncoding || o.matcapEncoding || o.envMapEncoding || o.emissiveMapEncoding ? io.encodings_pars_fragment : "", o.mapEncoding ? Ss("mapTexelToLinear", o.mapEncoding) : "", o.matcapEncoding ? Ss("matcapTexelToLinear", o.matcapEncoding) : "", o.envMapEncoding ? Ss("envMapTexelToLinear", o.envMapEncoding) : "", o.emissiveMapEncoding ? Ss("emissiveMapTexelToLinear", o.emissiveMapEncoding) : "", o.outputEncoding ? (x = "linearToOutputTexel", b = o.outputEncoding, w = bs(b), "vec4 " + x + "( vec4 value ) { return LinearTo" + w[0] + w[1] + "; }") : "", o.depthPacking ? "#define DEPTH_PACKING " + i.depthPacking : "", "\n"].filter(qs).join("\n")), c = (c = (c = Ms(c)).replace(/NUM_DIR_LIGHTS/g, o.numDirLights).replace(/NUM_SPOT_LIGHTS/g, o.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, o.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, o.numPointLights).replace(/NUM_HEMI_LIGHTS/g, o.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, o.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, o.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, o.numPointLightShadows)).replace(/NUM_CLIPPING_PLANES/g, o.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, o.numClippingPlanes - o.numClipIntersection), h = (h = (h = Ms(h)).replace(/NUM_DIR_LIGHTS/g, o.numDirLights).replace(/NUM_SPOT_LIGHTS/g, o.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, o.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, o.numPointLights).replace(/NUM_HEMI_LIGHTS/g, o.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, o.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, o.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, o.numPointLightShadows)).replace(/NUM_CLIPPING_PLANES/g, o.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, o.numClippingPlanes - o.numClipIntersection), c = Cs(c), h = Cs(h), s.isWebGL2 && !i.isRawShaderMaterial) {
      var A = false, M = /^\s*#version\s+300\s+es\s*\n/;
      i.isShaderMaterial && null !== c.match(M) && null !== h.match(M) && (A = true, c = c.replace(M, ""), h = h.replace(M, "")), y = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + y, _ = ["#version 300 es\n", "#define varying in", A ? "" : "out highp vec4 pc_fragColor;", A ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + _;
    }
    var C, k, R = _ + h, L = _s(a, 35633, y + c), P = _s(a, 35632, R);
    if (a.attachShader(T, L), a.attachShader(T, P), undefined !== i.index0AttributeName ? a.bindAttribLocation(T, 0, i.index0AttributeName) : true === o.morphTargets && a.bindAttribLocation(T, 0, "position"), a.linkProgram(T), e.debug.checkShaderErrors) {
      var D = a.getProgramInfoLog(T).trim(), O = a.getShaderInfoLog(L).trim(), I = a.getShaderInfoLog(P).trim(), B = true, F = true;
      if (false === a.getProgramParameter(T, 35714)) {
        B = false;
        var z = ws(a, L, "vertex"), N = ws(a, P, "fragment");
        console.error("THREE.WebGLProgram: shader error: ", a.getError(), "35715", a.getProgramParameter(T, 35715), "gl.getProgramInfoLog", D, z, N);
      } else "" !== D ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", D) : "" !== O && "" !== I || (F = false);
      F && (this.diagnostics = {runnable: B, material: i, programLog: D, vertexShader: {log: O, prefix: y}, fragmentShader: {log: I, prefix: _}});
    }
    return a.deleteShader(L), a.deleteShader(P), this.getUniforms = function () {
      return undefined === C && (C = new ys(a, T)), C;
    }, this.getAttributes = function () {
      return undefined === k && (k = function (e, t) {
        for (var n = {}, i = e.getProgramParameter(t, 35721), r = 0; r < i; r++) {
          var o = e.getActiveAttrib(t, r).name;
          n[o] = e.getAttribLocation(t, o);
        }
        return n;
      }(a, T)), k;
    }, this.destroy = function () {
      a.deleteProgram(T), this.program = undefined;
    }, this.name = r.name, this.id = xs++, this.code = n, this.usedTimes = 1, this.program = T, this.vertexShader = L, this.fragmentShader = P, this;
  }
  function Rs(e, t, n) {
    var i = [], r = {MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "phong", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", MeshMatcapMaterial: "matcap", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite"}, o = ["precision", "supportsVertexTextures", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen"];
    function s(e, t) {
      var n;
      return e ? e.isTexture ? n = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), n = e.texture.encoding) : n = Pt, n === Pt && t && (n = Ot), n;
    }
    this.getParameters = function (t, i, o, a, l, c, h) {
      var u = r[t.type], d = h.isSkinnedMesh ? function (e) {
        var t = e.skeleton.bones;
        if (n.floatVertexTextures) return 1024;
        var i = n.maxVertexUniforms, r = Math.floor((i - 20) / 4), o = Math.min(r, t.length);
        return o < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + o + "."), 0) : o;
      }(h) : 0, p = n.precision;
      null !== t.precision && (p = n.getMaxPrecision(t.precision)) !== t.precision && console.warn("THREE.WebGLProgram.getParameters:", t.precision, "not supported, using", p, "instead.");
      var m = e.getRenderTarget();
      return {shaderID: u, precision: p, supportsVertexTextures: n.vertexTextures, outputEncoding: s(m ? m.texture : null, e.gammaOutput), map: !!t.map, mapEncoding: s(t.map, e.gammaInput), matcap: !!t.matcap, matcapEncoding: s(t.matcap, e.gammaInput), envMap: !!t.envMap, envMapMode: t.envMap && t.envMap.mapping, envMapEncoding: s(t.envMap, e.gammaInput), envMapCubeUV: !!t.envMap && (t.envMap.mapping === ge || t.envMap.mapping === ve), lightMap: !!t.lightMap, aoMap: !!t.aoMap, emissiveMap: !!t.emissiveMap, emissiveMapEncoding: s(t.emissiveMap, e.gammaInput), bumpMap: !!t.bumpMap, normalMap: !!t.normalMap, objectSpaceNormalMap: t.normalMapType === Ht, tangentSpaceNormalMap: t.normalMapType === Gt, clearcoatNormalMap: !!t.clearcoatNormalMap, displacementMap: !!t.displacementMap, roughnessMap: !!t.roughnessMap, metalnessMap: !!t.metalnessMap, specularMap: !!t.specularMap, alphaMap: !!t.alphaMap, gradientMap: !!t.gradientMap, sheen: !!t.sheen, combine: t.combine, vertexTangents: t.normalMap && t.vertexTangents, vertexColors: t.vertexColors, vertexUvs: !!(t.map || t.bumpMap || t.normalMap || t.specularMap || t.alphaMap || t.emissiveMap || t.roughnessMap || t.metalnessMap || t.clearcoatNormalMap), fog: !!a, useFog: t.fog, fogExp2: a && a.isFogExp2, flatShading: t.flatShading, sizeAttenuation: t.sizeAttenuation, logarithmicDepthBuffer: n.logarithmicDepthBuffer, skinning: t.skinning && d > 0, maxBones: d, useVertexTexture: n.floatVertexTextures, morphTargets: t.morphTargets, morphNormals: t.morphNormals, maxMorphTargets: e.maxMorphTargets, maxMorphNormals: e.maxMorphNormals, numDirLights: i.directional.length, numPointLights: i.point.length, numSpotLights: i.spot.length, numRectAreaLights: i.rectArea.length, numHemiLights: i.hemi.length, numDirLightShadows: i.directionalShadowMap.length, numPointLightShadows: i.pointShadowMap.length, numSpotLightShadows: i.spotShadowMap.length, numClippingPlanes: l, numClipIntersection: c, dithering: t.dithering, shadowMapEnabled: e.shadowMap.enabled && h.receiveShadow && o.length > 0, shadowMapType: e.shadowMap.type, toneMapping: t.toneMapped ? e.toneMapping : re, physicallyCorrectLights: e.physicallyCorrectLights, premultipliedAlpha: t.premultipliedAlpha, alphaTest: t.alphaTest, doubleSided: t.side === _, flipSided: t.side === y, depthPacking: undefined !== t.depthPacking && t.depthPacking};
    }, this.getProgramCode = function (t, n) {
      var i = [];
      if (n.shaderID ? i.push(n.shaderID) : (i.push(t.fragmentShader), i.push(t.vertexShader)), undefined !== t.defines) for (var r in t.defines) i.push(r), i.push(t.defines[r]);
      for (var s = 0; s < o.length; s++) i.push(n[o[s]]);
      return i.push(t.onBeforeCompile.toString()), i.push(e.gammaOutput), i.push(e.gammaFactor), i.join();
    }, this.acquireProgram = function (r, o, s, a) {
      for (var l, c = 0, h = i.length; c < h; c++) {
        var u = i[c];
        if (u.code === a) {
          ++(l = u).usedTimes;
          break;
        }
      }
      return undefined === l && (l = new ks(e, t, a, r, o, s, n), i.push(l)), l;
    }, this.releaseProgram = function (e) {
      if (0 == --e.usedTimes) {
        var t = i.indexOf(e);
        i[t] = i[i.length - 1], i.pop(), e.destroy();
      }
    }, this.programs = i;
  }
  function Ls() {
    var e = new WeakMap;
    return {get: function (t) {
      var n = e.get(t);
      return undefined === n && (n = {}, e.set(t, n)), n;
    }, remove: function (t) {
      e.delete(t);
    }, update: function (t, n, i) {
      e.get(t)[n] = i;
    }, dispose: function () {
      e = new WeakMap;
    }};
  }
  function Ps(e, t) {
    return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id;
  }
  function Ds(e, t) {
    return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id;
  }
  function Os() {
    var e = [], t = 0, n = [], i = [], r = {id: -1};
    function o(n, i, o, s, a, l) {
      var c = e[t];
      return undefined === c ? (c = {id: n.id, object: n, geometry: i, material: o, program: o.program || r, groupOrder: s, renderOrder: n.renderOrder, z: a, group: l}, e[t] = c) : (c.id = n.id, c.object = n, c.geometry = i, c.material = o, c.program = o.program || r, c.groupOrder = s, c.renderOrder = n.renderOrder, c.z = a, c.group = l), t++, c;
    }
    return {opaque: n, transparent: i, init: function () {
      t = 0, n.length = 0, i.length = 0;
    }, push: function (e, t, r, s, a, l) {
      var c = o(e, t, r, s, a, l);
      (true === r.transparent ? i : n).push(c);
    }, unshift: function (e, t, r, s, a, l) {
      var c = o(e, t, r, s, a, l);
      (true === r.transparent ? i : n).unshift(c);
    }, sort: function () {
      n.length > 1 && n.sort(Ps), i.length > 1 && i.sort(Ds);
    }};
  }
  function Is() {
    var e = new WeakMap;
    function t(n) {
      var i = n.target;
      i.removeEventListener("dispose", t), e.delete(i);
    }
    return {get: function (n, i) {
      var r, o = e.get(n);
      return undefined === o ? (r = new Os, e.set(n, new WeakMap), e.get(n).set(i, r), n.addEventListener("dispose", t)) : undefined === (r = o.get(i)) && (r = new Os, o.set(i, r)), r;
    }, dispose: function () {
      e = new WeakMap;
    }};
  }
  function Bs() {
    var e = {};
    return {get: function (t) {
      if (undefined !== e[t.id]) return e[t.id];
      var n;
      switch (t.type) {
        case "DirectionalLight":
          n = {direction: new fn, color: new Ii, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new un};
          break;
        case "SpotLight":
          n = {position: new fn, direction: new fn, color: new Ii, distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new un};
          break;
        case "PointLight":
          n = {position: new fn, color: new Ii, distance: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new un, shadowCameraNear: 1, shadowCameraFar: 1e3};
          break;
        case "HemisphereLight":
          n = {direction: new fn, skyColor: new Ii, groundColor: new Ii};
          break;
        case "RectAreaLight":
          n = {color: new Ii, position: new fn, halfWidth: new fn, halfHeight: new fn};
      }
      return e[t.id] = n, n;
    }};
  }
  var Fs = 0;
  function zs(e, t) {
    return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0);
  }
  function Ns() {
    for (var e = new Bs, t = {version: 0, hash: {directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1}, ambient: [0, 0, 0], probe: [], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [], numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1}, n = 0; n < 9; n++) t.probe.push(new fn);
    var i = new fn, r = new Ln, o = new Ln;
    return {setup: function (n, s, a) {
      for (var l = 0, c = 0, h = 0, u = 0; u < 9; u++) t.probe[u].set(0, 0, 0);
      var d = 0, p = 0, m = 0, f = 0, g = 0, v = 0, y = 0, _ = 0, x = a.matrixWorldInverse;
      n.sort(zs), u = 0;
      for (var b = n.length; u < b; u++) {
        var w = n[u], S = w.color, E = w.intensity, q = w.distance, T = w.shadow && w.shadow.map ? w.shadow.map.texture : null;
        if (w.isAmbientLight) l += S.r * E, c += S.g * E, h += S.b * E; else if (w.isLightProbe) for (var A = 0; A < 9; A++) t.probe[A].addScaledVector(w.sh.coefficients[A], E); else if (w.isDirectionalLight) {
          if ((C = e.get(w)).color.copy(w.color).multiplyScalar(w.intensity), C.direction.setFromMatrixPosition(w.matrixWorld), i.setFromMatrixPosition(w.target.matrixWorld), C.direction.sub(i), C.direction.transformDirection(x), C.shadow = w.castShadow, w.castShadow) {
            var M = w.shadow;
            C.shadowBias = M.bias, C.shadowRadius = M.radius, C.shadowMapSize = M.mapSize, t.directionalShadowMap[d] = T, t.directionalShadowMatrix[d] = w.shadow.matrix, v++;
          }
          t.directional[d] = C, d++;
        } else if (w.isSpotLight) {
          if ((C = e.get(w)).position.setFromMatrixPosition(w.matrixWorld), C.position.applyMatrix4(x), C.color.copy(S).multiplyScalar(E), C.distance = q, C.direction.setFromMatrixPosition(w.matrixWorld), i.setFromMatrixPosition(w.target.matrixWorld), C.direction.sub(i), C.direction.transformDirection(x), C.coneCos = Math.cos(w.angle), C.penumbraCos = Math.cos(w.angle * (1 - w.penumbra)), C.decay = w.decay, C.shadow = w.castShadow, w.castShadow) {
            M = w.shadow;
            C.shadowBias = M.bias, C.shadowRadius = M.radius, C.shadowMapSize = M.mapSize, t.spotShadowMap[m] = T, t.spotShadowMatrix[m] = w.shadow.matrix, _++;
          }
          t.spot[m] = C, m++;
        } else if (w.isRectAreaLight) {
          (C = e.get(w)).color.copy(S).multiplyScalar(E), C.position.setFromMatrixPosition(w.matrixWorld), C.position.applyMatrix4(x), o.identity(), r.copy(w.matrixWorld), r.premultiply(x), o.extractRotation(r), C.halfWidth.set(0.5 * w.width, 0, 0), C.halfHeight.set(0, 0.5 * w.height, 0), C.halfWidth.applyMatrix4(o), C.halfHeight.applyMatrix4(o), t.rectArea[f] = C, f++;
        } else if (w.isPointLight) {
          if ((C = e.get(w)).position.setFromMatrixPosition(w.matrixWorld), C.position.applyMatrix4(x), C.color.copy(w.color).multiplyScalar(w.intensity), C.distance = w.distance, C.decay = w.decay, C.shadow = w.castShadow, w.castShadow) {
            M = w.shadow;
            C.shadowBias = M.bias, C.shadowRadius = M.radius, C.shadowMapSize = M.mapSize, C.shadowCameraNear = M.camera.near, C.shadowCameraFar = M.camera.far, t.pointShadowMap[p] = T, t.pointShadowMatrix[p] = w.shadow.matrix, y++;
          }
          t.point[p] = C, p++;
        } else if (w.isHemisphereLight) {
          var C;
          (C = e.get(w)).direction.setFromMatrixPosition(w.matrixWorld), C.direction.transformDirection(x), C.direction.normalize(), C.skyColor.copy(w.color).multiplyScalar(E), C.groundColor.copy(w.groundColor).multiplyScalar(E), t.hemi[g] = C, g++;
        }
      }
      t.ambient[0] = l, t.ambient[1] = c, t.ambient[2] = h;
      var k = t.hash;
      k.directionalLength === d && k.pointLength === p && k.spotLength === m && k.rectAreaLength === f && k.hemiLength === g && k.numDirectionalShadows === v && k.numPointShadows === y && k.numSpotShadows === _ || (t.directional.length = d, t.spot.length = m, t.rectArea.length = f, t.point.length = p, t.hemi.length = g, t.directionalShadowMap.length = v, t.pointShadowMap.length = y, t.spotShadowMap.length = _, t.directionalShadowMatrix.length = v, t.pointShadowMatrix.length = y, t.spotShadowMatrix.length = _, k.directionalLength = d, k.pointLength = p, k.spotLength = m, k.rectAreaLength = f, k.hemiLength = g, k.numDirectionalShadows = v, k.numPointShadows = y, k.numSpotShadows = _, t.version = Fs++);
    }, state: t};
  }
  function Us() {
    var e = new Ns, t = [], n = [];
    return {init: function () {
      t.length = 0, n.length = 0;
    }, state: {lightsArray: t, shadowsArray: n, lights: e}, setupLights: function (i) {
      e.setup(t, n, i);
    }, pushLight: function (e) {
      t.push(e);
    }, pushShadow: function (e) {
      n.push(e);
    }};
  }
  function Vs() {
    var e = new WeakMap;
    function t(n) {
      var i = n.target;
      i.removeEventListener("dispose", t), e.delete(i);
    }
    return {get: function (n, i) {
      var r;
      return false === e.has(n) ? (r = new Us, e.set(n, new WeakMap), e.get(n).set(i, r), n.addEventListener("dispose", t)) : false === e.get(n).has(i) ? (r = new Us, e.get(n).set(i, r)) : r = e.get(n).get(i), r;
    }, dispose: function () {
      e = new WeakMap;
    }};
  }
  function Gs(e) {
    Vi.call(this), this.type = "MeshDepthMaterial", this.depthPacking = Ut, this.skinning = false, this.morphTargets = false, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.setValues(e);
  }
  function Hs(e) {
    Vi.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new fn, this.nearDistance = 1, this.farDistance = 1e3, this.skinning = false, this.morphTargets = false, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = false, this.lights = false, this.setValues(e);
  }
  Gs.prototype = Object.create(Vi.prototype), Gs.prototype.constructor = Gs, Gs.prototype.isMeshDepthMaterial = true, Gs.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.depthPacking = e.depthPacking, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
  }, Hs.prototype = Object.create(Vi.prototype), Hs.prototype.constructor = Hs, Hs.prototype.isMeshDistanceMaterial = true, Hs.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
  };
  var js = "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n  \n	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = decodeHalfRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = pow( squared_mean - mean * mean, 0.5 );\n  gl_FragColor = encodeHalfRGBA( vec2( mean, std_dev ) );\n}", $s = "void main() {\n	gl_Position = vec4( position, 1.0 );\n}";
  function Ws(e, t, n) {
    var i = new no, r = new un, o = new un, s = new wn, a = 1, l = 2, c = 1 + (a | l), h = new Array(c), u = new Array(c), d = {}, p = {0: y, 1: v, 2: _}, f = new Vr({defines: {SAMPLE_RATE: 0.25, HALF_SAMPLE_RATE: 0.125}, uniforms: {shadow_pass: {value: null}, resolution: {value: new un}, radius: {value: 4}}, vertexShader: $s, fragmentShader: js}), x = f.clone();
    x.defines.HORIZONAL_PASS = 1;
    var b = new cr;
    b.addAttribute("position", new Hi(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));
    for (var w = new Ar(b, f), S = 0; S !== c; ++S) {
      var E = 0 != (S & a), T = 0 != (S & l), A = new Gs({depthPacking: Vt, morphTargets: E, skinning: T});
      h[S] = A;
      var M = new Hs({morphTargets: E, skinning: T});
      u[S] = M;
    }
    var C = this;
    function k(n, i) {
      var r = t.update(w);
      f.uniforms.shadow_pass.value = n.map.texture, f.uniforms.resolution.value = n.mapSize, f.uniforms.radius.value = n.radius, e.setRenderTarget(n.mapPass), e.clear(), e.renderBufferDirect(i, null, r, f, w, null), x.uniforms.shadow_pass.value = n.mapPass.texture, x.uniforms.resolution.value = n.mapSize, x.uniforms.radius.value = n.radius, e.setRenderTarget(n.map), e.clear(), e.renderBufferDirect(i, null, r, x, w, null);
    }
    function R(t, n, i, r, o, s) {
      var c = t.geometry, m = null, f = h, v = t.customDepthMaterial;
      if (i.isPointLight && (f = u, v = t.customDistanceMaterial), v) m = v; else {
        var y = false;
        n.morphTargets && (c && c.isBufferGeometry ? y = c.morphAttributes && c.morphAttributes.position && c.morphAttributes.position.length > 0 : c && c.isGeometry && (y = c.morphTargets && c.morphTargets.length > 0)), t.isSkinnedMesh && false === n.skinning && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t);
        var _ = t.isSkinnedMesh && n.skinning, x = 0;
        y && (x |= a), _ && (x |= l), m = f[x];
      }
      if (e.localClippingEnabled && true === n.clipShadows && 0 !== n.clippingPlanes.length) {
        var b = m.uuid, w = n.uuid, S = d[b];
        undefined === S && (S = {}, d[b] = S);
        var E = S[w];
        undefined === E && (E = m.clone(), S[w] = E), m = E;
      }
      return m.visible = n.visible, m.wireframe = n.wireframe, m.side = s === g ? null != n.shadowSide ? n.shadowSide : n.side : null != n.shadowSide ? n.shadowSide : p[n.side], m.clipShadows = n.clipShadows, m.clippingPlanes = n.clippingPlanes, m.clipIntersection = n.clipIntersection, m.wireframeLinewidth = n.wireframeLinewidth, m.linewidth = n.linewidth, i.isPointLight && m.isMeshDistanceMaterial && (m.referencePosition.setFromMatrixPosition(i.matrixWorld), m.nearDistance = r, m.farDistance = o), m;
    }
    function L(n, r, o, s, a) {
      if (false !== n.visible) {
        if (n.layers.test(r.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && a === g) && (!n.frustumCulled || i.intersectsObject(n))) {
          n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, n.matrixWorld);
          var l = t.update(n), c = n.material;
          if (Array.isArray(c)) for (var h = l.groups, u = 0, d = h.length; u < d; u++) {
            var p = h[u], m = c[p.materialIndex];
            if (m && m.visible) {
              var f = R(n, m, s, o.near, o.far, a);
              e.renderBufferDirect(o, null, l, f, n, p);
            }
          } else if (c.visible) {
            f = R(n, c, s, o.near, o.far, a);
            e.renderBufferDirect(o, null, l, f, n, null);
          }
        }
        for (var v = n.children, y = 0, _ = v.length; y < _; y++) L(v[y], r, o, s, a);
      }
    }
    this.enabled = false, this.autoUpdate = true, this.needsUpdate = false, this.type = m, this.render = function (t, a, l) {
      if (false !== C.enabled && (false !== C.autoUpdate || false !== C.needsUpdate) && 0 !== t.length) {
        var c = e.getRenderTarget(), h = e.getActiveCubeFace(), u = e.getActiveMipmapLevel(), d = e.state;
        d.setBlending(q), d.buffers.color.setClear(1, 1, 1, 1), d.buffers.depth.setTest(true), d.setScissorTest(false);
        for (var p = 0, m = t.length; p < m; p++) {
          var f = t[p], v = f.shadow;
          if (undefined !== v) {
            r.copy(v.mapSize);
            var y = v.getFrameExtents();
            if (r.multiply(y), o.copy(v.mapSize), (r.x > n || r.y > n) && (console.warn("THREE.WebGLShadowMap:", f, "has shadow exceeding max texture size, reducing"), r.x > n && (o.x = Math.floor(n / y.x), r.x = o.x * y.x, v.mapSize.x = o.x), r.y > n && (o.y = Math.floor(n / y.y), r.y = o.y * y.y, v.mapSize.y = o.y)), null === v.map && !v.isPointLightShadow && this.type === g) {
              var _ = {minFilter: Te, magFilter: Te, format: je};
              v.map = new Sn(r.x, r.y, _), v.map.texture.name = f.name + ".shadowMap", v.mapPass = new Sn(r.x, r.y, _), v.camera.updateProjectionMatrix();
            }
            if (null === v.map) {
              _ = {minFilter: be, magFilter: be, format: je};
              v.map = new Sn(r.x, r.y, _), v.map.texture.name = f.name + ".shadowMap", v.camera.updateProjectionMatrix();
            }
            e.setRenderTarget(v.map), e.clear();
            for (var x = v.getViewportCount(), b = 0; b < x; b++) {
              var w = v.getViewport(b);
              s.set(o.x * w.x, o.y * w.y, o.x * w.z, o.y * w.w), d.viewport(s), v.updateMatrices(f, l, b), i = v.getFrustum(), L(a, l, v.camera, f, this.type);
            }
            v.isPointLightShadow || this.type !== g || k(v, l);
          } else console.warn("THREE.WebGLShadowMap:", f, "has no shadow.");
        }
        C.needsUpdate = false, e.setRenderTarget(c, h, u);
      }
    };
  }
  function Xs(e, t, n, i) {
    var r = new function () {
      var t = false, n = new wn, i = null, r = new wn(0, 0, 0, 0);
      return {setMask: function (n) {
        i === n || t || (e.colorMask(n, n, n, n), i = n);
      }, setLocked: function (e) {
        t = e;
      }, setClear: function (t, i, o, s, a) {
        true === a && (t *= s, i *= s, o *= s), n.set(t, i, o, s), false === r.equals(n) && (e.clearColor(t, i, o, s), r.copy(n));
      }, reset: function () {
        t = false, i = null, r.set(-1, 0, 0, 0);
      }};
    }, o = new function () {
      var t = false, n = null, i = null, r = null;
      return {setTest: function (e) {
        e ? oe(2929) : se(2929);
      }, setMask: function (i) {
        n === i || t || (e.depthMask(i), n = i);
      }, setFunc: function (t) {
        if (i !== t) {
          if (t) switch (t) {
            case W:
              e.depthFunc(512);
              break;
            case X:
              e.depthFunc(519);
              break;
            case Y:
              e.depthFunc(513);
              break;
            case J:
              e.depthFunc(515);
              break;
            case K:
              e.depthFunc(514);
              break;
            case Z:
              e.depthFunc(518);
              break;
            case Q:
              e.depthFunc(516);
              break;
            case ee:
              e.depthFunc(517);
              break;
            default:
              e.depthFunc(515);
          } else e.depthFunc(515);
          i = t;
        }
      }, setLocked: function (e) {
        t = e;
      }, setClear: function (t) {
        r !== t && (e.clearDepth(t), r = t);
      }, reset: function () {
        t = false, n = null, i = null, r = null;
      }};
    }, s = new function () {
      var t = false, n = null, i = null, r = null, o = null, s = null, a = null, l = null, c = null;
      return {setTest: function (e) {
        t || (e ? oe(2960) : se(2960));
      }, setMask: function (i) {
        n === i || t || (e.stencilMask(i), n = i);
      }, setFunc: function (t, n, s) {
        i === t && r === n && o === s || (e.stencilFunc(t, n, s), i = t, r = n, o = s);
      }, setOp: function (t, n, i) {
        s === t && a === n && l === i || (e.stencilOp(t, n, i), s = t, a = n, l = i);
      }, setLocked: function (e) {
        t = e;
      }, setClear: function (t) {
        c !== t && (e.clearStencil(t), c = t);
      }, reset: function () {
        t = false, n = null, i = null, r = null, o = null, s = null, a = null, l = null, c = null;
      }};
    }, h = e.getParameter(34921), u = new Uint8Array(h), d = new Uint8Array(h), p = new Uint8Array(h), m = {}, f = null, g = null, v = null, x = null, b = null, w = null, S = null, E = null, L = null, P = null, D = false, O = null, I = null, B = null, F = null, z = null, N = e.getParameter(35661), U = false, V = 0, G = e.getParameter(7938);
    -1 !== G.indexOf("WebGL") ? (V = parseFloat(/^WebGL\ ([0-9])/.exec(G)[1]), U = V >= 1) : -1 !== G.indexOf("OpenGL ES") && (V = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(G)[1]), U = V >= 2);
    var H = null, j = {}, $ = new wn, te = new wn;
    function ne(t, n, i) {
      var r = new Uint8Array(4), o = e.createTexture();
      e.bindTexture(t, o), e.texParameteri(t, 10241, 9728), e.texParameteri(t, 10240, 9728);
      for (var s = 0; s < i; s++) e.texImage2D(n + s, 0, 6408, 1, 1, 0, 6408, 5121, r);
      return o;
    }
    var ie = {};
    function re(n, r) {
      (u[n] = 1, 0 === d[n] && (e.enableVertexAttribArray(n), d[n] = 1), p[n] !== r) && ((i.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[i.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, r), p[n] = r);
    }
    function oe(t) {
      true !== m[t] && (e.enable(t), m[t] = true);
    }
    function se(t) {
      false !== m[t] && (e.disable(t), m[t] = false);
    }
    function ae(t, i, r, o, s, a, l, c) {
      if (t !== q) {
        if (v || (oe(3042), v = true), t === k) s = s || i, a = a || r, l = l || o, i === b && s === E || (e.blendEquationSeparate(n.convert(i), n.convert(s)), b = i, E = s), r === w && o === S && a === L && l === P || (e.blendFuncSeparate(n.convert(r), n.convert(o), n.convert(a), n.convert(l)), w = r, S = o, L = a, P = l), x = t, D = null; else if (t !== x || c !== D) {
          if (b === R && E === R || (e.blendEquation(32774), b = R, E = R), c) switch (t) {
            case T:
              e.blendFuncSeparate(1, 771, 1, 771);
              break;
            case A:
              e.blendFunc(1, 1);
              break;
            case M:
              e.blendFuncSeparate(0, 0, 769, 771);
              break;
            case C:
              e.blendFuncSeparate(0, 768, 0, 770);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", t);
          } else switch (t) {
            case T:
              e.blendFuncSeparate(770, 771, 1, 771);
              break;
            case A:
              e.blendFunc(770, 1);
              break;
            case M:
              e.blendFunc(0, 769);
              break;
            case C:
              e.blendFunc(0, 768);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", t);
          }
          w = null, S = null, L = null, P = null, x = t, D = c;
        }
      } else v && (se(3042), v = false);
    }
    function le(t) {
      O !== t && (t ? e.frontFace(2304) : e.frontFace(2305), O = t);
    }
    function ce(t) {
      t !== a ? (oe(2884), t !== I && (t === l ? e.cullFace(1029) : t === c ? e.cullFace(1028) : e.cullFace(1032))) : se(2884), I = t;
    }
    function he(t, n, i) {
      t ? (oe(32823), F === n && z === i || (e.polygonOffset(n, i), F = n, z = i)) : se(32823);
    }
    function ue(t) {
      undefined === t && (t = 33984 + N - 1), H !== t && (e.activeTexture(t), H = t);
    }
    return ie[3553] = ne(3553, 3553, 1), ie[34067] = ne(34067, 34069, 6), r.setClear(0, 0, 0, 1), o.setClear(1), s.setClear(0), oe(2929), o.setFunc(J), le(false), ce(l), oe(2884), ae(q), {buffers: {color: r, depth: o, stencil: s}, initAttributes: function () {
      for (var e = 0, t = u.length; e < t; e++) u[e] = 0;
    }, enableAttribute: function (e) {
      re(e, 0);
    }, enableAttributeAndDivisor: re, disableUnusedAttributes: function () {
      for (var t = 0, n = d.length; t !== n; ++t) d[t] !== u[t] && (e.disableVertexAttribArray(t), d[t] = 0);
    }, enable: oe, disable: se, getCompressedTextureFormats: function () {
      if (null === f && (f = [], t.get("WEBGL_compressed_texture_pvrtc") || t.get("WEBGL_compressed_texture_s3tc") || t.get("WEBGL_compressed_texture_etc1") || t.get("WEBGL_compressed_texture_astc"))) for (var n = e.getParameter(34467), i = 0; i < n.length; i++) f.push(n[i]);
      return f;
    }, useProgram: function (t) {
      return g !== t && (e.useProgram(t), g = t, true);
    }, setBlending: ae, setMaterial: function (e, t) {
      e.side === _ ? se(2884) : oe(2884);
      var n = e.side === y;
      t && (n = !n), le(n), e.blending === T && false === e.transparent ? ae(q) : ae(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha), o.setFunc(e.depthFunc), o.setTest(e.depthTest), o.setMask(e.depthWrite), r.setMask(e.colorWrite);
      var i = e.stencilWrite;
      s.setTest(i), i && (s.setFunc(e.stencilFunc, e.stencilRef, e.stencilMask), s.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)), he(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits);
    }, setFlipSided: le, setCullFace: ce, setLineWidth: function (t) {
      t !== B && (U && e.lineWidth(t), B = t);
    }, setPolygonOffset: he, setScissorTest: function (e) {
      e ? oe(3089) : se(3089);
    }, activeTexture: ue, bindTexture: function (t, n) {
      null === H && ue();
      var i = j[H];
      undefined === i && (i = {type: undefined, texture: undefined}, j[H] = i), i.type === t && i.texture === n || (e.bindTexture(t, n || ie[t]), i.type = t, i.texture = n);
    }, compressedTexImage2D: function () {
      try {
        e.compressedTexImage2D.apply(e, arguments);
      } catch (e) {
        console.error("THREE.WebGLState:", e);
      }
    }, texImage2D: function () {
      try {
        e.texImage2D.apply(e, arguments);
      } catch (e) {
        console.error("THREE.WebGLState:", e);
      }
    }, texImage3D: function () {
      try {
        e.texImage3D.apply(e, arguments);
      } catch (e) {
        console.error("THREE.WebGLState:", e);
      }
    }, scissor: function (t) {
      false === $.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), $.copy(t));
    }, viewport: function (t) {
      false === te.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), te.copy(t));
    }, reset: function () {
      for (var t = 0; t < d.length; t++) 1 === d[t] && (e.disableVertexAttribArray(t), d[t] = 0);
      m = {}, f = null, H = null, j = {}, g = null, x = null, O = null, I = null, r.reset(), o.reset(), s.reset();
    }};
  }
  function Ys(e, t, n, i, r, o, s) {
    var a, l = new WeakMap, c = "undefined" != typeof OffscreenCanvas;
    function h(e, t) {
      return c ? new OffscreenCanvas(e, t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
    }
    function u(e, t, n, i) {
      var r = 1;
      if ((e.width > i || e.height > i) && (r = i / Math.max(e.width, e.height)), r < 1 || true === t) {
        if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap) {
          var o = t ? hn.floorPowerOfTwo : Math.floor, s = o(r * e.width), l = o(r * e.height);
          undefined === a && (a = h(s, l));
          var c = n ? h(s, l) : a;
          return c.width = s, c.height = l, c.getContext("2d").drawImage(e, 0, 0, s, l), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + s + "x" + l + ")."), c;
        }
        return "data" in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."), e;
      }
      return e;
    }
    function d(e) {
      return hn.isPowerOfTwo(e.width) && hn.isPowerOfTwo(e.height);
    }
    function p(e, t) {
      return e.generateMipmaps && t && e.minFilter !== be && e.minFilter !== Te;
    }
    function m(t, n, r, o) {
      e.generateMipmap(t), i.get(n).__maxMipLevel = Math.log(Math.max(r, o)) * Math.LOG2E;
    }
    function f(e, n) {
      if (!r.isWebGL2) return e;
      var i = e;
      return 6403 === e && (5126 === n && (i = 33326), 5131 === n && (i = 33325), 5121 === n && (i = 33321)), 6407 === e && (5126 === n && (i = 34837), 5131 === n && (i = 34843), 5121 === n && (i = 32849)), 6408 === e && (5126 === n && (i = 34836), 5131 === n && (i = 34842), 5121 === n && (i = 32856)), 33325 === i || 33326 === i || 34842 === i || 34836 === i ? t.get("EXT_color_buffer_float") : 34843 !== i && 34837 !== i || console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."), i;
    }
    function g(e) {
      return e === be || e === we || e === Ee ? 9728 : 9729;
    }
    function v(t) {
      var n = t.target;
      n.removeEventListener("dispose", v), function (t) {
        var n = i.get(t);
        if (undefined === n.__webglInit) return;
        e.deleteTexture(n.__webglTexture), i.remove(t);
      }(n), n.isVideoTexture && l.delete(n), s.memory.textures--;
    }
    function y(t) {
      var n = t.target;
      n.removeEventListener("dispose", y), function (t) {
        var n = i.get(t), r = i.get(t.texture);
        if (!t) return;
        undefined !== r.__webglTexture && e.deleteTexture(r.__webglTexture);
        t.depthTexture && t.depthTexture.dispose();
        if (t.isWebGLRenderTargetCube) for (var o = 0; o < 6; o++) e.deleteFramebuffer(n.__webglFramebuffer[o]), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[o]); else e.deleteFramebuffer(n.__webglFramebuffer), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer);
        i.remove(t.texture), i.remove(t);
      }(n), s.memory.textures--;
    }
    var _ = 0;
    function x(e, t) {
      var r = i.get(e);
      if (e.isVideoTexture && function (e) {
        var t = s.render.frame;
        l.get(e) !== t && (l.set(e, t), e.update());
      }(e), e.version > 0 && r.__version !== e.version) {
        var o = e.image;
        if (undefined === o) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined"); else {
          if (false !== o.complete) return void q(r, e, t);
          console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
        }
      }
      n.activeTexture(33984 + t), n.bindTexture(3553, r.__webglTexture);
    }
    function b(t, s) {
      if (6 === t.image.length) {
        var a = i.get(t);
        if (t.version > 0 && a.__version !== t.version) {
          E(a, t), n.activeTexture(33984 + s), n.bindTexture(34067, a.__webglTexture), e.pixelStorei(37440, t.flipY);
          for (var l = t && t.isCompressedTexture, c = t.image[0] && t.image[0].isDataTexture, h = [], g = 0; g < 6; g++) h[g] = l || c ? c ? t.image[g].image : t.image[g] : u(t.image[g], false, true, r.maxCubemapSize);
          var v, y = h[0], _ = hn.isPowerOfTwo(y.width) && hn.isPowerOfTwo(y.height) || r.isWebGL2, x = o.convert(t.format), b = o.convert(t.type), w = f(x, b);
          if (S(34067, t, _), l) {
            for (g = 0; g < 6; g++) {
              v = h[g].mipmaps;
              for (var q = 0; q < v.length; q++) {
                var T = v[q];
                t.format !== je && t.format !== He ? n.getCompressedTextureFormats().indexOf(x) > -1 ? n.compressedTexImage2D(34069 + g, q, w, T.width, T.height, 0, T.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + g, q, w, T.width, T.height, 0, x, b, T.data);
              }
            }
            a.__maxMipLevel = v.length - 1;
          } else {
            v = t.mipmaps;
            for (g = 0; g < 6; g++) if (c) {
              n.texImage2D(34069 + g, 0, w, h[g].width, h[g].height, 0, x, b, h[g].data);
              for (q = 0; q < v.length; q++) {
                var A = (T = v[q]).image[g].image;
                n.texImage2D(34069 + g, q + 1, w, A.width, A.height, 0, x, b, A.data);
              }
            } else {
              n.texImage2D(34069 + g, 0, w, x, b, h[g]);
              for (q = 0; q < v.length; q++) {
                T = v[q];
                n.texImage2D(34069 + g, q + 1, w, x, b, T.image[g]);
              }
            }
            a.__maxMipLevel = v.length;
          }
          t.generateMipmaps && _ && t.minFilter !== be && t.minFilter !== Te && m(34067, t, y.width, y.height), a.__version = t.version, t.onUpdate && t.onUpdate(t);
        } else n.activeTexture(33984 + s), n.bindTexture(34067, a.__webglTexture);
      }
    }
    function w(e, t) {
      n.activeTexture(33984 + t), n.bindTexture(34067, i.get(e).__webglTexture);
    }
    function S(n, s, a) {
      var l;
      if (a ? (e.texParameteri(n, 10242, o.convert(s.wrapS)), e.texParameteri(n, 10243, o.convert(s.wrapT)), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, o.convert(s.wrapR)), e.texParameteri(n, 10240, o.convert(s.magFilter)), e.texParameteri(n, 10241, o.convert(s.minFilter))) : (e.texParameteri(n, 10242, 33071), e.texParameteri(n, 10243, 33071), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, 33071), s.wrapS === _e && s.wrapT === _e || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), e.texParameteri(n, 10240, g(s.magFilter)), e.texParameteri(n, 10241, g(s.minFilter)), s.minFilter !== be && s.minFilter !== Te && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), l = t.get("EXT_texture_filter_anisotropic")) {
        if (s.type === Be && null === t.get("OES_texture_float_linear")) return;
        if (s.type === Fe && null === (r.isWebGL2 || t.get("OES_texture_half_float_linear"))) return;
        (s.anisotropy > 1 || i.get(s).__currentAnisotropy) && (e.texParameterf(n, l.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(s.anisotropy, r.getMaxAnisotropy())), i.get(s).__currentAnisotropy = s.anisotropy);
      }
    }
    function E(t, n) {
      undefined === t.__webglInit && (t.__webglInit = true, n.addEventListener("dispose", v), t.__webglTexture = e.createTexture(), s.memory.textures++);
    }
    function q(t, i, s) {
      var a = 3553;
      i.isDataTexture2DArray && (a = 35866), i.isDataTexture3D && (a = 32879), E(t, i), n.activeTexture(33984 + s), n.bindTexture(a, t.__webglTexture), e.pixelStorei(37440, i.flipY), e.pixelStorei(37441, i.premultiplyAlpha), e.pixelStorei(3317, i.unpackAlignment);
      var l = function (e) {
        return !r.isWebGL2 && (e.wrapS !== _e || e.wrapT !== _e || e.minFilter !== be && e.minFilter !== Te);
      }(i) && false === (hn.isPowerOfTwo(i.image.width) && hn.isPowerOfTwo(i.image.height)), c = u(i.image, l, false, r.maxTextureSize), h = hn.isPowerOfTwo(c.width) && hn.isPowerOfTwo(c.height) || r.isWebGL2, g = o.convert(i.format), v = o.convert(i.type), y = f(g, v);
      S(a, i, h);
      var _, x = i.mipmaps;
      if (i.isDepthTexture) {
        if (y = 6402, i.type === Be) {
          if (!r.isWebGL2) throw new Error("Float Depth Texture only supported in WebGL2.0");
          y = 36012;
        } else r.isWebGL2 && (y = 33189);
        i.format === Ye && 6402 === y && i.type !== De && i.type !== Ie && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), i.type = De, v = o.convert(i.type)), i.format === Je && (y = 34041, i.type !== Ve && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), i.type = Ve, v = o.convert(i.type))), n.texImage2D(3553, 0, y, c.width, c.height, 0, g, v, null);
      } else if (i.isDataTexture) if (x.length > 0 && h) {
        for (var b = 0, w = x.length; b < w; b++) _ = x[b], n.texImage2D(3553, b, y, _.width, _.height, 0, g, v, _.data);
        i.generateMipmaps = false, t.__maxMipLevel = x.length - 1;
      } else n.texImage2D(3553, 0, y, c.width, c.height, 0, g, v, c.data), t.__maxMipLevel = 0; else if (i.isCompressedTexture) {
        for (b = 0, w = x.length; b < w; b++) _ = x[b], i.format !== je && i.format !== He ? n.getCompressedTextureFormats().indexOf(g) > -1 ? n.compressedTexImage2D(3553, b, y, _.width, _.height, 0, _.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, b, y, _.width, _.height, 0, g, v, _.data);
        t.__maxMipLevel = x.length - 1;
      } else if (i.isDataTexture2DArray) n.texImage3D(35866, 0, y, c.width, c.height, c.depth, 0, g, v, c.data), t.__maxMipLevel = 0; else if (i.isDataTexture3D) n.texImage3D(32879, 0, y, c.width, c.height, c.depth, 0, g, v, c.data), t.__maxMipLevel = 0; else if (x.length > 0 && h) {
        for (b = 0, w = x.length; b < w; b++) _ = x[b], n.texImage2D(3553, b, y, g, v, _);
        i.generateMipmaps = false, t.__maxMipLevel = x.length - 1;
      } else n.texImage2D(3553, 0, y, g, v, c), t.__maxMipLevel = 0;
      i.generateMipmaps && h && i.minFilter !== be && i.minFilter !== Te && m(3553, i, c.width, c.height), t.__version = i.version, i.onUpdate && i.onUpdate(i);
    }
    function T(t, r, s, a) {
      var l = o.convert(r.texture.format), c = o.convert(r.texture.type), h = f(l, c);
      n.texImage2D(a, 0, h, r.width, r.height, 0, l, c, null), e.bindFramebuffer(36160, t), e.framebufferTexture2D(36160, s, a, i.get(r.texture).__webglTexture, 0), e.bindFramebuffer(36160, null);
    }
    function A(t, n, i) {
      if (e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer) {
        if (i) {
          var r = C(n);
          e.renderbufferStorageMultisample(36161, r, 33189, n.width, n.height);
        } else e.renderbufferStorage(36161, 33189, n.width, n.height);
        e.framebufferRenderbuffer(36160, 36096, 36161, t);
      } else if (n.depthBuffer && n.stencilBuffer) {
        if (i) {
          r = C(n);
          e.renderbufferStorageMultisample(36161, r, 35056, n.width, n.height);
        } else e.renderbufferStorage(36161, 34041, n.width, n.height);
        e.framebufferRenderbuffer(36160, 33306, 36161, t);
      } else {
        var s = f(o.convert(n.texture.format), o.convert(n.texture.type));
        if (i) {
          r = C(n);
          e.renderbufferStorageMultisample(36161, r, s, n.width, n.height);
        } else e.renderbufferStorage(36161, s, n.width, n.height);
      }
      e.bindRenderbuffer(36161, null);
    }
    function M(t) {
      var n = i.get(t), r = true === t.isWebGLRenderTargetCube;
      if (t.depthTexture) {
        if (r) throw new Error("target.depthTexture not supported in Cube render targets");
        !function (t, n) {
          if (n && n.isWebGLRenderTargetCube) throw new Error("Depth Texture with cube render targets is not supported");
          if (e.bindFramebuffer(36160, t), !n.depthTexture || !n.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
          i.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width, n.depthTexture.image.height = n.height, n.depthTexture.needsUpdate = true), x(n.depthTexture, 0);
          var r = i.get(n.depthTexture).__webglTexture;
          if (n.depthTexture.format === Ye) e.framebufferTexture2D(36160, 36096, 3553, r, 0); else {
            if (n.depthTexture.format !== Je) throw new Error("Unknown depthTexture format");
            e.framebufferTexture2D(36160, 33306, 3553, r, 0);
          }
        }(n.__webglFramebuffer, t);
      } else if (r) {
        n.__webglDepthbuffer = [];
        for (var o = 0; o < 6; o++) e.bindFramebuffer(36160, n.__webglFramebuffer[o]), n.__webglDepthbuffer[o] = e.createRenderbuffer(), A(n.__webglDepthbuffer[o], t);
      } else e.bindFramebuffer(36160, n.__webglFramebuffer), n.__webglDepthbuffer = e.createRenderbuffer(), A(n.__webglDepthbuffer, t);
      e.bindFramebuffer(36160, null);
    }
    function C(e) {
      return r.isWebGL2 && e.isWebGLMultisampleRenderTarget ? Math.min(r.maxSamples, e.samples) : 0;
    }
    var k = false, R = false;
    this.allocateTextureUnit = function () {
      var e = _;
      return e >= r.maxTextures && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + r.maxTextures), _ += 1, e;
    }, this.resetTextureUnits = function () {
      _ = 0;
    }, this.setTexture2D = x, this.setTexture2DArray = function (e, t) {
      var r = i.get(e);
      e.version > 0 && r.__version !== e.version ? q(r, e, t) : (n.activeTexture(33984 + t), n.bindTexture(35866, r.__webglTexture));
    }, this.setTexture3D = function (e, t) {
      var r = i.get(e);
      e.version > 0 && r.__version !== e.version ? q(r, e, t) : (n.activeTexture(33984 + t), n.bindTexture(32879, r.__webglTexture));
    }, this.setTextureCube = b, this.setTextureCubeDynamic = w, this.setupRenderTarget = function (t) {
      var a = i.get(t), l = i.get(t.texture);
      t.addEventListener("dispose", y), l.__webglTexture = e.createTexture(), s.memory.textures++;
      var c = true === t.isWebGLRenderTargetCube, h = true === t.isWebGLMultisampleRenderTarget, u = hn.isPowerOfTwo(t.width) && hn.isPowerOfTwo(t.height) || r.isWebGL2;
      if (c) {
        a.__webglFramebuffer = [];
        for (var g = 0; g < 6; g++) a.__webglFramebuffer[g] = e.createFramebuffer();
      } else if (a.__webglFramebuffer = e.createFramebuffer(), h) if (r.isWebGL2) {
        a.__webglMultisampledFramebuffer = e.createFramebuffer(), a.__webglColorRenderbuffer = e.createRenderbuffer(), e.bindRenderbuffer(36161, a.__webglColorRenderbuffer);
        var v = f(o.convert(t.texture.format), o.convert(t.texture.type)), _ = C(t);
        e.renderbufferStorageMultisample(36161, _, v, t.width, t.height), e.bindFramebuffer(36160, a.__webglMultisampledFramebuffer), e.framebufferRenderbuffer(36160, 36064, 36161, a.__webglColorRenderbuffer), e.bindRenderbuffer(36161, null), t.depthBuffer && (a.__webglDepthRenderbuffer = e.createRenderbuffer(), A(a.__webglDepthRenderbuffer, t, true)), e.bindFramebuffer(36160, null);
      } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
      if (c) {
        n.bindTexture(34067, l.__webglTexture), S(34067, t.texture, u);
        for (g = 0; g < 6; g++) T(a.__webglFramebuffer[g], t, 36064, 34069 + g);
        t.texture.generateMipmaps && u && t.texture.minFilter !== be && t.texture.minFilter !== Te && m(34067, t.texture, t.width, t.height), n.bindTexture(34067, null);
      } else n.bindTexture(3553, l.__webglTexture), S(3553, t.texture, u), T(a.__webglFramebuffer, t, 36064, 3553), t.texture.generateMipmaps && u && t.texture.minFilter !== be && t.texture.minFilter !== Te && m(3553, t.texture, t.width, t.height), n.bindTexture(3553, null);
      t.depthBuffer && M(t);
    }, this.updateRenderTargetMipmap = function (e) {
      var t = e.texture;
      if (t.generateMipmaps && (hn.isPowerOfTwo(e.width) && hn.isPowerOfTwo(e.height) || r.isWebGL2) && t.minFilter !== be && t.minFilter !== Te) {
        var o = e.isWebGLRenderTargetCube ? 34067 : 3553, s = i.get(t).__webglTexture;
        n.bindTexture(o, s), m(o, t, e.width, e.height), n.bindTexture(o, null);
      }
    }, this.updateMultisampleRenderTarget = function (t) {
      if (t.isWebGLMultisampleRenderTarget) if (r.isWebGL2) {
        var n = i.get(t);
        e.bindFramebuffer(36008, n.__webglMultisampledFramebuffer), e.bindFramebuffer(36009, n.__webglFramebuffer);
        var o = t.width, s = t.height, a = 16384;
        t.depthBuffer && (a |= 256), t.stencilBuffer && (a |= 1024), e.blitFramebuffer(0, 0, o, s, 0, 0, o, s, a, 9728);
      } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
    }, this.safeSetTexture2D = function (e, t) {
      e && e.isWebGLRenderTarget && (false === k && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), k = true), e = e.texture), x(e, t);
    }, this.safeSetTextureCube = function (e, t) {
      e && e.isWebGLRenderTargetCube && (false === R && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), R = true), e = e.texture), e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? b(e, t) : w(e, t);
    };
  }
  function Js(e, t, n) {
    return {convert: function (e) {
      var i;
      if (e === ye) return 10497;
      if (e === _e) return 33071;
      if (e === xe) return 33648;
      if (e === be) return 9728;
      if (e === we) return 9984;
      if (e === Ee) return 9986;
      if (e === Te) return 9729;
      if (e === Ae) return 9985;
      if (e === Ce) return 9987;
      if (e === Re) return 5121;
      if (e === ze) return 32819;
      if (e === Ne) return 32820;
      if (e === Ue) return 33635;
      if (e === Le) return 5120;
      if (e === Pe) return 5122;
      if (e === De) return 5123;
      if (e === Oe) return 5124;
      if (e === Ie) return 5125;
      if (e === Be) return 5126;
      if (e === Fe) {
        if (n.isWebGL2) return 5131;
        if (null !== (i = t.get("OES_texture_half_float"))) return i.HALF_FLOAT_OES;
      }
      if (e === Ge) return 6406;
      if (e === He) return 6407;
      if (e === je) return 6408;
      if (e === $e) return 6409;
      if (e === We) return 6410;
      if (e === Ye) return 6402;
      if (e === Je) return 34041;
      if (e === Ke) return 6403;
      if (e === R) return 32774;
      if (e === L) return 32778;
      if (e === P) return 32779;
      if (e === I) return 0;
      if (e === B) return 1;
      if (e === F) return 768;
      if (e === z) return 769;
      if (e === N) return 770;
      if (e === U) return 771;
      if (e === V) return 772;
      if (e === G) return 773;
      if (e === H) return 774;
      if (e === j) return 775;
      if (e === $) return 776;
      if ((e === Ze || e === Qe || e === et || e === tt) && null !== (i = t.get("WEBGL_compressed_texture_s3tc"))) {
        if (e === Ze) return i.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (e === Qe) return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (e === et) return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (e === tt) return i.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      }
      if ((e === nt || e === it || e === rt || e === ot) && null !== (i = t.get("WEBGL_compressed_texture_pvrtc"))) {
        if (e === nt) return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (e === it) return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (e === rt) return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (e === ot) return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      }
      if (e === st && null !== (i = t.get("WEBGL_compressed_texture_etc1"))) return i.COMPRESSED_RGB_ETC1_WEBGL;
      if ((e === at || e === lt || e === ct || e === ht || e === ut || e === dt || e === pt || e === mt || e === ft || e === gt || e === vt || e === yt || e === _t || e === xt) && null !== (i = t.get("WEBGL_compressed_texture_astc"))) return e;
      if (e === D || e === O) {
        if (n.isWebGL2) {
          if (e === D) return 32775;
          if (e === O) return 32776;
        }
        if (null !== (i = t.get("EXT_blend_minmax"))) {
          if (e === D) return i.MIN_EXT;
          if (e === O) return i.MAX_EXT;
        }
      }
      if (e === Ve) {
        if (n.isWebGL2) return 34042;
        if (null !== (i = t.get("WEBGL_depth_texture"))) return i.UNSIGNED_INT_24_8_WEBGL;
      }
      return 0;
    }};
  }
  function Ks() {
    Jn.call(this), this.type = "Group";
  }
  function Zs(e) {
    Hr.call(this), this.cameras = e || [];
  }
  Ks.prototype = Object.assign(Object.create(Jn.prototype), {constructor: Ks, isGroup: true}), Zs.prototype = Object.assign(Object.create(Hr.prototype), {constructor: Zs, isArrayCamera: true});
  var Qs, ea = new fn, ta = new fn;
  function na(e, t, n) {
    ea.setFromMatrixPosition(t.matrixWorld), ta.setFromMatrixPosition(n.matrixWorld);
    var i = ea.distanceTo(ta), r = t.projectionMatrix.elements, o = n.projectionMatrix.elements, s = r[14] / (r[10] - 1), a = r[14] / (r[10] + 1), l = (r[9] + 1) / r[5], c = (r[9] - 1) / r[5], h = (r[8] - 1) / r[0], u = (o[8] + 1) / o[0], d = s * h, p = s * u, m = i / (-h + u), f = m * -h;
    t.matrixWorld.decompose(e.position, e.quaternion, e.scale), e.translateX(f), e.translateZ(m), e.matrixWorld.compose(e.position, e.quaternion, e.scale), e.matrixWorldInverse.getInverse(e.matrixWorld);
    var g = s + m, v = a + m, y = d - f, _ = p + (i - f), x = l * a / v * g, b = c * a / v * g;
    e.projectionMatrix.makePerspective(y, _, x, b, g, v);
  }
  function ia(e) {
    var t, n, i = this, r = null, o = null, s = null, a = [], l = new Ln, c = new Ln, h = 1, u = "local-floor";
    "undefined" != typeof window && "VRFrameData" in window && (o = new window.VRFrameData, window.addEventListener("vrdisplaypresentchange", b, false));
    var d = new Ln, p = new dn, m = new fn, f = new Hr;
    f.viewport = new wn, f.layers.enable(1);
    var g = new Hr;
    g.viewport = new wn, g.layers.enable(2);
    var v = new Zs([f, g]);
    function y() {
      return null !== r && true === r.isPresenting;
    }
    v.layers.enable(1), v.layers.enable(2);
    var _, x = new un;
    function b() {
      if (null !== r && true === r.isPresenting) {
        var o = r.getEyeParameters("left");
        t = 2 * o.renderWidth * h, n = o.renderHeight * h, _ = e.getPixelRatio(), e.getSize(x), e.setDrawingBufferSize(t, n, 1), f.viewport.set(0, 0, t / 2, n), g.viewport.set(t / 2, 0, t / 2, n), q.start(), i.dispatchEvent({type: "sessionstart"});
      } else i.enabled && e.setDrawingBufferSize(x.width, x.height, _), q.stop(), i.dispatchEvent({type: "sessionend"});
    }
    var w = [];
    function S(e) {
      for (var t = navigator.getGamepads && navigator.getGamepads(), n = 0, i = 0, r = t.length; n < r; n++) {
        var o = t[n];
        if (o && ("Daydream Controller" === o.id || "Gear VR Controller" === o.id || "Oculus Go Controller" === o.id || "OpenVR Gamepad" === o.id || o.id.startsWith("Oculus Touch") || o.id.startsWith("HTC Vive Focus") || o.id.startsWith("Spatial Controller"))) {
          if (i === e) return o;
          i++;
        }
      }
    }
    function E(e, i) {
      null !== i && 4 === i.length && e.set(i[0] * t, i[1] * n, i[2] * t, i[3] * n);
    }
    this.enabled = false, this.getController = function (e) {
      var t = a[e];
      return undefined === t && ((t = new Ks).matrixAutoUpdate = false, t.visible = false, a[e] = t), t;
    }, this.getDevice = function () {
      return r;
    }, this.setDevice = function (e) {
      undefined !== e && (r = e), q.setContext(e);
    }, this.setFramebufferScaleFactor = function (e) {
      h = e;
    }, this.setReferenceSpaceType = function (e) {
      u = e;
    }, this.setPoseTarget = function (e) {
      undefined !== e && (s = e);
    }, this.getCamera = function (e) {
      var t = "local-floor" === u ? 1.6 : 0;
      if (false === (null !== r && true === r.isPresenting)) return e.position.set(0, t, 0), e.rotation.set(0, 0, 0), e;
      if (r.depthNear = e.near, r.depthFar = e.far, r.getFrameData(o), "local-floor" === u) {
        var n = r.stageParameters;
        n ? l.fromArray(n.sittingToStandingTransform) : l.makeTranslation(0, t, 0);
      }
      var i = o.pose, h = null !== s ? s : e;
      h.matrix.copy(l), h.matrix.decompose(h.position, h.quaternion, h.scale), null !== i.orientation && (p.fromArray(i.orientation), h.quaternion.multiply(p)), null !== i.position && (p.setFromRotationMatrix(l), m.fromArray(i.position), m.applyQuaternion(p), h.position.add(m)), h.updateMatrixWorld(), f.near = e.near, g.near = e.near, f.far = e.far, g.far = e.far, f.matrixWorldInverse.fromArray(o.leftViewMatrix), g.matrixWorldInverse.fromArray(o.rightViewMatrix), c.getInverse(l), "local-floor" === u && (f.matrixWorldInverse.multiply(c), g.matrixWorldInverse.multiply(c));
      var _ = h.parent;
      null !== _ && (d.getInverse(_.matrixWorld), f.matrixWorldInverse.multiply(d), g.matrixWorldInverse.multiply(d)), f.matrixWorld.getInverse(f.matrixWorldInverse), g.matrixWorld.getInverse(g.matrixWorldInverse), f.projectionMatrix.fromArray(o.leftProjectionMatrix), g.projectionMatrix.fromArray(o.rightProjectionMatrix), na(v, f, g);
      var x = r.getLayers();
      if (x.length) {
        var b = x[0];
        E(f.viewport, b.leftBounds), E(g.viewport, b.rightBounds);
      }
      return function () {
        for (var e = 0; e < a.length; e++) {
          var t = a[e], n = S(e);
          if (undefined !== n && undefined !== n.pose) {
            if (null === n.pose) return;
            var i = n.pose;
            false === i.hasPosition && t.position.set(0.2, -0.6, -0.05), null !== i.position && t.position.fromArray(i.position), null !== i.orientation && t.quaternion.fromArray(i.orientation), t.matrix.compose(t.position, t.quaternion, t.scale), t.matrix.premultiply(l), t.matrix.decompose(t.position, t.quaternion, t.scale), t.matrixWorldNeedsUpdate = true, t.visible = true;
            var r = "Daydream Controller" === n.id ? 0 : 1;
            undefined === w[e] && (w[e] = false), w[e] !== n.buttons[r].pressed && (w[e] = n.buttons[r].pressed, true === w[e] ? t.dispatchEvent({type: "selectstart"}) : (t.dispatchEvent({type: "selectend"}), t.dispatchEvent({type: "select"})));
          } else t.visible = false;
        }
      }(), v;
    }, this.getStandingMatrix = function () {
      return l;
    }, this.isPresenting = y;
    var q = new so;
    this.setAnimationLoop = function (e) {
      q.setAnimationLoop(e), null !== r && true === r.isPresenting && q.start();
    }, this.submitFrame = function () {
      null !== r && true === r.isPresenting && r.submitFrame();
    }, this.dispose = function () {
      "undefined" != typeof window && window.removeEventListener("vrdisplaypresentchange", b);
    }, this.setFrameOfReferenceType = function () {
      console.warn("THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.");
    };
  }
  function ra(e, t) {
    var n = this, i = null, r = null, o = "local-floor", s = null, a = [], l = [];
    function c() {
      return null !== i && null !== r;
    }
    var h = new Hr;
    h.layers.enable(1), h.viewport = new wn;
    var u = new Hr;
    u.layers.enable(2), u.viewport = new wn;
    var d = new Zs([h, u]);
    function p(e) {
      for (var t = 0; t < a.length; t++) l[t] === e.inputSource && a[t].dispatchEvent({type: e.type});
    }
    function m() {
      e.setFramebuffer(null), e.setRenderTarget(e.getRenderTarget()), y.stop(), n.dispatchEvent({type: "sessionend"});
    }
    function f(e) {
      r = e, y.setContext(i), y.start(), n.dispatchEvent({type: "sessionstart"});
    }
    function g(e, t) {
      null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix), e.matrixWorldInverse.getInverse(e.matrixWorld);
    }
    d.layers.enable(1), d.layers.enable(2), this.enabled = false, this.getController = function (e) {
      var t = a[e];
      return undefined === t && ((t = new Ks).matrixAutoUpdate = false, t.visible = false, a[e] = t), t;
    }, this.setFramebufferScaleFactor = function (e) {}, this.setReferenceSpaceType = function (e) {
      o = e;
    }, this.getSession = function () {
      return i;
    }, this.setSession = function (e) {
      null !== (i = e) && (i.addEventListener("select", p), i.addEventListener("selectstart", p), i.addEventListener("selectend", p), i.addEventListener("end", m), i.updateRenderState({baseLayer: new XRWebGLLayer(i, t)}), i.requestReferenceSpace(o).then(f), l = i.inputSources, i.addEventListener("inputsourceschange", function () {
        l = i.inputSources, console.log(l);
        for (var e = 0; e < a.length; e++) {
          a[e].userData.inputSource = l[e];
        }
      }));
    }, this.getCamera = function (e) {
      if (null !== i && null !== r) {
        var t = e.parent, n = d.cameras;
        g(d, t);
        for (var i = 0; i < n.length; i++) g(n[i], t);
        e.matrixWorld.copy(d.matrixWorld);
        for (var r = e.children, o = (i = 0, r.length); i < o; i++) r[i].updateMatrixWorld(true);
        return na(d, h, u), d;
      }
      return e;
    }, this.isPresenting = c;
    var v = null;
    var y = new so;
    y.setAnimationLoop(function (t, n) {
      if (null !== (s = n.getViewerPose(r))) {
        var o = s.views, c = i.renderState.baseLayer;
        e.setFramebuffer(c.framebuffer);
        for (var h = 0; h < o.length; h++) {
          var u = o[h], p = c.getViewport(u), m = u.transform.inverse.matrix, f = d.cameras[h];
          f.matrix.fromArray(m).getInverse(f.matrix), f.projectionMatrix.fromArray(u.projectionMatrix), f.viewport.set(p.x, p.y, p.width, p.height), 0 === h && d.matrix.copy(f.matrix);
        }
      }
      for (h = 0; h < a.length; h++) {
        var g = a[h], y = l[h];
        if (y) {
          var _ = n.getPose(y.targetRaySpace, r);
          if (null !== _) {
            g.matrix.fromArray(_.transform.matrix), g.matrix.decompose(g.position, g.rotation, g.scale), g.visible = true;
            continue;
          }
        }
        g.visible = false;
      }
      v && v(t);
    }), this.setAnimationLoop = function (e) {
      v = e;
    }, this.dispose = function () {}, this.getStandingMatrix = function () {
      return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."), new Ln;
    }, this.getDevice = function () {
      console.warn("THREE.WebXRManager: getDevice() has been deprecated.");
    }, this.setDevice = function () {
      console.warn("THREE.WebXRManager: setDevice() has been deprecated.");
    }, this.setFrameOfReferenceType = function () {
      console.warn("THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.");
    }, this.submitFrame = function () {};
  }
  function oa(e) {
    var t = undefined !== (e = e || {}).canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), n = undefined !== e.context ? e.context : null, i = undefined !== e.alpha && e.alpha, r = undefined === e.depth || e.depth, o = undefined === e.stencil || e.stencil, s = undefined !== e.antialias && e.antialias, a = undefined === e.premultipliedAlpha || e.premultipliedAlpha, l = undefined !== e.preserveDrawingBuffer && e.preserveDrawingBuffer, c = undefined !== e.powerPreference ? e.powerPreference : "default", h = undefined !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat, u = null, d = null;
    this.domElement = t, this.debug = {checkShaderErrors: true}, this.autoClear = true, this.autoClearColor = true, this.autoClearDepth = true, this.autoClearStencil = true, this.sortObjects = true, this.clippingPlanes = [], this.localClippingEnabled = false, this.gammaFactor = 2, this.gammaInput = false, this.gammaOutput = false, this.physicallyCorrectLights = false, this.toneMapping = oe, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
    var p, m, f, g, v, _, x, b, w, S, E, q, T, A, M, C, k, R, L = this, P = false, D = null, O = 0, I = 0, B = null, F = null, z = -1, N = {geometry: null, program: null, wireframe: false}, U = null, V = null, G = new wn, H = new wn, j = null, $ = t.width, W = t.height, X = 1, Y = new wn(0, 0, $, W), J = new wn(0, 0, $, W), K = false, Z = new no, Q = new mo, ee = false, te = false, ne = new Ln, ie = new fn;
    function re() {
      return null === B ? X : 1;
    }
    try {
      var se = {alpha: i, depth: r, stencil: o, antialias: s, premultipliedAlpha: a, preserveDrawingBuffer: l, powerPreference: c, failIfMajorPerformanceCaveat: h, xrCompatible: true};
      if (t.addEventListener("webglcontextlost", he, false), t.addEventListener("webglcontextrestored", ue, false), null === (p = n || t.getContext("webgl", se) || t.getContext("experimental-webgl", se))) throw null !== t.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
      undefined === p.getShaderPrecisionFormat && (p.getShaderPrecisionFormat = function () {
        return {rangeMin: 1, rangeMax: 1, precision: 1};
      });
    } catch (e) {
      throw console.error("THREE.WebGLRenderer: " + e.message), e;
    }
    function ae() {
      m = new fo(p), (f = new po(p, m, e)).isWebGL2 || (m.get("WEBGL_depth_texture"), m.get("OES_texture_float"), m.get("OES_texture_half_float"), m.get("OES_texture_half_float_linear"), m.get("OES_standard_derivatives"), m.get("OES_element_index_uint"), m.get("ANGLE_instanced_arrays")), m.get("OES_texture_float_linear"), R = new Js(p, m, f), (g = new Xs(p, m, R, f)).scissor(H.copy(J).multiplyScalar(X).floor()), g.viewport(G.copy(Y).multiplyScalar(X).floor()), v = new yo(p), _ = new Ls, x = new Ys(p, m, g, _, f, R, v), b = new ao(p), w = new go(p, b, v), S = new bo(w, v), M = new xo(p), E = new Rs(L, m, f), q = new Is, T = new Vs, A = new ho(L, g, S, a), C = new uo(p, m, v, f), k = new vo(p, m, v, f), v.programs = E.programs, L.capabilities = f, L.extensions = m, L.properties = _, L.renderLists = q, L.state = g, L.info = v;
    }
    ae();
    var le = "undefined" != typeof navigator && "xr" in navigator && "supportsSession" in navigator.xr ? new ra(L, p) : new ia(L);
    this.vr = le;
    var ce = new Ws(L, S, f.maxTextureSize);
    function he(e) {
      e.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), P = true;
    }
    function ue() {
      console.log("THREE.WebGLRenderer: Context Restored."), P = false, ae();
    }
    function de(e) {
      var t = e.target;
      t.removeEventListener("dispose", de), function (e) {
        pe(e), _.remove(e);
      }(t);
    }
    function pe(e) {
      var t = _.get(e).program;
      e.program = undefined, undefined !== t && E.releaseProgram(t);
    }
    this.shadowMap = ce, this.getContext = function () {
      return p;
    }, this.getContextAttributes = function () {
      return p.getContextAttributes();
    }, this.forceContextLoss = function () {
      var e = m.get("WEBGL_lose_context");
      e && e.loseContext();
    }, this.forceContextRestore = function () {
      var e = m.get("WEBGL_lose_context");
      e && e.restoreContext();
    }, this.getPixelRatio = function () {
      return X;
    }, this.setPixelRatio = function (e) {
      undefined !== e && (X = e, this.setSize($, W, false));
    }, this.getSize = function (e) {
      return undefined === e && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"), e = new un), e.set($, W);
    }, this.setSize = function (e, n, i) {
      le.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : ($ = e, W = n, t.width = Math.floor(e * X), t.height = Math.floor(n * X), false !== i && (t.style.width = e + "px", t.style.height = n + "px"), this.setViewport(0, 0, e, n));
    }, this.getDrawingBufferSize = function (e) {
      return undefined === e && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"), e = new un), e.set($ * X, W * X).floor();
    }, this.setDrawingBufferSize = function (e, n, i) {
      $ = e, W = n, X = i, t.width = Math.floor(e * i), t.height = Math.floor(n * i), this.setViewport(0, 0, e, n);
    }, this.getCurrentViewport = function (e) {
      return undefined === e && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"), e = new wn), e.copy(G);
    }, this.getViewport = function (e) {
      return e.copy(Y);
    }, this.setViewport = function (e, t, n, i) {
      e.isVector4 ? Y.set(e.x, e.y, e.z, e.w) : Y.set(e, t, n, i), g.viewport(G.copy(Y).multiplyScalar(X).floor());
    }, this.getScissor = function (e) {
      return e.copy(J);
    }, this.setScissor = function (e, t, n, i) {
      e.isVector4 ? J.set(e.x, e.y, e.z, e.w) : J.set(e, t, n, i), g.scissor(H.copy(J).multiplyScalar(X).floor());
    }, this.getScissorTest = function () {
      return K;
    }, this.setScissorTest = function (e) {
      g.setScissorTest(K = e);
    }, this.getClearColor = function () {
      return A.getClearColor();
    }, this.setClearColor = function () {
      A.setClearColor.apply(A, arguments);
    }, this.getClearAlpha = function () {
      return A.getClearAlpha();
    }, this.setClearAlpha = function () {
      A.setClearAlpha.apply(A, arguments);
    }, this.clear = function (e, t, n) {
      var i = 0;
      (undefined === e || e) && (i |= 16384), (undefined === t || t) && (i |= 256), (undefined === n || n) && (i |= 1024), p.clear(i);
    }, this.clearColor = function () {
      this.clear(true, false, false);
    }, this.clearDepth = function () {
      this.clear(false, true, false);
    }, this.clearStencil = function () {
      this.clear(false, false, true);
    }, this.dispose = function () {
      t.removeEventListener("webglcontextlost", he, false), t.removeEventListener("webglcontextrestored", ue, false), q.dispose(), T.dispose(), _.dispose(), S.dispose(), le.dispose(), fe.stop();
    }, this.renderBufferImmediate = function (e, t) {
      g.initAttributes();
      var n = _.get(e);
      e.hasPositions && !n.position && (n.position = p.createBuffer()), e.hasNormals && !n.normal && (n.normal = p.createBuffer()), e.hasUvs && !n.uv && (n.uv = p.createBuffer()), e.hasColors && !n.color && (n.color = p.createBuffer());
      var i = t.getAttributes();
      e.hasPositions && (p.bindBuffer(34962, n.position), p.bufferData(34962, e.positionArray, 35048), g.enableAttribute(i.position), p.vertexAttribPointer(i.position, 3, 5126, false, 0, 0)), e.hasNormals && (p.bindBuffer(34962, n.normal), p.bufferData(34962, e.normalArray, 35048), g.enableAttribute(i.normal), p.vertexAttribPointer(i.normal, 3, 5126, false, 0, 0)), e.hasUvs && (p.bindBuffer(34962, n.uv), p.bufferData(34962, e.uvArray, 35048), g.enableAttribute(i.uv), p.vertexAttribPointer(i.uv, 2, 5126, false, 0, 0)), e.hasColors && (p.bindBuffer(34962, n.color), p.bufferData(34962, e.colorArray, 35048), g.enableAttribute(i.color), p.vertexAttribPointer(i.color, 3, 5126, false, 0, 0)), g.disableUnusedAttributes(), p.drawArrays(4, 0, e.count), e.count = 0;
    }, this.renderBufferDirect = function (e, t, n, i, r, o) {
      var s = r.isMesh && r.matrixWorld.determinant() < 0;
      g.setMaterial(i, s);
      var a = xe(e, t, i, r), l = false;
      N.geometry === n.id && N.program === a.id && N.wireframe === (true === i.wireframe) || (N.geometry = n.id, N.program = a.id, N.wireframe = true === i.wireframe, l = true), r.morphTargetInfluences && (M.update(r, n, i, a), l = true);
      var c, h = n.index, u = n.attributes.position, d = 1;
      true === i.wireframe && (h = w.getWireframeAttribute(n), d = 2);
      var v = C;
      null !== h && (c = b.get(h), (v = k).setIndex(c)), l && (!function (e, t, n) {
        if (n && n.isInstancedBufferGeometry && !f.isWebGL2 && null === m.get("ANGLE_instanced_arrays")) return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
        g.initAttributes();
        var i = n.attributes, r = t.getAttributes(), o = e.defaultAttributeValues;
        for (var s in r) {
          var a = r[s];
          if (a >= 0) {
            var l = i[s];
            if (undefined !== l) {
              var c = l.normalized, h = l.itemSize, u = b.get(l);
              if (undefined === u) continue;
              var d = u.buffer, v = u.type, y = u.bytesPerElement;
              if (l.isInterleavedBufferAttribute) {
                var _ = l.data, x = _.stride, w = l.offset;
                _ && _.isInstancedInterleavedBuffer ? (g.enableAttributeAndDivisor(a, _.meshPerAttribute), undefined === n.maxInstancedCount && (n.maxInstancedCount = _.meshPerAttribute * _.count)) : g.enableAttribute(a), p.bindBuffer(34962, d), p.vertexAttribPointer(a, h, v, c, x * y, w * y);
              } else l.isInstancedBufferAttribute ? (g.enableAttributeAndDivisor(a, l.meshPerAttribute), undefined === n.maxInstancedCount && (n.maxInstancedCount = l.meshPerAttribute * l.count)) : g.enableAttribute(a), p.bindBuffer(34962, d), p.vertexAttribPointer(a, h, v, c, 0, 0);
            } else if (undefined !== o) {
              var S = o[s];
              if (undefined !== S) switch (S.length) {
                case 2:
                  p.vertexAttrib2fv(a, S);
                  break;
                case 3:
                  p.vertexAttrib3fv(a, S);
                  break;
                case 4:
                  p.vertexAttrib4fv(a, S);
                  break;
                default:
                  p.vertexAttrib1fv(a, S);
              }
            }
          }
        }
        g.disableUnusedAttributes();
      }(i, a, n), null !== h && p.bindBuffer(34963, c.buffer));
      var y = Infinity;
      null !== h ? y = h.count : undefined !== u && (y = u.count);
      var _ = n.drawRange.start * d, x = n.drawRange.count * d, S = null !== o ? o.start * d : 0, E = null !== o ? o.count * d : Infinity, q = Math.max(_, S), T = Math.min(y, _ + x, S + E) - 1, A = Math.max(0, T - q + 1);
      if (0 !== A) {
        if (r.isMesh) if (true === i.wireframe) g.setLineWidth(i.wireframeLinewidth * re()), v.setMode(1); else switch (r.drawMode) {
          case kt:
            v.setMode(4);
            break;
          case Rt:
            v.setMode(5);
            break;
          case Lt:
            v.setMode(6);
        } else if (r.isLine) {
          var R = i.linewidth;
          undefined === R && (R = 1), g.setLineWidth(R * re()), r.isLineSegments ? v.setMode(1) : r.isLineLoop ? v.setMode(2) : v.setMode(3);
        } else r.isPoints ? v.setMode(0) : r.isSprite && v.setMode(4);
        n && n.isInstancedBufferGeometry ? n.maxInstancedCount > 0 && v.renderInstances(n, q, A) : v.render(q, A);
      }
    }, this.compile = function (e, t) {
      (d = T.get(e, t)).init(), e.traverse(function (e) {
        e.isLight && (d.pushLight(e), e.castShadow && d.pushShadow(e));
      }), d.setupLights(t), e.traverse(function (t) {
        if (t.material) if (Array.isArray(t.material)) for (var n = 0; n < t.material.length; n++) _e(t.material[n], e.fog, t); else _e(t.material, e.fog, t);
      });
    };
    var me = null;
    var fe = new so;
    function ge(e, t, n, i) {
      if (false !== e.visible) {
        if (e.layers.test(t.layers)) if (e.isGroup) n = e.renderOrder; else if (e.isLOD) true === e.autoUpdate && e.update(t); else if (e.isLight) d.pushLight(e), e.castShadow && d.pushShadow(e); else if (e.isSprite) {
          if (!e.frustumCulled || Z.intersectsSprite(e)) {
            i && ie.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ne);
            var r = S.update(e);
            (o = e.material).visible && u.push(e, r, o, n, ie.z, null);
          }
        } else if (e.isImmediateRenderObject) i && ie.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ne), u.push(e, null, e.material, n, ie.z, null); else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.update(), !e.frustumCulled || Z.intersectsObject(e))) {
          i && ie.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ne);
          r = S.update(e);
          var o = e.material;
          if (Array.isArray(o)) for (var s = r.groups, a = 0, l = s.length; a < l; a++) {
            var c = s[a], h = o[c.materialIndex];
            h && h.visible && u.push(e, r, h, n, ie.z, c);
          } else o.visible && u.push(e, r, o, n, ie.z, null);
        }
        var p = e.children;
        for (a = 0, l = p.length; a < l; a++) ge(p[a], t, n, i);
      }
    }
    function ve(e, t, n, i) {
      for (var r = 0, o = e.length; r < o; r++) {
        var s = e[r], a = s.object, l = s.geometry, c = undefined === i ? s.material : i, h = s.group;
        if (n.isArrayCamera) {
          V = n;
          for (var u = n.cameras, p = 0, m = u.length; p < m; p++) {
            var f = u[p];
            a.layers.test(f.layers) && (g.viewport(G.copy(f.viewport)), d.setupLights(f), ye(a, t, f, l, c, h));
          }
        } else V = null, ye(a, t, n, l, c, h);
      }
    }
    function ye(e, t, n, i, r, o) {
      if (e.onBeforeRender(L, t, n, i, r, o), d = T.get(t, V || n), e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject) {
        g.setMaterial(r);
        var s = xe(n, t.fog, r, e);
        N.geometry = null, N.program = null, N.wireframe = false, function (e, t) {
          e.render(function (e) {
            L.renderBufferImmediate(e, t);
          });
        }(e, s);
      } else L.renderBufferDirect(n, t.fog, i, r, e, o);
      e.onAfterRender(L, t, n, i, r, o), d = T.get(t, V || n);
    }
    function _e(e, t, n) {
      var i = _.get(e), r = d.state.lights, o = d.state.shadowsArray, s = r.state.version, a = E.getParameters(e, r.state, o, t, Q.numPlanes, Q.numIntersection, n), l = E.getProgramCode(e, a), c = i.program, h = true;
      if (undefined === c) e.addEventListener("dispose", de); else if (c.code !== l) pe(e); else if (i.lightsStateVersion !== s) i.lightsStateVersion = s, h = false; else {
        if (undefined !== a.shaderID) return;
        h = false;
      }
      if (h) {
        if (a.shaderID) {
          var u = oo[a.shaderID];
          i.shader = {name: e.type, uniforms: Br(u.uniforms), vertexShader: u.vertexShader, fragmentShader: u.fragmentShader};
        } else i.shader = {name: e.type, uniforms: e.uniforms, vertexShader: e.vertexShader, fragmentShader: e.fragmentShader};
        e.onBeforeCompile(i.shader, L), l = E.getProgramCode(e, a), c = E.acquireProgram(e, i.shader, a, l), i.program = c, e.program = c;
      }
      var p = c.getAttributes();
      if (e.morphTargets) {
        e.numSupportedMorphTargets = 0;
        for (var m = 0; m < L.maxMorphTargets; m++) p["morphTarget" + m] >= 0 && e.numSupportedMorphTargets++;
      }
      if (e.morphNormals) {
        e.numSupportedMorphNormals = 0;
        for (m = 0; m < L.maxMorphNormals; m++) p["morphNormal" + m] >= 0 && e.numSupportedMorphNormals++;
      }
      var f = i.shader.uniforms;
      (e.isShaderMaterial || e.isRawShaderMaterial) && true !== e.clipping || (i.numClippingPlanes = Q.numPlanes, i.numIntersection = Q.numIntersection, f.clippingPlanes = Q.uniform), i.fog = t, i.lightsStateVersion = s, e.lights && (f.ambientLightColor.value = r.state.ambient, f.lightProbe.value = r.state.probe, f.directionalLights.value = r.state.directional, f.spotLights.value = r.state.spot, f.rectAreaLights.value = r.state.rectArea, f.pointLights.value = r.state.point, f.hemisphereLights.value = r.state.hemi, f.directionalShadowMap.value = r.state.directionalShadowMap, f.directionalShadowMatrix.value = r.state.directionalShadowMatrix, f.spotShadowMap.value = r.state.spotShadowMap, f.spotShadowMatrix.value = r.state.spotShadowMatrix, f.pointShadowMap.value = r.state.pointShadowMap, f.pointShadowMatrix.value = r.state.pointShadowMatrix);
      var g = i.program.getUniforms(), v = ys.seqWithValue(g.seq, f);
      i.uniformsList = v;
    }
    function xe(e, t, n, i) {
      x.resetTextureUnits();
      var r = _.get(n), o = d.state.lights;
      if (ee && (te || e !== U)) {
        var s = e === U && n.id === z;
        Q.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, e, r, s);
      }
      false === n.needsUpdate && (undefined === r.program ? n.needsUpdate = true : n.fog && r.fog !== t ? n.needsUpdate = true : n.lights && r.lightsStateVersion !== o.state.version ? n.needsUpdate = true : undefined === r.numClippingPlanes || r.numClippingPlanes === Q.numPlanes && r.numIntersection === Q.numIntersection || (n.needsUpdate = true)), n.needsUpdate && (_e(n, t, i), n.needsUpdate = false);
      var a, l, c = false, h = false, u = false, m = r.program, v = m.getUniforms(), b = r.shader.uniforms;
      if (g.useProgram(m.program) && (c = true, h = true, u = true), n.id !== z && (z = n.id, h = true), c || U !== e) {
        if (v.setValue(p, "projectionMatrix", e.projectionMatrix), f.logarithmicDepthBuffer && v.setValue(p, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)), U !== e && (U = e, h = true, u = true), n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshStandardMaterial || n.envMap) {
          var w = v.map.cameraPosition;
          undefined !== w && w.setValue(p, ie.setFromMatrixPosition(e.matrixWorld));
        }
        (n.isMeshPhongMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && v.setValue(p, "viewMatrix", e.matrixWorldInverse);
      }
      if (n.skinning) {
        v.setOptional(p, i, "bindMatrix"), v.setOptional(p, i, "bindMatrixInverse");
        var S = i.skeleton;
        if (S) {
          var E = S.bones;
          if (f.floatVertexTextures) {
            if (undefined === S.boneTexture) {
              var q = Math.sqrt(4 * E.length);
              q = hn.ceilPowerOfTwo(q), q = Math.max(q, 4);
              var T = new Float32Array(q * q * 4);
              T.set(S.boneMatrices);
              var A = new Yr(T, q, q, je, Be);
              A.needsUpdate = true, S.boneMatrices = T, S.boneTexture = A, S.boneTextureSize = q;
            }
            v.setValue(p, "boneTexture", S.boneTexture, x), v.setValue(p, "boneTextureSize", S.boneTextureSize);
          } else v.setOptional(p, S, "boneMatrices");
        }
      }
      return h && (v.setValue(p, "toneMappingExposure", L.toneMappingExposure), v.setValue(p, "toneMappingWhitePoint", L.toneMappingWhitePoint), n.lights && (l = u, (a = b).ambientLightColor.needsUpdate = l, a.lightProbe.needsUpdate = l, a.directionalLights.needsUpdate = l, a.pointLights.needsUpdate = l, a.spotLights.needsUpdate = l, a.rectAreaLights.needsUpdate = l, a.hemisphereLights.needsUpdate = l), t && n.fog && function (e, t) {
        e.fogColor.value.copy(t.color), t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density);
      }(b, t), n.isMeshBasicMaterial ? be(b, n) : n.isMeshLambertMaterial ? (be(b, n), function (e, t) {
        t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
      }(b, n)) : n.isMeshPhongMaterial ? (be(b, n), n.isMeshToonMaterial ? function (e, t) {
        we(e, t), t.gradientMap && (e.gradientMap.value = t.gradientMap);
      }(b, n) : we(b, n)) : n.isMeshStandardMaterial ? (be(b, n), n.isMeshPhysicalMaterial ? function (e, t) {
        Se(e, t), e.reflectivity.value = t.reflectivity, e.clearcoat.value = t.clearcoat, e.clearcoatRoughness.value = t.clearcoatRoughness, t.sheen && e.sheen.value.copy(t.sheen);
        t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale), e.clearcoatNormalMap.value = t.clearcoatNormalMap, t.side === y && e.clearcoatNormalScale.value.negate());
        e.transparency.value = t.transparency;
      }(b, n) : Se(b, n)) : n.isMeshMatcapMaterial ? (be(b, n), function (e, t) {
        t.matcap && (e.matcap.value = t.matcap);
        t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === y && (e.bumpScale.value *= -1));
        t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === y && e.normalScale.value.negate());
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
      }(b, n)) : n.isMeshDepthMaterial ? (be(b, n), function (e, t) {
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
      }(b, n)) : n.isMeshDistanceMaterial ? (be(b, n), function (e, t) {
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
        e.referencePosition.value.copy(t.referencePosition), e.nearDistance.value = t.nearDistance, e.farDistance.value = t.farDistance;
      }(b, n)) : n.isMeshNormalMaterial ? (be(b, n), function (e, t) {
        t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === y && (e.bumpScale.value *= -1));
        t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === y && e.normalScale.value.negate());
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
      }(b, n)) : n.isLineBasicMaterial ? (function (e, t) {
        e.diffuse.value.copy(t.color), e.opacity.value = t.opacity;
      }(b, n), n.isLineDashedMaterial && function (e, t) {
        e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale;
      }(b, n)) : n.isPointsMaterial ? function (e, t) {
        e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.size.value = t.size * X, e.scale.value = 0.5 * W, e.map.value = t.map, null !== t.map && (true === t.map.matrixAutoUpdate && t.map.updateMatrix(), e.uvTransform.value.copy(t.map.matrix));
      }(b, n) : n.isSpriteMaterial ? function (e, t) {
        e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.rotation.value = t.rotation, e.map.value = t.map, null !== t.map && (true === t.map.matrixAutoUpdate && t.map.updateMatrix(), e.uvTransform.value.copy(t.map.matrix));
      }(b, n) : n.isShadowMaterial && (b.color.value.copy(n.color), b.opacity.value = n.opacity), undefined !== b.ltc_1 && (b.ltc_1.value = ro.LTC_1), undefined !== b.ltc_2 && (b.ltc_2.value = ro.LTC_2), ys.upload(p, r.uniformsList, b, x)), n.isShaderMaterial && true === n.uniformsNeedUpdate && (ys.upload(p, r.uniformsList, b, x), n.uniformsNeedUpdate = false), n.isSpriteMaterial && v.setValue(p, "center", i.center), v.setValue(p, "modelViewMatrix", i.modelViewMatrix), v.setValue(p, "normalMatrix", i.normalMatrix), v.setValue(p, "modelMatrix", i.matrixWorld), m;
    }
    function be(e, t) {
      var n;
      e.opacity.value = t.opacity, t.color && e.diffuse.value.copy(t.color), t.emissive && e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity), t.map && (e.map.value = t.map), t.alphaMap && (e.alphaMap.value = t.alphaMap), t.specularMap && (e.specularMap.value = t.specularMap), t.envMap && (e.envMap.value = t.envMap, e.flipEnvMap.value = t.envMap.isCubeTexture ? -1 : 1, e.reflectivity.value = t.reflectivity, e.refractionRatio.value = t.refractionRatio, e.maxMipLevel.value = _.get(t.envMap).__maxMipLevel), t.lightMap && (e.lightMap.value = t.lightMap, e.lightMapIntensity.value = t.lightMapIntensity), t.aoMap && (e.aoMap.value = t.aoMap, e.aoMapIntensity.value = t.aoMapIntensity), t.map ? n = t.map : t.specularMap ? n = t.specularMap : t.displacementMap ? n = t.displacementMap : t.normalMap ? n = t.normalMap : t.bumpMap ? n = t.bumpMap : t.roughnessMap ? n = t.roughnessMap : t.metalnessMap ? n = t.metalnessMap : t.alphaMap ? n = t.alphaMap : t.emissiveMap && (n = t.emissiveMap), undefined !== n && (n.isWebGLRenderTarget && (n = n.texture), true === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix));
    }
    function we(e, t) {
      e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 0.0001), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === y && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === y && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
    }
    function Se(e, t) {
      e.roughness.value = t.roughness, e.metalness.value = t.metalness, t.roughnessMap && (e.roughnessMap.value = t.roughnessMap), t.metalnessMap && (e.metalnessMap.value = t.metalnessMap), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === y && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === y && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias), t.envMap && (e.envMapIntensity.value = t.envMapIntensity);
    }
    fe.setAnimationLoop(function (e) {
      le.isPresenting() || me && me(e);
    }), "undefined" != typeof window && fe.setContext(window), this.setAnimationLoop = function (e) {
      me = e, le.setAnimationLoop(e), fe.start();
    }, this.render = function (e, t) {
      var n, i;
      if (undefined !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."), n = arguments[2]), undefined !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."), i = arguments[3]), t && t.isCamera) {
        if (!P) {
          N.geometry = null, N.program = null, N.wireframe = false, z = -1, U = null, true === e.autoUpdate && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), le.enabled && (t = le.getCamera(t)), (d = T.get(e, t)).init(), e.onBeforeRender(L, e, t, n || B), ne.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), Z.setFromMatrix(ne), te = this.localClippingEnabled, ee = Q.init(this.clippingPlanes, te, t), (u = q.get(e, t)).init(), ge(e, t, 0, L.sortObjects), true === L.sortObjects && u.sort(), ee && Q.beginShadows();
          var r = d.state.shadowsArray;
          ce.render(r, e, t), d.setupLights(t), ee && Q.endShadows(), this.info.autoReset && this.info.reset(), undefined !== n && this.setRenderTarget(n), A.render(u, e, t, i);
          var o = u.opaque, s = u.transparent;
          if (e.overrideMaterial) {
            var a = e.overrideMaterial;
            o.length && ve(o, e, t, a), s.length && ve(s, e, t, a);
          } else o.length && ve(o, e, t), s.length && ve(s, e, t);
          e.onAfterRender(L, e, t), null !== B && (x.updateRenderTargetMipmap(B), x.updateMultisampleRenderTarget(B)), g.buffers.depth.setTest(true), g.buffers.depth.setMask(true), g.buffers.color.setMask(true), g.setPolygonOffset(false), le.enabled && le.submitFrame(), u = null, d = null;
        }
      } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
    }, this.setFramebuffer = function (e) {
      D !== e && p.bindFramebuffer(36160, e), D = e;
    }, this.getActiveCubeFace = function () {
      return O;
    }, this.getActiveMipmapLevel = function () {
      return I;
    }, this.getRenderTarget = function () {
      return B;
    }, this.setRenderTarget = function (e, t, n) {
      B = e, O = t, I = n, e && undefined === _.get(e).__webglFramebuffer && x.setupRenderTarget(e);
      var i = D, r = false;
      if (e) {
        var o = _.get(e).__webglFramebuffer;
        e.isWebGLRenderTargetCube ? (i = o[t || 0], r = true) : i = e.isWebGLMultisampleRenderTarget ? _.get(e).__webglMultisampledFramebuffer : o, G.copy(e.viewport), H.copy(e.scissor), j = e.scissorTest;
      } else G.copy(Y).multiplyScalar(X).floor(), H.copy(J).multiplyScalar(X).floor(), j = K;
      if (F !== i && (p.bindFramebuffer(36160, i), F = i), g.viewport(G), g.scissor(H), g.setScissorTest(j), r) {
        var s = _.get(e.texture);
        p.framebufferTexture2D(36160, 36064, 34069 + (t || 0), s.__webglTexture, n || 0);
      }
    }, this.readRenderTargetPixels = function (e, t, n, i, r, o, s) {
      if (e && e.isWebGLRenderTarget) {
        var a = _.get(e).__webglFramebuffer;
        if (e.isWebGLRenderTargetCube && undefined !== s && (a = a[s]), a) {
          var l = false;
          a !== F && (p.bindFramebuffer(36160, a), l = true);
          try {
            var c = e.texture, h = c.format, u = c.type;
            if (h !== je && R.convert(h) !== p.getParameter(35739)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
            if (!(u === Re || R.convert(u) === p.getParameter(35738) || u === Be && (f.isWebGL2 || m.get("OES_texture_float") || m.get("WEBGL_color_buffer_float")) || u === Fe && (f.isWebGL2 ? m.get("EXT_color_buffer_float") : m.get("EXT_color_buffer_half_float")))) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
            36053 === p.checkFramebufferStatus(36160) ? t >= 0 && t <= e.width - i && n >= 0 && n <= e.height - r && p.readPixels(t, n, i, r, R.convert(h), R.convert(u), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
          } finally {
            l && p.bindFramebuffer(36160, F);
          }
        }
      } else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
    }, this.copyFramebufferToTexture = function (e, t, n) {
      var i = t.image.width, r = t.image.height, o = R.convert(t.format);
      x.setTexture2D(t, 0), p.copyTexImage2D(3553, n || 0, o, e.x, e.y, i, r, 0);
    }, this.copyTextureToTexture = function (e, t, n, i) {
      var r = t.image.width, o = t.image.height, s = R.convert(n.format), a = R.convert(n.type);
      x.setTexture2D(n, 0), t.isDataTexture ? p.texSubImage2D(3553, i || 0, e.x, e.y, r, o, s, a, t.image.data) : p.texSubImage2D(3553, i || 0, e.x, e.y, s, a, t.image);
    }, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {detail: this}));
  }
  function sa(e, t) {
    this.name = "", this.color = new Ii(e), this.density = undefined !== t ? t : 0.00025;
  }
  function aa(e, t, n) {
    this.name = "", this.color = new Ii(e), this.near = undefined !== t ? t : 1, this.far = undefined !== n ? n : 1e3;
  }
  function la(e, t) {
    this.array = e, this.stride = t, this.count = undefined !== e ? e.length / t : 0, this.dynamic = false, this.updateRange = {offset: 0, count: -1}, this.version = 0;
  }
  function ca(e, t, n, i) {
    this.data = e, this.itemSize = t, this.offset = n, this.normalized = true === i;
  }
  function ha(e) {
    Vi.call(this), this.type = "SpriteMaterial", this.color = new Ii(16777215), this.map = null, this.rotation = 0, this.sizeAttenuation = true, this.lights = false, this.transparent = true, this.setValues(e);
  }
  Object.assign(ia.prototype, i.prototype), Object.assign(ra.prototype, i.prototype), Object.assign(sa.prototype, {isFogExp2: true, clone: function () {
    return new sa(this.color, this.density);
  }, toJSON: function () {
    return {type: "FogExp2", color: this.color.getHex(), density: this.density};
  }}), Object.assign(aa.prototype, {isFog: true, clone: function () {
    return new aa(this.color, this.near, this.far);
  }, toJSON: function () {
    return {type: "Fog", color: this.color.getHex(), near: this.near, far: this.far};
  }}), Object.defineProperty(la.prototype, "needsUpdate", {set: function (e) {
    true === e && this.version++;
  }}), Object.assign(la.prototype, {isInterleavedBuffer: true, onUploadCallback: function () {}, setArray: function (e) {
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    return this.count = undefined !== e ? e.length / this.stride : 0, this.array = e, this;
  }, setDynamic: function (e) {
    return this.dynamic = e, this;
  }, copy: function (e) {
    return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.dynamic = e.dynamic, this;
  }, copyAt: function (e, t, n) {
    e *= this.stride, n *= t.stride;
    for (var i = 0, r = this.stride; i < r; i++) this.array[e + i] = t.array[n + i];
    return this;
  }, set: function (e, t) {
    return undefined === t && (t = 0), this.array.set(e, t), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, onUpload: function (e) {
    return this.onUploadCallback = e, this;
  }}), Object.defineProperties(ca.prototype, {count: {get: function () {
    return this.data.count;
  }}, array: {get: function () {
    return this.data.array;
  }}}), Object.assign(ca.prototype, {isInterleavedBufferAttribute: true, setX: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset] = t, this;
  }, setY: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset + 1] = t, this;
  }, setZ: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset + 2] = t, this;
  }, setW: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset + 3] = t, this;
  }, getX: function (e) {
    return this.data.array[e * this.data.stride + this.offset];
  }, getY: function (e) {
    return this.data.array[e * this.data.stride + this.offset + 1];
  }, getZ: function (e) {
    return this.data.array[e * this.data.stride + this.offset + 2];
  }, getW: function (e) {
    return this.data.array[e * this.data.stride + this.offset + 3];
  }, setXY: function (e, t, n) {
    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
  }, setXYZ: function (e, t, n, i) {
    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
  }, setXYZW: function (e, t, n, i, r) {
    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
  }}), ha.prototype = Object.create(Vi.prototype), ha.prototype.constructor = ha, ha.prototype.isSpriteMaterial = true, ha.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this;
  };
  var ua = new fn, da = new fn, pa = new fn, ma = new un, fa = new un, ga = new Ln, va = new fn, ya = new fn, _a = new fn, xa = new un, ba = new un, wa = new un;
  function Sa(e) {
    if (Jn.call(this), this.type = "Sprite", undefined === Qs) {
      Qs = new cr;
      var t = new la(new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]), 5);
      Qs.setIndex([0, 1, 2, 0, 2, 3]), Qs.addAttribute("position", new ca(t, 3, 0, false)), Qs.addAttribute("uv", new ca(t, 2, 3, false));
    }
    this.geometry = Qs, this.material = undefined !== e ? e : new ha, this.center = new un(0.5, 0.5);
  }
  function Ea(e, t, n, i, r, o) {
    ma.subVectors(e, n).addScalar(0.5).multiply(i), undefined !== r ? (fa.x = o * ma.x - r * ma.y, fa.y = r * ma.x + o * ma.y) : fa.copy(ma), e.copy(t), e.x += fa.x, e.y += fa.y, e.applyMatrix4(ga);
  }
  Sa.prototype = Object.assign(Object.create(Jn.prototype), {constructor: Sa, isSprite: true, raycast: function (e, t) {
    null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), da.setFromMatrixScale(this.matrixWorld), ga.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), pa.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && false === this.material.sizeAttenuation && da.multiplyScalar(-pa.z);
    var n, i, r = this.material.rotation;
    0 !== r && (i = Math.cos(r), n = Math.sin(r));
    var o = this.center;
    Ea(va.set(-0.5, -0.5, 0), pa, o, da, n, i), Ea(ya.set(0.5, -0.5, 0), pa, o, da, n, i), Ea(_a.set(0.5, 0.5, 0), pa, o, da, n, i), xa.set(0, 0), ba.set(1, 0), wa.set(1, 1);
    var s = e.ray.intersectTriangle(va, ya, _a, false, ua);
    if (null !== s || (Ea(ya.set(-0.5, 0.5, 0), pa, o, da, n, i), ba.set(0, 1), null !== (s = e.ray.intersectTriangle(va, _a, ya, false, ua)))) {
      var a = e.ray.origin.distanceTo(ua);
      a < e.near || a > e.far || t.push({distance: a, point: ua.clone(), uv: Li.getUV(ua, va, ya, _a, xa, ba, wa, new un), face: null, object: this});
    }
  }, clone: function () {
    return new this.constructor(this.material).copy(this);
  }, copy: function (e) {
    return Jn.prototype.copy.call(this, e), undefined !== e.center && this.center.copy(e.center), this;
  }});
  var qa = new fn, Ta = new fn;
  function Aa() {
    Jn.call(this), this.type = "LOD", Object.defineProperties(this, {levels: {enumerable: true, value: []}}), this.autoUpdate = true;
  }
  function Ma(e, t) {
    e && e.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."), Ar.call(this, e, t), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new Ln, this.bindMatrixInverse = new Ln;
  }
  Aa.prototype = Object.assign(Object.create(Jn.prototype), {constructor: Aa, isLOD: true, copy: function (e) {
    Jn.prototype.copy.call(this, e, false);
    for (var t = e.levels, n = 0, i = t.length; n < i; n++) {
      var r = t[n];
      this.addLevel(r.object.clone(), r.distance);
    }
    return this;
  }, addLevel: function (e, t) {
    undefined === t && (t = 0), t = Math.abs(t);
    for (var n = this.levels, i = 0; i < n.length && !(t < n[i].distance); i++) ;
    return n.splice(i, 0, {distance: t, object: e}), this.add(e), this;
  }, getObjectForDistance: function (e) {
    for (var t = this.levels, n = 1, i = t.length; n < i && !(e < t[n].distance); n++) ;
    return t[n - 1].object;
  }, raycast: function (e, t) {
    qa.setFromMatrixPosition(this.matrixWorld);
    var n = e.ray.origin.distanceTo(qa);
    this.getObjectForDistance(n).raycast(e, t);
  }, update: function (e) {
    var t = this.levels;
    if (t.length > 1) {
      qa.setFromMatrixPosition(e.matrixWorld), Ta.setFromMatrixPosition(this.matrixWorld);
      var n = qa.distanceTo(Ta);
      t[0].object.visible = true;
      for (var i = 1, r = t.length; i < r && n >= t[i].distance; i++) t[i - 1].object.visible = false, t[i].object.visible = true;
      for (; i < r; i++) t[i].object.visible = false;
    }
  }, toJSON: function (e) {
    var t = Jn.prototype.toJSON.call(this, e);
    t.object.levels = [];
    for (var n = this.levels, i = 0, r = n.length; i < r; i++) {
      var o = n[i];
      t.object.levels.push({object: o.object.uuid, distance: o.distance});
    }
    return t;
  }}), Ma.prototype = Object.assign(Object.create(Ar.prototype), {constructor: Ma, isSkinnedMesh: true, bind: function (e, t) {
    this.skeleton = e, undefined === t && (this.updateMatrixWorld(true), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.getInverse(t);
  }, pose: function () {
    this.skeleton.pose();
  }, normalizeSkinWeights: function () {
    for (var e = new wn, t = this.geometry.attributes.skinWeight, n = 0, i = t.count; n < i; n++) {
      e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
      var r = 1 / e.manhattanLength();
      r !== Infinity ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
    }
  }, updateMatrixWorld: function (e) {
    Ar.prototype.updateMatrixWorld.call(this, e), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }});
  var Ca = new Ln, ka = new Ln;
  function Ra(e, t) {
    if (e = e || [], this.bones = e.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), undefined === t) this.calculateInverses(); else if (this.bones.length === t.length) this.boneInverses = t.slice(0); else {
      console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
      for (var n = 0, i = this.bones.length; n < i; n++) this.boneInverses.push(new Ln);
    }
  }
  function La() {
    Jn.call(this), this.type = "Bone";
  }
  function Pa(e) {
    Vi.call(this), this.type = "LineBasicMaterial", this.color = new Ii(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = false, this.setValues(e);
  }
  Object.assign(Ra.prototype, {calculateInverses: function () {
    this.boneInverses = [];
    for (var e = 0, t = this.bones.length; e < t; e++) {
      var n = new Ln;
      this.bones[e] && n.getInverse(this.bones[e].matrixWorld), this.boneInverses.push(n);
    }
  }, pose: function () {
    var e, t, n;
    for (t = 0, n = this.bones.length; t < n; t++) (e = this.bones[t]) && e.matrixWorld.getInverse(this.boneInverses[t]);
    for (t = 0, n = this.bones.length; t < n; t++) (e = this.bones[t]) && (e.parent && e.parent.isBone ? (e.matrix.getInverse(e.parent.matrixWorld), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale));
  }, update: function () {
    for (var e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture, r = 0, o = e.length; r < o; r++) {
      var s = e[r] ? e[r].matrixWorld : ka;
      Ca.multiplyMatrices(s, t[r]), Ca.toArray(n, 16 * r);
    }
    undefined !== i && (i.needsUpdate = true);
  }, clone: function () {
    return new Ra(this.bones, this.boneInverses);
  }, getBoneByName: function (e) {
    for (var t = 0, n = this.bones.length; t < n; t++) {
      var i = this.bones[t];
      if (i.name === e) return i;
    }
  }}), La.prototype = Object.assign(Object.create(Jn.prototype), {constructor: La, isBone: true}), Pa.prototype = Object.create(Vi.prototype), Pa.prototype.constructor = Pa, Pa.prototype.isLineBasicMaterial = true, Pa.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;
  };
  var Da = new fn, Oa = new fn, Ia = new Ln, Ba = new bi, Fa = new pi;
  function za(e, t, n) {
    1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), Jn.call(this), this.type = "Line", this.geometry = undefined !== e ? e : new cr, this.material = undefined !== t ? t : new Pa({color: 16777215 * Math.random()});
  }
  za.prototype = Object.assign(Object.create(Jn.prototype), {constructor: za, isLine: true, computeLineDistances: function () {
    var e = this.geometry;
    if (e.isBufferGeometry) if (null === e.index) {
      for (var t = e.attributes.position, n = [0], i = 1, r = t.count; i < r; i++) Da.fromBufferAttribute(t, i - 1), Oa.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += Da.distanceTo(Oa);
      e.addAttribute("lineDistance", new Zi(n, 1));
    } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."); else if (e.isGeometry) {
      var o = e.vertices;
      (n = e.lineDistances)[0] = 0;
      for (i = 1, r = o.length; i < r; i++) n[i] = n[i - 1], n[i] += o[i - 1].distanceTo(o[i]);
    }
    return this;
  }, raycast: function (e, t) {
    var n = e.linePrecision, i = this.geometry, r = this.matrixWorld;
    if (null === i.boundingSphere && i.computeBoundingSphere(), Fa.copy(i.boundingSphere), Fa.applyMatrix4(r), Fa.radius += n, false !== e.ray.intersectsSphere(Fa)) {
      Ia.getInverse(r), Ba.copy(e.ray).applyMatrix4(Ia);
      var o = n / ((this.scale.x + this.scale.y + this.scale.z) / 3), s = o * o, a = new fn, l = new fn, c = new fn, h = new fn, u = this && this.isLineSegments ? 2 : 1;
      if (i.isBufferGeometry) {
        var d = i.index, p = i.attributes.position.array;
        if (null !== d) for (var m = d.array, f = 0, g = m.length - 1; f < g; f += u) {
          var v = m[f], y = m[f + 1];
          if (a.fromArray(p, 3 * v), l.fromArray(p, 3 * y), !(Ba.distanceSqToSegment(a, l, h, c) > s)) h.applyMatrix4(this.matrixWorld), (b = e.ray.origin.distanceTo(h)) < e.near || b > e.far || t.push({distance: b, point: c.clone().applyMatrix4(this.matrixWorld), index: f, face: null, faceIndex: null, object: this});
        } else for (f = 0, g = p.length / 3 - 1; f < g; f += u) {
          if (a.fromArray(p, 3 * f), l.fromArray(p, 3 * f + 3), !(Ba.distanceSqToSegment(a, l, h, c) > s)) h.applyMatrix4(this.matrixWorld), (b = e.ray.origin.distanceTo(h)) < e.near || b > e.far || t.push({distance: b, point: c.clone().applyMatrix4(this.matrixWorld), index: f, face: null, faceIndex: null, object: this});
        }
      } else if (i.isGeometry) {
        var _ = i.vertices, x = _.length;
        for (f = 0; f < x - 1; f += u) {
          var b;
          if (!(Ba.distanceSqToSegment(_[f], _[f + 1], h, c) > s)) h.applyMatrix4(this.matrixWorld), (b = e.ray.origin.distanceTo(h)) < e.near || b > e.far || t.push({distance: b, point: c.clone().applyMatrix4(this.matrixWorld), index: f, face: null, faceIndex: null, object: this});
        }
      }
    }
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }});
  var Na = new fn, Ua = new fn;
  function Va(e, t) {
    za.call(this, e, t), this.type = "LineSegments";
  }
  function Ga(e, t) {
    za.call(this, e, t), this.type = "LineLoop";
  }
  function Ha(e) {
    Vi.call(this), this.type = "PointsMaterial", this.color = new Ii(16777215), this.map = null, this.size = 1, this.sizeAttenuation = true, this.morphTargets = false, this.lights = false, this.setValues(e);
  }
  Va.prototype = Object.assign(Object.create(za.prototype), {constructor: Va, isLineSegments: true, computeLineDistances: function () {
    var e = this.geometry;
    if (e.isBufferGeometry) if (null === e.index) {
      for (var t = e.attributes.position, n = [], i = 0, r = t.count; i < r; i += 2) Na.fromBufferAttribute(t, i), Ua.fromBufferAttribute(t, i + 1), n[i] = 0 === i ? 0 : n[i - 1], n[i + 1] = n[i] + Na.distanceTo(Ua);
      e.addAttribute("lineDistance", new Zi(n, 1));
    } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."); else if (e.isGeometry) {
      var o = e.vertices;
      for (n = e.lineDistances, i = 0, r = o.length; i < r; i += 2) Na.copy(o[i]), Ua.copy(o[i + 1]), n[i] = 0 === i ? 0 : n[i - 1], n[i + 1] = n[i] + Na.distanceTo(Ua);
    }
    return this;
  }}), Ga.prototype = Object.assign(Object.create(za.prototype), {constructor: Ga, isLineLoop: true}), Ha.prototype = Object.create(Vi.prototype), Ha.prototype.constructor = Ha, Ha.prototype.isPointsMaterial = true, Ha.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.morphTargets = e.morphTargets, this;
  };
  var ja = new Ln, $a = new bi, Wa = new pi, Xa = new fn;
  function Ya(e, t) {
    Jn.call(this), this.type = "Points", this.geometry = undefined !== e ? e : new cr, this.material = undefined !== t ? t : new Ha({color: 16777215 * Math.random()}), this.updateMorphTargets();
  }
  function Ja(e, t, n, i, r, o, s) {
    var a = $a.distanceSqToPoint(e);
    if (a < n) {
      var l = new fn;
      $a.closestPointToPoint(e, l), l.applyMatrix4(i);
      var c = r.ray.origin.distanceTo(l);
      if (c < r.near || c > r.far) return;
      o.push({distance: c, distanceToRay: Math.sqrt(a), point: l, index: t, face: null, object: s});
    }
  }
  function Ka(e, t, n, i, r, o, s, a, l) {
    bn.call(this, e, t, n, i, r, o, s, a, l), this.format = undefined !== s ? s : He, this.minFilter = undefined !== o ? o : Te, this.magFilter = undefined !== r ? r : Te, this.generateMipmaps = false;
  }
  function Za(e, t, n, i, r, o, s, a, l, c, h, u) {
    bn.call(this, null, o, s, a, l, c, i, r, h, u), this.image = {width: t, height: n}, this.mipmaps = e, this.flipY = false, this.generateMipmaps = false;
  }
  function Qa(e, t, n, i, r, o, s, a, l) {
    bn.call(this, e, t, n, i, r, o, s, a, l), this.needsUpdate = true;
  }
  function el(e, t, n, i, r, o, s, a, l, c) {
    if ((c = undefined !== c ? c : Ye) !== Ye && c !== Je) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
    undefined === n && c === Ye && (n = De), undefined === n && c === Je && (n = Ve), bn.call(this, null, i, r, o, s, a, c, n, l), this.image = {width: e, height: t}, this.magFilter = undefined !== s ? s : be, this.minFilter = undefined !== a ? a : be, this.flipY = false, this.generateMipmaps = false;
  }
  function tl(e) {
    cr.call(this), this.type = "WireframeGeometry";
    var t, n, i, r, o, s, a, l, c, h, u = [], d = [0, 0], p = {}, m = ["a", "b", "c"];
    if (e && e.isGeometry) {
      var f = e.faces;
      for (t = 0, i = f.length; t < i; t++) {
        var g = f[t];
        for (n = 0; n < 3; n++) a = g[m[n]], l = g[m[(n + 1) % 3]], d[0] = Math.min(a, l), d[1] = Math.max(a, l), undefined === p[c = "0,0"] && (p[c] = {index1: 0, index2: 0});
      }
      for (c in p) s = p[c], h = e.vertices[s.index1], u.push(h.x, h.y, h.z), h = e.vertices[s.index2], u.push(h.x, h.y, h.z);
    } else if (e && e.isBufferGeometry) {
      var v, y, _, x, b, w, S;
      if (h = new fn, null !== e.index) {
        for (v = e.attributes.position, y = e.index, 0 === (_ = e.groups).length && (_ = [{start: 0, count: y.count, materialIndex: 0}]), r = 0, o = _.length; r < o; ++r) for (t = b = (x = _[r]).start, i = b + x.count; t < i; t += 3) for (n = 0; n < 3; n++) a = y.getX(t + n), l = y.getX(t + (n + 1) % 3), d[0] = Math.min(a, l), d[1] = Math.max(a, l), undefined === p[c = "0,0"] && (p[c] = {index1: 0, index2: 0});
        for (c in p) s = p[c], h.fromBufferAttribute(v, s.index1), u.push(h.x, h.y, h.z), h.fromBufferAttribute(v, s.index2), u.push(h.x, h.y, h.z);
      } else for (t = 0, i = (v = e.attributes.position).count / 3; t < i; t++) for (n = 0; n < 3; n++) w = 3 * t + n, h.fromBufferAttribute(v, w), u.push(h.x, h.y, h.z), S = 3 * t + (n + 1) % 3, h.fromBufferAttribute(v, S), u.push(h.x, h.y, h.z);
    }
    this.addAttribute("position", new Zi(u, 3));
  }
  function nl(e, t, n) {
    Dr.call(this), this.type = "ParametricGeometry", this.parameters = {func: e, slices: t, stacks: n}, this.fromBufferGeometry(new il(e, t, n)), this.mergeVertices();
  }
  function il(e, t, n) {
    cr.call(this), this.type = "ParametricBufferGeometry", this.parameters = {func: e, slices: t, stacks: n};
    var i, r, o = [], s = [], a = [], l = [], c = new fn, h = new fn, u = new fn, d = new fn, p = new fn;
    e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
    var m = t + 1;
    for (i = 0; i <= n; i++) {
      var f = i / n;
      for (r = 0; r <= t; r++) {
        var g = r / t;
        e(g, f, h), s.push(h.x, h.y, h.z), g - 0.00001 >= 0 ? (e(g - 0.00001, f, u), d.subVectors(h, u)) : (e(g + 0.00001, f, u), d.subVectors(u, h)), f - 0.00001 >= 0 ? (e(g, f - 0.00001, u), p.subVectors(h, u)) : (e(g, f + 0.00001, u), p.subVectors(u, h)), c.crossVectors(d, p).normalize(), a.push(c.x, c.y, c.z), l.push(g, f);
      }
    }
    for (i = 0; i < n; i++) for (r = 0; r < t; r++) {
      var v = i * m + r, y = i * m + r + 1, _ = (i + 1) * m + r + 1, x = (i + 1) * m + r;
      o.push(v, y, x), o.push(y, _, x);
    }
    this.setIndex(o), this.addAttribute("position", new Zi(s, 3)), this.addAttribute("normal", new Zi(a, 3)), this.addAttribute("uv", new Zi(l, 2));
  }
  function rl(e, t, n, i) {
    Dr.call(this), this.type = "PolyhedronGeometry", this.parameters = {vertices: e, indices: t, radius: n, detail: i}, this.fromBufferGeometry(new ol(e, t, n, i)), this.mergeVertices();
  }
  function ol(e, t, n, i) {
    cr.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = {vertices: e, indices: t, radius: n, detail: i}, n = n || 1;
    var r = [], o = [];
    function s(e, t, n, i) {
      var r, o, s = Math.pow(2, i), l = [];
      for (r = 0; r <= s; r++) {
        l[r] = [];
        var c = e.clone().lerp(n, r / s), h = t.clone().lerp(n, r / s), u = s - r;
        for (o = 0; o <= u; o++) l[r][o] = 0 === o && r === s ? c : c.clone().lerp(h, o / u);
      }
      for (r = 0; r < s; r++) for (o = 0; o < 2 * (s - r) - 1; o++) {
        var d = Math.floor(o / 2);
        o % 2 == 0 ? (a(l[r][d + 1]), a(l[r + 1][d]), a(l[r][d])) : (a(l[r][d + 1]), a(l[r + 1][d + 1]), a(l[r + 1][d]));
      }
    }
    function a(e) {
      r.push(e.x, e.y, e.z);
    }
    function l(t, n) {
      var i = 3 * t;
      n.x = e[i + 0], n.y = e[i + 1], n.z = e[i + 2];
    }
    function c(e, t, n, i) {
      i < 0 && 1 === e.x && (o[t] = e.x - 1), 0 === n.x && 0 === n.z && (o[t] = i / 2 / Math.PI + 0.5);
    }
    function h(e) {
      return Math.atan2(e.z, -e.x);
    }
    !function (e) {
      for (var n = new fn, i = new fn, r = new fn, o = 0; o < t.length; o += 3) l(t[o + 0], n), l(t[o + 1], i), l(t[o + 2], r), s(n, i, r, e);
    }(i = i || 0), function (e) {
      for (var t = new fn, n = 0; n < r.length; n += 3) t.x = r[n + 0], t.y = r[n + 1], t.z = r[n + 2], t.normalize().multiplyScalar(e), r[n + 0] = t.x, r[n + 1] = t.y, r[n + 2] = t.z;
    }(n), function () {
      for (var e = new fn, t = 0; t < r.length; t += 3) {
        e.x = r[t + 0], e.y = r[t + 1], e.z = r[t + 2];
        var n = Math.atan2(e.z, -e.x) / 2 / Math.PI + 0.5, i = (s = e, Math.atan2(-s.y, Math.sqrt(s.x * s.x + s.z * s.z)) / Math.PI + 0.5);
        o.push(n, 1 - i);
      }
      var s;
      (function () {
        for (var e = new fn, t = new fn, n = new fn, i = new fn, s = new un, a = new un, l = new un, u = 0, d = 0; u < r.length; u += 9, d += 6) {
          e.set(r[u + 0], r[u + 1], r[u + 2]), t.set(r[u + 3], r[u + 4], r[u + 5]), n.set(r[u + 6], r[u + 7], r[u + 8]), s.set(o[d + 0], o[d + 1]), a.set(o[d + 2], o[d + 3]), l.set(o[d + 4], o[d + 5]), i.copy(e).add(t).add(n).divideScalar(3);
          var p = Math.atan2(i.z, -i.x);
          c(s, d + 0, e, p), c(a, d + 2, t, p), c(l, d + 4, n, p);
        }
      }(), function () {
        for (var e = 0; e < o.length; e += 6) {
          var t = o[e + 0], n = o[e + 2], i = o[e + 4], r = Math.max(t, n, i), s = Math.min(t, n, i);
          r > 0.9 && s < 0.1 && (t < 0.2 && (o[e + 0] += 1), n < 0.2 && (o[e + 2] += 1), i < 0.2 && (o[e + 4] += 1));
        }
      }());
    }(), this.addAttribute("position", new Zi(r, 3)), this.addAttribute("normal", new Zi(r.slice(), 3)), this.addAttribute("uv", new Zi(o, 2)), 0 === i ? this.computeVertexNormals() : this.normalizeNormals();
  }
  function sl(e, t) {
    Dr.call(this), this.type = "TetrahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new al(e, t)), this.mergeVertices();
  }
  function al(e, t) {
    ol.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t), this.type = "TetrahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function ll(e, t) {
    Dr.call(this), this.type = "OctahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new cl(e, t)), this.mergeVertices();
  }
  function cl(e, t) {
    ol.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t), this.type = "OctahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function hl(e, t) {
    Dr.call(this), this.type = "IcosahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new ul(e, t)), this.mergeVertices();
  }
  function ul(e, t) {
    var n = (1 + Math.sqrt(5)) / 2, i = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1];
    ol.call(this, i, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t), this.type = "IcosahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function dl(e, t) {
    Dr.call(this), this.type = "DodecahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new pl(e, t)), this.mergeVertices();
  }
  function pl(e, t) {
    var n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i];
    ol.call(this, r, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], e, t), this.type = "DodecahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function ml(e, t, n, i, r, o) {
    Dr.call(this), this.type = "TubeGeometry", this.parameters = {path: e, tubularSegments: t, radius: n, radialSegments: i, closed: r}, undefined !== o && console.warn("THREE.TubeGeometry: taper has been removed.");
    var s = new fl(e, t, n, i, r);
    this.tangents = s.tangents, this.normals = s.normals, this.binormals = s.binormals, this.fromBufferGeometry(s), this.mergeVertices();
  }
  function fl(e, t, n, i, r) {
    cr.call(this), this.type = "TubeBufferGeometry", this.parameters = {path: e, tubularSegments: t, radius: n, radialSegments: i, closed: r}, t = t || 64, n = n || 1, i = i || 8, r = r || false;
    var o = e.computeFrenetFrames(t, r);
    this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
    var s, a, l = new fn, c = new fn, h = new un, u = new fn, d = [], p = [], m = [], f = [];
    function g(r) {
      u = e.getPointAt(r / t, u);
      var s = o.normals[r], h = o.binormals[r];
      for (a = 0; a <= i; a++) {
        var m = a / i * Math.PI * 2, f = Math.sin(m), g = -Math.cos(m);
        c.x = g * s.x + f * h.x, c.y = g * s.y + f * h.y, c.z = g * s.z + f * h.z, c.normalize(), p.push(c.x, c.y, c.z), l.x = u.x + n * c.x, l.y = u.y + n * c.y, l.z = u.z + n * c.z, d.push(l.x, l.y, l.z);
      }
    }
    !function () {
      for (s = 0; s < t; s++) g(s);
      g(false === r ? t : 0), function () {
        for (s = 0; s <= t; s++) for (a = 0; a <= i; a++) h.x = s / t, h.y = a / i, m.push(h.x, h.y);
      }(), function () {
        for (a = 1; a <= t; a++) for (s = 1; s <= i; s++) {
          var e = (i + 1) * (a - 1) + (s - 1), n = (i + 1) * a + (s - 1), r = (i + 1) * a + s, o = (i + 1) * (a - 1) + s;
          f.push(e, n, o), f.push(n, r, o);
        }
      }();
    }(), this.setIndex(f), this.addAttribute("position", new Zi(d, 3)), this.addAttribute("normal", new Zi(p, 3)), this.addAttribute("uv", new Zi(m, 2));
  }
  function gl(e, t, n, i, r, o, s) {
    Dr.call(this), this.type = "TorusKnotGeometry", this.parameters = {radius: e, tube: t, tubularSegments: n, radialSegments: i, p: r, q: o}, undefined !== s && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new vl(e, t, n, i, r, o)), this.mergeVertices();
  }
  function vl(e, t, n, i, r, o) {
    cr.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = {radius: e, tube: t, tubularSegments: n, radialSegments: i, p: r, q: o}, e = e || 1, t = t || 0.4, n = Math.floor(n) || 64, i = Math.floor(i) || 8, r = r || 2, o = o || 3;
    var s, a, l = [], c = [], h = [], u = [], d = new fn, p = new fn, m = new fn, f = new fn, g = new fn, v = new fn, y = new fn;
    for (s = 0; s <= n; ++s) {
      var _ = s / n * r * Math.PI * 2;
      for (A(_, r, o, e, m), A(_ + 0.01, r, o, e, f), v.subVectors(f, m), y.addVectors(f, m), g.crossVectors(v, y), y.crossVectors(g, v), g.normalize(), y.normalize(), a = 0; a <= i; ++a) {
        var x = a / i * Math.PI * 2, b = -t * Math.cos(x), w = t * Math.sin(x);
        d.x = m.x + (b * y.x + w * g.x), d.y = m.y + (b * y.y + w * g.y), d.z = m.z + (b * y.z + w * g.z), c.push(d.x, d.y, d.z), p.subVectors(d, m).normalize(), h.push(p.x, p.y, p.z), u.push(s / n), u.push(a / i);
      }
    }
    for (a = 1; a <= n; a++) for (s = 1; s <= i; s++) {
      var S = (i + 1) * (a - 1) + (s - 1), E = (i + 1) * a + (s - 1), q = (i + 1) * a + s, T = (i + 1) * (a - 1) + s;
      l.push(S, E, T), l.push(E, q, T);
    }
    function A(e, t, n, i, r) {
      var o = Math.cos(e), s = Math.sin(e), a = n / t * e, l = Math.cos(a);
      r.x = i * (2 + l) * 0.5 * o, r.y = i * (2 + l) * s * 0.5, r.z = i * Math.sin(a) * 0.5;
    }
    this.setIndex(l), this.addAttribute("position", new Zi(c, 3)), this.addAttribute("normal", new Zi(h, 3)), this.addAttribute("uv", new Zi(u, 2));
  }
  function yl(e, t, n, i, r) {
    Dr.call(this), this.type = "TorusGeometry", this.parameters = {radius: e, tube: t, radialSegments: n, tubularSegments: i, arc: r}, this.fromBufferGeometry(new _l(e, t, n, i, r)), this.mergeVertices();
  }
  function _l(e, t, n, i, r) {
    cr.call(this), this.type = "TorusBufferGeometry", this.parameters = {radius: e, tube: t, radialSegments: n, tubularSegments: i, arc: r}, e = e || 1, t = t || 0.4, n = Math.floor(n) || 8, i = Math.floor(i) || 6, r = r || 2 * Math.PI;
    var o, s, a = [], l = [], c = [], h = [], u = new fn, d = new fn, p = new fn;
    for (o = 0; o <= n; o++) for (s = 0; s <= i; s++) {
      var m = s / i * r, f = o / n * Math.PI * 2;
      d.x = (e + t * Math.cos(f)) * Math.cos(m), d.y = (e + t * Math.cos(f)) * Math.sin(m), d.z = t * Math.sin(f), l.push(d.x, d.y, d.z), u.x = e * Math.cos(m), u.y = e * Math.sin(m), p.subVectors(d, u).normalize(), c.push(p.x, p.y, p.z), h.push(s / i), h.push(o / n);
    }
    for (o = 1; o <= n; o++) for (s = 1; s <= i; s++) {
      var g = (i + 1) * o + s - 1, v = (i + 1) * (o - 1) + s - 1, y = (i + 1) * (o - 1) + s, _ = (i + 1) * o + s;
      a.push(g, v, _), a.push(v, y, _);
    }
    this.setIndex(a), this.addAttribute("position", new Zi(l, 3)), this.addAttribute("normal", new Zi(c, 3)), this.addAttribute("uv", new Zi(h, 2));
  }
  Ya.prototype = Object.assign(Object.create(Jn.prototype), {constructor: Ya, isPoints: true, raycast: function (e, t) {
    var n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold;
    if (null === n.boundingSphere && n.computeBoundingSphere(), Wa.copy(n.boundingSphere), Wa.applyMatrix4(i), Wa.radius += r, false !== e.ray.intersectsSphere(Wa)) {
      ja.getInverse(i), $a.copy(e.ray).applyMatrix4(ja);
      var o = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), s = o * o;
      if (n.isBufferGeometry) {
        var a = n.index, l = n.attributes.position.array;
        if (null !== a) for (var c = a.array, h = 0, u = c.length; h < u; h++) {
          var d = c[h];
          Xa.fromArray(l, 3 * d), Ja(Xa, d, s, i, e, t, this);
        } else {
          h = 0;
          for (var p = l.length / 3; h < p; h++) Xa.fromArray(l, 3 * h), Ja(Xa, h, s, i, e, t, this);
        }
      } else {
        var m = n.vertices;
        for (h = 0, p = m.length; h < p; h++) Ja(m[h], h, s, i, e, t, this);
      }
    }
  }, updateMorphTargets: function () {
    var e, t, n, i = this.geometry;
    if (i.isBufferGeometry) {
      var r = i.morphAttributes, o = Object.keys(r);
      if (o.length > 0) {
        var s = r[o[0]];
        if (undefined !== s) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = s.length; e < t; e++) n = s[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e;
      }
    } else {
      var a = i.morphTargets;
      undefined !== a && a.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }}), Ka.prototype = Object.assign(Object.create(bn.prototype), {constructor: Ka, isVideoTexture: true, update: function () {
    var e = this.image;
    e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = true);
  }}), Za.prototype = Object.create(bn.prototype), Za.prototype.constructor = Za, Za.prototype.isCompressedTexture = true, Qa.prototype = Object.create(bn.prototype), Qa.prototype.constructor = Qa, Qa.prototype.isCanvasTexture = true, el.prototype = Object.create(bn.prototype), el.prototype.constructor = el, el.prototype.isDepthTexture = true, tl.prototype = Object.create(cr.prototype), tl.prototype.constructor = tl, nl.prototype = Object.create(Dr.prototype), nl.prototype.constructor = nl, il.prototype = Object.create(cr.prototype), il.prototype.constructor = il, rl.prototype = Object.create(Dr.prototype), rl.prototype.constructor = rl, ol.prototype = Object.create(cr.prototype), ol.prototype.constructor = ol, sl.prototype = Object.create(Dr.prototype), sl.prototype.constructor = sl, al.prototype = Object.create(ol.prototype), al.prototype.constructor = al, ll.prototype = Object.create(Dr.prototype), ll.prototype.constructor = ll, cl.prototype = Object.create(ol.prototype), cl.prototype.constructor = cl, hl.prototype = Object.create(Dr.prototype), hl.prototype.constructor = hl, ul.prototype = Object.create(ol.prototype), ul.prototype.constructor = ul, dl.prototype = Object.create(Dr.prototype), dl.prototype.constructor = dl, pl.prototype = Object.create(ol.prototype), pl.prototype.constructor = pl, ml.prototype = Object.create(Dr.prototype), ml.prototype.constructor = ml, fl.prototype = Object.create(cr.prototype), fl.prototype.constructor = fl, fl.prototype.toJSON = function () {
    var e = cr.prototype.toJSON.call(this);
    return e.path = this.parameters.path.toJSON(), e;
  }, gl.prototype = Object.create(Dr.prototype), gl.prototype.constructor = gl, vl.prototype = Object.create(cr.prototype), vl.prototype.constructor = vl, yl.prototype = Object.create(Dr.prototype), yl.prototype.constructor = yl, _l.prototype = Object.create(cr.prototype), _l.prototype.constructor = _l;
  var xl = function (e, t, n) {
    n = n || 2;
    var i, r, o, s, a, l, c, h = t && t.length, u = h ? t[0] * n : e.length, d = bl(e, 0, u, n, true), p = [];
    if (!d || d.next === d.prev) return p;
    if (h && (d = function (e, t, n, i) {
      var r, o, s, a, l, c = [];
      for (r = 0, o = t.length; r < o; r++) s = t[r] * i, a = r < o - 1 ? t[r + 1] * i : e.length, (l = bl(e, s, a, i, false)) === l.next && (l.steiner = true), c.push(Rl(l));
      for (c.sort(Ml), r = 0; r < c.length; r++) Cl(c[r], n), n = wl(n, n.next);
      return n;
    }(e, t, d, n)), e.length > 80 * n) {
      i = o = e[0], r = s = e[1];
      for (var m = n; m < u; m += n) (a = e[m]) < i && (i = a), (l = e[m + 1]) < r && (r = l), a > o && (o = a), l > s && (s = l);
      c = 0 !== (c = Math.max(o - i, s - r)) ? 1 / c : 0;
    }
    return Sl(d, p, n, i, r, c), p;
  };
  function bl(e, t, n, i, r) {
    var o, s;
    if (r === function (e, t, n, i) {
      for (var r = 0, o = t, s = n - i; o < n; o += i) r += (e[s] - e[o]) * (e[o + 1] + e[s + 1]), s = o;
      return r;
    }(e, t, n, i) > 0) for (o = t; o < n; o += i) s = zl(o, e[o], e[o + 1], s); else for (o = n - i; o >= t; o -= i) s = zl(o, e[o], e[o + 1], s);
    return s && (s.x === s.next.x && s.y === s.next.y) && (Nl(s), s = s.next), s;
  }
  function wl(e, t) {
    if (!e) return e;
    t || (t = e);
    var n, i = e;
    do {
      if (n = false, i.steiner || !(i.x === i.next.x && i.y === i.next.y) && 0 !== (i.y - i.prev.y) * (i.next.x - i.x) - (i.x - i.prev.x) * (i.next.y - i.y)) i = i.next; else {
        if (Nl(i), (i = t = i.prev) === i.next) break;
        n = true;
      }
    } while (n || i !== t);
    return t;
  }
  function Sl(e, t, n, i, r, o, s) {
    if (e) {
      !s && o && function (e, t, n, i) {
        var r = e;
        do {
          null === r.z && (r.z = (r.x = 1431655765 & ((r.x = 858993459 & ((r.x = 252645135 & ((r.x = 16711935 & ((r.x = 32767 * (r.x - t) * i) | r.x << 8)) | r.x << 4)) | r.x << 2)) | r.x << 1)) | (r.y = 1431655765 & ((r.y = 858993459 & ((r.y = 252645135 & ((r.y = 16711935 & ((r.y = 32767 * (r.y - n) * i) | r.y << 8)) | r.y << 4)) | r.y << 2)) | r.y << 1)) << 1), r.prevZ = r.prev, r.nextZ = r.next, r = r.next;
        } while (r !== e);
        r.prevZ.nextZ = null, r.prevZ = null, function (e) {
          var t, n, i, r, o, s, a, l, c = 1;
          do {
            for (n = e, e = null, o = null, s = 0; n;) {
              for (s++, i = n, a = 0, t = 0; t < c && (a++, i = i.nextZ); t++) ;
              for (l = c; a > 0 || l > 0 && i;) 0 !== a && (0 === l || !i || n.z <= i.z) ? (r = n, n = n.nextZ, a--) : (r = i, i = i.nextZ, l--), o ? o.nextZ = r : e = r, r.prevZ = o, o = r;
              n = i;
            }
            o.nextZ = null, c *= 2;
          } while (s > 1);
        }(r);
      }(e, i, r, o);
      for (var a, l, c = e; e.prev !== e.next;) if (a = e.prev, l = e.next, o ? ql(e, i, r, o) : El(e)) t.push(a.i / n), t.push(e.i / n), t.push(l.i / n), Nl(e), e = l.next, c = l.next; else if ((e = l) === c) {
        s ? 1 === s ? Sl(e = Tl(e, t, n), t, n, i, r, o, 2) : 2 === s && Al(e, t, n, i, r, o) : Sl(wl(e), t, n, i, r, o, 1);
        break;
      }
    }
  }
  function El(e) {
    var t = e.prev, n = e, i = e.next;
    if ((n.y - t.y) * (i.x - n.x) - (n.x - t.x) * (i.y - n.y) >= 0) return false;
    for (var r = e.next.next; r !== e.prev;) {
      if ((i.x - r.x) * (t.y - r.y) - (t.x - r.x) * (i.y - r.y) >= 0 && (t.x - r.x) * (n.y - r.y) - (n.x - r.x) * (t.y - r.y) >= 0 && (n.x - r.x) * (i.y - r.y) - (i.x - r.x) * (n.y - r.y) >= 0 && (r.y - r.prev.y) * (r.next.x - r.x) - (r.x - r.prev.x) * (r.next.y - r.y) >= 0) return false;
      r = r.next;
    }
    return true;
  }
  function ql(e, t, n, i) {
    var r = e.prev, o = e, s = e.next;
    if ((o.y - r.y) * (s.x - o.x) - (o.x - r.x) * (s.y - o.y) >= 0) return false;
    for (var a = r.x < o.x ? r.x < s.x ? r.x : s.x : o.x < s.x ? o.x : s.x, l = r.y < o.y ? r.y < s.y ? r.y : s.y : o.y < s.y ? o.y : s.y, c = r.x > o.x ? r.x > s.x ? r.x : s.x : o.x > s.x ? o.x : s.x, h = r.y > o.y ? r.y > s.y ? r.y : s.y : o.y > s.y ? o.y : s.y, u = (a = 1431655765 & ((a = 858993459 & ((a = 252645135 & ((a = 16711935 & ((a = 32767 * (a - t) * i) | a << 8)) | a << 4)) | a << 2)) | a << 1)) | (l = 1431655765 & ((l = 858993459 & ((l = 252645135 & ((l = 16711935 & ((l = 32767 * (l - n) * i) | l << 8)) | l << 4)) | l << 2)) | l << 1)) << 1, d = (c = 1431655765 & ((c = 858993459 & ((c = 252645135 & ((c = 16711935 & ((c = 32767 * (c - t) * i) | c << 8)) | c << 4)) | c << 2)) | c << 1)) | (h = 1431655765 & ((h = 858993459 & ((h = 252645135 & ((h = 16711935 & ((h = 32767 * (h - n) * i) | h << 8)) | h << 4)) | h << 2)) | h << 1)) << 1, p = e.prevZ, m = e.nextZ; p && p.z >= u && m && m.z <= d;) {
      if (p !== e.prev && p !== e.next && ((s.x - p.x) * (r.y - p.y) - (r.x - p.x) * (s.y - p.y) >= 0 && (r.x - p.x) * (o.y - p.y) - (o.x - p.x) * (r.y - p.y) >= 0 && (o.x - p.x) * (s.y - p.y) - (s.x - p.x) * (o.y - p.y) >= 0) && (p.y - p.prev.y) * (p.next.x - p.x) - (p.x - p.prev.x) * (p.next.y - p.y) >= 0) return false;
      if (p = p.prevZ, m !== e.prev && m !== e.next && ((s.x - m.x) * (r.y - m.y) - (r.x - m.x) * (s.y - m.y) >= 0 && (r.x - m.x) * (o.y - m.y) - (o.x - m.x) * (r.y - m.y) >= 0 && (o.x - m.x) * (s.y - m.y) - (s.x - m.x) * (o.y - m.y) >= 0) && (m.y - m.prev.y) * (m.next.x - m.x) - (m.x - m.prev.x) * (m.next.y - m.y) >= 0) return false;
      m = m.nextZ;
    }
    for (; p && p.z >= u;) {
      if (p !== e.prev && p !== e.next && ((s.x - p.x) * (r.y - p.y) - (r.x - p.x) * (s.y - p.y) >= 0 && (r.x - p.x) * (o.y - p.y) - (o.x - p.x) * (r.y - p.y) >= 0 && (o.x - p.x) * (s.y - p.y) - (s.x - p.x) * (o.y - p.y) >= 0) && (p.y - p.prev.y) * (p.next.x - p.x) - (p.x - p.prev.x) * (p.next.y - p.y) >= 0) return false;
      p = p.prevZ;
    }
    for (; m && m.z <= d;) {
      if (m !== e.prev && m !== e.next && ((s.x - m.x) * (r.y - m.y) - (r.x - m.x) * (s.y - m.y) >= 0 && (r.x - m.x) * (o.y - m.y) - (o.x - m.x) * (r.y - m.y) >= 0 && (o.x - m.x) * (s.y - m.y) - (s.x - m.x) * (o.y - m.y) >= 0) && (m.y - m.prev.y) * (m.next.x - m.x) - (m.x - m.prev.x) * (m.next.y - m.y) >= 0) return false;
      m = m.nextZ;
    }
    return true;
  }
  function Tl(e, t, n) {
    var i = e;
    do {
      var r = i.prev, o = i.next.next;
      !(r.x === o.x && r.y === o.y) && (!!(r.x === i.next.x && r.y === i.next.y && (i.x === o.x && i.y === o.y) || r.x === o.x && r.y === o.y && (i.next.x === i.x && i.next.y === i.y)) || (i.y - r.y) * (i.next.x - i.x) - (i.x - r.x) * (i.next.y - i.y) > 0 != (i.y - r.y) * (o.x - i.x) - (i.x - r.x) * (o.y - i.y) > 0 && (o.y - i.next.y) * (r.x - o.x) - (o.x - i.next.x) * (r.y - o.y) > 0 != (o.y - i.next.y) * (i.x - o.x) - (o.x - i.next.x) * (i.y - o.y) > 0) && Bl(r, o) && Bl(o, r) && (t.push(r.i / n), t.push(i.i / n), t.push(o.i / n), Nl(i), Nl(i.next), i = e = o), i = i.next;
    } while (i !== e);
    return i;
  }
  function Al(e, t, n, i, r, o) {
    var s = e;
    do {
      for (var a = s.next.next; a !== s.prev;) {
        if (s.i !== a.i && Pl(s, a)) {
          var l = Fl(s, a);
          return s = wl(s, s.next), l = wl(l, l.next), Sl(s, t, n, i, r, o), void Sl(l, t, n, i, r, o);
        }
        a = a.next;
      }
      s = s.next;
    } while (s !== e);
  }
  function Ml(e, t) {
    return e.x - t.x;
  }
  function Cl(e, t) {
    if (t = function (e, t) {
      var n, i = t, r = e.x, o = e.y, s = -Infinity;
      do {
        if (o <= i.y && o >= i.next.y && i.next.y !== i.y) {
          var a = i.x + (o - i.y) * (i.next.x - i.x) / (i.next.y - i.y);
          if (a <= r && a > s) {
            if (s = a, a === r) {
              if (o === i.y) return i;
              if (o === i.next.y) return i.next;
            }
            n = i.x < i.next.x ? i : i.next;
          }
        }
        i = i.next;
      } while (i !== t);
      if (!n) return null;
      if (r === s) return n.prev;
      var l, c = n, h = n.x, u = n.y, d = Infinity;
      i = n.next;
      for (; i !== c;) r >= i.x && i.x >= h && r !== i.x && (((o < u ? s : r) - i.x) * (o - i.y) - ((o < u ? r : s) - i.x) * (o - i.y) >= 0 && ((o < u ? r : s) - i.x) * (u - i.y) - (h - i.x) * (o - i.y) >= 0 && (h - i.x) * (o - i.y) - ((o < u ? s : r) - i.x) * (u - i.y) >= 0) && ((l = Math.abs(o - i.y) / (r - i.x)) < d || l === d && i.x > n.x) && Bl(i, e) && (n = i, d = l), i = i.next;
      return n;
    }(e, t)) {
      var n = Fl(t, e);
      wl(n, n.next);
    }
  }
  function kl(e, t, n, i, r) {
    return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - i) * r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1;
  }
  function Rl(e) {
    var t = e, n = e;
    do {
      (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t), t = t.next;
    } while (t !== e);
    return n;
  }
  function Ll(e, t, n, i, r, o, s, a) {
    return (r - s) * (t - a) - (e - s) * (o - a) >= 0 && (e - s) * (i - a) - (n - s) * (t - a) >= 0 && (n - s) * (o - a) - (r - s) * (i - a) >= 0;
  }
  function Pl(e, t) {
    return e.next.i !== t.i && e.prev.i !== t.i && !function (e, t) {
      var n = e;
      do {
        if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && (!!(n.x === e.x && n.y === e.y && (n.next.x === t.x && n.next.y === t.y) || n.x === t.x && n.y === t.y && (e.x === n.next.x && e.y === n.next.y)) || (n.next.y - n.y) * (e.x - n.next.x) - (n.next.x - n.x) * (e.y - n.next.y) > 0 != (n.next.y - n.y) * (t.x - n.next.x) - (n.next.x - n.x) * (t.y - n.next.y) > 0 && (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y) > 0 != (t.y - e.y) * (n.next.x - t.x) - (t.x - e.x) * (n.next.y - t.y) > 0)) return true;
        n = n.next;
      } while (n !== e);
      return false;
    }(e, t) && Bl(e, t) && Bl(t, e) && function (e, t) {
      var n = e, i = false, r = (e.x + t.x) / 2, o = (e.y + t.y) / 2;
      do {
        n.y > o != n.next.y > o && n.next.y !== n.y && r < (n.next.x - n.x) * (o - n.y) / (n.next.y - n.y) + n.x && (i = !i), n = n.next;
      } while (n !== e);
      return i;
    }(e, t);
  }
  function Dl(e, t, n) {
    return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
  }
  function Ol(e, t) {
    return e.x === t.x && e.y === t.y;
  }
  function Il(e, t, n, i) {
    return !!(e.x === n.x && e.y === n.y && (t.x === i.x && t.y === i.y) || e.x === i.x && e.y === i.y && (n.x === t.x && n.y === t.y)) || (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y) > 0 != (t.y - e.y) * (i.x - t.x) - (t.x - e.x) * (i.y - t.y) > 0 && (i.y - n.y) * (e.x - i.x) - (i.x - n.x) * (e.y - i.y) > 0 != (i.y - n.y) * (t.x - i.x) - (i.x - n.x) * (t.y - i.y) > 0;
  }
  function Bl(e, t) {
    return (e.y - e.prev.y) * (e.next.x - e.x) - (e.x - e.prev.x) * (e.next.y - e.y) < 0 ? (t.y - e.y) * (e.next.x - t.x) - (t.x - e.x) * (e.next.y - t.y) >= 0 && (e.prev.y - e.y) * (t.x - e.prev.x) - (e.prev.x - e.x) * (t.y - e.prev.y) >= 0 : (t.y - e.y) * (e.prev.x - t.x) - (t.x - e.x) * (e.prev.y - t.y) < 0 || (e.next.y - e.y) * (t.x - e.next.x) - (e.next.x - e.x) * (t.y - e.next.y) < 0;
  }
  function Fl(e, t) {
    var n = new Ul(e.i, e.x, e.y), i = new Ul(t.i, t.x, t.y), r = e.next, o = t.prev;
    return e.next = t, t.prev = e, n.next = r, r.prev = n, i.next = n, n.prev = i, o.next = i, i.prev = o, i;
  }
  function zl(e, t, n, i) {
    var r = new Ul(e, t, n);
    return i ? (r.next = i.next, r.prev = i, i.next.prev = r, i.next = r) : (r.prev = r, r.next = r), r;
  }
  function Nl(e) {
    e.next.prev = e.prev, e.prev.next = e.next, e.prevZ && (e.prevZ.nextZ = e.nextZ), e.nextZ && (e.nextZ.prevZ = e.prevZ);
  }
  function Ul(e, t, n) {
    this.i = e, this.x = t, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = false;
  }
  var Vl = {area: function (e) {
    for (var t = e.length, n = 0, i = t - 1, r = 0; r < t; i = r++) n += e[i].x * e[r].y - e[r].x * e[i].y;
    return 0.5 * n;
  }, isClockWise: function (e) {
    return Vl.area(e) < 0;
  }, triangulateShape: function (e, t) {
    var n = [], i = [], r = [];
    Gl(e), Hl(n, e);
    var o = e.length;
    t.forEach(Gl);
    for (var s = 0; s < t.length; s++) i.push(o), o += t[s].length, Hl(n, t[s]);
    var a = xl(n, i);
    for (s = 0; s < a.length; s += 3) r.push(a.slice(s, s + 3));
    return r;
  }};
  function Gl(e) {
    var t = e.length;
    t > 2 && e[t - 1].equals(e[0]) && e.pop();
  }
  function Hl(e, t) {
    for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
  }
  function jl(e, t) {
    Dr.call(this), this.type = "ExtrudeGeometry", this.parameters = {shapes: e, options: t}, this.fromBufferGeometry(new $l(e, t)), this.mergeVertices();
  }
  function $l(e, t) {
    cr.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = {shapes: e, options: t}, e = Array.isArray(e) ? e : [e];
    for (var n = this, i = [], r = [], o = 0, s = e.length; o < s; o++) {
      a(e[o]);
    }
    function a(e) {
      var o = [], s = undefined !== t.curveSegments ? t.curveSegments : 12, a = undefined !== t.steps ? t.steps : 1, l = undefined !== t.depth ? t.depth : 100, c = undefined === t.bevelEnabled || t.bevelEnabled, h = undefined !== t.bevelThickness ? t.bevelThickness : 6, u = undefined !== t.bevelSize ? t.bevelSize : h - 2, d = undefined !== t.bevelOffset ? t.bevelOffset : 0, p = undefined !== t.bevelSegments ? t.bevelSegments : 3, m = t.extrudePath, f = undefined !== t.UVGenerator ? t.UVGenerator : Wl;
      undefined !== t.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), l = t.amount);
      var g, v, y, _, x, b, w, S, E = false;
      m && (g = m.getSpacedPoints(a), E = true, c = false, v = m.computeFrenetFrames(a, false), y = new fn, _ = new fn, x = new fn), c || (p = 0, h = 0, u = 0, d = 0);
      var q = e.extractPoints(s), T = q.shape, A = q.holes;
      if (!Vl.isClockWise(T)) for (T = T.reverse(), w = 0, S = A.length; w < S; w++) b = A[w], Vl.isClockWise(b) && (A[w] = b.reverse());
      var M = Vl.triangulateShape(T, A), C = T;
      for (w = 0, S = A.length; w < S; w++) b = A[w], T = T.concat(b);
      function k(e, t, n) {
        return t || console.error("THREE.ExtrudeGeometry: vec does not exist"), t.clone().multiplyScalar(n).add(e);
      }
      var R, L, P, D, O, I, B = T.length, F = M.length;
      function z(e, t, n) {
        var i, r, o, s = e.x - t.x, a = e.y - t.y, l = n.x - e.x, c = n.y - e.y, h = s * s + a * a, u = s * c - a * l;
        if (Math.abs(u) > Number.EPSILON) {
          var d = Math.sqrt(h), p = Math.sqrt(l * l + c * c), m = t.x - a / d, f = t.y + s / d, g = ((n.x - c / p - m) * c - (n.y + l / p - f) * l) / (s * c - a * l), v = (i = m + s * g - e.x) * i + (r = f + a * g - e.y) * r;
          if (v <= 2) return new un(i, r);
          o = Math.sqrt(v / 2);
        } else {
          var y = false;
          s > Number.EPSILON ? l > Number.EPSILON && (y = true) : s < -Number.EPSILON ? l < -Number.EPSILON && (y = true) : Math.sign(a) === Math.sign(c) && (y = true), y ? (i = -a, r = s, o = Math.sqrt(h)) : (i = s, r = a, o = Math.sqrt(h / 2));
        }
        return new un(i / o, r / o);
      }
      for (var N = [], U = 0, V = C.length, G = V - 1, H = U + 1; U < V; U++, G++, H++) G === V && (G = 0), H === V && (H = 0), N[U] = z(C[U], C[G], C[H]);
      var j, $, W = [], X = N.concat();
      for (w = 0, S = A.length; w < S; w++) {
        for (b = A[w], j = [], U = 0, G = (V = b.length) - 1, H = U + 1; U < V; U++, G++, H++) G === V && (G = 0), H === V && (H = 0), j[U] = z(b[U], b[G], b[H]);
        W.push(j), X = X.concat(j);
      }
      for (R = 0; R < p; R++) {
        for (P = R / p, D = h * Math.cos(P * Math.PI / 2), L = u * Math.sin(P * Math.PI / 2) + d, U = 0, V = C.length; U < V; U++) J((O = (N[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), N[U].clone().multiplyScalar(L).add(C[U]))).x, O.y, -D);
        for (w = 0, S = A.length; w < S; w++) for (b = A[w], j = W[w], U = 0, V = b.length; U < V; U++) J((O = (j[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), j[U].clone().multiplyScalar(L).add(b[U]))).x, O.y, -D);
      }
      for (L = u + d, U = 0; U < B; U++) O = c ? (X[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), X[U].clone().multiplyScalar(L).add(T[U])) : T[U], E ? (_.copy(v.normals[0]).multiplyScalar(O.x), y.copy(v.binormals[0]).multiplyScalar(O.y), x.copy(g[0]).add(_).add(y), J(x.x, x.y, x.z)) : J(O.x, O.y, 0);
      for ($ = 1; $ <= a; $++) for (U = 0; U < B; U++) O = c ? (X[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), X[U].clone().multiplyScalar(L).add(T[U])) : T[U], E ? (_.copy(v.normals[$]).multiplyScalar(O.x), y.copy(v.binormals[$]).multiplyScalar(O.y), x.copy(g[$]).add(_).add(y), J(x.x, x.y, x.z)) : J(O.x, O.y, l / a * $);
      for (R = p - 1; R >= 0; R--) {
        for (P = R / p, D = h * Math.cos(P * Math.PI / 2), L = u * Math.sin(P * Math.PI / 2) + d, U = 0, V = C.length; U < V; U++) J((O = (N[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), N[U].clone().multiplyScalar(L).add(C[U]))).x, O.y, l + D);
        for (w = 0, S = A.length; w < S; w++) for (b = A[w], j = W[w], U = 0, V = b.length; U < V; U++) O = (j[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), j[U].clone().multiplyScalar(L).add(b[U])), E ? J(O.x, O.y + g[a - 1].y, g[a - 1].x + D) : J(O.x, O.y, l + D);
      }
      function Y(e, t) {
        var n, i;
        for (U = e.length; --U >= 0;) {
          n = U, (i = U - 1) < 0 && (i = e.length - 1);
          var r = 0, o = a + 2 * p;
          for (r = 0; r < o; r++) {
            var s = B * r, l = B * (r + 1);
            Z(t + n + s, t + i + s, t + i + l, t + n + l);
          }
        }
      }
      function J(e, t, n) {
        o.push(e), o.push(t), o.push(n);
      }
      function K(e, t, r) {
        Q(e), Q(t), Q(r);
        var o = i.length / 3, s = f.generateTopUV(n, i, o - 3, o - 2, o - 1);
        ee(s[0]), ee(s[1]), ee(s[2]);
      }
      function Z(e, t, r, o) {
        Q(e), Q(t), Q(o), Q(t), Q(r), Q(o);
        var s = i.length / 3, a = f.generateSideWallUV(n, i, s - 6, s - 3, s - 2, s - 1);
        ee(a[0]), ee(a[1]), ee(a[3]), ee(a[1]), ee(a[2]), ee(a[3]);
      }
      function Q(e) {
        i.push(o[3 * e + 0]), i.push(o[3 * e + 1]), i.push(o[3 * e + 2]);
      }
      function ee(e) {
        r.push(e.x), r.push(e.y);
      }
      !function () {
        var e = i.length / 3;
        if (c) {
          var t = 0, r = B * t;
          for (U = 0; U < F; U++) K((I = M[U])[2] + r, I[1] + r, I[0] + r);
          for (r = B * (t = a + 2 * p), U = 0; U < F; U++) K((I = M[U])[0] + r, I[1] + r, I[2] + r);
        } else {
          for (U = 0; U < F; U++) K((I = M[U])[2], I[1], I[0]);
          for (U = 0; U < F; U++) K((I = M[U])[0] + B * a, I[1] + B * a, I[2] + B * a);
        }
        n.addGroup(e, i.length / 3 - e, 0);
      }(), function () {
        var e = i.length / 3, t = 0;
        for (Y(C, t), t += C.length, w = 0, S = A.length; w < S; w++) Y(b = A[w], t), t += b.length;
        n.addGroup(e, i.length / 3 - e, 1);
      }();
    }
    this.addAttribute("position", new Zi(i, 3)), this.addAttribute("uv", new Zi(r, 2)), this.computeVertexNormals();
  }
  jl.prototype = Object.create(Dr.prototype), jl.prototype.constructor = jl, jl.prototype.toJSON = function () {
    var e = Dr.prototype.toJSON.call(this);
    return Xl(this.parameters.shapes, this.parameters.options, e);
  }, $l.prototype = Object.create(cr.prototype), $l.prototype.constructor = $l, $l.prototype.toJSON = function () {
    var e = cr.prototype.toJSON.call(this);
    return Xl(this.parameters.shapes, this.parameters.options, e);
  };
  var Wl = {generateTopUV: function (e, t, n, i, r) {
    var o = t[3 * n], s = t[3 * n + 1], a = t[3 * i], l = t[3 * i + 1], c = t[3 * r], h = t[3 * r + 1];
    return [new un(o, s), new un(a, l), new un(c, h)];
  }, generateSideWallUV: function (e, t, n, i, r, o) {
    var s = t[3 * n], a = t[3 * n + 1], l = t[3 * n + 2], c = t[3 * i], h = t[3 * i + 1], u = t[3 * i + 2], d = t[3 * r], p = t[3 * r + 1], m = t[3 * r + 2], f = t[3 * o], g = t[3 * o + 1], v = t[3 * o + 2];
    return Math.abs(a - h) < 0.01 ? [new un(s, 1 - l), new un(c, 1 - u), new un(d, 1 - m), new un(f, 1 - v)] : [new un(a, 1 - l), new un(h, 1 - u), new un(p, 1 - m), new un(g, 1 - v)];
  }};
  function Xl(e, t, n) {
    if (n.shapes = [], Array.isArray(e)) for (var i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      n.shapes.push(o.uuid);
    } else n.shapes.push(e.uuid);
    return undefined !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()), n;
  }
  function Yl(e, t) {
    Dr.call(this), this.type = "TextGeometry", this.parameters = {text: e, parameters: t}, this.fromBufferGeometry(new Jl(e, t)), this.mergeVertices();
  }
  function Jl(e, t) {
    var n = (t = t || {}).font;
    if (!n || !n.isFont) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new Dr;
    var i = n.generateShapes(e, t.size);
    t.depth = undefined !== t.height ? t.height : 50, undefined === t.bevelThickness && (t.bevelThickness = 10), undefined === t.bevelSize && (t.bevelSize = 8), undefined === t.bevelEnabled && (t.bevelEnabled = false), $l.call(this, i, t), this.type = "TextBufferGeometry";
  }
  function Kl(e, t, n, i, r, o, s) {
    Dr.call(this), this.type = "SphereGeometry", this.parameters = {radius: e, widthSegments: t, heightSegments: n, phiStart: i, phiLength: r, thetaStart: o, thetaLength: s}, this.fromBufferGeometry(new Zl(e, t, n, i, r, o, s)), this.mergeVertices();
  }
  function Zl(e, t, n, i, r, o, s) {
    cr.call(this), this.type = "SphereBufferGeometry", this.parameters = {radius: e, widthSegments: t, heightSegments: n, phiStart: i, phiLength: r, thetaStart: o, thetaLength: s}, e = e || 1, t = Math.max(3, Math.floor(t) || 8), n = Math.max(2, Math.floor(n) || 6), i = undefined !== i ? i : 0, r = undefined !== r ? r : 2 * Math.PI, o = undefined !== o ? o : 0, s = undefined !== s ? s : Math.PI;
    var a, l, c = Math.min(o + s, Math.PI), h = 0, u = [], d = new fn, p = new fn, m = [], f = [], g = [], v = [];
    for (l = 0; l <= n; l++) {
      var y = [], _ = l / n, x = 0;
      for (0 == l && 0 == o ? x = 0.5 / t : l == n && c == Math.PI && (x = -0.5 / t), a = 0; a <= t; a++) {
        var b = a / t;
        d.x = -e * Math.cos(i + b * r) * Math.sin(o + _ * s), d.y = e * Math.cos(o + _ * s), d.z = e * Math.sin(i + b * r) * Math.sin(o + _ * s), f.push(d.x, d.y, d.z), p.copy(d).normalize(), g.push(p.x, p.y, p.z), v.push(b + x, 1 - _), y.push(h++);
      }
      u.push(y);
    }
    for (l = 0; l < n; l++) for (a = 0; a < t; a++) {
      var w = u[l][a + 1], S = u[l][a], E = u[l + 1][a], q = u[l + 1][a + 1];
      (0 !== l || o > 0) && m.push(w, S, q), (l !== n - 1 || c < Math.PI) && m.push(S, E, q);
    }
    this.setIndex(m), this.addAttribute("position", new Zi(f, 3)), this.addAttribute("normal", new Zi(g, 3)), this.addAttribute("uv", new Zi(v, 2));
  }
  function Ql(e, t, n, i, r, o) {
    Dr.call(this), this.type = "RingGeometry", this.parameters = {innerRadius: e, outerRadius: t, thetaSegments: n, phiSegments: i, thetaStart: r, thetaLength: o}, this.fromBufferGeometry(new ec(e, t, n, i, r, o)), this.mergeVertices();
  }
  function ec(e, t, n, i, r, o) {
    cr.call(this), this.type = "RingBufferGeometry", this.parameters = {innerRadius: e, outerRadius: t, thetaSegments: n, phiSegments: i, thetaStart: r, thetaLength: o}, e = e || 0.5, t = t || 1, r = undefined !== r ? r : 0, o = undefined !== o ? o : 2 * Math.PI, n = undefined !== n ? Math.max(3, n) : 8;
    var s, a, l, c = [], h = [], u = [], d = [], p = e, m = (t - e) / (i = undefined !== i ? Math.max(1, i) : 1), f = new fn, g = new un;
    for (a = 0; a <= i; a++) {
      for (l = 0; l <= n; l++) s = r + l / n * o, f.x = p * Math.cos(s), f.y = p * Math.sin(s), h.push(f.x, f.y, f.z), u.push(0, 0, 1), g.x = (f.x / t + 1) / 2, g.y = (f.y / t + 1) / 2, d.push(g.x, g.y);
      p += m;
    }
    for (a = 0; a < i; a++) {
      var v = a * (n + 1);
      for (l = 0; l < n; l++) {
        var y = s = l + v, _ = s + n + 1, x = s + n + 2, b = s + 1;
        c.push(y, _, b), c.push(_, x, b);
      }
    }
    this.setIndex(c), this.addAttribute("position", new Zi(h, 3)), this.addAttribute("normal", new Zi(u, 3)), this.addAttribute("uv", new Zi(d, 2));
  }
  function tc(e, t, n, i) {
    Dr.call(this), this.type = "LatheGeometry", this.parameters = {points: e, segments: t, phiStart: n, phiLength: i}, this.fromBufferGeometry(new nc(e, t, n, i)), this.mergeVertices();
  }
  function nc(e, t, n, i) {
    cr.call(this), this.type = "LatheBufferGeometry", this.parameters = {points: e, segments: t, phiStart: n, phiLength: i}, t = Math.floor(t) || 12, n = n || 0, i = i || 2 * Math.PI, i = hn.clamp(i, 0, 2 * Math.PI);
    var r, o, s, a = [], l = [], c = [], h = 1 / t, u = new fn, d = new un;
    for (o = 0; o <= t; o++) {
      var p = n + o * h * i, m = Math.sin(p), f = Math.cos(p);
      for (s = 0; s <= e.length - 1; s++) u.x = e[s].x * m, u.y = e[s].y, u.z = e[s].x * f, l.push(u.x, u.y, u.z), d.x = o / t, d.y = s / (e.length - 1), c.push(d.x, d.y);
    }
    for (o = 0; o < t; o++) for (s = 0; s < e.length - 1; s++) {
      var g = r = s + o * e.length, v = r + e.length, y = r + e.length + 1, _ = r + 1;
      a.push(g, v, _), a.push(v, y, _);
    }
    if (this.setIndex(a), this.addAttribute("position", new Zi(l, 3)), this.addAttribute("uv", new Zi(c, 2)), this.computeVertexNormals(), i === 2 * Math.PI) {
      var x = this.attributes.normal.array, b = new fn, w = new fn, S = new fn;
      for (r = t * e.length * 3, o = 0, s = 0; o < e.length; o++, s += 3) b.x = x[s + 0], b.y = x[s + 1], b.z = x[s + 2], w.x = x[r + s + 0], w.y = x[r + s + 1], w.z = x[r + s + 2], S.addVectors(b, w).normalize(), x[s + 0] = x[r + s + 0] = S.x, x[s + 1] = x[r + s + 1] = S.y, x[s + 2] = x[r + s + 2] = S.z;
    }
  }
  function ic(e, t) {
    Dr.call(this), this.type = "ShapeGeometry", "object" == typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), t = t.curveSegments), this.parameters = {shapes: e, curveSegments: t}, this.fromBufferGeometry(new rc(e, t)), this.mergeVertices();
  }
  function rc(e, t) {
    cr.call(this), this.type = "ShapeBufferGeometry", this.parameters = {shapes: e, curveSegments: t}, t = t || 12;
    var n = [], i = [], r = [], o = [], s = 0, a = 0;
    if (false === Array.isArray(e)) c(e); else for (var l = 0; l < e.length; l++) c(e[l]), this.addGroup(s, a, l), s += a, a = 0;
    function c(e) {
      var s, l, c, h = i.length / 3, u = e.extractPoints(t), d = u.shape, p = u.holes;
      for (false === Vl.isClockWise(d) && (d = d.reverse()), s = 0, l = p.length; s < l; s++) c = p[s], true === Vl.isClockWise(c) && (p[s] = c.reverse());
      var m = Vl.triangulateShape(d, p);
      for (s = 0, l = p.length; s < l; s++) c = p[s], d = d.concat(c);
      for (s = 0, l = d.length; s < l; s++) {
        var f = d[s];
        i.push(f.x, f.y, 0), r.push(0, 0, 1), o.push(f.x, f.y);
      }
      for (s = 0, l = m.length; s < l; s++) {
        var g = m[s], v = g[0] + h, y = g[1] + h, _ = g[2] + h;
        n.push(v, y, _), a += 3;
      }
    }
    this.setIndex(n), this.addAttribute("position", new Zi(i, 3)), this.addAttribute("normal", new Zi(r, 3)), this.addAttribute("uv", new Zi(o, 2));
  }
  function oc(e, t) {
    if (t.shapes = [], Array.isArray(e)) for (var n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      t.shapes.push(r.uuid);
    } else t.shapes.push(e.uuid);
    return t;
  }
  function sc(e, t) {
    cr.call(this), this.type = "EdgesGeometry", this.parameters = {thresholdAngle: t}, t = undefined !== t ? t : 1;
    var n, i, r, o, s = [], a = Math.cos(hn.DEG2RAD * t), l = [0, 0], c = {}, h = ["a", "b", "c"];
    e.isBufferGeometry ? (o = new Dr).fromBufferGeometry(e) : o = e.clone(), o.mergeVertices(), o.computeFaceNormals();
    for (var u = o.vertices, d = o.faces, p = 0, m = d.length; p < m; p++) for (var f = d[p], g = 0; g < 3; g++) n = f[h[g]], i = f[h[(g + 1) % 3]], l[0] = Math.min(n, i), l[1] = Math.max(n, i), undefined === c[r = "0,0"] ? c[r] = {index1: 0, index2: 0, face1: p, face2: undefined} : c[r].face2 = p;
    for (r in c) {
      var v = c[r];
      if (undefined === v.face2 || d[v.face1].normal.dot(d[v.face2].normal) <= a) {
        var y = u[v.index1];
        s.push(y.x, y.y, y.z), y = u[v.index2], s.push(y.x, y.y, y.z);
      }
    }
    this.addAttribute("position", new Zi(s, 3));
  }
  function ac(e, t, n, i, r, o, s, a) {
    Dr.call(this), this.type = "CylinderGeometry", this.parameters = {radiusTop: e, radiusBottom: t, height: n, radialSegments: i, heightSegments: r, openEnded: o, thetaStart: s, thetaLength: a}, this.fromBufferGeometry(new lc(e, t, n, i, r, o, s, a)), this.mergeVertices();
  }
  function lc(e, t, n, i, r, o, s, a) {
    cr.call(this), this.type = "CylinderBufferGeometry", this.parameters = {radiusTop: e, radiusBottom: t, height: n, radialSegments: i, heightSegments: r, openEnded: o, thetaStart: s, thetaLength: a};
    var l = this;
    e = undefined !== e ? e : 1, t = undefined !== t ? t : 1, n = n || 1, i = Math.floor(i) || 8, r = Math.floor(r) || 1, o = undefined !== o && o, s = undefined !== s ? s : 0, a = undefined !== a ? a : 2 * Math.PI;
    var c = [], h = [], u = [], d = [], p = 0, m = [], f = n / 2, g = 0;
    function v(n) {
      var r, o, m, v = new un, y = new fn, _ = 0, x = true === n ? e : t, b = true === n ? 1 : -1;
      for (o = p, r = 1; r <= i; r++) h.push(0, f * b, 0), u.push(0, b, 0), d.push(0.5, 0.5), p++;
      for (m = p, r = 0; r <= i; r++) {
        var w = r / i * a + s, S = Math.cos(w), E = Math.sin(w);
        y.x = x * E, y.y = f * b, y.z = x * S, h.push(y.x, y.y, y.z), u.push(0, b, 0), v.x = 0.5 * S + 0.5, v.y = 0.5 * E * b + 0.5, d.push(v.x, v.y), p++;
      }
      for (r = 0; r < i; r++) {
        var q = o + r, T = m + r;
        true === n ? c.push(T, T + 1, q) : c.push(T + 1, T, q), _ += 3;
      }
      l.addGroup(g, _, true === n ? 1 : 2), g += _;
    }
    !function () {
      var o, v, y = new fn, _ = new fn, x = 0, b = (t - e) / n;
      for (v = 0; v <= r; v++) {
        var w = [], S = v / r, E = S * (t - e) + e;
        for (o = 0; o <= i; o++) {
          var q = o / i, T = q * a + s, A = Math.sin(T), M = Math.cos(T);
          _.x = E * A, _.y = -S * n + f, _.z = E * M, h.push(_.x, _.y, _.z), y.set(A, b, M).normalize(), u.push(y.x, y.y, y.z), d.push(q, 1 - S), w.push(p++);
        }
        m.push(w);
      }
      for (o = 0; o < i; o++) for (v = 0; v < r; v++) {
        var C = m[v][o], k = m[v + 1][o], R = m[v + 1][o + 1], L = m[v][o + 1];
        c.push(C, k, L), c.push(k, R, L), x += 6;
      }
      l.addGroup(g, x, 0), g += x;
    }(), false === o && (e > 0 && v(true), t > 0 && v(false)), this.setIndex(c), this.addAttribute("position", new Zi(h, 3)), this.addAttribute("normal", new Zi(u, 3)), this.addAttribute("uv", new Zi(d, 2));
  }
  function cc(e, t, n, i, r, o, s) {
    ac.call(this, 0, e, t, n, i, r, o, s), this.type = "ConeGeometry", this.parameters = {radius: e, height: t, radialSegments: n, heightSegments: i, openEnded: r, thetaStart: o, thetaLength: s};
  }
  function hc(e, t, n, i, r, o, s) {
    lc.call(this, 0, e, t, n, i, r, o, s), this.type = "ConeBufferGeometry", this.parameters = {radius: e, height: t, radialSegments: n, heightSegments: i, openEnded: r, thetaStart: o, thetaLength: s};
  }
  function uc(e, t, n, i) {
    Dr.call(this), this.type = "CircleGeometry", this.parameters = {radius: e, segments: t, thetaStart: n, thetaLength: i}, this.fromBufferGeometry(new dc(e, t, n, i)), this.mergeVertices();
  }
  function dc(e, t, n, i) {
    cr.call(this), this.type = "CircleBufferGeometry", this.parameters = {radius: e, segments: t, thetaStart: n, thetaLength: i}, e = e || 1, t = undefined !== t ? Math.max(3, t) : 8, n = undefined !== n ? n : 0, i = undefined !== i ? i : 2 * Math.PI;
    var r, o, s = [], a = [], l = [], c = [], h = new fn, u = new un;
    for (a.push(0, 0, 0), l.push(0, 0, 1), c.push(0.5, 0.5), o = 0, r = 3; o <= t; o++, r += 3) {
      var d = n + o / t * i;
      h.x = e * Math.cos(d), h.y = e * Math.sin(d), a.push(h.x, h.y, h.z), l.push(0, 0, 1), u.x = (a[r] / e + 1) / 2, u.y = (a[r + 1] / e + 1) / 2, c.push(u.x, u.y);
    }
    for (r = 1; r <= t; r++) s.push(r, r + 1, 0);
    this.setIndex(s), this.addAttribute("position", new Zi(a, 3)), this.addAttribute("normal", new Zi(l, 3)), this.addAttribute("uv", new Zi(c, 2));
  }
  Yl.prototype = Object.create(Dr.prototype), Yl.prototype.constructor = Yl, Jl.prototype = Object.create($l.prototype), Jl.prototype.constructor = Jl, Kl.prototype = Object.create(Dr.prototype), Kl.prototype.constructor = Kl, Zl.prototype = Object.create(cr.prototype), Zl.prototype.constructor = Zl, Ql.prototype = Object.create(Dr.prototype), Ql.prototype.constructor = Ql, ec.prototype = Object.create(cr.prototype), ec.prototype.constructor = ec, tc.prototype = Object.create(Dr.prototype), tc.prototype.constructor = tc, nc.prototype = Object.create(cr.prototype), nc.prototype.constructor = nc, ic.prototype = Object.create(Dr.prototype), ic.prototype.constructor = ic, ic.prototype.toJSON = function () {
    var e = Dr.prototype.toJSON.call(this);
    return oc(this.parameters.shapes, e);
  }, rc.prototype = Object.create(cr.prototype), rc.prototype.constructor = rc, rc.prototype.toJSON = function () {
    var e = cr.prototype.toJSON.call(this);
    return oc(this.parameters.shapes, e);
  }, sc.prototype = Object.create(cr.prototype), sc.prototype.constructor = sc, ac.prototype = Object.create(Dr.prototype), ac.prototype.constructor = ac, lc.prototype = Object.create(cr.prototype), lc.prototype.constructor = lc, cc.prototype = Object.create(ac.prototype), cc.prototype.constructor = cc, hc.prototype = Object.create(lc.prototype), hc.prototype.constructor = hc, uc.prototype = Object.create(Dr.prototype), uc.prototype.constructor = uc, dc.prototype = Object.create(cr.prototype), dc.prototype.constructor = dc;
  var pc = Object.freeze({WireframeGeometry: tl, ParametricGeometry: nl, ParametricBufferGeometry: il, TetrahedronGeometry: sl, TetrahedronBufferGeometry: al, OctahedronGeometry: ll, OctahedronBufferGeometry: cl, IcosahedronGeometry: hl, IcosahedronBufferGeometry: ul, DodecahedronGeometry: dl, DodecahedronBufferGeometry: pl, PolyhedronGeometry: rl, PolyhedronBufferGeometry: ol, TubeGeometry: ml, TubeBufferGeometry: fl, TorusKnotGeometry: gl, TorusKnotBufferGeometry: vl, TorusGeometry: yl, TorusBufferGeometry: _l, TextGeometry: Yl, TextBufferGeometry: Jl, SphereGeometry: Kl, SphereBufferGeometry: Zl, RingGeometry: Ql, RingBufferGeometry: ec, PlaneGeometry: lo, PlaneBufferGeometry: co, LatheGeometry: tc, LatheBufferGeometry: nc, ShapeGeometry: ic, ShapeBufferGeometry: rc, ExtrudeGeometry: jl, ExtrudeBufferGeometry: $l, EdgesGeometry: sc, ConeGeometry: cc, ConeBufferGeometry: hc, CylinderGeometry: ac, CylinderBufferGeometry: lc, CircleGeometry: uc, CircleBufferGeometry: dc, BoxGeometry: Or, BoxBufferGeometry: Ir});
  function mc(e) {
    Vi.call(this), this.type = "ShadowMaterial", this.color = new Ii(0), this.transparent = true, this.setValues(e);
  }
  function fc(e) {
    Vr.call(this, e), this.type = "RawShaderMaterial";
  }
  function gc(e) {
    Vi.call(this), this.defines = {STANDARD: ""}, this.type = "MeshStandardMaterial", this.color = new Ii(16777215), this.roughness = 0.5, this.metalness = 0.5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ii(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Gt, this.normalScale = new un(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function vc(e) {
    gc.call(this), this.defines = {STANDARD: "", PHYSICAL: ""}, this.type = "MeshPhysicalMaterial", this.reflectivity = 0.5, this.clearcoat = 0, this.clearcoatRoughness = 0, this.sheen = null, this.clearcoatNormalScale = new un(1, 1), this.clearcoatNormalMap = null, this.transparency = 0, this.setValues(e);
  }
  function yc(e) {
    Vi.call(this), this.type = "MeshPhongMaterial", this.color = new Ii(16777215), this.specular = new Ii(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ii(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Gt, this.normalScale = new un(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = te, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function _c(e) {
    yc.call(this), this.defines = {TOON: ""}, this.type = "MeshToonMaterial", this.gradientMap = null, this.setValues(e);
  }
  function xc(e) {
    Vi.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Gt, this.normalScale = new un(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function bc(e) {
    Vi.call(this), this.type = "MeshLambertMaterial", this.color = new Ii(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Ii(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = te, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function wc(e) {
    Vi.call(this), this.defines = {MATCAP: ""}, this.type = "MeshMatcapMaterial", this.color = new Ii(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Gt, this.normalScale = new un(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.lights = false, this.setValues(e);
  }
  function Sc(e) {
    Pa.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
  }
  mc.prototype = Object.create(Vi.prototype), mc.prototype.constructor = mc, mc.prototype.isShadowMaterial = true, mc.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this;
  }, fc.prototype = Object.create(Vr.prototype), fc.prototype.constructor = fc, fc.prototype.isRawShaderMaterial = true, gc.prototype = Object.create(Vi.prototype), gc.prototype.constructor = gc, gc.prototype.isMeshStandardMaterial = true, gc.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.defines = {STANDARD: ""}, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, vc.prototype = Object.create(gc.prototype), vc.prototype.constructor = vc, vc.prototype.isMeshPhysicalMaterial = true, vc.prototype.copy = function (e) {
    return gc.prototype.copy.call(this, e), this.defines = {STANDARD: "", PHYSICAL: ""}, this.reflectivity = e.reflectivity, this.clearcoat = e.clearcoat, this.clearcoatRoughness = e.clearcoatRoughness, e.sheen ? this.sheen = (this.sheen || new Ii).copy(e.sheen) : this.sheen = null, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.transparency = e.transparency, this;
  }, yc.prototype = Object.create(Vi.prototype), yc.prototype.constructor = yc, yc.prototype.isMeshPhongMaterial = true, yc.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, _c.prototype = Object.create(yc.prototype), _c.prototype.constructor = _c, _c.prototype.isMeshToonMaterial = true, _c.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.gradientMap = e.gradientMap, this;
  }, xc.prototype = Object.create(Vi.prototype), xc.prototype.constructor = xc, xc.prototype.isMeshNormalMaterial = true, xc.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, bc.prototype = Object.create(Vi.prototype), bc.prototype.constructor = bc, bc.prototype.isMeshLambertMaterial = true, bc.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, wc.prototype = Object.create(Vi.prototype), wc.prototype.constructor = wc, wc.prototype.isMeshMatcapMaterial = true, wc.prototype.copy = function (e) {
    return Vi.prototype.copy.call(this, e), this.defines = {MATCAP: ""}, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, Sc.prototype = Object.create(Pa.prototype), Sc.prototype.constructor = Sc, Sc.prototype.isLineDashedMaterial = true, Sc.prototype.copy = function (e) {
    return Pa.prototype.copy.call(this, e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
  };
  var Ec = Object.freeze({ShadowMaterial: mc, SpriteMaterial: ha, RawShaderMaterial: fc, ShaderMaterial: Vr, PointsMaterial: Ha, MeshPhysicalMaterial: vc, MeshStandardMaterial: gc, MeshPhongMaterial: yc, MeshToonMaterial: _c, MeshNormalMaterial: xc, MeshLambertMaterial: bc, MeshDepthMaterial: Gs, MeshDistanceMaterial: Hs, MeshBasicMaterial: Gi, MeshMatcapMaterial: wc, LineDashedMaterial: Sc, LineBasicMaterial: Pa, Material: Vi}), qc = {arraySlice: function (e, t, n) {
    return qc.isTypedArray(e) ? new e.constructor(e.subarray(t, undefined !== n ? n : e.length)) : e.slice(t, n);
  }, convertArray: function (e, t, n) {
    return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e);
  }, isTypedArray: function (e) {
    return ArrayBuffer.isView(e) && !(e instanceof DataView);
  }, getKeyframeOrder: function (e) {
    for (var t = e.length, n = new Array(t), i = 0; i !== t; ++i) n[i] = i;
    return n.sort(function (t, n) {
      return e[t] - e[n];
    }), n;
  }, sortedArray: function (e, t, n) {
    for (var i = e.length, r = new e.constructor(i), o = 0, s = 0; s !== i; ++o) for (var a = n[o] * t, l = 0; l !== t; ++l) r[s++] = e[a + l];
    return r;
  }, flattenJSON: function (e, t, n, i) {
    for (var r = 1, o = e[0]; undefined !== o && undefined === o[i];) o = e[r++];
    if (undefined !== o) {
      var s = o[i];
      if (undefined !== s) if (Array.isArray(s)) do {
        undefined !== (s = o[i]) && (t.push(o.time), n.push.apply(n, s)), o = e[r++];
      } while (undefined !== o); else if (undefined !== s.toArray) do {
        undefined !== (s = o[i]) && (t.push(o.time), s.toArray(n, n.length)), o = e[r++];
      } while (undefined !== o); else do {
        undefined !== (s = o[i]) && (t.push(o.time), n.push(s)), o = e[r++];
      } while (undefined !== o);
    }
  }};
  function Tc(e, t, n, i) {
    this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = undefined !== i ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n;
  }
  function Ac(e, t, n, i) {
    Tc.call(this, e, t, n, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;
  }
  function Mc(e, t, n, i) {
    Tc.call(this, e, t, n, i);
  }
  function Cc(e, t, n, i) {
    Tc.call(this, e, t, n, i);
  }
  function kc(e, t, n, i) {
    if (undefined === e) throw new Error("THREE.KeyframeTrack: track name is undefined");
    if (undefined === t || 0 === t.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
    this.name = e, this.times = qc.convertArray(t, this.TimeBufferType), this.values = qc.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
  }
  function Rc(e, t, n) {
    kc.call(this, e, t, n);
  }
  function Lc(e, t, n, i) {
    kc.call(this, e, t, n, i);
  }
  function Pc(e, t, n, i) {
    kc.call(this, e, t, n, i);
  }
  function Dc(e, t, n, i) {
    Tc.call(this, e, t, n, i);
  }
  function Oc(e, t, n, i) {
    kc.call(this, e, t, n, i);
  }
  function Ic(e, t, n, i) {
    kc.call(this, e, t, n, i);
  }
  function Bc(e, t, n, i) {
    kc.call(this, e, t, n, i);
  }
  function Fc(e, t, n) {
    this.name = e, this.tracks = n, this.duration = undefined !== t ? t : -1, this.uuid = hn.generateUUID(), this.duration < 0 && this.resetDuration();
  }
  function zc(e) {
    if (undefined === e.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    var t = function (e) {
      switch (e.toLowerCase()) {
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
          return Pc;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
          return Bc;
        case "color":
          return Lc;
        case "quaternion":
          return Oc;
        case "bool":
        case "boolean":
          return Rc;
        case "string":
          return Ic;
      }
      throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e);
    }(e.type);
    if (undefined === e.times) {
      var n = [], i = [];
      qc.flattenJSON(e.keys, n, i, "value"), e.times = n, e.values = i;
    }
    return undefined !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation);
  }
  Object.assign(Tc.prototype, {evaluate: function (e) {
    var t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
    e: {
      t: {
        var o;
        n: {
          i: if (!(e < i)) {
            for (var s = n + 2;;) {
              if (undefined === i) {
                if (e < r) break i;
                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, r);
              }
              if (n === s) break;
              if (r = i, e < (i = t[++n])) break t;
            }
            o = t.length;
            break n;
          }
          if (e >= r) break e;
          var a = t[1];
          e < a && (n = 2, r = a);
          for (s = n - 2;;) {
            if (undefined === r) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
            if (n === s) break;
            if (i = r, e >= (r = t[--n - 1])) break t;
          }
          o = n, n = 0;
        }
        for (; n < o;) {
          var l = n + o >>> 1;
          e < t[l] ? o = l : n = l + 1;
        }
        if (i = t[n], undefined === (r = t[n - 1])) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
        if (undefined === i) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, e);
      }
      this._cachedIndex = n, this.intervalChanged_(n, r, i);
    }
    return this.interpolate_(n, r, e, i);
  }, settings: null, DefaultSettings_: {}, getSettings_: function () {
    return this.settings || this.DefaultSettings_;
  }, copySampleValue_: function (e) {
    for (var t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i, o = 0; o !== i; ++o) t[o] = n[r + o];
    return t;
  }, interpolate_: function () {
    throw new Error("call to abstract method");
  }, intervalChanged_: function () {}}), Object.assign(Tc.prototype, {beforeStart_: Tc.prototype.copySampleValue_, afterEnd_: Tc.prototype.copySampleValue_}), Ac.prototype = Object.assign(Object.create(Tc.prototype), {constructor: Ac, DefaultSettings_: {endingStart: At, endingEnd: At}, intervalChanged_: function (e, t, n) {
    var i = this.parameterPositions, r = e - 2, o = e + 1, s = i[r], a = i[o];
    if (undefined === s) switch (this.getSettings_().endingStart) {
      case Mt:
        r = e, s = 2 * t - n;
        break;
      case Ct:
        s = t + i[r = i.length - 2] - i[r + 1];
        break;
      default:
        r = e, s = n;
    }
    if (undefined === a) switch (this.getSettings_().endingEnd) {
      case Mt:
        o = e, a = 2 * n - t;
        break;
      case Ct:
        o = 1, a = n + i[1] - i[0];
        break;
      default:
        o = e - 1, a = t;
    }
    var l = 0.5 * (n - t), c = this.valueSize;
    this._weightPrev = l / (t - s), this._weightNext = l / (a - n), this._offsetPrev = r * c, this._offsetNext = o * c;
  }, interpolate_: function (e, t, n, i) {
    for (var r = this.resultBuffer, o = this.sampleValues, s = this.valueSize, a = e * s, l = a - s, c = this._offsetPrev, h = this._offsetNext, u = this._weightPrev, d = this._weightNext, p = (n - t) / (i - t), m = p * p, f = m * p, g = -u * f + 2 * u * m - u * p, v = (1 + u) * f + (-1.5 - 2 * u) * m + (-0.5 + u) * p + 1, y = (-1 - d) * f + (1.5 + d) * m + 0.5 * p, _ = d * f - d * m, x = 0; x !== s; ++x) r[x] = g * o[c + x] + v * o[l + x] + y * o[a + x] + _ * o[h + x];
    return r;
  }}), Mc.prototype = Object.assign(Object.create(Tc.prototype), {constructor: Mc, interpolate_: function (e, t, n, i) {
    for (var r = this.resultBuffer, o = this.sampleValues, s = this.valueSize, a = e * s, l = a - s, c = (n - t) / (i - t), h = 1 - c, u = 0; u !== s; ++u) r[u] = o[l + u] * h + o[a + u] * c;
    return r;
  }}), Cc.prototype = Object.assign(Object.create(Tc.prototype), {constructor: Cc, interpolate_: function (e) {
    return this.copySampleValue_(e - 1);
  }}), Object.assign(kc, {toJSON: function (e) {
    var t, n = e.constructor;
    if (undefined !== n.toJSON) t = n.toJSON(e); else {
      t = {name: e.name, times: qc.convertArray(e.times, Array), values: qc.convertArray(e.values, Array)};
      var i = e.getInterpolation();
      i !== e.DefaultInterpolation && (t.interpolation = i);
    }
    return t.type = e.ValueTypeName, t;
  }}), Object.assign(kc.prototype, {constructor: kc, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: qt, InterpolantFactoryMethodDiscrete: function (e) {
    return new Cc(this.times, this.values, this.getValueSize(), e);
  }, InterpolantFactoryMethodLinear: function (e) {
    return new Mc(this.times, this.values, this.getValueSize(), e);
  }, InterpolantFactoryMethodSmooth: function (e) {
    return new Ac(this.times, this.values, this.getValueSize(), e);
  }, setInterpolation: function (e) {
    var t;
    switch (e) {
      case Et:
        t = this.InterpolantFactoryMethodDiscrete;
        break;
      case qt:
        t = this.InterpolantFactoryMethodLinear;
        break;
      case Tt:
        t = this.InterpolantFactoryMethodSmooth;
    }
    if (undefined === t) {
      var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
      if (undefined === this.createInterpolant) {
        if (e === this.DefaultInterpolation) throw new Error(n);
        this.setInterpolation(this.DefaultInterpolation);
      }
      return console.warn("THREE.KeyframeTrack:", n), this;
    }
    return this.createInterpolant = t, this;
  }, getInterpolation: function () {
    switch (this.createInterpolant) {
      case this.InterpolantFactoryMethodDiscrete:
        return Et;
      case this.InterpolantFactoryMethodLinear:
        return qt;
      case this.InterpolantFactoryMethodSmooth:
        return Tt;
    }
  }, getValueSize: function () {
    return this.values.length / this.times.length;
  }, shift: function (e) {
    if (0 !== e) for (var t = this.times, n = 0, i = t.length; n !== i; ++n) t[n] += e;
    return this;
  }, scale: function (e) {
    if (1 !== e) for (var t = this.times, n = 0, i = t.length; n !== i; ++n) t[n] *= e;
    return this;
  }, trim: function (e, t) {
    for (var n = this.times, i = n.length, r = 0, o = i - 1; r !== i && n[r] < e;) ++r;
    for (; -1 !== o && n[o] > t;) --o;
    if (++o, 0 !== r || o !== i) {
      r >= o && (r = (o = Math.max(o, 1)) - 1);
      var s = this.getValueSize();
      this.times = qc.arraySlice(n, r, o), this.values = qc.arraySlice(this.values, r * s, o * s);
    }
    return this;
  }, validate: function () {
    var e = true, t = this.getValueSize();
    t - Math.floor(t) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = false);
    var n = this.times, i = this.values, r = n.length;
    0 === r && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = false);
    for (var o = null, s = 0; s !== r; s++) {
      var a = n[s];
      if ("number" == typeof a && isNaN(a)) {
        console.error("THREE.KeyframeTrack: Time is not a valid number.", this, s, a), e = false;
        break;
      }
      if (null !== o && o > a) {
        console.error("THREE.KeyframeTrack: Out of order keys.", this, s, a, o), e = false;
        break;
      }
      o = a;
    }
    if (undefined !== i && qc.isTypedArray(i)) {
      s = 0;
      for (var l = i.length; s !== l; ++s) {
        var c = i[s];
        if (isNaN(c)) {
          console.error("THREE.KeyframeTrack: Value is not a valid number.", this, s, c), e = false;
          break;
        }
      }
    }
    return e;
  }, optimize: function () {
    for (var e = this.times, t = this.values, n = this.getValueSize(), i = this.getInterpolation() === Tt, r = 1, o = e.length - 1, s = 1; s < o; ++s) {
      var a = false, l = e[s];
      if (l !== e[s + 1] && (1 !== s || l !== l[0])) if (i) a = true; else for (var c = s * n, h = c - n, u = c + n, d = 0; d !== n; ++d) {
        var p = t[c + d];
        if (p !== t[h + d] || p !== t[u + d]) {
          a = true;
          break;
        }
      }
      if (a) {
        if (s !== r) {
          e[r] = e[s];
          var m = s * n, f = r * n;
          for (d = 0; d !== n; ++d) t[f + d] = t[m + d];
        }
        ++r;
      }
    }
    if (o > 0) {
      e[r] = e[o];
      for (m = o * n, f = r * n, d = 0; d !== n; ++d) t[f + d] = t[m + d];
      ++r;
    }
    return r !== e.length && (this.times = qc.arraySlice(e, 0, r), this.values = qc.arraySlice(t, 0, r * n)), this;
  }, clone: function () {
    var e = qc.arraySlice(this.times, 0), t = qc.arraySlice(this.values, 0), n = new (0, this.constructor)(this.name, e, t);
    return n.createInterpolant = this.createInterpolant, n;
  }}), Rc.prototype = Object.assign(Object.create(kc.prototype), {constructor: Rc, ValueTypeName: "bool", ValueBufferType: Array, DefaultInterpolation: Et, InterpolantFactoryMethodLinear: undefined, InterpolantFactoryMethodSmooth: undefined}), Lc.prototype = Object.assign(Object.create(kc.prototype), {constructor: Lc, ValueTypeName: "color"}), Pc.prototype = Object.assign(Object.create(kc.prototype), {constructor: Pc, ValueTypeName: "number"}), Dc.prototype = Object.assign(Object.create(Tc.prototype), {constructor: Dc, interpolate_: function (e, t, n, i) {
    for (var r = this.resultBuffer, o = this.sampleValues, s = this.valueSize, a = e * s, l = (n - t) / (i - t), c = a + s; a !== c; a += 4) dn.slerpFlat(r, 0, o, a - s, o, a, l);
    return r;
  }}), Oc.prototype = Object.assign(Object.create(kc.prototype), {constructor: Oc, ValueTypeName: "quaternion", DefaultInterpolation: qt, InterpolantFactoryMethodLinear: function (e) {
    return new Dc(this.times, this.values, this.getValueSize(), e);
  }, InterpolantFactoryMethodSmooth: undefined}), Ic.prototype = Object.assign(Object.create(kc.prototype), {constructor: Ic, ValueTypeName: "string", ValueBufferType: Array, DefaultInterpolation: Et, InterpolantFactoryMethodLinear: undefined, InterpolantFactoryMethodSmooth: undefined}), Bc.prototype = Object.assign(Object.create(kc.prototype), {constructor: Bc, ValueTypeName: "vector"}), Object.assign(Fc, {parse: function (e) {
    for (var t = [], n = e.tracks, i = 1 / (e.fps || 1), r = 0, o = n.length; r !== o; ++r) t.push(zc(n[r]).scale(i));
    return new Fc(e.name, e.duration, t);
  }, toJSON: function (e) {
    for (var t = [], n = e.tracks, i = {name: e.name, duration: e.duration, tracks: t, uuid: e.uuid}, r = 0, o = n.length; r !== o; ++r) t.push(kc.toJSON(n[r]));
    return i;
  }, CreateFromMorphTargetSequence: function (e, t, n, i) {
    for (var r = t.length, o = [], s = 0; s < r; s++) {
      var a = [], l = [];
      a.push((s + r - 1) % r, s, (s + 1) % r), l.push(0, 1, 0);
      var c = qc.getKeyframeOrder(a);
      a = qc.sortedArray(a, 1, c), l = qc.sortedArray(l, 1, c), i || 0 !== a[0] || (a.push(r), l.push(l[0])), o.push(new Pc(".morphTargetInfluences[" + t[s].name + "]", a, l).scale(1 / n));
    }
    return new Fc(e, -1, o);
  }, findByName: function (e, t) {
    var n = e;
    if (!Array.isArray(e)) {
      var i = e;
      n = i.geometry && i.geometry.animations || i.animations;
    }
    for (var r = 0; r < n.length; r++) if (n[r].name === t) return n[r];
    return null;
  }, CreateClipsFromMorphTargetSequences: function (e, t, n) {
    for (var i = {}, r = /^([\w-]*?)([\d]+)$/, o = 0, s = e.length; o < s; o++) {
      var a = e[o], l = a.name.match(r);
      if (l && l.length > 1) {
        var c = i[u = l[1]];
        c || (i[u] = c = []), c.push(a);
      }
    }
    var h = [];
    for (var u in i) h.push(Fc.CreateFromMorphTargetSequence(u, i[u], t, n));
    return h;
  }, parseAnimation: function (e, t) {
    if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
    for (var n = function (e, t, n, i, r) {
      if (0 !== n.length) {
        var o = [], s = [];
        qc.flattenJSON(n, o, s, i), 0 !== o.length && r.push(new e(t, o, s));
      }
    }, i = [], r = e.name || "default", o = e.length || -1, s = e.fps || 30, a = e.hierarchy || [], l = 0; l < a.length; l++) {
      var c = a[l].keys;
      if (c && 0 !== c.length) if (c[0].morphTargets) {
        for (var h = {}, u = 0; u < c.length; u++) if (c[u].morphTargets) for (var d = 0; d < c[u].morphTargets.length; d++) h[c[u].morphTargets[d]] = -1;
        for (var p in h) {
          var m = [], f = [];
          for (d = 0; d !== c[u].morphTargets.length; ++d) {
            var g = c[u];
            m.push(g.time), f.push(g.morphTarget === p ? 1 : 0);
          }
          i.push(new Pc(".morphTargetInfluence[" + p + "]", m, f));
        }
        o = h.length * (s || 1);
      } else {
        var v = ".bones[" + t[l].name + "]";
        n(Bc, v + ".position", c, "pos", i), n(Oc, v + ".quaternion", c, "rot", i), n(Bc, v + ".scale", c, "scl", i);
      }
    }
    return 0 === i.length ? null : new Fc(r, o, i);
  }}), Object.assign(Fc.prototype, {resetDuration: function () {
    for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
      var i = this.tracks[t];
      e = Math.max(e, i.times[i.times.length - 1]);
    }
    return this.duration = e, this;
  }, trim: function () {
    for (var e = 0; e < this.tracks.length; e++) this.tracks[e].trim(0, this.duration);
    return this;
  }, validate: function () {
    for (var e = true, t = 0; t < this.tracks.length; t++) e = e && this.tracks[t].validate();
    return e;
  }, optimize: function () {
    for (var e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
    return this;
  }, clone: function () {
    for (var e = [], t = 0; t < this.tracks.length; t++) e.push(this.tracks[t].clone());
    return new Fc(this.name, this.duration, e);
  }});
  var Nc = {enabled: false, files: {}, add: function (e, t) {
    false !== this.enabled && (this.files[e] = t);
  }, get: function (e) {
    if (false !== this.enabled) return this.files[e];
  }, remove: function (e) {
    delete this.files[e];
  }, clear: function () {
    this.files = {};
  }};
  function Uc(e, t, n) {
    var i = this, r = false, o = 0, s = 0, a = undefined;
    this.onStart = undefined, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function (e) {
      s++, false === r && undefined !== i.onStart && i.onStart(e, o, s), r = true;
    }, this.itemEnd = function (e) {
      o++, undefined !== i.onProgress && i.onProgress(e, o, s), o === s && (r = false, undefined !== i.onLoad && i.onLoad());
    }, this.itemError = function (e) {
      undefined !== i.onError && i.onError(e);
    }, this.resolveURL = function (e) {
      return a ? a(e) : e;
    }, this.setURLModifier = function (e) {
      return a = e, this;
    };
  }
  var Vc = new Uc;
  function Gc(e) {
    this.manager = undefined !== e ? e : Vc, this.crossOrigin = "anonymous", this.path = "", this.resourcePath = "";
  }
  Object.assign(Gc.prototype, {load: function () {}, parse: function () {}, setCrossOrigin: function (e) {
    return this.crossOrigin = e, this;
  }, setPath: function (e) {
    return this.path = e, this;
  }, setResourcePath: function (e) {
    return this.resourcePath = e, this;
  }}), Gc.Handlers = {handlers: [], add: function (e, t) {
    this.handlers.push(e, t);
  }, get: function (e) {
    for (var t = this.handlers, n = 0, i = t.length; n < i; n += 2) {
      var r = t[n], o = t[n + 1];
      if (r.test(e)) return o;
    }
    return null;
  }};
  var Hc = {};
  function jc(e) {
    Gc.call(this, e);
  }
  function $c(e) {
    Gc.call(this, e);
  }
  function Wc(e) {
    Gc.call(this, e), this._parser = null;
  }
  function Xc(e) {
    Gc.call(this, e), this._parser = null;
  }
  function Yc(e) {
    Gc.call(this, e);
  }
  function Jc(e) {
    Gc.call(this, e);
  }
  function Kc(e) {
    Gc.call(this, e);
  }
  function Zc() {
    this.type = "Curve", this.arcLengthDivisions = 200;
  }
  function Qc(e, t, n, i, r, o, s, a) {
    Zc.call(this), this.type = "EllipseCurve", this.aX = e || 0, this.aY = t || 0, this.xRadius = n || 1, this.yRadius = i || 1, this.aStartAngle = r || 0, this.aEndAngle = o || 2 * Math.PI, this.aClockwise = s || false, this.aRotation = a || 0;
  }
  function eh(e, t, n, i, r, o) {
    Qc.call(this, e, t, n, n, i, r, o), this.type = "ArcCurve";
  }
  function th() {
    var e = 0, t = 0, n = 0, i = 0;
    function r(r, o, s, a) {
      e = r, t = s, n = -3 * r + 3 * o - 2 * s - a, i = 2 * r - 2 * o + s + a;
    }
    return {initCatmullRom: function (e, t, n, i, o) {
      r(t, n, o * (n - e), o * (i - t));
    }, initNonuniformCatmullRom: function (e, t, n, i, o, s, a) {
      var l = (t - e) / o - (n - e) / (o + s) + (n - t) / s, c = (n - t) / s - (i - t) / (s + a) + (i - n) / a;
      r(t, n, l *= s, c *= s);
    }, calc: function (r) {
      var o = r * r;
      return e + t * r + n * o + i * (o * r);
    }};
  }
  jc.prototype = Object.assign(Object.create(Gc.prototype), {constructor: jc, load: function (e, t, n, i) {
    undefined === e && (e = ""), undefined !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
    var r = this, o = Nc.get(e);
    if (undefined !== o) return r.manager.itemStart(e), setTimeout(function () {
      t && t(o), r.manager.itemEnd(e);
    }, 0), o;
    if (undefined === Hc[e]) {
      var s = e.match(/^data:(.*?)(;base64)?,(.*)$/);
      if (s) {
        var a = s[1], l = !!s[2], c = s[3];
        c = decodeURIComponent(c), l && (c = atob(c));
        try {
          var h, u = (this.responseType || "").toLowerCase();
          switch (u) {
            case "arraybuffer":
            case "blob":
              for (var d = new Uint8Array(c.length), p = 0; p < c.length; p++) d[p] = c.charCodeAt(p);
              h = "blob" === u ? new Blob([d.buffer], {type: a}) : d.buffer;
              break;
            case "document":
              var m = new DOMParser;
              h = m.parseFromString(c, a);
              break;
            case "json":
              h = JSON.parse(c);
              break;
            default:
              h = c;
          }
          setTimeout(function () {
            t && t(h), r.manager.itemEnd(e);
          }, 0);
        } catch (t) {
          setTimeout(function () {
            i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
          }, 0);
        }
      } else {
        Hc[e] = [], Hc[e].push({onLoad: t, onProgress: n, onError: i});
        var f = new XMLHttpRequest;
        for (var g in f.open("GET", e, true), f.addEventListener("load", function (t) {
          var n = this.response;
          Nc.add(e, n);
          var i = Hc[e];
          if (delete Hc[e], 200 === this.status || 0 === this.status) {
            0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received.");
            for (var o = 0, s = i.length; o < s; o++) {
              (a = i[o]).onLoad && a.onLoad(n);
            }
            r.manager.itemEnd(e);
          } else {
            for (o = 0, s = i.length; o < s; o++) {
              var a;
              (a = i[o]).onError && a.onError(t);
            }
            r.manager.itemError(e), r.manager.itemEnd(e);
          }
        }, false), f.addEventListener("progress", function (t) {
          for (var n = Hc[e], i = 0, r = n.length; i < r; i++) {
            var o = n[i];
            o.onProgress && o.onProgress(t);
          }
        }, false), f.addEventListener("error", function (t) {
          var n = Hc[e];
          delete Hc[e];
          for (var i = 0, o = n.length; i < o; i++) {
            var s = n[i];
            s.onError && s.onError(t);
          }
          r.manager.itemError(e), r.manager.itemEnd(e);
        }, false), f.addEventListener("abort", function (t) {
          var n = Hc[e];
          delete Hc[e];
          for (var i = 0, o = n.length; i < o; i++) {
            var s = n[i];
            s.onError && s.onError(t);
          }
          r.manager.itemError(e), r.manager.itemEnd(e);
        }, false), undefined !== this.responseType && (f.responseType = this.responseType), undefined !== this.withCredentials && (f.withCredentials = this.withCredentials), f.overrideMimeType && f.overrideMimeType(undefined !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) f.setRequestHeader(g, this.requestHeader[g]);
        f.send(null);
      }
      return r.manager.itemStart(e), f;
    }
    Hc[e].push({onLoad: t, onProgress: n, onError: i});
  }, setResponseType: function (e) {
    return this.responseType = e, this;
  }, setWithCredentials: function (e) {
    return this.withCredentials = e, this;
  }, setMimeType: function (e) {
    return this.mimeType = e, this;
  }, setRequestHeader: function (e) {
    return this.requestHeader = e, this;
  }}), $c.prototype = Object.assign(Object.create(Gc.prototype), {constructor: $c, load: function (e, t, n, i) {
    var r = this, o = new jc(r.manager);
    o.setPath(r.path), o.load(e, function (e) {
      t(r.parse(JSON.parse(e)));
    }, n, i);
  }, parse: function (e) {
    for (var t = [], n = 0; n < e.length; n++) {
      var i = Fc.parse(e[n]);
      t.push(i);
    }
    return t;
  }}), Wc.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Wc, load: function (e, t, n, i) {
    var r = this, o = [], s = new Za;
    s.image = o;
    var a = new jc(this.manager);
    function l(l) {
      a.load(e[l], function (e) {
        var n = r._parser(e, true);
        o[l] = {width: n.width, height: n.height, format: n.format, mipmaps: n.mipmaps}, 6 === (c += 1) && (1 === n.mipmapCount && (s.minFilter = Te), s.format = n.format, s.needsUpdate = true, t && t(s));
      }, n, i);
    }
    if (a.setPath(this.path), a.setResponseType("arraybuffer"), Array.isArray(e)) for (var c = 0, h = 0, u = e.length; h < u; ++h) l(h); else a.load(e, function (e) {
      var n = r._parser(e, true);
      if (n.isCubemap) for (var i = n.mipmaps.length / n.mipmapCount, a = 0; a < i; a++) {
        o[a] = {mipmaps: []};
        for (var l = 0; l < n.mipmapCount; l++) o[a].mipmaps.push(n.mipmaps[a * n.mipmapCount + l]), o[a].format = n.format, o[a].width = n.width, o[a].height = n.height;
      } else s.image.width = n.width, s.image.height = n.height, s.mipmaps = n.mipmaps;
      1 === n.mipmapCount && (s.minFilter = Te), s.format = n.format, s.needsUpdate = true, t && t(s);
    }, n, i);
    return s;
  }}), Xc.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Xc, load: function (e, t, n, i) {
    var r = this, o = new Yr, s = new jc(this.manager);
    return s.setResponseType("arraybuffer"), s.setPath(this.path), s.load(e, function (e) {
      var n = r._parser(e);
      n && (undefined !== n.image ? o.image = n.image : undefined !== n.data && (o.image.width = n.width, o.image.height = n.height, o.image.data = n.data), o.wrapS = undefined !== n.wrapS ? n.wrapS : _e, o.wrapT = undefined !== n.wrapT ? n.wrapT : _e, o.magFilter = undefined !== n.magFilter ? n.magFilter : Te, o.minFilter = undefined !== n.minFilter ? n.minFilter : Ce, o.anisotropy = undefined !== n.anisotropy ? n.anisotropy : 1, undefined !== n.format && (o.format = n.format), undefined !== n.type && (o.type = n.type), undefined !== n.mipmaps && (o.mipmaps = n.mipmaps), 1 === n.mipmapCount && (o.minFilter = Te), o.needsUpdate = true, t && t(o, n));
    }, n, i), o;
  }}), Yc.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Yc, load: function (e, t, n, i) {
    undefined !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
    var r = this, o = Nc.get(e);
    if (undefined !== o) return r.manager.itemStart(e), setTimeout(function () {
      t && t(o), r.manager.itemEnd(e);
    }, 0), o;
    var s = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
    function a() {
      s.removeEventListener("load", a, false), s.removeEventListener("error", l, false), Nc.add(e, this), t && t(this), r.manager.itemEnd(e);
    }
    function l(t) {
      s.removeEventListener("load", a, false), s.removeEventListener("error", l, false), i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
    }
    return s.addEventListener("load", a, false), s.addEventListener("error", l, false), "data:" !== e.substr(0, 5) && undefined !== this.crossOrigin && (s.crossOrigin = this.crossOrigin), r.manager.itemStart(e), s.src = e, s;
  }}), Jc.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Jc, load: function (e, t, n, i) {
    var r = new wo, o = new Yc(this.manager);
    o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
    var s = 0;
    function a(n) {
      o.load(e[n], function (e) {
        r.images[n] = e, 6 === ++s && (r.needsUpdate = true, t && t(r));
      }, undefined, i);
    }
    for (var l = 0; l < e.length; ++l) a(l);
    return r;
  }}), Kc.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Kc, load: function (e, t, n, i) {
    var r = new bn, o = new Yc(this.manager);
    return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function (n) {
      r.image = n;
      var i = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
      r.format = i ? He : je, r.needsUpdate = true, undefined !== t && t(r);
    }, n, i), r;
  }}), Object.assign(Zc.prototype, {getPoint: function () {
    return console.warn("THREE.Curve: .getPoint() not implemented."), null;
  }, getPointAt: function (e, t) {
    var n = this.getUtoTmapping(e);
    return this.getPoint(n, t);
  }, getPoints: function (e) {
    undefined === e && (e = 5);
    for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
    return t;
  }, getSpacedPoints: function (e) {
    undefined === e && (e = 5);
    for (var t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
    return t;
  }, getLength: function () {
    var e = this.getLengths();
    return e[e.length - 1];
  }, getLengths: function (e) {
    if (undefined === e && (e = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
    this.needsUpdate = false;
    var t, n, i = [], r = this.getPoint(0), o = 0;
    for (i.push(0), n = 1; n <= e; n++) o += (t = this.getPoint(n / e)).distanceTo(r), i.push(o), r = t;
    return this.cacheArcLengths = i, i;
  }, updateArcLengths: function () {
    this.needsUpdate = true, this.getLengths();
  }, getUtoTmapping: function (e, t) {
    var n, i = this.getLengths(), r = 0, o = i.length;
    n = t || e * i[o - 1];
    for (var s, a = 0, l = o - 1; a <= l;) if ((s = i[r = Math.floor(a + (l - a) / 2)] - n) < 0) a = r + 1; else {
      if (!(s > 0)) {
        l = r;
        break;
      }
      l = r - 1;
    }
    if (i[r = l] === n) return r / (o - 1);
    var c = i[r];
    return (r + (n - c) / (i[r + 1] - c)) / (o - 1);
  }, getTangent: function (e) {
    var t = e - 0.0001, n = e + 0.0001;
    t < 0 && (t = 0), n > 1 && (n = 1);
    var i = this.getPoint(t);
    return this.getPoint(n).clone().sub(i).normalize();
  }, getTangentAt: function (e) {
    var t = this.getUtoTmapping(e);
    return this.getTangent(t);
  }, computeFrenetFrames: function (e, t) {
    var n, i, r, o = new fn, s = [], a = [], l = [], c = new fn, h = new Ln;
    for (n = 0; n <= e; n++) i = n / e, s[n] = this.getTangentAt(i), s[n].normalize();
    a[0] = new fn, l[0] = new fn;
    var u = Number.MAX_VALUE, d = Math.abs(s[0].x), p = Math.abs(s[0].y), m = Math.abs(s[0].z);
    for (d <= u && (u = d, o.set(1, 0, 0)), p <= u && (u = p, o.set(0, 1, 0)), m <= u && o.set(0, 0, 1), c.crossVectors(s[0], o).normalize(), a[0].crossVectors(s[0], c), l[0].crossVectors(s[0], a[0]), n = 1; n <= e; n++) a[n] = a[n - 1].clone(), l[n] = l[n - 1].clone(), c.crossVectors(s[n - 1], s[n]), c.length() > Number.EPSILON && (c.normalize(), r = Math.acos(hn.clamp(s[n - 1].dot(s[n]), -1, 1)), a[n].applyMatrix4(h.makeRotationAxis(c, r))), l[n].crossVectors(s[n], a[n]);
    if (true === t) for (r = Math.acos(hn.clamp(a[0].dot(a[e]), -1, 1)), r /= e, s[0].dot(c.crossVectors(a[0], a[e])) > 0 && (r = -r), n = 1; n <= e; n++) a[n].applyMatrix4(h.makeRotationAxis(s[n], r * n)), l[n].crossVectors(s[n], a[n]);
    return {tangents: s, normals: a, binormals: l};
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.arcLengthDivisions = e.arcLengthDivisions, this;
  }, toJSON: function () {
    var e = {metadata: {version: 4.5, type: "Curve", generator: "Curve.toJSON"}};
    return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
  }, fromJSON: function (e) {
    return this.arcLengthDivisions = e.arcLengthDivisions, this;
  }}), Qc.prototype = Object.create(Zc.prototype), Qc.prototype.constructor = Qc, Qc.prototype.isEllipseCurve = true, Qc.prototype.getPoint = function (e, t) {
    for (var n = t || new un, i = 2 * Math.PI, r = this.aEndAngle - this.aStartAngle, o = Math.abs(r) < Number.EPSILON; r < 0;) r += i;
    for (; r > i;) r -= i;
    r < Number.EPSILON && (r = o ? 0 : i), true !== this.aClockwise || o || (r === i ? r = -i : r -= i);
    var s = this.aStartAngle + e * r, a = this.aX + this.xRadius * Math.cos(s), l = this.aY + this.yRadius * Math.sin(s);
    if (0 !== this.aRotation) {
      var c = Math.cos(this.aRotation), h = Math.sin(this.aRotation), u = a - this.aX, d = l - this.aY;
      a = u * c - d * h + this.aX, l = u * h + d * c + this.aY;
    }
    return n.set(a, l);
  }, Qc.prototype.copy = function (e) {
    return Zc.prototype.copy.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
  }, Qc.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
  }, Qc.prototype.fromJSON = function (e) {
    return Zc.prototype.fromJSON.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
  }, eh.prototype = Object.create(Qc.prototype), eh.prototype.constructor = eh, eh.prototype.isArcCurve = true;
  var nh = new fn, ih = new th, rh = new th, oh = new th;
  function sh(e, t, n, i) {
    Zc.call(this), this.type = "CatmullRomCurve3", this.points = e || [], this.closed = t || false, this.curveType = n || "centripetal", this.tension = i || 0.5;
  }
  function ah(e, t, n, i, r) {
    var o = 0.5 * (i - t), s = 0.5 * (r - n), a = e * e;
    return (2 * n - 2 * i + o + s) * (e * a) + (-3 * n + 3 * i - 2 * o - s) * a + o * e + n;
  }
  function lh(e, t, n, i) {
    return function (e, t) {
      var n = 1 - e;
      return n * n * t;
    }(e, t) + function (e, t) {
      return 2 * (1 - e) * e * t;
    }(e, n) + function (e, t) {
      return e * e * t;
    }(e, i);
  }
  function ch(e, t, n, i, r) {
    return function (e, t) {
      var n = 1 - e;
      return n * n * n * t;
    }(e, t) + function (e, t) {
      var n = 1 - e;
      return 3 * n * n * e * t;
    }(e, n) + function (e, t) {
      return 3 * (1 - e) * e * e * t;
    }(e, i) + function (e, t) {
      return e * e * e * t;
    }(e, r);
  }
  function hh(e, t, n, i) {
    Zc.call(this), this.type = "CubicBezierCurve", this.v0 = e || new un, this.v1 = t || new un, this.v2 = n || new un, this.v3 = i || new un;
  }
  function uh(e, t, n, i) {
    Zc.call(this), this.type = "CubicBezierCurve3", this.v0 = e || new fn, this.v1 = t || new fn, this.v2 = n || new fn, this.v3 = i || new fn;
  }
  function dh(e, t) {
    Zc.call(this), this.type = "LineCurve", this.v1 = e || new un, this.v2 = t || new un;
  }
  function ph(e, t) {
    Zc.call(this), this.type = "LineCurve3", this.v1 = e || new fn, this.v2 = t || new fn;
  }
  function mh(e, t, n) {
    Zc.call(this), this.type = "QuadraticBezierCurve", this.v0 = e || new un, this.v1 = t || new un, this.v2 = n || new un;
  }
  function fh(e, t, n) {
    Zc.call(this), this.type = "QuadraticBezierCurve3", this.v0 = e || new fn, this.v1 = t || new fn, this.v2 = n || new fn;
  }
  function gh(e) {
    Zc.call(this), this.type = "SplineCurve", this.points = e || [];
  }
  sh.prototype = Object.create(Zc.prototype), sh.prototype.constructor = sh, sh.prototype.isCatmullRomCurve3 = true, sh.prototype.getPoint = function (e, t) {
    var n, i, r, o, s = t || new fn, a = this.points, l = a.length, c = (l - (this.closed ? 0 : 1)) * e, h = Math.floor(c), u = c - h;
    if (this.closed ? h += h > 0 ? 0 : (Math.floor(Math.abs(h) / l) + 1) * l : 0 === u && h === l - 1 && (h = l - 2, u = 1), this.closed || h > 0 ? n = a[(h - 1) % l] : (nh.subVectors(a[0], a[1]).add(a[0]), n = nh), i = a[h % l], r = a[(h + 1) % l], this.closed || h + 2 < l ? o = a[(h + 2) % l] : (nh.subVectors(a[l - 1], a[l - 2]).add(a[l - 1]), o = nh), "centripetal" === this.curveType || "chordal" === this.curveType) {
      var d = "chordal" === this.curveType ? 0.5 : 0.25, p = Math.pow(n.distanceToSquared(i), d), m = Math.pow(i.distanceToSquared(r), d), f = Math.pow(r.distanceToSquared(o), d);
      m < 0.0001 && (m = 1), p < 0.0001 && (p = m), f < 0.0001 && (f = m), ih.initNonuniformCatmullRom(n.x, i.x, r.x, o.x, p, m, f), rh.initNonuniformCatmullRom(n.y, i.y, r.y, o.y, p, m, f), oh.initNonuniformCatmullRom(n.z, i.z, r.z, o.z, p, m, f);
    } else "catmullrom" === this.curveType && (ih.initCatmullRom(n.x, i.x, r.x, o.x, this.tension), rh.initCatmullRom(n.y, i.y, r.y, o.y, this.tension), oh.initCatmullRom(n.z, i.z, r.z, o.z, this.tension));
    return s.set(ih.calc(u), rh.calc(u), oh.calc(u)), s;
  }, sh.prototype.copy = function (e) {
    Zc.prototype.copy.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push(i.clone());
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
  }, sh.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    e.points = [];
    for (var t = 0, n = this.points.length; t < n; t++) {
      var i = this.points[t];
      e.points.push(i.toArray());
    }
    return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
  }, sh.prototype.fromJSON = function (e) {
    Zc.prototype.fromJSON.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push((new fn).fromArray(i));
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
  }, hh.prototype = Object.create(Zc.prototype), hh.prototype.constructor = hh, hh.prototype.isCubicBezierCurve = true, hh.prototype.getPoint = function (e, t) {
    var n = t || new un, i = this.v0, r = this.v1, o = this.v2, s = this.v3;
    return n.set(ch(e, i.x, r.x, o.x, s.x), ch(e, i.y, r.y, o.y, s.y)), n;
  }, hh.prototype.copy = function (e) {
    return Zc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
  }, hh.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
  }, hh.prototype.fromJSON = function (e) {
    return Zc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
  }, uh.prototype = Object.create(Zc.prototype), uh.prototype.constructor = uh, uh.prototype.isCubicBezierCurve3 = true, uh.prototype.getPoint = function (e, t) {
    var n = t || new fn, i = this.v0, r = this.v1, o = this.v2, s = this.v3;
    return n.set(ch(e, i.x, r.x, o.x, s.x), ch(e, i.y, r.y, o.y, s.y), ch(e, i.z, r.z, o.z, s.z)), n;
  }, uh.prototype.copy = function (e) {
    return Zc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
  }, uh.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
  }, uh.prototype.fromJSON = function (e) {
    return Zc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
  }, dh.prototype = Object.create(Zc.prototype), dh.prototype.constructor = dh, dh.prototype.isLineCurve = true, dh.prototype.getPoint = function (e, t) {
    var n = t || new un;
    return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
  }, dh.prototype.getPointAt = function (e, t) {
    return this.getPoint(e, t);
  }, dh.prototype.getTangent = function () {
    return this.v2.clone().sub(this.v1).normalize();
  }, dh.prototype.copy = function (e) {
    return Zc.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, dh.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, dh.prototype.fromJSON = function (e) {
    return Zc.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, ph.prototype = Object.create(Zc.prototype), ph.prototype.constructor = ph, ph.prototype.isLineCurve3 = true, ph.prototype.getPoint = function (e, t) {
    var n = t || new fn;
    return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
  }, ph.prototype.getPointAt = function (e, t) {
    return this.getPoint(e, t);
  }, ph.prototype.copy = function (e) {
    return Zc.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, ph.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, ph.prototype.fromJSON = function (e) {
    return Zc.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, mh.prototype = Object.create(Zc.prototype), mh.prototype.constructor = mh, mh.prototype.isQuadraticBezierCurve = true, mh.prototype.getPoint = function (e, t) {
    var n = t || new un, i = this.v0, r = this.v1, o = this.v2;
    return n.set(lh(e, i.x, r.x, o.x), lh(e, i.y, r.y, o.y)), n;
  }, mh.prototype.copy = function (e) {
    return Zc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, mh.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, mh.prototype.fromJSON = function (e) {
    return Zc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, fh.prototype = Object.create(Zc.prototype), fh.prototype.constructor = fh, fh.prototype.isQuadraticBezierCurve3 = true, fh.prototype.getPoint = function (e, t) {
    var n = t || new fn, i = this.v0, r = this.v1, o = this.v2;
    return n.set(lh(e, i.x, r.x, o.x), lh(e, i.y, r.y, o.y), lh(e, i.z, r.z, o.z)), n;
  }, fh.prototype.copy = function (e) {
    return Zc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, fh.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, fh.prototype.fromJSON = function (e) {
    return Zc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, gh.prototype = Object.create(Zc.prototype), gh.prototype.constructor = gh, gh.prototype.isSplineCurve = true, gh.prototype.getPoint = function (e, t) {
    var n = t || new un, i = this.points, r = (i.length - 1) * e, o = Math.floor(r), s = r - o, a = i[0 === o ? o : o - 1], l = i[o], c = i[o > i.length - 2 ? i.length - 1 : o + 1], h = i[o > i.length - 3 ? i.length - 1 : o + 2];
    return n.set(ah(s, a.x, l.x, c.x, h.x), ah(s, a.y, l.y, c.y, h.y)), n;
  }, gh.prototype.copy = function (e) {
    Zc.prototype.copy.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push(i.clone());
    }
    return this;
  }, gh.prototype.toJSON = function () {
    var e = Zc.prototype.toJSON.call(this);
    e.points = [];
    for (var t = 0, n = this.points.length; t < n; t++) {
      var i = this.points[t];
      e.points.push(i.toArray());
    }
    return e;
  }, gh.prototype.fromJSON = function (e) {
    Zc.prototype.fromJSON.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push((new un).fromArray(i));
    }
    return this;
  };
  var vh = Object.freeze({ArcCurve: eh, CatmullRomCurve3: sh, CubicBezierCurve: hh, CubicBezierCurve3: uh, EllipseCurve: Qc, LineCurve: dh, LineCurve3: ph, QuadraticBezierCurve: mh, QuadraticBezierCurve3: fh, SplineCurve: gh});
  function yh() {
    Zc.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = false;
  }
  function _h(e) {
    yh.call(this), this.type = "Path", this.currentPoint = new un, e && this.setFromPoints(e);
  }
  function xh(e) {
    _h.call(this, e), this.uuid = hn.generateUUID(), this.type = "Shape", this.holes = [];
  }
  function bh(e, t) {
    Jn.call(this), this.type = "Light", this.color = new Ii(e), this.intensity = undefined !== t ? t : 1, this.receiveShadow = undefined;
  }
  function wh(e, t, n) {
    bh.call(this, e, n), this.type = "HemisphereLight", this.castShadow = undefined, this.position.copy(Jn.DefaultUp), this.updateMatrix(), this.groundColor = new Ii(t);
  }
  function Sh(e) {
    this.camera = e, this.bias = 0, this.radius = 1, this.mapSize = new un(512, 512), this.map = null, this.mapPass = null, this.matrix = new Ln, this._frustum = new no, this._frameExtents = new un(1, 1), this._viewportCount = 1, this._viewports = [new wn(0, 0, 1, 1)];
  }
  function Eh() {
    Sh.call(this, new Hr(50, 1, 0.5, 500));
  }
  function qh(e, t, n, i, r, o) {
    bh.call(this, e, t), this.type = "SpotLight", this.position.copy(Jn.DefaultUp), this.updateMatrix(), this.target = new Jn, Object.defineProperty(this, "power", {get: function () {
      return this.intensity * Math.PI;
    }, set: function (e) {
      this.intensity = e / Math.PI;
    }}), this.distance = undefined !== n ? n : 0, this.angle = undefined !== i ? i : Math.PI / 3, this.penumbra = undefined !== r ? r : 0, this.decay = undefined !== o ? o : 1, this.shadow = new Eh;
  }
  function Th() {
    Sh.call(this, new Hr(90, 1, 0.5, 500)), this._frameExtents = new un(4, 2), this._viewportCount = 6, this._viewports = [new wn(2, 1, 1, 1), new wn(0, 1, 1, 1), new wn(3, 1, 1, 1), new wn(1, 1, 1, 1), new wn(3, 0, 1, 1), new wn(1, 0, 1, 1)], this._cubeDirections = [new fn(1, 0, 0), new fn(-1, 0, 0), new fn(0, 0, 1), new fn(0, 0, -1), new fn(0, 1, 0), new fn(0, -1, 0)], this._cubeUps = [new fn(0, 1, 0), new fn(0, 1, 0), new fn(0, 1, 0), new fn(0, 1, 0), new fn(0, 0, 1), new fn(0, 0, -1)];
  }
  function Ah(e, t, n, i) {
    bh.call(this, e, t), this.type = "PointLight", Object.defineProperty(this, "power", {get: function () {
      return 4 * this.intensity * Math.PI;
    }, set: function (e) {
      this.intensity = e / (4 * Math.PI);
    }}), this.distance = undefined !== n ? n : 0, this.decay = undefined !== i ? i : 1, this.shadow = new Th;
  }
  function Mh(e, t, n, i, r, o) {
    Gr.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = undefined !== e ? e : -1, this.right = undefined !== t ? t : 1, this.top = undefined !== n ? n : 1, this.bottom = undefined !== i ? i : -1, this.near = undefined !== r ? r : 0.1, this.far = undefined !== o ? o : 2e3, this.updateProjectionMatrix();
  }
  function Ch() {
    Sh.call(this, new Mh(-5, 5, 5, -5, 0.5, 500));
  }
  function kh(e, t) {
    bh.call(this, e, t), this.type = "DirectionalLight", this.position.copy(Jn.DefaultUp), this.updateMatrix(), this.target = new Jn, this.shadow = new Ch;
  }
  function Rh(e, t) {
    bh.call(this, e, t), this.type = "AmbientLight", this.castShadow = undefined;
  }
  function Lh(e, t, n, i) {
    bh.call(this, e, t), this.type = "RectAreaLight", this.width = undefined !== n ? n : 10, this.height = undefined !== i ? i : 10;
  }
  function Ph(e) {
    Gc.call(this, e), this.textures = {};
  }
  yh.prototype = Object.assign(Object.create(Zc.prototype), {constructor: yh, add: function (e) {
    this.curves.push(e);
  }, closePath: function () {
    var e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new dh(t, e));
  }, getPoint: function (e) {
    for (var t = e * this.getLength(), n = this.getCurveLengths(), i = 0; i < n.length;) {
      if (n[i] >= t) {
        var r = n[i] - t, o = this.curves[i], s = o.getLength(), a = 0 === s ? 0 : 1 - r / s;
        return o.getPointAt(a);
      }
      i++;
    }
    return null;
  }, getLength: function () {
    var e = this.getCurveLengths();
    return e[e.length - 1];
  }, updateArcLengths: function () {
    this.needsUpdate = true, this.cacheLengths = null, this.getCurveLengths();
  }, getCurveLengths: function () {
    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
    for (var e = [], t = 0, n = 0, i = this.curves.length; n < i; n++) t += this.curves[n].getLength(), e.push(t);
    return this.cacheLengths = e, e;
  }, getSpacedPoints: function (e) {
    undefined === e && (e = 40);
    for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
    return this.autoClose && t.push(t[0]), t;
  }, getPoints: function (e) {
    e = e || 12;
    for (var t, n = [], i = 0, r = this.curves; i < r.length; i++) for (var o = r[i], s = o && o.isEllipseCurve ? 2 * e : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, a = o.getPoints(s), l = 0; l < a.length; l++) {
      var c = a[l];
      t && t.equals(c) || (n.push(c), t = c);
    }
    return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n;
  }, copy: function (e) {
    Zc.prototype.copy.call(this, e), this.curves = [];
    for (var t = 0, n = e.curves.length; t < n; t++) {
      var i = e.curves[t];
      this.curves.push(i.clone());
    }
    return this.autoClose = e.autoClose, this;
  }, toJSON: function () {
    var e = Zc.prototype.toJSON.call(this);
    e.autoClose = this.autoClose, e.curves = [];
    for (var t = 0, n = this.curves.length; t < n; t++) {
      var i = this.curves[t];
      e.curves.push(i.toJSON());
    }
    return e;
  }, fromJSON: function (e) {
    Zc.prototype.fromJSON.call(this, e), this.autoClose = e.autoClose, this.curves = [];
    for (var t = 0, n = e.curves.length; t < n; t++) {
      var i = e.curves[t];
      this.curves.push((new vh[i.type]).fromJSON(i));
    }
    return this;
  }}), _h.prototype = Object.assign(Object.create(yh.prototype), {constructor: _h, setFromPoints: function (e) {
    this.moveTo(e[0].x, e[0].y);
    for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
  }, moveTo: function (e, t) {
    this.currentPoint.set(e, t);
  }, lineTo: function (e, t) {
    var n = new dh(this.currentPoint.clone(), new un(e, t));
    this.curves.push(n), this.currentPoint.set(e, t);
  }, quadraticCurveTo: function (e, t, n, i) {
    var r = new mh(this.currentPoint.clone(), new un(e, t), new un(n, i));
    this.curves.push(r), this.currentPoint.set(n, i);
  }, bezierCurveTo: function (e, t, n, i, r, o) {
    var s = new hh(this.currentPoint.clone(), new un(e, t), new un(n, i), new un(r, o));
    this.curves.push(s), this.currentPoint.set(r, o);
  }, splineThru: function (e) {
    var t = new gh([this.currentPoint.clone()].concat(e));
    this.curves.push(t), this.currentPoint.copy(e[e.length - 1]);
  }, arc: function (e, t, n, i, r, o) {
    var s = this.currentPoint.x, a = this.currentPoint.y;
    this.absarc(e + s, t + a, n, i, r, o);
  }, absarc: function (e, t, n, i, r, o) {
    this.absellipse(e, t, n, n, i, r, o);
  }, ellipse: function (e, t, n, i, r, o, s, a) {
    var l = this.currentPoint.x, c = this.currentPoint.y;
    this.absellipse(e + l, t + c, n, i, r, o, s, a);
  }, absellipse: function (e, t, n, i, r, o, s, a) {
    var l = new Qc(e, t, n, i, r, o, s, a);
    if (this.curves.length > 0) {
      var c = l.getPoint(0);
      c.equals(this.currentPoint) || this.lineTo(c.x, c.y);
    }
    this.curves.push(l);
    var h = l.getPoint(1);
    this.currentPoint.copy(h);
  }, copy: function (e) {
    return yh.prototype.copy.call(this, e), this.currentPoint.copy(e.currentPoint), this;
  }, toJSON: function () {
    var e = yh.prototype.toJSON.call(this);
    return e.currentPoint = this.currentPoint.toArray(), e;
  }, fromJSON: function (e) {
    return yh.prototype.fromJSON.call(this, e), this.currentPoint.fromArray(e.currentPoint), this;
  }}), xh.prototype = Object.assign(Object.create(_h.prototype), {constructor: xh, getPointsHoles: function (e) {
    for (var t = [], n = 0, i = this.holes.length; n < i; n++) t[n] = this.holes[n].getPoints(e);
    return t;
  }, extractPoints: function (e) {
    return {shape: this.getPoints(e), holes: this.getPointsHoles(e)};
  }, copy: function (e) {
    _h.prototype.copy.call(this, e), this.holes = [];
    for (var t = 0, n = e.holes.length; t < n; t++) {
      var i = e.holes[t];
      this.holes.push(i.clone());
    }
    return this;
  }, toJSON: function () {
    var e = _h.prototype.toJSON.call(this);
    e.uuid = this.uuid, e.holes = [];
    for (var t = 0, n = this.holes.length; t < n; t++) {
      var i = this.holes[t];
      e.holes.push(i.toJSON());
    }
    return e;
  }, fromJSON: function (e) {
    _h.prototype.fromJSON.call(this, e), this.uuid = e.uuid, this.holes = [];
    for (var t = 0, n = e.holes.length; t < n; t++) {
      var i = e.holes[t];
      this.holes.push((new _h).fromJSON(i));
    }
    return this;
  }}), bh.prototype = Object.assign(Object.create(Jn.prototype), {constructor: bh, isLight: true, copy: function (e) {
    return Jn.prototype.copy.call(this, e), this.color.copy(e.color), this.intensity = e.intensity, this;
  }, toJSON: function (e) {
    var t = Jn.prototype.toJSON.call(this, e);
    return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, undefined !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), undefined !== this.distance && (t.object.distance = this.distance), undefined !== this.angle && (t.object.angle = this.angle), undefined !== this.decay && (t.object.decay = this.decay), undefined !== this.penumbra && (t.object.penumbra = this.penumbra), undefined !== this.shadow && (t.object.shadow = this.shadow.toJSON()), t;
  }}), wh.prototype = Object.assign(Object.create(bh.prototype), {constructor: wh, isHemisphereLight: true, copy: function (e) {
    return bh.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;
  }}), Object.assign(Sh.prototype, {_projScreenMatrix: new Ln, _lightPositionWorld: new fn, _lookTarget: new fn, getViewportCount: function () {
    return this._viewportCount;
  }, getFrustum: function () {
    return this._frustum;
  }, updateMatrices: function (e) {
    var t = this.camera, n = this.matrix, i = this._projScreenMatrix, r = this._lookTarget, o = this._lightPositionWorld;
    o.setFromMatrixPosition(e.matrixWorld), t.position.copy(o), r.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(r), t.updateMatrixWorld(), i.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromMatrix(i), n.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse);
  }, getViewport: function (e) {
    return this._viewports[e];
  }, getFrameExtents: function () {
    return this._frameExtents;
  }, copy: function (e) {
    return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, toJSON: function () {
    var e = {};
    return 0 !== this.bias && (e.bias = this.bias), 1 !== this.radius && (e.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(false).object, delete e.camera.matrix, e;
  }}), Eh.prototype = Object.assign(Object.create(Sh.prototype), {constructor: Eh, isSpotLightShadow: true, updateMatrices: function (e, t, n) {
    var i = this.camera, r = 2 * hn.RAD2DEG * e.angle, o = this.mapSize.width / this.mapSize.height, s = e.distance || i.far;
    r === i.fov && o === i.aspect && s === i.far || (i.fov = r, i.aspect = o, i.far = s, i.updateProjectionMatrix()), Sh.prototype.updateMatrices.call(this, e, t, n);
  }}), qh.prototype = Object.assign(Object.create(bh.prototype), {constructor: qh, isSpotLight: true, copy: function (e) {
    return bh.prototype.copy.call(this, e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
  }}), Th.prototype = Object.assign(Object.create(Sh.prototype), {constructor: Th, isPointLightShadow: true, updateMatrices: function (e, t, n) {
    var i = this.camera, r = this.matrix, o = this._lightPositionWorld, s = this._lookTarget, a = this._projScreenMatrix;
    o.setFromMatrixPosition(e.matrixWorld), i.position.copy(o), s.copy(i.position), s.add(this._cubeDirections[n]), i.up.copy(this._cubeUps[n]), i.lookAt(s), i.updateMatrixWorld(), r.makeTranslation(-o.x, -o.y, -o.z), a.multiplyMatrices(i.projectionMatrix, i.matrixWorldInverse), this._frustum.setFromMatrix(a);
  }}), Ah.prototype = Object.assign(Object.create(bh.prototype), {constructor: Ah, isPointLight: true, copy: function (e) {
    return bh.prototype.copy.call(this, e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
  }}), Mh.prototype = Object.assign(Object.create(Gr.prototype), {constructor: Mh, isOrthographicCamera: true, copy: function (e, t) {
    return Gr.prototype.copy.call(this, e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = null === e.view ? null : Object.assign({}, e.view), this;
  }, setViewOffset: function (e, t, n, i, r, o) {
    null === this.view && (this.view = {enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1}), this.view.enabled = true, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
  }, clearViewOffset: function () {
    null !== this.view && (this.view.enabled = false), this.updateProjectionMatrix();
  }, updateProjectionMatrix: function () {
    var e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, o = n + e, s = i + t, a = i - t;
    if (null !== this.view && this.view.enabled) {
      var l = this.zoom / (this.view.width / this.view.fullWidth), c = this.zoom / (this.view.height / this.view.fullHeight), h = (this.right - this.left) / this.view.width, u = (this.top - this.bottom) / this.view.height;
      o = (r += h * (this.view.offsetX / l)) + h * (this.view.width / l), a = (s -= u * (this.view.offsetY / c)) - u * (this.view.height / c);
    }
    this.projectionMatrix.makeOrthographic(r, o, s, a, this.near, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix);
  }, toJSON: function (e) {
    var t = Jn.prototype.toJSON.call(this, e);
    return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign({}, this.view)), t;
  }}), Ch.prototype = Object.assign(Object.create(Sh.prototype), {constructor: Ch, isDirectionalLightShadow: true, updateMatrices: function (e, t, n) {
    Sh.prototype.updateMatrices.call(this, e, t, n);
  }}), kh.prototype = Object.assign(Object.create(bh.prototype), {constructor: kh, isDirectionalLight: true, copy: function (e) {
    return bh.prototype.copy.call(this, e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
  }}), Rh.prototype = Object.assign(Object.create(bh.prototype), {constructor: Rh, isAmbientLight: true}), Lh.prototype = Object.assign(Object.create(bh.prototype), {constructor: Lh, isRectAreaLight: true, copy: function (e) {
    return bh.prototype.copy.call(this, e), this.width = e.width, this.height = e.height, this;
  }, toJSON: function (e) {
    var t = bh.prototype.toJSON.call(this, e);
    return t.object.width = this.width, t.object.height = this.height, t;
  }}), Ph.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Ph, load: function (e, t, n, i) {
    var r = this, o = new jc(r.manager);
    o.setPath(r.path), o.load(e, function (e) {
      t(r.parse(JSON.parse(e)));
    }, n, i);
  }, parse: function (e) {
    var t = this.textures;
    function n(e) {
      return undefined === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e), t[e];
    }
    var i = new Ec[e.type];
    if (undefined !== e.uuid && (i.uuid = e.uuid), undefined !== e.name && (i.name = e.name), undefined !== e.color && i.color.setHex(e.color), undefined !== e.roughness && (i.roughness = e.roughness), undefined !== e.metalness && (i.metalness = e.metalness), undefined !== e.emissive && i.emissive.setHex(e.emissive), undefined !== e.specular && i.specular.setHex(e.specular), undefined !== e.shininess && (i.shininess = e.shininess), undefined !== e.clearcoat && (i.clearcoat = e.clearcoat), undefined !== e.clearcoatRoughness && (i.clearcoatRoughness = e.clearcoatRoughness), undefined !== e.vertexColors && (i.vertexColors = e.vertexColors), undefined !== e.fog && (i.fog = e.fog), undefined !== e.flatShading && (i.flatShading = e.flatShading), undefined !== e.blending && (i.blending = e.blending), undefined !== e.combine && (i.combine = e.combine), undefined !== e.side && (i.side = e.side), undefined !== e.opacity && (i.opacity = e.opacity), undefined !== e.transparent && (i.transparent = e.transparent), undefined !== e.alphaTest && (i.alphaTest = e.alphaTest), undefined !== e.depthTest && (i.depthTest = e.depthTest), undefined !== e.depthWrite && (i.depthWrite = e.depthWrite), undefined !== e.colorWrite && (i.colorWrite = e.colorWrite), undefined !== e.wireframe && (i.wireframe = e.wireframe), undefined !== e.wireframeLinewidth && (i.wireframeLinewidth = e.wireframeLinewidth), undefined !== e.wireframeLinecap && (i.wireframeLinecap = e.wireframeLinecap), undefined !== e.wireframeLinejoin && (i.wireframeLinejoin = e.wireframeLinejoin), undefined !== e.rotation && (i.rotation = e.rotation), 1 !== e.linewidth && (i.linewidth = e.linewidth), undefined !== e.dashSize && (i.dashSize = e.dashSize), undefined !== e.gapSize && (i.gapSize = e.gapSize), undefined !== e.scale && (i.scale = e.scale), undefined !== e.polygonOffset && (i.polygonOffset = e.polygonOffset), undefined !== e.polygonOffsetFactor && (i.polygonOffsetFactor = e.polygonOffsetFactor), undefined !== e.polygonOffsetUnits && (i.polygonOffsetUnits = e.polygonOffsetUnits), undefined !== e.skinning && (i.skinning = e.skinning), undefined !== e.morphTargets && (i.morphTargets = e.morphTargets), undefined !== e.morphNormals && (i.morphNormals = e.morphNormals), undefined !== e.dithering && (i.dithering = e.dithering), undefined !== e.visible && (i.visible = e.visible), undefined !== e.toneMapped && (i.toneMapped = e.toneMapped), undefined !== e.userData && (i.userData = e.userData), undefined !== e.uniforms) for (var r in e.uniforms) {
      var o = e.uniforms[r];
      switch (i.uniforms[r] = {}, o.type) {
        case "t":
          i.uniforms[r].value = (undefined === t[o.value] && console.warn("THREE.MaterialLoader: Undefined texture", o.value), t[o.value]);
          break;
        case "c":
          i.uniforms[r].value = (new Ii).setHex(o.value);
          break;
        case "v2":
          i.uniforms[r].value = (new un).fromArray(o.value);
          break;
        case "v3":
          i.uniforms[r].value = (new fn).fromArray(o.value);
          break;
        case "v4":
          i.uniforms[r].value = (new wn).fromArray(o.value);
          break;
        case "m3":
          i.uniforms[r].value = (new yn).fromArray(o.value);
        case "m4":
          i.uniforms[r].value = (new Ln).fromArray(o.value);
          break;
        default:
          i.uniforms[r].value = o.value;
      }
    }
    if (undefined !== e.defines && (i.defines = e.defines), undefined !== e.vertexShader && (i.vertexShader = e.vertexShader), undefined !== e.fragmentShader && (i.fragmentShader = e.fragmentShader), undefined !== e.extensions) for (var s in e.extensions) i.extensions[s] = e.extensions[s];
    if (undefined !== e.shading && (i.flatShading = 1 === e.shading), undefined !== e.size && (i.size = e.size), undefined !== e.sizeAttenuation && (i.sizeAttenuation = e.sizeAttenuation), undefined !== e.map && (i.map = (undefined === t[e.map] && console.warn("THREE.MaterialLoader: Undefined texture", e.map), t[e.map])), undefined !== e.matcap && (i.matcap = (undefined === t[e.matcap] && console.warn("THREE.MaterialLoader: Undefined texture", e.matcap), t[e.matcap])), undefined !== e.alphaMap && (i.alphaMap = (undefined === t[e.alphaMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.alphaMap), t[e.alphaMap]), i.transparent = true), undefined !== e.bumpMap && (i.bumpMap = (undefined === t[e.bumpMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.bumpMap), t[e.bumpMap])), undefined !== e.bumpScale && (i.bumpScale = e.bumpScale), undefined !== e.normalMap && (i.normalMap = (undefined === t[e.normalMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.normalMap), t[e.normalMap])), undefined !== e.normalMapType && (i.normalMapType = e.normalMapType), undefined !== e.normalScale) {
      var a = e.normalScale;
      false === Array.isArray(a) && (a = [a, a]), i.normalScale = (new un).fromArray(a);
    }
    return undefined !== e.displacementMap && (i.displacementMap = (undefined === t[e.displacementMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.displacementMap), t[e.displacementMap])), undefined !== e.displacementScale && (i.displacementScale = e.displacementScale), undefined !== e.displacementBias && (i.displacementBias = e.displacementBias), undefined !== e.roughnessMap && (i.roughnessMap = (undefined === t[e.roughnessMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.roughnessMap), t[e.roughnessMap])), undefined !== e.metalnessMap && (i.metalnessMap = (undefined === t[e.metalnessMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.metalnessMap), t[e.metalnessMap])), undefined !== e.emissiveMap && (i.emissiveMap = (undefined === t[e.emissiveMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.emissiveMap), t[e.emissiveMap])), undefined !== e.emissiveIntensity && (i.emissiveIntensity = e.emissiveIntensity), undefined !== e.specularMap && (i.specularMap = (undefined === t[e.specularMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.specularMap), t[e.specularMap])), undefined !== e.envMap && (i.envMap = (undefined === t[e.envMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.envMap), t[e.envMap])), undefined !== e.envMapIntensity && (i.envMapIntensity = e.envMapIntensity), undefined !== e.reflectivity && (i.reflectivity = e.reflectivity), undefined !== e.refractionRatio && (i.refractionRatio = e.refractionRatio), undefined !== e.lightMap && (i.lightMap = (undefined === t[e.lightMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.lightMap), t[e.lightMap])), undefined !== e.lightMapIntensity && (i.lightMapIntensity = e.lightMapIntensity), undefined !== e.aoMap && (i.aoMap = (undefined === t[e.aoMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.aoMap), t[e.aoMap])), undefined !== e.aoMapIntensity && (i.aoMapIntensity = e.aoMapIntensity), undefined !== e.gradientMap && (i.gradientMap = (undefined === t[e.gradientMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.gradientMap), t[e.gradientMap])), undefined !== e.clearcoatNormalMap && (i.clearcoatNormalMap = (undefined === t[e.clearcoatNormalMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.clearcoatNormalMap), t[e.clearcoatNormalMap])), undefined !== e.clearcoatNormalScale && (i.clearcoatNormalScale = (new un).fromArray(e.clearcoatNormalScale)), i;
  }, setTextures: function (e) {
    return this.textures = e, this;
  }});
  var Dh = {decodeText: function (e) {
    if ("undefined" != typeof TextDecoder) return (new TextDecoder).decode(e);
    for (var t = "", n = 0, i = e.length; n < i; n++) t += String.fromCharCode(e[n]);
    try {
      return decodeURIComponent(escape(t));
    } catch (e) {
      return t;
    }
  }, extractUrlBase: function (e) {
    var t = e.lastIndexOf("/");
    return -1 === t ? "./" : e.substr(0, t + 1);
  }};
  function Oh() {
    cr.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = undefined;
  }
  function Ih(e, t, n, i) {
    "number" == typeof n && (i = n, n = false, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")), Hi.call(this, e, t, n), this.meshPerAttribute = i || 1;
  }
  function Bh(e) {
    Gc.call(this, e);
  }
  Oh.prototype = Object.assign(Object.create(cr.prototype), {constructor: Oh, isInstancedBufferGeometry: true, copy: function (e) {
    return cr.prototype.copy.call(this, e), this.maxInstancedCount = e.maxInstancedCount, this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, toJSON: function () {
    var e = cr.prototype.toJSON.call(this);
    return e.maxInstancedCount = this.maxInstancedCount, e.isInstancedBufferGeometry = true, e;
  }}), Ih.prototype = Object.assign(Object.create(Hi.prototype), {constructor: Ih, isInstancedBufferAttribute: true, copy: function (e) {
    return Hi.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this;
  }, toJSON: function () {
    var e = Hi.prototype.toJSON.call(this);
    return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = true, e;
  }}), Bh.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Bh, load: function (e, t, n, i) {
    var r = this, o = new jc(r.manager);
    o.setPath(r.path), o.load(e, function (e) {
      t(r.parse(JSON.parse(e)));
    }, n, i);
  }, parse: function (e) {
    var t = e.isInstancedBufferGeometry ? new Oh : new cr, n = e.data.index;
    if (undefined !== n) {
      var i = new Fh[n.type](n.array);
      t.setIndex(new Hi(i, 1));
    }
    var r = e.data.attributes;
    for (var o in r) {
      var s = r[o], a = (i = new Fh[s.type](s.array), new (s.isInstancedBufferAttribute ? Ih : Hi)(i, s.itemSize, s.normalized));
      undefined !== s.name && (a.name = s.name), t.addAttribute(o, a);
    }
    var l = e.data.morphAttributes;
    if (l) for (var o in l) {
      for (var c = l[o], h = [], u = 0, d = c.length; u < d; u++) {
        s = c[u], a = new Hi(i = new Fh[s.type](s.array), s.itemSize, s.normalized);
        undefined !== s.name && (a.name = s.name), h.push(a);
      }
      t.morphAttributes[o] = h;
    }
    var p = e.data.groups || e.data.drawcalls || e.data.offsets;
    if (undefined !== p) {
      u = 0;
      for (var m = p.length; u !== m; ++u) {
        var f = p[u];
        t.addGroup(f.start, f.count, f.materialIndex);
      }
    }
    var g = e.data.boundingSphere;
    if (undefined !== g) {
      var v = new fn;
      undefined !== g.center && v.fromArray(g.center), t.boundingSphere = new pi(v, g.radius);
    }
    return e.name && (t.name = e.name), e.userData && (t.userData = e.userData), t;
  }});
  var Fh = {Int8Array: Int8Array, Uint8Array: Uint8Array, Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array, Int16Array: Int16Array, Uint16Array: Uint16Array, Int32Array: Int32Array, Uint32Array: Uint32Array, Float32Array: Float32Array, Float64Array: Float64Array};
  function zh(e) {
    Gc.call(this, e);
  }
  zh.prototype = Object.assign(Object.create(Gc.prototype), {constructor: zh, load: function (e, t, n, i) {
    var r = this, o = "" === this.path ? Dh.extractUrlBase(e) : this.path;
    this.resourcePath = this.resourcePath || o;
    var s = new jc(r.manager);
    s.setPath(this.path), s.load(e, function (n) {
      var o = null;
      try {
        o = JSON.parse(n);
      } catch (t) {
        return undefined !== i && i(t), void console.error("THREE:ObjectLoader: Can't parse " + e + ".", t.message);
      }
      var s = o.metadata;
      undefined !== s && undefined !== s.type && "geometry" !== s.type.toLowerCase() ? r.parse(o, t) : console.error("THREE.ObjectLoader: Can't load " + e);
    }, n, i);
  }, parse: function (e, t) {
    var n = this.parseShape(e.shapes), i = this.parseGeometries(e.geometries, n), r = this.parseImages(e.images, function () {
      undefined !== t && t(a);
    }), o = this.parseTextures(e.textures, r), s = this.parseMaterials(e.materials, o), a = this.parseObject(e.object, i, s);
    return e.animations && (a.animations = this.parseAnimations(e.animations)), undefined !== e.images && 0 !== e.images.length || undefined !== t && t(a), a;
  }, parseShape: function (e) {
    var t = {};
    if (undefined !== e) for (var n = 0, i = e.length; n < i; n++) {
      var r = (new xh).fromJSON(e[n]);
      t[r.uuid] = r;
    }
    return t;
  }, parseGeometries: function (e, t) {
    var n = {};
    if (undefined !== e) for (var i = new Bh, r = 0, o = e.length; r < o; r++) {
      var s, a = e[r];
      switch (a.type) {
        case "PlaneGeometry":
        case "PlaneBufferGeometry":
          s = new pc[a.type](a.width, a.height, a.widthSegments, a.heightSegments);
          break;
        case "BoxGeometry":
        case "BoxBufferGeometry":
        case "CubeGeometry":
          s = new pc[a.type](a.width, a.height, a.depth, a.widthSegments, a.heightSegments, a.depthSegments);
          break;
        case "CircleGeometry":
        case "CircleBufferGeometry":
          s = new pc[a.type](a.radius, a.segments, a.thetaStart, a.thetaLength);
          break;
        case "CylinderGeometry":
        case "CylinderBufferGeometry":
          s = new pc[a.type](a.radiusTop, a.radiusBottom, a.height, a.radialSegments, a.heightSegments, a.openEnded, a.thetaStart, a.thetaLength);
          break;
        case "ConeGeometry":
        case "ConeBufferGeometry":
          s = new pc[a.type](a.radius, a.height, a.radialSegments, a.heightSegments, a.openEnded, a.thetaStart, a.thetaLength);
          break;
        case "SphereGeometry":
        case "SphereBufferGeometry":
          s = new pc[a.type](a.radius, a.widthSegments, a.heightSegments, a.phiStart, a.phiLength, a.thetaStart, a.thetaLength);
          break;
        case "DodecahedronGeometry":
        case "DodecahedronBufferGeometry":
        case "IcosahedronGeometry":
        case "IcosahedronBufferGeometry":
        case "OctahedronGeometry":
        case "OctahedronBufferGeometry":
        case "TetrahedronGeometry":
        case "TetrahedronBufferGeometry":
          s = new pc[a.type](a.radius, a.detail);
          break;
        case "RingGeometry":
        case "RingBufferGeometry":
          s = new pc[a.type](a.innerRadius, a.outerRadius, a.thetaSegments, a.phiSegments, a.thetaStart, a.thetaLength);
          break;
        case "TorusGeometry":
        case "TorusBufferGeometry":
          s = new pc[a.type](a.radius, a.tube, a.radialSegments, a.tubularSegments, a.arc);
          break;
        case "TorusKnotGeometry":
        case "TorusKnotBufferGeometry":
          s = new pc[a.type](a.radius, a.tube, a.tubularSegments, a.radialSegments, a.p, a.q);
          break;
        case "TubeGeometry":
        case "TubeBufferGeometry":
          s = new pc[a.type]((new vh[a.path.type]).fromJSON(a.path), a.tubularSegments, a.radius, a.radialSegments, a.closed);
          break;
        case "LatheGeometry":
        case "LatheBufferGeometry":
          s = new pc[a.type](a.points, a.segments, a.phiStart, a.phiLength);
          break;
        case "PolyhedronGeometry":
        case "PolyhedronBufferGeometry":
          s = new pc[a.type](a.vertices, a.indices, a.radius, a.details);
          break;
        case "ShapeGeometry":
        case "ShapeBufferGeometry":
          for (var l = [], c = 0, h = a.shapes.length; c < h; c++) {
            var u = t[a.shapes[c]];
            l.push(u);
          }
          s = new pc[a.type](l, a.curveSegments);
          break;
        case "ExtrudeGeometry":
        case "ExtrudeBufferGeometry":
          for (l = [], c = 0, h = a.shapes.length; c < h; c++) {
            u = t[a.shapes[c]];
            l.push(u);
          }
          var d = a.options.extrudePath;
          undefined !== d && (a.options.extrudePath = (new vh[d.type]).fromJSON(d)), s = new pc[a.type](l, a.options);
          break;
        case "BufferGeometry":
        case "InstancedBufferGeometry":
          s = i.parse(a);
          break;
        case "Geometry":
          if ("THREE" in window && "LegacyJSONLoader" in THREE) s = (new THREE.LegacyJSONLoader).parse(a, this.resourcePath).geometry; else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');
          break;
        default:
          console.warn('THREE.ObjectLoader: Unsupported geometry type "' + a.type + '"');
          continue;
      }
      s.uuid = a.uuid, undefined !== a.name && (s.name = a.name), true === s.isBufferGeometry && undefined !== a.userData && (s.userData = a.userData), n[a.uuid] = s;
    }
    return n;
  }, parseMaterials: function (e, t) {
    var n = {}, i = {};
    if (undefined !== e) {
      var r = new Ph;
      r.setTextures(t);
      for (var o = 0, s = e.length; o < s; o++) {
        var a = e[o];
        if ("MultiMaterial" === a.type) {
          for (var l = [], c = 0; c < a.materials.length; c++) {
            var h = a.materials[c];
            undefined === n[h.uuid] && (n[h.uuid] = r.parse(h)), l.push(n[h.uuid]);
          }
          i[a.uuid] = l;
        } else undefined === n[a.uuid] && (n[a.uuid] = r.parse(a)), i[a.uuid] = n[a.uuid];
      }
    }
    return i;
  }, parseAnimations: function (e) {
    for (var t = [], n = 0; n < e.length; n++) {
      var i = e[n], r = Fc.parse(i);
      undefined !== i.uuid && (r.uuid = i.uuid), t.push(r);
    }
    return t;
  }, parseImages: function (e, t) {
    var n = this, i = {};
    function r(e) {
      return n.manager.itemStart(e), o.load(e, function () {
        n.manager.itemEnd(e);
      }, undefined, function () {
        n.manager.itemError(e), n.manager.itemEnd(e);
      });
    }
    if (undefined !== e && e.length > 0) {
      var o = new Yc(new Uc(t));
      o.setCrossOrigin(this.crossOrigin);
      for (var s = 0, a = e.length; s < a; s++) {
        var l = e[s], c = l.url;
        if (Array.isArray(c)) {
          i[l.uuid] = [];
          for (var h = 0, u = c.length; h < u; h++) {
            var d = c[h], p = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(d) ? d : n.resourcePath + d;
            i[l.uuid].push(r(p));
          }
        } else {
          p = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url) ? l.url : n.resourcePath + l.url;
          i[l.uuid] = r(p);
        }
      }
    }
    return i;
  }, parseTextures: function (e, t) {
    function n(e, t) {
      return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e), t[e]);
    }
    var i = {};
    if (undefined !== e) for (var r = 0, o = e.length; r < o; r++) {
      var s, a = e[r];
      undefined === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), undefined === t[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image), (s = Array.isArray(t[a.image]) ? new wo(t[a.image]) : new bn(t[a.image])).needsUpdate = true, s.uuid = a.uuid, undefined !== a.name && (s.name = a.name), undefined !== a.mapping && (s.mapping = n(a.mapping, Uh)), undefined !== a.offset && s.offset.fromArray(a.offset), undefined !== a.repeat && s.repeat.fromArray(a.repeat), undefined !== a.center && s.center.fromArray(a.center), undefined !== a.rotation && (s.rotation = a.rotation), undefined !== a.wrap && (s.wrapS = n(a.wrap[0], Vh), s.wrapT = n(a.wrap[1], Vh)), undefined !== a.format && (s.format = a.format), undefined !== a.type && (s.type = a.type), undefined !== a.encoding && (s.encoding = a.encoding), undefined !== a.minFilter && (s.minFilter = n(a.minFilter, Gh)), undefined !== a.magFilter && (s.magFilter = n(a.magFilter, Gh)), undefined !== a.anisotropy && (s.anisotropy = a.anisotropy), undefined !== a.flipY && (s.flipY = a.flipY), undefined !== a.premultiplyAlpha && (s.premultiplyAlpha = a.premultiplyAlpha), undefined !== a.unpackAlignment && (s.unpackAlignment = a.unpackAlignment), i[a.uuid] = s;
    }
    return i;
  }, parseObject: function (e, t, n) {
    var i;
    function r(e) {
      return undefined === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e), t[e];
    }
    function o(e) {
      if (undefined !== e) {
        if (Array.isArray(e)) {
          for (var t = [], i = 0, r = e.length; i < r; i++) {
            var o = e[i];
            undefined === n[o] && console.warn("THREE.ObjectLoader: Undefined material", o), t.push(n[o]);
          }
          return t;
        }
        return undefined === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e), n[e];
      }
    }
    switch (e.type) {
      case "Scene":
        i = new Kn, undefined !== e.background && Number.isInteger(e.background) && (i.background = new Ii(e.background)), undefined !== e.fog && ("Fog" === e.fog.type ? i.fog = new aa(e.fog.color, e.fog.near, e.fog.far) : "FogExp2" === e.fog.type && (i.fog = new sa(e.fog.color, e.fog.density)));
        break;
      case "PerspectiveCamera":
        i = new Hr(e.fov, e.aspect, e.near, e.far), undefined !== e.focus && (i.focus = e.focus), undefined !== e.zoom && (i.zoom = e.zoom), undefined !== e.filmGauge && (i.filmGauge = e.filmGauge), undefined !== e.filmOffset && (i.filmOffset = e.filmOffset), undefined !== e.view && (i.view = Object.assign({}, e.view));
        break;
      case "OrthographicCamera":
        i = new Mh(e.left, e.right, e.top, e.bottom, e.near, e.far), undefined !== e.zoom && (i.zoom = e.zoom), undefined !== e.view && (i.view = Object.assign({}, e.view));
        break;
      case "AmbientLight":
        i = new Rh(e.color, e.intensity);
        break;
      case "DirectionalLight":
        i = new kh(e.color, e.intensity);
        break;
      case "PointLight":
        i = new Ah(e.color, e.intensity, e.distance, e.decay);
        break;
      case "RectAreaLight":
        i = new Lh(e.color, e.intensity, e.width, e.height);
        break;
      case "SpotLight":
        i = new qh(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
        break;
      case "HemisphereLight":
        i = new wh(e.color, e.groundColor, e.intensity);
        break;
      case "SkinnedMesh":
        console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
      case "Mesh":
        var s = (undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), a = o(e.material);
        i = s.bones && s.bones.length > 0 ? new Ma(s, a) : new Ar(s, a), undefined !== e.drawMode && i.setDrawMode(e.drawMode);
        break;
      case "LOD":
        i = new Aa;
        break;
      case "Line":
        i = new za((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material), e.mode);
        break;
      case "LineLoop":
        i = new Ga((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material));
        break;
      case "LineSegments":
        i = new Va((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material));
        break;
      case "PointCloud":
      case "Points":
        i = new Ya((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material));
        break;
      case "Sprite":
        i = new Sa(o(e.material));
        break;
      case "Group":
        i = new Ks;
        break;
      default:
        i = new Jn;
    }
    if (i.uuid = e.uuid, undefined !== e.name && (i.name = e.name), undefined !== e.matrix ? (i.matrix.fromArray(e.matrix), undefined !== e.matrixAutoUpdate && (i.matrixAutoUpdate = e.matrixAutoUpdate), i.matrixAutoUpdate && i.matrix.decompose(i.position, i.quaternion, i.scale)) : (undefined !== e.position && i.position.fromArray(e.position), undefined !== e.rotation && i.rotation.fromArray(e.rotation), undefined !== e.quaternion && i.quaternion.fromArray(e.quaternion), undefined !== e.scale && i.scale.fromArray(e.scale)), undefined !== e.castShadow && (i.castShadow = e.castShadow), undefined !== e.receiveShadow && (i.receiveShadow = e.receiveShadow), e.shadow && (undefined !== e.shadow.bias && (i.shadow.bias = e.shadow.bias), undefined !== e.shadow.radius && (i.shadow.radius = e.shadow.radius), undefined !== e.shadow.mapSize && i.shadow.mapSize.fromArray(e.shadow.mapSize), undefined !== e.shadow.camera && (i.shadow.camera = this.parseObject(e.shadow.camera))), undefined !== e.visible && (i.visible = e.visible), undefined !== e.frustumCulled && (i.frustumCulled = e.frustumCulled), undefined !== e.renderOrder && (i.renderOrder = e.renderOrder), undefined !== e.userData && (i.userData = e.userData), undefined !== e.layers && (i.layers.mask = e.layers), undefined !== e.children) for (var l = e.children, c = 0; c < l.length; c++) i.add(this.parseObject(l[c], t, n));
    if ("LOD" === e.type) for (var h = e.levels, u = 0; u < h.length; u++) {
      var d = h[u], p = i.getObjectByProperty("uuid", d.object);
      undefined !== p && i.addLevel(p, d.distance);
    }
    return i;
  }});
  var Nh, Uh = {UVMapping: he, CubeReflectionMapping: ue, CubeRefractionMapping: de, EquirectangularReflectionMapping: pe, EquirectangularRefractionMapping: me, SphericalReflectionMapping: fe, CubeUVReflectionMapping: ge, CubeUVRefractionMapping: ve}, Vh = {RepeatWrapping: ye, ClampToEdgeWrapping: _e, MirroredRepeatWrapping: xe}, Gh = {NearestFilter: be, NearestMipmapNearestFilter: we, NearestMipmapLinearFilter: Ee, LinearFilter: Te, LinearMipmapNearestFilter: Ae, LinearMipmapLinearFilter: Ce};
  function Hh(e) {
    "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), Gc.call(this, e), this.options = undefined;
  }
  function jh() {
    this.type = "ShapePath", this.color = new Ii, this.subPaths = [], this.currentPath = null;
  }
  function $h(e) {
    this.type = "Font", this.data = e;
  }
  function Wh(e, t, n, i, r) {
    var o = r.glyphs[e] || r.glyphs["?"];
    if (o) {
      var s, a, l, c, h, u, d, p, m = new jh;
      if (o.o) for (var f = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), g = 0, v = f.length; g < v;) {
        switch (f[g++]) {
          case "m":
            s = f[g++] * t + n, a = f[g++] * t + i, m.moveTo(s, a);
            break;
          case "l":
            s = f[g++] * t + n, a = f[g++] * t + i, m.lineTo(s, a);
            break;
          case "q":
            l = f[g++] * t + n, c = f[g++] * t + i, h = f[g++] * t + n, u = f[g++] * t + i, m.quadraticCurveTo(h, u, l, c);
            break;
          case "b":
            l = f[g++] * t + n, c = f[g++] * t + i, h = f[g++] * t + n, u = f[g++] * t + i, d = f[g++] * t + n, p = f[g++] * t + i, m.bezierCurveTo(h, u, d, p, l, c);
        }
      }
      return {offsetX: o.ha * t, path: m};
    }
    console.error('THREE.Font: character "' + e + '" does not exists in font family ' + r.familyName + ".");
  }
  function Xh(e) {
    Gc.call(this, e);
  }
  Hh.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Hh, setOptions: function (e) {
    return this.options = e, this;
  }, load: function (e, t, n, i) {
    undefined === e && (e = ""), undefined !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
    var r = this, o = Nc.get(e);
    if (undefined !== o) return r.manager.itemStart(e), setTimeout(function () {
      t && t(o), r.manager.itemEnd(e);
    }, 0), o;
    fetch(e).then(function (e) {
      return e.blob();
    }).then(function (e) {
      return undefined === r.options ? createImageBitmap(e) : createImageBitmap(e, r.options);
    }).then(function (n) {
      Nc.add(e, n), t && t(n), r.manager.itemEnd(e);
    }).catch(function (t) {
      i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
    }), r.manager.itemStart(e);
  }}), Object.assign(jh.prototype, {moveTo: function (e, t) {
    this.currentPath = new _h, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t);
  }, lineTo: function (e, t) {
    this.currentPath.lineTo(e, t);
  }, quadraticCurveTo: function (e, t, n, i) {
    this.currentPath.quadraticCurveTo(e, t, n, i);
  }, bezierCurveTo: function (e, t, n, i, r, o) {
    this.currentPath.bezierCurveTo(e, t, n, i, r, o);
  }, splineThru: function (e) {
    this.currentPath.splineThru(e);
  }, toShapes: function (e, t) {
    function n(e) {
      for (var t = [], n = 0, i = e.length; n < i; n++) {
        var r = e[n], o = new xh;
        o.curves = r.curves, t.push(o);
      }
      return t;
    }
    function i(e, t) {
      for (var n = t.length, i = false, r = n - 1, o = 0; o < n; r = o++) {
        var s = t[r], a = t[o], l = a.x - s.x, c = a.y - s.y;
        if (Math.abs(c) > Number.EPSILON) {
          if (c < 0 && (s = t[o], l = -l, a = t[r], c = -c), e.y < s.y || e.y > a.y) continue;
          if (e.y === s.y) {
            if (e.x === s.x) return true;
          } else {
            var h = c * (e.x - s.x) - l * (e.y - s.y);
            if (0 === h) return true;
            if (h < 0) continue;
            i = !i;
          }
        } else {
          if (e.y !== s.y) continue;
          if (a.x <= e.x && e.x <= s.x || s.x <= e.x && e.x <= a.x) return true;
        }
      }
      return i;
    }
    var r = Vl.isClockWise, o = this.subPaths;
    if (0 === o.length) return [];
    if (true === t) return n(o);
    var s, a, l, c = [];
    if (1 === o.length) return a = o[0], (l = new xh).curves = a.curves, c.push(l), c;
    var h = !r(o[0].getPoints());
    h = e ? !h : h;
    var u, d, p = [], m = [], f = [], g = 0;
    m[g] = undefined, f[g] = [];
    for (var v = 0, y = o.length; v < y; v++) s = r(u = (a = o[v]).getPoints()), (s = e ? !s : s) ? (!h && m[g] && g++, m[g] = {s: new xh, p: u}, m[g].s.curves = a.curves, h && g++, f[g] = []) : f[g].push({h: a, p: u[0]});
    if (!m[0]) return n(o);
    if (m.length > 1) {
      for (var _ = false, x = [], b = 0, w = m.length; b < w; b++) p[b] = [];
      for (b = 0, w = m.length; b < w; b++) for (var S = f[b], E = 0; E < S.length; E++) {
        for (var q = S[E], T = true, A = 0; A < m.length; A++) i(q.p, m[A].p) && (b !== A && x.push({froms: b, tos: A, hole: E}), T ? (T = false, p[A].push(q)) : _ = true);
        T && p[b].push(q);
      }
      x.length > 0 && (_ || (f = p));
    }
    v = 0;
    for (var M = m.length; v < M; v++) {
      l = m[v].s, c.push(l);
      for (var C = 0, k = (d = f[v]).length; C < k; C++) l.holes.push(d[C].h);
    }
    return c;
  }}), Object.assign($h.prototype, {isFont: true, generateShapes: function (e, t) {
    undefined === t && (t = 100);
    for (var n = [], i = function (e, t, n) {
      for (var i = Array.from ? Array.from(e) : String(e).split(""), r = t / n.resolution, o = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * r, s = [], a = 0, l = 0, c = 0; c < i.length; c++) {
        var h = i[c];
        if ("\n" === h) a = 0, l -= o; else {
          var u = Wh(h, r, a, l, n);
          a += u.offsetX, s.push(u.path);
        }
      }
      return s;
    }(e, t, this.data), r = 0, o = i.length; r < o; r++) Array.prototype.push.apply(n, i[r].toShapes());
    return n;
  }}), Xh.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Xh, load: function (e, t, n, i) {
    var r = this, o = new jc(this.manager);
    o.setPath(this.path), o.load(e, function (e) {
      var n;
      try {
        n = JSON.parse(e);
      } catch (t) {
        console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), n = JSON.parse(e.substring(65, e.length - 2));
      }
      var i = r.parse(n);
      t && t(i);
    }, n, i);
  }, parse: function (e) {
    return new $h(e);
  }});
  var Yh = {getContext: function () {
    return undefined === Nh && (Nh = new (window.AudioContext || window.webkitAudioContext)), Nh;
  }, setContext: function (e) {
    Nh = e;
  }};
  function Jh(e) {
    Gc.call(this, e);
  }
  function Kh() {
    this.coefficients = [];
    for (var e = 0; e < 9; e++) this.coefficients.push(new fn);
  }
  function Zh(e, t) {
    bh.call(this, undefined, t), this.sh = undefined !== e ? e : new Kh;
  }
  function Qh(e, t, n) {
    Zh.call(this, undefined, n);
    var i = (new Ii).set(e), r = (new Ii).set(t), o = new fn(i.r, i.g, i.b), s = new fn(r.r, r.g, r.b), a = Math.sqrt(Math.PI), l = a * Math.sqrt(0.75);
    this.sh.coefficients[0].copy(o).add(s).multiplyScalar(a), this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(l);
  }
  function eu(e, t) {
    Zh.call(this, undefined, t);
    var n = (new Ii).set(e);
    this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));
  }
  Jh.prototype = Object.assign(Object.create(Gc.prototype), {constructor: Jh, load: function (e, t, n, i) {
    var r = new jc(this.manager);
    r.setResponseType("arraybuffer"), r.setPath(this.path), r.load(e, function (e) {
      var n = e.slice(0);
      Yh.getContext().decodeAudioData(n, function (e) {
        t(e);
      });
    }, n, i);
  }}), Object.assign(Kh.prototype, {isSphericalHarmonics3: true, set: function (e) {
    for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
    return this;
  }, zero: function () {
    for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
    return this;
  }, getAt: function (e, t) {
    var n = e.x, i = e.y, r = e.z, o = this.coefficients;
    return t.copy(o[0]).multiplyScalar(0.282095), t.addScale(o[1], 0.488603 * i), t.addScale(o[2], 0.488603 * r), t.addScale(o[3], 0.488603 * n), t.addScale(o[4], n * i * 1.092548), t.addScale(o[5], i * r * 1.092548), t.addScale(o[6], 0.315392 * (3 * r * r - 1)), t.addScale(o[7], n * r * 1.092548), t.addScale(o[8], 0.546274 * (n * n - i * i)), t;
  }, getIrradianceAt: function (e, t) {
    var n = e.x, i = e.y, r = e.z, o = this.coefficients;
    return t.copy(o[0]).multiplyScalar(0.886227), t.addScale(o[1], 1.023328 * i), t.addScale(o[2], 1.023328 * r), t.addScale(o[3], 1.023328 * n), t.addScale(o[4], 0.858086 * n * i), t.addScale(o[5], 0.858086 * i * r), t.addScale(o[6], 0.743125 * r * r - 0.247708), t.addScale(o[7], 0.858086 * n * r), t.addScale(o[8], 0.429043 * (n * n - i * i)), t;
  }, add: function (e) {
    for (var t = 0; t < 9; t++) this.coefficients[t].add(e.coefficients[t]);
    return this;
  }, scale: function (e) {
    for (var t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
    return this;
  }, lerp: function (e, t) {
    for (var n = 0; n < 9; n++) this.coefficients[n].lerp(e.coefficients[n], t);
    return this;
  }, equals: function (e) {
    for (var t = 0; t < 9; t++) if (!this.coefficients[t].equals(e.coefficients[t])) return false;
    return true;
  }, copy: function (e) {
    return this.set(e.coefficients);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, fromArray: function (e, t) {
    undefined === t && (t = 0);
    for (var n = this.coefficients, i = 0; i < 9; i++) n[i].fromArray(e, t + 3 * i);
    return this;
  }, toArray: function (e, t) {
    undefined === e && (e = []), undefined === t && (t = 0);
    for (var n = this.coefficients, i = 0; i < 9; i++) n[i].toArray(e, t + 3 * i);
    return e;
  }}), Object.assign(Kh, {getBasisAt: function (e, t) {
    var n = e.x, i = e.y, r = e.z;
    t[0] = 0.282095, t[1] = 0.488603 * i, t[2] = 0.488603 * r, t[3] = 0.488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = 0.315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = 0.546274 * (n * n - i * i);
  }}), Zh.prototype = Object.assign(Object.create(bh.prototype), {constructor: Zh, isLightProbe: true, copy: function (e) {
    return bh.prototype.copy.call(this, e), this.sh.copy(e.sh), this.intensity = e.intensity, this;
  }, toJSON: function (e) {
    return bh.prototype.toJSON.call(this, e);
  }}), Qh.prototype = Object.assign(Object.create(Zh.prototype), {constructor: Qh, isHemisphereLightProbe: true, copy: function (e) {
    return Zh.prototype.copy.call(this, e), this;
  }, toJSON: function (e) {
    return Zh.prototype.toJSON.call(this, e);
  }}), eu.prototype = Object.assign(Object.create(Zh.prototype), {constructor: eu, isAmbientLightProbe: true, copy: function (e) {
    return Zh.prototype.copy.call(this, e), this;
  }, toJSON: function (e) {
    return Zh.prototype.toJSON.call(this, e);
  }});
  var tu = new Ln, nu = new Ln;
  function iu() {
    this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new Hr, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = false, this.cameraR = new Hr, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = false, this._cache = {focus: null, fov: null, aspect: null, near: null, far: null, zoom: null, eyeSep: null};
  }
  function ru(e) {
    this.autoStart = undefined === e || e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = false;
  }
  Object.assign(iu.prototype, {update: function (e) {
    var t = this._cache;
    if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
      t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep;
      var n, i, r = e.projectionMatrix.clone(), o = t.eyeSep / 2, s = o * t.near / t.focus, a = t.near * Math.tan(hn.DEG2RAD * t.fov * 0.5) / t.zoom;
      nu.elements[12] = -o, tu.elements[12] = o, n = -a * t.aspect + s, i = a * t.aspect + s, r.elements[0] = 2 * t.near / (i - n), r.elements[8] = (i + n) / (i - n), this.cameraL.projectionMatrix.copy(r), n = -a * t.aspect - s, i = a * t.aspect - s, r.elements[0] = 2 * t.near / (i - n), r.elements[8] = (i + n) / (i - n), this.cameraR.projectionMatrix.copy(r);
    }
    this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(nu), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(tu);
  }}), Object.assign(ru.prototype, {start: function () {
    this.startTime = ("undefined" == typeof performance ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = true;
  }, stop: function () {
    this.getElapsedTime(), this.running = false, this.autoStart = false;
  }, getElapsedTime: function () {
    return this.getDelta(), this.elapsedTime;
  }, getDelta: function () {
    var e = 0;
    if (this.autoStart && !this.running) return this.start(), 0;
    if (this.running) {
      var t = ("undefined" == typeof performance ? Date : performance).now();
      e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
    }
    return e;
  }});
  var ou = new fn, su = new dn, au = new fn, lu = new fn;
  function cu() {
    Jn.call(this), this.type = "AudioListener", this.context = Yh.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new ru;
  }
  function hu(e) {
    Jn.call(this), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = false, this.buffer = null, this.detune = 0, this.loop = false, this.startTime = 0, this.offset = 0, this.duration = undefined, this.playbackRate = 1, this.isPlaying = false, this.hasPlaybackControl = true, this.sourceType = "empty", this.filters = [];
  }
  cu.prototype = Object.assign(Object.create(Jn.prototype), {constructor: cu, getInput: function () {
    return this.gain;
  }, removeFilter: function () {
    return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
  }, getFilter: function () {
    return this.filter;
  }, setFilter: function (e) {
    return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
  }, getMasterVolume: function () {
    return this.gain.gain.value;
  }, setMasterVolume: function (e) {
    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this;
  }, updateMatrixWorld: function (e) {
    Jn.prototype.updateMatrixWorld.call(this, e);
    var t = this.context.listener, n = this.up;
    if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(ou, su, au), lu.set(0, 0, -1).applyQuaternion(su), t.positionX) {
      var i = this.context.currentTime + this.timeDelta;
      t.positionX.linearRampToValueAtTime(ou.x, i), t.positionY.linearRampToValueAtTime(ou.y, i), t.positionZ.linearRampToValueAtTime(ou.z, i), t.forwardX.linearRampToValueAtTime(lu.x, i), t.forwardY.linearRampToValueAtTime(lu.y, i), t.forwardZ.linearRampToValueAtTime(lu.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
    } else t.setPosition(ou.x, ou.y, ou.z), t.setOrientation(lu.x, lu.y, lu.z, n.x, n.y, n.z);
  }}), hu.prototype = Object.assign(Object.create(Jn.prototype), {constructor: hu, getOutput: function () {
    return this.gain;
  }, setNodeSource: function (e) {
    return this.hasPlaybackControl = false, this.sourceType = "audioNode", this.source = e, this.connect(), this;
  }, setMediaElementSource: function (e) {
    return this.hasPlaybackControl = false, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
  }, setBuffer: function (e) {
    return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
  }, play: function () {
    if (true !== this.isPlaying) {
      if (false !== this.hasPlaybackControl) {
        var e = this.context.createBufferSource();
        return e.buffer = this.buffer, e.loop = this.loop, e.onended = this.onEnded.bind(this), this.startTime = this.context.currentTime, e.start(this.startTime, this.offset, this.duration), this.isPlaying = true, this.source = e, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
      }
      console.warn("THREE.Audio: this Audio has no playback control.");
    } else console.warn("THREE.Audio: Audio is already playing.");
  }, pause: function () {
    if (false !== this.hasPlaybackControl) return true === this.isPlaying && (this.source.stop(), this.source.onended = null, this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = false), this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, stop: function () {
    if (false !== this.hasPlaybackControl) return this.source.stop(), this.source.onended = null, this.offset = 0, this.isPlaying = false, this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, connect: function () {
    if (this.filters.length > 0) {
      this.source.connect(this.filters[0]);
      for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].connect(this.filters[e]);
      this.filters[this.filters.length - 1].connect(this.getOutput());
    } else this.source.connect(this.getOutput());
    return this;
  }, disconnect: function () {
    if (this.filters.length > 0) {
      this.source.disconnect(this.filters[0]);
      for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].disconnect(this.filters[e]);
      this.filters[this.filters.length - 1].disconnect(this.getOutput());
    } else this.source.disconnect(this.getOutput());
    return this;
  }, getFilters: function () {
    return this.filters;
  }, setFilters: function (e) {
    return e || (e = []), true === this.isPlaying ? (this.disconnect(), this.filters = e, this.connect()) : this.filters = e, this;
  }, setDetune: function (e) {
    if (this.detune = e, undefined !== this.source.detune) return true === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01), this;
  }, getDetune: function () {
    return this.detune;
  }, getFilter: function () {
    return this.getFilters()[0];
  }, setFilter: function (e) {
    return this.setFilters(e ? [e] : []);
  }, setPlaybackRate: function (e) {
    if (false !== this.hasPlaybackControl) return this.playbackRate = e, true === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01), this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, getPlaybackRate: function () {
    return this.playbackRate;
  }, onEnded: function () {
    this.isPlaying = false;
  }, getLoop: function () {
    return false === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), false) : this.loop;
  }, setLoop: function (e) {
    if (false !== this.hasPlaybackControl) return this.loop = e, true === this.isPlaying && (this.source.loop = this.loop), this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, getVolume: function () {
    return this.gain.gain.value;
  }, setVolume: function (e) {
    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this;
  }});
  var uu = new fn, du = new dn, pu = new fn, mu = new fn;
  function fu(e) {
    hu.call(this, e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
  }
  function gu(e, t) {
    this.analyser = e.context.createAnalyser(), this.analyser.fftSize = undefined !== t ? t : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
  }
  function vu(e, t, n) {
    this.binding = e, this.valueSize = n;
    var i, r = Float64Array;
    switch (t) {
      case "quaternion":
        i = this._slerp;
        break;
      case "string":
      case "bool":
        r = Array, i = this._select;
        break;
      default:
        i = this._lerp;
    }
    this.buffer = new r(4 * n), this._mixBufferRegion = i, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;
  }
  fu.prototype = Object.assign(Object.create(hu.prototype), {constructor: fu, getOutput: function () {
    return this.panner;
  }, getRefDistance: function () {
    return this.panner.refDistance;
  }, setRefDistance: function (e) {
    return this.panner.refDistance = e, this;
  }, getRolloffFactor: function () {
    return this.panner.rolloffFactor;
  }, setRolloffFactor: function (e) {
    return this.panner.rolloffFactor = e, this;
  }, getDistanceModel: function () {
    return this.panner.distanceModel;
  }, setDistanceModel: function (e) {
    return this.panner.distanceModel = e, this;
  }, getMaxDistance: function () {
    return this.panner.maxDistance;
  }, setMaxDistance: function (e) {
    return this.panner.maxDistance = e, this;
  }, setDirectionalCone: function (e, t, n) {
    return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
  }, updateMatrixWorld: function (e) {
    if (Jn.prototype.updateMatrixWorld.call(this, e), true !== this.hasPlaybackControl || false !== this.isPlaying) {
      this.matrixWorld.decompose(uu, du, pu), mu.set(0, 0, 1).applyQuaternion(du);
      var t = this.panner;
      if (t.positionX) {
        var n = this.context.currentTime + this.listener.timeDelta;
        t.positionX.linearRampToValueAtTime(uu.x, n), t.positionY.linearRampToValueAtTime(uu.y, n), t.positionZ.linearRampToValueAtTime(uu.z, n), t.orientationX.linearRampToValueAtTime(mu.x, n), t.orientationY.linearRampToValueAtTime(mu.y, n), t.orientationZ.linearRampToValueAtTime(mu.z, n);
      } else t.setPosition(uu.x, uu.y, uu.z), t.setOrientation(mu.x, mu.y, mu.z);
    }
  }}), Object.assign(gu.prototype, {getFrequencyData: function () {
    return this.analyser.getByteFrequencyData(this.data), this.data;
  }, getAverageFrequency: function () {
    for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++) e += t[n];
    return e / t.length;
  }}), Object.assign(vu.prototype, {accumulate: function (e, t) {
    var n = this.buffer, i = this.valueSize, r = e * i + i, o = this.cumulativeWeight;
    if (0 === o) {
      for (var s = 0; s !== i; ++s) n[r + s] = n[s];
      o = t;
    } else {
      var a = t / (o += t);
      this._mixBufferRegion(n, r, 0, a, i);
    }
    this.cumulativeWeight = o;
  }, apply: function (e) {
    var t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, o = this.binding;
    if (this.cumulativeWeight = 0, r < 1) {
      var s = 3 * t;
      this._mixBufferRegion(n, i, s, 1 - r, t);
    }
    for (var a = t, l = t + t; a !== l; ++a) if (n[a] !== n[a + t]) {
      o.setValue(n, i);
      break;
    }
  }, saveOriginalState: function () {
    var e = this.binding, t = this.buffer, n = this.valueSize, i = 3 * n;
    e.getValue(t, i);
    for (var r = n, o = i; r !== o; ++r) t[r] = t[i + r % n];
    this.cumulativeWeight = 0;
  }, restoreOriginalState: function () {
    var e = 3 * this.valueSize;
    this.binding.setValue(this.buffer, e);
  }, _select: function (e, t, n, i, r) {
    if (i >= 0.5) for (var o = 0; o !== r; ++o) e[t + o] = e[n + o];
  }, _slerp: function (e, t, n, i) {
    dn.slerpFlat(e, t, e, t, e, n, i);
  }, _lerp: function (e, t, n, i, r) {
    for (var o = 1 - i, s = 0; s !== r; ++s) {
      var a = t + s;
      e[a] = e[a] * o + e[n + s] * i;
    }
  }});
  var yu = new RegExp("[\\[\\]\\.:\\/]", "g"), _u = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]", xu = /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]"), bu = /(WCOD+)?/.source.replace("WCOD", _u), wu = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", "[^\\[\\]\\.:\\/]"), Su = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]"), Eu = new RegExp("^" + xu + bu + wu + Su + "$"), qu = ["material", "materials", "bones"];
  function Tu(e, t, n) {
    var i = n || Au.parseTrackName(t);
    this._targetGroup = e, this._bindings = e.subscribe_(t, i);
  }
  function Au(e, t, n) {
    this.path = t, this.parsedPath = n || Au.parseTrackName(t), this.node = Au.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e;
  }
  function Mu() {
    this.uuid = hn.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
    var e = {};
    this._indicesByUUID = e;
    for (var t = 0, n = arguments.length; t !== n; ++t) e[arguments[t].uuid] = t;
    this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
    var i = this;
    this.stats = {objects: {get total() {
      return i._objects.length;
    }, get inUse() {
      return this.total - i.nCachedObjects_;
    }}, get bindingsPerObject() {
      return i._bindings.length;
    }};
  }
  function Cu(e, t, n) {
    this._mixer = e, this._clip = t, this._localRoot = n || null;
    for (var i = t.tracks, r = i.length, o = new Array(r), s = {endingStart: At, endingEnd: At}, a = 0; a !== r; ++a) {
      var l = i[a].createInterpolant(null);
      o[a] = l, l.settings = s;
    }
    this._interpolantSettings = s, this._interpolants = o, this._propertyBindings = new Array(r), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = wt, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = Infinity, this.paused = false, this.enabled = true, this.clampWhenFinished = false, this.zeroSlopeAtStart = true, this.zeroSlopeAtEnd = true;
  }
  function ku(e) {
    this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
  }
  function Ru(e) {
    "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e;
  }
  function Lu(e, t, n) {
    la.call(this, e, t), this.meshPerAttribute = n || 1;
  }
  function Pu(e, t, n, i) {
    this.ray = new bi(e, t), this.near = n || 0, this.far = i || Infinity, this.camera = null, this.params = {Mesh: {}, Line: {}, LOD: {}, Points: {threshold: 1}, Sprite: {}}, Object.defineProperties(this.params, {PointCloud: {get: function () {
      return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
    }}});
  }
  function Du(e, t) {
    return e.distance - t.distance;
  }
  function Ou(e, t, n, i) {
    if (false !== e.visible && (e.raycast(t, n), true === i)) for (var r = e.children, o = 0, s = r.length; o < s; o++) Ou(r[o], t, n, true);
  }
  function Iu(e, t, n) {
    return this.radius = undefined !== e ? e : 1, this.phi = undefined !== t ? t : 0, this.theta = undefined !== n ? n : 0, this;
  }
  function Bu(e, t, n) {
    return this.radius = undefined !== e ? e : 1, this.theta = undefined !== t ? t : 0, this.y = undefined !== n ? n : 0, this;
  }
  Object.assign(Tu.prototype, {getValue: function (e, t) {
    this.bind();
    var n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
    undefined !== i && i.getValue(e, t);
  }, setValue: function (e, t) {
    for (var n = this._bindings, i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i) n[i].setValue(e, t);
  }, bind: function () {
    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].bind();
  }, unbind: function () {
    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].unbind();
  }}), Object.assign(Au, {Composite: Tu, create: function (e, t, n) {
    return e && e.isAnimationObjectGroup ? new Au.Composite(e, t, n) : new Au(e, t, n);
  }, sanitizeNodeName: function (e) {
    return e.replace(/\s/g, "_").replace(yu, "");
  }, parseTrackName: function (e) {
    var t = Eu.exec(e);
    if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
    var n = {nodeName: t[2], objectName: t[3], objectIndex: t[4], propertyName: t[5], propertyIndex: t[6]}, i = n.nodeName && n.nodeName.lastIndexOf(".");
    if (undefined !== i && -1 !== i) {
      var r = n.nodeName.substring(i + 1);
      -1 !== qu.indexOf(r) && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
    }
    if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
    return n;
  }, findNode: function (e, t) {
    if (!t || "" === t || "root" === t || "." === t || -1 === t || t === e.name || t === e.uuid) return e;
    if (e.skeleton) {
      var n = e.skeleton.getBoneByName(t);
      if (undefined !== n) return n;
    }
    if (e.children) {
      var i = function (e) {
        for (var n = 0; n < e.length; n++) {
          var r = e[n];
          if (r.name === t || r.uuid === t) return r;
          var o = i(r.children);
          if (o) return o;
        }
        return null;
      }, r = i(e.children);
      if (r) return r;
    }
    return null;
  }}), Object.assign(Au.prototype, {_getValue_unavailable: function () {}, _setValue_unavailable: function () {}, BindingType: {Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3}, Versioning: {None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2}, GetterByBindingType: [function (e, t) {
    e[t] = this.node[this.propertyName];
  }, function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) e[t++] = n[i];
  }, function (e, t) {
    e[t] = this.resolvedProperty[this.propertyIndex];
  }, function (e, t) {
    this.resolvedProperty.toArray(e, t);
  }], SetterByBindingTypeAndVersioning: [[function (e, t) {
    this.targetObject[this.propertyName] = e[t];
  }, function (e, t) {
    this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = true;
  }, function (e, t) {
    this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = true;
  }], [function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) n[i] = e[t++];
  }, function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) n[i] = e[t++];
    this.targetObject.needsUpdate = true;
  }, function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) n[i] = e[t++];
    this.targetObject.matrixWorldNeedsUpdate = true;
  }], [function (e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t];
  }, function (e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = true;
  }, function (e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = true;
  }], [function (e, t) {
    this.resolvedProperty.fromArray(e, t);
  }, function (e, t) {
    this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = true;
  }, function (e, t) {
    this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = true;
  }]], getValue: function (e, t) {
    this.bind(), this.getValue(e, t);
  }, setValue: function (e, t) {
    this.bind(), this.setValue(e, t);
  }, bind: function () {
    var e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
    if (e || (e = Au.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, e) {
      if (n) {
        var o = t.objectIndex;
        switch (n) {
          case "materials":
            if (!e.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
            if (!e.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
            e = e.material.materials;
            break;
          case "bones":
            if (!e.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
            e = e.skeleton.bones;
            for (var s = 0; s < e.length; s++) if (e[s].name === o) {
              o = s;
              break;
            }
            break;
          default:
            if (undefined === e[n]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
            e = e[n];
        }
        if (undefined !== o) {
          if (undefined === e[o]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
          e = e[o];
        }
      }
      var a = e[i];
      if (undefined !== a) {
        var l = this.Versioning.None;
        this.targetObject = e, undefined !== e.needsUpdate ? l = this.Versioning.NeedsUpdate : undefined !== e.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate);
        var c = this.BindingType.Direct;
        if (undefined !== r) {
          if ("morphTargetInfluences" === i) {
            if (!e.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
            if (e.geometry.isBufferGeometry) {
              if (!e.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
              for (s = 0; s < this.node.geometry.morphAttributes.position.length; s++) if (e.geometry.morphAttributes.position[s].name === r) {
                r = s;
                break;
              }
            } else {
              if (!e.geometry.morphTargets) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
              for (s = 0; s < this.node.geometry.morphTargets.length; s++) if (e.geometry.morphTargets[s].name === r) {
                r = s;
                break;
              }
            }
          }
          c = this.BindingType.ArrayElement, this.resolvedProperty = a, this.propertyIndex = r;
        } else undefined !== a.fromArray && undefined !== a.toArray ? (c = this.BindingType.HasFromToArray, this.resolvedProperty = a) : Array.isArray(a) ? (c = this.BindingType.EntireArray, this.resolvedProperty = a) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[c], this.setValue = this.SetterByBindingTypeAndVersioning[c][l];
      } else {
        var h = t.nodeName;
        console.error("THREE.PropertyBinding: Trying to update property for track: " + h + "." + i + " but it wasn't found.", e);
      }
    } else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
  }, unbind: function () {
    this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
  }}), Object.assign(Au.prototype, {_getValue_unbound: Au.prototype.getValue, _setValue_unbound: Au.prototype.setValue}), Object.assign(Mu.prototype, {isAnimationObjectGroup: true, add: function () {
    for (var e = this._objects, t = e.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._paths, o = this._parsedPaths, s = this._bindings, a = s.length, l = undefined, c = 0, h = arguments.length; c !== h; ++c) {
      var u = arguments[c], d = u.uuid, p = i[d];
      if (undefined === p) {
        p = t++, i[d] = p, e.push(u);
        for (var m = 0, f = a; m !== f; ++m) s[m].push(new Au(u, r[m], o[m]));
      } else if (p < n) {
        l = e[p];
        var g = --n, v = e[g];
        i[v.uuid] = p, e[p] = v, i[d] = g, e[g] = u;
        for (m = 0, f = a; m !== f; ++m) {
          var y = s[m], _ = y[g], x = y[p];
          y[p] = _, undefined === x && (x = new Au(u, r[m], o[m])), y[g] = x;
        }
      } else e[p] !== l && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
    }
    this.nCachedObjects_ = n;
  }, remove: function () {
    for (var e = this._objects, t = this.nCachedObjects_, n = this._indicesByUUID, i = this._bindings, r = i.length, o = 0, s = arguments.length; o !== s; ++o) {
      var a = arguments[o], l = a.uuid, c = n[l];
      if (undefined !== c && c >= t) {
        var h = t++, u = e[h];
        n[u.uuid] = c, e[c] = u, n[l] = h, e[h] = a;
        for (var d = 0, p = r; d !== p; ++d) {
          var m = i[d], f = m[h], g = m[c];
          m[c] = f, m[h] = g;
        }
      }
    }
    this.nCachedObjects_ = t;
  }, uncache: function () {
    for (var e = this._objects, t = e.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._bindings, o = r.length, s = 0, a = arguments.length; s !== a; ++s) {
      var l = arguments[s], c = l.uuid, h = i[c];
      if (undefined !== h) if (delete i[c], h < n) {
        var u = --n, d = e[u], p = e[y = --t];
        i[d.uuid] = h, e[h] = d, i[p.uuid] = u, e[u] = p, e.pop();
        for (var m = 0, f = o; m !== f; ++m) {
          var g = (_ = r[m])[u], v = _[y];
          _[h] = g, _[u] = v, _.pop();
        }
      } else {
        var y;
        i[(p = e[y = --t]).uuid] = h, e[h] = p, e.pop();
        for (m = 0, f = o; m !== f; ++m) {
          var _;
          (_ = r[m])[h] = _[y], _.pop();
        }
      }
    }
    this.nCachedObjects_ = n;
  }, subscribe_: function (e, t) {
    var n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
    if (undefined !== i) return r[i];
    var o = this._paths, s = this._parsedPaths, a = this._objects, l = a.length, c = this.nCachedObjects_, h = new Array(l);
    i = r.length, n[e] = i, o.push(e), s.push(t), r.push(h);
    for (var u = c, d = a.length; u !== d; ++u) {
      var p = a[u];
      h[u] = new Au(p, e, t);
    }
    return h;
  }, unsubscribe_: function (e) {
    var t = this._bindingsIndicesByPath, n = t[e];
    if (undefined !== n) {
      var i = this._paths, r = this._parsedPaths, o = this._bindings, s = o.length - 1, a = o[s];
      t[e[s]] = n, o[n] = a, o.pop(), r[n] = r[s], r.pop(), i[n] = i[s], i.pop();
    }
  }}), Object.assign(Cu.prototype, {play: function () {
    return this._mixer._activateAction(this), this;
  }, stop: function () {
    return this._mixer._deactivateAction(this), this.reset();
  }, reset: function () {
    return this.paused = false, this.enabled = true, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
  }, isRunning: function () {
    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this);
  }, isScheduled: function () {
    return this._mixer._isActiveAction(this);
  }, startAt: function (e) {
    return this._startTime = e, this;
  }, setLoop: function (e, t) {
    return this.loop = e, this.repetitions = t, this;
  }, setEffectiveWeight: function (e) {
    return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
  }, getEffectiveWeight: function () {
    return this._effectiveWeight;
  }, fadeIn: function (e) {
    return this._scheduleFading(e, 0, 1);
  }, fadeOut: function (e) {
    return this._scheduleFading(e, 1, 0);
  }, crossFadeFrom: function (e, t, n) {
    if (e.fadeOut(t), this.fadeIn(t), n) {
      var i = this._clip.duration, r = e._clip.duration, o = r / i, s = i / r;
      e.warp(1, o, t), this.warp(s, 1, t);
    }
    return this;
  }, crossFadeTo: function (e, t, n) {
    return e.crossFadeFrom(this, t, n);
  }, stopFading: function () {
    var e = this._weightInterpolant;
    return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
  }, setEffectiveTimeScale: function (e) {
    return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
  }, getEffectiveTimeScale: function () {
    return this._effectiveTimeScale;
  }, setDuration: function (e) {
    return this.timeScale = this._clip.duration / e, this.stopWarping();
  }, syncWith: function (e) {
    return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
  }, halt: function (e) {
    return this.warp(this._effectiveTimeScale, 0, e);
  }, warp: function (e, t, n) {
    var i = this._mixer, r = i.time, o = this._timeScaleInterpolant, s = this.timeScale;
    null === o && (o = i._lendControlInterpolant(), this._timeScaleInterpolant = o);
    var a = o.parameterPositions, l = o.sampleValues;
    return a[0] = r, a[1] = r + n, l[0] = e / s, l[1] = t / s, this;
  }, stopWarping: function () {
    var e = this._timeScaleInterpolant;
    return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
  }, getMixer: function () {
    return this._mixer;
  }, getClip: function () {
    return this._clip;
  }, getRoot: function () {
    return this._localRoot || this._mixer._root;
  }, _update: function (e, t, n, i) {
    if (this.enabled) {
      var r = this._startTime;
      if (null !== r) {
        var o = (e - r) * n;
        if (o < 0 || 0 === n) return;
        this._startTime = null, t = n * o;
      }
      t *= this._updateTimeScale(e);
      var s = this._updateTime(t), a = this._updateWeight(e);
      if (a > 0) for (var l = this._interpolants, c = this._propertyBindings, h = 0, u = l.length; h !== u; ++h) l[h].evaluate(s), c[h].accumulate(i, a);
    } else this._updateWeight(e);
  }, _updateWeight: function (e) {
    var t = 0;
    if (this.enabled) {
      t = this.weight;
      var n = this._weightInterpolant;
      if (null !== n) {
        var i = n.evaluate(e)[0];
        t *= i, e > n.parameterPositions[1] && (this.stopFading(), 0 === i && (this.enabled = false));
      }
    }
    return this._effectiveWeight = t, t;
  }, _updateTimeScale: function (e) {
    var t = 0;
    if (!this.paused) {
      t = this.timeScale;
      var n = this._timeScaleInterpolant;
      if (null !== n) t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = true : this.timeScale = t);
    }
    return this._effectiveTimeScale = t, t;
  }, _updateTime: function (e) {
    var t = this.time + e, n = this._clip.duration, i = this.loop, r = this._loopCount, o = i === St;
    if (0 === e) return -1 === r ? t : o && 1 == (1 & r) ? n - t : t;
    if (i === bt) {
      -1 === r && (this._loopCount = 0, this._setEndings(true, true, false));
      e: {
        if (t >= n) t = n; else {
          if (!(t < 0)) {
            this.time = t;
            break e;
          }
          t = 0;
        }
        this.clampWhenFinished ? this.paused = true : this.enabled = false, this.time = t, this._mixer.dispatchEvent({type: "finished", action: this, direction: e < 0 ? -1 : 1});
      }
    } else {
      if (-1 === r && (e >= 0 ? (r = 0, this._setEndings(true, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, true, o)), t >= n || t < 0) {
        var s = Math.floor(t / n);
        t -= n * s, r += Math.abs(s);
        var a = this.repetitions - r;
        if (a <= 0) this.clampWhenFinished ? this.paused = true : this.enabled = false, t = e > 0 ? n : 0, this.time = t, this._mixer.dispatchEvent({type: "finished", action: this, direction: e > 0 ? 1 : -1}); else {
          if (1 === a) {
            var l = e < 0;
            this._setEndings(l, !l, o);
          } else this._setEndings(false, false, o);
          this._loopCount = r, this.time = t, this._mixer.dispatchEvent({type: "loop", action: this, loopDelta: s});
        }
      } else this.time = t;
      if (o && 1 == (1 & r)) return n - t;
    }
    return t;
  }, _setEndings: function (e, t, n) {
    var i = this._interpolantSettings;
    n ? (i.endingStart = Mt, i.endingEnd = Mt) : (i.endingStart = e ? this.zeroSlopeAtStart ? Mt : At : Ct, i.endingEnd = t ? this.zeroSlopeAtEnd ? Mt : At : Ct);
  }, _scheduleFading: function (e, t, n) {
    var i = this._mixer, r = i.time, o = this._weightInterpolant;
    null === o && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
    var s = o.parameterPositions, a = o.sampleValues;
    return s[0] = r, a[0] = t, s[1] = r + e, a[1] = n, this;
  }}), ku.prototype = Object.assign(Object.create(i.prototype), {constructor: ku, _bindAction: function (e, t) {
    var n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, o = e._propertyBindings, s = e._interpolants, a = n.uuid, l = this._bindingsByRootAndName, c = l[a];
    undefined === c && (c = {}, l[a] = c);
    for (var h = 0; h !== r; ++h) {
      var u = i[h], d = u.name, p = c[d];
      if (undefined !== p) o[h] = p; else {
        if (undefined !== (p = o[h])) {
          null === p._cacheIndex && (++p.referenceCount, this._addInactiveBinding(p, a, d));
          continue;
        }
        var m = t && t._propertyBindings[h].binding.parsedPath;
        ++(p = new vu(Au.create(n, d, m), u.ValueTypeName, u.getValueSize())).referenceCount, this._addInactiveBinding(p, a, d), o[h] = p;
      }
      s[h].resultBuffer = p.buffer;
    }
  }, _activateAction: function (e) {
    if (!this._isActiveAction(e)) {
      if (null === e._cacheIndex) {
        var t = (e._localRoot || this._root).uuid, n = e._clip.uuid, i = this._actionsByClip[n];
        this._bindAction(e, i && i.knownActions[0]), this._addInactiveAction(e, n, t);
      }
      for (var r = e._propertyBindings, o = 0, s = r.length; o !== s; ++o) {
        var a = r[o];
        0 == a.useCount++ && (this._lendBinding(a), a.saveOriginalState());
      }
      this._lendAction(e);
    }
  }, _deactivateAction: function (e) {
    if (this._isActiveAction(e)) {
      for (var t = e._propertyBindings, n = 0, i = t.length; n !== i; ++n) {
        var r = t[n];
        0 == --r.useCount && (r.restoreOriginalState(), this._takeBackBinding(r));
      }
      this._takeBackAction(e);
    }
  }, _initMemoryManager: function () {
    this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
    var e = this;
    this.stats = {actions: {get total() {
      return e._actions.length;
    }, get inUse() {
      return e._nActiveActions;
    }}, bindings: {get total() {
      return e._bindings.length;
    }, get inUse() {
      return e._nActiveBindings;
    }}, controlInterpolants: {get total() {
      return e._controlInterpolants.length;
    }, get inUse() {
      return e._nActiveControlInterpolants;
    }}};
  }, _isActiveAction: function (e) {
    var t = e._cacheIndex;
    return null !== t && t < this._nActiveActions;
  }, _addInactiveAction: function (e, t, n) {
    var i = this._actions, r = this._actionsByClip, o = r[t];
    if (undefined === o) o = {knownActions: [e], actionByRoot: {}}, e._byClipCacheIndex = 0, r[t] = o; else {
      var s = o.knownActions;
      e._byClipCacheIndex = s.length, s.push(e);
    }
    e._cacheIndex = i.length, i.push(e), o.actionByRoot[n] = e;
  }, _removeInactiveAction: function (e) {
    var t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
    n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
    var r = e._clip.uuid, o = this._actionsByClip, s = o[r], a = s.knownActions, l = a[a.length - 1], c = e._byClipCacheIndex;
    l._byClipCacheIndex = c, a[c] = l, a.pop(), e._byClipCacheIndex = null, delete s.actionByRoot[(e._localRoot || this._root).uuid], 0 === a.length && delete o[r], this._removeInactiveBindingsForAction(e);
  }, _removeInactiveBindingsForAction: function (e) {
    for (var t = e._propertyBindings, n = 0, i = t.length; n !== i; ++n) {
      var r = t[n];
      0 == --r.referenceCount && this._removeInactiveBinding(r);
    }
  }, _lendAction: function (e) {
    var t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _takeBackAction: function (e) {
    var t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _addInactiveBinding: function (e, t, n) {
    var i = this._bindingsByRootAndName, r = i[t], o = this._bindings;
    undefined === r && (r = {}, i[t] = r), r[n] = e, e._cacheIndex = o.length, o.push(e);
  }, _removeInactiveBinding: function (e) {
    var t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, o = this._bindingsByRootAndName, s = o[i], a = t[t.length - 1], l = e._cacheIndex;
    a._cacheIndex = l, t[l] = a, t.pop(), delete s[r], 0 === Object.keys(s).length && delete o[i];
  }, _lendBinding: function (e) {
    var t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _takeBackBinding: function (e) {
    var t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _lendControlInterpolant: function () {
    var e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
    return undefined === n && ((n = new Mc(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = t, e[t] = n), n;
  }, _takeBackControlInterpolant: function (e) {
    var t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
    e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
  }, _controlInterpolantsResultBuffer: new Float32Array(1), clipAction: function (e, t) {
    var n = t || this._root, i = n.uuid, r = "string" == typeof e ? Fc.findByName(n, e) : e, o = null !== r ? r.uuid : e, s = this._actionsByClip[o], a = null;
    if (undefined !== s) {
      var l = s.actionByRoot[i];
      if (undefined !== l) return l;
      a = s.knownActions[0], null === r && (r = a._clip);
    }
    if (null === r) return null;
    var c = new Cu(this, r, t);
    return this._bindAction(c, a), this._addInactiveAction(c, o, i), c;
  }, existingAction: function (e, t) {
    var n = t || this._root, i = n.uuid, r = "string" == typeof e ? Fc.findByName(n, e) : e, o = r ? r.uuid : e, s = this._actionsByClip[o];
    return undefined !== s && s.actionByRoot[i] || null;
  }, stopAllAction: function () {
    var e = this._actions, t = this._nActiveActions, n = this._bindings, i = this._nActiveBindings;
    this._nActiveActions = 0, this._nActiveBindings = 0;
    for (var r = 0; r !== t; ++r) e[r].reset();
    for (r = 0; r !== i; ++r) n[r].useCount = 0;
    return this;
  }, update: function (e) {
    e *= this.timeScale;
    for (var t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1, s = 0; s !== n; ++s) {
      t[s]._update(i, e, r, o);
    }
    var a = this._bindings, l = this._nActiveBindings;
    for (s = 0; s !== l; ++s) a[s].apply(o);
    return this;
  }, getRoot: function () {
    return this._root;
  }, uncacheClip: function (e) {
    var t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
    if (undefined !== r) {
      for (var o = r.knownActions, s = 0, a = o.length; s !== a; ++s) {
        var l = o[s];
        this._deactivateAction(l);
        var c = l._cacheIndex, h = t[t.length - 1];
        l._cacheIndex = null, l._byClipCacheIndex = null, h._cacheIndex = c, t[c] = h, t.pop(), this._removeInactiveBindingsForAction(l);
      }
      delete i[n];
    }
  }, uncacheRoot: function (e) {
    var t = e.uuid, n = this._actionsByClip;
    for (var i in n) {
      var r = n[i].actionByRoot[t];
      undefined !== r && (this._deactivateAction(r), this._removeInactiveAction(r));
    }
    var o = this._bindingsByRootAndName[t];
    if (undefined !== o) for (var s in o) {
      var a = o[s];
      a.restoreOriginalState(), this._removeInactiveBinding(a);
    }
  }, uncacheAction: function (e, t) {
    var n = this.existingAction(e, t);
    null !== n && (this._deactivateAction(n), this._removeInactiveAction(n));
  }}), Ru.prototype.clone = function () {
    return new Ru(undefined === this.value.clone ? this.value : this.value.clone());
  }, Lu.prototype = Object.assign(Object.create(la.prototype), {constructor: Lu, isInstancedInterleavedBuffer: true, copy: function (e) {
    return la.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this;
  }}), Object.assign(Pu.prototype, {linePrecision: 1, set: function (e, t) {
    this.ray.set(e, t);
  }, setFromCamera: function (e, t) {
    t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, 0.5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type.");
  }, intersectObject: function (e, t, n) {
    var i = n || [];
    return Ou(e, this, i, t), i.sort(Du), i;
  }, intersectObjects: function (e, t, n) {
    var i = n || [];
    if (false === Array.isArray(e)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), i;
    for (var r = 0, o = e.length; r < o; r++) Ou(e[r], this, i, t);
    return i.sort(Du), i;
  }}), Object.assign(Iu.prototype, {set: function (e, t, n) {
    return this.radius = e, this.phi = t, this.theta = n, this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
  }, makeSafe: function () {
    return this.phi = Math.max(0.000001, Math.min(Math.PI - 0.000001, this.phi)), this;
  }, setFromVector3: function (e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }, setFromCartesianCoords: function (e, t, n) {
    return this.radius = Math.sqrt(e * e + t * t + n * n), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(hn.clamp(t / this.radius, -1, 1))), this;
  }}), Object.assign(Bu.prototype, {set: function (e, t, n) {
    return this.radius = e, this.theta = t, this.y = n, this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
  }, setFromVector3: function (e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }, setFromCartesianCoords: function (e, t, n) {
    return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
  }});
  var Fu = new un;
  function zu(e, t) {
    this.min = undefined !== e ? e : new un(Infinity, Infinity), this.max = undefined !== t ? t : new un(-Infinity, -Infinity);
  }
  Object.assign(zu.prototype, {set: function (e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }, setFromPoints: function (e) {
    this.makeEmpty();
    for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
    return this;
  }, setFromCenterAndSize: function (e, t) {
    var n = Fu.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }, makeEmpty: function () {
    return this.min.x = this.min.y = Infinity, this.max.x = this.max.y = -Infinity, this;
  }, isEmpty: function () {
    return this.max.x < this.min.x || this.max.y < this.min.y;
  }, getCenter: function (e) {
    return undefined === e && (console.warn("THREE.Box2: .getCenter() target is now required"), e = new un), this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }, getSize: function (e) {
    return undefined === e && (console.warn("THREE.Box2: .getSize() target is now required"), e = new un), this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
  }, expandByPoint: function (e) {
    return this.min.min(e), this.max.max(e), this;
  }, expandByVector: function (e) {
    return this.min.sub(e), this.max.add(e), this;
  }, expandByScalar: function (e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }, containsPoint: function (e) {
    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
  }, containsBox: function (e) {
    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
  }, getParameter: function (e, t) {
    return undefined === t && (console.warn("THREE.Box2: .getParameter() target is now required"), t = new un), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
  }, intersectsBox: function (e) {
    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
  }, clampPoint: function (e, t) {
    return undefined === t && (console.warn("THREE.Box2: .clampPoint() target is now required"), t = new un), t.copy(e).clamp(this.min, this.max);
  }, distanceToPoint: function (e) {
    return Fu.copy(e).clamp(this.min, this.max).sub(e).length();
  }, intersect: function (e) {
    return this.min.max(e.min), this.max.min(e.max), this;
  }, union: function (e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }, translate: function (e) {
    return this.min.add(e), this.max.add(e), this;
  }, equals: function (e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }});
  var Nu = new fn, Uu = new fn;
  function Vu(e, t) {
    this.start = undefined !== e ? e : new fn, this.end = undefined !== t ? t : new fn;
  }
  function Gu(e) {
    Jn.call(this), this.material = e, this.render = function () {};
  }
  Object.assign(Vu.prototype, {set: function (e, t) {
    return this.start.copy(e), this.end.copy(t), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.start.copy(e.start), this.end.copy(e.end), this;
  }, getCenter: function (e) {
    return undefined === e && (console.warn("THREE.Line3: .getCenter() target is now required"), e = new fn), e.addVectors(this.start, this.end).multiplyScalar(0.5);
  }, delta: function (e) {
    return undefined === e && (console.warn("THREE.Line3: .delta() target is now required"), e = new fn), e.subVectors(this.end, this.start);
  }, distanceSq: function () {
    return this.start.distanceToSquared(this.end);
  }, distance: function () {
    return this.start.distanceTo(this.end);
  }, at: function (e, t) {
    return undefined === t && (console.warn("THREE.Line3: .at() target is now required"), t = new fn), this.delta(t).multiplyScalar(e).add(this.start);
  }, closestPointToPointParameter: function (e, t) {
    Nu.subVectors(e, this.start), Uu.subVectors(this.end, this.start);
    var n = Uu.dot(Uu), i = Uu.dot(Nu) / n;
    return t && (i = hn.clamp(i, 0, 1)), i;
  }, closestPointToPoint: function (e, t, n) {
    var i = this.closestPointToPointParameter(e, t);
    return undefined === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), n = new fn), this.delta(n).multiplyScalar(i).add(this.start);
  }, applyMatrix4: function (e) {
    return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
  }, equals: function (e) {
    return e.start.equals(this.start) && e.end.equals(this.end);
  }}), Gu.prototype = Object.create(Jn.prototype), Gu.prototype.constructor = Gu, Gu.prototype.isImmediateRenderObject = true;
  var Hu = new fn, ju = new fn, $u = new yn, Wu = ["a", "b", "c"];
  function Xu(e, t, n, i) {
    this.object = e, this.size = undefined !== t ? t : 1;
    var r = undefined !== n ? n : 16711680, o = undefined !== i ? i : 1, s = 0, a = this.object.geometry;
    a && a.isGeometry ? s = 3 * a.faces.length : a && a.isBufferGeometry && (s = a.attributes.normal.count);
    var l = new cr, c = new Zi(2 * s * 3, 3);
    l.addAttribute("position", c), Va.call(this, l, new Pa({color: r, linewidth: o})), this.matrixAutoUpdate = false, this.update();
  }
  Xu.prototype = Object.create(Va.prototype), Xu.prototype.constructor = Xu, Xu.prototype.update = function () {
    this.object.updateMatrixWorld(true), $u.getNormalMatrix(this.object.matrixWorld);
    var e = this.object.matrixWorld, t = this.geometry.attributes.position, n = this.object.geometry;
    if (n && n.isGeometry) for (var i = n.vertices, r = n.faces, o = 0, s = 0, a = r.length; s < a; s++) for (var l = r[s], c = 0, h = l.vertexNormals.length; c < h; c++) {
      var u = i[l[Wu[c]]], d = l.vertexNormals[c];
      Hu.copy(u).applyMatrix4(e), ju.copy(d).applyMatrix3($u).normalize().multiplyScalar(this.size).add(Hu), t.setXYZ(o, Hu.x, Hu.y, Hu.z), o += 1, t.setXYZ(o, ju.x, ju.y, ju.z), o += 1;
    } else if (n && n.isBufferGeometry) {
      var p = n.attributes.position, m = n.attributes.normal;
      for (o = 0, c = 0, h = p.count; c < h; c++) Hu.set(p.getX(c), p.getY(c), p.getZ(c)).applyMatrix4(e), ju.set(m.getX(c), m.getY(c), m.getZ(c)), ju.applyMatrix3($u).normalize().multiplyScalar(this.size).add(Hu), t.setXYZ(o, Hu.x, Hu.y, Hu.z), o += 1, t.setXYZ(o, ju.x, ju.y, ju.z), o += 1;
    }
    t.needsUpdate = true;
  };
  var Yu = new fn;
  function Ju(e, t) {
    Jn.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.color = t;
    for (var n = new cr, i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], r = 0, o = 1; r < 32; r++, o++) {
      var s = r / 32 * Math.PI * 2, a = o / 32 * Math.PI * 2;
      i.push(Math.cos(s), Math.sin(s), 1, Math.cos(a), Math.sin(a), 1);
    }
    n.addAttribute("position", new Zi(i, 3));
    var l = new Pa({fog: false});
    this.cone = new Va(n, l), this.add(this.cone), this.update();
  }
  Ju.prototype = Object.create(Jn.prototype), Ju.prototype.constructor = Ju, Ju.prototype.dispose = function () {
    this.cone.geometry.dispose(), this.cone.material.dispose();
  }, Ju.prototype.update = function () {
    this.light.updateMatrixWorld();
    var e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
    this.cone.scale.set(t, t, e), Yu.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Yu), undefined !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
  };
  var Ku = new fn, Zu = new Ln, Qu = new Ln;
  function ed(e) {
    for (var t = function e(t) {
      var n = [];
      t && t.isBone && n.push(t);
      for (var i = 0; i < t.children.length; i++) n.push.apply(n, e(t.children[i]));
      return n;
    }(e), n = new cr, i = [], r = [], o = new Ii(0, 0, 1), s = new Ii(0, 1, 0), a = 0; a < t.length; a++) {
      var l = t[a];
      l.parent && l.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(o.r, o.g, o.b), r.push(s.r, s.g, s.b));
    }
    n.addAttribute("position", new Zi(i, 3)), n.addAttribute("color", new Zi(r, 3));
    var c = new Pa({vertexColors: E, depthTest: false, depthWrite: false, transparent: true});
    Va.call(this, n, c), this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = false;
  }
  function td(e, t, n) {
    this.light = e, this.light.updateMatrixWorld(), this.color = n;
    var i = new Zl(t, 4, 2), r = new Gi({wireframe: true, fog: false});
    Ar.call(this, i, r), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = false, this.update();
  }
  function nd(e, t) {
    this.type = "RectAreaLightHelper", this.light = e, this.color = t;
    var n = new cr;
    n.addAttribute("position", new Zi([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0], 3)), n.computeBoundingSphere();
    var i = new Pa({fog: false});
    za.call(this, n, i);
    var r = new cr;
    r.addAttribute("position", new Zi([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0], 3)), r.computeBoundingSphere(), this.add(new Ar(r, new Gi({side: y, fog: false}))), this.update();
  }
  ed.prototype = Object.create(Va.prototype), ed.prototype.constructor = ed, ed.prototype.updateMatrixWorld = function (e) {
    var t = this.bones, n = this.geometry, i = n.getAttribute("position");
    Qu.getInverse(this.root.matrixWorld);
    for (var r = 0, o = 0; r < t.length; r++) {
      var s = t[r];
      s.parent && s.parent.isBone && (Zu.multiplyMatrices(Qu, s.matrixWorld), Ku.setFromMatrixPosition(Zu), i.setXYZ(o, Ku.x, Ku.y, Ku.z), Zu.multiplyMatrices(Qu, s.parent.matrixWorld), Ku.setFromMatrixPosition(Zu), i.setXYZ(o + 1, Ku.x, Ku.y, Ku.z), o += 2);
    }
    n.getAttribute("position").needsUpdate = true, Jn.prototype.updateMatrixWorld.call(this, e);
  }, td.prototype = Object.create(Ar.prototype), td.prototype.constructor = td, td.prototype.dispose = function () {
    this.geometry.dispose(), this.material.dispose();
  }, td.prototype.update = function () {
    undefined !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
  }, nd.prototype = Object.create(za.prototype), nd.prototype.constructor = nd, nd.prototype.update = function () {
    if (this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1), undefined !== this.color) this.material.color.set(this.color), this.children[0].material.color.set(this.color); else {
      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
      var e = this.material.color, t = Math.max(e.r, e.g, e.b);
      t > 1 && e.multiplyScalar(1 / t), this.children[0].material.color.copy(this.material.color);
    }
  }, nd.prototype.dispose = function () {
    this.geometry.dispose(), this.material.dispose(), this.children[0].geometry.dispose(), this.children[0].material.dispose();
  };
  var id = new fn, rd = new Ii, od = new Ii;
  function sd(e, t, n) {
    Jn.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.color = n;
    var i = new cl(t);
    i.rotateY(0.5 * Math.PI), this.material = new Gi({wireframe: true, fog: false}), undefined === this.color && (this.material.vertexColors = E);
    var r = i.getAttribute("position"), o = new Float32Array(3 * r.count);
    i.addAttribute("color", new Hi(o, 3)), this.add(new Ar(i, this.material)), this.update();
  }
  function ad(e, t) {
    this.lightProbe = e, this.size = t;
    var n = {GAMMA_OUTPUT: ""}, i = new Vr({defines: n, uniforms: {sh: {value: this.lightProbe.sh.coefficients}, intensity: {value: this.lightProbe.intensity}}, vertexShader: ["varying vec3 vNormal;", "void main() {", "	vNormal = normalize( normalMatrix * normal );", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"), fragmentShader: ["#define RECIPROCAL_PI 0.318309886", "vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {", "	// matrix is assumed to be orthogonal", "	return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );", "}", "vec3 linearToOutput( in vec3 a ) {", "	#ifdef GAMMA_OUTPUT", "		return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );", "	#else", "		return a;", "	#endif", "}", "// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf", "vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {", "	// normal is assumed to have unit length", "	float x = normal.x, y = normal.y, z = normal.z;", "	// band 0", "	vec3 result = shCoefficients[ 0 ] * 0.886227;", "	// band 1", "	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;", "	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;", "	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;", "	// band 2", "	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;", "	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;", "	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );", "	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;", "	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );", "	return result;", "}", "uniform vec3 sh[ 9 ]; // sh coefficients", "uniform float intensity; // light probe intensity", "varying vec3 vNormal;", "void main() {", "	vec3 normal = normalize( vNormal );", "	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );", "	vec3 irradiance = shGetIrradianceAt( worldNormal, sh );", "	vec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;", "	outgoingLight = linearToOutput( outgoingLight );", "	gl_FragColor = vec4( outgoingLight, 1.0 );", "}"].join("\n")}), r = new Zl(1, 32, 16);
    Ar.call(this, r, i), this.onBeforeRender();
  }
  function ld(e, t, n, i) {
    e = e || 10, t = t || 10, n = new Ii(undefined !== n ? n : 4473924), i = new Ii(undefined !== i ? i : 8947848);
    for (var r = t / 2, o = e / t, s = e / 2, a = [], l = [], c = 0, h = 0, u = -s; c <= t; c++, u += o) {
      a.push(-s, 0, u, s, 0, u), a.push(u, 0, -s, u, 0, s);
      var d = c === r ? n : i;
      d.toArray(l, h), h += 3, d.toArray(l, h), h += 3, d.toArray(l, h), h += 3, d.toArray(l, h), h += 3;
    }
    var p = new cr;
    p.addAttribute("position", new Zi(a, 3)), p.addAttribute("color", new Zi(l, 3));
    var m = new Pa({vertexColors: E});
    Va.call(this, p, m);
  }
  function cd(e, t, n, i, r, o) {
    e = e || 10, t = t || 16, n = n || 8, i = i || 64, r = new Ii(undefined !== r ? r : 4473924), o = new Ii(undefined !== o ? o : 8947848);
    var s, a, l, c, h, u, d, p = [], m = [];
    for (c = 0; c <= t; c++) l = c / t * (2 * Math.PI), s = Math.sin(l) * e, a = Math.cos(l) * e, p.push(0, 0, 0), p.push(s, 0, a), d = 1 & c ? r : o, m.push(d.r, d.g, d.b), m.push(d.r, d.g, d.b);
    for (c = 0; c <= n; c++) for (d = 1 & c ? r : o, u = e - e / n * c, h = 0; h < i; h++) l = h / i * (2 * Math.PI), s = Math.sin(l) * u, a = Math.cos(l) * u, p.push(s, 0, a), m.push(d.r, d.g, d.b), l = (h + 1) / i * (2 * Math.PI), s = Math.sin(l) * u, a = Math.cos(l) * u, p.push(s, 0, a), m.push(d.r, d.g, d.b);
    var f = new cr;
    f.addAttribute("position", new Zi(p, 3)), f.addAttribute("color", new Zi(m, 3));
    var g = new Pa({vertexColors: E});
    Va.call(this, f, g);
  }
  function hd(e, t, n, i) {
    this.audio = e, this.range = t || 1, this.divisionsInnerAngle = n || 16, this.divisionsOuterAngle = i || 2;
    var r = new cr, o = this.divisionsInnerAngle + 2 * this.divisionsOuterAngle, s = new Float32Array(3 * (3 * o + 3));
    r.addAttribute("position", new Hi(s, 3));
    var a = new Pa({color: 65280}), l = new Pa({color: 16776960});
    za.call(this, r, [l, a]), this.update();
  }
  sd.prototype = Object.create(Jn.prototype), sd.prototype.constructor = sd, sd.prototype.dispose = function () {
    this.children[0].geometry.dispose(), this.children[0].material.dispose();
  }, sd.prototype.update = function () {
    var e = this.children[0];
    if (undefined !== this.color) this.material.color.set(this.color); else {
      var t = e.geometry.getAttribute("color");
      rd.copy(this.light.color), od.copy(this.light.groundColor);
      for (var n = 0, i = t.count; n < i; n++) {
        var r = n < i / 2 ? rd : od;
        t.setXYZ(n, r.r, r.g, r.b);
      }
      t.needsUpdate = true;
    }
    e.lookAt(id.setFromMatrixPosition(this.light.matrixWorld).negate());
  }, ad.prototype = Object.create(Ar.prototype), ad.prototype.constructor = ad, ad.prototype.dispose = function () {
    this.geometry.dispose(), this.material.dispose();
  }, ad.prototype.onBeforeRender = function () {
    this.position.copy(this.lightProbe.position), this.scale.set(1, 1, 1).multiplyScalar(this.size), this.material.uniforms.intensity.value = this.lightProbe.intensity;
  }, ld.prototype = Object.assign(Object.create(Va.prototype), {constructor: ld, copy: function (e) {
    return Va.prototype.copy.call(this, e), this.geometry.copy(e.geometry), this.material.copy(e.material), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }}), cd.prototype = Object.create(Va.prototype), cd.prototype.constructor = cd, hd.prototype = Object.create(za.prototype), hd.prototype.constructor = hd, hd.prototype.update = function () {
    var e, t, n = this.audio, i = this.range, r = this.divisionsInnerAngle, o = this.divisionsOuterAngle, s = hn.degToRad(n.panner.coneInnerAngle), a = hn.degToRad(n.panner.coneOuterAngle), l = s / 2, c = a / 2, h = 0, u = 0, d = this.geometry, p = d.attributes.position;
    function m(n, r, o, s) {
      var a = (r - n) / o;
      for (p.setXYZ(h, 0, 0, 0), u++, e = n; e < r; e += a) t = h + u, p.setXYZ(t, Math.sin(e) * i, 0, Math.cos(e) * i), p.setXYZ(t + 1, Math.sin(Math.min(e + a, r)) * i, 0, Math.cos(Math.min(e + a, r)) * i), p.setXYZ(t + 2, 0, 0, 0), u += 3;
      d.addGroup(h, u, s), h += u, u = 0;
    }
    d.clearGroups(), m(-c, -l, o, 0), m(-l, l, r, 1), m(l, c, o, 0), p.needsUpdate = true, s === a && (this.material[0].visible = false);
  }, hd.prototype.dispose = function () {
    this.geometry.dispose(), this.material[0].dispose(), this.material[1].dispose();
  };
  var ud = new fn, dd = new fn, pd = new yn;
  function md(e, t, n, i) {
    this.object = e, this.size = undefined !== t ? t : 1;
    var r = undefined !== n ? n : 16776960, o = undefined !== i ? i : 1, s = 0, a = this.object.geometry;
    a && a.isGeometry ? s = a.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
    var l = new cr, c = new Zi(2 * s * 3, 3);
    l.addAttribute("position", c), Va.call(this, l, new Pa({color: r, linewidth: o})), this.matrixAutoUpdate = false, this.update();
  }
  md.prototype = Object.create(Va.prototype), md.prototype.constructor = md, md.prototype.update = function () {
    this.object.updateMatrixWorld(true), pd.getNormalMatrix(this.object.matrixWorld);
    for (var e = this.object.matrixWorld, t = this.geometry.attributes.position, n = this.object.geometry, i = n.vertices, r = n.faces, o = 0, s = 0, a = r.length; s < a; s++) {
      var l = r[s], c = l.normal;
      ud.copy(i[l.a]).add(i[l.b]).add(i[l.c]).divideScalar(3).applyMatrix4(e), dd.copy(c).applyMatrix3(pd).normalize().multiplyScalar(this.size).add(ud), t.setXYZ(o, ud.x, ud.y, ud.z), o += 1, t.setXYZ(o, dd.x, dd.y, dd.z), o += 1;
    }
    t.needsUpdate = true;
  };
  var fd = new fn, gd = new fn, vd = new fn;
  function yd(e, t, n) {
    Jn.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.color = n, undefined === t && (t = 1);
    var i = new cr;
    i.addAttribute("position", new Zi([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3));
    var r = new Pa({fog: false});
    this.lightPlane = new za(i, r), this.add(this.lightPlane), (i = new cr).addAttribute("position", new Zi([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new za(i, r), this.add(this.targetLine), this.update();
  }
  yd.prototype = Object.create(Jn.prototype), yd.prototype.constructor = yd, yd.prototype.dispose = function () {
    this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
  }, yd.prototype.update = function () {
    fd.setFromMatrixPosition(this.light.matrixWorld), gd.setFromMatrixPosition(this.light.target.matrixWorld), vd.subVectors(gd, fd), this.lightPlane.lookAt(gd), undefined !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(gd), this.targetLine.scale.z = vd.length();
  };
  var _d = new fn, xd = new Gr;
  function bd(e) {
    var t = new cr, n = new Pa({color: 16777215, vertexColors: S}), i = [], r = [], o = {}, s = new Ii(16755200), a = new Ii(16711680), l = new Ii(43775), c = new Ii(16777215), h = new Ii(3355443);
    function u(e, t, n) {
      d(e, n), d(t, n);
    }
    function d(e, t) {
      i.push(0, 0, 0), r.push(t.r, t.g, t.b), undefined === o[e] && (o[e] = []), o[e].push(i.length / 3 - 1);
    }
    u("n1", "n2", s), u("n2", "n4", s), u("n4", "n3", s), u("n3", "n1", s), u("f1", "f2", s), u("f2", "f4", s), u("f4", "f3", s), u("f3", "f1", s), u("n1", "f1", s), u("n2", "f2", s), u("n3", "f3", s), u("n4", "f4", s), u("p", "n1", a), u("p", "n2", a), u("p", "n3", a), u("p", "n4", a), u("u1", "u2", l), u("u2", "u3", l), u("u3", "u1", l), u("c", "t", c), u("p", "c", h), u("cn1", "cn2", h), u("cn3", "cn4", h), u("cf1", "cf2", h), u("cf3", "cf4", h), t.addAttribute("position", new Zi(i, 3)), t.addAttribute("color", new Zi(r, 3)), Va.call(this, t, n), this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.pointMap = o, this.update();
  }
  function wd(e, t, n, i, r, o, s) {
    _d.set(r, o, s).unproject(i);
    var a = t[e];
    if (undefined !== a) for (var l = n.getAttribute("position"), c = 0, h = a.length; c < h; c++) l.setXYZ(a[c], _d.x, _d.y, _d.z);
  }
  bd.prototype = Object.create(Va.prototype), bd.prototype.constructor = bd, bd.prototype.update = function () {
    var e = this.geometry, t = this.pointMap;
    xd.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), wd("c", t, e, xd, 0, 0, -1), wd("t", t, e, xd, 0, 0, 1), wd("n1", t, e, xd, -1, -1, -1), wd("n2", t, e, xd, 1, -1, -1), wd("n3", t, e, xd, -1, 1, -1), wd("n4", t, e, xd, 1, 1, -1), wd("f1", t, e, xd, -1, -1, 1), wd("f2", t, e, xd, 1, -1, 1), wd("f3", t, e, xd, -1, 1, 1), wd("f4", t, e, xd, 1, 1, 1), wd("u1", t, e, xd, 0.7, 1.1, -1), wd("u2", t, e, xd, -0.7, 1.1, -1), wd("u3", t, e, xd, 0, 2, -1), wd("cf1", t, e, xd, -1, 0, 1), wd("cf2", t, e, xd, 1, 0, 1), wd("cf3", t, e, xd, 0, -1, 1), wd("cf4", t, e, xd, 0, 1, 1), wd("cn1", t, e, xd, -1, 0, -1), wd("cn2", t, e, xd, 1, 0, -1), wd("cn3", t, e, xd, 0, -1, -1), wd("cn4", t, e, xd, 0, 1, -1), e.getAttribute("position").needsUpdate = true;
  };
  var Sd = new hi;
  function Ed(e, t) {
    this.object = e, undefined === t && (t = 16776960);
    var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), i = new Float32Array(24), r = new cr;
    r.setIndex(new Hi(n, 1)), r.addAttribute("position", new Hi(i, 3)), Va.call(this, r, new Pa({color: t})), this.matrixAutoUpdate = false, this.update();
  }
  function qd(e, t) {
    this.type = "Box3Helper", this.box = e, t = t || 16776960;
    var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), i = new cr;
    i.setIndex(new Hi(n, 1)), i.addAttribute("position", new Zi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), Va.call(this, i, new Pa({color: t})), this.geometry.computeBoundingSphere();
  }
  function Td(e, t, n) {
    this.type = "PlaneHelper", this.plane = e, this.size = undefined === t ? 1 : t;
    var i = undefined !== n ? n : 16776960, r = new cr;
    r.addAttribute("position", new Zi([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), r.computeBoundingSphere(), za.call(this, r, new Pa({color: i}));
    var o = new cr;
    o.addAttribute("position", new Zi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), o.computeBoundingSphere(), this.add(new Ar(o, new Gi({color: i, opacity: 0.2, transparent: true, depthWrite: false})));
  }
  Ed.prototype = Object.create(Va.prototype), Ed.prototype.constructor = Ed, Ed.prototype.update = function (e) {
    if (undefined !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."), undefined !== this.object && Sd.setFromObject(this.object), !Sd.isEmpty()) {
      var t = Sd.min, n = Sd.max, i = this.geometry.attributes.position, r = i.array;
      r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = true, this.geometry.computeBoundingSphere();
    }
  }, Ed.prototype.setFromObject = function (e) {
    return this.object = e, this.update(), this;
  }, Ed.prototype.copy = function (e) {
    return Va.prototype.copy.call(this, e), this.object = e.object, this;
  }, Ed.prototype.clone = function () {
    return (new this.constructor).copy(this);
  }, qd.prototype = Object.create(Va.prototype), qd.prototype.constructor = qd, qd.prototype.updateMatrixWorld = function (e) {
    var t = this.box;
    t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(0.5), Jn.prototype.updateMatrixWorld.call(this, e));
  }, Td.prototype = Object.create(za.prototype), Td.prototype.constructor = Td, Td.prototype.updateMatrixWorld = function (e) {
    var t = -this.plane.constant;
    Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(0.5 * this.size, 0.5 * this.size, t), this.children[0].material.side = t < 0 ? y : v, this.lookAt(this.plane.normal), Jn.prototype.updateMatrixWorld.call(this, e);
  };
  var Ad, Md, Cd = new fn;
  function kd(e, t, n, i, r, o) {
    Jn.call(this), undefined === e && (e = new fn(0, 0, 1)), undefined === t && (t = new fn(0, 0, 0)), undefined === n && (n = 1), undefined === i && (i = 16776960), undefined === r && (r = 0.2 * n), undefined === o && (o = 0.2 * r), undefined === Ad && ((Ad = new cr).addAttribute("position", new Zi([0, 0, 0, 0, 1, 0], 3)), (Md = new lc(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)), this.position.copy(t), this.line = new za(Ad, new Pa({color: i})), this.line.matrixAutoUpdate = false, this.add(this.line), this.cone = new Ar(Md, new Gi({color: i})), this.cone.matrixAutoUpdate = false, this.add(this.cone), this.setDirection(e), this.setLength(n, r, o);
  }
  function Rd(e) {
    var t = [0, 0, 0, e = e || 1, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e], n = new cr;
    n.addAttribute("position", new Zi(t, 3)), n.addAttribute("color", new Zi([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1], 3));
    var i = new Pa({vertexColors: E});
    Va.call(this, n, i);
  }
  function Ld(e, t, n, i, r, o, s) {
    return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new Ni(e, t, n, r, o, s);
  }
  kd.prototype = Object.create(Jn.prototype), kd.prototype.constructor = kd, kd.prototype.setDirection = function (e) {
    if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1); else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0); else {
      Cd.set(e.z, 0, -e.x).normalize();
      var t = Math.acos(e.y);
      this.quaternion.setFromAxisAngle(Cd, t);
    }
  }, kd.prototype.setLength = function (e, t, n) {
    undefined === t && (t = 0.2 * e), undefined === n && (n = 0.2 * t), this.line.scale.set(1, Math.max(0, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
  }, kd.prototype.setColor = function (e) {
    this.line.material.color.set(e), this.cone.material.color.set(e);
  }, kd.prototype.copy = function (e) {
    return Jn.prototype.copy.call(this, e, false), this.line.copy(e.line), this.cone.copy(e.cone), this;
  }, kd.prototype.clone = function () {
    return (new this.constructor).copy(this);
  }, Rd.prototype = Object.create(Va.prototype), Rd.prototype.constructor = Rd;
  var Pd = 0, Dd = 1;
  function Od(e) {
    return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), e;
  }
  function Id(e) {
    return undefined === e && (e = []), console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), e.isMultiMaterial = true, e.materials = e, e.clone = function () {
      return e.slice();
    }, e;
  }
  function Bd(e, t) {
    return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new Ya(e, t);
  }
  function Fd(e) {
    return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new Sa(e);
  }
  function zd(e, t) {
    return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new Ya(e, t);
  }
  function Nd(e) {
    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new Ha(e);
  }
  function Ud(e) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new Ha(e);
  }
  function Vd(e) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new Ha(e);
  }
  function Gd(e, t, n) {
    return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new fn(e, t, n);
  }
  function Hd(e, t) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new Hi(e, t).setDynamic(true);
  }
  function jd(e, t) {
    return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new ji(e, t);
  }
  function $d(e, t) {
    return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new $i(e, t);
  }
  function Wd(e, t) {
    return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Wi(e, t);
  }
  function Xd(e, t) {
    return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new Xi(e, t);
  }
  function Yd(e, t) {
    return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Yi(e, t);
  }
  function Jd(e, t) {
    return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new Ji(e, t);
  }
  function Kd(e, t) {
    return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Ki(e, t);
  }
  function Zd(e, t) {
    return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new Zi(e, t);
  }
  function Qd(e, t) {
    return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new Qi(e, t);
  }
  function ep(e) {
    console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), sh.call(this, e), this.type = "catmullrom", this.closed = true;
  }
  function tp(e) {
    console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."), sh.call(this, e), this.type = "catmullrom";
  }
  function np(e) {
    console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), sh.call(this, e), this.type = "catmullrom";
  }
  function ip(e) {
    return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new Rd(e);
  }
  function rp(e, t) {
    return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new Ed(e, t);
  }
  function op(e, t) {
    return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new Va(new sc(e.geometry), new Pa({color: undefined !== t ? t : 16777215}));
  }
  function sp(e, t) {
    return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new Va(new tl(e.geometry), new Pa({color: undefined !== t ? t : 16777215}));
  }
  function ap(e) {
    return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new jc(e);
  }
  function lp(e) {
    return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new Xc(e);
  }
  Zc.create = function (e, t) {
    return console.log("THREE.Curve.create() has been deprecated"), e.prototype = Object.create(Zc.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e;
  }, Object.assign(yh.prototype, {createPointsGeometry: function (e) {
    console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
    var t = this.getPoints(e);
    return this.createGeometry(t);
  }, createSpacedPointsGeometry: function (e) {
    console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
    var t = this.getSpacedPoints(e);
    return this.createGeometry(t);
  }, createGeometry: function (e) {
    console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
    for (var t = new Dr, n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      t.vertices.push(new fn(r.x, r.y, r.z || 0));
    }
    return t;
  }}), Object.assign(_h.prototype, {fromPoints: function (e) {
    console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(e);
  }}), ep.prototype = Object.create(sh.prototype), tp.prototype = Object.create(sh.prototype), np.prototype = Object.create(sh.prototype), Object.assign(np.prototype, {initFromArray: function () {
    console.error("THREE.Spline: .initFromArray() has been removed.");
  }, getControlPointsArray: function () {
    console.error("THREE.Spline: .getControlPointsArray() has been removed.");
  }, reparametrizeByArcLength: function () {
    console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");
  }}), ld.prototype.setColors = function () {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
  }, ed.prototype.update = function () {
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
  }, Object.assign(Gc.prototype, {extractUrlBase: function (e) {
    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Dh.extractUrlBase(e);
  }}), Object.assign(zh.prototype, {setTexturePath: function (e) {
    return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e);
  }}), Object.assign(zu.prototype, {center: function (e) {
    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(e);
  }, empty: function () {
    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
  }, isIntersectionBox: function (e) {
    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e);
  }, size: function (e) {
    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(e);
  }}), Object.assign(hi.prototype, {center: function (e) {
    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(e);
  }, empty: function () {
    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
  }, isIntersectionBox: function (e) {
    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e);
  }, isIntersectionSphere: function (e) {
    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e);
  }, size: function (e) {
    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(e);
  }}), Vu.prototype.center = function (e) {
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(e);
  }, Object.assign(hn, {random16: function () {
    return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random();
  }, nearestPowerOfTwo: function (e) {
    return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), hn.floorPowerOfTwo(e);
  }, nextPowerOfTwo: function (e) {
    return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), hn.ceilPowerOfTwo(e);
  }}), Object.assign(yn.prototype, {flattenToArrayOffset: function (e, t) {
    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t);
  }, multiplyVector3: function (e) {
    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this);
  }, multiplyVector3Array: function () {
    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
  }, applyToBuffer: function (e) {
    return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(e);
  }, applyToVector3Array: function () {
    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
  }}), Object.assign(Ln.prototype, {extractPosition: function (e) {
    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e);
  }, flattenToArrayOffset: function (e, t) {
    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t);
  }, getPosition: function () {
    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), (new fn).setFromMatrixColumn(this, 3);
  }, setRotationFromQuaternion: function (e) {
    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(e);
  }, multiplyToArray: function () {
    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
  }, multiplyVector3: function (e) {
    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this);
  }, multiplyVector4: function (e) {
    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this);
  }, multiplyVector3Array: function () {
    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
  }, rotateAxis: function (e) {
    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this);
  }, crossVector: function (e) {
    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this);
  }, translate: function () {
    console.error("THREE.Matrix4: .translate() has been removed.");
  }, rotateX: function () {
    console.error("THREE.Matrix4: .rotateX() has been removed.");
  }, rotateY: function () {
    console.error("THREE.Matrix4: .rotateY() has been removed.");
  }, rotateZ: function () {
    console.error("THREE.Matrix4: .rotateZ() has been removed.");
  }, rotateByAxis: function () {
    console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
  }, applyToBuffer: function (e) {
    return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(e);
  }, applyToVector3Array: function () {
    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
  }, makeFrustum: function (e, t, n, i, r, o) {
    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(e, t, i, n, r, o);
  }}), Qr.prototype.isIntersectionLine = function (e) {
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(e);
  }, dn.prototype.multiplyVector3 = function (e) {
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this);
  }, Object.assign(bi.prototype, {isIntersectionBox: function (e) {
    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e);
  }, isIntersectionPlane: function (e) {
    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(e);
  }, isIntersectionSphere: function (e) {
    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e);
  }}), Object.assign(Li.prototype, {area: function () {
    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
  }, barycoordFromPoint: function (e, t) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(e, t);
  }, midpoint: function (e) {
    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(e);
  }, normal: function (e) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(e);
  }, plane: function (e) {
    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(e);
  }}), Object.assign(Li, {barycoordFromPoint: function (e, t, n, i, r) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), Li.getBarycoord(e, t, n, i, r);
  }, normal: function (e, t, n, i) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), Li.getNormal(e, t, n, i);
  }}), Object.assign(xh.prototype, {extractAllPoints: function (e) {
    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(e);
  }, extrude: function (e) {
    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new jl(this, e);
  }, makeGeometry: function (e) {
    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new ic(this, e);
  }}), Object.assign(un.prototype, {fromAttribute: function (e, t, n) {
    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n);
  }, distanceToManhattan: function (e) {
    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e);
  }, lengthManhattan: function () {
    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
  }}), Object.assign(fn.prototype, {setEulerFromRotationMatrix: function () {
    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
  }, setEulerFromQuaternion: function () {
    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
  }, getPositionFromMatrix: function (e) {
    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(e);
  }, getScaleFromMatrix: function (e) {
    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(e);
  }, getColumnFromMatrix: function (e, t) {
    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(t, e);
  }, applyProjection: function (e) {
    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(e);
  }, fromAttribute: function (e, t, n) {
    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n);
  }, distanceToManhattan: function (e) {
    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e);
  }, lengthManhattan: function () {
    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
  }}), Object.assign(wn.prototype, {fromAttribute: function (e, t, n) {
    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n);
  }, lengthManhattan: function () {
    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
  }}), Object.assign(Dr.prototype, {computeTangents: function () {
    console.error("THREE.Geometry: .computeTangents() has been removed.");
  }, computeLineDistances: function () {
    console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");
  }}), Object.assign(Jn.prototype, {getChildByName: function (e) {
    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e);
  }, renderDepth: function () {
    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
  }, translate: function (e, t) {
    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(t, e);
  }, getWorldRotation: function () {
    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
  }}), Object.defineProperties(Jn.prototype, {eulerOrder: {get: function () {
    return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
  }, set: function (e) {
    console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = e;
  }}, useQuaternion: {get: function () {
    console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
  }, set: function () {
    console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
  }}}), Object.defineProperties(Aa.prototype, {objects: {get: function () {
    return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
  }}}), Object.defineProperty(Ra.prototype, "useVertexTexture", {get: function () {
    console.warn("THREE.Skeleton: useVertexTexture has been removed.");
  }, set: function () {
    console.warn("THREE.Skeleton: useVertexTexture has been removed.");
  }}), Ma.prototype.initBones = function () {
    console.error("THREE.SkinnedMesh: initBones() has been removed.");
  }, Object.defineProperty(Zc.prototype, "__arcLengthDivisions", {get: function () {
    return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions;
  }, set: function (e) {
    console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = e;
  }}), Hr.prototype.setLens = function (e, t) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), undefined !== t && (this.filmGauge = t), this.setFocalLength(e);
  }, Object.defineProperties(bh.prototype, {onlyShadow: {set: function () {
    console.warn("THREE.Light: .onlyShadow has been removed.");
  }}, shadowCameraFov: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = e;
  }}, shadowCameraLeft: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = e;
  }}, shadowCameraRight: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = e;
  }}, shadowCameraTop: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = e;
  }}, shadowCameraBottom: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = e;
  }}, shadowCameraNear: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = e;
  }}, shadowCameraFar: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = e;
  }}, shadowCameraVisible: {set: function () {
    console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
  }}, shadowBias: {set: function (e) {
    console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = e;
  }}, shadowDarkness: {set: function () {
    console.warn("THREE.Light: .shadowDarkness has been removed.");
  }}, shadowMapWidth: {set: function (e) {
    console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = e;
  }}, shadowMapHeight: {set: function (e) {
    console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = e;
  }}}), Object.defineProperties(Hi.prototype, {length: {get: function () {
    return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
  }}, copyIndicesArray: function () {
    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
  }}), Object.assign(cr.prototype, {addIndex: function (e) {
    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(e);
  }, addDrawCall: function (e, t, n) {
    undefined !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(e, t);
  }, clearDrawCalls: function () {
    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
  }, computeTangents: function () {
    console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
  }, computeOffsets: function () {
    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
  }}), Object.defineProperties(cr.prototype, {drawcalls: {get: function () {
    return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
  }}, offsets: {get: function () {
    return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
  }}}), Object.assign($l.prototype, {getArrays: function () {
    console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");
  }, addShapeList: function () {
    console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");
  }, addShape: function () {
    console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");
  }}), Object.defineProperties(Ru.prototype, {dynamic: {set: function () {
    console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
  }}, onUpdate: {value: function () {
    return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
  }}}), Object.defineProperties(Vi.prototype, {wrapAround: {get: function () {
    console.warn("THREE.Material: .wrapAround has been removed.");
  }, set: function () {
    console.warn("THREE.Material: .wrapAround has been removed.");
  }}, overdraw: {get: function () {
    console.warn("THREE.Material: .overdraw has been removed.");
  }, set: function () {
    console.warn("THREE.Material: .overdraw has been removed.");
  }}, wrapRGB: {get: function () {
    return console.warn("THREE.Material: .wrapRGB has been removed."), new Ii;
  }}, shading: {get: function () {
    console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
  }, set: function (e) {
    console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = e === x;
  }}}), Object.defineProperties(yc.prototype, {metal: {get: function () {
    return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), false;
  }, set: function () {
    console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
  }}}), Object.defineProperties(Vr.prototype, {derivatives: {get: function () {
    return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
  }, set: function (e) {
    console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = e;
  }}}), Object.assign(oa.prototype, {clearTarget: function (e, t, n, i) {
    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(e), this.clear(t, n, i);
  }, animate: function (e) {
    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(e);
  }, getCurrentRenderTarget: function () {
    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
  }, getMaxAnisotropy: function () {
    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
  }, getPrecision: function () {
    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
  }, resetGLState: function () {
    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
  }, supportsFloatTextures: function () {
    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
  }, supportsHalfFloatTextures: function () {
    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
  }, supportsStandardDerivatives: function () {
    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
  }, supportsCompressedTextureS3TC: function () {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
  }, supportsCompressedTexturePVRTC: function () {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
  }, supportsBlendMinMax: function () {
    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
  }, supportsVertexTextures: function () {
    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
  }, supportsInstancedArrays: function () {
    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
  }, enableScissorTest: function (e) {
    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(e);
  }, initMaterial: function () {
    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
  }, addPrePlugin: function () {
    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
  }, addPostPlugin: function () {
    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
  }, updateShadowMap: function () {
    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
  }, setFaceCulling: function () {
    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
  }, allocTextureUnit: function () {
    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
  }, setTexture: function () {
    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
  }, setTexture2D: function () {
    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
  }, setTextureCube: function () {
    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
  }, getActiveMipMapLevel: function () {
    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
  }}), Object.defineProperties(oa.prototype, {shadowMapEnabled: {get: function () {
    return this.shadowMap.enabled;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = e;
  }}, shadowMapType: {get: function () {
    return this.shadowMap.type;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = e;
  }}, shadowMapCullFace: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
  }}, context: {get: function () {
    return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
  }}}), Object.defineProperties(Ws.prototype, {cullFace: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
  }}, renderReverseSided: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
  }}, renderSingleSided: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
  }}}), Object.defineProperties(Xr.prototype, {activeCubeFace: {set: function () {
    console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().");
  }}, activeMipMapLevel: {set: function () {
    console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().");
  }}}), Object.defineProperties(Sn.prototype, {wrapS: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = e;
  }}, wrapT: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = e;
  }}, magFilter: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = e;
  }}, minFilter: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = e;
  }}, anisotropy: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = e;
  }}, offset: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = e;
  }}, repeat: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = e;
  }}, format: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = e;
  }}, type: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = e;
  }}, generateMipmaps: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = e;
  }}}), Object.defineProperties(ia.prototype, {standing: {set: function () {
    console.warn("THREE.WebVRManager: .standing has been removed.");
  }}, userHeight: {set: function () {
    console.warn("THREE.WebVRManager: .userHeight has been removed.");
  }}}), hu.prototype.load = function (e) {
    console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
    var t = this;
    return (new Jh).load(e, function (e) {
      t.setBuffer(e);
    }), this;
  }, gu.prototype.getData = function () {
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
  }, Wr.prototype.updateCubeMap = function (e, t) {
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(e, t);
  };
  var cp = {merge: function (e, t, n) {
    var i;
    console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), t.isMesh && (t.matrixAutoUpdate && t.updateMatrix(), i = t.matrix, t = t.geometry), e.merge(t, i, n);
  }, center: function (e) {
    return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), e.center();
  }};
  function hp() {
    console.error("THREE.CanvasRenderer has been removed");
  }
  function up() {
    console.error("THREE.JSONLoader has been removed.");
  }
  _n.crossOrigin = undefined, _n.loadTexture = function (e, t, n, i) {
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    var r = new Kc;
    r.setCrossOrigin(this.crossOrigin);
    var o = r.load(e, n, undefined, i);
    return t && (o.mapping = t), o;
  }, _n.loadTextureCube = function (e, t, n, i) {
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    var r = new Jc;
    r.setCrossOrigin(this.crossOrigin);
    var o = r.load(e, n, undefined, i);
    return t && (o.mapping = t), o;
  }, _n.loadCompressedTexture = function () {
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
  }, _n.loadCompressedTextureCube = function () {
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
  };
  var dp = {createMultiMaterialObject: function () {
    console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
  }, detach: function () {
    console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
  }, attach: function () {
    console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js");
  }};
  function pp() {
    console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js");
  }
}, function (e, t, n) {
  "use strict";
  e.exports = function (e) {
    var t = [];
    return t.toString = function () {
      return this.map(function (t) {
        var n = function (e, t) {
          var n = e[1] || "", i = e[3];
          if (!i) return n;
          if (t && "function" == typeof btoa) {
            var r = (s = i, a = btoa(unescape(encodeURIComponent(JSON.stringify(s)))), l = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a), "/*# ".concat(l, " */")), o = i.sources.map(function (e) {
              return "/*# sourceURL=".concat(i.sourceRoot).concat(e, " */");
            });
            return [n].concat(o).concat([r]).join("\n");
          }
          var s, a, l;
          return [n].join("\n");
        }(t, e);
        return t[2] ? "@media ".concat(t[2], "{").concat(n, "}") : n;
      }).join("");
    }, t.i = function (e, n) {
      "string" == typeof e && (e = [[null, e, ""]]);
      for (var i = {}, r = 0; r < this.length; r++) {
        var o = this[r][0];
        null != o && (i[o] = true);
      }
      for (var s = 0; s < e.length; s++) {
        var a = e[s];
        null != a[0] && i[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = "(".concat(a[2], ") and (").concat(n, ")")), t.push(a));
      }
    }, t;
  };
}, function (e, t, n) {
  "use strict";
  t.__esModule = true, t.extend = a, t.indexOf = function (e, t) {
    for (var n = 0, i = e.length; n < i; n++) if (e[n] === t) return n;
    return -1;
  }, t.escapeExpression = function (e) {
    if ("string" != typeof e) {
      if (e && e.toHTML) return e.toHTML();
      if (null == e) return "";
      if (!e) return e + "";
      e = "" + e;
    }
    if (!o.test(e)) return e;
    return e.replace(r, s);
  }, t.isEmpty = function (e) {
    return !e && 0 !== e || !(!h(e) || 0 !== e.length);
  }, t.createFrame = function (e) {
    var t = a({}, e);
    return t._parent = e, t;
  }, t.blockParams = function (e, t) {
    return e.path = t, e;
  }, t.appendContextPath = function (e, t) {
    return (e ? e + "." : "") + t;
  };
  var i = {"&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;", "=": "&#x3D;"}, r = /[&<>"'`=]/g, o = /[&<>"'`=]/;
  function s(e) {
    return i[e];
  }
  function a(e) {
    for (var t = 1; t < arguments.length; t++) for (var n in arguments[t]) Object.prototype.hasOwnProperty.call(arguments[t], n) && (e[n] = arguments[t][n]);
    return e;
  }
  var l = Object.prototype.toString;
  t.toString = l;
  var c = function (e) {
    return "function" == typeof e;
  };
  "function" == typeof /x/ && (t.isFunction = c = function (e) {
    return "function" == typeof e && "[object Function]" === l.call(e);
  }), t.isFunction = c;
  var h = Array.isArray || function (e) {
    return !(!e || "object" != typeof e) && "[object Array]" === l.call(e);
  };
  t.isArray = h;
}, function (e, t, n) {
  var i, r = n(115), o = n(32), s = n(117), a = n(118), l = n(119);
  "undefined" != typeof ArrayBuffer && (i = n(120));
  var c = "undefined" != typeof navigator && /Android/i.test(navigator.userAgent), h = "undefined" != typeof navigator && /PhantomJS/i.test(navigator.userAgent), u = c || h;
  t.protocol = 3;
  var d = t.packets = {open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6}, p = r(d), m = {type: "error", data: "parser error"}, f = n(121);
  function g(e, t, n) {
    for (var i = new Array(e.length), r = a(e.length, n), o = function (e, n, r) {
      t(n, function (t, n) {
        i[e] = n, r(t, i);
      });
    }, s = 0; s < e.length; s++) o(s, e[s], r);
  }
  t.encodePacket = function (e, n, i, r) {
    "function" == typeof n && (r = n, n = false), "function" == typeof i && (r = i, i = null);
    var o = undefined === e.data ? undefined : e.data.buffer || e.data;
    if ("undefined" != typeof ArrayBuffer && o instanceof ArrayBuffer) return function (e, n, i) {
      if (!n) return t.encodeBase64Packet(e, i);
      var r = e.data, o = new Uint8Array(r), s = new Uint8Array(1 + r.byteLength);
      s[0] = d[e.type];
      for (var a = 0; a < o.length; a++) s[a + 1] = o[a];
      return i(s.buffer);
    }(e, n, r);
    if (undefined !== f && o instanceof f) return function (e, n, i) {
      if (!n) return t.encodeBase64Packet(e, i);
      if (u) return function (e, n, i) {
        if (!n) return t.encodeBase64Packet(e, i);
        var r = new FileReader;
        return r.onload = function () {
          t.encodePacket({type: e.type, data: r.result}, n, true, i);
        }, r.readAsArrayBuffer(e.data);
      }(e, n, i);
      var r = new Uint8Array(1);
      r[0] = d[e.type];
      var o = new f([r.buffer, e.data]);
      return i(o);
    }(e, n, r);
    if (o && o.base64) return function (e, n) {
      var i = "b" + t.packets[e.type] + e.data.data;
      return n(i);
    }(e, r);
    var s = d[e.type];
    return undefined !== e.data && (s += i ? l.encode(String(e.data), {strict: false}) : String(e.data)), r("" + s);
  }, t.encodeBase64Packet = function (e, n) {
    var i, r = "b" + t.packets[e.type];
    if (undefined !== f && e.data instanceof f) {
      var o = new FileReader;
      return o.onload = function () {
        var e = o.result.split(",")[1];
        n(r + e);
      }, o.readAsDataURL(e.data);
    }
    try {
      i = String.fromCharCode.apply(null, new Uint8Array(e.data));
    } catch (t) {
      for (var s = new Uint8Array(e.data), a = new Array(s.length), l = 0; l < s.length; l++) a[l] = s[l];
      i = String.fromCharCode.apply(null, a);
    }
    return r += btoa(i), n(r);
  }, t.decodePacket = function (e, n, i) {
    if (undefined === e) return m;
    if ("string" == typeof e) {
      if ("b" === e.charAt(0)) return t.decodeBase64Packet(e.substr(1), n);
      if (i && false === (e = function (e) {
        try {
          e = l.decode(e, {strict: false});
        } catch (e) {
          return false;
        }
        return e;
      }(e))) return m;
      var r = e.charAt(0);
      return Number(r) == r && p[r] ? e.length > 1 ? {type: p[r], data: e.substring(1)} : {type: p[r]} : m;
    }
    r = new Uint8Array(e)[0];
    var o = s(e, 1);
    return f && "blob" === n && (o = new f([o])), {type: p[r], data: o};
  }, t.decodeBase64Packet = function (e, t) {
    var n = p[e.charAt(0)];
    if (!i) return {type: n, data: {base64: true, data: e.substr(1)}};
    var r = i.decode(e.substr(1));
    return "blob" === t && f && (r = new f([r])), {type: n, data: r};
  }, t.encodePayload = function (e, n, i) {
    "function" == typeof n && (i = n, n = null);
    var r = o(e);
    if (n && r) return f && !u ? t.encodePayloadAsBlob(e, i) : t.encodePayloadAsArrayBuffer(e, i);
    if (!e.length) return i("0:");
    g(e, function (e, i) {
      t.encodePacket(e, !!r && n, false, function (e) {
        i(null, function (e) {
          return e.length + ":" + e;
        }(e));
      });
    }, function (e, t) {
      return i(t.join(""));
    });
  }, t.decodePayload = function (e, n, i) {
    if ("string" != typeof e) return t.decodePayloadAsBinary(e, n, i);
    var r;
    if ("function" == typeof n && (i = n, n = null), "" === e) return i(m, 0, 1);
    for (var o, s, a = "", l = 0, c = e.length; l < c; l++) {
      var h = e.charAt(l);
      if (":" === h) {
        if ("" === a || a != (o = Number(a))) return i(m, 0, 1);
        if (a != (s = e.substr(l + 1, o)).length) return i(m, 0, 1);
        if (s.length) {
          if (r = t.decodePacket(s, n, false), m.type === r.type && m.data === r.data) return i(m, 0, 1);
          if (false === i(r, l + o, c)) return;
        }
        l += o, a = "";
      } else a += h;
    }
    return "" !== a ? i(m, 0, 1) : undefined;
  }, t.encodePayloadAsArrayBuffer = function (e, n) {
    if (!e.length) return n(new ArrayBuffer(0));
    g(e, function (e, n) {
      t.encodePacket(e, true, true, function (e) {
        return n(null, e);
      });
    }, function (e, t) {
      var i = t.reduce(function (e, t) {
        var n;
        return e + (n = "string" == typeof t ? t.length : t.byteLength).toString().length + n + 2;
      }, 0), r = new Uint8Array(i), o = 0;
      return t.forEach(function (e) {
        var t = "string" == typeof e, n = e;
        if (t) {
          for (var i = new Uint8Array(e.length), s = 0; s < e.length; s++) i[s] = e.charCodeAt(s);
          n = i.buffer;
        }
        r[o++] = t ? 0 : 1;
        var a = n.byteLength.toString();
        for (s = 0; s < a.length; s++) r[o++] = parseInt(a[s]);
        r[o++] = 255;
        for (i = new Uint8Array(n), s = 0; s < i.length; s++) r[o++] = i[s];
      }), n(r.buffer);
    });
  }, t.encodePayloadAsBlob = function (e, n) {
    g(e, function (e, n) {
      t.encodePacket(e, true, true, function (e) {
        var t = new Uint8Array(1);
        if (t[0] = 1, "string" == typeof e) {
          for (var i = new Uint8Array(e.length), r = 0; r < e.length; r++) i[r] = e.charCodeAt(r);
          e = i.buffer, t[0] = 0;
        }
        var o = (e instanceof ArrayBuffer ? e.byteLength : e.size).toString(), s = new Uint8Array(o.length + 1);
        for (r = 0; r < o.length; r++) s[r] = parseInt(o[r]);
        if (s[o.length] = 255, f) {
          var a = new f([t.buffer, s.buffer, e]);
          n(null, a);
        }
      });
    }, function (e, t) {
      return n(new f(t));
    });
  }, t.decodePayloadAsBinary = function (e, n, i) {
    "function" == typeof n && (i = n, n = null);
    for (var r = e, o = []; r.byteLength > 0;) {
      for (var a = new Uint8Array(r), l = 0 === a[0], c = "", h = 1; 255 !== a[h]; h++) {
        if (c.length > 310) return i(m, 0, 1);
        c += a[h];
      }
      r = s(r, 2 + c.length), c = parseInt(c);
      var u = s(r, 0, c);
      if (l) try {
        u = String.fromCharCode.apply(null, new Uint8Array(u));
      } catch (e) {
        var d = new Uint8Array(u);
        u = "";
        for (h = 0; h < d.length; h++) u += String.fromCharCode(d[h]);
      }
      o.push(u), r = s(r, c);
    }
    var p = o.length;
    o.forEach(function (e, r) {
      i(t.decodePacket(e, n, true), r, p);
    });
  };
}, function (e, t, n) {
  var i = {"./en.json": 146, "./ru.json": 147};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 4;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i = ["description", "fileName", "lineNumber", "message", "name", "number", "stack"];
  function r(e, t) {
    var n = t && t.loc, o = undefined, s = undefined;
    n && (e += " - " + (o = n.start.line) + ":" + (s = n.start.column));
    for (var a = Error.prototype.constructor.call(this, e), l = 0; l < i.length; l++) this[i[l]] = a[i[l]];
    Error.captureStackTrace && Error.captureStackTrace(this, r);
    try {
      n && (this.lineNumber = o, Object.defineProperty ? Object.defineProperty(this, "column", {value: s, enumerable: true}) : this.column = s);
    } catch (e) {}
  }
  r.prototype = new Error, t.default = r, e.exports = t.default;
}, function (e, t) {
  var n;
  n = function () {
    return this;
  }();
  try {
    n = n || new Function("return this")();
  } catch (e) {
    "object" == typeof window && (n = window);
  }
  e.exports = n;
}, function (e, t, n) {
  (function (i) {
    t.log = function (...e) {
      return "object" == typeof console && console.log && console.log(...e);
    }, t.formatArgs = function (t) {
      if (t[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff), !this.useColors) return;
      const n = "color: " + this.color;
      t.splice(1, 0, n, "color: inherit");
      let i = 0, r = 0;
      t[0].replace(/%[a-zA-Z%]/g, e => {
        "%%" !== e && (i++, "%c" === e && (r = i));
      }), t.splice(r, 0, n);
    }, t.save = function (e) {
      try {
        e ? t.storage.setItem("debug", e) : t.storage.removeItem("debug");
      } catch (e) {}
    }, t.load = function () {
      let e;
      try {
        e = t.storage.getItem("debug");
      } catch (e) {}
      !e && undefined !== i && "env" in i && (e = i.env.DEBUG);
      return e;
    }, t.useColors = function () {
      if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs)) return true;
      if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return false;
      return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }, t.storage = function () {
      try {
        return localStorage;
      } catch (e) {}
    }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.exports = n(101)(t);
    const {formatters: r} = e.exports;
    r.j = function (e) {
      try {
        return JSON.stringify(e);
      } catch (e) {
        return "[UnexpectedJSONParseError]: " + e.message;
      }
    };
  }.call(this, n(16)));
}, function (e, t, n) {
  "use strict";
  (function (e) {
    var i = n(108), r = n(109), o = n(110);
    function s() {
      return l.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
    }
    function a(e, t) {
      if (s() < t) throw new RangeError("Invalid typed array length");
      return l.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = l.prototype : (null === e && (e = new l(t)), e.length = t), e;
    }
    function l(e, t, n) {
      if (!(l.TYPED_ARRAY_SUPPORT || this instanceof l)) return new l(e, t, n);
      if ("number" == typeof e) {
        if ("string" == typeof t) throw new Error("If encoding is specified then the first argument must be a string");
        return u(this, e);
      }
      return c(this, e, t, n);
    }
    function c(e, t, n, i) {
      if ("number" == typeof t) throw new TypeError('"value" argument must not be a number');
      return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function (e, t, n, i) {
        if (t.byteLength, n < 0 || t.byteLength < n) throw new RangeError("'offset' is out of bounds");
        if (t.byteLength < n + (i || 0)) throw new RangeError("'length' is out of bounds");
        t = undefined === n && undefined === i ? new Uint8Array(t) : undefined === i ? new Uint8Array(t, n) : new Uint8Array(t, n, i);
        l.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = l.prototype : e = d(e, t);
        return e;
      }(e, t, n, i) : "string" == typeof t ? function (e, t, n) {
        "string" == typeof n && "" !== n || (n = "utf8");
        if (!l.isEncoding(n)) throw new TypeError('"encoding" must be a valid string encoding');
        var i = 0 | m(t, n), r = (e = a(e, i)).write(t, n);
        r !== i && (e = e.slice(0, r));
        return e;
      }(e, t, n) : function (e, t) {
        if (l.isBuffer(t)) {
          var n = 0 | p(t.length);
          return 0 === (e = a(e, n)).length ? e : (t.copy(e, 0, 0, n), e);
        }
        if (t) {
          if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length" in t) return "number" != typeof t.length || (i = t.length) != i ? a(e, 0) : d(e, t);
          if ("Buffer" === t.type && o(t.data)) return d(e, t.data);
        }
        var i;
        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
      }(e, t);
    }
    function h(e) {
      if ("number" != typeof e) throw new TypeError('"size" argument must be a number');
      if (e < 0) throw new RangeError('"size" argument must not be negative');
    }
    function u(e, t) {
      if (h(t), e = a(e, t < 0 ? 0 : 0 | p(t)), !l.TYPED_ARRAY_SUPPORT) for (var n = 0; n < t; ++n) e[n] = 0;
      return e;
    }
    function d(e, t) {
      var n = t.length < 0 ? 0 : 0 | p(t.length);
      e = a(e, n);
      for (var i = 0; i < n; i += 1) e[i] = 255 & t[i];
      return e;
    }
    function p(e) {
      if (e >= s()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s().toString(16) + " bytes");
      return 0 | e;
    }
    function m(e, t) {
      if (l.isBuffer(e)) return e.length;
      if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength;
      "string" != typeof e && (e = "" + e);
      var n = e.length;
      if (0 === n) return 0;
      for (var i = false;;) switch (t) {
        case "ascii":
        case "latin1":
        case "binary":
          return n;
        case "utf8":
        case "utf-8":
        case undefined:
          return U(e).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return 2 * n;
        case "hex":
          return n >>> 1;
        case "base64":
          return V(e).length;
        default:
          if (i) return U(e).length;
          t = ("" + t).toLowerCase(), i = true;
      }
    }
    function f(e, t, n) {
      var i = false;
      if ((undefined === t || t < 0) && (t = 0), t > this.length) return "";
      if ((undefined === n || n > this.length) && (n = this.length), n <= 0) return "";
      if ((n >>>= 0) <= (t >>>= 0)) return "";
      for (e || (e = "utf8");;) switch (e) {
        case "hex":
          return k(this, t, n);
        case "utf8":
        case "utf-8":
          return T(this, t, n);
        case "ascii":
          return M(this, t, n);
        case "latin1":
        case "binary":
          return C(this, t, n);
        case "base64":
          return q(this, t, n);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return R(this, t, n);
        default:
          if (i) throw new TypeError("Unknown encoding: " + e);
          e = (e + "").toLowerCase(), i = true;
      }
    }
    function g(e, t, n) {
      var i = e[t];
      e[t] = e[n], e[n] = i;
    }
    function v(e, t, n, i, r) {
      if (0 === e.length) return -1;
      if ("string" == typeof n ? (i = n, n = 0) : n > 2147483647 ? n = 2147483647 : n < -2147483648 && (n = -2147483648), n = +n, isNaN(n) && (n = r ? 0 : e.length - 1), n < 0 && (n = e.length + n), n >= e.length) {
        if (r) return -1;
        n = e.length - 1;
      } else if (n < 0) {
        if (!r) return -1;
        n = 0;
      }
      if ("string" == typeof t && (t = l.from(t, i)), l.isBuffer(t)) return 0 === t.length ? -1 : y(e, t, n, i, r);
      if ("number" == typeof t) return t &= 255, l.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? r ? Uint8Array.prototype.indexOf.call(e, t, n) : Uint8Array.prototype.lastIndexOf.call(e, t, n) : y(e, [t], n, i, r);
      throw new TypeError("val must be string, number or Buffer");
    }
    function y(e, t, n, i, r) {
      var o, s = 1, a = e.length, l = t.length;
      if (undefined !== i && ("ucs2" === (i = String(i).toLowerCase()) || "ucs-2" === i || "utf16le" === i || "utf-16le" === i)) {
        if (e.length < 2 || t.length < 2) return -1;
        s = 2, a /= 2, l /= 2, n /= 2;
      }
      function c(e, t) {
        return 1 === s ? e[t] : e.readUInt16BE(t * s);
      }
      if (r) {
        var h = -1;
        for (o = n; o < a; o++) if (c(e, o) === c(t, -1 === h ? 0 : o - h)) {
          if (-1 === h && (h = o), o - h + 1 === l) return h * s;
        } else -1 !== h && (o -= o - h), h = -1;
      } else for (n + l > a && (n = a - l), o = n; o >= 0; o--) {
        for (var u = true, d = 0; d < l; d++) if (c(e, o + d) !== c(t, d)) {
          u = false;
          break;
        }
        if (u) return o;
      }
      return -1;
    }
    function _(e, t, n, i) {
      n = Number(n) || 0;
      var r = e.length - n;
      i ? (i = Number(i)) > r && (i = r) : i = r;
      var o = t.length;
      if (o % 2 != 0) throw new TypeError("Invalid hex string");
      i > o / 2 && (i = o / 2);
      for (var s = 0; s < i; ++s) {
        var a = parseInt(t.substr(2 * s, 2), 16);
        if (isNaN(a)) return s;
        e[n + s] = a;
      }
      return s;
    }
    function x(e, t, n, i) {
      return G(U(t, e.length - n), e, n, i);
    }
    function b(e, t, n, i) {
      return G(function (e) {
        for (var t = [], n = 0; n < e.length; ++n) t.push(255 & e.charCodeAt(n));
        return t;
      }(t), e, n, i);
    }
    function w(e, t, n, i) {
      return b(e, t, n, i);
    }
    function S(e, t, n, i) {
      return G(V(t), e, n, i);
    }
    function E(e, t, n, i) {
      return G(function (e, t) {
        for (var n, i, r, o = [], s = 0; s < e.length && !((t -= 2) < 0); ++s) n = e.charCodeAt(s), i = n >> 8, r = n % 256, o.push(r), o.push(i);
        return o;
      }(t, e.length - n), e, n, i);
    }
    function q(e, t, n) {
      return 0 === t && n === e.length ? i.fromByteArray(e) : i.fromByteArray(e.slice(t, n));
    }
    function T(e, t, n) {
      n = Math.min(e.length, n);
      for (var i = [], r = t; r < n;) {
        var o, s, a, l, c = e[r], h = null, u = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
        if (r + u <= n) switch (u) {
          case 1:
            c < 128 && (h = c);
            break;
          case 2:
            128 == (192 & (o = e[r + 1])) && (l = (31 & c) << 6 | 63 & o) > 127 && (h = l);
            break;
          case 3:
            o = e[r + 1], s = e[r + 2], 128 == (192 & o) && 128 == (192 & s) && (l = (15 & c) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (l < 55296 || l > 57343) && (h = l);
            break;
          case 4:
            o = e[r + 1], s = e[r + 2], a = e[r + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (l = (15 & c) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && l < 1114112 && (h = l);
        }
        null === h ? (h = 65533, u = 1) : h > 65535 && (h -= 65536, i.push(h >>> 10 & 1023 | 55296), h = 56320 | 1023 & h), i.push(h), r += u;
      }
      return function (e) {
        var t = e.length;
        if (t <= A) return String.fromCharCode.apply(String, e);
        var n = "", i = 0;
        for (; i < t;) n += String.fromCharCode.apply(String, e.slice(i, i += A));
        return n;
      }(i);
    }
    t.Buffer = l, t.SlowBuffer = function (e) {
      +e != e && (e = 0);
      return l.alloc(+e);
    }, t.INSPECT_MAX_BYTES = 50, l.TYPED_ARRAY_SUPPORT = undefined !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : function () {
      try {
        var e = new Uint8Array(1);
        return e.__proto__ = {__proto__: Uint8Array.prototype, foo: function () {
          return 42;
        }}, 42 === e.foo() && "function" == typeof e.subarray && 0 === e.subarray(1, 1).byteLength;
      } catch (e) {
        return false;
      }
    }(), t.kMaxLength = s(), l.poolSize = 8192, l._augment = function (e) {
      return e.__proto__ = l.prototype, e;
    }, l.from = function (e, t, n) {
      return c(null, e, t, n);
    }, l.TYPED_ARRAY_SUPPORT && (l.prototype.__proto__ = Uint8Array.prototype, l.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && l[Symbol.species] === l && Object.defineProperty(l, Symbol.species, {value: null, configurable: true})), l.alloc = function (e, t, n) {
      return function (e, t, n, i) {
        return h(t), t <= 0 ? a(e, t) : undefined !== n ? "string" == typeof i ? a(e, t).fill(n, i) : a(e, t).fill(n) : a(e, t);
      }(null, e, t, n);
    }, l.allocUnsafe = function (e) {
      return u(null, e);
    }, l.allocUnsafeSlow = function (e) {
      return u(null, e);
    }, l.isBuffer = function (e) {
      return !(null == e || !e._isBuffer);
    }, l.compare = function (e, t) {
      if (!l.isBuffer(e) || !l.isBuffer(t)) throw new TypeError("Arguments must be Buffers");
      if (e === t) return 0;
      for (var n = e.length, i = t.length, r = 0, o = Math.min(n, i); r < o; ++r) if (e[r] !== t[r]) {
        n = e[r], i = t[r];
        break;
      }
      return n < i ? -1 : i < n ? 1 : 0;
    }, l.isEncoding = function (e) {
      switch (String(e).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    }, l.concat = function (e, t) {
      if (!o(e)) throw new TypeError('"list" argument must be an Array of Buffers');
      if (0 === e.length) return l.alloc(0);
      var n;
      if (undefined === t) for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
      var i = l.allocUnsafe(t), r = 0;
      for (n = 0; n < e.length; ++n) {
        var s = e[n];
        if (!l.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
        s.copy(i, r), r += s.length;
      }
      return i;
    }, l.byteLength = m, l.prototype._isBuffer = true, l.prototype.swap16 = function () {
      var e = this.length;
      if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (var t = 0; t < e; t += 2) g(this, t, t + 1);
      return this;
    }, l.prototype.swap32 = function () {
      var e = this.length;
      if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (var t = 0; t < e; t += 4) g(this, t, t + 3), g(this, t + 1, t + 2);
      return this;
    }, l.prototype.swap64 = function () {
      var e = this.length;
      if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (var t = 0; t < e; t += 8) g(this, t, t + 7), g(this, t + 1, t + 6), g(this, t + 2, t + 5), g(this, t + 3, t + 4);
      return this;
    }, l.prototype.toString = function () {
      var e = 0 | this.length;
      return 0 === e ? "" : 0 === arguments.length ? T(this, 0, e) : f.apply(this, arguments);
    }, l.prototype.equals = function (e) {
      if (!l.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
      return this === e || 0 === l.compare(this, e);
    }, l.prototype.inspect = function () {
      var e = "", n = t.INSPECT_MAX_BYTES;
      return this.length > 0 && (e = this.toString("hex", 0, n).match(/.{2}/g).join(" "), this.length > n && (e += " ... ")), "<Buffer " + e + ">";
    }, l.prototype.compare = function (e, t, n, i, r) {
      if (!l.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
      if (undefined === t && (t = 0), undefined === n && (n = e ? e.length : 0), undefined === i && (i = 0), undefined === r && (r = this.length), t < 0 || n > e.length || i < 0 || r > this.length) throw new RangeError("out of range index");
      if (i >= r && t >= n) return 0;
      if (i >= r) return -1;
      if (t >= n) return 1;
      if (this === e) return 0;
      for (var o = (r >>>= 0) - (i >>>= 0), s = (n >>>= 0) - (t >>>= 0), a = Math.min(o, s), c = this.slice(i, r), h = e.slice(t, n), u = 0; u < a; ++u) if (c[u] !== h[u]) {
        o = c[u], s = h[u];
        break;
      }
      return o < s ? -1 : s < o ? 1 : 0;
    }, l.prototype.includes = function (e, t, n) {
      return -1 !== this.indexOf(e, t, n);
    }, l.prototype.indexOf = function (e, t, n) {
      return v(this, e, t, n, true);
    }, l.prototype.lastIndexOf = function (e, t, n) {
      return v(this, e, t, n, false);
    }, l.prototype.write = function (e, t, n, i) {
      if (undefined === t) i = "utf8", n = this.length, t = 0; else if (undefined === n && "string" == typeof t) i = t, n = this.length, t = 0; else {
        if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        t |= 0, isFinite(n) ? (n |= 0, undefined === i && (i = "utf8")) : (i = n, n = undefined);
      }
      var r = this.length - t;
      if ((undefined === n || n > r) && (n = r), e.length > 0 && (n < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
      i || (i = "utf8");
      for (var o = false;;) switch (i) {
        case "hex":
          return _(this, e, t, n);
        case "utf8":
        case "utf-8":
          return G(U(e, this.length - t), this, t, n);
        case "ascii":
          return b(this, e, t, n);
        case "latin1":
        case "binary":
          return b(this, e, t, n);
        case "base64":
          return G(V(e), this, t, n);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return E(this, e, t, n);
        default:
          if (o) throw new TypeError("Unknown encoding: " + i);
          i = ("" + i).toLowerCase(), o = true;
      }
    }, l.prototype.toJSON = function () {
      return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)};
    };
    var A = 4096;
    function M(e, t, n) {
      var i = "";
      n = Math.min(e.length, n);
      for (var r = t; r < n; ++r) i += String.fromCharCode(127 & e[r]);
      return i;
    }
    function C(e, t, n) {
      var i = "";
      n = Math.min(e.length, n);
      for (var r = t; r < n; ++r) i += String.fromCharCode(e[r]);
      return i;
    }
    function k(e, t, n) {
      var i = e.length;
      (!t || t < 0) && (t = 0), (!n || n < 0 || n > i) && (n = i);
      for (var r = "", o = t; o < n; ++o) r += N(e[o]);
      return r;
    }
    function R(e, t, n) {
      for (var i = e.slice(t, n), r = "", o = 0; o < i.length; o += 2) r += String.fromCharCode(i[o] + 256 * i[o + 1]);
      return r;
    }
    function L(e, t, n) {
      if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
      if (e + t > n) throw new RangeError("Trying to access beyond buffer length");
    }
    function P(e, t, n, i, r, o) {
      if (!l.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (t > r || t < o) throw new RangeError('"value" argument is out of bounds');
      if (n + i > e.length) throw new RangeError("Index out of range");
    }
    function D(e, t, n, i) {
      t < 0 && (t = 65535 + t + 1);
      for (var r = 0, o = Math.min(e.length - n, 2); r < o; ++r) e[n + r] = (t & 255 << 8 * (i ? r : 1 - r)) >>> 8 * (i ? r : 1 - r);
    }
    function O(e, t, n, i) {
      t < 0 && (t = 4294967295 + t + 1);
      for (var r = 0, o = Math.min(e.length - n, 4); r < o; ++r) e[n + r] = t >>> 8 * (i ? r : 3 - r) & 255;
    }
    function I(e, t, n, i, r, o) {
      if (n + i > e.length) throw new RangeError("Index out of range");
      if (n < 0) throw new RangeError("Index out of range");
    }
    function B(e, t, n, i, o) {
      return o || I(e, 0, n, 4), r.write(e, t, n, i, 23, 4), n + 4;
    }
    function F(e, t, n, i, o) {
      return o || I(e, 0, n, 8), r.write(e, t, n, i, 52, 8), n + 8;
    }
    l.prototype.slice = function (e, t) {
      var n, i = this.length;
      if ((e = ~~e) < 0 ? (e += i) < 0 && (e = 0) : e > i && (e = i), (t = undefined === t ? i : ~~t) < 0 ? (t += i) < 0 && (t = 0) : t > i && (t = i), t < e && (t = e), l.TYPED_ARRAY_SUPPORT) (n = this.subarray(e, t)).__proto__ = l.prototype; else {
        var r = t - e;
        n = new l(r, undefined);
        for (var o = 0; o < r; ++o) n[o] = this[o + e];
      }
      return n;
    }, l.prototype.readUIntLE = function (e, t, n) {
      e |= 0, t |= 0, n || L(e, t, this.length);
      for (var i = this[e], r = 1, o = 0; ++o < t && (r *= 256);) i += this[e + o] * r;
      return i;
    }, l.prototype.readUIntBE = function (e, t, n) {
      e |= 0, t |= 0, n || L(e, t, this.length);
      for (var i = this[e + --t], r = 1; t > 0 && (r *= 256);) i += this[e + --t] * r;
      return i;
    }, l.prototype.readUInt8 = function (e, t) {
      return t || L(e, 1, this.length), this[e];
    }, l.prototype.readUInt16LE = function (e, t) {
      return t || L(e, 2, this.length), this[e] | this[e + 1] << 8;
    }, l.prototype.readUInt16BE = function (e, t) {
      return t || L(e, 2, this.length), this[e] << 8 | this[e + 1];
    }, l.prototype.readUInt32LE = function (e, t) {
      return t || L(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];
    }, l.prototype.readUInt32BE = function (e, t) {
      return t || L(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
    }, l.prototype.readIntLE = function (e, t, n) {
      e |= 0, t |= 0, n || L(e, t, this.length);
      for (var i = this[e], r = 1, o = 0; ++o < t && (r *= 256);) i += this[e + o] * r;
      return i >= (r *= 128) && (i -= Math.pow(2, 8 * t)), i;
    }, l.prototype.readIntBE = function (e, t, n) {
      e |= 0, t |= 0, n || L(e, t, this.length);
      for (var i = t, r = 1, o = this[e + --i]; i > 0 && (r *= 256);) o += this[e + --i] * r;
      return o >= (r *= 128) && (o -= Math.pow(2, 8 * t)), o;
    }, l.prototype.readInt8 = function (e, t) {
      return t || L(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
    }, l.prototype.readInt16LE = function (e, t) {
      t || L(e, 2, this.length);
      var n = this[e] | this[e + 1] << 8;
      return 32768 & n ? 4294901760 | n : n;
    }, l.prototype.readInt16BE = function (e, t) {
      t || L(e, 2, this.length);
      var n = this[e + 1] | this[e] << 8;
      return 32768 & n ? 4294901760 | n : n;
    }, l.prototype.readInt32LE = function (e, t) {
      return t || L(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
    }, l.prototype.readInt32BE = function (e, t) {
      return t || L(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
    }, l.prototype.readFloatLE = function (e, t) {
      return t || L(e, 4, this.length), r.read(this, e, true, 23, 4);
    }, l.prototype.readFloatBE = function (e, t) {
      return t || L(e, 4, this.length), r.read(this, e, false, 23, 4);
    }, l.prototype.readDoubleLE = function (e, t) {
      return t || L(e, 8, this.length), r.read(this, e, true, 52, 8);
    }, l.prototype.readDoubleBE = function (e, t) {
      return t || L(e, 8, this.length), r.read(this, e, false, 52, 8);
    }, l.prototype.writeUIntLE = function (e, t, n, i) {
      (e = +e, t |= 0, n |= 0, i) || P(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
      var r = 1, o = 0;
      for (this[t] = 255 & e; ++o < n && (r *= 256);) this[t + o] = e / r & 255;
      return t + n;
    }, l.prototype.writeUIntBE = function (e, t, n, i) {
      (e = +e, t |= 0, n |= 0, i) || P(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
      var r = n - 1, o = 1;
      for (this[t + r] = 255 & e; --r >= 0 && (o *= 256);) this[t + r] = e / o & 255;
      return t + n;
    }, l.prototype.writeUInt8 = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 1, 255, 0), l.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), this[t] = 255 & e, t + 1;
    }, l.prototype.writeUInt16LE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 2, 65535, 0), l.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : D(this, e, t, true), t + 2;
    }, l.prototype.writeUInt16BE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 2, 65535, 0), l.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : D(this, e, t, false), t + 2;
    }, l.prototype.writeUInt32LE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 4, 4294967295, 0), l.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : O(this, e, t, true), t + 4;
    }, l.prototype.writeUInt32BE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 4, 4294967295, 0), l.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : O(this, e, t, false), t + 4;
    }, l.prototype.writeIntLE = function (e, t, n, i) {
      if (e = +e, t |= 0, !i) {
        var r = Math.pow(2, 8 * n - 1);
        P(this, e, t, n, r - 1, -r);
      }
      var o = 0, s = 1, a = 0;
      for (this[t] = 255 & e; ++o < n && (s *= 256);) e < 0 && 0 === a && 0 !== this[t + o - 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255;
      return t + n;
    }, l.prototype.writeIntBE = function (e, t, n, i) {
      if (e = +e, t |= 0, !i) {
        var r = Math.pow(2, 8 * n - 1);
        P(this, e, t, n, r - 1, -r);
      }
      var o = n - 1, s = 1, a = 0;
      for (this[t + o] = 255 & e; --o >= 0 && (s *= 256);) e < 0 && 0 === a && 0 !== this[t + o + 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255;
      return t + n;
    }, l.prototype.writeInt8 = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 1, 127, -128), l.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1;
    }, l.prototype.writeInt16LE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 2, 32767, -32768), l.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : D(this, e, t, true), t + 2;
    }, l.prototype.writeInt16BE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 2, 32767, -32768), l.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : D(this, e, t, false), t + 2;
    }, l.prototype.writeInt32LE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 4, 2147483647, -2147483648), l.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : O(this, e, t, true), t + 4;
    }, l.prototype.writeInt32BE = function (e, t, n) {
      return e = +e, t |= 0, n || P(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), l.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : O(this, e, t, false), t + 4;
    }, l.prototype.writeFloatLE = function (e, t, n) {
      return n || I(this, 0, t, 4), r.write(this, e, t, true, 23, 4), t + 4;
    }, l.prototype.writeFloatBE = function (e, t, n) {
      return n || I(this, 0, t, 4), r.write(this, e, t, false, 23, 4), t + 4;
    }, l.prototype.writeDoubleLE = function (e, t, n) {
      return n || I(this, 0, t, 8), r.write(this, e, t, true, 52, 8), t + 8;
    }, l.prototype.writeDoubleBE = function (e, t, n) {
      return n || I(this, 0, t, 8), r.write(this, e, t, false, 52, 8), t + 8;
    }, l.prototype.copy = function (e, t, n, i) {
      if (n || (n = 0), i || 0 === i || (i = this.length), t >= e.length && (t = e.length), t || (t = 0), i > 0 && i < n && (i = n), i === n) return 0;
      if (0 === e.length || 0 === this.length) return 0;
      if (t < 0) throw new RangeError("targetStart out of bounds");
      if (n < 0 || n >= this.length) throw new RangeError("sourceStart out of bounds");
      if (i < 0) throw new RangeError("sourceEnd out of bounds");
      i > this.length && (i = this.length), e.length - t < i - n && (i = e.length - t + n);
      var r, o = i - n;
      if (this === e && n < t && t < i) for (r = o - 1; r >= 0; --r) e[r + t] = this[r + n]; else if (o < 1e3 || !l.TYPED_ARRAY_SUPPORT) for (r = 0; r < o; ++r) e[r + t] = this[r + n]; else Uint8Array.prototype.set.call(e, this.subarray(n, n + o), t);
      return o;
    }, l.prototype.fill = function (e, t, n, i) {
      if ("string" == typeof e) {
        if ("string" == typeof t ? (i = t, t = 0, n = this.length) : "string" == typeof n && (i = n, n = this.length), 1 === e.length) {
          var r = e.charCodeAt(0);
          r < 256 && (e = r);
        }
        if (undefined !== i && "string" != typeof i) throw new TypeError("encoding must be a string");
        if ("string" == typeof i && !l.isEncoding(i)) throw new TypeError("Unknown encoding: " + i);
      } else "number" == typeof e && (e &= 255);
      if (t < 0 || this.length < t || this.length < n) throw new RangeError("Out of range index");
      if (n <= t) return this;
      var o;
      if (t >>>= 0, n = undefined === n ? this.length : n >>> 0, e || (e = 0), "number" == typeof e) for (o = t; o < n; ++o) this[o] = e; else {
        var s = l.isBuffer(e) ? e : U(new l(e, i).toString()), a = s.length;
        for (o = 0; o < n - t; ++o) this[o + t] = s[o % a];
      }
      return this;
    };
    var z = /[^+\/0-9A-Za-z-_]/g;
    function N(e) {
      return e < 16 ? "0" + e.toString(16) : e.toString(16);
    }
    function U(e, t) {
      var n;
      t = t || Infinity;
      for (var i = e.length, r = null, o = [], s = 0; s < i; ++s) {
        if ((n = e.charCodeAt(s)) > 55295 && n < 57344) {
          if (!r) {
            if (n > 56319) {
              (t -= 3) > -1 && o.push(239, 191, 189);
              continue;
            }
            if (s + 1 === i) {
              (t -= 3) > -1 && o.push(239, 191, 189);
              continue;
            }
            r = n;
            continue;
          }
          if (n < 56320) {
            (t -= 3) > -1 && o.push(239, 191, 189), r = n;
            continue;
          }
          n = 65536 + (r - 55296 << 10 | n - 56320);
        } else r && (t -= 3) > -1 && o.push(239, 191, 189);
        if (r = null, n < 128) {
          if ((t -= 1) < 0) break;
          o.push(n);
        } else if (n < 2048) {
          if ((t -= 2) < 0) break;
          o.push(n >> 6 | 192, 63 & n | 128);
        } else if (n < 65536) {
          if ((t -= 3) < 0) break;
          o.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128);
        } else {
          if (!(n < 1114112)) throw new Error("Invalid code point");
          if ((t -= 4) < 0) break;
          o.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128);
        }
      }
      return o;
    }
    function V(e) {
      return i.toByteArray(function (e) {
        if ((e = function (e) {
          return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");
        }(e).replace(z, "")).length < 2) return "";
        for (; e.length % 4 != 0;) e += "=";
        return e;
      }(e));
    }
    function G(e, t, n, i) {
      for (var r = 0; r < i && !(r + n >= t.length || r >= e.length); ++r) t[r + n] = e[r];
      return r;
    }
  }.call(this, n(6)));
}, function (e, t) {
  t.encode = function (e) {
    var t = "";
    for (var n in e) e.hasOwnProperty(n) && (t.length && (t += "&"), t += encodeURIComponent(n) + "=" + encodeURIComponent(e[n]));
    return t;
  }, t.decode = function (e) {
    for (var t = {}, n = e.split("&"), i = 0, r = n.length; i < r; i++) {
      var o = n[i].split("=");
      t[decodeURIComponent(o[0])] = decodeURIComponent(o[1]);
    }
    return t;
  };
}, function (e, t) {
  e.exports = function (e, t) {
    var n = function () {};
    n.prototype = t.prototype, e.prototype = new n, e.prototype.constructor = e;
  };
}, function (e, t, n) {
  (function (i) {
    t.log = function (...e) {
      return "object" == typeof console && console.log && console.log(...e);
    }, t.formatArgs = function (t) {
      if (t[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff), !this.useColors) return;
      const n = "color: " + this.color;
      t.splice(1, 0, n, "color: inherit");
      let i = 0, r = 0;
      t[0].replace(/%[a-zA-Z%]/g, e => {
        "%%" !== e && (i++, "%c" === e && (r = i));
      }), t.splice(r, 0, n);
    }, t.save = function (e) {
      try {
        e ? t.storage.setItem("debug", e) : t.storage.removeItem("debug");
      } catch (e) {}
    }, t.load = function () {
      let e;
      try {
        e = t.storage.getItem("debug");
      } catch (e) {}
      !e && undefined !== i && "env" in i && (e = i.env.DEBUG);
      return e;
    }, t.useColors = function () {
      if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs)) return true;
      if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return false;
      return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }, t.storage = function () {
      try {
        return localStorage;
      } catch (e) {}
    }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.exports = n(122)(t);
    const {formatters: r} = e.exports;
    r.j = function (e) {
      try {
        return JSON.stringify(e);
      } catch (e) {
        return "[UnexpectedJSONParseError]: " + e.message;
      }
    };
  }.call(this, n(16)));
}, function (e, t, n) {
  var i = {"./en.json": 144, "./ru.json": 145};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 12;
}, function (e, t, n) {
  "use strict";
  var i = {};
  !function (e, t) {
    function n() {}
    e.inherit = function (e, t) {
      var i = e;
      n.prototype = t.prototype, e.prototype = new n, e.prototype.constructor = i;
    }, e.generateCallback = function (e, t) {
      return function () {
        t.apply(e, arguments);
      };
    }, e.NVector = function (e) {
      undefined === e && (e = 0);
      for (var t = new Array(e || 0), n = 0; n < e; ++n) t[n] = 0;
      return t;
    }, e.is = function (e, t) {
      return null !== e && (t instanceof Function && e instanceof t || !(null == e.constructor.__implements || !e.constructor.__implements[t]));
    }, e.parseUInt = function (e) {
      return Math.abs(parseInt(e));
    };
  }(i);
  var r, o, s, a, l, c, h, u, d, p, m, f, g, v, y, _, x, b, w, S, E, q, T, A, M, C, k, R, L, P, D, O, I, B, F, z, N, U, V, G, H = Array, j = i.NVector;
  for (undefined === i && (i = {}), undefined === i.Collision && (i.Collision = {}), undefined === i.Collision.Shapes && (i.Collision.Shapes = {}), undefined === i.Common && (i.Common = {}), undefined === i.Common.Math && (i.Common.Math = {}), undefined === i.Dynamics && (i.Dynamics = {}), undefined === i.Dynamics.Contacts && (i.Dynamics.Contacts = {}), undefined === i.Dynamics.Controllers && (i.Dynamics.Controllers = {}), undefined === i.Dynamics.Joints && (i.Dynamics.Joints = {}), i.Collision.IBroadPhase = "Box2D.Collision.IBroadPhase", i.Collision.b2AABB = function e() {
    e.b2AABB.apply(this, arguments);
  }, i.Collision.b2Bound = function e() {
    e.b2Bound.apply(this, arguments);
  }, i.Collision.b2BoundValues = function e() {
    e.b2BoundValues.apply(this, arguments), this.constructor === e && this.b2BoundValues.apply(this, arguments);
  }, i.Collision.b2Collision = function e() {
    e.b2Collision.apply(this, arguments);
  }, i.Collision.b2ContactID = function e() {
    e.b2ContactID.apply(this, arguments), this.constructor === e && this.b2ContactID.apply(this, arguments);
  }, i.Collision.b2ContactPoint = function e() {
    e.b2ContactPoint.apply(this, arguments);
  }, i.Collision.b2Distance = function e() {
    e.b2Distance.apply(this, arguments);
  }, i.Collision.b2DistanceInput = function e() {
    e.b2DistanceInput.apply(this, arguments);
  }, i.Collision.b2DistanceOutput = function e() {
    e.b2DistanceOutput.apply(this, arguments);
  }, i.Collision.b2DistanceProxy = function e() {
    e.b2DistanceProxy.apply(this, arguments);
  }, i.Collision.b2DynamicTree = function e() {
    e.b2DynamicTree.apply(this, arguments), this.constructor === e && this.b2DynamicTree.apply(this, arguments);
  }, i.Collision.b2DynamicTreeBroadPhase = function e() {
    e.b2DynamicTreeBroadPhase.apply(this, arguments);
  }, i.Collision.b2DynamicTreeNode = function e() {
    e.b2DynamicTreeNode.apply(this, arguments);
  }, i.Collision.b2DynamicTreePair = function e() {
    e.b2DynamicTreePair.apply(this, arguments);
  }, i.Collision.b2Manifold = function e() {
    e.b2Manifold.apply(this, arguments), this.constructor === e && this.b2Manifold.apply(this, arguments);
  }, i.Collision.b2ManifoldPoint = function e() {
    e.b2ManifoldPoint.apply(this, arguments), this.constructor === e && this.b2ManifoldPoint.apply(this, arguments);
  }, i.Collision.b2Point = function e() {
    e.b2Point.apply(this, arguments);
  }, i.Collision.b2RayCastInput = function e() {
    e.b2RayCastInput.apply(this, arguments), this.constructor === e && this.b2RayCastInput.apply(this, arguments);
  }, i.Collision.b2RayCastOutput = function e() {
    e.b2RayCastOutput.apply(this, arguments);
  }, i.Collision.b2Segment = function e() {
    e.b2Segment.apply(this, arguments);
  }, i.Collision.b2SeparationFunction = function e() {
    e.b2SeparationFunction.apply(this, arguments);
  }, i.Collision.b2Simplex = function e() {
    e.b2Simplex.apply(this, arguments), this.constructor === e && this.b2Simplex.apply(this, arguments);
  }, i.Collision.b2SimplexCache = function e() {
    e.b2SimplexCache.apply(this, arguments);
  }, i.Collision.b2SimplexVertex = function e() {
    e.b2SimplexVertex.apply(this, arguments);
  }, i.Collision.b2TimeOfImpact = function e() {
    e.b2TimeOfImpact.apply(this, arguments);
  }, i.Collision.b2TOIInput = function e() {
    e.b2TOIInput.apply(this, arguments);
  }, i.Collision.b2WorldManifold = function e() {
    e.b2WorldManifold.apply(this, arguments), this.constructor === e && this.b2WorldManifold.apply(this, arguments);
  }, i.Collision.ClipVertex = function e() {
    e.ClipVertex.apply(this, arguments);
  }, i.Collision.Features = function e() {
    e.Features.apply(this, arguments);
  }, i.Collision.Shapes.b2CircleShape = function e() {
    e.b2CircleShape.apply(this, arguments), this.constructor === e && this.b2CircleShape.apply(this, arguments);
  }, i.Collision.Shapes.b2EdgeChainDef = function e() {
    e.b2EdgeChainDef.apply(this, arguments), this.constructor === e && this.b2EdgeChainDef.apply(this, arguments);
  }, i.Collision.Shapes.b2EdgeShape = function e() {
    e.b2EdgeShape.apply(this, arguments), this.constructor === e && this.b2EdgeShape.apply(this, arguments);
  }, i.Collision.Shapes.b2MassData = function e() {
    e.b2MassData.apply(this, arguments);
  }, i.Collision.Shapes.b2PolygonShape = function e() {
    e.b2PolygonShape.apply(this, arguments), this.constructor === e && this.b2PolygonShape.apply(this, arguments);
  }, i.Collision.Shapes.b2Shape = function e() {
    e.b2Shape.apply(this, arguments), this.constructor === e && this.b2Shape.apply(this, arguments);
  }, i.Common.b2internal = "Box2D.Common.b2internal", i.Common.b2Color = function e() {
    e.b2Color.apply(this, arguments), this.constructor === e && this.b2Color.apply(this, arguments);
  }, i.Common.b2Settings = function e() {
    e.b2Settings.apply(this, arguments);
  }, i.Common.Math.b2Mat22 = function e() {
    e.b2Mat22.apply(this, arguments), this.constructor === e && this.b2Mat22.apply(this, arguments);
  }, i.Common.Math.b2Mat33 = function e() {
    e.b2Mat33.apply(this, arguments), this.constructor === e && this.b2Mat33.apply(this, arguments);
  }, i.Common.Math.b2Math = function e() {
    e.b2Math.apply(this, arguments);
  }, i.Common.Math.b2Sweep = function e() {
    e.b2Sweep.apply(this, arguments);
  }, i.Common.Math.b2Transform = function e() {
    e.b2Transform.apply(this, arguments), this.constructor === e && this.b2Transform.apply(this, arguments);
  }, i.Common.Math.b2Vec2 = function e() {
    e.b2Vec2.apply(this, arguments), this.constructor === e && this.b2Vec2.apply(this, arguments);
  }, i.Common.Math.b2Vec3 = function e() {
    e.b2Vec3.apply(this, arguments), this.constructor === e && this.b2Vec3.apply(this, arguments);
  }, i.Dynamics.b2Body = function e() {
    e.b2Body.apply(this, arguments), this.constructor === e && this.b2Body.apply(this, arguments);
  }, i.Dynamics.b2BodyDef = function e() {
    e.b2BodyDef.apply(this, arguments), this.constructor === e && this.b2BodyDef.apply(this, arguments);
  }, i.Dynamics.b2ContactFilter = function e() {
    e.b2ContactFilter.apply(this, arguments);
  }, i.Dynamics.b2ContactImpulse = function e() {
    e.b2ContactImpulse.apply(this, arguments);
  }, i.Dynamics.b2ContactListener = function e() {
    e.b2ContactListener.apply(this, arguments);
  }, i.Dynamics.b2ContactManager = function e() {
    e.b2ContactManager.apply(this, arguments), this.constructor === e && this.b2ContactManager.apply(this, arguments);
  }, i.Dynamics.b2DebugDraw = function e() {
    e.b2DebugDraw.apply(this, arguments), this.constructor === e && this.b2DebugDraw.apply(this, arguments);
  }, i.Dynamics.b2DestructionListener = function e() {
    e.b2DestructionListener.apply(this, arguments);
  }, i.Dynamics.b2FilterData = function e() {
    e.b2FilterData.apply(this, arguments);
  }, i.Dynamics.b2Fixture = function e() {
    e.b2Fixture.apply(this, arguments), this.constructor === e && this.b2Fixture.apply(this, arguments);
  }, i.Dynamics.b2FixtureDef = function e() {
    e.b2FixtureDef.apply(this, arguments), this.constructor === e && this.b2FixtureDef.apply(this, arguments);
  }, i.Dynamics.b2Island = function e() {
    e.b2Island.apply(this, arguments), this.constructor === e && this.b2Island.apply(this, arguments);
  }, i.Dynamics.b2TimeStep = function e() {
    e.b2TimeStep.apply(this, arguments);
  }, i.Dynamics.b2World = function e() {
    e.b2World.apply(this, arguments), this.constructor === e && this.b2World.apply(this, arguments);
  }, i.Dynamics.Contacts.b2CircleContact = function e() {
    e.b2CircleContact.apply(this, arguments);
  }, i.Dynamics.Contacts.b2Contact = function e() {
    e.b2Contact.apply(this, arguments), this.constructor === e && this.b2Contact.apply(this, arguments);
  }, i.Dynamics.Contacts.b2ContactConstraint = function e() {
    e.b2ContactConstraint.apply(this, arguments), this.constructor === e && this.b2ContactConstraint.apply(this, arguments);
  }, i.Dynamics.Contacts.b2ContactConstraintPoint = function e() {
    e.b2ContactConstraintPoint.apply(this, arguments);
  }, i.Dynamics.Contacts.b2ContactEdge = function e() {
    e.b2ContactEdge.apply(this, arguments);
  }, i.Dynamics.Contacts.b2ContactFactory = function e() {
    e.b2ContactFactory.apply(this, arguments), this.constructor === e && this.b2ContactFactory.apply(this, arguments);
  }, i.Dynamics.Contacts.b2ContactRegister = function e() {
    e.b2ContactRegister.apply(this, arguments);
  }, i.Dynamics.Contacts.b2ContactResult = function e() {
    e.b2ContactResult.apply(this, arguments);
  }, i.Dynamics.Contacts.b2ContactSolver = function e() {
    e.b2ContactSolver.apply(this, arguments), this.constructor === e && this.b2ContactSolver.apply(this, arguments);
  }, i.Dynamics.Contacts.b2EdgeAndCircleContact = function e() {
    e.b2EdgeAndCircleContact.apply(this, arguments);
  }, i.Dynamics.Contacts.b2NullContact = function e() {
    e.b2NullContact.apply(this, arguments), this.constructor === e && this.b2NullContact.apply(this, arguments);
  }, i.Dynamics.Contacts.b2PolyAndCircleContact = function e() {
    e.b2PolyAndCircleContact.apply(this, arguments);
  }, i.Dynamics.Contacts.b2PolyAndEdgeContact = function e() {
    e.b2PolyAndEdgeContact.apply(this, arguments);
  }, i.Dynamics.Contacts.b2PolygonContact = function e() {
    e.b2PolygonContact.apply(this, arguments);
  }, i.Dynamics.Contacts.b2PositionSolverManifold = function e() {
    e.b2PositionSolverManifold.apply(this, arguments), this.constructor === e && this.b2PositionSolverManifold.apply(this, arguments);
  }, i.Dynamics.Controllers.b2BuoyancyController = function e() {
    e.b2BuoyancyController.apply(this, arguments);
  }, i.Dynamics.Controllers.b2ConstantAccelController = function e() {
    e.b2ConstantAccelController.apply(this, arguments);
  }, i.Dynamics.Controllers.b2ConstantForceController = function e() {
    e.b2ConstantForceController.apply(this, arguments);
  }, i.Dynamics.Controllers.b2Controller = function e() {
    e.b2Controller.apply(this, arguments);
  }, i.Dynamics.Controllers.b2ControllerEdge = function e() {
    e.b2ControllerEdge.apply(this, arguments);
  }, i.Dynamics.Controllers.b2GravityController = function e() {
    e.b2GravityController.apply(this, arguments);
  }, i.Dynamics.Controllers.b2TensorDampingController = function e() {
    e.b2TensorDampingController.apply(this, arguments);
  }, i.Dynamics.Joints.b2DistanceJoint = function e() {
    e.b2DistanceJoint.apply(this, arguments), this.constructor === e && this.b2DistanceJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2DistanceJointDef = function e() {
    e.b2DistanceJointDef.apply(this, arguments), this.constructor === e && this.b2DistanceJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2FrictionJoint = function e() {
    e.b2FrictionJoint.apply(this, arguments), this.constructor === e && this.b2FrictionJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2FrictionJointDef = function e() {
    e.b2FrictionJointDef.apply(this, arguments), this.constructor === e && this.b2FrictionJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2GearJoint = function e() {
    e.b2GearJoint.apply(this, arguments), this.constructor === e && this.b2GearJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2GearJointDef = function e() {
    e.b2GearJointDef.apply(this, arguments), this.constructor === e && this.b2GearJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2Jacobian = function e() {
    e.b2Jacobian.apply(this, arguments);
  }, i.Dynamics.Joints.b2Joint = function e() {
    e.b2Joint.apply(this, arguments), this.constructor === e && this.b2Joint.apply(this, arguments);
  }, i.Dynamics.Joints.b2JointDef = function e() {
    e.b2JointDef.apply(this, arguments), this.constructor === e && this.b2JointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2JointEdge = function e() {
    e.b2JointEdge.apply(this, arguments);
  }, i.Dynamics.Joints.b2LineJoint = function e() {
    e.b2LineJoint.apply(this, arguments), this.constructor === e && this.b2LineJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2LineJointDef = function e() {
    e.b2LineJointDef.apply(this, arguments), this.constructor === e && this.b2LineJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2MouseJoint = function e() {
    e.b2MouseJoint.apply(this, arguments), this.constructor === e && this.b2MouseJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2MouseJointDef = function e() {
    e.b2MouseJointDef.apply(this, arguments), this.constructor === e && this.b2MouseJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2PrismaticJoint = function e() {
    e.b2PrismaticJoint.apply(this, arguments), this.constructor === e && this.b2PrismaticJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2PrismaticJointDef = function e() {
    e.b2PrismaticJointDef.apply(this, arguments), this.constructor === e && this.b2PrismaticJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2PulleyJoint = function e() {
    e.b2PulleyJoint.apply(this, arguments), this.constructor === e && this.b2PulleyJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2PulleyJointDef = function e() {
    e.b2PulleyJointDef.apply(this, arguments), this.constructor === e && this.b2PulleyJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2RevoluteJoint = function e() {
    e.b2RevoluteJoint.apply(this, arguments), this.constructor === e && this.b2RevoluteJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2RevoluteJointDef = function e() {
    e.b2RevoluteJointDef.apply(this, arguments), this.constructor === e && this.b2RevoluteJointDef.apply(this, arguments);
  }, i.Dynamics.Joints.b2WeldJoint = function e() {
    e.b2WeldJoint.apply(this, arguments), this.constructor === e && this.b2WeldJoint.apply(this, arguments);
  }, i.Dynamics.Joints.b2WeldJointDef = function e() {
    e.b2WeldJointDef.apply(this, arguments), this.constructor === e && this.b2WeldJointDef.apply(this, arguments);
  }, i.postDefs = [], r = i.Collision.Shapes.b2CircleShape, i.Collision.Shapes.b2EdgeChainDef, i.Collision.Shapes.b2EdgeShape, i.Collision.Shapes.b2MassData, o = i.Collision.Shapes.b2PolygonShape, s = i.Collision.Shapes.b2Shape, i.Common.b2Color, i.Common.b2internal, a = i.Common.b2Settings, i.Common.Math.b2Mat22, i.Common.Math.b2Mat33, l = i.Common.Math.b2Math, c = i.Common.Math.b2Sweep, h = i.Common.Math.b2Transform, u = i.Common.Math.b2Vec2, i.Common.Math.b2Vec3, d = i.Collision.b2AABB, p = i.Collision.b2Bound, m = i.Collision.b2BoundValues, f = i.Collision.b2Collision, g = i.Collision.b2ContactID, v = i.Collision.b2ContactPoint, y = i.Collision.b2Distance, _ = i.Collision.b2DistanceInput, x = i.Collision.b2DistanceOutput, b = i.Collision.b2DistanceProxy, w = i.Collision.b2DynamicTree, S = i.Collision.b2DynamicTreeBroadPhase, E = i.Collision.b2DynamicTreeNode, q = i.Collision.b2DynamicTreePair, T = i.Collision.b2Manifold, A = i.Collision.b2ManifoldPoint, M = i.Collision.b2Point, C = i.Collision.b2RayCastInput, k = i.Collision.b2RayCastOutput, R = i.Collision.b2Segment, L = i.Collision.b2SeparationFunction, P = i.Collision.b2Simplex, D = i.Collision.b2SimplexCache, O = i.Collision.b2SimplexVertex, I = i.Collision.b2TimeOfImpact, B = i.Collision.b2TOIInput, F = i.Collision.b2WorldManifold, z = i.Collision.ClipVertex, N = i.Collision.Features, U = i.Collision.IBroadPhase, d.b2AABB = function () {
    this.lowerBound = new u, this.upperBound = new u;
  }, d.prototype.IsValid = function () {
    var e = this.upperBound.x - this.lowerBound.x, t = this.upperBound.y - this.lowerBound.y, n = e >= 0 && t >= 0;
    return n = n && this.lowerBound.IsValid() && this.upperBound.IsValid();
  }, d.prototype.GetCenter = function () {
    return new u((this.lowerBound.x + this.upperBound.x) / 2, (this.lowerBound.y + this.upperBound.y) / 2);
  }, d.prototype.GetExtents = function () {
    return new u((this.upperBound.x - this.lowerBound.x) / 2, (this.upperBound.y - this.lowerBound.y) / 2);
  }, d.prototype.Contains = function (e) {
    var t = true;
    return t = (t = (t = (t = t && this.lowerBound.x <= e.lowerBound.x) && this.lowerBound.y <= e.lowerBound.y) && e.upperBound.x <= this.upperBound.x) && e.upperBound.y <= this.upperBound.y;
  }, d.prototype.RayCast = function (e, t) {
    var n = -Number.MAX_VALUE, i = Number.MAX_VALUE, r = t.p1.x, o = t.p1.y, s = t.p2.x - t.p1.x, a = t.p2.y - t.p1.y, l = Math.abs(s), c = Math.abs(a), h = e.normal, u = 0, d = 0, p = 0, m = 0, f = 0;
    if (l < Number.MIN_VALUE) {
      if (r < this.lowerBound.x || this.upperBound.x < r) return false;
    } else if (u = 1 / s, f = -1, (d = (this.lowerBound.x - r) * u) > (p = (this.upperBound.x - r) * u) && (m = d, d = p, p = m, f = 1), d > n && (h.x = f, h.y = 0, n = d), n > (i = Math.min(i, p))) return false;
    if (c < Number.MIN_VALUE) {
      if (o < this.lowerBound.y || this.upperBound.y < o) return false;
    } else if (u = 1 / a, f = -1, (d = (this.lowerBound.y - o) * u) > (p = (this.upperBound.y - o) * u) && (m = d, d = p, p = m, f = 1), d > n && (h.y = f, h.x = 0, n = d), n > (i = Math.min(i, p))) return false;
    return e.fraction = n, true;
  }, d.prototype.TestOverlap = function (e) {
    var t = e.lowerBound.x - this.upperBound.x, n = e.lowerBound.y - this.upperBound.y, i = this.lowerBound.x - e.upperBound.x, r = this.lowerBound.y - e.upperBound.y;
    return !(t > 0 || n > 0 || i > 0 || r > 0);
  }, d.Combine = function (e, t) {
    var n = new d;
    return n.Combine(e, t), n;
  }, d.prototype.Combine = function (e, t) {
    this.lowerBound.x = Math.min(e.lowerBound.x, t.lowerBound.x), this.lowerBound.y = Math.min(e.lowerBound.y, t.lowerBound.y), this.upperBound.x = Math.max(e.upperBound.x, t.upperBound.x), this.upperBound.y = Math.max(e.upperBound.y, t.upperBound.y);
  }, p.b2Bound = function () {}, p.prototype.IsLower = function () {
    return 0 == (1 & this.value);
  }, p.prototype.IsUpper = function () {
    return 1 == (1 & this.value);
  }, p.prototype.Swap = function (e) {
    var t = this.value, n = this.proxy, i = this.stabbingCount;
    this.value = e.value, this.proxy = e.proxy, this.stabbingCount = e.stabbingCount, e.value = t, e.proxy = n, e.stabbingCount = i;
  }, m.b2BoundValues = function () {}, m.prototype.b2BoundValues = function () {
    this.lowerValues = new j, this.lowerValues[0] = 0, this.lowerValues[1] = 0, this.upperValues = new j, this.upperValues[0] = 0, this.upperValues[1] = 0;
  }, f.b2Collision = function () {}, f.ClipSegmentToLine = function (e, t, n, i) {
    var r;
    undefined === i && (i = 0);
    var o = 0, s = (r = t[0]).v, a = (r = t[1]).v, l = n.x * s.x + n.y * s.y - i, c = n.x * a.x + n.y * a.y - i;
    if (l <= 0 && e[o++].Set(t[0]), c <= 0 && e[o++].Set(t[1]), l * c < 0) {
      var h, u = l / (l - c), d = (r = e[o]).v;
      d.x = s.x + u * (a.x - s.x), d.y = s.y + u * (a.y - s.y), r = e[o], l > 0 ? (h = t[0], r.id = h.id) : (h = t[1], r.id = h.id), ++o;
    }
    return o;
  }, f.EdgeSeparation = function (e, t, n, i, r) {
    undefined === n && (n = 0), parseInt(e.m_vertexCount);
    var o, s, a = e.m_vertices, l = e.m_normals, c = parseInt(i.m_vertexCount), h = i.m_vertices;
    o = t.R, s = l[n];
    for (var u = o.col1.x * s.x + o.col2.x * s.y, d = o.col1.y * s.x + o.col2.y * s.y, p = (o = r.R).col1.x * u + o.col1.y * d, m = o.col2.x * u + o.col2.y * d, f = 0, g = Number.MAX_VALUE, v = 0; v < c; ++v) {
      var y = (s = h[v]).x * p + s.y * m;
      y < g && (g = y, f = v);
    }
    s = a[n], o = t.R;
    var _ = t.position.x + (o.col1.x * s.x + o.col2.x * s.y), x = t.position.y + (o.col1.y * s.x + o.col2.y * s.y);
    s = h[f], o = r.R;
    var b = r.position.x + (o.col1.x * s.x + o.col2.x * s.y), w = r.position.y + (o.col1.y * s.x + o.col2.y * s.y);
    return (b -= _) * u + (w -= x) * d;
  }, f.FindMaxSeparation = function (e, t, n, i, r) {
    var o, s, a = parseInt(t.m_vertexCount), l = t.m_normals;
    s = r.R, o = i.m_centroid;
    var c = r.position.x + (s.col1.x * o.x + s.col2.x * o.y), h = r.position.y + (s.col1.y * o.x + s.col2.y * o.y);
    s = n.R, o = t.m_centroid, c -= n.position.x + (s.col1.x * o.x + s.col2.x * o.y), h -= n.position.y + (s.col1.y * o.x + s.col2.y * o.y);
    for (var u = c * n.R.col1.x + h * n.R.col1.y, d = c * n.R.col2.x + h * n.R.col2.y, p = 0, m = -Number.MAX_VALUE, g = 0; g < a; ++g) {
      var v = (o = l[g]).x * u + o.y * d;
      v > m && (m = v, p = g);
    }
    var y = f.EdgeSeparation(t, n, p, i, r), _ = parseInt(p - 1 >= 0 ? p - 1 : a - 1), x = f.EdgeSeparation(t, n, _, i, r), b = parseInt(p + 1 < a ? p + 1 : 0), w = f.EdgeSeparation(t, n, b, i, r), S = 0, E = 0, q = 0;
    if (x > y && x > w) q = -1, S = _, E = x; else {
      if (!(w > y)) return e[0] = p, y;
      q = 1, S = b, E = w;
    }
    for (; p = -1 == q ? S - 1 >= 0 ? S - 1 : a - 1 : S + 1 < a ? S + 1 : 0, (y = f.EdgeSeparation(t, n, p, i, r)) > E;) S = p, E = y;
    return e[0] = S, E;
  }, f.FindIncidentEdge = function (e, t, n, i, r, o) {
    undefined === i && (i = 0), parseInt(t.m_vertexCount);
    var s, a, l = t.m_normals, c = parseInt(r.m_vertexCount), h = r.m_vertices, u = r.m_normals;
    s = n.R, a = l[i];
    var d = s.col1.x * a.x + s.col2.x * a.y, p = s.col1.y * a.x + s.col2.y * a.y, m = (s = o.R).col1.x * d + s.col1.y * p;
    p = s.col2.x * d + s.col2.y * p, d = m;
    for (var f, g = 0, v = Number.MAX_VALUE, y = 0; y < c; ++y) {
      var _ = d * (a = u[y]).x + p * a.y;
      _ < v && (v = _, g = y);
    }
    var x = parseInt(g), b = parseInt(x + 1 < c ? x + 1 : 0);
    f = e[0], a = h[x], s = o.R, f.v.x = o.position.x + (s.col1.x * a.x + s.col2.x * a.y), f.v.y = o.position.y + (s.col1.y * a.x + s.col2.y * a.y), f.id.features.referenceEdge = i, f.id.features.incidentEdge = x, f.id.features.incidentVertex = 0, f = e[1], a = h[b], s = o.R, f.v.x = o.position.x + (s.col1.x * a.x + s.col2.x * a.y), f.v.y = o.position.y + (s.col1.y * a.x + s.col2.y * a.y), f.id.features.referenceEdge = i, f.id.features.incidentEdge = b, f.id.features.incidentVertex = 1;
  }, f.MakeClipPointVector = function () {
    var e = new H(2);
    return e[0] = new z, e[1] = new z, e;
  }, f.CollidePolygons = function (e, t, n, i, r) {
    var o;
    e.m_pointCount = 0;
    var s = t.m_radius + i.m_radius, l = 0;
    f.s_edgeAO[0] = l;
    var c = f.FindMaxSeparation(f.s_edgeAO, t, n, i, r);
    if (l = f.s_edgeAO[0], !(c > s)) {
      var h = 0;
      f.s_edgeBO[0] = h;
      var u = f.FindMaxSeparation(f.s_edgeBO, i, r, t, n);
      if (h = f.s_edgeBO[0], !(u > s)) {
        var d, p, m, g, v, y = 0, _ = 0;
        u > 0.98 * c + 0.001 ? (d = i, p = t, m = r, g = n, y = h, e.m_type = T.e_faceB, _ = 1) : (d = t, p = i, m = n, g = r, y = l, e.m_type = T.e_faceA, _ = 0);
        var x = f.s_incidentEdge;
        f.FindIncidentEdge(x, d, m, y, p, g);
        var b, w = parseInt(d.m_vertexCount), S = d.m_vertices, E = S[y];
        b = y + 1 < w ? S[parseInt(y + 1)] : S[0];
        var q = f.s_localTangent;
        q.Set(b.x - E.x, b.y - E.y), q.Normalize();
        var A = f.s_localNormal;
        A.x = q.y, A.y = -q.x;
        var M = f.s_planePoint;
        M.Set(0.5 * (E.x + b.x), 0.5 * (E.y + b.y));
        var C = f.s_tangent;
        v = m.R, C.x = v.col1.x * q.x + v.col2.x * q.y, C.y = v.col1.y * q.x + v.col2.y * q.y;
        var k = f.s_tangent2;
        k.x = -C.x, k.y = -C.y;
        var R = f.s_normal;
        R.x = C.y, R.y = -C.x;
        var L = f.s_v11, P = f.s_v12;
        L.x = m.position.x + (v.col1.x * E.x + v.col2.x * E.y), L.y = m.position.y + (v.col1.y * E.x + v.col2.y * E.y), P.x = m.position.x + (v.col1.x * b.x + v.col2.x * b.y), P.y = m.position.y + (v.col1.y * b.x + v.col2.y * b.y);
        var D = R.x * L.x + R.y * L.y, O = -C.x * L.x - C.y * L.y + s, I = C.x * P.x + C.y * P.y + s, B = f.s_clipPoints1, F = f.s_clipPoints2;
        if (!(f.ClipSegmentToLine(B, x, k, O) < 2 || f.ClipSegmentToLine(F, B, C, I) < 2)) {
          e.m_localPlaneNormal.SetV(A), e.m_localPoint.SetV(M);
          for (var z = 0, N = 0; N < a.b2_maxManifoldPoints; ++N) if (o = F[N], R.x * o.v.x + R.y * o.v.y - D <= s) {
            var U = e.m_points[z];
            v = g.R;
            var V = o.v.x - g.position.x, G = o.v.y - g.position.y;
            U.m_localPoint.x = V * v.col1.x + G * v.col1.y, U.m_localPoint.y = V * v.col2.x + G * v.col2.y, U.m_id.Set(o.id), U.m_id.features.flip = _, ++z;
          }
          e.m_pointCount = z;
        }
      }
    }
  }, f.CollideCircles = function (e, t, n, i, r) {
    var o, s;
    e.m_pointCount = 0, o = n.R, s = t.m_p;
    var a = n.position.x + (o.col1.x * s.x + o.col2.x * s.y), l = n.position.y + (o.col1.y * s.x + o.col2.y * s.y);
    o = r.R, s = i.m_p;
    var c = r.position.x + (o.col1.x * s.x + o.col2.x * s.y) - a, h = r.position.y + (o.col1.y * s.x + o.col2.y * s.y) - l, u = c * c + h * h, d = t.m_radius + i.m_radius;
    u > d * d || (e.m_type = T.e_circles, e.m_localPoint.SetV(t.m_p), e.m_localPlaneNormal.SetZero(), e.m_pointCount = 1, e.m_points[0].m_localPoint.SetV(i.m_p), e.m_points[0].m_id.key = 0);
  }, f.CollidePolygonAndCircle = function (e, t, n, i, r) {
    e.m_pointCount = 0;
    var o, s, a = 0, l = 0;
    s = r.R, o = i.m_p;
    var c = r.position.x + (s.col1.x * o.x + s.col2.x * o.y), h = r.position.y + (s.col1.y * o.x + s.col2.y * o.y);
    a = c - n.position.x, l = h - n.position.y;
    for (var u = a * (s = n.R).col1.x + l * s.col1.y, d = a * s.col2.x + l * s.col2.y, p = 0, m = -Number.MAX_VALUE, f = t.m_radius + i.m_radius, g = parseInt(t.m_vertexCount), v = t.m_vertices, y = t.m_normals, _ = 0; _ < g; ++_) {
      a = u - (o = v[_]).x, l = d - o.y;
      var x = (o = y[_]).x * a + o.y * l;
      if (x > f) return;
      x > m && (m = x, p = _);
    }
    var b = parseInt(p), w = parseInt(b + 1 < g ? b + 1 : 0), S = v[b], E = v[w];
    if (m < Number.MIN_VALUE) return e.m_pointCount = 1, e.m_type = T.e_faceA, e.m_localPlaneNormal.SetV(y[p]), e.m_localPoint.x = 0.5 * (S.x + E.x), e.m_localPoint.y = 0.5 * (S.y + E.y), e.m_points[0].m_localPoint.SetV(i.m_p), void (e.m_points[0].m_id.key = 0);
    var q = (u - S.x) * (E.x - S.x) + (d - S.y) * (E.y - S.y), A = (u - E.x) * (S.x - E.x) + (d - E.y) * (S.y - E.y);
    if (q <= 0) {
      if ((u - S.x) * (u - S.x) + (d - S.y) * (d - S.y) > f * f) return;
      e.m_pointCount = 1, e.m_type = T.e_faceA, e.m_localPlaneNormal.x = u - S.x, e.m_localPlaneNormal.y = d - S.y, e.m_localPlaneNormal.Normalize(), e.m_localPoint.SetV(S), e.m_points[0].m_localPoint.SetV(i.m_p), e.m_points[0].m_id.key = 0;
    } else if (A <= 0) {
      if ((u - E.x) * (u - E.x) + (d - E.y) * (d - E.y) > f * f) return;
      e.m_pointCount = 1, e.m_type = T.e_faceA, e.m_localPlaneNormal.x = u - E.x, e.m_localPlaneNormal.y = d - E.y, e.m_localPlaneNormal.Normalize(), e.m_localPoint.SetV(E), e.m_points[0].m_localPoint.SetV(i.m_p), e.m_points[0].m_id.key = 0;
    } else {
      var M = 0.5 * (S.x + E.x), C = 0.5 * (S.y + E.y);
      if ((m = (u - M) * y[b].x + (d - C) * y[b].y) > f) return;
      e.m_pointCount = 1, e.m_type = T.e_faceA, e.m_localPlaneNormal.x = y[b].x, e.m_localPlaneNormal.y = y[b].y, e.m_localPlaneNormal.Normalize(), e.m_localPoint.Set(M, C), e.m_points[0].m_localPoint.SetV(i.m_p), e.m_points[0].m_id.key = 0;
    }
  }, f.TestOverlap = function (e, t) {
    var n = t.lowerBound, i = e.upperBound, r = n.x - i.x, o = n.y - i.y;
    n = e.lowerBound, i = t.upperBound;
    var s = n.x - i.x, a = n.y - i.y;
    return !(r > 0 || o > 0 || s > 0 || a > 0);
  }, i.postDefs.push(function () {
    i.Collision.b2Collision.s_incidentEdge = f.MakeClipPointVector(), i.Collision.b2Collision.s_clipPoints1 = f.MakeClipPointVector(), i.Collision.b2Collision.s_clipPoints2 = f.MakeClipPointVector(), i.Collision.b2Collision.s_edgeAO = new j(1), i.Collision.b2Collision.s_edgeBO = new j(1), i.Collision.b2Collision.s_localTangent = new u, i.Collision.b2Collision.s_localNormal = new u, i.Collision.b2Collision.s_planePoint = new u, i.Collision.b2Collision.s_normal = new u, i.Collision.b2Collision.s_tangent = new u, i.Collision.b2Collision.s_tangent2 = new u, i.Collision.b2Collision.s_v11 = new u, i.Collision.b2Collision.s_v12 = new u, i.Collision.b2Collision.b2CollidePolyTempVec = new u, i.Collision.b2Collision.b2_nullFeature = 255;
  }), g.b2ContactID = function () {
    this.features = new N;
  }, g.prototype.b2ContactID = function () {
    this.features._m_id = this;
  }, g.prototype.Set = function (e) {
    this.key = e._key;
  }, g.prototype.Copy = function () {
    var e = new g;
    return e.key = this.key, e;
  }, Object.defineProperty(g.prototype, "key", {enumerable: false, configurable: true, get: function () {
    return this._key;
  }}), Object.defineProperty(g.prototype, "key", {enumerable: false, configurable: true, set: function (e) {
    undefined === e && (e = 0), this._key = e, this.features._referenceEdge = 255 & this._key, this.features._incidentEdge = (65280 & this._key) >> 8 & 255, this.features._incidentVertex = (16711680 & this._key) >> 16 & 255, this.features._flip = (4278190080 & this._key) >> 24 & 255;
  }}), v.b2ContactPoint = function () {
    this.position = new u, this.velocity = new u, this.normal = new u, this.id = new g;
  }, y.b2Distance = function () {}, y.Distance = function (e, t, n) {
    ++y.b2_gjkCalls;
    var i = n.proxyA, r = n.proxyB, o = n.transformA, s = n.transformB, c = y.s_simplex;
    c.ReadCache(t, i, o, r, s);
    for (var h, d = c.m_vertices, p = y.s_saveA, m = y.s_saveB, f = 0, g = (c.GetClosestPoint().LengthSquared(), 0), v = 0; v < 20;) {
      for (f = c.m_count, g = 0; g < f; g++) p[g] = d[g].indexA, m[g] = d[g].indexB;
      switch (c.m_count) {
        case 1:
          break;
        case 2:
          c.Solve2();
          break;
        case 3:
          c.Solve3();
          break;
        default:
          a.b2Assert(false);
      }
      if (3 == c.m_count) break;
      (h = c.GetClosestPoint()).LengthSquared();
      var _ = c.GetSearchDirection();
      if (_.LengthSquared() < Number.MIN_VALUE * Number.MIN_VALUE) break;
      var x = d[c.m_count];
      x.indexA = i.GetSupport(l.MulTMV(o.R, _.GetNegative())), x.wA = l.MulX(o, i.GetVertex(x.indexA)), x.indexB = r.GetSupport(l.MulTMV(s.R, _)), x.wB = l.MulX(s, r.GetVertex(x.indexB)), x.w = l.SubtractVV(x.wB, x.wA), ++v, ++y.b2_gjkIters;
      var b = false;
      for (g = 0; g < f; g++) if (x.indexA == p[g] && x.indexB == m[g]) {
        b = true;
        break;
      }
      if (b) break;
      ++c.m_count;
    }
    if (y.b2_gjkMaxIters = l.Max(y.b2_gjkMaxIters, v), c.GetWitnessPoints(e.pointA, e.pointB), e.distance = l.SubtractVV(e.pointA, e.pointB).Length(), e.iterations = v, c.WriteCache(t), n.useRadii) {
      var w = i.m_radius, S = r.m_radius;
      if (e.distance > w + S && e.distance > Number.MIN_VALUE) {
        e.distance -= w + S;
        var E = l.SubtractVV(e.pointB, e.pointA);
        E.Normalize(), e.pointA.x += w * E.x, e.pointA.y += w * E.y, e.pointB.x -= S * E.x, e.pointB.y -= S * E.y;
      } else (h = new u).x = 0.5 * (e.pointA.x + e.pointB.x), h.y = 0.5 * (e.pointA.y + e.pointB.y), e.pointA.x = e.pointB.x = h.x, e.pointA.y = e.pointB.y = h.y, e.distance = 0;
    }
  }, i.postDefs.push(function () {
    i.Collision.b2Distance.s_simplex = new P, i.Collision.b2Distance.s_saveA = new j(3), i.Collision.b2Distance.s_saveB = new j(3);
  }), _.b2DistanceInput = function () {}, x.b2DistanceOutput = function () {
    this.pointA = new u, this.pointB = new u;
  }, b.b2DistanceProxy = function () {}, b.prototype.Set = function (e) {
    switch (e.GetType()) {
      case s.e_circleShape:
        var t = e instanceof r ? e : null;
        this.m_vertices = new H(1, true), this.m_vertices[0] = t.m_p, this.m_count = 1, this.m_radius = t.m_radius;
        break;
      case s.e_polygonShape:
        var n = e instanceof o ? e : null;
        this.m_vertices = n.m_vertices, this.m_count = n.m_vertexCount, this.m_radius = n.m_radius;
        break;
      default:
        a.b2Assert(false);
    }
  }, b.prototype.GetSupport = function (e) {
    for (var t = 0, n = this.m_vertices[0].x * e.x + this.m_vertices[0].y * e.y, i = 1; i < this.m_count; ++i) {
      var r = this.m_vertices[i].x * e.x + this.m_vertices[i].y * e.y;
      r > n && (t = i, n = r);
    }
    return t;
  }, b.prototype.GetSupportVertex = function (e) {
    for (var t = 0, n = this.m_vertices[0].x * e.x + this.m_vertices[0].y * e.y, i = 1; i < this.m_count; ++i) {
      var r = this.m_vertices[i].x * e.x + this.m_vertices[i].y * e.y;
      r > n && (t = i, n = r);
    }
    return this.m_vertices[t];
  }, b.prototype.GetVertexCount = function () {
    return this.m_count;
  }, b.prototype.GetVertex = function (e) {
    return undefined === e && (e = 0), a.b2Assert(0 <= e && e < this.m_count), this.m_vertices[e];
  }, w.b2DynamicTree = function () {}, w.prototype.b2DynamicTree = function () {
    this.m_root = null, this.m_freeList = null, this.m_path = 0, this.m_insertionCount = 0;
  }, w.prototype.CreateProxy = function (e, t) {
    var n = this.AllocateNode(), i = a.b2_aabbExtension, r = a.b2_aabbExtension;
    return n.aabb.lowerBound.x = e.lowerBound.x - i, n.aabb.lowerBound.y = e.lowerBound.y - r, n.aabb.upperBound.x = e.upperBound.x + i, n.aabb.upperBound.y = e.upperBound.y + r, n.userData = t, this.InsertLeaf(n), n;
  }, w.prototype.DestroyProxy = function (e) {
    this.RemoveLeaf(e), this.FreeNode(e);
  }, w.prototype.MoveProxy = function (e, t, n) {
    if (a.b2Assert(e.IsLeaf()), e.aabb.Contains(t)) return false;
    this.RemoveLeaf(e);
    var i = a.b2_aabbExtension + a.b2_aabbMultiplier * (n.x > 0 ? n.x : -n.x), r = a.b2_aabbExtension + a.b2_aabbMultiplier * (n.y > 0 ? n.y : -n.y);
    return e.aabb.lowerBound.x = t.lowerBound.x - i, e.aabb.lowerBound.y = t.lowerBound.y - r, e.aabb.upperBound.x = t.upperBound.x + i, e.aabb.upperBound.y = t.upperBound.y + r, this.InsertLeaf(e), true;
  }, w.prototype.Rebalance = function (e) {
    if (undefined === e && (e = 0), null != this.m_root) for (var t = 0; t < e; t++) {
      for (var n = this.m_root, i = 0; 0 == n.IsLeaf();) n = this.m_path >> i & 1 ? n.child2 : n.child1, i = i + 1 & 31;
      ++this.m_path, this.RemoveLeaf(n), this.InsertLeaf(n);
    }
  }, w.prototype.GetFatAABB = function (e) {
    return e.aabb;
  }, w.prototype.GetUserData = function (e) {
    return e.userData;
  }, w.prototype.Query = function (e, t) {
    if (null != this.m_root) {
      var n = new H, i = 0;
      for (n[i++] = this.m_root; i > 0;) {
        var r = n[--i];
        if (r.aabb.TestOverlap(t)) if (r.IsLeaf()) {
          if (!e(r)) return;
        } else n[i++] = r.child1, n[i++] = r.child2;
      }
    }
  }, w.prototype.RayCast = function (e, t) {
    if (null != this.m_root) {
      var n = t.p1, i = t.p2, r = l.SubtractVV(n, i);
      r.Normalize();
      var o = l.CrossFV(1, r), s = l.AbsV(o), a = t.maxFraction, c = new d, h = 0, u = 0;
      h = n.x + a * (i.x - n.x), u = n.y + a * (i.y - n.y), c.lowerBound.x = Math.min(n.x, h), c.lowerBound.y = Math.min(n.y, u), c.upperBound.x = Math.max(n.x, h), c.upperBound.y = Math.max(n.y, u);
      var p = new H, m = 0;
      for (p[m++] = this.m_root; m > 0;) {
        var f = p[--m];
        if (0 != f.aabb.TestOverlap(c)) {
          var g = f.aabb.GetCenter(), v = f.aabb.GetExtents();
          if (!(Math.abs(o.x * (n.x - g.x) + o.y * (n.y - g.y)) - s.x * v.x - s.y * v.y > 0)) if (f.IsLeaf()) {
            var y = new C;
            if (y.p1 = t.p1, y.p2 = t.p2, y.maxFraction = t.maxFraction, 0 == (a = e(y, f))) return;
            a > 0 && (h = n.x + a * (i.x - n.x), u = n.y + a * (i.y - n.y), c.lowerBound.x = Math.min(n.x, h), c.lowerBound.y = Math.min(n.y, u), c.upperBound.x = Math.max(n.x, h), c.upperBound.y = Math.max(n.y, u));
          } else p[m++] = f.child1, p[m++] = f.child2;
        }
      }
    }
  }, w.prototype.AllocateNode = function () {
    if (this.m_freeList) {
      var e = this.m_freeList;
      return this.m_freeList = e.parent, e.parent = null, e.child1 = null, e.child2 = null, e;
    }
    return new E;
  }, w.prototype.FreeNode = function (e) {
    e.parent = this.m_freeList, this.m_freeList = e;
  }, w.prototype.InsertLeaf = function (e) {
    if (++this.m_insertionCount, null == this.m_root) return this.m_root = e, void (this.m_root.parent = null);
    var t = e.aabb.GetCenter(), n = this.m_root;
    if (0 == n.IsLeaf()) do {
      var i = n.child1, r = n.child2;
      n = Math.abs((i.aabb.lowerBound.x + i.aabb.upperBound.x) / 2 - t.x) + Math.abs((i.aabb.lowerBound.y + i.aabb.upperBound.y) / 2 - t.y) < Math.abs((r.aabb.lowerBound.x + r.aabb.upperBound.x) / 2 - t.x) + Math.abs((r.aabb.lowerBound.y + r.aabb.upperBound.y) / 2 - t.y) ? i : r;
    } while (0 == n.IsLeaf());
    var o = n.parent, s = this.AllocateNode();
    if (s.parent = o, s.userData = null, s.aabb.Combine(e.aabb, n.aabb), o) {
      n.parent.child1 == n ? o.child1 = s : o.child2 = s, s.child1 = n, s.child2 = e, n.parent = s, e.parent = s;
      do {
        if (o.aabb.Contains(s.aabb)) break;
        o.aabb.Combine(o.child1.aabb, o.child2.aabb), s = o, o = o.parent;
      } while (o);
    } else s.child1 = n, s.child2 = e, n.parent = s, e.parent = s, this.m_root = s;
  }, w.prototype.RemoveLeaf = function (e) {
    if (e != this.m_root) {
      var t, n = e.parent, i = n.parent;
      if (t = n.child1 == e ? n.child2 : n.child1, i) for (i.child1 == n ? i.child1 = t : i.child2 = t, t.parent = i, this.FreeNode(n); i;) {
        var r = i.aabb;
        if (i.aabb = d.Combine(i.child1.aabb, i.child2.aabb), r.Contains(i.aabb)) break;
        i = i.parent;
      } else this.m_root = t, t.parent = null, this.FreeNode(n);
    } else this.m_root = null;
  }, S.b2DynamicTreeBroadPhase = function () {
    this.m_tree = new w, this.m_moveBuffer = new H, this.m_pairBuffer = new H, this.m_pairCount = 0;
  }, S.prototype.CreateProxy = function (e, t) {
    var n = this.m_tree.CreateProxy(e, t);
    return ++this.m_proxyCount, this.BufferMove(n), n;
  }, S.prototype.DestroyProxy = function (e) {
    this.UnBufferMove(e), --this.m_proxyCount, this.m_tree.DestroyProxy(e);
  }, S.prototype.MoveProxy = function (e, t, n) {
    this.m_tree.MoveProxy(e, t, n) && this.BufferMove(e);
  }, S.prototype.TestOverlap = function (e, t) {
    var n = this.m_tree.GetFatAABB(e), i = this.m_tree.GetFatAABB(t);
    return n.TestOverlap(i);
  }, S.prototype.GetUserData = function (e) {
    return this.m_tree.GetUserData(e);
  }, S.prototype.GetFatAABB = function (e) {
    return this.m_tree.GetFatAABB(e);
  }, S.prototype.GetProxyCount = function () {
    return this.m_proxyCount;
  }, S.prototype.UpdatePairs = function (e) {
    var t = this;
    t.m_pairCount = 0;
    var n, i = 0;
    function r(e) {
      if (e == n) return true;
      t.m_pairCount == t.m_pairBuffer.length && (t.m_pairBuffer[t.m_pairCount] = new q);
      var i = t.m_pairBuffer[t.m_pairCount];
      return i.proxyA = e < n ? e : n, i.proxyB = e >= n ? e : n, ++t.m_pairCount, true;
    }
    for (i = 0; i < t.m_moveBuffer.length; ++i) {
      n = t.m_moveBuffer[i];
      var o = t.m_tree.GetFatAABB(n);
      t.m_tree.Query(r, o);
    }
    for (t.m_moveBuffer.length = 0, i = 0; i < t.m_pairCount;) {
      var s = t.m_pairBuffer[i];
      for (e(t.m_tree.GetUserData(s.proxyA), t.m_tree.GetUserData(s.proxyB)), ++i; i < t.m_pairCount;) {
        var a = t.m_pairBuffer[i];
        if (a.proxyA != s.proxyA || a.proxyB != s.proxyB) break;
        ++i;
      }
    }
  }, S.prototype.Query = function (e, t) {
    this.m_tree.Query(e, t);
  }, S.prototype.RayCast = function (e, t) {
    this.m_tree.RayCast(e, t);
  }, S.prototype.Validate = function () {}, S.prototype.Rebalance = function (e) {
    undefined === e && (e = 0), this.m_tree.Rebalance(e);
  }, S.prototype.BufferMove = function (e) {
    this.m_moveBuffer[this.m_moveBuffer.length] = e;
  }, S.prototype.UnBufferMove = function (e) {
    var t = parseInt(this.m_moveBuffer.indexOf(e));
    this.m_moveBuffer.splice(t, 1);
  }, S.prototype.ComparePairs = function (e, t) {
    return 0;
  }, S.__implements = {}, S.__implements[U] = true, E.b2DynamicTreeNode = function () {
    this.aabb = new d;
  }, E.prototype.IsLeaf = function () {
    return null == this.child1;
  }, q.b2DynamicTreePair = function () {}, T.b2Manifold = function () {
    this.m_pointCount = 0;
  }, T.prototype.b2Manifold = function () {
    this.m_points = new H(a.b2_maxManifoldPoints);
    for (var e = 0; e < a.b2_maxManifoldPoints; e++) this.m_points[e] = new A;
    this.m_localPlaneNormal = new u, this.m_localPoint = new u;
  }, T.prototype.Reset = function () {
    for (var e = 0; e < a.b2_maxManifoldPoints; e++) (this.m_points[e] instanceof A ? this.m_points[e] : null).Reset();
    this.m_localPlaneNormal.SetZero(), this.m_localPoint.SetZero(), this.m_type = 0, this.m_pointCount = 0;
  }, T.prototype.Set = function (e) {
    this.m_pointCount = e.m_pointCount;
    for (var t = 0; t < a.b2_maxManifoldPoints; t++) (this.m_points[t] instanceof A ? this.m_points[t] : null).Set(e.m_points[t]);
    this.m_localPlaneNormal.SetV(e.m_localPlaneNormal), this.m_localPoint.SetV(e.m_localPoint), this.m_type = e.m_type;
  }, T.prototype.Copy = function () {
    var e = new T;
    return e.Set(this), e;
  }, i.postDefs.push(function () {
    i.Collision.b2Manifold.e_circles = 1, i.Collision.b2Manifold.e_faceA = 2, i.Collision.b2Manifold.e_faceB = 4;
  }), A.b2ManifoldPoint = function () {
    this.m_localPoint = new u, this.m_id = new g;
  }, A.prototype.b2ManifoldPoint = function () {
    this.Reset();
  }, A.prototype.Reset = function () {
    this.m_localPoint.SetZero(), this.m_normalImpulse = 0, this.m_tangentImpulse = 0, this.m_id.key = 0;
  }, A.prototype.Set = function (e) {
    this.m_localPoint.SetV(e.m_localPoint), this.m_normalImpulse = e.m_normalImpulse, this.m_tangentImpulse = e.m_tangentImpulse, this.m_id.Set(e.m_id);
  }, M.b2Point = function () {
    this.p = new u;
  }, M.prototype.Support = function (e, t, n) {
    return undefined === t && (t = 0), undefined === n && (n = 0), this.p;
  }, M.prototype.GetFirstVertex = function (e) {
    return this.p;
  }, C.b2RayCastInput = function () {
    this.p1 = new u, this.p2 = new u;
  }, C.prototype.b2RayCastInput = function (e, t, n) {
    undefined === e && (e = null), undefined === t && (t = null), undefined === n && (n = 1), e && this.p1.SetV(e), t && this.p2.SetV(t), this.maxFraction = n;
  }, k.b2RayCastOutput = function () {
    this.normal = new u;
  }, R.b2Segment = function () {
    this.p1 = new u, this.p2 = new u;
  }, R.prototype.TestSegment = function (e, t, n, i) {
    undefined === i && (i = 0);
    var r = n.p1, o = n.p2.x - r.x, s = n.p2.y - r.y, a = this.p2.x - this.p1.x, l = this.p2.y - this.p1.y, c = -a, h = 100 * Number.MIN_VALUE, u = -(o * l + s * c);
    if (u > h) {
      var d = r.x - this.p1.x, p = r.y - this.p1.y, m = d * l + p * c;
      if (0 <= m && m <= i * u) {
        var f = -o * p + s * d;
        if (-h * u <= f && f <= u * (1 + h)) {
          m /= u;
          var g = Math.sqrt(l * l + c * c);
          return l /= g, c /= g, e[0] = m, t.Set(l, c), true;
        }
      }
    }
    return false;
  }, R.prototype.Extend = function (e) {
    this.ExtendForward(e), this.ExtendBackward(e);
  }, R.prototype.ExtendForward = function (e) {
    var t = this.p2.x - this.p1.x, n = this.p2.y - this.p1.y, i = Math.min(t > 0 ? (e.upperBound.x - this.p1.x) / t : t < 0 ? (e.lowerBound.x - this.p1.x) / t : Number.POSITIVE_INFINITY, n > 0 ? (e.upperBound.y - this.p1.y) / n : n < 0 ? (e.lowerBound.y - this.p1.y) / n : Number.POSITIVE_INFINITY);
    this.p2.x = this.p1.x + t * i, this.p2.y = this.p1.y + n * i;
  }, R.prototype.ExtendBackward = function (e) {
    var t = -this.p2.x + this.p1.x, n = -this.p2.y + this.p1.y, i = Math.min(t > 0 ? (e.upperBound.x - this.p2.x) / t : t < 0 ? (e.lowerBound.x - this.p2.x) / t : Number.POSITIVE_INFINITY, n > 0 ? (e.upperBound.y - this.p2.y) / n : n < 0 ? (e.lowerBound.y - this.p2.y) / n : Number.POSITIVE_INFINITY);
    this.p1.x = this.p2.x + t * i, this.p1.y = this.p2.y + n * i;
  }, L.b2SeparationFunction = function () {
    this.m_localPoint = new u, this.m_axis = new u;
  }, L.prototype.Initialize = function (e, t, n, i, r) {
    this.m_proxyA = t, this.m_proxyB = i;
    var o, s, c, h, d, p, m = parseInt(e.count);
    a.b2Assert(0 < m && m < 3);
    var f, g, v = 0, y = 0, _ = 0, x = 0, b = 0, w = 0, S = 0;
    if (1 == m) this.m_type = L.e_points, o = this.m_proxyA.GetVertex(e.indexA[0]), h = this.m_proxyB.GetVertex(e.indexB[0]), g = o, f = n.R, v = n.position.x + (f.col1.x * g.x + f.col2.x * g.y), y = n.position.y + (f.col1.y * g.x + f.col2.y * g.y), g = h, f = r.R, _ = r.position.x + (f.col1.x * g.x + f.col2.x * g.y), x = r.position.y + (f.col1.y * g.x + f.col2.y * g.y), this.m_axis.x = _ - v, this.m_axis.y = x - y, this.m_axis.Normalize(); else if (e.indexB[0] == e.indexB[1]) this.m_type = L.e_faceA, s = this.m_proxyA.GetVertex(e.indexA[0]), c = this.m_proxyA.GetVertex(e.indexA[1]), h = this.m_proxyB.GetVertex(e.indexB[0]), this.m_localPoint.x = 0.5 * (s.x + c.x), this.m_localPoint.y = 0.5 * (s.y + c.y), this.m_axis = l.CrossVF(l.SubtractVV(c, s), 1), this.m_axis.Normalize(), g = this.m_axis, b = (f = n.R).col1.x * g.x + f.col2.x * g.y, w = f.col1.y * g.x + f.col2.y * g.y, g = this.m_localPoint, f = n.R, v = n.position.x + (f.col1.x * g.x + f.col2.x * g.y), y = n.position.y + (f.col1.y * g.x + f.col2.y * g.y), g = h, f = r.R, (S = ((_ = r.position.x + (f.col1.x * g.x + f.col2.x * g.y)) - v) * b + ((x = r.position.y + (f.col1.y * g.x + f.col2.y * g.y)) - y) * w) < 0 && this.m_axis.NegativeSelf(); else if (e.indexA[0] == e.indexA[0]) this.m_type = L.e_faceB, d = this.m_proxyB.GetVertex(e.indexB[0]), p = this.m_proxyB.GetVertex(e.indexB[1]), o = this.m_proxyA.GetVertex(e.indexA[0]), this.m_localPoint.x = 0.5 * (d.x + p.x), this.m_localPoint.y = 0.5 * (d.y + p.y), this.m_axis = l.CrossVF(l.SubtractVV(p, d), 1), this.m_axis.Normalize(), g = this.m_axis, b = (f = r.R).col1.x * g.x + f.col2.x * g.y, w = f.col1.y * g.x + f.col2.y * g.y, g = this.m_localPoint, f = r.R, _ = r.position.x + (f.col1.x * g.x + f.col2.x * g.y), x = r.position.y + (f.col1.y * g.x + f.col2.y * g.y), g = o, f = n.R, (S = ((v = n.position.x + (f.col1.x * g.x + f.col2.x * g.y)) - _) * b + ((y = n.position.y + (f.col1.y * g.x + f.col2.y * g.y)) - x) * w) < 0 && this.m_axis.NegativeSelf(); else {
      s = this.m_proxyA.GetVertex(e.indexA[0]), c = this.m_proxyA.GetVertex(e.indexA[1]), d = this.m_proxyB.GetVertex(e.indexB[0]), p = this.m_proxyB.GetVertex(e.indexB[1]), l.MulX(n, o);
      var E = l.MulMV(n.R, l.SubtractVV(c, s)), q = (l.MulX(r, h), l.MulMV(r.R, l.SubtractVV(p, d))), T = E.x * E.x + E.y * E.y, A = q.x * q.x + q.y * q.y, M = l.SubtractVV(q, E), C = E.x * M.x + E.y * M.y, k = q.x * M.x + q.y * M.y, R = E.x * q.x + E.y * q.y, P = T * A - R * R;
      S = 0, 0 != P && (S = l.Clamp((R * k - C * A) / P, 0, 1));
      var D = (R * S + k) / A;
      D < 0 && (D = 0, S = l.Clamp((R - C) / T, 0, 1)), (o = new u).x = s.x + S * (c.x - s.x), o.y = s.y + S * (c.y - s.y), (h = new u).x = d.x + S * (p.x - d.x), h.y = d.y + S * (p.y - d.y), 0 == S || 1 == S ? (this.m_type = L.e_faceB, this.m_axis = l.CrossVF(l.SubtractVV(p, d), 1), this.m_axis.Normalize(), this.m_localPoint = h, g = this.m_axis, b = (f = r.R).col1.x * g.x + f.col2.x * g.y, w = f.col1.y * g.x + f.col2.y * g.y, g = this.m_localPoint, f = r.R, _ = r.position.x + (f.col1.x * g.x + f.col2.x * g.y), x = r.position.y + (f.col1.y * g.x + f.col2.y * g.y), g = o, f = n.R, v = n.position.x + (f.col1.x * g.x + f.col2.x * g.y), y = n.position.y + (f.col1.y * g.x + f.col2.y * g.y), S < 0 && this.m_axis.NegativeSelf()) : (this.m_type = L.e_faceA, this.m_axis = l.CrossVF(l.SubtractVV(c, s), 1), this.m_localPoint = o, g = this.m_axis, b = (f = n.R).col1.x * g.x + f.col2.x * g.y, w = f.col1.y * g.x + f.col2.y * g.y, g = this.m_localPoint, f = n.R, v = n.position.x + (f.col1.x * g.x + f.col2.x * g.y), y = n.position.y + (f.col1.y * g.x + f.col2.y * g.y), g = h, f = r.R, _ = r.position.x + (f.col1.x * g.x + f.col2.x * g.y), x = r.position.y + (f.col1.y * g.x + f.col2.y * g.y), S < 0 && this.m_axis.NegativeSelf());
    }
  }, L.prototype.Evaluate = function (e, t) {
    var n, i, r, o, s, c, h;
    switch (this.m_type) {
      case L.e_points:
        return n = l.MulTMV(e.R, this.m_axis), i = l.MulTMV(t.R, this.m_axis.GetNegative()), r = this.m_proxyA.GetSupportVertex(n), o = this.m_proxyB.GetSupportVertex(i), s = l.MulX(e, r), ((c = l.MulX(t, o)).x - s.x) * this.m_axis.x + (c.y - s.y) * this.m_axis.y;
      case L.e_faceA:
        return h = l.MulMV(e.R, this.m_axis), s = l.MulX(e, this.m_localPoint), i = l.MulTMV(t.R, h.GetNegative()), o = this.m_proxyB.GetSupportVertex(i), ((c = l.MulX(t, o)).x - s.x) * h.x + (c.y - s.y) * h.y;
      case L.e_faceB:
        return h = l.MulMV(t.R, this.m_axis), c = l.MulX(t, this.m_localPoint), n = l.MulTMV(e.R, h.GetNegative()), r = this.m_proxyA.GetSupportVertex(n), ((s = l.MulX(e, r)).x - c.x) * h.x + (s.y - c.y) * h.y;
      default:
        return a.b2Assert(false), 0;
    }
  }, i.postDefs.push(function () {
    i.Collision.b2SeparationFunction.e_points = 1, i.Collision.b2SeparationFunction.e_faceA = 2, i.Collision.b2SeparationFunction.e_faceB = 4;
  }), P.b2Simplex = function () {
    this.m_v1 = new O, this.m_v2 = new O, this.m_v3 = new O, this.m_vertices = new H(3);
  }, P.prototype.b2Simplex = function () {
    this.m_vertices[0] = this.m_v1, this.m_vertices[1] = this.m_v2, this.m_vertices[2] = this.m_v3;
  }, P.prototype.ReadCache = function (e, t, n, i, r) {
    var o, s;
    a.b2Assert(0 <= e.count && e.count <= 3), this.m_count = e.count;
    for (var c = this.m_vertices, h = 0; h < this.m_count; h++) {
      var u = c[h];
      u.indexA = e.indexA[h], u.indexB = e.indexB[h], o = t.GetVertex(u.indexA), s = i.GetVertex(u.indexB), u.wA = l.MulX(n, o), u.wB = l.MulX(r, s), u.w = l.SubtractVV(u.wB, u.wA), u.a = 0;
    }
    if (this.m_count > 1) {
      var d = e.metric, p = this.GetMetric();
      (p < 0.5 * d || 2 * d < p || p < Number.MIN_VALUE) && (this.m_count = 0);
    }
    0 == this.m_count && ((u = c[0]).indexA = 0, u.indexB = 0, o = t.GetVertex(0), s = i.GetVertex(0), u.wA = l.MulX(n, o), u.wB = l.MulX(r, s), u.w = l.SubtractVV(u.wB, u.wA), this.m_count = 1);
  }, P.prototype.WriteCache = function (e) {
    e.metric = this.GetMetric(), e.count = i.parseUInt(this.m_count);
    for (var t = this.m_vertices, n = 0; n < this.m_count; n++) e.indexA[n] = i.parseUInt(t[n].indexA), e.indexB[n] = i.parseUInt(t[n].indexB);
  }, P.prototype.GetSearchDirection = function () {
    switch (this.m_count) {
      case 1:
        return this.m_v1.w.GetNegative();
      case 2:
        var e = l.SubtractVV(this.m_v2.w, this.m_v1.w);
        return l.CrossVV(e, this.m_v1.w.GetNegative()) > 0 ? l.CrossFV(1, e) : l.CrossVF(e, 1);
      default:
        return a.b2Assert(false), new u;
    }
  }, P.prototype.GetClosestPoint = function () {
    switch (this.m_count) {
      case 0:
        return a.b2Assert(false), new u;
      case 1:
        return this.m_v1.w;
      case 2:
        return new u(this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x, this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y);
      default:
        return a.b2Assert(false), new u;
    }
  }, P.prototype.GetWitnessPoints = function (e, t) {
    switch (this.m_count) {
      case 0:
        a.b2Assert(false);
        break;
      case 1:
        e.SetV(this.m_v1.wA), t.SetV(this.m_v1.wB);
        break;
      case 2:
        e.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x, e.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y, t.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x, t.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;
        break;
      case 3:
        t.x = e.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x, t.y = e.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;
        break;
      default:
        a.b2Assert(false);
    }
  }, P.prototype.GetMetric = function () {
    switch (this.m_count) {
      case 0:
        return a.b2Assert(false), 0;
      case 1:
        return 0;
      case 2:
        return l.SubtractVV(this.m_v1.w, this.m_v2.w).Length();
      case 3:
        return l.CrossVV(l.SubtractVV(this.m_v2.w, this.m_v1.w), l.SubtractVV(this.m_v3.w, this.m_v1.w));
      default:
        return a.b2Assert(false), 0;
    }
  }, P.prototype.Solve2 = function () {
    var e = this.m_v1.w, t = this.m_v2.w, n = l.SubtractVV(t, e), i = -(e.x * n.x + e.y * n.y);
    if (i <= 0) return this.m_v1.a = 1, void (this.m_count = 1);
    var r = t.x * n.x + t.y * n.y;
    if (r <= 0) return this.m_v2.a = 1, this.m_count = 1, void this.m_v1.Set(this.m_v2);
    var o = 1 / (r + i);
    this.m_v1.a = r * o, this.m_v2.a = i * o, this.m_count = 2;
  }, P.prototype.Solve3 = function () {
    var e = this.m_v1.w, t = this.m_v2.w, n = this.m_v3.w, i = l.SubtractVV(t, e), r = l.Dot(e, i), o = l.Dot(t, i), s = -r, a = l.SubtractVV(n, e), c = l.Dot(e, a), h = l.Dot(n, a), u = -c, d = l.SubtractVV(n, t), p = l.Dot(t, d), m = l.Dot(n, d), f = -p, g = l.CrossVV(i, a), v = g * l.CrossVV(t, n), y = g * l.CrossVV(n, e), _ = g * l.CrossVV(e, t);
    if (s <= 0 && u <= 0) return this.m_v1.a = 1, void (this.m_count = 1);
    if (o > 0 && s > 0 && _ <= 0) {
      var x = 1 / (o + s);
      return this.m_v1.a = o * x, this.m_v2.a = s * x, void (this.m_count = 2);
    }
    if (h > 0 && u > 0 && y <= 0) {
      var b = 1 / (h + u);
      return this.m_v1.a = h * b, this.m_v3.a = u * b, this.m_count = 2, void this.m_v2.Set(this.m_v3);
    }
    if (o <= 0 && f <= 0) return this.m_v2.a = 1, this.m_count = 1, void this.m_v1.Set(this.m_v2);
    if (h <= 0 && m <= 0) return this.m_v3.a = 1, this.m_count = 1, void this.m_v1.Set(this.m_v3);
    if (m > 0 && f > 0 && v <= 0) {
      var w = 1 / (m + f);
      return this.m_v2.a = m * w, this.m_v3.a = f * w, this.m_count = 2, void this.m_v1.Set(this.m_v3);
    }
    var S = 1 / (v + y + _);
    this.m_v1.a = v * S, this.m_v2.a = y * S, this.m_v3.a = _ * S, this.m_count = 3;
  }, D.b2SimplexCache = function () {
    this.indexA = new j(3), this.indexB = new j(3);
  }, O.b2SimplexVertex = function () {}, O.prototype.Set = function (e) {
    this.wA.SetV(e.wA), this.wB.SetV(e.wB), this.w.SetV(e.w), this.a = e.a, this.indexA = e.indexA, this.indexB = e.indexB;
  }, I.b2TimeOfImpact = function () {}, I.TimeOfImpact = function (e) {
    ++I.b2_toiCalls;
    var t = e.proxyA, n = e.proxyB, i = e.sweepA, r = e.sweepB;
    a.b2Assert(i.t0 == r.t0), a.b2Assert(1 - i.t0 > Number.MIN_VALUE);
    var o = t.m_radius + n.m_radius, s = e.tolerance, c = 0, h = 0, u = 0;
    for (I.s_cache.count = 0, I.s_distanceInput.useRadii = false;;) {
      if (i.GetTransform(I.s_xfA, c), r.GetTransform(I.s_xfB, c), I.s_distanceInput.proxyA = t, I.s_distanceInput.proxyB = n, I.s_distanceInput.transformA = I.s_xfA, I.s_distanceInput.transformB = I.s_xfB, y.Distance(I.s_distanceOutput, I.s_cache, I.s_distanceInput), I.s_distanceOutput.distance <= 0) {
        c = 1;
        break;
      }
      I.s_fcn.Initialize(I.s_cache, t, I.s_xfA, n, I.s_xfB);
      var d = I.s_fcn.Evaluate(I.s_xfA, I.s_xfB);
      if (d <= 0) {
        c = 1;
        break;
      }
      if (0 == h && (u = d > o ? l.Max(o - s, 0.75 * o) : l.Max(d - s, 0.02 * o)), d - u < 0.5 * s) {
        if (0 == h) {
          c = 1;
          break;
        }
        break;
      }
      var p = c, m = c, f = 1, g = d;
      i.GetTransform(I.s_xfA, f), r.GetTransform(I.s_xfB, f);
      var v = I.s_fcn.Evaluate(I.s_xfA, I.s_xfB);
      if (v >= u) {
        c = 1;
        break;
      }
      for (var _ = 0;;) {
        var x = 0;
        x = 1 & _ ? m + (u - g) * (f - m) / (v - g) : 0.5 * (m + f), i.GetTransform(I.s_xfA, x), r.GetTransform(I.s_xfB, x);
        var b = I.s_fcn.Evaluate(I.s_xfA, I.s_xfB);
        if (l.Abs(b - u) < 0.025 * s) {
          p = x;
          break;
        }
        if (b > u ? (m = x, g = b) : (f = x, v = b), ++_, ++I.b2_toiRootIters, 50 == _) break;
      }
      if (I.b2_toiMaxRootIters = l.Max(I.b2_toiMaxRootIters, _), p < (1 + 100 * Number.MIN_VALUE) * c) break;
      if (c = p, h++, ++I.b2_toiIters, 1e3 == h) break;
    }
    return I.b2_toiMaxIters = l.Max(I.b2_toiMaxIters, h), c;
  }, i.postDefs.push(function () {
    i.Collision.b2TimeOfImpact.b2_toiCalls = 0, i.Collision.b2TimeOfImpact.b2_toiIters = 0, i.Collision.b2TimeOfImpact.b2_toiMaxIters = 0, i.Collision.b2TimeOfImpact.b2_toiRootIters = 0, i.Collision.b2TimeOfImpact.b2_toiMaxRootIters = 0, i.Collision.b2TimeOfImpact.s_cache = new D, i.Collision.b2TimeOfImpact.s_distanceInput = new _, i.Collision.b2TimeOfImpact.s_xfA = new h, i.Collision.b2TimeOfImpact.s_xfB = new h, i.Collision.b2TimeOfImpact.s_fcn = new L, i.Collision.b2TimeOfImpact.s_distanceOutput = new x;
  }), B.b2TOIInput = function () {
    this.proxyA = new b, this.proxyB = new b, this.sweepA = new c, this.sweepB = new c;
  }, F.b2WorldManifold = function () {
    this.m_normal = new u;
  }, F.prototype.b2WorldManifold = function () {
    this.m_points = new H(a.b2_maxManifoldPoints);
    for (var e = 0; e < a.b2_maxManifoldPoints; e++) this.m_points[e] = new u;
  }, F.prototype.Initialize = function (e, t, n, i, r) {
    if (undefined === n && (n = 0), undefined === r && (r = 0), 0 != e.m_pointCount) {
      var o, s, a = 0, l = 0, c = 0, h = 0, u = 0, d = 0, p = 0;
      switch (e.m_type) {
        case T.e_circles:
          s = t.R, o = e.m_localPoint;
          var m = t.position.x + s.col1.x * o.x + s.col2.x * o.y, f = t.position.y + s.col1.y * o.x + s.col2.y * o.y;
          s = i.R, o = e.m_points[0].m_localPoint;
          var g = i.position.x + s.col1.x * o.x + s.col2.x * o.y, v = i.position.y + s.col1.y * o.x + s.col2.y * o.y, y = g - m, _ = v - f, x = y * y + _ * _;
          if (x > Number.MIN_VALUE * Number.MIN_VALUE) {
            var b = Math.sqrt(x);
            this.m_normal.x = y / b, this.m_normal.y = _ / b;
          } else this.m_normal.x = 1, this.m_normal.y = 0;
          var w = m + n * this.m_normal.x, S = f + n * this.m_normal.y, E = g - r * this.m_normal.x, q = v - r * this.m_normal.y;
          this.m_points[0].x = 0.5 * (w + E), this.m_points[0].y = 0.5 * (S + q);
          break;
        case T.e_faceA:
          for (s = t.R, o = e.m_localPlaneNormal, l = s.col1.x * o.x + s.col2.x * o.y, c = s.col1.y * o.x + s.col2.y * o.y, s = t.R, o = e.m_localPoint, h = t.position.x + s.col1.x * o.x + s.col2.x * o.y, u = t.position.y + s.col1.y * o.x + s.col2.y * o.y, this.m_normal.x = l, this.m_normal.y = c, a = 0; a < e.m_pointCount; a++) s = i.R, o = e.m_points[a].m_localPoint, d = i.position.x + s.col1.x * o.x + s.col2.x * o.y, p = i.position.y + s.col1.y * o.x + s.col2.y * o.y, this.m_points[a].x = d + 0.5 * (n - (d - h) * l - (p - u) * c - r) * l, this.m_points[a].y = p + 0.5 * (n - (d - h) * l - (p - u) * c - r) * c;
          break;
        case T.e_faceB:
          for (s = i.R, o = e.m_localPlaneNormal, l = s.col1.x * o.x + s.col2.x * o.y, c = s.col1.y * o.x + s.col2.y * o.y, s = i.R, o = e.m_localPoint, h = i.position.x + s.col1.x * o.x + s.col2.x * o.y, u = i.position.y + s.col1.y * o.x + s.col2.y * o.y, this.m_normal.x = -l, this.m_normal.y = -c, a = 0; a < e.m_pointCount; a++) s = t.R, o = e.m_points[a].m_localPoint, d = t.position.x + s.col1.x * o.x + s.col2.x * o.y, p = t.position.y + s.col1.y * o.x + s.col2.y * o.y, this.m_points[a].x = d + 0.5 * (r - (d - h) * l - (p - u) * c - n) * l, this.m_points[a].y = p + 0.5 * (r - (d - h) * l - (p - u) * c - n) * c;
      }
    }
  }, z.ClipVertex = function () {
    this.v = new u, this.id = new g;
  }, z.prototype.Set = function (e) {
    this.v.SetV(e.v), this.id.Set(e.id);
  }, N.Features = function () {}, Object.defineProperty(N.prototype, "referenceEdge", {enumerable: false, configurable: true, get: function () {
    return this._referenceEdge;
  }}), Object.defineProperty(N.prototype, "referenceEdge", {enumerable: false, configurable: true, set: function (e) {
    undefined === e && (e = 0), this._referenceEdge = e, this._m_id._key = 4294967040 & this._m_id._key | 255 & this._referenceEdge;
  }}), Object.defineProperty(N.prototype, "incidentEdge", {enumerable: false, configurable: true, get: function () {
    return this._incidentEdge;
  }}), Object.defineProperty(N.prototype, "incidentEdge", {enumerable: false, configurable: true, set: function (e) {
    undefined === e && (e = 0), this._incidentEdge = e, this._m_id._key = 4294902015 & this._m_id._key | this._incidentEdge << 8 & 65280;
  }}), Object.defineProperty(N.prototype, "incidentVertex", {enumerable: false, configurable: true, get: function () {
    return this._incidentVertex;
  }}), Object.defineProperty(N.prototype, "incidentVertex", {enumerable: false, configurable: true, set: function (e) {
    undefined === e && (e = 0), this._incidentVertex = e, this._m_id._key = 4278255615 & this._m_id._key | this._incidentVertex << 16 & 16711680;
  }}), Object.defineProperty(N.prototype, "flip", {enumerable: false, configurable: true, get: function () {
    return this._flip;
  }}), Object.defineProperty(N.prototype, "flip", {enumerable: false, configurable: true, set: function (e) {
    undefined === e && (e = 0), this._flip = e, this._m_id._key = 16777215 & this._m_id._key | this._flip << 24 & 4278190080;
  }}), function () {
    i.Common.b2Color, i.Common.b2internal;
    var e = i.Common.b2Settings, t = i.Collision.Shapes.b2CircleShape, n = i.Collision.Shapes.b2EdgeChainDef, r = i.Collision.Shapes.b2EdgeShape, o = i.Collision.Shapes.b2MassData, s = i.Collision.Shapes.b2PolygonShape, a = i.Collision.Shapes.b2Shape, l = i.Common.Math.b2Mat22, c = (i.Common.Math.b2Mat33, i.Common.Math.b2Math), h = (i.Common.Math.b2Sweep, i.Common.Math.b2Transform), u = i.Common.Math.b2Vec2, d = (i.Common.Math.b2Vec3, i.Dynamics.b2Body, i.Dynamics.b2BodyDef, i.Dynamics.b2ContactFilter, i.Dynamics.b2ContactImpulse, i.Dynamics.b2ContactListener, i.Dynamics.b2ContactManager, i.Dynamics.b2DebugDraw, i.Dynamics.b2DestructionListener, i.Dynamics.b2FilterData, i.Dynamics.b2Fixture, i.Dynamics.b2FixtureDef, i.Dynamics.b2Island, i.Dynamics.b2TimeStep, i.Dynamics.b2World, i.Collision.b2AABB, i.Collision.b2Bound, i.Collision.b2BoundValues, i.Collision.b2Collision, i.Collision.b2ContactID, i.Collision.b2ContactPoint, i.Collision.b2Distance), p = i.Collision.b2DistanceInput, m = i.Collision.b2DistanceOutput, f = i.Collision.b2DistanceProxy, g = (i.Collision.b2DynamicTree, i.Collision.b2DynamicTreeBroadPhase, i.Collision.b2DynamicTreeNode, i.Collision.b2DynamicTreePair, i.Collision.b2Manifold, i.Collision.b2ManifoldPoint, i.Collision.b2Point, i.Collision.b2RayCastInput, i.Collision.b2RayCastOutput, i.Collision.b2Segment, i.Collision.b2SeparationFunction, i.Collision.b2Simplex, i.Collision.b2SimplexCache);
    i.Collision.b2SimplexVertex, i.Collision.b2TimeOfImpact, i.Collision.b2TOIInput, i.Collision.b2WorldManifold, i.Collision.ClipVertex, i.Collision.Features, i.Collision.IBroadPhase;
    i.inherit(t, i.Collision.Shapes.b2Shape), t.prototype.__super = i.Collision.Shapes.b2Shape.prototype, t.b2CircleShape = function () {
      i.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments), this.m_p = new u;
    }, t.prototype.Copy = function () {
      var e = new t;
      return e.Set(this), e;
    }, t.prototype.Set = function (e) {
      if (this.__super.Set.call(this, e), i.is(e, t)) {
        var n = e instanceof t ? e : null;
        this.m_p.SetV(n.m_p);
      }
    }, t.prototype.TestPoint = function (e, t) {
      var n = e.R, i = e.position.x + (n.col1.x * this.m_p.x + n.col2.x * this.m_p.y), r = e.position.y + (n.col1.y * this.m_p.x + n.col2.y * this.m_p.y);
      return (i = t.x - i) * i + (r = t.y - r) * r <= this.m_radius * this.m_radius;
    }, t.prototype.RayCast = function (e, t, n) {
      var i = n.R, r = n.position.x + (i.col1.x * this.m_p.x + i.col2.x * this.m_p.y), o = n.position.y + (i.col1.y * this.m_p.x + i.col2.y * this.m_p.y), s = t.p1.x - r, a = t.p1.y - o, l = s * s + a * a - this.m_radius * this.m_radius, c = t.p2.x - t.p1.x, h = t.p2.y - t.p1.y, u = s * c + a * h, d = c * c + h * h, p = u * u - d * l;
      if (p < 0 || d < Number.MIN_VALUE) return false;
      var m = -(u + Math.sqrt(p));
      return 0 <= m && m <= t.maxFraction * d && (m /= d, e.fraction = m, e.normal.x = s + m * c, e.normal.y = a + m * h, e.normal.Normalize(), true);
    }, t.prototype.ComputeAABB = function (e, t) {
      var n = t.R, i = t.position.x + (n.col1.x * this.m_p.x + n.col2.x * this.m_p.y), r = t.position.y + (n.col1.y * this.m_p.x + n.col2.y * this.m_p.y);
      e.lowerBound.Set(i - this.m_radius, r - this.m_radius), e.upperBound.Set(i + this.m_radius, r + this.m_radius);
    }, t.prototype.ComputeMass = function (t, n) {
      undefined === n && (n = 0), t.mass = n * e.b2_pi * this.m_radius * this.m_radius, t.center.SetV(this.m_p), t.I = t.mass * (0.5 * this.m_radius * this.m_radius + (this.m_p.x * this.m_p.x + this.m_p.y * this.m_p.y));
    }, t.prototype.ComputeSubmergedArea = function (e, t, n, i) {
      undefined === t && (t = 0);
      var r = c.MulX(n, this.m_p), o = -(c.Dot(e, r) - t);
      if (o < -this.m_radius + Number.MIN_VALUE) return 0;
      if (o > this.m_radius) return i.SetV(r), Math.PI * this.m_radius * this.m_radius;
      var s = this.m_radius * this.m_radius, a = o * o, l = s * (Math.asin(o / this.m_radius) + Math.PI / 2) + o * Math.sqrt(s - a), h = -0.6666666666666666 * Math.pow(s - a, 1.5) / l;
      return i.x = r.x + e.x * h, i.y = r.y + e.y * h, l;
    }, t.prototype.GetLocalPosition = function () {
      return this.m_p;
    }, t.prototype.SetLocalPosition = function (e) {
      this.m_p.SetV(e);
    }, t.prototype.GetRadius = function () {
      return this.m_radius;
    }, t.prototype.SetRadius = function (e) {
      undefined === e && (e = 0), this.m_radius = e;
    }, t.prototype.b2CircleShape = function (e) {
      undefined === e && (e = 0), this.__super.b2Shape.call(this), this.m_type = a.e_circleShape, this.m_radius = e;
    }, n.b2EdgeChainDef = function () {}, n.prototype.b2EdgeChainDef = function () {
      this.vertexCount = 0, this.isALoop = true, this.vertices = [];
    }, i.inherit(r, i.Collision.Shapes.b2Shape), r.prototype.__super = i.Collision.Shapes.b2Shape.prototype, r.b2EdgeShape = function () {
      i.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments), this.s_supportVec = new u, this.m_v1 = new u, this.m_v2 = new u, this.m_coreV1 = new u, this.m_coreV2 = new u, this.m_normal = new u, this.m_direction = new u, this.m_cornerDir1 = new u, this.m_cornerDir2 = new u;
    }, r.prototype.TestPoint = function (e, t) {
      return false;
    }, r.prototype.RayCast = function (e, t, n) {
      var i, r = t.p2.x - t.p1.x, o = t.p2.y - t.p1.y;
      i = n.R;
      var s = n.position.x + (i.col1.x * this.m_v1.x + i.col2.x * this.m_v1.y), a = n.position.y + (i.col1.y * this.m_v1.x + i.col2.y * this.m_v1.y), l = n.position.y + (i.col1.y * this.m_v2.x + i.col2.y * this.m_v2.y) - a, c = -(n.position.x + (i.col1.x * this.m_v2.x + i.col2.x * this.m_v2.y) - s), h = 100 * Number.MIN_VALUE, u = -(r * l + o * c);
      if (u > h) {
        var d = t.p1.x - s, p = t.p1.y - a, m = d * l + p * c;
        if (0 <= m && m <= t.maxFraction * u) {
          var f = -r * p + o * d;
          if (-h * u <= f && f <= u * (1 + h)) {
            m /= u, e.fraction = m;
            var g = Math.sqrt(l * l + c * c);
            return e.normal.x = l / g, e.normal.y = c / g, true;
          }
        }
      }
      return false;
    }, r.prototype.ComputeAABB = function (e, t) {
      var n = t.R, i = t.position.x + (n.col1.x * this.m_v1.x + n.col2.x * this.m_v1.y), r = t.position.y + (n.col1.y * this.m_v1.x + n.col2.y * this.m_v1.y), o = t.position.x + (n.col1.x * this.m_v2.x + n.col2.x * this.m_v2.y), s = t.position.y + (n.col1.y * this.m_v2.x + n.col2.y * this.m_v2.y);
      i < o ? (e.lowerBound.x = i, e.upperBound.x = o) : (e.lowerBound.x = o, e.upperBound.x = i), r < s ? (e.lowerBound.y = r, e.upperBound.y = s) : (e.lowerBound.y = s, e.upperBound.y = r);
    }, r.prototype.ComputeMass = function (e, t) {
      undefined === t && (t = 0), e.mass = 0, e.center.SetV(this.m_v1), e.I = 0;
    }, r.prototype.ComputeSubmergedArea = function (e, t, n, i) {
      undefined === t && (t = 0);
      var r = new u(e.x * t, e.y * t), o = c.MulX(n, this.m_v1), s = c.MulX(n, this.m_v2), a = c.Dot(e, o) - t, l = c.Dot(e, s) - t;
      if (a > 0) {
        if (l > 0) return 0;
        o.x = -l / (a - l) * o.x + a / (a - l) * s.x, o.y = -l / (a - l) * o.y + a / (a - l) * s.y;
      } else l > 0 && (s.x = -l / (a - l) * o.x + a / (a - l) * s.x, s.y = -l / (a - l) * o.y + a / (a - l) * s.y);
      return i.x = (r.x + o.x + s.x) / 3, i.y = (r.y + o.y + s.y) / 3, 0.5 * ((o.x - r.x) * (s.y - r.y) - (o.y - r.y) * (s.x - r.x));
    }, r.prototype.GetLength = function () {
      return this.m_length;
    }, r.prototype.GetVertex1 = function () {
      return this.m_v1;
    }, r.prototype.GetVertex2 = function () {
      return this.m_v2;
    }, r.prototype.GetCoreVertex1 = function () {
      return this.m_coreV1;
    }, r.prototype.GetCoreVertex2 = function () {
      return this.m_coreV2;
    }, r.prototype.GetNormalVector = function () {
      return this.m_normal;
    }, r.prototype.GetDirectionVector = function () {
      return this.m_direction;
    }, r.prototype.GetCorner1Vector = function () {
      return this.m_cornerDir1;
    }, r.prototype.GetCorner2Vector = function () {
      return this.m_cornerDir2;
    }, r.prototype.Corner1IsConvex = function () {
      return this.m_cornerConvex1;
    }, r.prototype.Corner2IsConvex = function () {
      return this.m_cornerConvex2;
    }, r.prototype.GetFirstVertex = function (e) {
      var t = e.R;
      return new u(e.position.x + (t.col1.x * this.m_coreV1.x + t.col2.x * this.m_coreV1.y), e.position.y + (t.col1.y * this.m_coreV1.x + t.col2.y * this.m_coreV1.y));
    }, r.prototype.GetNextEdge = function () {
      return this.m_nextEdge;
    }, r.prototype.GetPrevEdge = function () {
      return this.m_prevEdge;
    }, r.prototype.Support = function (e, t, n) {
      undefined === t && (t = 0), undefined === n && (n = 0);
      var i = e.R, r = e.position.x + (i.col1.x * this.m_coreV1.x + i.col2.x * this.m_coreV1.y), o = e.position.y + (i.col1.y * this.m_coreV1.x + i.col2.y * this.m_coreV1.y), s = e.position.x + (i.col1.x * this.m_coreV2.x + i.col2.x * this.m_coreV2.y), a = e.position.y + (i.col1.y * this.m_coreV2.x + i.col2.y * this.m_coreV2.y);
      return r * t + o * n > s * t + a * n ? (this.s_supportVec.x = r, this.s_supportVec.y = o) : (this.s_supportVec.x = s, this.s_supportVec.y = a), this.s_supportVec;
    }, r.prototype.b2EdgeShape = function (t, n) {
      this.__super.b2Shape.call(this), this.m_type = a.e_edgeShape, this.m_prevEdge = null, this.m_nextEdge = null, this.m_v1 = t, this.m_v2 = n, this.m_direction.Set(this.m_v2.x - this.m_v1.x, this.m_v2.y - this.m_v1.y), this.m_length = this.m_direction.Normalize(), this.m_normal.Set(this.m_direction.y, -this.m_direction.x), this.m_coreV1.Set(-e.b2_toiSlop * (this.m_normal.x - this.m_direction.x) + this.m_v1.x, -e.b2_toiSlop * (this.m_normal.y - this.m_direction.y) + this.m_v1.y), this.m_coreV2.Set(-e.b2_toiSlop * (this.m_normal.x + this.m_direction.x) + this.m_v2.x, -e.b2_toiSlop * (this.m_normal.y + this.m_direction.y) + this.m_v2.y), this.m_cornerDir1 = this.m_normal, this.m_cornerDir2.Set(-this.m_normal.x, -this.m_normal.y);
    }, r.prototype.SetPrevEdge = function (e, t, n, i) {
      this.m_prevEdge = e, this.m_coreV1 = t, this.m_cornerDir1 = n, this.m_cornerConvex1 = i;
    }, r.prototype.SetNextEdge = function (e, t, n, i) {
      this.m_nextEdge = e, this.m_coreV2 = t, this.m_cornerDir2 = n, this.m_cornerConvex2 = i;
    }, o.b2MassData = function () {
      this.mass = 0, this.center = new u(0, 0), this.I = 0;
    }, i.inherit(s, i.Collision.Shapes.b2Shape), s.prototype.__super = i.Collision.Shapes.b2Shape.prototype, s.b2PolygonShape = function () {
      i.Collision.Shapes.b2Shape.b2Shape.apply(this, arguments);
    }, s.prototype.Copy = function () {
      var e = new s;
      return e.Set(this), e;
    }, s.prototype.Set = function (e) {
      if (this.__super.Set.call(this, e), i.is(e, s)) {
        var t = e instanceof s ? e : null;
        this.m_centroid.SetV(t.m_centroid), this.m_vertexCount = t.m_vertexCount, this.Reserve(this.m_vertexCount);
        for (var n = 0; n < this.m_vertexCount; n++) this.m_vertices[n].SetV(t.m_vertices[n]), this.m_normals[n].SetV(t.m_normals[n]);
      }
    }, s.prototype.SetAsArray = function (e, t) {
      undefined === t && (t = 0);
      var n, i = new H, r = 0;
      for (r = 0; r < e.length; ++r) n = e[r], i.push(n);
      this.SetAsVector(i, t);
    }, s.AsArray = function (e, t) {
      undefined === t && (t = 0);
      var n = new s;
      return n.SetAsArray(e, t), n;
    }, s.prototype.SetAsVector = function (t, n) {
      undefined === n && (n = 0), 0 == n && (n = t.length), e.b2Assert(2 <= n), this.m_vertexCount = n, this.Reserve(n);
      var i = 0;
      for (i = 0; i < this.m_vertexCount; i++) this.m_vertices[i].SetV(t[i]);
      for (i = 0; i < this.m_vertexCount; ++i) {
        var r = parseInt(i), o = parseInt(i + 1 < this.m_vertexCount ? i + 1 : 0), a = c.SubtractVV(this.m_vertices[o], this.m_vertices[r]);
        e.b2Assert(a.LengthSquared() > Number.MIN_VALUE), this.m_normals[i].SetV(c.CrossVF(a, 1)), this.m_normals[i].Normalize();
      }
      this.m_centroid = s.ComputeCentroid(this.m_vertices, this.m_vertexCount);
    }, s.AsVector = function (e, t) {
      undefined === t && (t = 0);
      var n = new s;
      return n.SetAsVector(e, t), n;
    }, s.prototype.SetAsBox = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0), this.m_vertexCount = 4, this.Reserve(4), this.m_vertices[0].Set(-e, -t), this.m_vertices[1].Set(e, -t), this.m_vertices[2].Set(e, t), this.m_vertices[3].Set(-e, t), this.m_normals[0].Set(0, -1), this.m_normals[1].Set(1, 0), this.m_normals[2].Set(0, 1), this.m_normals[3].Set(-1, 0), this.m_centroid.SetZero();
    }, s.AsBox = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0);
      var n = new s;
      return n.SetAsBox(e, t), n;
    }, s.prototype.SetAsOrientedBox = function (e, t, n, i) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === n && (n = null), undefined === i && (i = 0), this.m_vertexCount = 4, this.Reserve(4), this.m_vertices[0].Set(-e, -t), this.m_vertices[1].Set(e, -t), this.m_vertices[2].Set(e, t), this.m_vertices[3].Set(-e, t), this.m_normals[0].Set(0, -1), this.m_normals[1].Set(1, 0), this.m_normals[2].Set(0, 1), this.m_normals[3].Set(-1, 0), this.m_centroid = n;
      var r = new h;
      r.position = n, r.R.Set(i);
      for (var o = 0; o < this.m_vertexCount; ++o) this.m_vertices[o] = c.MulX(r, this.m_vertices[o]), this.m_normals[o] = c.MulMV(r.R, this.m_normals[o]);
    }, s.AsOrientedBox = function (e, t, n, i) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === n && (n = null), undefined === i && (i = 0);
      var r = new s;
      return r.SetAsOrientedBox(e, t, n, i), r;
    }, s.prototype.SetAsEdge = function (e, t) {
      this.m_vertexCount = 2, this.Reserve(2), this.m_vertices[0].SetV(e), this.m_vertices[1].SetV(t), this.m_centroid.x = 0.5 * (e.x + t.x), this.m_centroid.y = 0.5 * (e.y + t.y), this.m_normals[0] = c.CrossVF(c.SubtractVV(t, e), 1), this.m_normals[0].Normalize(), this.m_normals[1].x = -this.m_normals[0].x, this.m_normals[1].y = -this.m_normals[0].y;
    }, s.AsEdge = function (e, t) {
      var n = new s;
      return n.SetAsEdge(e, t), n;
    }, s.prototype.TestPoint = function (e, t) {
      for (var n, i = e.R, r = t.x - e.position.x, o = t.y - e.position.y, s = r * i.col1.x + o * i.col1.y, a = r * i.col2.x + o * i.col2.y, l = 0; l < this.m_vertexCount; ++l) {
        if (r = s - (n = this.m_vertices[l]).x, o = a - n.y, (n = this.m_normals[l]).x * r + n.y * o > 0) return false;
      }
      return true;
    }, s.prototype.RayCast = function (e, t, n) {
      var i, r, o = 0, s = t.maxFraction, a = 0, l = 0;
      a = t.p1.x - n.position.x, l = t.p1.y - n.position.y;
      var c = a * (i = n.R).col1.x + l * i.col1.y, h = a * i.col2.x + l * i.col2.y;
      a = t.p2.x - n.position.x, l = t.p2.y - n.position.y;
      for (var u = a * (i = n.R).col1.x + l * i.col1.y - c, d = a * i.col2.x + l * i.col2.y - h, p = parseInt(-1), m = 0; m < this.m_vertexCount; ++m) {
        a = (r = this.m_vertices[m]).x - c, l = r.y - h;
        var f = (r = this.m_normals[m]).x * a + r.y * l, g = r.x * u + r.y * d;
        if (0 == g) {
          if (f < 0) return false;
        } else g < 0 && f < o * g ? (o = f / g, p = m) : g > 0 && f < s * g && (s = f / g);
        if (s < o - Number.MIN_VALUE) return false;
      }
      return p >= 0 && (e.fraction = o, i = n.R, r = this.m_normals[p], e.normal.x = i.col1.x * r.x + i.col2.x * r.y, e.normal.y = i.col1.y * r.x + i.col2.y * r.y, true);
    }, s.prototype.ComputeAABB = function (e, t) {
      for (var n = t.R, i = this.m_vertices[0], r = t.position.x + (n.col1.x * i.x + n.col2.x * i.y), o = t.position.y + (n.col1.y * i.x + n.col2.y * i.y), s = r, a = o, l = 1; l < this.m_vertexCount; ++l) {
        i = this.m_vertices[l];
        var c = t.position.x + (n.col1.x * i.x + n.col2.x * i.y), h = t.position.y + (n.col1.y * i.x + n.col2.y * i.y);
        r = r < c ? r : c, o = o < h ? o : h, s = s > c ? s : c, a = a > h ? a : h;
      }
      e.lowerBound.x = r - this.m_radius, e.lowerBound.y = o - this.m_radius, e.upperBound.x = s + this.m_radius, e.upperBound.y = a + this.m_radius;
    }, s.prototype.ComputeMass = function (e, t) {
      if (undefined === t && (t = 0), 2 == this.m_vertexCount) return e.center.x = 0.5 * (this.m_vertices[0].x + this.m_vertices[1].x), e.center.y = 0.5 * (this.m_vertices[0].y + this.m_vertices[1].y), e.mass = 0, void (e.I = 0);
      for (var n = 0, i = 0, r = 0, o = 0, s = 0; s < this.m_vertexCount; ++s) {
        var a = this.m_vertices[s], l = s + 1 < this.m_vertexCount ? this.m_vertices[parseInt(s + 1)] : this.m_vertices[0], c = a.x - 0, h = a.y - 0, u = l.x - 0, d = l.y - 0, p = c * d - h * u, m = 0.5 * p;
        r += m, n += m * 0.3333333333333333 * (0 + a.x + l.x), i += m * 0.3333333333333333 * (0 + a.y + l.y);
        o += p * (0.3333333333333333 * (0.25 * (c * c + u * c + u * u) + (0 * c + 0 * u)) + 0 + (0.3333333333333333 * (0.25 * (h * h + d * h + d * d) + (0 * h + 0 * d)) + 0));
      }
      e.mass = t * r, n *= 1 / r, i *= 1 / r, e.center.Set(n, i), e.I = t * o;
    }, s.prototype.ComputeSubmergedArea = function (e, t, n, i) {
      undefined === t && (t = 0);
      var r = c.MulTMV(n.R, e), s = t - c.Dot(e, n.position), a = new j, l = 0, h = parseInt(-1), d = parseInt(-1), p = false, m = 0;
      for (m = 0; m < this.m_vertexCount; ++m) {
        a[m] = c.Dot(r, this.m_vertices[m]) - s;
        var f = a[m] < -Number.MIN_VALUE;
        m > 0 && (f ? p || (h = m - 1, l++) : p && (d = m - 1, l++)), p = f;
      }
      switch (l) {
        case 0:
          if (p) {
            var g = new o;
            return this.ComputeMass(g, 1), i.SetV(c.MulX(n, g.center)), g.mass;
          }
          return 0;
        case 1:
          -1 == h ? h = this.m_vertexCount - 1 : d = this.m_vertexCount - 1;
      }
      var v, y = parseInt((h + 1) % this.m_vertexCount), _ = parseInt((d + 1) % this.m_vertexCount), x = (0 - a[h]) / (a[y] - a[h]), b = (0 - a[d]) / (a[_] - a[d]), w = new u(this.m_vertices[h].x * (1 - x) + this.m_vertices[y].x * x, this.m_vertices[h].y * (1 - x) + this.m_vertices[y].y * x), S = new u(this.m_vertices[d].x * (1 - b) + this.m_vertices[_].x * b, this.m_vertices[d].y * (1 - b) + this.m_vertices[_].y * b), E = 0, q = new u, T = this.m_vertices[y];
      for (m = y; m != _;) {
        v = (m = (m + 1) % this.m_vertexCount) == _ ? S : this.m_vertices[m];
        var A = 0.5 * ((T.x - w.x) * (v.y - w.y) - (T.y - w.y) * (v.x - w.x));
        E += A, q.x += A * (w.x + T.x + v.x) / 3, q.y += A * (w.y + T.y + v.y) / 3, T = v;
      }
      return q.Multiply(1 / E), i.SetV(c.MulX(n, q)), E;
    }, s.prototype.GetVertexCount = function () {
      return this.m_vertexCount;
    }, s.prototype.GetVertices = function () {
      return this.m_vertices;
    }, s.prototype.GetNormals = function () {
      return this.m_normals;
    }, s.prototype.GetSupport = function (e) {
      for (var t = 0, n = this.m_vertices[0].x * e.x + this.m_vertices[0].y * e.y, i = 1; i < this.m_vertexCount; ++i) {
        var r = this.m_vertices[i].x * e.x + this.m_vertices[i].y * e.y;
        r > n && (t = i, n = r);
      }
      return t;
    }, s.prototype.GetSupportVertex = function (e) {
      for (var t = 0, n = this.m_vertices[0].x * e.x + this.m_vertices[0].y * e.y, i = 1; i < this.m_vertexCount; ++i) {
        var r = this.m_vertices[i].x * e.x + this.m_vertices[i].y * e.y;
        r > n && (t = i, n = r);
      }
      return this.m_vertices[t];
    }, s.prototype.Validate = function () {
      return false;
    }, s.prototype.b2PolygonShape = function () {
      this.__super.b2Shape.call(this), this.m_type = a.e_polygonShape, this.m_centroid = new u, this.m_vertices = new H, this.m_normals = new H;
    }, s.prototype.Reserve = function (e) {
      undefined === e && (e = 0);
      for (var t = parseInt(this.m_vertices.length); t < e; t++) this.m_vertices[t] = new u, this.m_normals[t] = new u;
    }, s.ComputeCentroid = function (e, t) {
      undefined === t && (t = 0);
      for (var n = new u, i = 0, r = 0; r < t; ++r) {
        var o = e[r], s = r + 1 < t ? e[parseInt(r + 1)] : e[0], a = o.x - 0, l = o.y - 0, c = s.x - 0, h = 0.5 * (a * (s.y - 0) - l * c);
        i += h, n.x += h * 0.3333333333333333 * (0 + o.x + s.x), n.y += h * 0.3333333333333333 * (0 + o.y + s.y);
      }
      return n.x *= 1 / i, n.y *= 1 / i, n;
    }, s.ComputeOBB = function (e, t, n) {
      undefined === n && (n = 0);
      var i = 0, r = new H(n + 1);
      for (i = 0; i < n; ++i) r[i] = t[i];
      r[n] = r[0];
      var o = Number.MAX_VALUE;
      for (i = 1; i <= n; ++i) {
        for (var s = r[parseInt(i - 1)], a = r[i].x - s.x, l = r[i].y - s.y, c = Math.sqrt(a * a + l * l), h = -(l /= c), u = a /= c, d = Number.MAX_VALUE, p = Number.MAX_VALUE, m = -Number.MAX_VALUE, f = -Number.MAX_VALUE, g = 0; g < n; ++g) {
          var v = r[g].x - s.x, y = r[g].y - s.y, _ = a * v + l * y, x = h * v + u * y;
          _ < d && (d = _), x < p && (p = x), _ > m && (m = _), x > f && (f = x);
        }
        var b = (m - d) * (f - p);
        if (b < 0.95 * o) {
          o = b, e.R.col1.x = a, e.R.col1.y = l, e.R.col2.x = h, e.R.col2.y = u;
          var w = 0.5 * (d + m), S = 0.5 * (p + f), E = e.R;
          e.center.x = s.x + (E.col1.x * w + E.col2.x * S), e.center.y = s.y + (E.col1.y * w + E.col2.y * S), e.extents.x = 0.5 * (m - d), e.extents.y = 0.5 * (f - p);
        }
      }
    }, i.postDefs.push(function () {
      i.Collision.Shapes.b2PolygonShape.s_mat = new l;
    }), a.b2Shape = function () {}, a.prototype.Copy = function () {
      return null;
    }, a.prototype.Set = function (e) {
      this.m_radius = e.m_radius;
    }, a.prototype.GetType = function () {
      return this.m_type;
    }, a.prototype.TestPoint = function (e, t) {
      return false;
    }, a.prototype.RayCast = function (e, t, n) {
      return false;
    }, a.prototype.ComputeAABB = function (e, t) {}, a.prototype.ComputeMass = function (e, t) {
      undefined === t && (t = 0);
    }, a.prototype.ComputeSubmergedArea = function (e, t, n, i) {
      return undefined === t && (t = 0), 0;
    }, a.TestOverlap = function (e, t, n, i) {
      var r = new p;
      r.proxyA = new f, r.proxyA.Set(e), r.proxyB = new f, r.proxyB.Set(n), r.transformA = t, r.transformB = i, r.useRadii = true;
      var o = new g;
      o.count = 0;
      var s = new m;
      return d.Distance(s, o, r), s.distance < 10 * Number.MIN_VALUE;
    }, a.prototype.b2Shape = function () {
      this.m_type = a.e_unknownShape, this.m_radius = e.b2_linearSlop;
    }, i.postDefs.push(function () {
      i.Collision.Shapes.b2Shape.e_unknownShape = parseInt(-1), i.Collision.Shapes.b2Shape.e_circleShape = 0, i.Collision.Shapes.b2Shape.e_polygonShape = 1, i.Collision.Shapes.b2Shape.e_edgeShape = 2, i.Collision.Shapes.b2Shape.e_shapeTypeCount = 3, i.Collision.Shapes.b2Shape.e_hitCollide = 1, i.Collision.Shapes.b2Shape.e_missCollide = 0, i.Collision.Shapes.b2Shape.e_startsInsideCollide = parseInt(-1);
    });
  }(), function () {
    var e = i.Common.b2Color, t = (i.Common.b2internal, i.Common.b2Settings), n = (i.Common.Math.b2Mat22, i.Common.Math.b2Mat33, i.Common.Math.b2Math);
    i.Common.Math.b2Sweep, i.Common.Math.b2Transform, i.Common.Math.b2Vec2, i.Common.Math.b2Vec3;
    e.b2Color = function () {
      this._r = 0, this._g = 0, this._b = 0;
    }, e.prototype.b2Color = function (e, t, r) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === r && (r = 0), this._r = i.parseUInt(255 * n.Clamp(e, 0, 1)), this._g = i.parseUInt(255 * n.Clamp(t, 0, 1)), this._b = i.parseUInt(255 * n.Clamp(r, 0, 1));
    }, e.prototype.Set = function (e, t, r) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === r && (r = 0), this._r = i.parseUInt(255 * n.Clamp(e, 0, 1)), this._g = i.parseUInt(255 * n.Clamp(t, 0, 1)), this._b = i.parseUInt(255 * n.Clamp(r, 0, 1));
    }, Object.defineProperty(e.prototype, "r", {enumerable: false, configurable: true, set: function (e) {
      undefined === e && (e = 0), this._r = i.parseUInt(255 * n.Clamp(e, 0, 1));
    }}), Object.defineProperty(e.prototype, "g", {enumerable: false, configurable: true, set: function (e) {
      undefined === e && (e = 0), this._g = i.parseUInt(255 * n.Clamp(e, 0, 1));
    }}), Object.defineProperty(e.prototype, "b", {enumerable: false, configurable: true, set: function (e) {
      undefined === e && (e = 0), this._b = i.parseUInt(255 * n.Clamp(e, 0, 1));
    }}), Object.defineProperty(e.prototype, "color", {enumerable: false, configurable: true, get: function () {
      return this._r << 16 | this._g << 8 | this._b;
    }}), t.b2Settings = function () {}, t.b2MixFriction = function (e, t) {
      return undefined === e && (e = 0), undefined === t && (t = 0), Math.sqrt(e * t);
    }, t.b2MixRestitution = function (e, t) {
      return undefined === e && (e = 0), undefined === t && (t = 0), e > t ? e : t;
    }, t.b2Assert = function (e) {
      if (!e) throw "Assertion Failed";
    }, i.postDefs.push(function () {
      i.Common.b2Settings.VERSION = "2.1alpha", i.Common.b2Settings.USHRT_MAX = 65535, i.Common.b2Settings.b2_pi = Math.PI, i.Common.b2Settings.b2_maxManifoldPoints = 2, i.Common.b2Settings.b2_aabbExtension = 0.1, i.Common.b2Settings.b2_aabbMultiplier = 2, i.Common.b2Settings.b2_polygonRadius = 2 * t.b2_linearSlop, i.Common.b2Settings.b2_linearSlop = 0.005, i.Common.b2Settings.b2_angularSlop = 0.011111111111111112 * t.b2_pi, i.Common.b2Settings.b2_toiSlop = 8 * t.b2_linearSlop, i.Common.b2Settings.b2_maxTOIContactsPerIsland = 32, i.Common.b2Settings.b2_maxTOIJointsPerIsland = 32, i.Common.b2Settings.b2_velocityThreshold = 1, i.Common.b2Settings.b2_maxLinearCorrection = 0.2, i.Common.b2Settings.b2_maxAngularCorrection = 0.044444444444444446 * t.b2_pi, i.Common.b2Settings.b2_maxTranslation = 2, i.Common.b2Settings.b2_maxTranslationSquared = t.b2_maxTranslation * t.b2_maxTranslation, i.Common.b2Settings.b2_maxRotation = 0.5 * t.b2_pi, i.Common.b2Settings.b2_maxRotationSquared = t.b2_maxRotation * t.b2_maxRotation, i.Common.b2Settings.b2_contactBaumgarte = 0.2, i.Common.b2Settings.b2_timeToSleep = 0.5, i.Common.b2Settings.b2_linearSleepTolerance = 0.01, i.Common.b2Settings.b2_angularSleepTolerance = 0.011111111111111112 * t.b2_pi;
    });
  }(), function () {
    i.Collision.b2AABB, i.Common.b2Color, i.Common.b2internal, i.Common.b2Settings;
    var e = i.Common.Math.b2Mat22, t = i.Common.Math.b2Mat33, n = i.Common.Math.b2Math, r = i.Common.Math.b2Sweep, o = i.Common.Math.b2Transform, s = i.Common.Math.b2Vec2, a = i.Common.Math.b2Vec3;
    e.b2Mat22 = function () {
      this.col1 = new s, this.col2 = new s;
    }, e.prototype.b2Mat22 = function () {
      this.SetIdentity();
    }, e.FromAngle = function (t) {
      undefined === t && (t = 0);
      var n = new e;
      return n.Set(t), n;
    }, e.FromVV = function (t, n) {
      var i = new e;
      return i.SetVV(t, n), i;
    }, e.prototype.Set = function (e) {
      undefined === e && (e = 0);
      var t = Math.cos(e), n = Math.sin(e);
      this.col1.x = t, this.col2.x = -n, this.col1.y = n, this.col2.y = t;
    }, e.prototype.SetVV = function (e, t) {
      this.col1.SetV(e), this.col2.SetV(t);
    }, e.prototype.Copy = function () {
      var t = new e;
      return t.SetM(this), t;
    }, e.prototype.SetM = function (e) {
      this.col1.SetV(e.col1), this.col2.SetV(e.col2);
    }, e.prototype.AddM = function (e) {
      this.col1.x += e.col1.x, this.col1.y += e.col1.y, this.col2.x += e.col2.x, this.col2.y += e.col2.y;
    }, e.prototype.SetIdentity = function () {
      this.col1.x = 1, this.col2.x = 0, this.col1.y = 0, this.col2.y = 1;
    }, e.prototype.SetZero = function () {
      this.col1.x = 0, this.col2.x = 0, this.col1.y = 0, this.col2.y = 0;
    }, e.prototype.GetAngle = function () {
      return Math.atan2(this.col1.y, this.col1.x);
    }, e.prototype.GetInverse = function (e) {
      var t = this.col1.x, n = this.col2.x, i = this.col1.y, r = this.col2.y, o = t * r - n * i;
      return 0 != o && (o = 1 / o), e.col1.x = o * r, e.col2.x = -o * n, e.col1.y = -o * i, e.col2.y = o * t, e;
    }, e.prototype.Solve = function (e, t, n) {
      undefined === t && (t = 0), undefined === n && (n = 0);
      var i = this.col1.x, r = this.col2.x, o = this.col1.y, s = this.col2.y, a = i * s - r * o;
      return 0 != a && (a = 1 / a), e.x = a * (s * t - r * n), e.y = a * (i * n - o * t), e;
    }, e.prototype.Abs = function () {
      this.col1.Abs(), this.col2.Abs();
    }, t.b2Mat33 = function () {
      this.col1 = new a, this.col2 = new a, this.col3 = new a;
    }, t.prototype.b2Mat33 = function (e, t, n) {
      undefined === e && (e = null), undefined === t && (t = null), undefined === n && (n = null), e || t || n ? (this.col1.SetV(e), this.col2.SetV(t), this.col3.SetV(n)) : (this.col1.SetZero(), this.col2.SetZero(), this.col3.SetZero());
    }, t.prototype.SetVVV = function (e, t, n) {
      this.col1.SetV(e), this.col2.SetV(t), this.col3.SetV(n);
    }, t.prototype.Copy = function () {
      return new t(this.col1, this.col2, this.col3);
    }, t.prototype.SetM = function (e) {
      this.col1.SetV(e.col1), this.col2.SetV(e.col2), this.col3.SetV(e.col3);
    }, t.prototype.AddM = function (e) {
      this.col1.x += e.col1.x, this.col1.y += e.col1.y, this.col1.z += e.col1.z, this.col2.x += e.col2.x, this.col2.y += e.col2.y, this.col2.z += e.col2.z, this.col3.x += e.col3.x, this.col3.y += e.col3.y, this.col3.z += e.col3.z;
    }, t.prototype.SetIdentity = function () {
      this.col1.x = 1, this.col2.x = 0, this.col3.x = 0, this.col1.y = 0, this.col2.y = 1, this.col3.y = 0, this.col1.z = 0, this.col2.z = 0, this.col3.z = 1;
    }, t.prototype.SetZero = function () {
      this.col1.x = 0, this.col2.x = 0, this.col3.x = 0, this.col1.y = 0, this.col2.y = 0, this.col3.y = 0, this.col1.z = 0, this.col2.z = 0, this.col3.z = 0;
    }, t.prototype.Solve22 = function (e, t, n) {
      undefined === t && (t = 0), undefined === n && (n = 0);
      var i = this.col1.x, r = this.col2.x, o = this.col1.y, s = this.col2.y, a = i * s - r * o;
      return 0 != a && (a = 1 / a), e.x = a * (s * t - r * n), e.y = a * (i * n - o * t), e;
    }, t.prototype.Solve33 = function (e, t, n, i) {
      undefined === t && (t = 0), undefined === n && (n = 0), undefined === i && (i = 0);
      var r = this.col1.x, o = this.col1.y, s = this.col1.z, a = this.col2.x, l = this.col2.y, c = this.col2.z, h = this.col3.x, u = this.col3.y, d = this.col3.z, p = r * (l * d - c * u) + o * (c * h - a * d) + s * (a * u - l * h);
      return 0 != p && (p = 1 / p), e.x = p * (t * (l * d - c * u) + n * (c * h - a * d) + i * (a * u - l * h)), e.y = p * (r * (n * d - i * u) + o * (i * h - t * d) + s * (t * u - n * h)), e.z = p * (r * (l * i - c * n) + o * (c * t - a * i) + s * (a * n - l * t)), e;
    }, n.b2Math = function () {}, n.IsValid = function (e) {
      return undefined === e && (e = 0), isFinite(e);
    }, n.Dot = function (e, t) {
      return e.x * t.x + e.y * t.y;
    }, n.CrossVV = function (e, t) {
      return e.x * t.y - e.y * t.x;
    }, n.CrossVF = function (e, t) {
      return undefined === t && (t = 0), new s(t * e.y, -t * e.x);
    }, n.CrossFV = function (e, t) {
      return undefined === e && (e = 0), new s(-e * t.y, e * t.x);
    }, n.MulMV = function (e, t) {
      return new s(e.col1.x * t.x + e.col2.x * t.y, e.col1.y * t.x + e.col2.y * t.y);
    }, n.MulTMV = function (e, t) {
      return new s(n.Dot(t, e.col1), n.Dot(t, e.col2));
    }, n.MulX = function (e, t) {
      var i = n.MulMV(e.R, t);
      return i.x += e.position.x, i.y += e.position.y, i;
    }, n.MulXT = function (e, t) {
      var i = n.SubtractVV(t, e.position), r = i.x * e.R.col1.x + i.y * e.R.col1.y;
      return i.y = i.x * e.R.col2.x + i.y * e.R.col2.y, i.x = r, i;
    }, n.AddVV = function (e, t) {
      return new s(e.x + t.x, e.y + t.y);
    }, n.SubtractVV = function (e, t) {
      return new s(e.x - t.x, e.y - t.y);
    }, n.Distance = function (e, t) {
      var n = e.x - t.x, i = e.y - t.y;
      return Math.sqrt(n * n + i * i);
    }, n.DistanceSquared = function (e, t) {
      var n = e.x - t.x, i = e.y - t.y;
      return n * n + i * i;
    }, n.MulFV = function (e, t) {
      return undefined === e && (e = 0), new s(e * t.x, e * t.y);
    }, n.AddMM = function (t, i) {
      return e.FromVV(n.AddVV(t.col1, i.col1), n.AddVV(t.col2, i.col2));
    }, n.MulMM = function (t, i) {
      return e.FromVV(n.MulMV(t, i.col1), n.MulMV(t, i.col2));
    }, n.MulTMM = function (t, i) {
      var r = new s(n.Dot(t.col1, i.col1), n.Dot(t.col2, i.col1)), o = new s(n.Dot(t.col1, i.col2), n.Dot(t.col2, i.col2));
      return e.FromVV(r, o);
    }, n.Abs = function (e) {
      return undefined === e && (e = 0), e > 0 ? e : -e;
    }, n.AbsV = function (e) {
      return new s(n.Abs(e.x), n.Abs(e.y));
    }, n.AbsM = function (t) {
      return e.FromVV(n.AbsV(t.col1), n.AbsV(t.col2));
    }, n.Min = function (e, t) {
      return undefined === e && (e = 0), undefined === t && (t = 0), e < t ? e : t;
    }, n.MinV = function (e, t) {
      return new s(n.Min(e.x, t.x), n.Min(e.y, t.y));
    }, n.Max = function (e, t) {
      return undefined === e && (e = 0), undefined === t && (t = 0), e > t ? e : t;
    }, n.MaxV = function (e, t) {
      return new s(n.Max(e.x, t.x), n.Max(e.y, t.y));
    }, n.Clamp = function (e, t, n) {
      return undefined === e && (e = 0), undefined === t && (t = 0), undefined === n && (n = 0), e < t ? t : e > n ? n : e;
    }, n.ClampV = function (e, t, i) {
      return n.MaxV(t, n.MinV(e, i));
    }, n.Swap = function (e, t) {
      var n = e[0];
      e[0] = t[0], t[0] = n;
    }, n.Random = function () {
      return 2 * Math.random() - 1;
    }, n.RandomRange = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0);
      var n = Math.random();
      return n = (t - e) * n + e;
    }, n.NextPowerOfTwo = function (e) {
      return undefined === e && (e = 0), e |= e >> 1 & 2147483647, e |= e >> 2 & 1073741823, e |= e >> 4 & 268435455, e |= e >> 8 & 16777215, (e |= e >> 16 & 65535) + 1;
    }, n.IsPowerOfTwo = function (e) {
      return undefined === e && (e = 0), e > 0 && 0 == (e & e - 1);
    }, i.postDefs.push(function () {
      i.Common.Math.b2Math.b2Vec2_zero = new s(0, 0), i.Common.Math.b2Math.b2Mat22_identity = e.FromVV(new s(1, 0), new s(0, 1)), i.Common.Math.b2Math.b2Transform_identity = new o(n.b2Vec2_zero, n.b2Mat22_identity);
    }), r.b2Sweep = function () {
      this.localCenter = new s, this.c0 = new s, this.c = new s;
    }, r.prototype.Set = function (e) {
      this.localCenter.SetV(e.localCenter), this.c0.SetV(e.c0), this.c.SetV(e.c), this.a0 = e.a0, this.a = e.a, this.t0 = e.t0;
    }, r.prototype.Copy = function () {
      var e = new r;
      return e.localCenter.SetV(this.localCenter), e.c0.SetV(this.c0), e.c.SetV(this.c), e.a0 = this.a0, e.a = this.a, e.t0 = this.t0, e;
    }, r.prototype.GetTransform = function (e, t) {
      undefined === t && (t = 0), e.position.x = (1 - t) * this.c0.x + t * this.c.x, e.position.y = (1 - t) * this.c0.y + t * this.c.y;
      var n = (1 - t) * this.a0 + t * this.a;
      e.R.Set(n);
      var i = e.R;
      e.position.x -= i.col1.x * this.localCenter.x + i.col2.x * this.localCenter.y, e.position.y -= i.col1.y * this.localCenter.x + i.col2.y * this.localCenter.y;
    }, r.prototype.Advance = function (e) {
      if (undefined === e && (e = 0), this.t0 < e && 1 - this.t0 > Number.MIN_VALUE) {
        var t = (e - this.t0) / (1 - this.t0);
        this.c0.x = (1 - t) * this.c0.x + t * this.c.x, this.c0.y = (1 - t) * this.c0.y + t * this.c.y, this.a0 = (1 - t) * this.a0 + t * this.a, this.t0 = e;
      }
    }, o.b2Transform = function () {
      this.position = new s, this.R = new e;
    }, o.prototype.b2Transform = function (e, t) {
      undefined === e && (e = null), undefined === t && (t = null), e && (this.position.SetV(e), this.R.SetM(t));
    }, o.prototype.Initialize = function (e, t) {
      this.position.SetV(e), this.R.SetM(t);
    }, o.prototype.SetIdentity = function () {
      this.position.SetZero(), this.R.SetIdentity();
    }, o.prototype.Set = function (e) {
      this.position.SetV(e.position), this.R.SetM(e.R);
    }, o.prototype.GetAngle = function () {
      return Math.atan2(this.R.col1.y, this.R.col1.x);
    }, s.b2Vec2 = function () {}, s.prototype.b2Vec2 = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0), this.x = e, this.y = t;
    }, s.prototype.SetZero = function () {
      this.x = 0, this.y = 0;
    }, s.prototype.Set = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0), this.x = e, this.y = t;
    }, s.prototype.SetV = function (e) {
      this.x = e.x, this.y = e.y;
    }, s.prototype.GetNegative = function () {
      return new s(-this.x, -this.y);
    }, s.prototype.NegativeSelf = function () {
      this.x = -this.x, this.y = -this.y;
    }, s.Make = function (e, t) {
      return undefined === e && (e = 0), undefined === t && (t = 0), new s(e, t);
    }, s.prototype.Copy = function () {
      return new s(this.x, this.y);
    }, s.prototype.Add = function (e) {
      this.x += e.x, this.y += e.y;
    }, s.prototype.Subtract = function (e) {
      this.x -= e.x, this.y -= e.y;
    }, s.prototype.Multiply = function (e) {
      undefined === e && (e = 0), this.x *= e, this.y *= e;
    }, s.prototype.MulM = function (e) {
      var t = this.x;
      this.x = e.col1.x * t + e.col2.x * this.y, this.y = e.col1.y * t + e.col2.y * this.y;
    }, s.prototype.MulTM = function (e) {
      var t = n.Dot(this, e.col1);
      this.y = n.Dot(this, e.col2), this.x = t;
    }, s.prototype.CrossVF = function (e) {
      undefined === e && (e = 0);
      var t = this.x;
      this.x = e * this.y, this.y = -e * t;
    }, s.prototype.CrossFV = function (e) {
      undefined === e && (e = 0);
      var t = this.x;
      this.x = -e * this.y, this.y = e * t;
    }, s.prototype.MinV = function (e) {
      this.x = this.x < e.x ? this.x : e.x, this.y = this.y < e.y ? this.y : e.y;
    }, s.prototype.MaxV = function (e) {
      this.x = this.x > e.x ? this.x : e.x, this.y = this.y > e.y ? this.y : e.y;
    }, s.prototype.Abs = function () {
      this.x < 0 && (this.x = -this.x), this.y < 0 && (this.y = -this.y);
    }, s.prototype.Length = function () {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    }, s.prototype.LengthSquared = function () {
      return this.x * this.x + this.y * this.y;
    }, s.prototype.Normalize = function () {
      var e = Math.sqrt(this.x * this.x + this.y * this.y);
      if (e < Number.MIN_VALUE) return 0;
      var t = 1 / e;
      return this.x *= t, this.y *= t, e;
    }, s.prototype.IsValid = function () {
      return n.IsValid(this.x) && n.IsValid(this.y);
    }, a.b2Vec3 = function () {}, a.prototype.b2Vec3 = function (e, t, n) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === n && (n = 0), this.x = e, this.y = t, this.z = n;
    }, a.prototype.SetZero = function () {
      this.x = this.y = this.z = 0;
    }, a.prototype.Set = function (e, t, n) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === n && (n = 0), this.x = e, this.y = t, this.z = n;
    }, a.prototype.SetV = function (e) {
      this.x = e.x, this.y = e.y, this.z = e.z;
    }, a.prototype.GetNegative = function () {
      return new a(-this.x, -this.y, -this.z);
    }, a.prototype.NegativeSelf = function () {
      this.x = -this.x, this.y = -this.y, this.z = -this.z;
    }, a.prototype.Copy = function () {
      return new a(this.x, this.y, this.z);
    }, a.prototype.Add = function (e) {
      this.x += e.x, this.y += e.y, this.z += e.z;
    }, a.prototype.Subtract = function (e) {
      this.x -= e.x, this.y -= e.y, this.z -= e.z;
    }, a.prototype.Multiply = function (e) {
      undefined === e && (e = 0), this.x *= e, this.y *= e, this.z *= e;
    };
  }(), function () {
    i.Dynamics.Controllers.b2ControllerEdge, i.Common.Math.b2Mat22, i.Common.Math.b2Mat33;
    var e = i.Common.Math.b2Math, t = i.Common.Math.b2Sweep, n = i.Common.Math.b2Transform, r = i.Common.Math.b2Vec2, o = (i.Common.Math.b2Vec3, i.Common.b2Color), s = (i.Common.b2internal, i.Common.b2Settings), a = i.Collision.b2AABB, l = (i.Collision.b2Bound, i.Collision.b2BoundValues, i.Collision.b2Collision, i.Collision.b2ContactID, i.Collision.b2ContactPoint), c = (i.Collision.b2Distance, i.Collision.b2DistanceInput, i.Collision.b2DistanceOutput, i.Collision.b2DistanceProxy, i.Collision.b2DynamicTree, i.Collision.b2DynamicTreeBroadPhase), h = (i.Collision.b2DynamicTreeNode, i.Collision.b2DynamicTreePair, i.Collision.b2Manifold, i.Collision.b2ManifoldPoint, i.Collision.b2Point, i.Collision.b2RayCastInput), u = i.Collision.b2RayCastOutput, d = (i.Collision.b2Segment, i.Collision.b2SeparationFunction, i.Collision.b2Simplex, i.Collision.b2SimplexCache, i.Collision.b2SimplexVertex, i.Collision.b2TimeOfImpact, i.Collision.b2TOIInput, i.Collision.b2WorldManifold, i.Collision.ClipVertex, i.Collision.Features, i.Collision.IBroadPhase, i.Collision.Shapes.b2CircleShape), p = (i.Collision.Shapes.b2EdgeChainDef, i.Collision.Shapes.b2EdgeShape), m = i.Collision.Shapes.b2MassData, f = i.Collision.Shapes.b2PolygonShape, g = i.Collision.Shapes.b2Shape, v = i.Dynamics.b2Body, y = i.Dynamics.b2BodyDef, _ = i.Dynamics.b2ContactFilter, x = i.Dynamics.b2ContactImpulse, b = i.Dynamics.b2ContactListener, w = i.Dynamics.b2ContactManager, S = i.Dynamics.b2DebugDraw, E = i.Dynamics.b2DestructionListener, q = i.Dynamics.b2FilterData, T = i.Dynamics.b2Fixture, A = i.Dynamics.b2FixtureDef, M = i.Dynamics.b2Island, C = i.Dynamics.b2TimeStep, k = i.Dynamics.b2World, R = (i.Dynamics.Contacts.b2CircleContact, i.Dynamics.Contacts.b2Contact), L = (i.Dynamics.Contacts.b2ContactConstraint, i.Dynamics.Contacts.b2ContactConstraintPoint, i.Dynamics.Contacts.b2ContactEdge, i.Dynamics.Contacts.b2ContactFactory), P = (i.Dynamics.Contacts.b2ContactRegister, i.Dynamics.Contacts.b2ContactResult, i.Dynamics.Contacts.b2ContactSolver), D = (i.Dynamics.Contacts.b2EdgeAndCircleContact, i.Dynamics.Contacts.b2NullContact, i.Dynamics.Contacts.b2PolyAndCircleContact, i.Dynamics.Contacts.b2PolyAndEdgeContact, i.Dynamics.Contacts.b2PolygonContact, i.Dynamics.Contacts.b2PositionSolverManifold, i.Dynamics.Controllers.b2Controller, i.Dynamics.Joints.b2DistanceJoint, i.Dynamics.Joints.b2DistanceJointDef, i.Dynamics.Joints.b2FrictionJoint, i.Dynamics.Joints.b2FrictionJointDef, i.Dynamics.Joints.b2GearJoint, i.Dynamics.Joints.b2GearJointDef, i.Dynamics.Joints.b2Jacobian, i.Dynamics.Joints.b2Joint), O = (i.Dynamics.Joints.b2JointDef, i.Dynamics.Joints.b2JointEdge, i.Dynamics.Joints.b2LineJoint, i.Dynamics.Joints.b2LineJointDef, i.Dynamics.Joints.b2MouseJoint, i.Dynamics.Joints.b2MouseJointDef, i.Dynamics.Joints.b2PrismaticJoint, i.Dynamics.Joints.b2PrismaticJointDef, i.Dynamics.Joints.b2PulleyJoint);
    i.Dynamics.Joints.b2PulleyJointDef, i.Dynamics.Joints.b2RevoluteJoint, i.Dynamics.Joints.b2RevoluteJointDef, i.Dynamics.Joints.b2WeldJoint, i.Dynamics.Joints.b2WeldJointDef;
    v.b2Body = function () {
      this.m_xf = new n, this.m_sweep = new t, this.m_linearVelocity = new r, this.m_force = new r;
    }, v.prototype.connectEdges = function (t, n, i) {
      undefined === i && (i = 0);
      var r = Math.atan2(n.GetDirectionVector().y, n.GetDirectionVector().x), o = Math.tan(0.5 * (r - i)), a = e.MulFV(o, n.GetDirectionVector());
      a = e.SubtractVV(a, n.GetNormalVector()), a = e.MulFV(s.b2_toiSlop, a), a = e.AddVV(a, n.GetVertex1());
      var l = e.AddVV(t.GetDirectionVector(), n.GetDirectionVector());
      l.Normalize();
      var c = e.Dot(t.GetDirectionVector(), n.GetNormalVector()) > 0;
      return t.SetNextEdge(n, a, l, c), n.SetPrevEdge(t, a, l, c), r;
    }, v.prototype.CreateFixture = function (e) {
      if (1 == this.m_world.IsLocked()) return null;
      var t = new T;
      if (t.Create(this, this.m_xf, e), this.m_flags & v.e_activeFlag) {
        var n = this.m_world.m_contactManager.m_broadPhase;
        t.CreateProxy(n, this.m_xf);
      }
      return t.m_next = this.m_fixtureList, this.m_fixtureList = t, ++this.m_fixtureCount, t.m_body = this, t.m_density > 0 && this.ResetMassData(), this.m_world.m_flags |= k.e_newFixture, t;
    }, v.prototype.CreateFixture2 = function (e, t) {
      undefined === t && (t = 0);
      var n = new A;
      return n.shape = e, n.density = t, this.CreateFixture(n);
    }, v.prototype.DestroyFixture = function (e) {
      if (1 != this.m_world.IsLocked()) {
        for (var t = this.m_fixtureList, n = null; null != t;) {
          if (t == e) {
            n ? n.m_next = e.m_next : this.m_fixtureList = e.m_next, true;
            break;
          }
          n = t, t = t.m_next;
        }
        for (var i = this.m_contactList; i;) {
          var r = i.contact;
          i = i.next;
          var o = r.GetFixtureA(), s = r.GetFixtureB();
          e != o && e != s || this.m_world.m_contactManager.Destroy(r);
        }
        if (this.m_flags & v.e_activeFlag) {
          var a = this.m_world.m_contactManager.m_broadPhase;
          e.DestroyProxy(a);
        }
        e.Destroy(), e.m_body = null, e.m_next = null, --this.m_fixtureCount, this.ResetMassData();
      }
    }, v.prototype.SetPositionAndAngle = function (e, t) {
      var n;
      if (undefined === t && (t = 0), 1 != this.m_world.IsLocked()) {
        this.m_xf.R.Set(t), this.m_xf.position.SetV(e);
        var i = this.m_xf.R, r = this.m_sweep.localCenter;
        this.m_sweep.c.x = i.col1.x * r.x + i.col2.x * r.y, this.m_sweep.c.y = i.col1.y * r.x + i.col2.y * r.y, this.m_sweep.c.x += this.m_xf.position.x, this.m_sweep.c.y += this.m_xf.position.y, this.m_sweep.c0.SetV(this.m_sweep.c), this.m_sweep.a0 = this.m_sweep.a = t;
        var o = this.m_world.m_contactManager.m_broadPhase;
        for (n = this.m_fixtureList; n; n = n.m_next) n.Synchronize(o, this.m_xf, this.m_xf);
        this.m_world.m_contactManager.FindNewContacts();
      }
    }, v.prototype.SetTransform = function (e) {
      this.SetPositionAndAngle(e.position, e.GetAngle());
    }, v.prototype.GetTransform = function () {
      return this.m_xf;
    }, v.prototype.GetPosition = function () {
      return this.m_xf.position;
    }, v.prototype.SetPosition = function (e) {
      this.SetPositionAndAngle(e, this.GetAngle());
    }, v.prototype.GetAngle = function () {
      return this.m_sweep.a;
    }, v.prototype.SetAngle = function (e) {
      undefined === e && (e = 0), this.SetPositionAndAngle(this.GetPosition(), e);
    }, v.prototype.GetWorldCenter = function () {
      return this.m_sweep.c;
    }, v.prototype.GetLocalCenter = function () {
      return this.m_sweep.localCenter;
    }, v.prototype.SetLinearVelocity = function (e) {
      this.m_type != v.b2_staticBody && this.m_linearVelocity.SetV(e);
    }, v.prototype.GetLinearVelocity = function () {
      return this.m_linearVelocity;
    }, v.prototype.SetAngularVelocity = function (e) {
      undefined === e && (e = 0), this.m_type != v.b2_staticBody && (this.m_angularVelocity = e);
    }, v.prototype.GetAngularVelocity = function () {
      return this.m_angularVelocity;
    }, v.prototype.GetDefinition = function () {
      var e = new y;
      return e.type = this.GetType(), e.allowSleep = (this.m_flags & v.e_allowSleepFlag) == v.e_allowSleepFlag, e.angle = this.GetAngle(), e.angularDamping = this.m_angularDamping, e.angularVelocity = this.m_angularVelocity, e.fixedRotation = (this.m_flags & v.e_fixedRotationFlag) == v.e_fixedRotationFlag, e.bullet = (this.m_flags & v.e_bulletFlag) == v.e_bulletFlag, e.awake = (this.m_flags & v.e_awakeFlag) == v.e_awakeFlag, e.linearDamping = this.m_linearDamping, e.linearVelocity.SetV(this.GetLinearVelocity()), e.position = this.GetPosition(), e.userData = this.GetUserData(), e;
    }, v.prototype.ApplyForce = function (e, t) {
      this.m_type == v.b2_dynamicBody && (0 == this.IsAwake() && this.SetAwake(true), this.m_force.x += e.x, this.m_force.y += e.y, this.m_torque += (t.x - this.m_sweep.c.x) * e.y - (t.y - this.m_sweep.c.y) * e.x);
    }, v.prototype.ApplyTorque = function (e) {
      undefined === e && (e = 0), this.m_type == v.b2_dynamicBody && (0 == this.IsAwake() && this.SetAwake(true), this.m_torque += e);
    }, v.prototype.ApplyImpulse = function (e, t) {
      this.m_type == v.b2_dynamicBody && (0 == this.IsAwake() && this.SetAwake(true), this.m_linearVelocity.x += this.m_invMass * e.x, this.m_linearVelocity.y += this.m_invMass * e.y, this.m_angularVelocity += this.m_invI * ((t.x - this.m_sweep.c.x) * e.y - (t.y - this.m_sweep.c.y) * e.x));
    }, v.prototype.Split = function (t) {
      for (var n, i = this.GetLinearVelocity().Copy(), r = this.GetAngularVelocity(), o = this.GetWorldCenter(), s = this.m_world.CreateBody(this.GetDefinition()), a = this.m_fixtureList; a;) if (t(a)) {
        var l = a.m_next;
        n ? n.m_next = l : this.m_fixtureList = l, this.m_fixtureCount--, a.m_next = s.m_fixtureList, s.m_fixtureList = a, s.m_fixtureCount++, a.m_body = s, a = l;
      } else n = a, a = a.m_next;
      this.ResetMassData(), s.ResetMassData();
      var c = this.GetWorldCenter(), h = s.GetWorldCenter(), u = e.AddVV(i, e.CrossFV(r, e.SubtractVV(c, o))), d = e.AddVV(i, e.CrossFV(r, e.SubtractVV(h, o)));
      return this.SetLinearVelocity(u), s.SetLinearVelocity(d), this.SetAngularVelocity(r), s.SetAngularVelocity(r), this.SynchronizeFixtures(), s.SynchronizeFixtures(), s;
    }, v.prototype.Merge = function (e) {
      var t;
      for (t = e.m_fixtureList; t;) {
        var n = t.m_next;
        e.m_fixtureCount--, t.m_next = this.m_fixtureList, this.m_fixtureList = t, this.m_fixtureCount++, t.m_body = r, t = n;
      }
      i.m_fixtureCount = 0;
      var i = this, r = e;
      i.GetWorldCenter(), r.GetWorldCenter(), i.GetLinearVelocity().Copy(), r.GetLinearVelocity().Copy(), i.GetAngularVelocity(), r.GetAngularVelocity();
      i.ResetMassData(), this.SynchronizeFixtures();
    }, v.prototype.GetMass = function () {
      return this.m_mass;
    }, v.prototype.GetInertia = function () {
      return this.m_I;
    }, v.prototype.GetMassData = function (e) {
      e.mass = this.m_mass, e.I = this.m_I, e.center.SetV(this.m_sweep.localCenter);
    }, v.prototype.SetMassData = function (t) {
      if (s.b2Assert(0 == this.m_world.IsLocked()), 1 != this.m_world.IsLocked() && this.m_type == v.b2_dynamicBody) {
        this.m_invMass = 0, this.m_I = 0, this.m_invI = 0, this.m_mass = t.mass, this.m_mass <= 0 && (this.m_mass = 1), this.m_invMass = 1 / this.m_mass, t.I > 0 && 0 == (this.m_flags & v.e_fixedRotationFlag) && (this.m_I = t.I - this.m_mass * (t.center.x * t.center.x + t.center.y * t.center.y), this.m_invI = 1 / this.m_I);
        var n = this.m_sweep.c.Copy();
        this.m_sweep.localCenter.SetV(t.center), this.m_sweep.c0.SetV(e.MulX(this.m_xf, this.m_sweep.localCenter)), this.m_sweep.c.SetV(this.m_sweep.c0), this.m_linearVelocity.x += this.m_angularVelocity * -(this.m_sweep.c.y - n.y), this.m_linearVelocity.y += this.m_angularVelocity * +(this.m_sweep.c.x - n.x);
      }
    }, v.prototype.ResetMassData = function () {
      if (this.m_mass = 0, this.m_invMass = 0, this.m_I = 0, this.m_invI = 0, this.m_sweep.localCenter.SetZero(), this.m_type != v.b2_staticBody && this.m_type != v.b2_kinematicBody) {
        for (var t = r.Make(0, 0), n = this.m_fixtureList; n; n = n.m_next) if (0 != n.m_density) {
          var i = n.GetMassData();
          this.m_mass += i.mass, t.x += i.center.x * i.mass, t.y += i.center.y * i.mass, this.m_I += i.I;
        }
        this.m_mass > 0 ? (this.m_invMass = 1 / this.m_mass, t.x *= this.m_invMass, t.y *= this.m_invMass) : (this.m_mass = 1, this.m_invMass = 1), this.m_I > 0 && 0 == (this.m_flags & v.e_fixedRotationFlag) ? (this.m_I -= this.m_mass * (t.x * t.x + t.y * t.y), this.m_I *= this.m_inertiaScale, s.b2Assert(this.m_I > 0), this.m_invI = 1 / this.m_I) : (this.m_I = 0, this.m_invI = 0);
        var o = this.m_sweep.c.Copy();
        this.m_sweep.localCenter.SetV(t), this.m_sweep.c0.SetV(e.MulX(this.m_xf, this.m_sweep.localCenter)), this.m_sweep.c.SetV(this.m_sweep.c0), this.m_linearVelocity.x += this.m_angularVelocity * -(this.m_sweep.c.y - o.y), this.m_linearVelocity.y += this.m_angularVelocity * +(this.m_sweep.c.x - o.x);
      }
    }, v.prototype.GetWorldPoint = function (e) {
      var t = this.m_xf.R, n = new r(t.col1.x * e.x + t.col2.x * e.y, t.col1.y * e.x + t.col2.y * e.y);
      return n.x += this.m_xf.position.x, n.y += this.m_xf.position.y, n;
    }, v.prototype.GetWorldVector = function (t) {
      return e.MulMV(this.m_xf.R, t);
    }, v.prototype.GetLocalPoint = function (t) {
      return e.MulXT(this.m_xf, t);
    }, v.prototype.GetLocalVector = function (t) {
      return e.MulTMV(this.m_xf.R, t);
    }, v.prototype.GetLinearVelocityFromWorldPoint = function (e) {
      return new r(this.m_linearVelocity.x - this.m_angularVelocity * (e.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (e.x - this.m_sweep.c.x));
    }, v.prototype.GetLinearVelocityFromLocalPoint = function (e) {
      var t = this.m_xf.R, n = new r(t.col1.x * e.x + t.col2.x * e.y, t.col1.y * e.x + t.col2.y * e.y);
      return n.x += this.m_xf.position.x, n.y += this.m_xf.position.y, new r(this.m_linearVelocity.x - this.m_angularVelocity * (n.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (n.x - this.m_sweep.c.x));
    }, v.prototype.GetLinearDamping = function () {
      return this.m_linearDamping;
    }, v.prototype.SetLinearDamping = function (e) {
      undefined === e && (e = 0), this.m_linearDamping = e;
    }, v.prototype.GetAngularDamping = function () {
      return this.m_angularDamping;
    }, v.prototype.SetAngularDamping = function (e) {
      undefined === e && (e = 0), this.m_angularDamping = e;
    }, v.prototype.SetType = function (e) {
      if (undefined === e && (e = 0), this.m_type != e) {
        this.m_type = e, this.ResetMassData(), this.m_type == v.b2_staticBody && (this.m_linearVelocity.SetZero(), this.m_angularVelocity = 0), this.SetAwake(true), this.m_force.SetZero(), this.m_torque = 0;
        for (var t = this.m_contactList; t; t = t.next) t.contact.FlagForFiltering();
      }
    }, v.prototype.GetType = function () {
      return this.m_type;
    }, v.prototype.SetBullet = function (e) {
      e ? this.m_flags |= v.e_bulletFlag : this.m_flags &= ~v.e_bulletFlag;
    }, v.prototype.IsBullet = function () {
      return (this.m_flags & v.e_bulletFlag) == v.e_bulletFlag;
    }, v.prototype.SetSleepingAllowed = function (e) {
      e ? this.m_flags |= v.e_allowSleepFlag : (this.m_flags &= ~v.e_allowSleepFlag, this.SetAwake(true));
    }, v.prototype.SetAwake = function (e) {
      e ? (this.m_flags |= v.e_awakeFlag, this.m_sleepTime = 0) : (this.m_flags &= ~v.e_awakeFlag, this.m_sleepTime = 0, this.m_linearVelocity.SetZero(), this.m_angularVelocity = 0, this.m_force.SetZero(), this.m_torque = 0);
    }, v.prototype.IsAwake = function () {
      return (this.m_flags & v.e_awakeFlag) == v.e_awakeFlag;
    }, v.prototype.SetFixedRotation = function (e) {
      e ? this.m_flags |= v.e_fixedRotationFlag : this.m_flags &= ~v.e_fixedRotationFlag, this.ResetMassData();
    }, v.prototype.IsFixedRotation = function () {
      return (this.m_flags & v.e_fixedRotationFlag) == v.e_fixedRotationFlag;
    }, v.prototype.SetActive = function (e) {
      var t, n;
      if (e != this.IsActive()) if (e) for (this.m_flags |= v.e_activeFlag, t = this.m_world.m_contactManager.m_broadPhase, n = this.m_fixtureList; n; n = n.m_next) n.CreateProxy(t, this.m_xf); else {
        for (this.m_flags &= ~v.e_activeFlag, t = this.m_world.m_contactManager.m_broadPhase, n = this.m_fixtureList; n; n = n.m_next) n.DestroyProxy(t);
        for (var i = this.m_contactList; i;) {
          var r = i;
          i = i.next, this.m_world.m_contactManager.Destroy(r.contact);
        }
        this.m_contactList = null;
      }
    }, v.prototype.IsActive = function () {
      return (this.m_flags & v.e_activeFlag) == v.e_activeFlag;
    }, v.prototype.IsSleepingAllowed = function () {
      return (this.m_flags & v.e_allowSleepFlag) == v.e_allowSleepFlag;
    }, v.prototype.GetFixtureList = function () {
      return this.m_fixtureList;
    }, v.prototype.GetJointList = function () {
      return this.m_jointList;
    }, v.prototype.GetControllerList = function () {
      return this.m_controllerList;
    }, v.prototype.GetContactList = function () {
      return this.m_contactList;
    }, v.prototype.GetNext = function () {
      return this.m_next;
    }, v.prototype.GetUserData = function () {
      return this.m_userData;
    }, v.prototype.SetUserData = function (e) {
      this.m_userData = e;
    }, v.prototype.GetWorld = function () {
      return this.m_world;
    }, v.prototype.b2Body = function (e, t) {
      this.m_flags = 0, e.bullet && (this.m_flags |= v.e_bulletFlag), e.fixedRotation && (this.m_flags |= v.e_fixedRotationFlag), e.allowSleep && (this.m_flags |= v.e_allowSleepFlag), e.awake && (this.m_flags |= v.e_awakeFlag), e.active && (this.m_flags |= v.e_activeFlag), this.m_world = t, this.m_xf.position.SetV(e.position), this.m_xf.R.Set(e.angle), this.m_sweep.localCenter.SetZero(), this.m_sweep.t0 = 1, this.m_sweep.a0 = this.m_sweep.a = e.angle;
      var n = this.m_xf.R, i = this.m_sweep.localCenter;
      this.m_sweep.c.x = n.col1.x * i.x + n.col2.x * i.y, this.m_sweep.c.y = n.col1.y * i.x + n.col2.y * i.y, this.m_sweep.c.x += this.m_xf.position.x, this.m_sweep.c.y += this.m_xf.position.y, this.m_sweep.c0.SetV(this.m_sweep.c), this.m_jointList = null, this.m_controllerList = null, this.m_contactList = null, this.m_controllerCount = 0, this.m_prev = null, this.m_next = null, this.m_linearVelocity.SetV(e.linearVelocity), this.m_angularVelocity = e.angularVelocity, this.m_linearDamping = e.linearDamping, this.m_angularDamping = e.angularDamping, this.m_force.Set(0, 0), this.m_torque = 0, this.m_sleepTime = 0, this.m_type = e.type, this.m_type == v.b2_dynamicBody ? (this.m_mass = 1, this.m_invMass = 1) : (this.m_mass = 0, this.m_invMass = 0), this.m_I = 0, this.m_invI = 0, this.m_inertiaScale = e.inertiaScale, this.m_userData = e.userData, this.m_fixtureList = null, this.m_fixtureCount = 0;
    }, v.prototype.SynchronizeFixtures = function () {
      var e = v.s_xf1;
      e.R.Set(this.m_sweep.a0);
      var t, n = e.R, i = this.m_sweep.localCenter;
      e.position.x = this.m_sweep.c0.x - (n.col1.x * i.x + n.col2.x * i.y), e.position.y = this.m_sweep.c0.y - (n.col1.y * i.x + n.col2.y * i.y);
      var r = this.m_world.m_contactManager.m_broadPhase;
      for (t = this.m_fixtureList; t; t = t.m_next) t.Synchronize(r, e, this.m_xf);
    }, v.prototype.SynchronizeTransform = function () {
      this.m_xf.R.Set(this.m_sweep.a);
      var e = this.m_xf.R, t = this.m_sweep.localCenter;
      this.m_xf.position.x = this.m_sweep.c.x - (e.col1.x * t.x + e.col2.x * t.y), this.m_xf.position.y = this.m_sweep.c.y - (e.col1.y * t.x + e.col2.y * t.y);
    }, v.prototype.ShouldCollide = function (e) {
      if (this.m_type != v.b2_dynamicBody && e.m_type != v.b2_dynamicBody) return false;
      for (var t = this.m_jointList; t; t = t.next) if (t.other == e && 0 == t.joint.m_collideConnected) return false;
      return true;
    }, v.prototype.Advance = function (e) {
      undefined === e && (e = 0), this.m_sweep.Advance(e), this.m_sweep.c.SetV(this.m_sweep.c0), this.m_sweep.a = this.m_sweep.a0, this.SynchronizeTransform();
    }, i.postDefs.push(function () {
      i.Dynamics.b2Body.s_xf1 = new n, i.Dynamics.b2Body.e_islandFlag = 1, i.Dynamics.b2Body.e_awakeFlag = 2, i.Dynamics.b2Body.e_allowSleepFlag = 4, i.Dynamics.b2Body.e_bulletFlag = 8, i.Dynamics.b2Body.e_fixedRotationFlag = 16, i.Dynamics.b2Body.e_activeFlag = 32, i.Dynamics.b2Body.b2_staticBody = 0, i.Dynamics.b2Body.b2_kinematicBody = 1, i.Dynamics.b2Body.b2_dynamicBody = 2;
    }), y.b2BodyDef = function () {
      this.position = new r, this.linearVelocity = new r;
    }, y.prototype.b2BodyDef = function () {
      this.userData = null, this.position.Set(0, 0), this.angle = 0, this.linearVelocity.Set(0, 0), this.angularVelocity = 0, this.linearDamping = 0, this.angularDamping = 0, this.allowSleep = true, this.awake = true, this.fixedRotation = false, this.bullet = false, this.type = v.b2_staticBody, this.active = true, this.inertiaScale = 1;
    }, _.b2ContactFilter = function () {}, _.prototype.ShouldCollide = function (e, t) {
      var n = e.GetFilterData(), i = t.GetFilterData();
      return n.groupIndex == i.groupIndex && 0 != n.groupIndex ? n.groupIndex > 0 : 0 != (n.maskBits & i.categoryBits) && 0 != (n.categoryBits & i.maskBits);
    }, _.prototype.RayCollide = function (e, t) {
      return !e || this.ShouldCollide(e instanceof T ? e : null, t);
    }, i.postDefs.push(function () {
      i.Dynamics.b2ContactFilter.b2_defaultFilter = new _;
    }), x.b2ContactImpulse = function () {
      this.normalImpulses = new j(s.b2_maxManifoldPoints), this.tangentImpulses = new j(s.b2_maxManifoldPoints);
    }, b.b2ContactListener = function () {}, b.prototype.BeginContact = function (e) {}, b.prototype.EndContact = function (e) {}, b.prototype.PreSolve = function (e, t) {}, b.prototype.PostSolve = function (e, t) {}, i.postDefs.push(function () {
      i.Dynamics.b2ContactListener.b2_defaultListener = new b;
    }), w.b2ContactManager = function () {}, w.prototype.b2ContactManager = function () {
      this.m_world = null, this.m_contactCount = 0, this.m_contactFilter = _.b2_defaultFilter, this.m_contactListener = b.b2_defaultListener, this.m_contactFactory = new L(this.m_allocator), this.m_broadPhase = new c;
    }, w.prototype.AddPair = function (e, t) {
      var n = e instanceof T ? e : null, i = t instanceof T ? t : null, r = n.GetBody(), o = i.GetBody();
      if (r != o) {
        for (var s = o.GetContactList(); s;) {
          if (s.other == r) {
            var a = s.contact.GetFixtureA(), l = s.contact.GetFixtureB();
            if (a == n && l == i) return;
            if (a == i && l == n) return;
          }
          s = s.next;
        }
        if (0 != o.ShouldCollide(r) && 0 != this.m_contactFilter.ShouldCollide(n, i)) {
          var c = this.m_contactFactory.Create(n, i);
          n = c.GetFixtureA(), i = c.GetFixtureB(), r = n.m_body, o = i.m_body, c.m_prev = null, c.m_next = this.m_world.m_contactList, null != this.m_world.m_contactList && (this.m_world.m_contactList.m_prev = c), this.m_world.m_contactList = c, c.m_nodeA.contact = c, c.m_nodeA.other = o, c.m_nodeA.prev = null, c.m_nodeA.next = r.m_contactList, null != r.m_contactList && (r.m_contactList.prev = c.m_nodeA), r.m_contactList = c.m_nodeA, c.m_nodeB.contact = c, c.m_nodeB.other = r, c.m_nodeB.prev = null, c.m_nodeB.next = o.m_contactList, null != o.m_contactList && (o.m_contactList.prev = c.m_nodeB), o.m_contactList = c.m_nodeB, ++this.m_world.m_contactCount;
        }
      }
    }, w.prototype.FindNewContacts = function () {
      this.m_broadPhase.UpdatePairs(i.generateCallback(this, this.AddPair));
    }, w.prototype.Destroy = function (e) {
      var t = e.GetFixtureA(), n = e.GetFixtureB(), i = t.GetBody(), r = n.GetBody();
      e.IsTouching() && this.m_contactListener.EndContact(e), e.m_prev && (e.m_prev.m_next = e.m_next), e.m_next && (e.m_next.m_prev = e.m_prev), e == this.m_world.m_contactList && (this.m_world.m_contactList = e.m_next), e.m_nodeA.prev && (e.m_nodeA.prev.next = e.m_nodeA.next), e.m_nodeA.next && (e.m_nodeA.next.prev = e.m_nodeA.prev), e.m_nodeA == i.m_contactList && (i.m_contactList = e.m_nodeA.next), e.m_nodeB.prev && (e.m_nodeB.prev.next = e.m_nodeB.next), e.m_nodeB.next && (e.m_nodeB.next.prev = e.m_nodeB.prev), e.m_nodeB == r.m_contactList && (r.m_contactList = e.m_nodeB.next), this.m_contactFactory.Destroy(e), --this.m_contactCount;
    }, w.prototype.Collide = function () {
      for (var e = this.m_world.m_contactList; e;) {
        var t = e.GetFixtureA(), n = e.GetFixtureB(), i = t.GetBody(), r = n.GetBody();
        if (0 != i.IsAwake() || 0 != r.IsAwake()) {
          if (e.m_flags & R.e_filterFlag) {
            if (0 == r.ShouldCollide(i)) {
              var o = e;
              e = o.GetNext(), this.Destroy(o);
              continue;
            }
            if (0 == this.m_contactFilter.ShouldCollide(t, n)) {
              e = (o = e).GetNext(), this.Destroy(o);
              continue;
            }
            e.m_flags &= ~R.e_filterFlag;
          }
          var s = t.m_proxy, a = n.m_proxy;
          0 != this.m_broadPhase.TestOverlap(s, a) ? (e.Update(this.m_contactListener), e = e.GetNext()) : (e = (o = e).GetNext(), this.Destroy(o));
        } else e = e.GetNext();
      }
    }, i.postDefs.push(function () {
      i.Dynamics.b2ContactManager.s_evalCP = new l;
    }), S.b2DebugDraw = function () {}, S.prototype.b2DebugDraw = function () {}, S.prototype.SetFlags = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.GetFlags = function () {}, S.prototype.AppendFlags = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.ClearFlags = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.SetSprite = function (e) {}, S.prototype.GetSprite = function () {}, S.prototype.SetDrawScale = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.GetDrawScale = function () {}, S.prototype.SetLineThickness = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.GetLineThickness = function () {}, S.prototype.SetAlpha = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.GetAlpha = function () {}, S.prototype.SetFillAlpha = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.GetFillAlpha = function () {}, S.prototype.SetXFormScale = function (e) {
      undefined === e && (e = 0);
    }, S.prototype.GetXFormScale = function () {}, S.prototype.DrawPolygon = function (e, t, n) {
      undefined === t && (t = 0);
    }, S.prototype.DrawSolidPolygon = function (e, t, n) {
      undefined === t && (t = 0);
    }, S.prototype.DrawCircle = function (e, t, n) {
      undefined === t && (t = 0);
    }, S.prototype.DrawSolidCircle = function (e, t, n, i) {
      undefined === t && (t = 0);
    }, S.prototype.DrawSegment = function (e, t, n) {}, S.prototype.DrawTransform = function (e) {}, i.postDefs.push(function () {
      i.Dynamics.b2DebugDraw.e_shapeBit = 1, i.Dynamics.b2DebugDraw.e_jointBit = 2, i.Dynamics.b2DebugDraw.e_aabbBit = 4, i.Dynamics.b2DebugDraw.e_pairBit = 8, i.Dynamics.b2DebugDraw.e_centerOfMassBit = 16, i.Dynamics.b2DebugDraw.e_controllerBit = 32;
    }), E.b2DestructionListener = function () {}, E.prototype.SayGoodbyeJoint = function (e) {}, E.prototype.SayGoodbyeFixture = function (e) {}, q.b2FilterData = function () {
      this.categoryBits = 1, this.maskBits = 65535, this.groupIndex = 0;
    }, q.prototype.Copy = function () {
      var e = new q;
      return e.categoryBits = this.categoryBits, e.maskBits = this.maskBits, e.groupIndex = this.groupIndex, e;
    }, T.b2Fixture = function () {
      this.m_filter = new q;
    }, T.prototype.GetType = function () {
      return this.m_shape.GetType();
    }, T.prototype.GetShape = function () {
      return this.m_shape;
    }, T.prototype.SetSensor = function (e) {
      if (this.m_isSensor != e && (this.m_isSensor = e, null != this.m_body)) for (var t = this.m_body.GetContactList(); t;) {
        var n = t.contact, i = n.GetFixtureA(), r = n.GetFixtureB();
        i != this && r != this || n.SetSensor(i.IsSensor() || r.IsSensor()), t = t.next;
      }
    }, T.prototype.IsSensor = function () {
      return this.m_isSensor;
    }, T.prototype.SetFilterData = function (e) {
      if (this.m_filter = e.Copy(), !this.m_body) for (var t = this.m_body.GetContactList(); t;) {
        var n = t.contact, i = n.GetFixtureA(), r = n.GetFixtureB();
        i != this && r != this || n.FlagForFiltering(), t = t.next;
      }
    }, T.prototype.GetFilterData = function () {
      return this.m_filter.Copy();
    }, T.prototype.GetBody = function () {
      return this.m_body;
    }, T.prototype.GetNext = function () {
      return this.m_next;
    }, T.prototype.GetUserData = function () {
      return this.m_userData;
    }, T.prototype.SetUserData = function (e) {
      this.m_userData = e;
    }, T.prototype.TestPoint = function (e) {
      return this.m_shape.TestPoint(this.m_body.GetTransform(), e);
    }, T.prototype.RayCast = function (e, t) {
      return this.m_shape.RayCast(e, t, this.m_body.GetTransform());
    }, T.prototype.GetMassData = function (e) {
      return undefined === e && (e = null), null == e && (e = new m), this.m_shape.ComputeMass(e, this.m_density), e;
    }, T.prototype.SetDensity = function (e) {
      undefined === e && (e = 0), this.m_density = e;
    }, T.prototype.GetDensity = function () {
      return this.m_density;
    }, T.prototype.GetFriction = function () {
      return this.m_friction;
    }, T.prototype.SetFriction = function (e) {
      undefined === e && (e = 0), this.m_friction = e;
    }, T.prototype.GetRestitution = function () {
      return this.m_restitution;
    }, T.prototype.SetRestitution = function (e) {
      undefined === e && (e = 0), this.m_restitution = e;
    }, T.prototype.GetAABB = function () {
      return this.m_aabb;
    }, T.prototype.b2Fixture = function () {
      this.m_aabb = new a, this.m_userData = null, this.m_body = null, this.m_next = null, this.m_shape = null, this.m_density = 0, this.m_friction = 0, this.m_restitution = 0;
    }, T.prototype.Create = function (e, t, n) {
      this.m_userData = n.userData, this.m_friction = n.friction, this.m_restitution = n.restitution, this.m_body = e, this.m_next = null, this.m_filter = n.filter.Copy(), this.m_isSensor = n.isSensor, this.m_shape = n.shape.Copy(), this.m_density = n.density;
    }, T.prototype.Destroy = function () {
      this.m_shape = null;
    }, T.prototype.CreateProxy = function (e, t) {
      this.m_shape.ComputeAABB(this.m_aabb, t), this.m_proxy = e.CreateProxy(this.m_aabb, this);
    }, T.prototype.DestroyProxy = function (e) {
      null != this.m_proxy && (e.DestroyProxy(this.m_proxy), this.m_proxy = null);
    }, T.prototype.Synchronize = function (t, n, i) {
      if (this.m_proxy) {
        var r = new a, o = new a;
        this.m_shape.ComputeAABB(r, n), this.m_shape.ComputeAABB(o, i), this.m_aabb.Combine(r, o);
        var s = e.SubtractVV(i.position, n.position);
        t.MoveProxy(this.m_proxy, this.m_aabb, s);
      }
    }, A.b2FixtureDef = function () {
      this.filter = new q;
    }, A.prototype.b2FixtureDef = function () {
      this.shape = null, this.userData = null, this.friction = 0.2, this.restitution = 0, this.density = 0, this.filter.categoryBits = 1, this.filter.maskBits = 65535, this.filter.groupIndex = 0, this.isSensor = false;
    }, M.b2Island = function () {}, M.prototype.b2Island = function () {
      this.m_bodies = new H, this.m_contacts = new H, this.m_joints = new H;
    }, M.prototype.Initialize = function (e, t, n, i, r, o) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === n && (n = 0);
      var s = 0;
      for (this.m_bodyCapacity = e, this.m_contactCapacity = t, this.m_jointCapacity = n, this.m_bodyCount = 0, this.m_contactCount = 0, this.m_jointCount = 0, this.m_allocator = i, this.m_listener = r, this.m_contactSolver = o, s = this.m_bodies.length; s < e; s++) this.m_bodies[s] = null;
      for (s = this.m_contacts.length; s < t; s++) this.m_contacts[s] = null;
      for (s = this.m_joints.length; s < n; s++) this.m_joints[s] = null;
    }, M.prototype.Clear = function () {
      this.m_bodyCount = 0, this.m_contactCount = 0, this.m_jointCount = 0;
    }, M.prototype.Solve = function (t, n, i) {
      var r, o = 0, a = 0;
      for (o = 0; o < this.m_bodyCount; ++o) (r = this.m_bodies[o]).GetType() == v.b2_dynamicBody && (r.m_linearVelocity.x += t.dt * (n.x + r.m_invMass * r.m_force.x), r.m_linearVelocity.y += t.dt * (n.y + r.m_invMass * r.m_force.y), r.m_angularVelocity += t.dt * r.m_invI * r.m_torque, r.m_linearVelocity.Multiply(e.Clamp(1 - t.dt * r.m_linearDamping, 0, 1)), r.m_angularVelocity *= e.Clamp(1 - t.dt * r.m_angularDamping, 0, 1));
      this.m_contactSolver.Initialize(t, this.m_contacts, this.m_contactCount, this.m_allocator);
      var l = this.m_contactSolver;
      for (l.InitVelocityConstraints(t), o = 0; o < this.m_jointCount; ++o) this.m_joints[o].InitVelocityConstraints(t);
      for (o = 0; o < t.velocityIterations; ++o) {
        for (a = 0; a < this.m_jointCount; ++a) this.m_joints[a].SolveVelocityConstraints(t);
        l.SolveVelocityConstraints();
      }
      for (o = 0; o < this.m_jointCount; ++o) this.m_joints[o].FinalizeVelocityConstraints();
      for (l.FinalizeVelocityConstraints(), o = 0; o < this.m_bodyCount; ++o) if ((r = this.m_bodies[o]).GetType() != v.b2_staticBody) {
        var c = t.dt * r.m_linearVelocity.x, h = t.dt * r.m_linearVelocity.y;
        c * c + h * h > s.b2_maxTranslationSquared && (r.m_linearVelocity.Normalize(), r.m_linearVelocity.x *= s.b2_maxTranslation * t.inv_dt, r.m_linearVelocity.y *= s.b2_maxTranslation * t.inv_dt);
        var u = t.dt * r.m_angularVelocity;
        u * u > s.b2_maxRotationSquared && (r.m_angularVelocity < 0 ? r.m_angularVelocity = -s.b2_maxRotation * t.inv_dt : r.m_angularVelocity = s.b2_maxRotation * t.inv_dt), r.m_sweep.c0.SetV(r.m_sweep.c), r.m_sweep.a0 = r.m_sweep.a, r.m_sweep.c.x += t.dt * r.m_linearVelocity.x, r.m_sweep.c.y += t.dt * r.m_linearVelocity.y, r.m_sweep.a += t.dt * r.m_angularVelocity, r.SynchronizeTransform();
      }
      for (o = 0; o < t.positionIterations; ++o) {
        var d = l.SolvePositionConstraints(s.b2_contactBaumgarte), p = true;
        for (a = 0; a < this.m_jointCount; ++a) {
          var m = this.m_joints[a].SolvePositionConstraints(s.b2_contactBaumgarte);
          p = p && m;
        }
        if (d && p) break;
      }
      if (this.Report(l.m_constraints), i) {
        var f = Number.MAX_VALUE, g = s.b2_linearSleepTolerance * s.b2_linearSleepTolerance, y = s.b2_angularSleepTolerance * s.b2_angularSleepTolerance;
        for (o = 0; o < this.m_bodyCount; ++o) (r = this.m_bodies[o]).GetType() != v.b2_staticBody && (0 == (r.m_flags & v.e_allowSleepFlag) && (r.m_sleepTime = 0, f = 0), 0 == (r.m_flags & v.e_allowSleepFlag) || r.m_angularVelocity * r.m_angularVelocity > y || e.Dot(r.m_linearVelocity, r.m_linearVelocity) > g ? (r.m_sleepTime = 0, f = 0) : (r.m_sleepTime += t.dt, f = e.Min(f, r.m_sleepTime)));
        if (f >= s.b2_timeToSleep) for (o = 0; o < this.m_bodyCount; ++o) (r = this.m_bodies[o]).SetAwake(false);
      }
    }, M.prototype.SolveTOI = function (e) {
      var t = 0, n = 0;
      this.m_contactSolver.Initialize(e, this.m_contacts, this.m_contactCount, this.m_allocator);
      var i = this.m_contactSolver;
      for (t = 0; t < this.m_jointCount; ++t) this.m_joints[t].InitVelocityConstraints(e);
      for (t = 0; t < e.velocityIterations; ++t) for (i.SolveVelocityConstraints(), n = 0; n < this.m_jointCount; ++n) this.m_joints[n].SolveVelocityConstraints(e);
      for (t = 0; t < this.m_bodyCount; ++t) {
        var r = this.m_bodies[t];
        if (r.GetType() != v.b2_staticBody) {
          var o = e.dt * r.m_linearVelocity.x, a = e.dt * r.m_linearVelocity.y;
          o * o + a * a > s.b2_maxTranslationSquared && (r.m_linearVelocity.Normalize(), r.m_linearVelocity.x *= s.b2_maxTranslation * e.inv_dt, r.m_linearVelocity.y *= s.b2_maxTranslation * e.inv_dt);
          var l = e.dt * r.m_angularVelocity;
          l * l > s.b2_maxRotationSquared && (r.m_angularVelocity < 0 ? r.m_angularVelocity = -s.b2_maxRotation * e.inv_dt : r.m_angularVelocity = s.b2_maxRotation * e.inv_dt), r.m_sweep.c0.SetV(r.m_sweep.c), r.m_sweep.a0 = r.m_sweep.a, r.m_sweep.c.x += e.dt * r.m_linearVelocity.x, r.m_sweep.c.y += e.dt * r.m_linearVelocity.y, r.m_sweep.a += e.dt * r.m_angularVelocity, r.SynchronizeTransform();
        }
      }
      for (t = 0; t < e.positionIterations; ++t) {
        var c = i.SolvePositionConstraints(0.75), h = true;
        for (n = 0; n < this.m_jointCount; ++n) {
          var u = this.m_joints[n].SolvePositionConstraints(s.b2_contactBaumgarte);
          h = h && u;
        }
        if (c && h) break;
      }
      this.Report(i.m_constraints);
    }, M.prototype.Report = function (e) {
      if (null != this.m_listener) for (var t = 0; t < this.m_contactCount; ++t) {
        for (var n = this.m_contacts[t], i = e[t], r = 0; r < i.pointCount; ++r) M.s_impulse.normalImpulses[r] = i.points[r].normalImpulse, M.s_impulse.tangentImpulses[r] = i.points[r].tangentImpulse;
        this.m_listener.PostSolve(n, M.s_impulse);
      }
    }, M.prototype.AddBody = function (e) {
      e.m_islandIndex = this.m_bodyCount, this.m_bodies[this.m_bodyCount++] = e;
    }, M.prototype.AddContact = function (e) {
      this.m_contacts[this.m_contactCount++] = e;
    }, M.prototype.AddJoint = function (e) {
      this.m_joints[this.m_jointCount++] = e;
    }, i.postDefs.push(function () {
      i.Dynamics.b2Island.s_impulse = new x;
    }), C.b2TimeStep = function () {}, C.prototype.Set = function (e) {
      this.dt = e.dt, this.inv_dt = e.inv_dt, this.positionIterations = e.positionIterations, this.velocityIterations = e.velocityIterations, this.warmStarting = e.warmStarting;
    }, k.b2World = function () {
      this.s_stack = new H, this.m_contactManager = new w, this.m_contactSolver = new P, this.m_island = new M;
    }, k.prototype.b2World = function (e, t) {
      this.m_destructionListener = null, this.m_debugDraw = null, this.m_bodyList = null, this.m_contactList = null, this.m_jointList = null, this.m_controllerList = null, this.m_bodyCount = 0, this.m_contactCount = 0, this.m_jointCount = 0, this.m_controllerCount = 0, k.m_warmStarting = true, k.m_continuousPhysics = true, this.m_allowSleep = t, this.m_gravity = e, this.m_inv_dt0 = 0, this.m_contactManager.m_world = this;
      var n = new y;
      this.m_groundBody = this.CreateBody(n);
    }, k.prototype.SetDestructionListener = function (e) {
      this.m_destructionListener = e;
    }, k.prototype.SetContactFilter = function (e) {
      this.m_contactManager.m_contactFilter = e;
    }, k.prototype.SetContactListener = function (e) {
      this.m_contactManager.m_contactListener = e;
    }, k.prototype.SetDebugDraw = function (e) {
      this.m_debugDraw = e;
    }, k.prototype.SetBroadPhase = function (e) {
      var t = this.m_contactManager.m_broadPhase;
      this.m_contactManager.m_broadPhase = e;
      for (var n = this.m_bodyList; n; n = n.m_next) for (var i = n.m_fixtureList; i; i = i.m_next) i.m_proxy = e.CreateProxy(t.GetFatAABB(i.m_proxy), i);
    }, k.prototype.Validate = function () {
      this.m_contactManager.m_broadPhase.Validate();
    }, k.prototype.GetProxyCount = function () {
      return this.m_contactManager.m_broadPhase.GetProxyCount();
    }, k.prototype.CreateBody = function (e) {
      if (1 == this.IsLocked()) return null;
      var t = new v(e, this);
      return t.m_prev = null, t.m_next = this.m_bodyList, this.m_bodyList && (this.m_bodyList.m_prev = t), this.m_bodyList = t, ++this.m_bodyCount, t;
    }, k.prototype.DestroyBody = function (e) {
      if (1 != this.IsLocked()) {
        for (var t = e.m_jointList; t;) {
          var n = t;
          t = t.next, this.m_destructionListener && this.m_destructionListener.SayGoodbyeJoint(n.joint), this.DestroyJoint(n.joint);
        }
        for (var i = e.m_controllerList; i;) {
          var r = i;
          i = i.nextController, r.controller.RemoveBody(e);
        }
        for (var o = e.m_contactList; o;) {
          var s = o;
          o = o.next, this.m_contactManager.Destroy(s.contact);
        }
        e.m_contactList = null;
        for (var a = e.m_fixtureList; a;) {
          var l = a;
          a = a.m_next, this.m_destructionListener && this.m_destructionListener.SayGoodbyeFixture(l), l.DestroyProxy(this.m_contactManager.m_broadPhase), l.Destroy();
        }
        e.m_fixtureList = null, e.m_fixtureCount = 0, e.m_prev && (e.m_prev.m_next = e.m_next), e.m_next && (e.m_next.m_prev = e.m_prev), e == this.m_bodyList && (this.m_bodyList = e.m_next), --this.m_bodyCount;
      }
    }, k.prototype.CreateJoint = function (e) {
      var t = D.Create(e, null);
      t.m_prev = null, t.m_next = this.m_jointList, this.m_jointList && (this.m_jointList.m_prev = t), this.m_jointList = t, ++this.m_jointCount, t.m_edgeA.joint = t, t.m_edgeA.other = t.m_bodyB, t.m_edgeA.prev = null, t.m_edgeA.next = t.m_bodyA.m_jointList, t.m_bodyA.m_jointList && (t.m_bodyA.m_jointList.prev = t.m_edgeA), t.m_bodyA.m_jointList = t.m_edgeA, t.m_edgeB.joint = t, t.m_edgeB.other = t.m_bodyA, t.m_edgeB.prev = null, t.m_edgeB.next = t.m_bodyB.m_jointList, t.m_bodyB.m_jointList && (t.m_bodyB.m_jointList.prev = t.m_edgeB), t.m_bodyB.m_jointList = t.m_edgeB;
      var n = e.bodyA, i = e.bodyB;
      if (0 == e.collideConnected) for (var r = i.GetContactList(); r;) r.other == n && r.contact.FlagForFiltering(), r = r.next;
      return t;
    }, k.prototype.DestroyJoint = function (e) {
      var t = e.m_collideConnected;
      e.m_prev && (e.m_prev.m_next = e.m_next), e.m_next && (e.m_next.m_prev = e.m_prev), e == this.m_jointList && (this.m_jointList = e.m_next);
      var n = e.m_bodyA, i = e.m_bodyB;
      if (n.SetAwake(true), i.SetAwake(true), e.m_edgeA.prev && (e.m_edgeA.prev.next = e.m_edgeA.next), e.m_edgeA.next && (e.m_edgeA.next.prev = e.m_edgeA.prev), e.m_edgeA == n.m_jointList && (n.m_jointList = e.m_edgeA.next), e.m_edgeA.prev = null, e.m_edgeA.next = null, e.m_edgeB.prev && (e.m_edgeB.prev.next = e.m_edgeB.next), e.m_edgeB.next && (e.m_edgeB.next.prev = e.m_edgeB.prev), e.m_edgeB == i.m_jointList && (i.m_jointList = e.m_edgeB.next), e.m_edgeB.prev = null, e.m_edgeB.next = null, D.Destroy(e, null), --this.m_jointCount, 0 == t) for (var r = i.GetContactList(); r;) r.other == n && r.contact.FlagForFiltering(), r = r.next;
    }, k.prototype.AddController = function (e) {
      return e.m_next = this.m_controllerList, e.m_prev = null, this.m_controllerList = e, e.m_world = this, this.m_controllerCount++, e;
    }, k.prototype.RemoveController = function (e) {
      e.m_prev && (e.m_prev.m_next = e.m_next), e.m_next && (e.m_next.m_prev = e.m_prev), this.m_controllerList == e && (this.m_controllerList = e.m_next), this.m_controllerCount--;
    }, k.prototype.CreateController = function (e) {
      if (e.m_world != this) throw new Error("Controller can only be a member of one world");
      return e.m_next = this.m_controllerList, e.m_prev = null, this.m_controllerList && (this.m_controllerList.m_prev = e), this.m_controllerList = e, ++this.m_controllerCount, e.m_world = this, e;
    }, k.prototype.DestroyController = function (e) {
      e.Clear(), e.m_next && (e.m_next.m_prev = e.m_prev), e.m_prev && (e.m_prev.m_next = e.m_next), e == this.m_controllerList && (this.m_controllerList = e.m_next), --this.m_controllerCount;
    }, k.prototype.SetWarmStarting = function (e) {
      k.m_warmStarting = e;
    }, k.prototype.SetContinuousPhysics = function (e) {
      k.m_continuousPhysics = e;
    }, k.prototype.GetBodyCount = function () {
      return this.m_bodyCount;
    }, k.prototype.GetJointCount = function () {
      return this.m_jointCount;
    }, k.prototype.GetContactCount = function () {
      return this.m_contactCount;
    }, k.prototype.SetGravity = function (e) {
      this.m_gravity = e;
    }, k.prototype.GetGravity = function () {
      return this.m_gravity;
    }, k.prototype.GetGroundBody = function () {
      return this.m_groundBody;
    }, k.prototype.Step = function (e, t, n) {
      undefined === e && (e = 0), undefined === t && (t = 0), undefined === n && (n = 0), this.m_flags & k.e_newFixture && (this.m_contactManager.FindNewContacts(), this.m_flags &= ~k.e_newFixture), this.m_flags |= k.e_locked;
      var i = k.s_timestep2;
      i.dt = e, i.velocityIterations = t, i.positionIterations = n, i.inv_dt = e > 0 ? 1 / e : 0, i.dtRatio = this.m_inv_dt0 * e, i.warmStarting = k.m_warmStarting, this.m_contactManager.Collide(), i.dt > 0 && this.Solve(i), k.m_continuousPhysics && i.dt > 0 && this.SolveTOI(i), i.dt > 0 && (this.m_inv_dt0 = i.inv_dt), this.m_flags &= ~k.e_locked;
    }, k.prototype.ClearForces = function () {
      for (var e = this.m_bodyList; e; e = e.m_next) e.m_force.SetZero(), e.m_torque = 0;
    }, k.prototype.DrawDebugData = function () {
      if (null != this.m_debugDraw) {
        this.m_debugDraw.m_sprite.graphics.clear();
        var e, t, n, i, s, l, c = this.m_debugDraw.GetFlags(), h = (new r, new r, new r, new a, new a, [new r, new r, new r, new r]), u = new o(0, 0, 0);
        if (c & S.e_shapeBit) for (e = this.m_bodyList; e; e = e.m_next) for (l = e.m_xf, t = e.GetFixtureList(); t; t = t.m_next) n = t.GetShape(), 0 == e.IsActive() ? (u.Set(0.5, 0.5, 0.3), this.DrawShape(n, l, u)) : e.GetType() == v.b2_staticBody ? (u.Set(0.5, 0.9, 0.5), this.DrawShape(n, l, u)) : e.GetType() == v.b2_kinematicBody ? (u.Set(0.5, 0.5, 0.9), this.DrawShape(n, l, u)) : 0 == e.IsAwake() ? (u.Set(0.6, 0.6, 0.6), this.DrawShape(n, l, u)) : (u.Set(0.9, 0.7, 0.7), this.DrawShape(n, l, u));
        if (c & S.e_jointBit) for (i = this.m_jointList; i; i = i.m_next) this.DrawJoint(i);
        if (c & S.e_controllerBit) for (var d = this.m_controllerList; d; d = d.m_next) d.Draw(this.m_debugDraw);
        if (c & S.e_pairBit) {
          u.Set(0.3, 0.9, 0.9);
          for (var p = this.m_contactManager.m_contactList; p; p = p.GetNext()) {
            var m = p.GetFixtureA(), f = p.GetFixtureB(), g = m.GetAABB().GetCenter(), y = f.GetAABB().GetCenter();
            this.m_debugDraw.DrawSegment(g, y, u);
          }
        }
        if (c & S.e_aabbBit) for (s = this.m_contactManager.m_broadPhase, h = [new r, new r, new r, new r], e = this.m_bodyList; e; e = e.GetNext()) if (0 != e.IsActive()) for (t = e.GetFixtureList(); t; t = t.GetNext()) {
          var _ = s.GetFatAABB(t.m_proxy);
          h[0].Set(_.lowerBound.x, _.lowerBound.y), h[1].Set(_.upperBound.x, _.lowerBound.y), h[2].Set(_.upperBound.x, _.upperBound.y), h[3].Set(_.lowerBound.x, _.upperBound.y), this.m_debugDraw.DrawPolygon(h, 4, u);
        }
        if (c & S.e_centerOfMassBit) for (e = this.m_bodyList; e; e = e.m_next) (l = k.s_xf).R = e.m_xf.R, l.position = e.GetWorldCenter(), this.m_debugDraw.DrawTransform(l);
      }
    }, k.prototype.QueryAABB = function (e, t) {
      var n = this.m_contactManager.m_broadPhase;
      n.Query(function (t) {
        return e(n.GetUserData(t));
      }, t);
    }, k.prototype.QueryShape = function (e, t, i) {
      undefined === i && (i = null), null == i && (i = new n).SetIdentity();
      var r = this.m_contactManager.m_broadPhase;
      var o = new a;
      t.ComputeAABB(o, i), r.Query(function (n) {
        var o = r.GetUserData(n) instanceof T ? r.GetUserData(n) : null;
        return !g.TestOverlap(t, i, o.GetShape(), o.GetBody().GetTransform()) || e(o);
      }, o);
    }, k.prototype.QueryPoint = function (e, t) {
      var n = this.m_contactManager.m_broadPhase;
      var i = new a;
      i.lowerBound.Set(t.x - s.b2_linearSlop, t.y - s.b2_linearSlop), i.upperBound.Set(t.x + s.b2_linearSlop, t.y + s.b2_linearSlop), n.Query(function (i) {
        var r = n.GetUserData(i) instanceof T ? n.GetUserData(i) : null;
        return !r.TestPoint(t) || e(r);
      }, i);
    }, k.prototype.RayCast = function (e, t, n) {
      var i = this.m_contactManager.m_broadPhase, o = new u;
      var s = new h(t, n);
      i.RayCast(function (s, a) {
        var l = i.GetUserData(a), c = l instanceof T ? l : null;
        if (c.RayCast(o, s)) {
          var h = o.fraction, u = new r((1 - h) * t.x + h * n.x, (1 - h) * t.y + h * n.y);
          return e(c, u, o.normal, h);
        }
        return s.maxFraction;
      }, s);
    }, k.prototype.RayCastOne = function (e, t) {
      var n;
      return this.RayCast(function (e, t, i, r) {
        return undefined === r && (r = 0), n = e, r;
      }, e, t), n;
    }, k.prototype.RayCastAll = function (e, t) {
      var n = new H;
      return this.RayCast(function (e, t, i, r) {
        return undefined === r && (r = 0), n[n.length] = e, 1;
      }, e, t), n;
    }, k.prototype.GetBodyList = function () {
      return this.m_bodyList;
    }, k.prototype.GetJointList = function () {
      return this.m_jointList;
    }, k.prototype.GetContactList = function () {
      return this.m_contactList;
    }, k.prototype.IsLocked = function () {
      return (this.m_flags & k.e_locked) > 0;
    }, k.prototype.Solve = function (e) {
      for (var t, n = this.m_controllerList; n; n = n.m_next) n.Step(e);
      var i = this.m_island;
      for (i.Initialize(this.m_bodyCount, this.m_contactCount, this.m_jointCount, null, this.m_contactManager.m_contactListener, this.m_contactSolver), t = this.m_bodyList; t; t = t.m_next) t.m_flags &= ~v.e_islandFlag;
      for (var r = this.m_contactList; r; r = r.m_next) r.m_flags &= ~R.e_islandFlag;
      for (var o = this.m_jointList; o; o = o.m_next) o.m_islandFlag = false;
      parseInt(this.m_bodyCount);
      for (var s = this.s_stack, a = this.m_bodyList; a; a = a.m_next) if (!(a.m_flags & v.e_islandFlag) && 0 != a.IsAwake() && 0 != a.IsActive() && a.GetType() != v.b2_staticBody) {
        i.Clear();
        var l = 0;
        for (s[l++] = a, a.m_flags |= v.e_islandFlag; l > 0;) if (t = s[--l], i.AddBody(t), 0 == t.IsAwake() && t.SetAwake(true), t.GetType() != v.b2_staticBody) {
          for (var c, h = t.m_contactList; h; h = h.next) h.contact.m_flags & R.e_islandFlag || 1 != h.contact.IsSensor() && 0 != h.contact.IsEnabled() && 0 != h.contact.IsTouching() && (i.AddContact(h.contact), h.contact.m_flags |= R.e_islandFlag, (c = h.other).m_flags & v.e_islandFlag || (s[l++] = c, c.m_flags |= v.e_islandFlag));
          for (var u = t.m_jointList; u; u = u.next) 1 != u.joint.m_islandFlag && 0 != (c = u.other).IsActive() && (i.AddJoint(u.joint), u.joint.m_islandFlag = true, c.m_flags & v.e_islandFlag || (s[l++] = c, c.m_flags |= v.e_islandFlag));
        }
        i.Solve(e, this.m_gravity, this.m_allowSleep);
        for (var d = 0; d < i.m_bodyCount; ++d) (t = i.m_bodies[d]).GetType() == v.b2_staticBody && (t.m_flags &= ~v.e_islandFlag);
      }
      for (d = 0; d < s.length && s[d]; ++d) s[d] = null;
      for (t = this.m_bodyList; t; t = t.m_next) 0 != t.IsAwake() && 0 != t.IsActive() && t.GetType() != v.b2_staticBody && t.SynchronizeFixtures();
      this.m_contactManager.FindNewContacts();
    }, k.prototype.SolveTOI = function (e) {
      var t, n, i, r, o, a, l, c = this.m_island;
      c.Initialize(this.m_bodyCount, s.b2_maxTOIContactsPerIsland, s.b2_maxTOIJointsPerIsland, null, this.m_contactManager.m_contactListener, this.m_contactSolver);
      var h, u = k.s_queue;
      for (t = this.m_bodyList; t; t = t.m_next) t.m_flags &= ~v.e_islandFlag, t.m_sweep.t0 = 0;
      for (h = this.m_contactList; h; h = h.m_next) h.m_flags &= ~(R.e_toiFlag | R.e_islandFlag);
      for (l = this.m_jointList; l; l = l.m_next) l.m_islandFlag = false;
      for (;;) {
        var d = null, p = 1;
        for (h = this.m_contactList; h; h = h.m_next) if (1 != h.IsSensor() && 0 != h.IsEnabled() && 0 != h.IsContinuous()) {
          var m = 1;
          if (h.m_flags & R.e_toiFlag) m = h.m_toi; else {
            if (n = h.m_fixtureA, i = h.m_fixtureB, r = n.m_body, o = i.m_body, !(r.GetType() == v.b2_dynamicBody && 0 != r.IsAwake() || o.GetType() == v.b2_dynamicBody && 0 != o.IsAwake())) continue;
            var f = r.m_sweep.t0;
            r.m_sweep.t0 < o.m_sweep.t0 ? (f = o.m_sweep.t0, r.m_sweep.Advance(f)) : o.m_sweep.t0 < r.m_sweep.t0 && (f = r.m_sweep.t0, o.m_sweep.Advance(f)), m = h.ComputeTOI(r.m_sweep, o.m_sweep), s.b2Assert(0 <= m && m <= 1), m > 0 && m < 1 && (m = (1 - m) * f + m) > 1 && (m = 1), h.m_toi = m, h.m_flags |= R.e_toiFlag;
          }
          Number.MIN_VALUE < m && m < p && (d = h, p = m);
        }
        if (null == d || 1 - 100 * Number.MIN_VALUE < p) break;
        if (n = d.m_fixtureA, i = d.m_fixtureB, r = n.m_body, o = i.m_body, k.s_backupA.Set(r.m_sweep), k.s_backupB.Set(o.m_sweep), r.Advance(p), o.Advance(p), d.Update(this.m_contactManager.m_contactListener), d.m_flags &= ~R.e_toiFlag, 1 != d.IsSensor() && 0 != d.IsEnabled()) {
          if (0 != d.IsTouching()) {
            var g = r;
            g.GetType() != v.b2_dynamicBody && (g = o), c.Clear();
            var y = 0, _ = 0;
            for (u[y + _++] = g, g.m_flags |= v.e_islandFlag; _ > 0;) if (t = u[y++], --_, c.AddBody(t), 0 == t.IsAwake() && t.SetAwake(true), t.GetType() == v.b2_dynamicBody) {
              for (a = t.m_contactList; a && c.m_contactCount != c.m_contactCapacity; a = a.next) if (!(a.contact.m_flags & R.e_islandFlag) && 1 != a.contact.IsSensor() && 0 != a.contact.IsEnabled() && 0 != a.contact.IsTouching()) {
                c.AddContact(a.contact), a.contact.m_flags |= R.e_islandFlag;
                var x = a.other;
                x.m_flags & v.e_islandFlag || (x.GetType() != v.b2_staticBody && (x.Advance(p), x.SetAwake(true)), u[y + _] = x, ++_, x.m_flags |= v.e_islandFlag);
              }
              for (var b = t.m_jointList; b; b = b.next) c.m_jointCount != c.m_jointCapacity && 1 != b.joint.m_islandFlag && 0 != (x = b.other).IsActive() && (c.AddJoint(b.joint), b.joint.m_islandFlag = true, x.m_flags & v.e_islandFlag || (x.GetType() != v.b2_staticBody && (x.Advance(p), x.SetAwake(true)), u[y + _] = x, ++_, x.m_flags |= v.e_islandFlag));
            }
            var w = k.s_timestep;
            w.warmStarting = false, w.dt = (1 - p) * e.dt, w.inv_dt = 1 / w.dt, w.dtRatio = 0, w.velocityIterations = e.velocityIterations, w.positionIterations = e.positionIterations, c.SolveTOI(w);
            var S = 0;
            for (S = 0; S < c.m_bodyCount; ++S) if ((t = c.m_bodies[S]).m_flags &= ~v.e_islandFlag, 0 != t.IsAwake() && t.GetType() == v.b2_dynamicBody) for (t.SynchronizeFixtures(), a = t.m_contactList; a; a = a.next) a.contact.m_flags &= ~R.e_toiFlag;
            for (S = 0; S < c.m_contactCount; ++S) (h = c.m_contacts[S]).m_flags &= ~(R.e_toiFlag | R.e_islandFlag);
            for (S = 0; S < c.m_jointCount; ++S) (l = c.m_joints[S]).m_islandFlag = false;
            this.m_contactManager.FindNewContacts();
          }
        } else r.m_sweep.Set(k.s_backupA), o.m_sweep.Set(k.s_backupB), r.SynchronizeTransform(), o.SynchronizeTransform();
      }
    }, k.prototype.DrawJoint = function (e) {
      var t = e.GetBodyA(), n = e.GetBodyB(), i = t.m_xf, r = n.m_xf, o = i.position, s = r.position, a = e.GetAnchorA(), l = e.GetAnchorB(), c = k.s_jointColor;
      switch (e.m_type) {
        case D.e_distanceJoint:
          this.m_debugDraw.DrawSegment(a, l, c);
          break;
        case D.e_pulleyJoint:
          var h = e instanceof O ? e : null, u = h.GetGroundAnchorA(), d = h.GetGroundAnchorB();
          this.m_debugDraw.DrawSegment(u, a, c), this.m_debugDraw.DrawSegment(d, l, c), this.m_debugDraw.DrawSegment(u, d, c);
          break;
        case D.e_mouseJoint:
          this.m_debugDraw.DrawSegment(a, l, c);
          break;
        default:
          t != this.m_groundBody && this.m_debugDraw.DrawSegment(o, a, c), this.m_debugDraw.DrawSegment(a, l, c), n != this.m_groundBody && this.m_debugDraw.DrawSegment(s, l, c);
      }
    }, k.prototype.DrawShape = function (t, n, i) {
      switch (t.m_type) {
        case g.e_circleShape:
          var r = t instanceof d ? t : null, o = e.MulX(n, r.m_p), s = r.m_radius, a = n.R.col1;
          this.m_debugDraw.DrawSolidCircle(o, s, a, i);
          break;
        case g.e_polygonShape:
          var l = 0, c = t instanceof f ? t : null, h = parseInt(c.GetVertexCount()), u = c.GetVertices(), m = new H(h);
          for (l = 0; l < h; ++l) m[l] = e.MulX(n, u[l]);
          this.m_debugDraw.DrawSolidPolygon(m, h, i);
          break;
        case g.e_edgeShape:
          var v = t instanceof p ? t : null;
          this.m_debugDraw.DrawSegment(e.MulX(n, v.GetVertex1()), e.MulX(n, v.GetVertex2()), i);
      }
    }, i.postDefs.push(function () {
      i.Dynamics.b2World.s_timestep2 = new C, i.Dynamics.b2World.s_xf = new n, i.Dynamics.b2World.s_backupA = new t, i.Dynamics.b2World.s_backupB = new t, i.Dynamics.b2World.s_timestep = new C, i.Dynamics.b2World.s_queue = new H, i.Dynamics.b2World.s_jointColor = new o(0.5, 0.8, 0.8), i.Dynamics.b2World.e_newFixture = 1, i.Dynamics.b2World.e_locked = 2;
    });
  }(), function () {
    var e = i.Collision.Shapes.b2CircleShape, t = (i.Collision.Shapes.b2EdgeChainDef, i.Collision.Shapes.b2EdgeShape), n = (i.Collision.Shapes.b2MassData, i.Collision.Shapes.b2PolygonShape), r = i.Collision.Shapes.b2Shape, o = i.Dynamics.Contacts.b2CircleContact, s = i.Dynamics.Contacts.b2Contact, a = i.Dynamics.Contacts.b2ContactConstraint, l = i.Dynamics.Contacts.b2ContactConstraintPoint, c = i.Dynamics.Contacts.b2ContactEdge, h = i.Dynamics.Contacts.b2ContactFactory, u = i.Dynamics.Contacts.b2ContactRegister, d = i.Dynamics.Contacts.b2ContactResult, p = i.Dynamics.Contacts.b2ContactSolver, m = i.Dynamics.Contacts.b2EdgeAndCircleContact, f = i.Dynamics.Contacts.b2NullContact, g = i.Dynamics.Contacts.b2PolyAndCircleContact, v = i.Dynamics.Contacts.b2PolyAndEdgeContact, y = i.Dynamics.Contacts.b2PolygonContact, _ = i.Dynamics.Contacts.b2PositionSolverManifold, x = i.Dynamics.b2Body, b = (i.Dynamics.b2BodyDef, i.Dynamics.b2ContactFilter, i.Dynamics.b2ContactImpulse, i.Dynamics.b2ContactListener, i.Dynamics.b2ContactManager, i.Dynamics.b2DebugDraw, i.Dynamics.b2DestructionListener, i.Dynamics.b2FilterData, i.Dynamics.b2Fixture, i.Dynamics.b2FixtureDef, i.Dynamics.b2Island, i.Dynamics.b2TimeStep), w = (i.Dynamics.b2World, i.Common.b2Color, i.Common.b2internal, i.Common.b2Settings), S = i.Common.Math.b2Mat22, E = (i.Common.Math.b2Mat33, i.Common.Math.b2Math), q = (i.Common.Math.b2Sweep, i.Common.Math.b2Transform, i.Common.Math.b2Vec2), T = (i.Common.Math.b2Vec3, i.Collision.b2AABB, i.Collision.b2Bound, i.Collision.b2BoundValues, i.Collision.b2Collision), A = i.Collision.b2ContactID, M = (i.Collision.b2ContactPoint, i.Collision.b2Distance, i.Collision.b2DistanceInput, i.Collision.b2DistanceOutput, i.Collision.b2DistanceProxy, i.Collision.b2DynamicTree, i.Collision.b2DynamicTreeBroadPhase, i.Collision.b2DynamicTreeNode, i.Collision.b2DynamicTreePair, i.Collision.b2Manifold), C = (i.Collision.b2ManifoldPoint, i.Collision.b2Point, i.Collision.b2RayCastInput, i.Collision.b2RayCastOutput, i.Collision.b2Segment, i.Collision.b2SeparationFunction, i.Collision.b2Simplex, i.Collision.b2SimplexCache, i.Collision.b2SimplexVertex, i.Collision.b2TimeOfImpact), k = i.Collision.b2TOIInput, R = i.Collision.b2WorldManifold;
    i.Collision.ClipVertex, i.Collision.Features, i.Collision.IBroadPhase;
    i.inherit(o, i.Dynamics.Contacts.b2Contact), o.prototype.__super = i.Dynamics.Contacts.b2Contact.prototype, o.b2CircleContact = function () {
      i.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
    }, o.Create = function (e) {
      return new o;
    }, o.Destroy = function (e, t) {}, o.prototype.Reset = function (e, t) {
      this.__super.Reset.call(this, e, t);
    }, o.prototype.Evaluate = function () {
      var t = this.m_fixtureA.GetBody(), n = this.m_fixtureB.GetBody();
      T.CollideCircles(this.m_manifold, this.m_fixtureA.GetShape() instanceof e ? this.m_fixtureA.GetShape() : null, t.m_xf, this.m_fixtureB.GetShape() instanceof e ? this.m_fixtureB.GetShape() : null, n.m_xf);
    }, s.b2Contact = function () {
      this.m_nodeA = new c, this.m_nodeB = new c, this.m_manifold = new M, this.m_oldManifold = new M;
    }, s.prototype.GetManifold = function () {
      return this.m_manifold;
    }, s.prototype.GetWorldManifold = function (e) {
      var t = this.m_fixtureA.GetBody(), n = this.m_fixtureB.GetBody(), i = this.m_fixtureA.GetShape(), r = this.m_fixtureB.GetShape();
      e.Initialize(this.m_manifold, t.GetTransform(), i.m_radius, n.GetTransform(), r.m_radius);
    }, s.prototype.IsTouching = function () {
      return (this.m_flags & s.e_touchingFlag) == s.e_touchingFlag;
    }, s.prototype.IsContinuous = function () {
      return (this.m_flags & s.e_continuousFlag) == s.e_continuousFlag;
    }, s.prototype.SetSensor = function (e) {
      e ? this.m_flags |= s.e_sensorFlag : this.m_flags &= ~s.e_sensorFlag;
    }, s.prototype.IsSensor = function () {
      return (this.m_flags & s.e_sensorFlag) == s.e_sensorFlag;
    }, s.prototype.SetEnabled = function (e) {
      e ? this.m_flags |= s.e_enabledFlag : this.m_flags &= ~s.e_enabledFlag;
    }, s.prototype.IsEnabled = function () {
      return (this.m_flags & s.e_enabledFlag) == s.e_enabledFlag;
    }, s.prototype.GetNext = function () {
      return this.m_next;
    }, s.prototype.GetFixtureA = function () {
      return this.m_fixtureA;
    }, s.prototype.GetFixtureB = function () {
      return this.m_fixtureB;
    }, s.prototype.FlagForFiltering = function () {
      this.m_flags |= s.e_filterFlag;
    }, s.prototype.b2Contact = function () {}, s.prototype.Reset = function (e, t) {
      if (undefined === e && (e = null), undefined === t && (t = null), this.m_flags = s.e_enabledFlag, !e || !t) return this.m_fixtureA = null, void (this.m_fixtureB = null);
      (e.IsSensor() || t.IsSensor()) && (this.m_flags |= s.e_sensorFlag);
      var n = e.GetBody(), i = t.GetBody();
      (n.GetType() != x.b2_dynamicBody || n.IsBullet() || i.GetType() != x.b2_dynamicBody || i.IsBullet()) && (this.m_flags |= s.e_continuousFlag), this.m_fixtureA = e, this.m_fixtureB = t, this.m_manifold.m_pointCount = 0, this.m_prev = null, this.m_next = null, this.m_nodeA.contact = null, this.m_nodeA.prev = null, this.m_nodeA.next = null, this.m_nodeA.other = null, this.m_nodeB.contact = null, this.m_nodeB.prev = null, this.m_nodeB.next = null, this.m_nodeB.other = null;
    }, s.prototype.Update = function (e) {
      var t = this.m_oldManifold;
      this.m_oldManifold = this.m_manifold, this.m_manifold = t, this.m_flags |= s.e_enabledFlag;
      var n = false, i = (this.m_flags & s.e_touchingFlag) == s.e_touchingFlag, o = this.m_fixtureA.m_body, a = this.m_fixtureB.m_body, l = this.m_fixtureA.m_aabb.TestOverlap(this.m_fixtureB.m_aabb);
      if (this.m_flags & s.e_sensorFlag) {
        if (l) {
          var c = this.m_fixtureA.GetShape(), h = this.m_fixtureB.GetShape(), u = o.GetTransform(), d = a.GetTransform();
          n = r.TestOverlap(c, u, h, d);
        }
        this.m_manifold.m_pointCount = 0;
      } else {
        if (o.GetType() != x.b2_dynamicBody || o.IsBullet() || a.GetType() != x.b2_dynamicBody || a.IsBullet() ? this.m_flags |= s.e_continuousFlag : this.m_flags &= ~s.e_continuousFlag, l) {
          this.Evaluate(), n = this.m_manifold.m_pointCount > 0;
          for (var p = 0; p < this.m_manifold.m_pointCount; ++p) {
            var m = this.m_manifold.m_points[p];
            m.m_normalImpulse = 0, m.m_tangentImpulse = 0;
            for (var f = m.m_id, g = 0; g < this.m_oldManifold.m_pointCount; ++g) {
              var v = this.m_oldManifold.m_points[g];
              if (v.m_id.key == f.key) {
                m.m_normalImpulse = v.m_normalImpulse, m.m_tangentImpulse = v.m_tangentImpulse;
                break;
              }
            }
          }
        } else this.m_manifold.m_pointCount = 0;
        n != i && (o.SetAwake(true), a.SetAwake(true));
      }
      n ? this.m_flags |= s.e_touchingFlag : this.m_flags &= ~s.e_touchingFlag, 0 == i && 1 == n && e.BeginContact(this), 1 == i && 0 == n && e.EndContact(this), 0 == (this.m_flags & s.e_sensorFlag) && e.PreSolve(this, this.m_oldManifold);
    }, s.prototype.Evaluate = function () {}, s.prototype.ComputeTOI = function (e, t) {
      return s.s_input.proxyA.Set(this.m_fixtureA.GetShape()), s.s_input.proxyB.Set(this.m_fixtureB.GetShape()), s.s_input.sweepA = e, s.s_input.sweepB = t, s.s_input.tolerance = w.b2_linearSlop, C.TimeOfImpact(s.s_input);
    }, i.postDefs.push(function () {
      i.Dynamics.Contacts.b2Contact.e_sensorFlag = 1, i.Dynamics.Contacts.b2Contact.e_continuousFlag = 2, i.Dynamics.Contacts.b2Contact.e_islandFlag = 4, i.Dynamics.Contacts.b2Contact.e_toiFlag = 8, i.Dynamics.Contacts.b2Contact.e_touchingFlag = 16, i.Dynamics.Contacts.b2Contact.e_enabledFlag = 32, i.Dynamics.Contacts.b2Contact.e_filterFlag = 64, i.Dynamics.Contacts.b2Contact.s_input = new k;
    }), a.b2ContactConstraint = function () {
      this.localPlaneNormal = new q, this.localPoint = new q, this.normal = new q, this.normalMass = new S, this.K = new S;
    }, a.prototype.b2ContactConstraint = function () {
      this.points = new H(w.b2_maxManifoldPoints);
      for (var e = 0; e < w.b2_maxManifoldPoints; e++) this.points[e] = new l;
    }, l.b2ContactConstraintPoint = function () {
      this.localPoint = new q, this.rA = new q, this.rB = new q;
    }, c.b2ContactEdge = function () {}, h.b2ContactFactory = function () {}, h.prototype.b2ContactFactory = function (e) {
      this.m_allocator = e, this.InitializeRegisters();
    }, h.prototype.AddType = function (e, t, n, i) {
      undefined === n && (n = 0), undefined === i && (i = 0), this.m_registers[n][i].createFcn = e, this.m_registers[n][i].destroyFcn = t, this.m_registers[n][i].primary = true, n != i && (this.m_registers[i][n].createFcn = e, this.m_registers[i][n].destroyFcn = t, this.m_registers[i][n].primary = false);
    }, h.prototype.InitializeRegisters = function () {
      this.m_registers = new H(r.e_shapeTypeCount);
      for (var e = 0; e < r.e_shapeTypeCount; e++) {
        this.m_registers[e] = new H(r.e_shapeTypeCount);
        for (var t = 0; t < r.e_shapeTypeCount; t++) this.m_registers[e][t] = new u;
      }
      this.AddType(o.Create, o.Destroy, r.e_circleShape, r.e_circleShape), this.AddType(g.Create, g.Destroy, r.e_polygonShape, r.e_circleShape), this.AddType(y.Create, y.Destroy, r.e_polygonShape, r.e_polygonShape), this.AddType(m.Create, m.Destroy, r.e_edgeShape, r.e_circleShape), this.AddType(v.Create, v.Destroy, r.e_polygonShape, r.e_edgeShape);
    }, h.prototype.Create = function (e, t) {
      var n, i = parseInt(e.GetType()), r = parseInt(t.GetType()), o = this.m_registers[i][r];
      if (o.pool) return n = o.pool, o.pool = n.m_next, o.poolCount--, n.Reset(e, t), n;
      var s = o.createFcn;
      return null != s ? o.primary ? ((n = s(this.m_allocator)).Reset(e, t), n) : ((n = s(this.m_allocator)).Reset(t, e), n) : null;
    }, h.prototype.Destroy = function (e) {
      e.m_manifold.m_pointCount > 0 && (e.m_fixtureA.m_body.SetAwake(true), e.m_fixtureB.m_body.SetAwake(true));
      var t = parseInt(e.m_fixtureA.GetType()), n = parseInt(e.m_fixtureB.GetType()), i = this.m_registers[t][n];
      i.poolCount++, e.m_next = i.pool, i.pool = e, (0, i.destroyFcn)(e, this.m_allocator);
    }, u.b2ContactRegister = function () {}, d.b2ContactResult = function () {
      this.position = new q, this.normal = new q, this.id = new A;
    }, p.b2ContactSolver = function () {
      this.m_step = new b, this.m_constraints = new H;
    }, p.prototype.b2ContactSolver = function () {}, p.prototype.Initialize = function (e, t, n, i) {
      var r;
      undefined === n && (n = 0), this.m_step.Set(e), this.m_allocator = i;
      var o = 0;
      for (this.m_constraintCount = n; this.m_constraints.length < this.m_constraintCount;) this.m_constraints[this.m_constraints.length] = new a;
      for (o = 0; o < n; ++o) {
        var s = (r = t[o]).m_fixtureA, l = r.m_fixtureB, c = s.m_shape, h = l.m_shape, u = c.m_radius, d = h.m_radius, m = s.m_body, f = l.m_body, g = r.GetManifold(), v = w.b2MixFriction(s.GetFriction(), l.GetFriction()), y = w.b2MixRestitution(s.GetRestitution(), l.GetRestitution()), _ = m.m_linearVelocity.x, x = m.m_linearVelocity.y, b = f.m_linearVelocity.x, S = f.m_linearVelocity.y, E = m.m_angularVelocity, q = f.m_angularVelocity;
        w.b2Assert(g.m_pointCount > 0), p.s_worldManifold.Initialize(g, m.m_xf, u, f.m_xf, d);
        var T = p.s_worldManifold.m_normal.x, A = p.s_worldManifold.m_normal.y, M = this.m_constraints[o];
        M.bodyA = m, M.bodyB = f, M.manifold = g, M.normal.x = T, M.normal.y = A, M.pointCount = g.m_pointCount, M.friction = v, M.restitution = y, M.localPlaneNormal.x = g.m_localPlaneNormal.x, M.localPlaneNormal.y = g.m_localPlaneNormal.y, M.localPoint.x = g.m_localPoint.x, M.localPoint.y = g.m_localPoint.y, M.radius = u + d, M.type = g.m_type;
        for (var C = 0; C < M.pointCount; ++C) {
          var k = g.m_points[C], R = M.points[C];
          R.normalImpulse = k.m_normalImpulse, R.tangentImpulse = k.m_tangentImpulse, R.localPoint.SetV(k.m_localPoint);
          var L = R.rA.x = p.s_worldManifold.m_points[C].x - m.m_sweep.c.x, P = R.rA.y = p.s_worldManifold.m_points[C].y - m.m_sweep.c.y, D = R.rB.x = p.s_worldManifold.m_points[C].x - f.m_sweep.c.x, O = R.rB.y = p.s_worldManifold.m_points[C].y - f.m_sweep.c.y, I = L * A - P * T, B = D * A - O * T;
          I *= I, B *= B;
          var F = m.m_invMass + f.m_invMass + m.m_invI * I + f.m_invI * B;
          R.normalMass = 1 / F;
          var z = m.m_mass * m.m_invMass + f.m_mass * f.m_invMass;
          z += m.m_mass * m.m_invI * I + f.m_mass * f.m_invI * B, R.equalizedMass = 1 / z;
          var N = -T, U = L * N - P * A, V = D * N - O * A;
          U *= U, V *= V;
          var G = m.m_invMass + f.m_invMass + m.m_invI * U + f.m_invI * V;
          R.tangentMass = 1 / G, R.velocityBias = 0;
          var H = b + -q * O - _ - -E * P, j = S + q * D - x - E * L, $ = M.normal.x * H + M.normal.y * j;
          $ < -w.b2_velocityThreshold && (R.velocityBias += -M.restitution * $);
        }
        if (2 == M.pointCount) {
          var W = M.points[0], X = M.points[1], Y = m.m_invMass, J = m.m_invI, K = f.m_invMass, Z = f.m_invI, Q = W.rA.x * A - W.rA.y * T, ee = W.rB.x * A - W.rB.y * T, te = X.rA.x * A - X.rA.y * T, ne = X.rB.x * A - X.rB.y * T, ie = Y + K + J * Q * Q + Z * ee * ee, re = Y + K + J * te * te + Z * ne * ne, oe = Y + K + J * Q * te + Z * ee * ne;
          ie * ie < 100 * (ie * re - oe * oe) ? (M.K.col1.Set(ie, oe), M.K.col2.Set(oe, re), M.K.GetInverse(M.normalMass)) : M.pointCount = 1;
        }
      }
    }, p.prototype.InitVelocityConstraints = function (e) {
      for (var t = 0; t < this.m_constraintCount; ++t) {
        var n = this.m_constraints[t], i = n.bodyA, r = n.bodyB, o = i.m_invMass, s = i.m_invI, a = r.m_invMass, l = r.m_invI, c = n.normal.x, h = n.normal.y, u = h, d = -c, p = 0, m = 0;
        if (e.warmStarting) for (m = n.pointCount, p = 0; p < m; ++p) {
          var f = n.points[p];
          f.normalImpulse *= e.dtRatio, f.tangentImpulse *= e.dtRatio;
          var g = f.normalImpulse * c + f.tangentImpulse * u, v = f.normalImpulse * h + f.tangentImpulse * d;
          i.m_angularVelocity -= s * (f.rA.x * v - f.rA.y * g), i.m_linearVelocity.x -= o * g, i.m_linearVelocity.y -= o * v, r.m_angularVelocity += l * (f.rB.x * v - f.rB.y * g), r.m_linearVelocity.x += a * g, r.m_linearVelocity.y += a * v;
        } else for (m = n.pointCount, p = 0; p < m; ++p) {
          var y = n.points[p];
          y.normalImpulse = 0, y.tangentImpulse = 0;
        }
      }
    }, p.prototype.SolveVelocityConstraints = function () {
      for (var e, t, n = 0, i = 0, r = 0, o = 0, s = 0, a = 0, l = 0, c = 0, h = 0, u = 0, d = 0, p = 0, m = 0, f = 0, g = 0; g < this.m_constraintCount; ++g) {
        var v = this.m_constraints[g], y = v.bodyA, _ = v.bodyB, x = y.m_angularVelocity, b = _.m_angularVelocity, w = y.m_linearVelocity, S = _.m_linearVelocity, q = y.m_invMass, T = y.m_invI, A = _.m_invMass, M = _.m_invI, C = v.normal.x, k = v.normal.y, R = k, L = -C, P = v.friction;
        for (n = 0; n < v.pointCount; n++) e = v.points[n], r = (S.x - b * e.rB.y - w.x + x * e.rA.y) * R + (S.y + b * e.rB.x - w.y - x * e.rA.x) * L, o = e.tangentMass * -r, s = P * e.normalImpulse, l = (o = (a = E.Clamp(e.tangentImpulse + o, -s, s)) - e.tangentImpulse) * R, c = o * L, w.x -= q * l, w.y -= q * c, x -= T * (e.rA.x * c - e.rA.y * l), S.x += A * l, S.y += A * c, b += M * (e.rB.x * c - e.rB.y * l), e.tangentImpulse = a;
        parseInt(v.pointCount);
        if (1 == v.pointCount) e = v.points[0], i = (S.x + -b * e.rB.y - w.x - -x * e.rA.y) * C + (S.y + b * e.rB.x - w.y - x * e.rA.x) * k, o = -e.normalMass * (i - e.velocityBias), l = (o = (a = (a = e.normalImpulse + o) > 0 ? a : 0) - e.normalImpulse) * C, c = o * k, w.x -= q * l, w.y -= q * c, x -= T * (e.rA.x * c - e.rA.y * l), S.x += A * l, S.y += A * c, b += M * (e.rB.x * c - e.rB.y * l), e.normalImpulse = a; else {
          var D = v.points[0], O = v.points[1], I = D.normalImpulse, B = O.normalImpulse, F = (S.x - b * D.rB.y - w.x + x * D.rA.y) * C + (S.y + b * D.rB.x - w.y - x * D.rA.x) * k, z = (S.x - b * O.rB.y - w.x + x * O.rA.y) * C + (S.y + b * O.rB.x - w.y - x * O.rA.x) * k, N = F - D.velocityBias, U = z - O.velocityBias;
          N -= (t = v.K).col1.x * I + t.col2.x * B, U -= t.col1.y * I + t.col2.y * B;
          for (;;) {
            var V = -((t = v.normalMass).col1.x * N + t.col2.x * U), G = -(t.col1.y * N + t.col2.y * U);
            if (V >= 0 && G >= 0) {
              d = (h = V - I) * C, p = h * k, m = (u = G - B) * C, f = u * k, w.x -= q * (d + m), w.y -= q * (p + f), x -= T * (D.rA.x * p - D.rA.y * d + O.rA.x * f - O.rA.y * m), S.x += A * (d + m), S.y += A * (p + f), b += M * (D.rB.x * p - D.rB.y * d + O.rB.x * f - O.rB.y * m), D.normalImpulse = V, O.normalImpulse = G;
              break;
            }
            if (V = -D.normalMass * N, G = 0, F = 0, z = v.K.col1.y * V + U, V >= 0 && z >= 0) {
              d = (h = V - I) * C, p = h * k, m = (u = G - B) * C, f = u * k, w.x -= q * (d + m), w.y -= q * (p + f), x -= T * (D.rA.x * p - D.rA.y * d + O.rA.x * f - O.rA.y * m), S.x += A * (d + m), S.y += A * (p + f), b += M * (D.rB.x * p - D.rB.y * d + O.rB.x * f - O.rB.y * m), D.normalImpulse = V, O.normalImpulse = G;
              break;
            }
            if (V = 0, G = -O.normalMass * U, F = v.K.col2.x * G + N, z = 0, G >= 0 && F >= 0) {
              d = (h = V - I) * C, p = h * k, m = (u = G - B) * C, f = u * k, w.x -= q * (d + m), w.y -= q * (p + f), x -= T * (D.rA.x * p - D.rA.y * d + O.rA.x * f - O.rA.y * m), S.x += A * (d + m), S.y += A * (p + f), b += M * (D.rB.x * p - D.rB.y * d + O.rB.x * f - O.rB.y * m), D.normalImpulse = V, O.normalImpulse = G;
              break;
            }
            if (V = 0, G = 0, z = U, (F = N) >= 0 && z >= 0) {
              d = (h = V - I) * C, p = h * k, m = (u = G - B) * C, f = u * k, w.x -= q * (d + m), w.y -= q * (p + f), x -= T * (D.rA.x * p - D.rA.y * d + O.rA.x * f - O.rA.y * m), S.x += A * (d + m), S.y += A * (p + f), b += M * (D.rB.x * p - D.rB.y * d + O.rB.x * f - O.rB.y * m), D.normalImpulse = V, O.normalImpulse = G;
              break;
            }
            break;
          }
        }
        y.m_angularVelocity = x, _.m_angularVelocity = b;
      }
    }, p.prototype.FinalizeVelocityConstraints = function () {
      for (var e = 0; e < this.m_constraintCount; ++e) for (var t = this.m_constraints[e], n = t.manifold, i = 0; i < t.pointCount; ++i) {
        var r = n.m_points[i], o = t.points[i];
        r.m_normalImpulse = o.normalImpulse, r.m_tangentImpulse = o.tangentImpulse;
      }
    }, p.prototype.SolvePositionConstraints = function (e) {
      undefined === e && (e = 0);
      for (var t = 0, n = 0; n < this.m_constraintCount; n++) {
        var i = this.m_constraints[n], r = i.bodyA, o = i.bodyB, s = r.m_mass * r.m_invMass, a = r.m_mass * r.m_invI, l = o.m_mass * o.m_invMass, c = o.m_mass * o.m_invI;
        p.s_psm.Initialize(i);
        for (var h = p.s_psm.m_normal, u = 0; u < i.pointCount; u++) {
          var d = i.points[u], m = p.s_psm.m_points[u], f = p.s_psm.m_separations[u], g = m.x - r.m_sweep.c.x, v = m.y - r.m_sweep.c.y, y = m.x - o.m_sweep.c.x, _ = m.y - o.m_sweep.c.y;
          t = t < f ? t : f;
          var x = E.Clamp(e * (f + w.b2_linearSlop), -w.b2_maxLinearCorrection, 0), b = -d.equalizedMass * x, S = b * h.x, q = b * h.y;
          r.m_sweep.c.x -= s * S, r.m_sweep.c.y -= s * q, r.m_sweep.a -= a * (g * q - v * S), r.SynchronizeTransform(), o.m_sweep.c.x += l * S, o.m_sweep.c.y += l * q, o.m_sweep.a += c * (y * q - _ * S), o.SynchronizeTransform();
        }
      }
      return t > -1.5 * w.b2_linearSlop;
    }, i.postDefs.push(function () {
      i.Dynamics.Contacts.b2ContactSolver.s_worldManifold = new R, i.Dynamics.Contacts.b2ContactSolver.s_psm = new _;
    }), i.inherit(m, i.Dynamics.Contacts.b2Contact), m.prototype.__super = i.Dynamics.Contacts.b2Contact.prototype, m.b2EdgeAndCircleContact = function () {
      i.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
    }, m.Create = function (e) {
      return new m;
    }, m.Destroy = function (e, t) {}, m.prototype.Reset = function (e, t) {
      this.__super.Reset.call(this, e, t);
    }, m.prototype.Evaluate = function () {
      var n = this.m_fixtureA.GetBody(), i = this.m_fixtureB.GetBody();
      this.b2CollideEdgeAndCircle(this.m_manifold, this.m_fixtureA.GetShape() instanceof t ? this.m_fixtureA.GetShape() : null, n.m_xf, this.m_fixtureB.GetShape() instanceof e ? this.m_fixtureB.GetShape() : null, i.m_xf);
    }, m.prototype.b2CollideEdgeAndCircle = function (e, t, n, i, r) {}, i.inherit(f, i.Dynamics.Contacts.b2Contact), f.prototype.__super = i.Dynamics.Contacts.b2Contact.prototype, f.b2NullContact = function () {
      i.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
    }, f.prototype.b2NullContact = function () {
      this.__super.b2Contact.call(this);
    }, f.prototype.Evaluate = function () {}, i.inherit(g, i.Dynamics.Contacts.b2Contact), g.prototype.__super = i.Dynamics.Contacts.b2Contact.prototype, g.b2PolyAndCircleContact = function () {
      i.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
    }, g.Create = function (e) {
      return new g;
    }, g.Destroy = function (e, t) {}, g.prototype.Reset = function (e, t) {
      this.__super.Reset.call(this, e, t), w.b2Assert(e.GetType() == r.e_polygonShape), w.b2Assert(t.GetType() == r.e_circleShape);
    }, g.prototype.Evaluate = function () {
      var t = this.m_fixtureA.m_body, i = this.m_fixtureB.m_body;
      T.CollidePolygonAndCircle(this.m_manifold, this.m_fixtureA.GetShape() instanceof n ? this.m_fixtureA.GetShape() : null, t.m_xf, this.m_fixtureB.GetShape() instanceof e ? this.m_fixtureB.GetShape() : null, i.m_xf);
    }, i.inherit(v, i.Dynamics.Contacts.b2Contact), v.prototype.__super = i.Dynamics.Contacts.b2Contact.prototype, v.b2PolyAndEdgeContact = function () {
      i.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
    }, v.Create = function (e) {
      return new v;
    }, v.Destroy = function (e, t) {}, v.prototype.Reset = function (e, t) {
      this.__super.Reset.call(this, e, t), w.b2Assert(e.GetType() == r.e_polygonShape), w.b2Assert(t.GetType() == r.e_edgeShape);
    }, v.prototype.Evaluate = function () {
      var e = this.m_fixtureA.GetBody(), i = this.m_fixtureB.GetBody();
      this.b2CollidePolyAndEdge(this.m_manifold, this.m_fixtureA.GetShape() instanceof n ? this.m_fixtureA.GetShape() : null, e.m_xf, this.m_fixtureB.GetShape() instanceof t ? this.m_fixtureB.GetShape() : null, i.m_xf);
    }, v.prototype.b2CollidePolyAndEdge = function (e, t, n, i, r) {}, i.inherit(y, i.Dynamics.Contacts.b2Contact), y.prototype.__super = i.Dynamics.Contacts.b2Contact.prototype, y.b2PolygonContact = function () {
      i.Dynamics.Contacts.b2Contact.b2Contact.apply(this, arguments);
    }, y.Create = function (e) {
      return new y;
    }, y.Destroy = function (e, t) {}, y.prototype.Reset = function (e, t) {
      this.__super.Reset.call(this, e, t);
    }, y.prototype.Evaluate = function () {
      var e = this.m_fixtureA.GetBody(), t = this.m_fixtureB.GetBody();
      T.CollidePolygons(this.m_manifold, this.m_fixtureA.GetShape() instanceof n ? this.m_fixtureA.GetShape() : null, e.m_xf, this.m_fixtureB.GetShape() instanceof n ? this.m_fixtureB.GetShape() : null, t.m_xf);
    }, _.b2PositionSolverManifold = function () {}, _.prototype.b2PositionSolverManifold = function () {
      this.m_normal = new q, this.m_separations = new j(w.b2_maxManifoldPoints), this.m_points = new H(w.b2_maxManifoldPoints);
      for (var e = 0; e < w.b2_maxManifoldPoints; e++) this.m_points[e] = new q;
    }, _.prototype.Initialize = function (e) {
      w.b2Assert(e.pointCount > 0);
      var t, n, i = 0, r = 0, o = 0, s = 0, a = 0;
      switch (e.type) {
        case M.e_circles:
          t = e.bodyA.m_xf.R, n = e.localPoint;
          var l = e.bodyA.m_xf.position.x + (t.col1.x * n.x + t.col2.x * n.y), c = e.bodyA.m_xf.position.y + (t.col1.y * n.x + t.col2.y * n.y);
          t = e.bodyB.m_xf.R, n = e.points[0].localPoint;
          var h = e.bodyB.m_xf.position.x + (t.col1.x * n.x + t.col2.x * n.y), u = e.bodyB.m_xf.position.y + (t.col1.y * n.x + t.col2.y * n.y), d = h - l, p = u - c, m = d * d + p * p;
          if (m > Number.MIN_VALUE * Number.MIN_VALUE) {
            var f = Math.sqrt(m);
            this.m_normal.x = d / f, this.m_normal.y = p / f;
          } else this.m_normal.x = 1, this.m_normal.y = 0;
          this.m_points[0].x = 0.5 * (l + h), this.m_points[0].y = 0.5 * (c + u), this.m_separations[0] = d * this.m_normal.x + p * this.m_normal.y - e.radius;
          break;
        case M.e_faceA:
          for (t = e.bodyA.m_xf.R, n = e.localPlaneNormal, this.m_normal.x = t.col1.x * n.x + t.col2.x * n.y, this.m_normal.y = t.col1.y * n.x + t.col2.y * n.y, t = e.bodyA.m_xf.R, n = e.localPoint, s = e.bodyA.m_xf.position.x + (t.col1.x * n.x + t.col2.x * n.y), a = e.bodyA.m_xf.position.y + (t.col1.y * n.x + t.col2.y * n.y), t = e.bodyB.m_xf.R, i = 0; i < e.pointCount; ++i) n = e.points[i].localPoint, r = e.bodyB.m_xf.position.x + (t.col1.x * n.x + t.col2.x * n.y), o = e.bodyB.m_xf.position.y + (t.col1.y * n.x + t.col2.y * n.y), this.m_separations[i] = (r - s) * this.m_normal.x + (o - a) * this.m_normal.y - e.radius, this.m_points[i].x = r, this.m_points[i].y = o;
          break;
        case M.e_faceB:
          for (t = e.bodyB.m_xf.R, n = e.localPlaneNormal, this.m_normal.x = t.col1.x * n.x + t.col2.x * n.y, this.m_normal.y = t.col1.y * n.x + t.col2.y * n.y, t = e.bodyB.m_xf.R, n = e.localPoint, s = e.bodyB.m_xf.position.x + (t.col1.x * n.x + t.col2.x * n.y), a = e.bodyB.m_xf.position.y + (t.col1.y * n.x + t.col2.y * n.y), t = e.bodyA.m_xf.R, i = 0; i < e.pointCount; ++i) n = e.points[i].localPoint, r = e.bodyA.m_xf.position.x + (t.col1.x * n.x + t.col2.x * n.y), o = e.bodyA.m_xf.position.y + (t.col1.y * n.x + t.col2.y * n.y), this.m_separations[i] = (r - s) * this.m_normal.x + (o - a) * this.m_normal.y - e.radius, this.m_points[i].Set(r, o);
          this.m_normal.x *= -1, this.m_normal.y *= -1;
      }
    }, i.postDefs.push(function () {
      i.Dynamics.Contacts.b2PositionSolverManifold.circlePointA = new q, i.Dynamics.Contacts.b2PositionSolverManifold.circlePointB = new q;
    });
  }(), function () {
    i.Dynamics.b2Body, i.Dynamics.b2BodyDef, i.Dynamics.b2ContactFilter, i.Dynamics.b2ContactImpulse, i.Dynamics.b2ContactListener, i.Dynamics.b2ContactManager, i.Dynamics.b2DebugDraw, i.Dynamics.b2DestructionListener, i.Dynamics.b2FilterData, i.Dynamics.b2Fixture, i.Dynamics.b2FixtureDef, i.Dynamics.b2Island, i.Dynamics.b2TimeStep, i.Dynamics.b2World;
    var e = i.Common.Math.b2Mat22, t = (i.Common.Math.b2Mat33, i.Common.Math.b2Math), n = (i.Common.Math.b2Sweep, i.Common.Math.b2Transform, i.Common.Math.b2Vec2), r = (i.Common.Math.b2Vec3, i.Common.b2Color), o = (i.Common.b2internal, i.Common.b2Settings, i.Collision.Shapes.b2CircleShape, i.Collision.Shapes.b2EdgeChainDef, i.Collision.Shapes.b2EdgeShape, i.Collision.Shapes.b2MassData, i.Collision.Shapes.b2PolygonShape, i.Collision.Shapes.b2Shape, i.Dynamics.Controllers.b2BuoyancyController), s = i.Dynamics.Controllers.b2ConstantAccelController, a = i.Dynamics.Controllers.b2ConstantForceController, l = i.Dynamics.Controllers.b2Controller, c = i.Dynamics.Controllers.b2ControllerEdge, h = i.Dynamics.Controllers.b2GravityController, u = i.Dynamics.Controllers.b2TensorDampingController;
    i.inherit(o, i.Dynamics.Controllers.b2Controller), o.prototype.__super = i.Dynamics.Controllers.b2Controller.prototype, o.b2BuoyancyController = function () {
      i.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments), this.normal = new n(0, -1), this.offset = 0, this.density = 0, this.velocity = new n(0, 0), this.linearDrag = 2, this.angularDrag = 1, this.useDensity = false, this.useWorldGravity = true, this.gravity = null;
    }, o.prototype.Step = function (e) {
      if (this.m_bodyList) {
        this.useWorldGravity && (this.gravity = this.GetWorld().GetGravity().Copy());
        for (var t = this.m_bodyList; t; t = t.nextBody) {
          var i = t.body;
          if (0 != i.IsAwake()) {
            for (var r = new n, o = new n, s = 0, a = 0, l = i.GetFixtureList(); l; l = l.GetNext()) {
              var c = new n, h = l.GetShape().ComputeSubmergedArea(this.normal, this.offset, i.GetTransform(), c);
              s += h, r.x += h * c.x, r.y += h * c.y;
              var u = 0;
              a += h * (u = (this.useDensity, 1)), o.x += h * c.x * u, o.y += h * c.y * u;
            }
            if (r.x /= s, r.y /= s, o.x /= a, o.y /= a, !(s < Number.MIN_VALUE)) {
              var d = this.gravity.GetNegative();
              d.Multiply(this.density * s), i.ApplyForce(d, o);
              var p = i.GetLinearVelocityFromWorldPoint(r);
              p.Subtract(this.velocity), p.Multiply(-this.linearDrag * s), i.ApplyForce(p, r), i.ApplyTorque(-i.GetInertia() / i.GetMass() * s * i.GetAngularVelocity() * this.angularDrag);
            }
          }
        }
      }
    }, o.prototype.Draw = function (e) {
      var t = 1e3, i = new n, o = new n;
      i.x = this.normal.x * this.offset + this.normal.y * t, i.y = this.normal.y * this.offset - this.normal.x * t, o.x = this.normal.x * this.offset - this.normal.y * t, o.y = this.normal.y * this.offset + this.normal.x * t;
      var s = new r(0, 0, 1);
      e.DrawSegment(i, o, s);
    }, i.inherit(s, i.Dynamics.Controllers.b2Controller), s.prototype.__super = i.Dynamics.Controllers.b2Controller.prototype, s.b2ConstantAccelController = function () {
      i.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments), this.A = new n(0, 0);
    }, s.prototype.Step = function (e) {
      for (var t = new n(this.A.x * e.dt, this.A.y * e.dt), i = this.m_bodyList; i; i = i.nextBody) {
        var r = i.body;
        r.IsAwake() && r.SetLinearVelocity(new n(r.GetLinearVelocity().x + t.x, r.GetLinearVelocity().y + t.y));
      }
    }, i.inherit(a, i.Dynamics.Controllers.b2Controller), a.prototype.__super = i.Dynamics.Controllers.b2Controller.prototype, a.b2ConstantForceController = function () {
      i.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments), this.F = new n(0, 0);
    }, a.prototype.Step = function (e) {
      for (var t = this.m_bodyList; t; t = t.nextBody) {
        var n = t.body;
        n.IsAwake() && n.ApplyForce(this.F, n.GetWorldCenter());
      }
    }, l.b2Controller = function () {}, l.prototype.Step = function (e) {}, l.prototype.Draw = function (e) {}, l.prototype.AddBody = function (e) {
      var t = new c;
      t.controller = this, t.body = e, t.nextBody = this.m_bodyList, t.prevBody = null, this.m_bodyList = t, t.nextBody && (t.nextBody.prevBody = t), this.m_bodyCount++, t.nextController = e.m_controllerList, t.prevController = null, e.m_controllerList = t, t.nextController && (t.nextController.prevController = t), e.m_controllerCount++;
    }, l.prototype.RemoveBody = function (e) {
      for (var t = e.m_controllerList; t && t.controller != this;) t = t.nextController;
      t.prevBody && (t.prevBody.nextBody = t.nextBody), t.nextBody && (t.nextBody.prevBody = t.prevBody), t.nextController && (t.nextController.prevController = t.prevController), t.prevController && (t.prevController.nextController = t.nextController), this.m_bodyList == t && (this.m_bodyList = t.nextBody), e.m_controllerList == t && (e.m_controllerList = t.nextController), e.m_controllerCount--, this.m_bodyCount--;
    }, l.prototype.Clear = function () {
      for (; this.m_bodyList;) this.RemoveBody(this.m_bodyList.body);
    }, l.prototype.GetNext = function () {
      return this.m_next;
    }, l.prototype.GetWorld = function () {
      return this.m_world;
    }, l.prototype.GetBodyList = function () {
      return this.m_bodyList;
    }, c.b2ControllerEdge = function () {}, i.inherit(h, i.Dynamics.Controllers.b2Controller), h.prototype.__super = i.Dynamics.Controllers.b2Controller.prototype, h.b2GravityController = function () {
      i.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments), this.G = 1, this.invSqr = true;
    }, h.prototype.Step = function (e) {
      var t = null, i = null, r = null, o = 0, s = null, a = null, l = null, c = 0, h = 0, u = 0, d = null;
      if (this.invSqr) for (t = this.m_bodyList; t; t = t.nextBody) for (r = (i = t.body).GetWorldCenter(), o = i.GetMass(), s = this.m_bodyList; s != t; s = s.nextBody) (u = (c = (l = (a = s.body).GetWorldCenter()).x - r.x) * c + (h = l.y - r.y) * h) < Number.MIN_VALUE || ((d = new n(c, h)).Multiply(this.G / u / Math.sqrt(u) * o * a.GetMass()), i.IsAwake() && i.ApplyForce(d, r), d.Multiply(-1), a.IsAwake() && a.ApplyForce(d, l)); else for (t = this.m_bodyList; t; t = t.nextBody) for (r = (i = t.body).GetWorldCenter(), o = i.GetMass(), s = this.m_bodyList; s != t; s = s.nextBody) (u = (c = (l = (a = s.body).GetWorldCenter()).x - r.x) * c + (h = l.y - r.y) * h) < Number.MIN_VALUE || ((d = new n(c, h)).Multiply(this.G / u * o * a.GetMass()), i.IsAwake() && i.ApplyForce(d, r), d.Multiply(-1), a.IsAwake() && a.ApplyForce(d, l));
    }, i.inherit(u, i.Dynamics.Controllers.b2Controller), u.prototype.__super = i.Dynamics.Controllers.b2Controller.prototype, u.b2TensorDampingController = function () {
      i.Dynamics.Controllers.b2Controller.b2Controller.apply(this, arguments), this.T = new e, this.maxTimestep = 0;
    }, u.prototype.SetAxisAligned = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0), this.T.col1.x = -e, this.T.col1.y = 0, this.T.col2.x = 0, this.T.col2.y = -t, this.maxTimestep = e > 0 || t > 0 ? 1 / Math.max(e, t) : 0;
    }, u.prototype.Step = function (e) {
      var i = e.dt;
      if (!(i <= Number.MIN_VALUE)) {
        i > this.maxTimestep && this.maxTimestep > 0 && (i = this.maxTimestep);
        for (var r = this.m_bodyList; r; r = r.nextBody) {
          var o = r.body;
          if (o.IsAwake()) {
            var s = o.GetWorldVector(t.MulMV(this.T, o.GetLocalVector(o.GetLinearVelocity())));
            o.SetLinearVelocity(new n(o.GetLinearVelocity().x + s.x * i, o.GetLinearVelocity().y + s.y * i));
          }
        }
      }
    };
  }(), function () {
    i.Common.b2Color, i.Common.b2internal;
    var e = i.Common.b2Settings, t = i.Common.Math.b2Mat22, n = i.Common.Math.b2Mat33, r = i.Common.Math.b2Math, o = (i.Common.Math.b2Sweep, i.Common.Math.b2Transform, i.Common.Math.b2Vec2), s = i.Common.Math.b2Vec3, a = i.Dynamics.Joints.b2DistanceJoint, l = i.Dynamics.Joints.b2DistanceJointDef, c = i.Dynamics.Joints.b2FrictionJoint, h = i.Dynamics.Joints.b2FrictionJointDef, u = i.Dynamics.Joints.b2GearJoint, d = i.Dynamics.Joints.b2GearJointDef, p = i.Dynamics.Joints.b2Jacobian, m = i.Dynamics.Joints.b2Joint, f = i.Dynamics.Joints.b2JointDef, g = i.Dynamics.Joints.b2JointEdge, v = i.Dynamics.Joints.b2LineJoint, y = i.Dynamics.Joints.b2LineJointDef, _ = i.Dynamics.Joints.b2MouseJoint, x = i.Dynamics.Joints.b2MouseJointDef, b = i.Dynamics.Joints.b2PrismaticJoint, w = i.Dynamics.Joints.b2PrismaticJointDef, S = i.Dynamics.Joints.b2PulleyJoint, E = i.Dynamics.Joints.b2PulleyJointDef, q = i.Dynamics.Joints.b2RevoluteJoint, T = i.Dynamics.Joints.b2RevoluteJointDef, A = i.Dynamics.Joints.b2WeldJoint, M = i.Dynamics.Joints.b2WeldJointDef;
    i.Dynamics.b2Body, i.Dynamics.b2BodyDef, i.Dynamics.b2ContactFilter, i.Dynamics.b2ContactImpulse, i.Dynamics.b2ContactListener, i.Dynamics.b2ContactManager, i.Dynamics.b2DebugDraw, i.Dynamics.b2DestructionListener, i.Dynamics.b2FilterData, i.Dynamics.b2Fixture, i.Dynamics.b2FixtureDef, i.Dynamics.b2Island, i.Dynamics.b2TimeStep, i.Dynamics.b2World;
    i.inherit(a, i.Dynamics.Joints.b2Joint), a.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, a.b2DistanceJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.m_localAnchor1 = new o, this.m_localAnchor2 = new o, this.m_u = new o;
    }, a.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
    }, a.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
    }, a.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * this.m_impulse * this.m_u.x, e * this.m_impulse * this.m_u.y);
    }, a.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), 0;
    }, a.prototype.GetLength = function () {
      return this.m_length;
    }, a.prototype.SetLength = function (e) {
      undefined === e && (e = 0), this.m_length = e;
    }, a.prototype.GetFrequency = function () {
      return this.m_frequencyHz;
    }, a.prototype.SetFrequency = function (e) {
      undefined === e && (e = 0), this.m_frequencyHz = e;
    }, a.prototype.GetDampingRatio = function () {
      return this.m_dampingRatio;
    }, a.prototype.SetDampingRatio = function (e) {
      undefined === e && (e = 0), this.m_dampingRatio = e;
    }, a.prototype.b2DistanceJoint = function (e) {
      this.__super.b2Joint.call(this, e);
      this.m_localAnchor1.SetV(e.localAnchorA), this.m_localAnchor2.SetV(e.localAnchorB), this.m_length = e.length, this.m_frequencyHz = e.frequencyHz, this.m_dampingRatio = e.dampingRatio, this.m_impulse = 0, this.m_gamma = 0, this.m_bias = 0;
    }, a.prototype.InitVelocityConstraints = function (t) {
      var n, i = 0, r = this.m_bodyA, o = this.m_bodyB;
      n = r.m_xf.R;
      var s = this.m_localAnchor1.x - r.m_sweep.localCenter.x, a = this.m_localAnchor1.y - r.m_sweep.localCenter.y;
      i = n.col1.x * s + n.col2.x * a, a = n.col1.y * s + n.col2.y * a, s = i, n = o.m_xf.R;
      var l = this.m_localAnchor2.x - o.m_sweep.localCenter.x, c = this.m_localAnchor2.y - o.m_sweep.localCenter.y;
      i = n.col1.x * l + n.col2.x * c, c = n.col1.y * l + n.col2.y * c, l = i, this.m_u.x = o.m_sweep.c.x + l - r.m_sweep.c.x - s, this.m_u.y = o.m_sweep.c.y + c - r.m_sweep.c.y - a;
      var h = Math.sqrt(this.m_u.x * this.m_u.x + this.m_u.y * this.m_u.y);
      h > e.b2_linearSlop ? this.m_u.Multiply(1 / h) : this.m_u.SetZero();
      var u = s * this.m_u.y - a * this.m_u.x, d = l * this.m_u.y - c * this.m_u.x, p = r.m_invMass + r.m_invI * u * u + o.m_invMass + o.m_invI * d * d;
      if (this.m_mass = 0 != p ? 1 / p : 0, this.m_frequencyHz > 0) {
        var m = h - this.m_length, f = 2 * Math.PI * this.m_frequencyHz, g = 2 * this.m_mass * this.m_dampingRatio * f, v = this.m_mass * f * f;
        this.m_gamma = t.dt * (g + t.dt * v), this.m_gamma = 0 != this.m_gamma ? 1 / this.m_gamma : 0, this.m_bias = m * t.dt * v * this.m_gamma, this.m_mass = p + this.m_gamma, this.m_mass = 0 != this.m_mass ? 1 / this.m_mass : 0;
      }
      if (t.warmStarting) {
        this.m_impulse *= t.dtRatio;
        var y = this.m_impulse * this.m_u.x, _ = this.m_impulse * this.m_u.y;
        r.m_linearVelocity.x -= r.m_invMass * y, r.m_linearVelocity.y -= r.m_invMass * _, r.m_angularVelocity -= r.m_invI * (s * _ - a * y), o.m_linearVelocity.x += o.m_invMass * y, o.m_linearVelocity.y += o.m_invMass * _, o.m_angularVelocity += o.m_invI * (l * _ - c * y);
      } else this.m_impulse = 0;
    }, a.prototype.SolveVelocityConstraints = function (e) {
      var t, n = this.m_bodyA, i = this.m_bodyB;
      t = n.m_xf.R;
      var r = this.m_localAnchor1.x - n.m_sweep.localCenter.x, o = this.m_localAnchor1.y - n.m_sweep.localCenter.y, s = t.col1.x * r + t.col2.x * o;
      o = t.col1.y * r + t.col2.y * o, r = s, t = i.m_xf.R;
      var a = this.m_localAnchor2.x - i.m_sweep.localCenter.x, l = this.m_localAnchor2.y - i.m_sweep.localCenter.y;
      s = t.col1.x * a + t.col2.x * l, l = t.col1.y * a + t.col2.y * l, a = s;
      var c = n.m_linearVelocity.x + -n.m_angularVelocity * o, h = n.m_linearVelocity.y + n.m_angularVelocity * r, u = i.m_linearVelocity.x + -i.m_angularVelocity * l, d = i.m_linearVelocity.y + i.m_angularVelocity * a, p = this.m_u.x * (u - c) + this.m_u.y * (d - h), m = -this.m_mass * (p + this.m_bias + this.m_gamma * this.m_impulse);
      this.m_impulse += m;
      var f = m * this.m_u.x, g = m * this.m_u.y;
      n.m_linearVelocity.x -= n.m_invMass * f, n.m_linearVelocity.y -= n.m_invMass * g, n.m_angularVelocity -= n.m_invI * (r * g - o * f), i.m_linearVelocity.x += i.m_invMass * f, i.m_linearVelocity.y += i.m_invMass * g, i.m_angularVelocity += i.m_invI * (a * g - l * f);
    }, a.prototype.SolvePositionConstraints = function (t) {
      var n;
      if (undefined === t && (t = 0), this.m_frequencyHz > 0) return true;
      var i = this.m_bodyA, o = this.m_bodyB;
      n = i.m_xf.R;
      var s = this.m_localAnchor1.x - i.m_sweep.localCenter.x, a = this.m_localAnchor1.y - i.m_sweep.localCenter.y, l = n.col1.x * s + n.col2.x * a;
      a = n.col1.y * s + n.col2.y * a, s = l, n = o.m_xf.R;
      var c = this.m_localAnchor2.x - o.m_sweep.localCenter.x, h = this.m_localAnchor2.y - o.m_sweep.localCenter.y;
      l = n.col1.x * c + n.col2.x * h, h = n.col1.y * c + n.col2.y * h, c = l;
      var u = o.m_sweep.c.x + c - i.m_sweep.c.x - s, d = o.m_sweep.c.y + h - i.m_sweep.c.y - a, p = Math.sqrt(u * u + d * d);
      u /= p, d /= p;
      var m = p - this.m_length;
      m = r.Clamp(m, -e.b2_maxLinearCorrection, e.b2_maxLinearCorrection);
      var f = -this.m_mass * m;
      this.m_u.Set(u, d);
      var g = f * this.m_u.x, v = f * this.m_u.y;
      return i.m_sweep.c.x -= i.m_invMass * g, i.m_sweep.c.y -= i.m_invMass * v, i.m_sweep.a -= i.m_invI * (s * v - a * g), o.m_sweep.c.x += o.m_invMass * g, o.m_sweep.c.y += o.m_invMass * v, o.m_sweep.a += o.m_invI * (c * v - h * g), i.SynchronizeTransform(), o.SynchronizeTransform(), r.Abs(m) < e.b2_linearSlop;
    }, i.inherit(l, i.Dynamics.Joints.b2JointDef), l.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, l.b2DistanceJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.localAnchorA = new o, this.localAnchorB = new o;
    }, l.prototype.b2DistanceJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_distanceJoint, this.length = 1, this.frequencyHz = 0, this.dampingRatio = 0;
    }, l.prototype.Initialize = function (e, t, n, i) {
      this.bodyA = e, this.bodyB = t, this.localAnchorA.SetV(this.bodyA.GetLocalPoint(n)), this.localAnchorB.SetV(this.bodyB.GetLocalPoint(i));
      var r = i.x - n.x, o = i.y - n.y;
      this.length = Math.sqrt(r * r + o * o), this.frequencyHz = 0, this.dampingRatio = 0;
    }, i.inherit(c, i.Dynamics.Joints.b2Joint), c.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, c.b2FrictionJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.m_localAnchorA = new o, this.m_localAnchorB = new o, this.m_linearMass = new t, this.m_linearImpulse = new o;
    }, c.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);
    }, c.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);
    }, c.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * this.m_linearImpulse.x, e * this.m_linearImpulse.y);
    }, c.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), e * this.m_angularImpulse;
    }, c.prototype.SetMaxForce = function (e) {
      undefined === e && (e = 0), this.m_maxForce = e;
    }, c.prototype.GetMaxForce = function () {
      return this.m_maxForce;
    }, c.prototype.SetMaxTorque = function (e) {
      undefined === e && (e = 0), this.m_maxTorque = e;
    }, c.prototype.GetMaxTorque = function () {
      return this.m_maxTorque;
    }, c.prototype.b2FrictionJoint = function (e) {
      this.__super.b2Joint.call(this, e), this.m_localAnchorA.SetV(e.localAnchorA), this.m_localAnchorB.SetV(e.localAnchorB), this.m_linearMass.SetZero(), this.m_angularMass = 0, this.m_linearImpulse.SetZero(), this.m_angularImpulse = 0, this.m_maxForce = e.maxForce, this.m_maxTorque = e.maxTorque;
    }, c.prototype.InitVelocityConstraints = function (e) {
      var n, i = 0, r = this.m_bodyA, o = this.m_bodyB;
      n = r.m_xf.R;
      var s = this.m_localAnchorA.x - r.m_sweep.localCenter.x, a = this.m_localAnchorA.y - r.m_sweep.localCenter.y;
      i = n.col1.x * s + n.col2.x * a, a = n.col1.y * s + n.col2.y * a, s = i, n = o.m_xf.R;
      var l = this.m_localAnchorB.x - o.m_sweep.localCenter.x, c = this.m_localAnchorB.y - o.m_sweep.localCenter.y;
      i = n.col1.x * l + n.col2.x * c, c = n.col1.y * l + n.col2.y * c, l = i;
      var h = r.m_invMass, u = o.m_invMass, d = r.m_invI, p = o.m_invI, m = new t;
      if (m.col1.x = h + u, m.col2.x = 0, m.col1.y = 0, m.col2.y = h + u, m.col1.x += d * a * a, m.col2.x += -d * s * a, m.col1.y += -d * s * a, m.col2.y += d * s * s, m.col1.x += p * c * c, m.col2.x += -p * l * c, m.col1.y += -p * l * c, m.col2.y += p * l * l, m.GetInverse(this.m_linearMass), this.m_angularMass = d + p, this.m_angularMass > 0 && (this.m_angularMass = 1 / this.m_angularMass), e.warmStarting) {
        this.m_linearImpulse.x *= e.dtRatio, this.m_linearImpulse.y *= e.dtRatio, this.m_angularImpulse *= e.dtRatio;
        var f = this.m_linearImpulse;
        r.m_linearVelocity.x -= h * f.x, r.m_linearVelocity.y -= h * f.y, r.m_angularVelocity -= d * (s * f.y - a * f.x + this.m_angularImpulse), o.m_linearVelocity.x += u * f.x, o.m_linearVelocity.y += u * f.y, o.m_angularVelocity += p * (l * f.y - c * f.x + this.m_angularImpulse);
      } else this.m_linearImpulse.SetZero(), this.m_angularImpulse = 0;
    }, c.prototype.SolveVelocityConstraints = function (e) {
      var t, n = 0, i = this.m_bodyA, s = this.m_bodyB, a = i.m_linearVelocity, l = i.m_angularVelocity, c = s.m_linearVelocity, h = s.m_angularVelocity, u = i.m_invMass, d = s.m_invMass, p = i.m_invI, m = s.m_invI;
      t = i.m_xf.R;
      var f = this.m_localAnchorA.x - i.m_sweep.localCenter.x, g = this.m_localAnchorA.y - i.m_sweep.localCenter.y;
      n = t.col1.x * f + t.col2.x * g, g = t.col1.y * f + t.col2.y * g, f = n, t = s.m_xf.R;
      var v = this.m_localAnchorB.x - s.m_sweep.localCenter.x, y = this.m_localAnchorB.y - s.m_sweep.localCenter.y;
      n = t.col1.x * v + t.col2.x * y, y = t.col1.y * v + t.col2.y * y, v = n;
      var _ = 0, x = h - l, b = -this.m_angularMass * x, w = this.m_angularImpulse;
      _ = e.dt * this.m_maxTorque, this.m_angularImpulse = r.Clamp(this.m_angularImpulse + b, -_, _), l -= p * (b = this.m_angularImpulse - w), h += m * b;
      var S = c.x - h * y - a.x + l * g, E = c.y + h * v - a.y - l * f, q = r.MulMV(this.m_linearMass, new o(-S, -E)), T = this.m_linearImpulse.Copy();
      this.m_linearImpulse.Add(q), _ = e.dt * this.m_maxForce, this.m_linearImpulse.LengthSquared() > _ * _ && (this.m_linearImpulse.Normalize(), this.m_linearImpulse.Multiply(_)), q = r.SubtractVV(this.m_linearImpulse, T), a.x -= u * q.x, a.y -= u * q.y, l -= p * (f * q.y - g * q.x), c.x += d * q.x, c.y += d * q.y, h += m * (v * q.y - y * q.x), i.m_angularVelocity = l, s.m_angularVelocity = h;
    }, c.prototype.SolvePositionConstraints = function (e) {
      return undefined === e && (e = 0), true;
    }, i.inherit(h, i.Dynamics.Joints.b2JointDef), h.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, h.b2FrictionJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.localAnchorA = new o, this.localAnchorB = new o;
    }, h.prototype.b2FrictionJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_frictionJoint, this.maxForce = 0, this.maxTorque = 0;
    }, h.prototype.Initialize = function (e, t, n) {
      this.bodyA = e, this.bodyB = t, this.localAnchorA.SetV(this.bodyA.GetLocalPoint(n)), this.localAnchorB.SetV(this.bodyB.GetLocalPoint(n));
    }, i.inherit(u, i.Dynamics.Joints.b2Joint), u.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, u.b2GearJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.m_groundAnchor1 = new o, this.m_groundAnchor2 = new o, this.m_localAnchor1 = new o, this.m_localAnchor2 = new o, this.m_J = new p;
    }, u.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
    }, u.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
    }, u.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * this.m_impulse * this.m_J.linearB.x, e * this.m_impulse * this.m_J.linearB.y);
    }, u.prototype.GetReactionTorque = function (e) {
      undefined === e && (e = 0);
      var t = this.m_bodyB.m_xf.R, n = this.m_localAnchor1.x - this.m_bodyB.m_sweep.localCenter.x, i = this.m_localAnchor1.y - this.m_bodyB.m_sweep.localCenter.y, r = t.col1.x * n + t.col2.x * i;
      i = t.col1.y * n + t.col2.y * i, n = r;
      var o = this.m_impulse * this.m_J.linearB.x, s = this.m_impulse * this.m_J.linearB.y;
      return e * (this.m_impulse * this.m_J.angularB - n * s + i * o);
    }, u.prototype.GetRatio = function () {
      return this.m_ratio;
    }, u.prototype.SetRatio = function (e) {
      undefined === e && (e = 0), this.m_ratio = e;
    }, u.prototype.b2GearJoint = function (e) {
      this.__super.b2Joint.call(this, e);
      var t = parseInt(e.joint1.m_type), n = parseInt(e.joint2.m_type);
      this.m_revolute1 = null, this.m_prismatic1 = null, this.m_revolute2 = null, this.m_prismatic2 = null;
      var i = 0, r = 0;
      this.m_ground1 = e.joint1.GetBodyA(), this.m_bodyA = e.joint1.GetBodyB(), t == m.e_revoluteJoint ? (this.m_revolute1 = e.joint1 instanceof q ? e.joint1 : null, this.m_groundAnchor1.SetV(this.m_revolute1.m_localAnchor1), this.m_localAnchor1.SetV(this.m_revolute1.m_localAnchor2), i = this.m_revolute1.GetJointAngle()) : (this.m_prismatic1 = e.joint1 instanceof b ? e.joint1 : null, this.m_groundAnchor1.SetV(this.m_prismatic1.m_localAnchor1), this.m_localAnchor1.SetV(this.m_prismatic1.m_localAnchor2), i = this.m_prismatic1.GetJointTranslation()), this.m_ground2 = e.joint2.GetBodyA(), this.m_bodyB = e.joint2.GetBodyB(), n == m.e_revoluteJoint ? (this.m_revolute2 = e.joint2 instanceof q ? e.joint2 : null, this.m_groundAnchor2.SetV(this.m_revolute2.m_localAnchor1), this.m_localAnchor2.SetV(this.m_revolute2.m_localAnchor2), r = this.m_revolute2.GetJointAngle()) : (this.m_prismatic2 = e.joint2 instanceof b ? e.joint2 : null, this.m_groundAnchor2.SetV(this.m_prismatic2.m_localAnchor1), this.m_localAnchor2.SetV(this.m_prismatic2.m_localAnchor2), r = this.m_prismatic2.GetJointTranslation()), this.m_ratio = e.ratio, this.m_constant = i + this.m_ratio * r, this.m_impulse = 0;
    }, u.prototype.InitVelocityConstraints = function (e) {
      var t, n, i = this.m_ground1, r = this.m_ground2, o = this.m_bodyA, s = this.m_bodyB, a = 0, l = 0, c = 0, h = 0, u = 0, d = 0, p = 0;
      this.m_J.SetZero(), this.m_revolute1 ? (this.m_J.angularA = -1, p += o.m_invI) : (t = i.m_xf.R, n = this.m_prismatic1.m_localXAxis1, a = t.col1.x * n.x + t.col2.x * n.y, l = t.col1.y * n.x + t.col2.y * n.y, t = o.m_xf.R, c = this.m_localAnchor1.x - o.m_sweep.localCenter.x, h = this.m_localAnchor1.y - o.m_sweep.localCenter.y, d = t.col1.x * c + t.col2.x * h, h = t.col1.y * c + t.col2.y * h, u = (c = d) * l - h * a, this.m_J.linearA.Set(-a, -l), this.m_J.angularA = -u, p += o.m_invMass + o.m_invI * u * u), this.m_revolute2 ? (this.m_J.angularB = -this.m_ratio, p += this.m_ratio * this.m_ratio * s.m_invI) : (t = r.m_xf.R, n = this.m_prismatic2.m_localXAxis1, a = t.col1.x * n.x + t.col2.x * n.y, l = t.col1.y * n.x + t.col2.y * n.y, t = s.m_xf.R, c = this.m_localAnchor2.x - s.m_sweep.localCenter.x, h = this.m_localAnchor2.y - s.m_sweep.localCenter.y, d = t.col1.x * c + t.col2.x * h, h = t.col1.y * c + t.col2.y * h, u = (c = d) * l - h * a, this.m_J.linearB.Set(-this.m_ratio * a, -this.m_ratio * l), this.m_J.angularB = -this.m_ratio * u, p += this.m_ratio * this.m_ratio * (s.m_invMass + s.m_invI * u * u)), this.m_mass = p > 0 ? 1 / p : 0, e.warmStarting ? (o.m_linearVelocity.x += o.m_invMass * this.m_impulse * this.m_J.linearA.x, o.m_linearVelocity.y += o.m_invMass * this.m_impulse * this.m_J.linearA.y, o.m_angularVelocity += o.m_invI * this.m_impulse * this.m_J.angularA, s.m_linearVelocity.x += s.m_invMass * this.m_impulse * this.m_J.linearB.x, s.m_linearVelocity.y += s.m_invMass * this.m_impulse * this.m_J.linearB.y, s.m_angularVelocity += s.m_invI * this.m_impulse * this.m_J.angularB) : this.m_impulse = 0;
    }, u.prototype.SolveVelocityConstraints = function (e) {
      var t = this.m_bodyA, n = this.m_bodyB, i = this.m_J.Compute(t.m_linearVelocity, t.m_angularVelocity, n.m_linearVelocity, n.m_angularVelocity), r = -this.m_mass * i;
      this.m_impulse += r, t.m_linearVelocity.x += t.m_invMass * r * this.m_J.linearA.x, t.m_linearVelocity.y += t.m_invMass * r * this.m_J.linearA.y, t.m_angularVelocity += t.m_invI * r * this.m_J.angularA, n.m_linearVelocity.x += n.m_invMass * r * this.m_J.linearB.x, n.m_linearVelocity.y += n.m_invMass * r * this.m_J.linearB.y, n.m_angularVelocity += n.m_invI * r * this.m_J.angularB;
    }, u.prototype.SolvePositionConstraints = function (t) {
      undefined === t && (t = 0);
      var n = this.m_bodyA, i = this.m_bodyB, r = 0, o = 0;
      r = this.m_revolute1 ? this.m_revolute1.GetJointAngle() : this.m_prismatic1.GetJointTranslation(), o = this.m_revolute2 ? this.m_revolute2.GetJointAngle() : this.m_prismatic2.GetJointTranslation();
      var s = this.m_constant - (r + this.m_ratio * o), a = -this.m_mass * s;
      return n.m_sweep.c.x += n.m_invMass * a * this.m_J.linearA.x, n.m_sweep.c.y += n.m_invMass * a * this.m_J.linearA.y, n.m_sweep.a += n.m_invI * a * this.m_J.angularA, i.m_sweep.c.x += i.m_invMass * a * this.m_J.linearB.x, i.m_sweep.c.y += i.m_invMass * a * this.m_J.linearB.y, i.m_sweep.a += i.m_invI * a * this.m_J.angularB, n.SynchronizeTransform(), i.SynchronizeTransform(), 0 < e.b2_linearSlop;
    }, i.inherit(d, i.Dynamics.Joints.b2JointDef), d.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, d.b2GearJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments);
    }, d.prototype.b2GearJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_gearJoint, this.joint1 = null, this.joint2 = null, this.ratio = 1;
    }, p.b2Jacobian = function () {
      this.linearA = new o, this.linearB = new o;
    }, p.prototype.SetZero = function () {
      this.linearA.SetZero(), this.angularA = 0, this.linearB.SetZero(), this.angularB = 0;
    }, p.prototype.Set = function (e, t, n, i) {
      undefined === t && (t = 0), undefined === i && (i = 0), this.linearA.SetV(e), this.angularA = t, this.linearB.SetV(n), this.angularB = i;
    }, p.prototype.Compute = function (e, t, n, i) {
      return undefined === t && (t = 0), undefined === i && (i = 0), this.linearA.x * e.x + this.linearA.y * e.y + this.angularA * t + (this.linearB.x * n.x + this.linearB.y * n.y) + this.angularB * i;
    }, m.b2Joint = function () {
      this.m_edgeA = new g, this.m_edgeB = new g, this.m_localCenterA = new o, this.m_localCenterB = new o;
    }, m.prototype.GetType = function () {
      return this.m_type;
    }, m.prototype.GetAnchorA = function () {
      return null;
    }, m.prototype.GetAnchorB = function () {
      return null;
    }, m.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), null;
    }, m.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), 0;
    }, m.prototype.GetBodyA = function () {
      return this.m_bodyA;
    }, m.prototype.GetBodyB = function () {
      return this.m_bodyB;
    }, m.prototype.GetNext = function () {
      return this.m_next;
    }, m.prototype.GetUserData = function () {
      return this.m_userData;
    }, m.prototype.SetUserData = function (e) {
      this.m_userData = e;
    }, m.prototype.IsActive = function () {
      return this.m_bodyA.IsActive() && this.m_bodyB.IsActive();
    }, m.Create = function (e, t) {
      var n = null;
      switch (e.type) {
        case m.e_distanceJoint:
          n = new a(e instanceof l ? e : null);
          break;
        case m.e_mouseJoint:
          n = new _(e instanceof x ? e : null);
          break;
        case m.e_prismaticJoint:
          n = new b(e instanceof w ? e : null);
          break;
        case m.e_revoluteJoint:
          n = new q(e instanceof T ? e : null);
          break;
        case m.e_pulleyJoint:
          n = new S(e instanceof E ? e : null);
          break;
        case m.e_gearJoint:
          n = new u(e instanceof d ? e : null);
          break;
        case m.e_lineJoint:
          n = new v(e instanceof y ? e : null);
          break;
        case m.e_weldJoint:
          n = new A(e instanceof M ? e : null);
          break;
        case m.e_frictionJoint:
          n = new c(e instanceof h ? e : null);
      }
      return n;
    }, m.Destroy = function (e, t) {}, m.prototype.b2Joint = function (t) {
      e.b2Assert(t.bodyA != t.bodyB), this.m_type = t.type, this.m_prev = null, this.m_next = null, this.m_bodyA = t.bodyA, this.m_bodyB = t.bodyB, this.m_collideConnected = t.collideConnected, this.m_islandFlag = false, this.m_userData = t.userData;
    }, m.prototype.InitVelocityConstraints = function (e) {}, m.prototype.SolveVelocityConstraints = function (e) {}, m.prototype.FinalizeVelocityConstraints = function () {}, m.prototype.SolvePositionConstraints = function (e) {
      return undefined === e && (e = 0), false;
    }, i.postDefs.push(function () {
      i.Dynamics.Joints.b2Joint.e_unknownJoint = 0, i.Dynamics.Joints.b2Joint.e_revoluteJoint = 1, i.Dynamics.Joints.b2Joint.e_prismaticJoint = 2, i.Dynamics.Joints.b2Joint.e_distanceJoint = 3, i.Dynamics.Joints.b2Joint.e_pulleyJoint = 4, i.Dynamics.Joints.b2Joint.e_mouseJoint = 5, i.Dynamics.Joints.b2Joint.e_gearJoint = 6, i.Dynamics.Joints.b2Joint.e_lineJoint = 7, i.Dynamics.Joints.b2Joint.e_weldJoint = 8, i.Dynamics.Joints.b2Joint.e_frictionJoint = 9, i.Dynamics.Joints.b2Joint.e_inactiveLimit = 0, i.Dynamics.Joints.b2Joint.e_atLowerLimit = 1, i.Dynamics.Joints.b2Joint.e_atUpperLimit = 2, i.Dynamics.Joints.b2Joint.e_equalLimits = 3;
    }), f.b2JointDef = function () {}, f.prototype.b2JointDef = function () {
      this.type = m.e_unknownJoint, this.userData = null, this.bodyA = null, this.bodyB = null, this.collideConnected = false;
    }, g.b2JointEdge = function () {}, i.inherit(v, i.Dynamics.Joints.b2Joint), v.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, v.b2LineJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.m_localAnchor1 = new o, this.m_localAnchor2 = new o, this.m_localXAxis1 = new o, this.m_localYAxis1 = new o, this.m_axis = new o, this.m_perp = new o, this.m_K = new t, this.m_impulse = new o;
    }, v.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
    }, v.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
    }, v.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x), e * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y));
    }, v.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), e * this.m_impulse.y;
    }, v.prototype.GetJointTranslation = function () {
      var e = this.m_bodyA, t = this.m_bodyB, n = e.GetWorldPoint(this.m_localAnchor1), i = t.GetWorldPoint(this.m_localAnchor2), r = i.x - n.x, o = i.y - n.y, s = e.GetWorldVector(this.m_localXAxis1);
      return s.x * r + s.y * o;
    }, v.prototype.GetJointSpeed = function () {
      var e, t = this.m_bodyA, n = this.m_bodyB;
      e = t.m_xf.R;
      var i = this.m_localAnchor1.x - t.m_sweep.localCenter.x, r = this.m_localAnchor1.y - t.m_sweep.localCenter.y, o = e.col1.x * i + e.col2.x * r;
      r = e.col1.y * i + e.col2.y * r, i = o, e = n.m_xf.R;
      var s = this.m_localAnchor2.x - n.m_sweep.localCenter.x, a = this.m_localAnchor2.y - n.m_sweep.localCenter.y;
      o = e.col1.x * s + e.col2.x * a, a = e.col1.y * s + e.col2.y * a, s = o;
      var l = t.m_sweep.c.x + i, c = t.m_sweep.c.y + r, h = n.m_sweep.c.x + s - l, u = n.m_sweep.c.y + a - c, d = t.GetWorldVector(this.m_localXAxis1), p = t.m_linearVelocity, m = n.m_linearVelocity, f = t.m_angularVelocity, g = n.m_angularVelocity;
      return h * (-f * d.y) + u * (f * d.x) + (d.x * (m.x + -g * a - p.x - -f * r) + d.y * (m.y + g * s - p.y - f * i));
    }, v.prototype.IsLimitEnabled = function () {
      return this.m_enableLimit;
    }, v.prototype.EnableLimit = function (e) {
      this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_enableLimit = e;
    }, v.prototype.GetLowerLimit = function () {
      return this.m_lowerTranslation;
    }, v.prototype.GetUpperLimit = function () {
      return this.m_upperTranslation;
    }, v.prototype.SetLimits = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0), this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_lowerTranslation = e, this.m_upperTranslation = t;
    }, v.prototype.IsMotorEnabled = function () {
      return this.m_enableMotor;
    }, v.prototype.EnableMotor = function (e) {
      this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_enableMotor = e;
    }, v.prototype.SetMotorSpeed = function (e) {
      undefined === e && (e = 0), this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_motorSpeed = e;
    }, v.prototype.GetMotorSpeed = function () {
      return this.m_motorSpeed;
    }, v.prototype.SetMaxMotorForce = function (e) {
      undefined === e && (e = 0), this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_maxMotorForce = e;
    }, v.prototype.GetMaxMotorForce = function () {
      return this.m_maxMotorForce;
    }, v.prototype.GetMotorForce = function () {
      return this.m_motorImpulse;
    }, v.prototype.b2LineJoint = function (e) {
      this.__super.b2Joint.call(this, e);
      this.m_localAnchor1.SetV(e.localAnchorA), this.m_localAnchor2.SetV(e.localAnchorB), this.m_localXAxis1.SetV(e.localAxisA), this.m_localYAxis1.x = -this.m_localXAxis1.y, this.m_localYAxis1.y = this.m_localXAxis1.x, this.m_impulse.SetZero(), this.m_motorMass = 0, this.m_motorImpulse = 0, this.m_lowerTranslation = e.lowerTranslation, this.m_upperTranslation = e.upperTranslation, this.m_maxMotorForce = e.maxMotorForce, this.m_motorSpeed = e.motorSpeed, this.m_enableLimit = e.enableLimit, this.m_enableMotor = e.enableMotor, this.m_limitState = m.e_inactiveLimit, this.m_axis.SetZero(), this.m_perp.SetZero();
    }, v.prototype.InitVelocityConstraints = function (t) {
      var n, i = this.m_bodyA, o = this.m_bodyB, s = 0;
      this.m_localCenterA.SetV(i.GetLocalCenter()), this.m_localCenterB.SetV(o.GetLocalCenter());
      var a = i.GetTransform();
      o.GetTransform();
      n = i.m_xf.R;
      var l = this.m_localAnchor1.x - this.m_localCenterA.x, c = this.m_localAnchor1.y - this.m_localCenterA.y;
      s = n.col1.x * l + n.col2.x * c, c = n.col1.y * l + n.col2.y * c, l = s, n = o.m_xf.R;
      var h = this.m_localAnchor2.x - this.m_localCenterB.x, u = this.m_localAnchor2.y - this.m_localCenterB.y;
      s = n.col1.x * h + n.col2.x * u, u = n.col1.y * h + n.col2.y * u, h = s;
      var d = o.m_sweep.c.x + h - i.m_sweep.c.x - l, p = o.m_sweep.c.y + u - i.m_sweep.c.y - c;
      this.m_invMassA = i.m_invMass, this.m_invMassB = o.m_invMass, this.m_invIA = i.m_invI, this.m_invIB = o.m_invI, this.m_axis.SetV(r.MulMV(a.R, this.m_localXAxis1)), this.m_a1 = (d + l) * this.m_axis.y - (p + c) * this.m_axis.x, this.m_a2 = h * this.m_axis.y - u * this.m_axis.x, this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2, this.m_motorMass = this.m_motorMass > Number.MIN_VALUE ? 1 / this.m_motorMass : 0, this.m_perp.SetV(r.MulMV(a.R, this.m_localYAxis1)), this.m_s1 = (d + l) * this.m_perp.y - (p + c) * this.m_perp.x, this.m_s2 = h * this.m_perp.y - u * this.m_perp.x;
      var f = this.m_invMassA, g = this.m_invMassB, v = this.m_invIA, y = this.m_invIB;
      if (this.m_K.col1.x = f + g + v * this.m_s1 * this.m_s1 + y * this.m_s2 * this.m_s2, this.m_K.col1.y = v * this.m_s1 * this.m_a1 + y * this.m_s2 * this.m_a2, this.m_K.col2.x = this.m_K.col1.y, this.m_K.col2.y = f + g + v * this.m_a1 * this.m_a1 + y * this.m_a2 * this.m_a2, this.m_enableLimit) {
        var _ = this.m_axis.x * d + this.m_axis.y * p;
        r.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * e.b2_linearSlop ? this.m_limitState = m.e_equalLimits : _ <= this.m_lowerTranslation ? this.m_limitState != m.e_atLowerLimit && (this.m_limitState = m.e_atLowerLimit, this.m_impulse.y = 0) : _ >= this.m_upperTranslation ? this.m_limitState != m.e_atUpperLimit && (this.m_limitState = m.e_atUpperLimit, this.m_impulse.y = 0) : (this.m_limitState = m.e_inactiveLimit, this.m_impulse.y = 0);
      } else this.m_limitState = m.e_inactiveLimit;
      if (0 == this.m_enableMotor && (this.m_motorImpulse = 0), t.warmStarting) {
        this.m_impulse.x *= t.dtRatio, this.m_impulse.y *= t.dtRatio, this.m_motorImpulse *= t.dtRatio;
        var x = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x, b = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y, w = this.m_impulse.x * this.m_s1 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a1, S = this.m_impulse.x * this.m_s2 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a2;
        i.m_linearVelocity.x -= this.m_invMassA * x, i.m_linearVelocity.y -= this.m_invMassA * b, i.m_angularVelocity -= this.m_invIA * w, o.m_linearVelocity.x += this.m_invMassB * x, o.m_linearVelocity.y += this.m_invMassB * b, o.m_angularVelocity += this.m_invIB * S;
      } else this.m_impulse.SetZero(), this.m_motorImpulse = 0;
    }, v.prototype.SolveVelocityConstraints = function (e) {
      var t = this.m_bodyA, n = this.m_bodyB, i = t.m_linearVelocity, s = t.m_angularVelocity, a = n.m_linearVelocity, l = n.m_angularVelocity, c = 0, h = 0, u = 0, d = 0;
      if (this.m_enableMotor && this.m_limitState != m.e_equalLimits) {
        var p = this.m_axis.x * (a.x - i.x) + this.m_axis.y * (a.y - i.y) + this.m_a2 * l - this.m_a1 * s, f = this.m_motorMass * (this.m_motorSpeed - p), g = this.m_motorImpulse, v = e.dt * this.m_maxMotorForce;
        this.m_motorImpulse = r.Clamp(this.m_motorImpulse + f, -v, v), c = (f = this.m_motorImpulse - g) * this.m_axis.x, h = f * this.m_axis.y, u = f * this.m_a1, d = f * this.m_a2, i.x -= this.m_invMassA * c, i.y -= this.m_invMassA * h, s -= this.m_invIA * u, a.x += this.m_invMassB * c, a.y += this.m_invMassB * h, l += this.m_invIB * d;
      }
      var y = this.m_perp.x * (a.x - i.x) + this.m_perp.y * (a.y - i.y) + this.m_s2 * l - this.m_s1 * s;
      if (this.m_enableLimit && this.m_limitState != m.e_inactiveLimit) {
        var _ = this.m_axis.x * (a.x - i.x) + this.m_axis.y * (a.y - i.y) + this.m_a2 * l - this.m_a1 * s, x = this.m_impulse.Copy(), b = this.m_K.Solve(new o, -y, -_);
        this.m_impulse.Add(b), this.m_limitState == m.e_atLowerLimit ? this.m_impulse.y = r.Max(this.m_impulse.y, 0) : this.m_limitState == m.e_atUpperLimit && (this.m_impulse.y = r.Min(this.m_impulse.y, 0));
        var w = -y - (this.m_impulse.y - x.y) * this.m_K.col2.x, S = 0;
        S = 0 != this.m_K.col1.x ? w / this.m_K.col1.x + x.x : x.x, this.m_impulse.x = S, b.x = this.m_impulse.x - x.x, b.y = this.m_impulse.y - x.y, c = b.x * this.m_perp.x + b.y * this.m_axis.x, h = b.x * this.m_perp.y + b.y * this.m_axis.y, u = b.x * this.m_s1 + b.y * this.m_a1, d = b.x * this.m_s2 + b.y * this.m_a2, i.x -= this.m_invMassA * c, i.y -= this.m_invMassA * h, s -= this.m_invIA * u, a.x += this.m_invMassB * c, a.y += this.m_invMassB * h, l += this.m_invIB * d;
      } else {
        var E = 0;
        E = 0 != this.m_K.col1.x ? -y / this.m_K.col1.x : 0, this.m_impulse.x += E, c = E * this.m_perp.x, h = E * this.m_perp.y, u = E * this.m_s1, d = E * this.m_s2, i.x -= this.m_invMassA * c, i.y -= this.m_invMassA * h, s -= this.m_invIA * u, a.x += this.m_invMassB * c, a.y += this.m_invMassB * h, l += this.m_invIB * d;
      }
      t.m_linearVelocity.SetV(i), t.m_angularVelocity = s, n.m_linearVelocity.SetV(a), n.m_angularVelocity = l;
    }, v.prototype.SolvePositionConstraints = function (n) {
      undefined === n && (n = 0);
      var i, s = this.m_bodyA, a = this.m_bodyB, l = s.m_sweep.c, c = s.m_sweep.a, h = a.m_sweep.c, u = a.m_sweep.a, d = 0, p = 0, m = 0, f = 0, g = 0, v = 0, y = false, _ = 0, x = t.FromAngle(c), b = t.FromAngle(u);
      i = x;
      var w = this.m_localAnchor1.x - this.m_localCenterA.x, S = this.m_localAnchor1.y - this.m_localCenterA.y;
      d = i.col1.x * w + i.col2.x * S, S = i.col1.y * w + i.col2.y * S, w = d, i = b;
      var E = this.m_localAnchor2.x - this.m_localCenterB.x, q = this.m_localAnchor2.y - this.m_localCenterB.y;
      d = i.col1.x * E + i.col2.x * q, q = i.col1.y * E + i.col2.y * q, E = d;
      var T = h.x + E - l.x - w, A = h.y + q - l.y - S;
      if (this.m_enableLimit) {
        this.m_axis = r.MulMV(x, this.m_localXAxis1), this.m_a1 = (T + w) * this.m_axis.y - (A + S) * this.m_axis.x, this.m_a2 = E * this.m_axis.y - q * this.m_axis.x;
        var M = this.m_axis.x * T + this.m_axis.y * A;
        r.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * e.b2_linearSlop ? (_ = r.Clamp(M, -e.b2_maxLinearCorrection, e.b2_maxLinearCorrection), v = r.Abs(M), y = true) : M <= this.m_lowerTranslation ? (_ = r.Clamp(M - this.m_lowerTranslation + e.b2_linearSlop, -e.b2_maxLinearCorrection, 0), v = this.m_lowerTranslation - M, y = true) : M >= this.m_upperTranslation && (_ = r.Clamp(M - this.m_upperTranslation + e.b2_linearSlop, 0, e.b2_maxLinearCorrection), v = M - this.m_upperTranslation, y = true);
      }
      this.m_perp = r.MulMV(x, this.m_localYAxis1), this.m_s1 = (T + w) * this.m_perp.y - (A + S) * this.m_perp.x, this.m_s2 = E * this.m_perp.y - q * this.m_perp.x;
      var C = new o, k = this.m_perp.x * T + this.m_perp.y * A;
      if (v = r.Max(v, r.Abs(k)), 0, y) p = this.m_invMassA, m = this.m_invMassB, f = this.m_invIA, g = this.m_invIB, this.m_K.col1.x = p + m + f * this.m_s1 * this.m_s1 + g * this.m_s2 * this.m_s2, this.m_K.col1.y = f * this.m_s1 * this.m_a1 + g * this.m_s2 * this.m_a2, this.m_K.col2.x = this.m_K.col1.y, this.m_K.col2.y = p + m + f * this.m_a1 * this.m_a1 + g * this.m_a2 * this.m_a2, this.m_K.Solve(C, -k, -_); else {
        p = this.m_invMassA, m = this.m_invMassB, f = this.m_invIA, g = this.m_invIB;
        var R = p + m + f * this.m_s1 * this.m_s1 + g * this.m_s2 * this.m_s2, L = 0;
        L = 0 != R ? -k / R : 0, C.x = L, C.y = 0;
      }
      var P = C.x * this.m_perp.x + C.y * this.m_axis.x, D = C.x * this.m_perp.y + C.y * this.m_axis.y, O = C.x * this.m_s1 + C.y * this.m_a1, I = C.x * this.m_s2 + C.y * this.m_a2;
      return l.x -= this.m_invMassA * P, l.y -= this.m_invMassA * D, c -= this.m_invIA * O, h.x += this.m_invMassB * P, h.y += this.m_invMassB * D, u += this.m_invIB * I, s.m_sweep.a = c, a.m_sweep.a = u, s.SynchronizeTransform(), a.SynchronizeTransform(), v <= e.b2_linearSlop && 0 <= e.b2_angularSlop;
    }, i.inherit(y, i.Dynamics.Joints.b2JointDef), y.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, y.b2LineJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.localAnchorA = new o, this.localAnchorB = new o, this.localAxisA = new o;
    }, y.prototype.b2LineJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_lineJoint, this.localAxisA.Set(1, 0), this.enableLimit = false, this.lowerTranslation = 0, this.upperTranslation = 0, this.enableMotor = false, this.maxMotorForce = 0, this.motorSpeed = 0;
    }, y.prototype.Initialize = function (e, t, n, i) {
      this.bodyA = e, this.bodyB = t, this.localAnchorA = this.bodyA.GetLocalPoint(n), this.localAnchorB = this.bodyB.GetLocalPoint(n), this.localAxisA = this.bodyA.GetLocalVector(i);
    }, i.inherit(_, i.Dynamics.Joints.b2Joint), _.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, _.b2MouseJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.K = new t, this.K1 = new t, this.K2 = new t, this.m_localAnchor = new o, this.m_target = new o, this.m_impulse = new o, this.m_mass = new t, this.m_C = new o;
    }, _.prototype.GetAnchorA = function () {
      return this.m_target;
    }, _.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchor);
    }, _.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * this.m_impulse.x, e * this.m_impulse.y);
    }, _.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), 0;
    }, _.prototype.GetTarget = function () {
      return this.m_target;
    }, _.prototype.SetTarget = function (e) {
      0 == this.m_bodyB.IsAwake() && this.m_bodyB.SetAwake(true), this.m_target = e;
    }, _.prototype.GetMaxForce = function () {
      return this.m_maxForce;
    }, _.prototype.SetMaxForce = function (e) {
      undefined === e && (e = 0), this.m_maxForce = e;
    }, _.prototype.GetFrequency = function () {
      return this.m_frequencyHz;
    }, _.prototype.SetFrequency = function (e) {
      undefined === e && (e = 0), this.m_frequencyHz = e;
    }, _.prototype.GetDampingRatio = function () {
      return this.m_dampingRatio;
    }, _.prototype.SetDampingRatio = function (e) {
      undefined === e && (e = 0), this.m_dampingRatio = e;
    }, _.prototype.b2MouseJoint = function (e) {
      this.__super.b2Joint.call(this, e), this.m_target.SetV(e.target);
      var t = this.m_target.x - this.m_bodyB.m_xf.position.x, n = this.m_target.y - this.m_bodyB.m_xf.position.y, i = this.m_bodyB.m_xf.R;
      this.m_localAnchor.x = t * i.col1.x + n * i.col1.y, this.m_localAnchor.y = t * i.col2.x + n * i.col2.y, this.m_maxForce = e.maxForce, this.m_impulse.SetZero(), this.m_frequencyHz = e.frequencyHz, this.m_dampingRatio = e.dampingRatio, this.m_beta = 0, this.m_gamma = 0;
    }, _.prototype.InitVelocityConstraints = function (e) {
      var t, n = this.m_bodyB, i = n.GetMass(), r = 2 * Math.PI * this.m_frequencyHz, o = 2 * i * this.m_dampingRatio * r, s = i * r * r;
      this.m_gamma = e.dt * (o + e.dt * s), this.m_gamma = 0 != this.m_gamma ? 1 / this.m_gamma : 0, this.m_beta = e.dt * s * this.m_gamma, t = n.m_xf.R;
      var a = this.m_localAnchor.x - n.m_sweep.localCenter.x, l = this.m_localAnchor.y - n.m_sweep.localCenter.y, c = t.col1.x * a + t.col2.x * l;
      l = t.col1.y * a + t.col2.y * l, a = c;
      var h = n.m_invMass, u = n.m_invI;
      this.K1.col1.x = h, this.K1.col2.x = 0, this.K1.col1.y = 0, this.K1.col2.y = h, this.K2.col1.x = u * l * l, this.K2.col2.x = -u * a * l, this.K2.col1.y = -u * a * l, this.K2.col2.y = u * a * a, this.K.SetM(this.K1), this.K.AddM(this.K2), this.K.col1.x += this.m_gamma, this.K.col2.y += this.m_gamma, this.K.GetInverse(this.m_mass), this.m_C.x = n.m_sweep.c.x + a - this.m_target.x, this.m_C.y = n.m_sweep.c.y + l - this.m_target.y, n.m_angularVelocity *= 0.98, this.m_impulse.x *= e.dtRatio, this.m_impulse.y *= e.dtRatio, n.m_linearVelocity.x += h * this.m_impulse.x, n.m_linearVelocity.y += h * this.m_impulse.y, n.m_angularVelocity += u * (a * this.m_impulse.y - l * this.m_impulse.x);
    }, _.prototype.SolveVelocityConstraints = function (e) {
      var t, n, i = this.m_bodyB, r = 0;
      t = i.m_xf.R;
      var o = this.m_localAnchor.x - i.m_sweep.localCenter.x, s = this.m_localAnchor.y - i.m_sweep.localCenter.y;
      r = t.col1.x * o + t.col2.x * s, s = t.col1.y * o + t.col2.y * s, o = r;
      var a = i.m_linearVelocity.x + -i.m_angularVelocity * s, l = i.m_linearVelocity.y + i.m_angularVelocity * o;
      t = this.m_mass, r = a + this.m_beta * this.m_C.x + this.m_gamma * this.m_impulse.x, n = l + this.m_beta * this.m_C.y + this.m_gamma * this.m_impulse.y;
      var c = -(t.col1.x * r + t.col2.x * n), h = -(t.col1.y * r + t.col2.y * n), u = this.m_impulse.x, d = this.m_impulse.y;
      this.m_impulse.x += c, this.m_impulse.y += h;
      var p = e.dt * this.m_maxForce;
      this.m_impulse.LengthSquared() > p * p && this.m_impulse.Multiply(p / this.m_impulse.Length()), c = this.m_impulse.x - u, h = this.m_impulse.y - d, i.m_linearVelocity.x += i.m_invMass * c, i.m_linearVelocity.y += i.m_invMass * h, i.m_angularVelocity += i.m_invI * (o * h - s * c);
    }, _.prototype.SolvePositionConstraints = function (e) {
      return undefined === e && (e = 0), true;
    }, i.inherit(x, i.Dynamics.Joints.b2JointDef), x.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, x.b2MouseJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.target = new o;
    }, x.prototype.b2MouseJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_mouseJoint, this.maxForce = 0, this.frequencyHz = 5, this.dampingRatio = 0.7;
    }, i.inherit(b, i.Dynamics.Joints.b2Joint), b.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, b.b2PrismaticJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.m_localAnchor1 = new o, this.m_localAnchor2 = new o, this.m_localXAxis1 = new o, this.m_localYAxis1 = new o, this.m_axis = new o, this.m_perp = new o, this.m_K = new n, this.m_impulse = new s;
    }, b.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
    }, b.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
    }, b.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x), e * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y));
    }, b.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), e * this.m_impulse.y;
    }, b.prototype.GetJointTranslation = function () {
      var e = this.m_bodyA, t = this.m_bodyB, n = e.GetWorldPoint(this.m_localAnchor1), i = t.GetWorldPoint(this.m_localAnchor2), r = i.x - n.x, o = i.y - n.y, s = e.GetWorldVector(this.m_localXAxis1);
      return s.x * r + s.y * o;
    }, b.prototype.GetJointSpeed = function () {
      var e, t = this.m_bodyA, n = this.m_bodyB;
      e = t.m_xf.R;
      var i = this.m_localAnchor1.x - t.m_sweep.localCenter.x, r = this.m_localAnchor1.y - t.m_sweep.localCenter.y, o = e.col1.x * i + e.col2.x * r;
      r = e.col1.y * i + e.col2.y * r, i = o, e = n.m_xf.R;
      var s = this.m_localAnchor2.x - n.m_sweep.localCenter.x, a = this.m_localAnchor2.y - n.m_sweep.localCenter.y;
      o = e.col1.x * s + e.col2.x * a, a = e.col1.y * s + e.col2.y * a, s = o;
      var l = t.m_sweep.c.x + i, c = t.m_sweep.c.y + r, h = n.m_sweep.c.x + s - l, u = n.m_sweep.c.y + a - c, d = t.GetWorldVector(this.m_localXAxis1), p = t.m_linearVelocity, m = n.m_linearVelocity, f = t.m_angularVelocity, g = n.m_angularVelocity;
      return h * (-f * d.y) + u * (f * d.x) + (d.x * (m.x + -g * a - p.x - -f * r) + d.y * (m.y + g * s - p.y - f * i));
    }, b.prototype.IsLimitEnabled = function () {
      return this.m_enableLimit;
    }, b.prototype.EnableLimit = function (e) {
      this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_enableLimit = e;
    }, b.prototype.GetLowerLimit = function () {
      return this.m_lowerTranslation;
    }, b.prototype.GetUpperLimit = function () {
      return this.m_upperTranslation;
    }, b.prototype.SetLimits = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0), this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_lowerTranslation = e, this.m_upperTranslation = t;
    }, b.prototype.IsMotorEnabled = function () {
      return this.m_enableMotor;
    }, b.prototype.EnableMotor = function (e) {
      this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_enableMotor = e;
    }, b.prototype.SetMotorSpeed = function (e) {
      undefined === e && (e = 0), this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_motorSpeed = e;
    }, b.prototype.GetMotorSpeed = function () {
      return this.m_motorSpeed;
    }, b.prototype.SetMaxMotorForce = function (e) {
      undefined === e && (e = 0), this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_maxMotorForce = e;
    }, b.prototype.GetMotorForce = function () {
      return this.m_motorImpulse;
    }, b.prototype.b2PrismaticJoint = function (e) {
      this.__super.b2Joint.call(this, e);
      this.m_localAnchor1.SetV(e.localAnchorA), this.m_localAnchor2.SetV(e.localAnchorB), this.m_localXAxis1.SetV(e.localAxisA), this.m_localYAxis1.x = -this.m_localXAxis1.y, this.m_localYAxis1.y = this.m_localXAxis1.x, this.m_refAngle = e.referenceAngle, this.m_impulse.SetZero(), this.m_motorMass = 0, this.m_motorImpulse = 0, this.m_lowerTranslation = e.lowerTranslation, this.m_upperTranslation = e.upperTranslation, this.m_maxMotorForce = e.maxMotorForce, this.m_motorSpeed = e.motorSpeed, this.m_enableLimit = e.enableLimit, this.m_enableMotor = e.enableMotor, this.m_limitState = m.e_inactiveLimit, this.m_axis.SetZero(), this.m_perp.SetZero();
    }, b.prototype.InitVelocityConstraints = function (t) {
      var n, i = this.m_bodyA, o = this.m_bodyB, s = 0;
      this.m_localCenterA.SetV(i.GetLocalCenter()), this.m_localCenterB.SetV(o.GetLocalCenter());
      var a = i.GetTransform();
      o.GetTransform();
      n = i.m_xf.R;
      var l = this.m_localAnchor1.x - this.m_localCenterA.x, c = this.m_localAnchor1.y - this.m_localCenterA.y;
      s = n.col1.x * l + n.col2.x * c, c = n.col1.y * l + n.col2.y * c, l = s, n = o.m_xf.R;
      var h = this.m_localAnchor2.x - this.m_localCenterB.x, u = this.m_localAnchor2.y - this.m_localCenterB.y;
      s = n.col1.x * h + n.col2.x * u, u = n.col1.y * h + n.col2.y * u, h = s;
      var d = o.m_sweep.c.x + h - i.m_sweep.c.x - l, p = o.m_sweep.c.y + u - i.m_sweep.c.y - c;
      this.m_invMassA = i.m_invMass, this.m_invMassB = o.m_invMass, this.m_invIA = i.m_invI, this.m_invIB = o.m_invI, this.m_axis.SetV(r.MulMV(a.R, this.m_localXAxis1)), this.m_a1 = (d + l) * this.m_axis.y - (p + c) * this.m_axis.x, this.m_a2 = h * this.m_axis.y - u * this.m_axis.x, this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2, this.m_motorMass > Number.MIN_VALUE && (this.m_motorMass = 1 / this.m_motorMass), this.m_perp.SetV(r.MulMV(a.R, this.m_localYAxis1)), this.m_s1 = (d + l) * this.m_perp.y - (p + c) * this.m_perp.x, this.m_s2 = h * this.m_perp.y - u * this.m_perp.x;
      var f = this.m_invMassA, g = this.m_invMassB, v = this.m_invIA, y = this.m_invIB;
      if (this.m_K.col1.x = f + g + v * this.m_s1 * this.m_s1 + y * this.m_s2 * this.m_s2, this.m_K.col1.y = v * this.m_s1 + y * this.m_s2, this.m_K.col1.z = v * this.m_s1 * this.m_a1 + y * this.m_s2 * this.m_a2, this.m_K.col2.x = this.m_K.col1.y, this.m_K.col2.y = v + y, this.m_K.col2.z = v * this.m_a1 + y * this.m_a2, this.m_K.col3.x = this.m_K.col1.z, this.m_K.col3.y = this.m_K.col2.z, this.m_K.col3.z = f + g + v * this.m_a1 * this.m_a1 + y * this.m_a2 * this.m_a2, this.m_enableLimit) {
        var _ = this.m_axis.x * d + this.m_axis.y * p;
        r.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * e.b2_linearSlop ? this.m_limitState = m.e_equalLimits : _ <= this.m_lowerTranslation ? this.m_limitState != m.e_atLowerLimit && (this.m_limitState = m.e_atLowerLimit, this.m_impulse.z = 0) : _ >= this.m_upperTranslation ? this.m_limitState != m.e_atUpperLimit && (this.m_limitState = m.e_atUpperLimit, this.m_impulse.z = 0) : (this.m_limitState = m.e_inactiveLimit, this.m_impulse.z = 0);
      } else this.m_limitState = m.e_inactiveLimit;
      if (0 == this.m_enableMotor && (this.m_motorImpulse = 0), t.warmStarting) {
        this.m_impulse.x *= t.dtRatio, this.m_impulse.y *= t.dtRatio, this.m_motorImpulse *= t.dtRatio;
        var x = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x, b = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y, w = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1, S = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;
        i.m_linearVelocity.x -= this.m_invMassA * x, i.m_linearVelocity.y -= this.m_invMassA * b, i.m_angularVelocity -= this.m_invIA * w, o.m_linearVelocity.x += this.m_invMassB * x, o.m_linearVelocity.y += this.m_invMassB * b, o.m_angularVelocity += this.m_invIB * S;
      } else this.m_impulse.SetZero(), this.m_motorImpulse = 0;
    }, b.prototype.SolveVelocityConstraints = function (e) {
      var t = this.m_bodyA, n = this.m_bodyB, i = t.m_linearVelocity, a = t.m_angularVelocity, l = n.m_linearVelocity, c = n.m_angularVelocity, h = 0, u = 0, d = 0, p = 0;
      if (this.m_enableMotor && this.m_limitState != m.e_equalLimits) {
        var f = this.m_axis.x * (l.x - i.x) + this.m_axis.y * (l.y - i.y) + this.m_a2 * c - this.m_a1 * a, g = this.m_motorMass * (this.m_motorSpeed - f), v = this.m_motorImpulse, y = e.dt * this.m_maxMotorForce;
        this.m_motorImpulse = r.Clamp(this.m_motorImpulse + g, -y, y), h = (g = this.m_motorImpulse - v) * this.m_axis.x, u = g * this.m_axis.y, d = g * this.m_a1, p = g * this.m_a2, i.x -= this.m_invMassA * h, i.y -= this.m_invMassA * u, a -= this.m_invIA * d, l.x += this.m_invMassB * h, l.y += this.m_invMassB * u, c += this.m_invIB * p;
      }
      var _ = this.m_perp.x * (l.x - i.x) + this.m_perp.y * (l.y - i.y) + this.m_s2 * c - this.m_s1 * a, x = c - a;
      if (this.m_enableLimit && this.m_limitState != m.e_inactiveLimit) {
        var b = this.m_axis.x * (l.x - i.x) + this.m_axis.y * (l.y - i.y) + this.m_a2 * c - this.m_a1 * a, w = this.m_impulse.Copy(), S = this.m_K.Solve33(new s, -_, -x, -b);
        this.m_impulse.Add(S), this.m_limitState == m.e_atLowerLimit ? this.m_impulse.z = r.Max(this.m_impulse.z, 0) : this.m_limitState == m.e_atUpperLimit && (this.m_impulse.z = r.Min(this.m_impulse.z, 0));
        var E = -_ - (this.m_impulse.z - w.z) * this.m_K.col3.x, q = -x - (this.m_impulse.z - w.z) * this.m_K.col3.y, T = this.m_K.Solve22(new o, E, q);
        T.x += w.x, T.y += w.y, this.m_impulse.x = T.x, this.m_impulse.y = T.y, S.x = this.m_impulse.x - w.x, S.y = this.m_impulse.y - w.y, S.z = this.m_impulse.z - w.z, h = S.x * this.m_perp.x + S.z * this.m_axis.x, u = S.x * this.m_perp.y + S.z * this.m_axis.y, d = S.x * this.m_s1 + S.y + S.z * this.m_a1, p = S.x * this.m_s2 + S.y + S.z * this.m_a2, i.x -= this.m_invMassA * h, i.y -= this.m_invMassA * u, a -= this.m_invIA * d, l.x += this.m_invMassB * h, l.y += this.m_invMassB * u, c += this.m_invIB * p;
      } else {
        var A = this.m_K.Solve22(new o, -_, -x);
        this.m_impulse.x += A.x, this.m_impulse.y += A.y, h = A.x * this.m_perp.x, u = A.x * this.m_perp.y, d = A.x * this.m_s1 + A.y, p = A.x * this.m_s2 + A.y, i.x -= this.m_invMassA * h, i.y -= this.m_invMassA * u, a -= this.m_invIA * d, l.x += this.m_invMassB * h, l.y += this.m_invMassB * u, c += this.m_invIB * p;
      }
      t.m_linearVelocity.SetV(i), t.m_angularVelocity = a, n.m_linearVelocity.SetV(l), n.m_angularVelocity = c;
    }, b.prototype.SolvePositionConstraints = function (n) {
      undefined === n && (n = 0);
      var i, a, l = this.m_bodyA, c = this.m_bodyB, h = l.m_sweep.c, u = l.m_sweep.a, d = c.m_sweep.c, p = c.m_sweep.a, m = 0, f = 0, g = 0, v = 0, y = 0, _ = 0, x = false, b = 0, w = t.FromAngle(u), S = t.FromAngle(p);
      i = w;
      var E = this.m_localAnchor1.x - this.m_localCenterA.x, q = this.m_localAnchor1.y - this.m_localCenterA.y;
      m = i.col1.x * E + i.col2.x * q, q = i.col1.y * E + i.col2.y * q, E = m, i = S;
      var T = this.m_localAnchor2.x - this.m_localCenterB.x, A = this.m_localAnchor2.y - this.m_localCenterB.y;
      m = i.col1.x * T + i.col2.x * A, A = i.col1.y * T + i.col2.y * A, T = m;
      var M = d.x + T - h.x - E, C = d.y + A - h.y - q;
      if (this.m_enableLimit) {
        this.m_axis = r.MulMV(w, this.m_localXAxis1), this.m_a1 = (M + E) * this.m_axis.y - (C + q) * this.m_axis.x, this.m_a2 = T * this.m_axis.y - A * this.m_axis.x;
        var k = this.m_axis.x * M + this.m_axis.y * C;
        r.Abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * e.b2_linearSlop ? (b = r.Clamp(k, -e.b2_maxLinearCorrection, e.b2_maxLinearCorrection), _ = r.Abs(k), x = true) : k <= this.m_lowerTranslation ? (b = r.Clamp(k - this.m_lowerTranslation + e.b2_linearSlop, -e.b2_maxLinearCorrection, 0), _ = this.m_lowerTranslation - k, x = true) : k >= this.m_upperTranslation && (b = r.Clamp(k - this.m_upperTranslation + e.b2_linearSlop, 0, e.b2_maxLinearCorrection), _ = k - this.m_upperTranslation, x = true);
      }
      this.m_perp = r.MulMV(w, this.m_localYAxis1), this.m_s1 = (M + E) * this.m_perp.y - (C + q) * this.m_perp.x, this.m_s2 = T * this.m_perp.y - A * this.m_perp.x;
      var R = new s, L = this.m_perp.x * M + this.m_perp.y * C, P = p - u - this.m_refAngle;
      if (_ = r.Max(_, r.Abs(L)), a = r.Abs(P), x) f = this.m_invMassA, g = this.m_invMassB, v = this.m_invIA, y = this.m_invIB, this.m_K.col1.x = f + g + v * this.m_s1 * this.m_s1 + y * this.m_s2 * this.m_s2, this.m_K.col1.y = v * this.m_s1 + y * this.m_s2, this.m_K.col1.z = v * this.m_s1 * this.m_a1 + y * this.m_s2 * this.m_a2, this.m_K.col2.x = this.m_K.col1.y, this.m_K.col2.y = v + y, this.m_K.col2.z = v * this.m_a1 + y * this.m_a2, this.m_K.col3.x = this.m_K.col1.z, this.m_K.col3.y = this.m_K.col2.z, this.m_K.col3.z = f + g + v * this.m_a1 * this.m_a1 + y * this.m_a2 * this.m_a2, this.m_K.Solve33(R, -L, -P, -b); else {
        f = this.m_invMassA, g = this.m_invMassB, v = this.m_invIA, y = this.m_invIB;
        var D = f + g + v * this.m_s1 * this.m_s1 + y * this.m_s2 * this.m_s2, O = v * this.m_s1 + y * this.m_s2, I = v + y;
        this.m_K.col1.Set(D, O, 0), this.m_K.col2.Set(O, I, 0);
        var B = this.m_K.Solve22(new o, -L, -P);
        R.x = B.x, R.y = B.y, R.z = 0;
      }
      var F = R.x * this.m_perp.x + R.z * this.m_axis.x, z = R.x * this.m_perp.y + R.z * this.m_axis.y, N = R.x * this.m_s1 + R.y + R.z * this.m_a1, U = R.x * this.m_s2 + R.y + R.z * this.m_a2;
      return h.x -= this.m_invMassA * F, h.y -= this.m_invMassA * z, u -= this.m_invIA * N, d.x += this.m_invMassB * F, d.y += this.m_invMassB * z, p += this.m_invIB * U, l.m_sweep.a = u, c.m_sweep.a = p, l.SynchronizeTransform(), c.SynchronizeTransform(), _ <= e.b2_linearSlop && a <= e.b2_angularSlop;
    }, i.inherit(w, i.Dynamics.Joints.b2JointDef), w.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, w.b2PrismaticJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.localAnchorA = new o, this.localAnchorB = new o, this.localAxisA = new o;
    }, w.prototype.b2PrismaticJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_prismaticJoint, this.localAxisA.Set(1, 0), this.referenceAngle = 0, this.enableLimit = false, this.lowerTranslation = 0, this.upperTranslation = 0, this.enableMotor = false, this.maxMotorForce = 0, this.motorSpeed = 0;
    }, w.prototype.Initialize = function (e, t, n, i) {
      this.bodyA = e, this.bodyB = t, this.localAnchorA = this.bodyA.GetLocalPoint(n), this.localAnchorB = this.bodyB.GetLocalPoint(n), this.localAxisA = this.bodyA.GetLocalVector(i), this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
    }, i.inherit(S, i.Dynamics.Joints.b2Joint), S.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, S.b2PulleyJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.m_groundAnchor1 = new o, this.m_groundAnchor2 = new o, this.m_localAnchor1 = new o, this.m_localAnchor2 = new o, this.m_u1 = new o, this.m_u2 = new o;
    }, S.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
    }, S.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
    }, S.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * this.m_impulse * this.m_u2.x, e * this.m_impulse * this.m_u2.y);
    }, S.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), 0;
    }, S.prototype.GetGroundAnchorA = function () {
      var e = this.m_ground.m_xf.position.Copy();
      return e.Add(this.m_groundAnchor1), e;
    }, S.prototype.GetGroundAnchorB = function () {
      var e = this.m_ground.m_xf.position.Copy();
      return e.Add(this.m_groundAnchor2), e;
    }, S.prototype.GetLength1 = function () {
      var e = this.m_bodyA.GetWorldPoint(this.m_localAnchor1), t = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x, n = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y, i = e.x - t, r = e.y - n;
      return Math.sqrt(i * i + r * r);
    }, S.prototype.GetLength2 = function () {
      var e = this.m_bodyB.GetWorldPoint(this.m_localAnchor2), t = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x, n = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y, i = e.x - t, r = e.y - n;
      return Math.sqrt(i * i + r * r);
    }, S.prototype.GetRatio = function () {
      return this.m_ratio;
    }, S.prototype.b2PulleyJoint = function (e) {
      this.__super.b2Joint.call(this, e);
      this.m_ground = this.m_bodyA.m_world.m_groundBody, this.m_groundAnchor1.x = e.groundAnchorA.x - this.m_ground.m_xf.position.x, this.m_groundAnchor1.y = e.groundAnchorA.y - this.m_ground.m_xf.position.y, this.m_groundAnchor2.x = e.groundAnchorB.x - this.m_ground.m_xf.position.x, this.m_groundAnchor2.y = e.groundAnchorB.y - this.m_ground.m_xf.position.y, this.m_localAnchor1.SetV(e.localAnchorA), this.m_localAnchor2.SetV(e.localAnchorB), this.m_ratio = e.ratio, this.m_constant = e.lengthA + this.m_ratio * e.lengthB, this.m_maxLength1 = r.Min(e.maxLengthA, this.m_constant - this.m_ratio * S.b2_minPulleyLength), this.m_maxLength2 = r.Min(e.maxLengthB, (this.m_constant - S.b2_minPulleyLength) / this.m_ratio), this.m_impulse = 0, this.m_limitImpulse1 = 0, this.m_limitImpulse2 = 0;
    }, S.prototype.InitVelocityConstraints = function (t) {
      var n, i = this.m_bodyA, r = this.m_bodyB;
      n = i.m_xf.R;
      var o = this.m_localAnchor1.x - i.m_sweep.localCenter.x, s = this.m_localAnchor1.y - i.m_sweep.localCenter.y, a = n.col1.x * o + n.col2.x * s;
      s = n.col1.y * o + n.col2.y * s, o = a, n = r.m_xf.R;
      var l = this.m_localAnchor2.x - r.m_sweep.localCenter.x, c = this.m_localAnchor2.y - r.m_sweep.localCenter.y;
      a = n.col1.x * l + n.col2.x * c, c = n.col1.y * l + n.col2.y * c, l = a;
      var h = i.m_sweep.c.x + o, u = i.m_sweep.c.y + s, d = r.m_sweep.c.x + l, p = r.m_sweep.c.y + c, f = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x, g = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y, v = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x, y = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;
      this.m_u1.Set(h - f, u - g), this.m_u2.Set(d - v, p - y);
      var _ = this.m_u1.Length(), x = this.m_u2.Length();
      _ > e.b2_linearSlop ? this.m_u1.Multiply(1 / _) : this.m_u1.SetZero(), x > e.b2_linearSlop ? this.m_u2.Multiply(1 / x) : this.m_u2.SetZero(), this.m_constant - _ - this.m_ratio * x > 0 ? (this.m_state = m.e_inactiveLimit, this.m_impulse = 0) : this.m_state = m.e_atUpperLimit, _ < this.m_maxLength1 ? (this.m_limitState1 = m.e_inactiveLimit, this.m_limitImpulse1 = 0) : this.m_limitState1 = m.e_atUpperLimit, x < this.m_maxLength2 ? (this.m_limitState2 = m.e_inactiveLimit, this.m_limitImpulse2 = 0) : this.m_limitState2 = m.e_atUpperLimit;
      var b = o * this.m_u1.y - s * this.m_u1.x, w = l * this.m_u2.y - c * this.m_u2.x;
      if (this.m_limitMass1 = i.m_invMass + i.m_invI * b * b, this.m_limitMass2 = r.m_invMass + r.m_invI * w * w, this.m_pulleyMass = this.m_limitMass1 + this.m_ratio * this.m_ratio * this.m_limitMass2, this.m_limitMass1 = 1 / this.m_limitMass1, this.m_limitMass2 = 1 / this.m_limitMass2, this.m_pulleyMass = 1 / this.m_pulleyMass, t.warmStarting) {
        this.m_impulse *= t.dtRatio, this.m_limitImpulse1 *= t.dtRatio, this.m_limitImpulse2 *= t.dtRatio;
        var S = (-this.m_impulse - this.m_limitImpulse1) * this.m_u1.x, E = (-this.m_impulse - this.m_limitImpulse1) * this.m_u1.y, q = (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) * this.m_u2.x, T = (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) * this.m_u2.y;
        i.m_linearVelocity.x += i.m_invMass * S, i.m_linearVelocity.y += i.m_invMass * E, i.m_angularVelocity += i.m_invI * (o * E - s * S), r.m_linearVelocity.x += r.m_invMass * q, r.m_linearVelocity.y += r.m_invMass * T, r.m_angularVelocity += r.m_invI * (l * T - c * q);
      } else this.m_impulse = 0, this.m_limitImpulse1 = 0, this.m_limitImpulse2 = 0;
    }, S.prototype.SolveVelocityConstraints = function (e) {
      var t, n = this.m_bodyA, i = this.m_bodyB;
      t = n.m_xf.R;
      var o = this.m_localAnchor1.x - n.m_sweep.localCenter.x, s = this.m_localAnchor1.y - n.m_sweep.localCenter.y, a = t.col1.x * o + t.col2.x * s;
      s = t.col1.y * o + t.col2.y * s, o = a, t = i.m_xf.R;
      var l = this.m_localAnchor2.x - i.m_sweep.localCenter.x, c = this.m_localAnchor2.y - i.m_sweep.localCenter.y;
      a = t.col1.x * l + t.col2.x * c, c = t.col1.y * l + t.col2.y * c, l = a;
      var h = 0, u = 0, d = 0, p = 0, f = 0, g = 0, v = 0, y = 0, _ = 0, x = 0, b = 0;
      this.m_state == m.e_atUpperLimit && (h = n.m_linearVelocity.x + -n.m_angularVelocity * s, u = n.m_linearVelocity.y + n.m_angularVelocity * o, d = i.m_linearVelocity.x + -i.m_angularVelocity * c, p = i.m_linearVelocity.y + i.m_angularVelocity * l, _ = -(this.m_u1.x * h + this.m_u1.y * u) - this.m_ratio * (this.m_u2.x * d + this.m_u2.y * p), x = this.m_pulleyMass * -_, b = this.m_impulse, this.m_impulse = r.Max(0, this.m_impulse + x), f = -(x = this.m_impulse - b) * this.m_u1.x, g = -x * this.m_u1.y, v = -this.m_ratio * x * this.m_u2.x, y = -this.m_ratio * x * this.m_u2.y, n.m_linearVelocity.x += n.m_invMass * f, n.m_linearVelocity.y += n.m_invMass * g, n.m_angularVelocity += n.m_invI * (o * g - s * f), i.m_linearVelocity.x += i.m_invMass * v, i.m_linearVelocity.y += i.m_invMass * y, i.m_angularVelocity += i.m_invI * (l * y - c * v)), this.m_limitState1 == m.e_atUpperLimit && (h = n.m_linearVelocity.x + -n.m_angularVelocity * s, u = n.m_linearVelocity.y + n.m_angularVelocity * o, _ = -(this.m_u1.x * h + this.m_u1.y * u), x = -this.m_limitMass1 * _, b = this.m_limitImpulse1, this.m_limitImpulse1 = r.Max(0, this.m_limitImpulse1 + x), f = -(x = this.m_limitImpulse1 - b) * this.m_u1.x, g = -x * this.m_u1.y, n.m_linearVelocity.x += n.m_invMass * f, n.m_linearVelocity.y += n.m_invMass * g, n.m_angularVelocity += n.m_invI * (o * g - s * f)), this.m_limitState2 == m.e_atUpperLimit && (d = i.m_linearVelocity.x + -i.m_angularVelocity * c, p = i.m_linearVelocity.y + i.m_angularVelocity * l, _ = -(this.m_u2.x * d + this.m_u2.y * p), x = -this.m_limitMass2 * _, b = this.m_limitImpulse2, this.m_limitImpulse2 = r.Max(0, this.m_limitImpulse2 + x), v = -(x = this.m_limitImpulse2 - b) * this.m_u2.x, y = -x * this.m_u2.y, i.m_linearVelocity.x += i.m_invMass * v, i.m_linearVelocity.y += i.m_invMass * y, i.m_angularVelocity += i.m_invI * (l * y - c * v));
    }, S.prototype.SolvePositionConstraints = function (t) {
      undefined === t && (t = 0);
      var n, i = this.m_bodyA, o = this.m_bodyB, s = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x, a = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y, l = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x, c = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y, h = 0, u = 0, d = 0, p = 0, f = 0, g = 0, v = 0, y = 0, _ = 0, x = 0, b = 0, w = 0, S = 0, E = 0;
      return this.m_state == m.e_atUpperLimit && (n = i.m_xf.R, h = this.m_localAnchor1.x - i.m_sweep.localCenter.x, u = this.m_localAnchor1.y - i.m_sweep.localCenter.y, S = n.col1.x * h + n.col2.x * u, u = n.col1.y * h + n.col2.y * u, h = S, n = o.m_xf.R, d = this.m_localAnchor2.x - o.m_sweep.localCenter.x, p = this.m_localAnchor2.y - o.m_sweep.localCenter.y, S = n.col1.x * d + n.col2.x * p, p = n.col1.y * d + n.col2.y * p, d = S, f = i.m_sweep.c.x + h, g = i.m_sweep.c.y + u, v = o.m_sweep.c.x + d, y = o.m_sweep.c.y + p, this.m_u1.Set(f - s, g - a), this.m_u2.Set(v - l, y - c), _ = this.m_u1.Length(), x = this.m_u2.Length(), _ > e.b2_linearSlop ? this.m_u1.Multiply(1 / _) : this.m_u1.SetZero(), x > e.b2_linearSlop ? this.m_u2.Multiply(1 / x) : this.m_u2.SetZero(), b = this.m_constant - _ - this.m_ratio * x, E = r.Max(E, -b), b = r.Clamp(b + e.b2_linearSlop, -e.b2_maxLinearCorrection, 0), f = -(w = -this.m_pulleyMass * b) * this.m_u1.x, g = -w * this.m_u1.y, v = -this.m_ratio * w * this.m_u2.x, y = -this.m_ratio * w * this.m_u2.y, i.m_sweep.c.x += i.m_invMass * f, i.m_sweep.c.y += i.m_invMass * g, i.m_sweep.a += i.m_invI * (h * g - u * f), o.m_sweep.c.x += o.m_invMass * v, o.m_sweep.c.y += o.m_invMass * y, o.m_sweep.a += o.m_invI * (d * y - p * v), i.SynchronizeTransform(), o.SynchronizeTransform()), this.m_limitState1 == m.e_atUpperLimit && (n = i.m_xf.R, h = this.m_localAnchor1.x - i.m_sweep.localCenter.x, u = this.m_localAnchor1.y - i.m_sweep.localCenter.y, S = n.col1.x * h + n.col2.x * u, u = n.col1.y * h + n.col2.y * u, h = S, f = i.m_sweep.c.x + h, g = i.m_sweep.c.y + u, this.m_u1.Set(f - s, g - a), (_ = this.m_u1.Length()) > e.b2_linearSlop ? (this.m_u1.x *= 1 / _, this.m_u1.y *= 1 / _) : this.m_u1.SetZero(), b = this.m_maxLength1 - _, E = r.Max(E, -b), b = r.Clamp(b + e.b2_linearSlop, -e.b2_maxLinearCorrection, 0), f = -(w = -this.m_limitMass1 * b) * this.m_u1.x, g = -w * this.m_u1.y, i.m_sweep.c.x += i.m_invMass * f, i.m_sweep.c.y += i.m_invMass * g, i.m_sweep.a += i.m_invI * (h * g - u * f), i.SynchronizeTransform()), this.m_limitState2 == m.e_atUpperLimit && (n = o.m_xf.R, d = this.m_localAnchor2.x - o.m_sweep.localCenter.x, p = this.m_localAnchor2.y - o.m_sweep.localCenter.y, S = n.col1.x * d + n.col2.x * p, p = n.col1.y * d + n.col2.y * p, d = S, v = o.m_sweep.c.x + d, y = o.m_sweep.c.y + p, this.m_u2.Set(v - l, y - c), (x = this.m_u2.Length()) > e.b2_linearSlop ? (this.m_u2.x *= 1 / x, this.m_u2.y *= 1 / x) : this.m_u2.SetZero(), b = this.m_maxLength2 - x, E = r.Max(E, -b), b = r.Clamp(b + e.b2_linearSlop, -e.b2_maxLinearCorrection, 0), v = -(w = -this.m_limitMass2 * b) * this.m_u2.x, y = -w * this.m_u2.y, o.m_sweep.c.x += o.m_invMass * v, o.m_sweep.c.y += o.m_invMass * y, o.m_sweep.a += o.m_invI * (d * y - p * v), o.SynchronizeTransform()), E < e.b2_linearSlop;
    }, i.postDefs.push(function () {
      i.Dynamics.Joints.b2PulleyJoint.b2_minPulleyLength = 2;
    }), i.inherit(E, i.Dynamics.Joints.b2JointDef), E.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, E.b2PulleyJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.groundAnchorA = new o, this.groundAnchorB = new o, this.localAnchorA = new o, this.localAnchorB = new o;
    }, E.prototype.b2PulleyJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_pulleyJoint, this.groundAnchorA.Set(-1, 1), this.groundAnchorB.Set(1, 1), this.localAnchorA.Set(-1, 0), this.localAnchorB.Set(1, 0), this.lengthA = 0, this.maxLengthA = 0, this.lengthB = 0, this.maxLengthB = 0, this.ratio = 1, this.collideConnected = true;
    }, E.prototype.Initialize = function (e, t, n, i, r, o, s) {
      undefined === s && (s = 0), this.bodyA = e, this.bodyB = t, this.groundAnchorA.SetV(n), this.groundAnchorB.SetV(i), this.localAnchorA = this.bodyA.GetLocalPoint(r), this.localAnchorB = this.bodyB.GetLocalPoint(o);
      var a = r.x - n.x, l = r.y - n.y;
      this.lengthA = Math.sqrt(a * a + l * l);
      var c = o.x - i.x, h = o.y - i.y;
      this.lengthB = Math.sqrt(c * c + h * h), this.ratio = s;
      var u = this.lengthA + this.ratio * this.lengthB;
      this.maxLengthA = u - this.ratio * S.b2_minPulleyLength, this.maxLengthB = (u - S.b2_minPulleyLength) / this.ratio;
    }, i.inherit(q, i.Dynamics.Joints.b2Joint), q.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, q.b2RevoluteJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.K = new t, this.K1 = new t, this.K2 = new t, this.K3 = new t, this.impulse3 = new s, this.impulse2 = new o, this.reduced = new o, this.m_localAnchor1 = new o, this.m_localAnchor2 = new o, this.m_impulse = new s, this.m_mass = new n;
    }, q.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
    }, q.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
    }, q.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * this.m_impulse.x, e * this.m_impulse.y);
    }, q.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), e * this.m_impulse.z;
    }, q.prototype.GetJointAngle = function () {
      return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle;
    }, q.prototype.GetJointSpeed = function () {
      return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;
    }, q.prototype.IsLimitEnabled = function () {
      return this.m_enableLimit;
    }, q.prototype.EnableLimit = function (e) {
      this.m_enableLimit = e;
    }, q.prototype.GetLowerLimit = function () {
      return this.m_lowerAngle;
    }, q.prototype.GetUpperLimit = function () {
      return this.m_upperAngle;
    }, q.prototype.SetLimits = function (e, t) {
      undefined === e && (e = 0), undefined === t && (t = 0), this.m_lowerAngle = e, this.m_upperAngle = t;
    }, q.prototype.IsMotorEnabled = function () {
      return this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_enableMotor;
    }, q.prototype.EnableMotor = function (e) {
      this.m_enableMotor = e;
    }, q.prototype.SetMotorSpeed = function (e) {
      undefined === e && (e = 0), this.m_bodyA.SetAwake(true), this.m_bodyB.SetAwake(true), this.m_motorSpeed = e;
    }, q.prototype.GetMotorSpeed = function () {
      return this.m_motorSpeed;
    }, q.prototype.SetMaxMotorTorque = function (e) {
      undefined === e && (e = 0), this.m_maxMotorTorque = e;
    }, q.prototype.GetMotorTorque = function () {
      return this.m_maxMotorTorque;
    }, q.prototype.b2RevoluteJoint = function (e) {
      this.__super.b2Joint.call(this, e), this.m_localAnchor1.SetV(e.localAnchorA), this.m_localAnchor2.SetV(e.localAnchorB), this.m_referenceAngle = e.referenceAngle, this.m_impulse.SetZero(), this.m_motorImpulse = 0, this.m_lowerAngle = e.lowerAngle, this.m_upperAngle = e.upperAngle, this.m_maxMotorTorque = e.maxMotorTorque, this.m_motorSpeed = e.motorSpeed, this.m_enableLimit = e.enableLimit, this.m_enableMotor = e.enableMotor, this.m_limitState = m.e_inactiveLimit;
    }, q.prototype.InitVelocityConstraints = function (t) {
      var n, i = this.m_bodyA, o = this.m_bodyB, s = 0;
      this.m_enableMotor || this.m_enableLimit, n = i.m_xf.R;
      var a = this.m_localAnchor1.x - i.m_sweep.localCenter.x, l = this.m_localAnchor1.y - i.m_sweep.localCenter.y;
      s = n.col1.x * a + n.col2.x * l, l = n.col1.y * a + n.col2.y * l, a = s, n = o.m_xf.R;
      var c = this.m_localAnchor2.x - o.m_sweep.localCenter.x, h = this.m_localAnchor2.y - o.m_sweep.localCenter.y;
      s = n.col1.x * c + n.col2.x * h, h = n.col1.y * c + n.col2.y * h, c = s;
      var u = i.m_invMass, d = o.m_invMass, p = i.m_invI, f = o.m_invI;
      if (this.m_mass.col1.x = u + d + l * l * p + h * h * f, this.m_mass.col2.x = -l * a * p - h * c * f, this.m_mass.col3.x = -l * p - h * f, this.m_mass.col1.y = this.m_mass.col2.x, this.m_mass.col2.y = u + d + a * a * p + c * c * f, this.m_mass.col3.y = a * p + c * f, this.m_mass.col1.z = this.m_mass.col3.x, this.m_mass.col2.z = this.m_mass.col3.y, this.m_mass.col3.z = p + f, this.m_motorMass = 1 / (p + f), 0 == this.m_enableMotor && (this.m_motorImpulse = 0), this.m_enableLimit) {
        var g = o.m_sweep.a - i.m_sweep.a - this.m_referenceAngle;
        r.Abs(this.m_upperAngle - this.m_lowerAngle) < 2 * e.b2_angularSlop ? this.m_limitState = m.e_equalLimits : g <= this.m_lowerAngle ? (this.m_limitState != m.e_atLowerLimit && (this.m_impulse.z = 0), this.m_limitState = m.e_atLowerLimit) : g >= this.m_upperAngle ? (this.m_limitState != m.e_atUpperLimit && (this.m_impulse.z = 0), this.m_limitState = m.e_atUpperLimit) : (this.m_limitState = m.e_inactiveLimit, this.m_impulse.z = 0);
      } else this.m_limitState = m.e_inactiveLimit;
      if (t.warmStarting) {
        this.m_impulse.x *= t.dtRatio, this.m_impulse.y *= t.dtRatio, this.m_motorImpulse *= t.dtRatio;
        var v = this.m_impulse.x, y = this.m_impulse.y;
        i.m_linearVelocity.x -= u * v, i.m_linearVelocity.y -= u * y, i.m_angularVelocity -= p * (a * y - l * v + this.m_motorImpulse + this.m_impulse.z), o.m_linearVelocity.x += d * v, o.m_linearVelocity.y += d * y, o.m_angularVelocity += f * (c * y - h * v + this.m_motorImpulse + this.m_impulse.z);
      } else this.m_impulse.SetZero(), this.m_motorImpulse = 0;
    }, q.prototype.SolveVelocityConstraints = function (e) {
      var t, n = this.m_bodyA, i = this.m_bodyB, o = 0, s = 0, a = 0, l = 0, c = 0, h = n.m_linearVelocity, u = n.m_angularVelocity, d = i.m_linearVelocity, p = i.m_angularVelocity, f = n.m_invMass, g = i.m_invMass, v = n.m_invI, y = i.m_invI;
      if (this.m_enableMotor && this.m_limitState != m.e_equalLimits) {
        var _ = p - u - this.m_motorSpeed, x = this.m_motorMass * -_, b = this.m_motorImpulse, w = e.dt * this.m_maxMotorTorque;
        this.m_motorImpulse = r.Clamp(this.m_motorImpulse + x, -w, w), u -= v * (x = this.m_motorImpulse - b), p += y * x;
      }
      if (this.m_enableLimit && this.m_limitState != m.e_inactiveLimit) {
        t = n.m_xf.R, s = this.m_localAnchor1.x - n.m_sweep.localCenter.x, a = this.m_localAnchor1.y - n.m_sweep.localCenter.y, o = t.col1.x * s + t.col2.x * a, a = t.col1.y * s + t.col2.y * a, s = o, t = i.m_xf.R, l = this.m_localAnchor2.x - i.m_sweep.localCenter.x, c = this.m_localAnchor2.y - i.m_sweep.localCenter.y, o = t.col1.x * l + t.col2.x * c, c = t.col1.y * l + t.col2.y * c, l = o;
        var S = d.x + -p * c - h.x - -u * a, E = d.y + p * l - h.y - u * s, q = p - u;
        this.m_mass.Solve33(this.impulse3, -S, -E, -q), this.m_limitState == m.e_equalLimits ? this.m_impulse.Add(this.impulse3) : this.m_limitState == m.e_atLowerLimit ? this.m_impulse.z + this.impulse3.z < 0 && (this.m_mass.Solve22(this.reduced, -S, -E), this.impulse3.x = this.reduced.x, this.impulse3.y = this.reduced.y, this.impulse3.z = -this.m_impulse.z, this.m_impulse.x += this.reduced.x, this.m_impulse.y += this.reduced.y, this.m_impulse.z = 0) : this.m_limitState == m.e_atUpperLimit && this.m_impulse.z + this.impulse3.z > 0 && (this.m_mass.Solve22(this.reduced, -S, -E), this.impulse3.x = this.reduced.x, this.impulse3.y = this.reduced.y, this.impulse3.z = -this.m_impulse.z, this.m_impulse.x += this.reduced.x, this.m_impulse.y += this.reduced.y, this.m_impulse.z = 0), h.x -= f * this.impulse3.x, h.y -= f * this.impulse3.y, u -= v * (s * this.impulse3.y - a * this.impulse3.x + this.impulse3.z), d.x += g * this.impulse3.x, d.y += g * this.impulse3.y, p += y * (l * this.impulse3.y - c * this.impulse3.x + this.impulse3.z);
      } else {
        t = n.m_xf.R, s = this.m_localAnchor1.x - n.m_sweep.localCenter.x, a = this.m_localAnchor1.y - n.m_sweep.localCenter.y, o = t.col1.x * s + t.col2.x * a, a = t.col1.y * s + t.col2.y * a, s = o, t = i.m_xf.R, l = this.m_localAnchor2.x - i.m_sweep.localCenter.x, c = this.m_localAnchor2.y - i.m_sweep.localCenter.y, o = t.col1.x * l + t.col2.x * c, c = t.col1.y * l + t.col2.y * c, l = o;
        var T = d.x + -p * c - h.x - -u * a, A = d.y + p * l - h.y - u * s;
        this.m_mass.Solve22(this.impulse2, -T, -A), this.m_impulse.x += this.impulse2.x, this.m_impulse.y += this.impulse2.y, h.x -= f * this.impulse2.x, h.y -= f * this.impulse2.y, u -= v * (s * this.impulse2.y - a * this.impulse2.x), d.x += g * this.impulse2.x, d.y += g * this.impulse2.y, p += y * (l * this.impulse2.y - c * this.impulse2.x);
      }
      n.m_linearVelocity.SetV(h), n.m_angularVelocity = u, i.m_linearVelocity.SetV(d), i.m_angularVelocity = p;
    }, q.prototype.SolvePositionConstraints = function (t) {
      undefined === t && (t = 0);
      var n, i, o = 0, s = this.m_bodyA, a = this.m_bodyB, l = 0, c = 0, h = 0, u = 0;
      if (this.m_enableLimit && this.m_limitState != m.e_inactiveLimit) {
        var d = a.m_sweep.a - s.m_sweep.a - this.m_referenceAngle, p = 0;
        this.m_limitState == m.e_equalLimits ? (o = r.Clamp(d - this.m_lowerAngle, -e.b2_maxAngularCorrection, e.b2_maxAngularCorrection), p = -this.m_motorMass * o, l = r.Abs(o)) : this.m_limitState == m.e_atLowerLimit ? (l = -(o = d - this.m_lowerAngle), o = r.Clamp(o + e.b2_angularSlop, -e.b2_maxAngularCorrection, 0), p = -this.m_motorMass * o) : this.m_limitState == m.e_atUpperLimit && (l = o = d - this.m_upperAngle, o = r.Clamp(o - e.b2_angularSlop, 0, e.b2_maxAngularCorrection), p = -this.m_motorMass * o), s.m_sweep.a -= s.m_invI * p, a.m_sweep.a += a.m_invI * p, s.SynchronizeTransform(), a.SynchronizeTransform();
      }
      n = s.m_xf.R;
      var f = this.m_localAnchor1.x - s.m_sweep.localCenter.x, g = this.m_localAnchor1.y - s.m_sweep.localCenter.y;
      c = n.col1.x * f + n.col2.x * g, g = n.col1.y * f + n.col2.y * g, f = c, n = a.m_xf.R;
      var v = this.m_localAnchor2.x - a.m_sweep.localCenter.x, y = this.m_localAnchor2.y - a.m_sweep.localCenter.y;
      c = n.col1.x * v + n.col2.x * y, y = n.col1.y * v + n.col2.y * y, v = c;
      var _ = a.m_sweep.c.x + v - s.m_sweep.c.x - f, x = a.m_sweep.c.y + y - s.m_sweep.c.y - g, b = _ * _ + x * x, w = Math.sqrt(b);
      i = w;
      var S = s.m_invMass, E = a.m_invMass, T = s.m_invI, A = a.m_invI, M = 10 * e.b2_linearSlop;
      if (b > M * M) {
        var C = 1 / (S + E);
        h = C * -_, u = C * -x;
        s.m_sweep.c.x -= 0.5 * S * h, s.m_sweep.c.y -= 0.5 * S * u, a.m_sweep.c.x += 0.5 * E * h, a.m_sweep.c.y += 0.5 * E * u, _ = a.m_sweep.c.x + v - s.m_sweep.c.x - f, x = a.m_sweep.c.y + y - s.m_sweep.c.y - g;
      }
      return this.K1.col1.x = S + E, this.K1.col2.x = 0, this.K1.col1.y = 0, this.K1.col2.y = S + E, this.K2.col1.x = T * g * g, this.K2.col2.x = -T * f * g, this.K2.col1.y = -T * f * g, this.K2.col2.y = T * f * f, this.K3.col1.x = A * y * y, this.K3.col2.x = -A * v * y, this.K3.col1.y = -A * v * y, this.K3.col2.y = A * v * v, this.K.SetM(this.K1), this.K.AddM(this.K2), this.K.AddM(this.K3), this.K.Solve(q.tImpulse, -_, -x), h = q.tImpulse.x, u = q.tImpulse.y, s.m_sweep.c.x -= s.m_invMass * h, s.m_sweep.c.y -= s.m_invMass * u, s.m_sweep.a -= s.m_invI * (f * u - g * h), a.m_sweep.c.x += a.m_invMass * h, a.m_sweep.c.y += a.m_invMass * u, a.m_sweep.a += a.m_invI * (v * u - y * h), s.SynchronizeTransform(), a.SynchronizeTransform(), i <= e.b2_linearSlop && l <= e.b2_angularSlop;
    }, i.postDefs.push(function () {
      i.Dynamics.Joints.b2RevoluteJoint.tImpulse = new o;
    }), i.inherit(T, i.Dynamics.Joints.b2JointDef), T.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, T.b2RevoluteJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.localAnchorA = new o, this.localAnchorB = new o;
    }, T.prototype.b2RevoluteJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_revoluteJoint, this.localAnchorA.Set(0, 0), this.localAnchorB.Set(0, 0), this.referenceAngle = 0, this.lowerAngle = 0, this.upperAngle = 0, this.maxMotorTorque = 0, this.motorSpeed = 0, this.enableLimit = false, this.enableMotor = false;
    }, T.prototype.Initialize = function (e, t, n) {
      this.bodyA = e, this.bodyB = t, this.localAnchorA = this.bodyA.GetLocalPoint(n), this.localAnchorB = this.bodyB.GetLocalPoint(n), this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
    }, i.inherit(A, i.Dynamics.Joints.b2Joint), A.prototype.__super = i.Dynamics.Joints.b2Joint.prototype, A.b2WeldJoint = function () {
      i.Dynamics.Joints.b2Joint.b2Joint.apply(this, arguments), this.m_localAnchorA = new o, this.m_localAnchorB = new o, this.m_impulse = new s, this.m_mass = new n;
    }, A.prototype.GetAnchorA = function () {
      return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);
    }, A.prototype.GetAnchorB = function () {
      return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);
    }, A.prototype.GetReactionForce = function (e) {
      return undefined === e && (e = 0), new o(e * this.m_impulse.x, e * this.m_impulse.y);
    }, A.prototype.GetReactionTorque = function (e) {
      return undefined === e && (e = 0), e * this.m_impulse.z;
    }, A.prototype.b2WeldJoint = function (e) {
      this.__super.b2Joint.call(this, e), this.m_localAnchorA.SetV(e.localAnchorA), this.m_localAnchorB.SetV(e.localAnchorB), this.m_referenceAngle = e.referenceAngle, this.m_impulse.SetZero(), this.m_mass = new n;
    }, A.prototype.InitVelocityConstraints = function (e) {
      var t, n = 0, i = this.m_bodyA, r = this.m_bodyB;
      t = i.m_xf.R;
      var o = this.m_localAnchorA.x - i.m_sweep.localCenter.x, s = this.m_localAnchorA.y - i.m_sweep.localCenter.y;
      n = t.col1.x * o + t.col2.x * s, s = t.col1.y * o + t.col2.y * s, o = n, t = r.m_xf.R;
      var a = this.m_localAnchorB.x - r.m_sweep.localCenter.x, l = this.m_localAnchorB.y - r.m_sweep.localCenter.y;
      n = t.col1.x * a + t.col2.x * l, l = t.col1.y * a + t.col2.y * l, a = n;
      var c = i.m_invMass, h = r.m_invMass, u = i.m_invI, d = r.m_invI;
      this.m_mass.col1.x = c + h + s * s * u + l * l * d, this.m_mass.col2.x = -s * o * u - l * a * d, this.m_mass.col3.x = -s * u - l * d, this.m_mass.col1.y = this.m_mass.col2.x, this.m_mass.col2.y = c + h + o * o * u + a * a * d, this.m_mass.col3.y = o * u + a * d, this.m_mass.col1.z = this.m_mass.col3.x, this.m_mass.col2.z = this.m_mass.col3.y, this.m_mass.col3.z = u + d, e.warmStarting ? (this.m_impulse.x *= e.dtRatio, this.m_impulse.y *= e.dtRatio, this.m_impulse.z *= e.dtRatio, i.m_linearVelocity.x -= c * this.m_impulse.x, i.m_linearVelocity.y -= c * this.m_impulse.y, i.m_angularVelocity -= u * (o * this.m_impulse.y - s * this.m_impulse.x + this.m_impulse.z), r.m_linearVelocity.x += h * this.m_impulse.x, r.m_linearVelocity.y += h * this.m_impulse.y, r.m_angularVelocity += d * (a * this.m_impulse.y - l * this.m_impulse.x + this.m_impulse.z)) : this.m_impulse.SetZero();
    }, A.prototype.SolveVelocityConstraints = function (e) {
      var t, n = 0, i = this.m_bodyA, r = this.m_bodyB, o = i.m_linearVelocity, a = i.m_angularVelocity, l = r.m_linearVelocity, c = r.m_angularVelocity, h = i.m_invMass, u = r.m_invMass, d = i.m_invI, p = r.m_invI;
      t = i.m_xf.R;
      var m = this.m_localAnchorA.x - i.m_sweep.localCenter.x, f = this.m_localAnchorA.y - i.m_sweep.localCenter.y;
      n = t.col1.x * m + t.col2.x * f, f = t.col1.y * m + t.col2.y * f, m = n, t = r.m_xf.R;
      var g = this.m_localAnchorB.x - r.m_sweep.localCenter.x, v = this.m_localAnchorB.y - r.m_sweep.localCenter.y;
      n = t.col1.x * g + t.col2.x * v, v = t.col1.y * g + t.col2.y * v, g = n;
      var y = l.x - c * v - o.x + a * f, _ = l.y + c * g - o.y - a * m, x = c - a, b = new s;
      this.m_mass.Solve33(b, -y, -_, -x), this.m_impulse.Add(b), o.x -= h * b.x, o.y -= h * b.y, a -= d * (m * b.y - f * b.x + b.z), l.x += u * b.x, l.y += u * b.y, c += p * (g * b.y - v * b.x + b.z), i.m_angularVelocity = a, r.m_angularVelocity = c;
    }, A.prototype.SolvePositionConstraints = function (t) {
      var n;
      undefined === t && (t = 0);
      var i = 0, o = this.m_bodyA, a = this.m_bodyB;
      n = o.m_xf.R;
      var l = this.m_localAnchorA.x - o.m_sweep.localCenter.x, c = this.m_localAnchorA.y - o.m_sweep.localCenter.y;
      i = n.col1.x * l + n.col2.x * c, c = n.col1.y * l + n.col2.y * c, l = i, n = a.m_xf.R;
      var h = this.m_localAnchorB.x - a.m_sweep.localCenter.x, u = this.m_localAnchorB.y - a.m_sweep.localCenter.y;
      i = n.col1.x * h + n.col2.x * u, u = n.col1.y * h + n.col2.y * u, h = i;
      var d = o.m_invMass, p = a.m_invMass, m = o.m_invI, f = a.m_invI, g = a.m_sweep.c.x + h - o.m_sweep.c.x - l, v = a.m_sweep.c.y + u - o.m_sweep.c.y - c, y = a.m_sweep.a - o.m_sweep.a - this.m_referenceAngle, _ = 10 * e.b2_linearSlop, x = Math.sqrt(g * g + v * v), b = r.Abs(y);
      x > _ && (m *= 1, f *= 1), this.m_mass.col1.x = d + p + c * c * m + u * u * f, this.m_mass.col2.x = -c * l * m - u * h * f, this.m_mass.col3.x = -c * m - u * f, this.m_mass.col1.y = this.m_mass.col2.x, this.m_mass.col2.y = d + p + l * l * m + h * h * f, this.m_mass.col3.y = l * m + h * f, this.m_mass.col1.z = this.m_mass.col3.x, this.m_mass.col2.z = this.m_mass.col3.y, this.m_mass.col3.z = m + f;
      var w = new s;
      return this.m_mass.Solve33(w, -g, -v, -y), o.m_sweep.c.x -= d * w.x, o.m_sweep.c.y -= d * w.y, o.m_sweep.a -= m * (l * w.y - c * w.x + w.z), a.m_sweep.c.x += p * w.x, a.m_sweep.c.y += p * w.y, a.m_sweep.a += f * (h * w.y - u * w.x + w.z), o.SynchronizeTransform(), a.SynchronizeTransform(), x <= e.b2_linearSlop && b <= e.b2_angularSlop;
    }, i.inherit(M, i.Dynamics.Joints.b2JointDef), M.prototype.__super = i.Dynamics.Joints.b2JointDef.prototype, M.b2WeldJointDef = function () {
      i.Dynamics.Joints.b2JointDef.b2JointDef.apply(this, arguments), this.localAnchorA = new o, this.localAnchorB = new o;
    }, M.prototype.b2WeldJointDef = function () {
      this.__super.b2JointDef.call(this), this.type = m.e_weldJoint, this.referenceAngle = 0;
    }, M.prototype.Initialize = function (e, t, n) {
      this.bodyA = e, this.bodyB = t, this.localAnchorA.SetV(this.bodyA.GetLocalPoint(n)), this.localAnchorB.SetV(this.bodyB.GetLocalPoint(n)), this.referenceAngle = this.bodyB.GetAngle() - this.bodyA.GetAngle();
    };
  }(), (V = i.Dynamics.b2DebugDraw).b2DebugDraw = function () {
    this.m_drawScale = 1, this.m_lineThickness = 1, this.m_alpha = 1, this.m_fillAlpha = 1, this.m_xformScale = 1, this.m_sprite = {graphics: {clear: function () {}}};
  }, V.prototype._color = function (e, t) {
    return "rgba(" + ((16711680 & e) >> 16) + "," + ((65280 & e) >> 8) + "," + (255 & e) + "," + t + ")";
  }, V.prototype.b2DebugDraw = function () {
    this.m_drawFlags = 0;
  }, V.prototype.SetFlags = function (e) {
    undefined === e && (e = 0), this.m_drawFlags = e;
  }, V.prototype.GetFlags = function () {
    return this.m_drawFlags;
  }, V.prototype.AppendFlags = function (e) {
    undefined === e && (e = 0), this.m_drawFlags |= e;
  }, V.prototype.ClearFlags = function (e) {
    undefined === e && (e = 0), this.m_drawFlags &= ~e;
  }, V.prototype.SetSprite = function (e) {
    this.m_ctx = e;
  }, V.prototype.GetSprite = function () {
    return this.m_ctx;
  }, V.prototype.SetDrawScale = function (e) {
    undefined === e && (e = 0), this.m_drawScale = e;
  }, V.prototype.GetDrawScale = function () {
    return this.m_drawScale;
  }, V.prototype.SetLineThickness = function (e) {
    undefined === e && (e = 0), this.m_lineThickness = e, this.m_ctx.strokeWidth = e;
  }, V.prototype.GetLineThickness = function () {
    return this.m_lineThickness;
  }, V.prototype.SetAlpha = function (e) {
    undefined === e && (e = 0), this.m_alpha = e;
  }, V.prototype.GetAlpha = function () {
    return this.m_alpha;
  }, V.prototype.SetFillAlpha = function (e) {
    undefined === e && (e = 0), this.m_fillAlpha = e;
  }, V.prototype.GetFillAlpha = function () {
    return this.m_fillAlpha;
  }, V.prototype.SetXFormScale = function (e) {
    undefined === e && (e = 0), this.m_xformScale = e;
  }, V.prototype.GetXFormScale = function () {
    return this.m_xformScale;
  }, V.prototype.DrawPolygon = function (e, t, n) {
    if (t) {
      var i = this.m_ctx, r = this.m_drawScale;
      i.beginPath(), i.strokeStyle = this._color(n.color, this.m_alpha), i.moveTo(e[0].x * r, e[0].y * r);
      for (var o = 1; o < t; o++) i.lineTo(e[o].x * r, e[o].y * r);
      i.lineTo(e[0].x * r, e[0].y * r), i.closePath(), i.stroke();
    }
  }, V.prototype.DrawSolidPolygon = function (e, t, n) {
    if (t) {
      var i = this.m_ctx, r = this.m_drawScale;
      i.beginPath(), i.strokeStyle = this._color(n.color, this.m_alpha), i.fillStyle = this._color(n.color, this.m_fillAlpha), i.moveTo(e[0].x * r, e[0].y * r);
      for (var o = 1; o < t; o++) i.lineTo(e[o].x * r, e[o].y * r);
      i.lineTo(e[0].x * r, e[0].y * r), i.closePath(), i.fill(), i.stroke();
    }
  }, V.prototype.DrawCircle = function (e, t, n) {
    if (t) {
      var i = this.m_ctx, r = this.m_drawScale;
      i.beginPath(), i.strokeStyle = this._color(n.color, this.m_alpha), i.arc(e.x * r, e.y * r, t * r, 0, 2 * Math.PI, true), i.closePath(), i.stroke();
    }
  }, V.prototype.DrawSolidCircle = function (e, t, n, i) {
    if (t) {
      var r = this.m_ctx, o = this.m_drawScale, s = e.x * o, a = e.y * o;
      r.moveTo(0, 0), r.beginPath(), r.strokeStyle = this._color(i.color, this.m_alpha), r.fillStyle = this._color(i.color, this.m_fillAlpha), r.arc(s, a, t * o, 0, 2 * Math.PI, true), r.moveTo(s, a), r.lineTo((e.x + n.x * t) * o, (e.y + n.y * t) * o), r.closePath(), r.fill(), r.stroke();
    }
  }, V.prototype.DrawSegment = function (e, t, n) {
    var i = this.m_ctx, r = this.m_drawScale;
    i.strokeStyle = this._color(n.color, this.m_alpha), i.beginPath(), i.moveTo(e.x * r, e.y * r), i.lineTo(t.x * r, t.y * r), i.closePath(), i.stroke();
  }, V.prototype.DrawTransform = function (e) {
    var t = this.m_ctx, n = this.m_drawScale;
    t.beginPath(), t.strokeStyle = this._color(16711680, this.m_alpha), t.moveTo(e.position.x * n, e.position.y * n), t.lineTo((e.position.x + this.m_xformScale * e.R.col1.x) * n, (e.position.y + this.m_xformScale * e.R.col1.y) * n), t.strokeStyle = this._color(65280, this.m_alpha), t.moveTo(e.position.x * n, e.position.y * n), t.lineTo((e.position.x + this.m_xformScale * e.R.col2.x) * n, (e.position.y + this.m_xformScale * e.R.col2.y) * n), t.closePath(), t.stroke();
  }, G = 0; G < i.postDefs.length; ++G) i.postDefs[G]();
  e.exports = i;
}, function (e, t, n) {
  const i = n(63).words, r = n(64).array;
  e.exports = class {
    constructor(e = {}) {
      Object.assign(this, {list: e.emptyList && [] || Array.prototype.concat.apply(i, [r, e.list || []]), exclude: e.exclude || [], splitRegex: e.splitRegex || /\b/, placeHolder: e.placeHolder || "*", regex: e.regex || /[^a-zA-Z0-9|\$|\@]|\^/g, replaceRegex: e.replaceRegex || /\w/g});
    }
    isProfane(e) {
      return this.list.filter(t => {
        const n = new RegExp(`\\b${t.replace(/(\W)/g, "\\$1")}\\b`, "gi");
        return !this.exclude.includes(t.toLowerCase()) && n.test(e);
      }).length > 0 || false;
    }
    replaceWord(e) {
      return e.replace(this.regex, "").replace(this.replaceRegex, this.placeHolder);
    }
    clean(e) {
      return e.split(this.splitRegex).map(e => this.isProfane(e) ? this.replaceWord(e) : e).join(this.splitRegex.exec(e)[0]);
    }
    addWords() {
      let e = Array.from(arguments);
      this.list.push(...e), e.map(e => e.toLowerCase()).forEach(e => {
        this.exclude.includes(e) && this.exclude.splice(this.exclude.indexOf(e), 1);
      });
    }
    removeWords() {
      this.exclude.push(...Array.from(arguments).map(e => e.toLowerCase()));
    }
  };
}, function (e, t, n) {
  e.exports = n(75).default;
}, function (e, t) {
  var n, i, r = e.exports = {};
  function o() {
    throw new Error("setTimeout has not been defined");
  }
  function s() {
    throw new Error("clearTimeout has not been defined");
  }
  function a(e) {
    if (n === setTimeout) return setTimeout(e, 0);
    if ((n === o || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0);
    try {
      return n(e, 0);
    } catch (t) {
      try {
        return n.call(null, e, 0);
      } catch (t) {
        return n.call(this, e, 0);
      }
    }
  }
  !function () {
    try {
      n = "function" == typeof setTimeout ? setTimeout : o;
    } catch (e) {
      n = o;
    }
    try {
      i = "function" == typeof clearTimeout ? clearTimeout : s;
    } catch (e) {
      i = s;
    }
  }();
  var l, c = [], h = false, u = -1;
  function d() {
    h && l && (h = false, l.length ? c = l.concat(c) : u = -1, c.length && p());
  }
  function p() {
    if (!h) {
      var e = a(d);
      h = true;
      for (var t = c.length; t;) {
        for (l = c, c = []; ++u < t;) l && l[u].run();
        u = -1, t = c.length;
      }
      l = null, h = false, function (e) {
        if (i === clearTimeout) return clearTimeout(e);
        if ((i === s || !i) && clearTimeout) return i = clearTimeout, clearTimeout(e);
        try {
          i(e);
        } catch (t) {
          try {
            return i.call(null, e);
          } catch (t) {
            return i.call(this, e);
          }
        }
      }(e);
    }
  }
  function m(e, t) {
    this.fun = e, this.array = t;
  }
  function f() {}
  r.nextTick = function (e) {
    var t = new Array(arguments.length - 1);
    if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
    c.push(new m(e, t)), 1 !== c.length || h || a(p);
  }, m.prototype.run = function () {
    this.fun.apply(null, this.array);
  }, r.title = "browser", r.browser = true, r.env = {}, r.argv = [], r.version = "", r.versions = {}, r.on = f, r.addListener = f, r.once = f, r.off = f, r.removeListener = f, r.removeAllListeners = f, r.emit = f, r.prependListener = f, r.prependOnceListener = f, r.listeners = function (e) {
    return [];
  }, r.binding = function (e) {
    throw new Error("process.binding is not supported");
  }, r.cwd = function () {
    return "/";
  }, r.chdir = function (e) {
    throw new Error("process.chdir is not supported");
  }, r.umask = function () {
    return 0;
  };
}, function (e, t, n) {
  var i = n(103)("socket.io-parser"), r = n(106), o = n(107), s = n(27), a = n(28);
  function l() {}
  t.protocol = 4, t.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], t.CONNECT = 0, t.DISCONNECT = 1, t.EVENT = 2, t.ACK = 3, t.ERROR = 4, t.BINARY_EVENT = 5, t.BINARY_ACK = 6, t.Encoder = l, t.Decoder = u;
  var c = t.ERROR + '"encode error"';
  function h(e) {
    var n = "" + e.type;
    if (t.BINARY_EVENT !== e.type && t.BINARY_ACK !== e.type || (n += e.attachments + "-"), e.nsp && "/" !== e.nsp && (n += e.nsp + ","), null != e.id && (n += e.id), null != e.data) {
      var r = function (e) {
        try {
          return JSON.stringify(e);
        } catch (e) {
          return false;
        }
      }(e.data);
      if (false === r) return c;
      n += r;
    }
    return i("encoded %j as %s", e, n), n;
  }
  function u() {
    this.reconstructor = null;
  }
  function d(e) {
    this.reconPack = e, this.buffers = [];
  }
  function p(e) {
    return {type: t.ERROR, data: "parser error: " + e};
  }
  l.prototype.encode = function (e, n) {
    (i("encoding packet %j", e), t.BINARY_EVENT === e.type || t.BINARY_ACK === e.type) ? function (e, t) {
      o.removeBlobs(e, function (e) {
        var n = o.deconstructPacket(e), i = h(n.packet), r = n.buffers;
        r.unshift(i), t(r);
      });
    }(e, n) : n([h(e)]);
  }, r(u.prototype), u.prototype.add = function (e) {
    var n;
    if ("string" == typeof e) n = function (e) {
      var n = 0, r = {type: Number(e.charAt(0))};
      if (null == t.types[r.type]) return p("unknown packet type " + r.type);
      if (t.BINARY_EVENT === r.type || t.BINARY_ACK === r.type) {
        for (var o = ""; "-" !== e.charAt(++n) && (o += e.charAt(n), n != e.length);) ;
        if (o != Number(o) || "-" !== e.charAt(n)) throw new Error("Illegal attachments");
        r.attachments = Number(o);
      }
      if ("/" === e.charAt(n + 1)) for (r.nsp = ""; ++n;) {
        if ("," === (l = e.charAt(n))) break;
        if (r.nsp += l, n === e.length) break;
      } else r.nsp = "/";
      var a = e.charAt(n + 1);
      if ("" !== a && Number(a) == a) {
        for (r.id = ""; ++n;) {
          var l;
          if (null == (l = e.charAt(n)) || Number(l) != l) {
            --n;
            break;
          }
          if (r.id += e.charAt(n), n === e.length) break;
        }
        r.id = Number(r.id);
      }
      if (e.charAt(++n)) {
        var c = function (e) {
          try {
            return JSON.parse(e);
          } catch (e) {
            return false;
          }
        }(e.substr(n));
        if (!(false !== c && (r.type === t.ERROR || s(c)))) return p("invalid payload");
        r.data = c;
      }
      return i("decoded %s as %j", e, r), r;
    }(e), t.BINARY_EVENT === n.type || t.BINARY_ACK === n.type ? (this.reconstructor = new d(n), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", n)) : this.emit("decoded", n); else {
      if (!a(e) && !e.base64) throw new Error("Unknown type: " + e);
      if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");
      (n = this.reconstructor.takeBinaryData(e)) && (this.reconstructor = null, this.emit("decoded", n));
    }
  }, u.prototype.destroy = function () {
    this.reconstructor && this.reconstructor.finishedReconstruction();
  }, d.prototype.takeBinaryData = function (e) {
    if (this.buffers.push(e), this.buffers.length === this.reconPack.attachments) {
      var t = o.reconstructPacket(this.reconPack, this.buffers);
      return this.finishedReconstruction(), t;
    }
    return null;
  }, d.prototype.finishedReconstruction = function () {
    this.reconPack = null, this.buffers = [];
  };
}, function (e, t, n) {
  var i = n(113);
  e.exports = function (e) {
    var t = e.xdomain, n = e.xscheme, r = e.enablesXDR;
    try {
      if ("undefined" != typeof XMLHttpRequest && (!t || i)) return new XMLHttpRequest;
    } catch (e) {}
    try {
      if ("undefined" != typeof XDomainRequest && !n && r) return new XDomainRequest;
    } catch (e) {}
    if (!t) try {
      return new self[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
    } catch (e) {}
  };
}, function (e, t, n) {
  var i = n(3), r = n(20);
  function o(e) {
    this.path = e.path, this.hostname = e.hostname, this.port = e.port, this.secure = e.secure, this.query = e.query, this.timestampParam = e.timestampParam, this.timestampRequests = e.timestampRequests, this.readyState = "", this.agent = e.agent || false, this.socket = e.socket, this.enablesXDR = e.enablesXDR, this.withCredentials = e.withCredentials, this.pfx = e.pfx, this.key = e.key, this.passphrase = e.passphrase, this.cert = e.cert, this.ca = e.ca, this.ciphers = e.ciphers, this.rejectUnauthorized = e.rejectUnauthorized, this.forceNode = e.forceNode, this.isReactNative = e.isReactNative, this.extraHeaders = e.extraHeaders, this.localAddress = e.localAddress;
  }
  e.exports = o, r(o.prototype), o.prototype.onError = function (e, t) {
    var n = new Error(e);
    return n.type = "TransportError", n.description = t, this.emit("error", n), this;
  }, o.prototype.open = function () {
    return "closed" !== this.readyState && "" !== this.readyState || (this.readyState = "opening", this.doOpen()), this;
  }, o.prototype.close = function () {
    return "opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this;
  }, o.prototype.send = function (e) {
    if ("open" !== this.readyState) throw new Error("Transport not open");
    this.write(e);
  }, o.prototype.onOpen = function () {
    this.readyState = "open", this.writable = true, this.emit("open");
  }, o.prototype.onData = function (e) {
    var t = i.decodePacket(e, this.socket.binaryType);
    this.onPacket(t);
  }, o.prototype.onPacket = function (e) {
    this.emit("packet", e);
  }, o.prototype.onClose = function () {
    this.readyState = "closed", this.emit("close");
  };
}, function (e, t, n) {
  function i(e) {
    if (e) return function (e) {
      for (var t in i.prototype) e[t] = i.prototype[t];
      return e;
    }(e);
  }
  e.exports = i, i.prototype.on = i.prototype.addEventListener = function (e, t) {
    return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this;
  }, i.prototype.once = function (e, t) {
    function n() {
      this.off(e, n), t.apply(this, arguments);
    }
    return n.fn = t, this.on(e, n), this;
  }, i.prototype.off = i.prototype.removeListener = i.prototype.removeAllListeners = i.prototype.removeEventListener = function (e, t) {
    if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
    var n, i = this._callbacks["$" + e];
    if (!i) return this;
    if (1 == arguments.length) return delete this._callbacks["$" + e], this;
    for (var r = 0; r < i.length; r++) if ((n = i[r]) === t || n.fn === t) {
      i.splice(r, 1);
      break;
    }
    return this;
  }, i.prototype.emit = function (e) {
    this._callbacks = this._callbacks || {};
    var t = [].slice.call(arguments, 1), n = this._callbacks["$" + e];
    if (n) for (var i = 0, r = (n = n.slice(0)).length; i < r; ++i) n[i].apply(this, t);
    return this;
  }, i.prototype.listeners = function (e) {
    return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || [];
  }, i.prototype.hasListeners = function (e) {
    return !!this.listeners(e).length;
  };
}, function (e, t) {}, function (e, t, n) {
  var i = {"./en.json": 61, "./ru.json": 62};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 22;
}, function (e, t, n) {
  "use strict";
  function i(e) {
    return e && e.__esModule ? e : {default: e};
  }
  t.__esModule = true, t.HandlebarsEnvironment = c;
  var r = n(2), o = i(n(5)), s = n(24), a = n(83), l = i(n(85));
  t.VERSION = "4.3.3";
  t.COMPILER_REVISION = 8;
  t.LAST_COMPATIBLE_COMPILER_REVISION = 7;
  t.REVISION_CHANGES = {1: "<= 1.0.rc.2", 2: "== 1.0.0-rc.3", 3: "== 1.0.0-rc.4", 4: "== 1.x.x", 5: "== 2.0.0-alpha.x", 6: ">= 2.0.0-beta.1", 7: ">= 4.0.0 <4.3.0", 8: ">= 4.3.0"};
  function c(e, t, n) {
    this.helpers = e || {}, this.partials = t || {}, this.decorators = n || {}, s.registerDefaultHelpers(this), a.registerDefaultDecorators(this);
  }
  c.prototype = {constructor: c, logger: l.default, log: l.default.log, registerHelper: function (e, t) {
    if ("[object Object]" === r.toString.call(e)) {
      if (t) throw new o.default("Arg not supported with multiple helpers");
      r.extend(this.helpers, e);
    } else this.helpers[e] = t;
  }, unregisterHelper: function (e) {
    delete this.helpers[e];
  }, registerPartial: function (e, t) {
    if ("[object Object]" === r.toString.call(e)) r.extend(this.partials, e); else {
      if (undefined === t) throw new o.default('Attempting to register a partial called "' + e + '" as undefined');
      this.partials[e] = t;
    }
  }, unregisterPartial: function (e) {
    delete this.partials[e];
  }, registerDecorator: function (e, t) {
    if ("[object Object]" === r.toString.call(e)) {
      if (t) throw new o.default("Arg not supported with multiple decorators");
      r.extend(this.decorators, e);
    } else this.decorators[e] = t;
  }, unregisterDecorator: function (e) {
    delete this.decorators[e];
  }};
  var h = l.default.log;
  t.log = h, t.createFrame = r.createFrame, t.logger = l.default;
}, function (e, t, n) {
  "use strict";
  function i(e) {
    return e && e.__esModule ? e : {default: e};
  }
  t.__esModule = true, t.registerDefaultHelpers = function (e) {
    r.default(e), o.default(e), s.default(e), a.default(e), l.default(e), c.default(e), h.default(e);
  }, t.moveHelperToHooks = function (e, t, n) {
    e.helpers[t] && (e.hooks[t] = e.helpers[t], n || delete e.helpers[t]);
  };
  var r = i(n(76)), o = i(n(77)), s = i(n(78)), a = i(n(79)), l = i(n(80)), c = i(n(81)), h = i(n(82));
}, function (e, t, n) {
  var i = {"./en.json": 95, "./ru.json": 96};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 25;
}, function (e, t) {
  var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, i = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
  e.exports = function (e) {
    var t = e, r = e.indexOf("["), o = e.indexOf("]");
    -1 != r && -1 != o && (e = e.substring(0, r) + e.substring(r, o).replace(/:/g, ";") + e.substring(o, e.length));
    for (var s = n.exec(e || ""), a = {}, l = 14; l--;) a[i[l]] = s[l] || "";
    return -1 != r && -1 != o && (a.source = t, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = true), a;
  };
}, function (e, t) {
  var n = {}.toString;
  e.exports = Array.isArray || function (e) {
    return "[object Array]" == n.call(e);
  };
}, function (e, t, n) {
  (function (t) {
    e.exports = function (e) {
      return n && t.isBuffer(e) || i && (e instanceof ArrayBuffer || r(e));
    };
    var n = "function" == typeof t && "function" == typeof t.isBuffer, i = "function" == typeof ArrayBuffer, r = function (e) {
      return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(e) : e.buffer instanceof ArrayBuffer;
    };
  }.call(this, n(8).Buffer));
}, function (e, t, n) {
  var i = n(111), r = n(35), o = n(36), s = n(17), a = n(37), l = n(38), c = n(7)("socket.io-client:manager"), h = n(34), u = n(128), d = Object.prototype.hasOwnProperty;
  function p(e, t) {
    if (!(this instanceof p)) return new p(e, t);
    e && "object" == typeof e && (t = e, e = undefined), (t = t || {}).path = t.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = t, this.reconnection(false !== t.reconnection), this.reconnectionAttempts(t.reconnectionAttempts || Infinity), this.reconnectionDelay(t.reconnectionDelay || 1e3), this.reconnectionDelayMax(t.reconnectionDelayMax || 5e3), this.randomizationFactor(t.randomizationFactor || 0.5), this.backoff = new u({min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor()}), this.timeout(null == t.timeout ? 2e4 : t.timeout), this.readyState = "closed", this.uri = e, this.connecting = [], this.lastPing = null, this.encoding = false, this.packetBuffer = [];
    var n = t.parser || s;
    this.encoder = new n.Encoder, this.decoder = new n.Decoder, this.autoConnect = false !== t.autoConnect, this.autoConnect && this.open();
  }
  e.exports = p, p.prototype.emitAll = function () {
    for (var e in this.emit.apply(this, arguments), this.nsps) d.call(this.nsps, e) && this.nsps[e].emit.apply(this.nsps[e], arguments);
  }, p.prototype.updateSocketIds = function () {
    for (var e in this.nsps) d.call(this.nsps, e) && (this.nsps[e].id = this.generateId(e));
  }, p.prototype.generateId = function (e) {
    return ("/" === e ? "" : e + "#") + this.engine.id;
  }, o(p.prototype), p.prototype.reconnection = function (e) {
    return arguments.length ? (this._reconnection = !!e, this) : this._reconnection;
  }, p.prototype.reconnectionAttempts = function (e) {
    return arguments.length ? (this._reconnectionAttempts = e, this) : this._reconnectionAttempts;
  }, p.prototype.reconnectionDelay = function (e) {
    return arguments.length ? (this._reconnectionDelay = e, this.backoff && this.backoff.setMin(e), this) : this._reconnectionDelay;
  }, p.prototype.randomizationFactor = function (e) {
    return arguments.length ? (this._randomizationFactor = e, this.backoff && this.backoff.setJitter(e), this) : this._randomizationFactor;
  }, p.prototype.reconnectionDelayMax = function (e) {
    return arguments.length ? (this._reconnectionDelayMax = e, this.backoff && this.backoff.setMax(e), this) : this._reconnectionDelayMax;
  }, p.prototype.timeout = function (e) {
    return arguments.length ? (this._timeout = e, this) : this._timeout;
  }, p.prototype.maybeReconnectOnOpen = function () {
    !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect();
  }, p.prototype.open = p.prototype.connect = function (e, t) {
    if (c("readyState %s", this.readyState), ~this.readyState.indexOf("open")) return this;
    c("opening %s", this.uri), this.engine = i(this.uri, this.opts);
    var n = this.engine, r = this;
    this.readyState = "opening", this.skipReconnect = false;
    var o = a(n, "open", function () {
      r.onopen(), e && e();
    }), s = a(n, "error", function (t) {
      if (c("connect_error"), r.cleanup(), r.readyState = "closed", r.emitAll("connect_error", t), e) {
        var n = new Error("Connection error");
        n.data = t, e(n);
      } else r.maybeReconnectOnOpen();
    });
    if (false !== this._timeout) {
      var l = this._timeout;
      c("connect attempt will timeout after %d", l);
      var h = setTimeout(function () {
        c("connect attempt timed out after %d", l), o.destroy(), n.close(), n.emit("error", "timeout"), r.emitAll("connect_timeout", l);
      }, l);
      this.subs.push({destroy: function () {
        clearTimeout(h);
      }});
    }
    return this.subs.push(o), this.subs.push(s), this;
  }, p.prototype.onopen = function () {
    c("open"), this.cleanup(), this.readyState = "open", this.emit("open");
    var e = this.engine;
    this.subs.push(a(e, "data", l(this, "ondata"))), this.subs.push(a(e, "ping", l(this, "onping"))), this.subs.push(a(e, "pong", l(this, "onpong"))), this.subs.push(a(e, "error", l(this, "onerror"))), this.subs.push(a(e, "close", l(this, "onclose"))), this.subs.push(a(this.decoder, "decoded", l(this, "ondecoded")));
  }, p.prototype.onping = function () {
    this.lastPing = new Date, this.emitAll("ping");
  }, p.prototype.onpong = function () {
    this.emitAll("pong", new Date - this.lastPing);
  }, p.prototype.ondata = function (e) {
    this.decoder.add(e);
  }, p.prototype.ondecoded = function (e) {
    this.emit("packet", e);
  }, p.prototype.onerror = function (e) {
    c("error", e), this.emitAll("error", e);
  }, p.prototype.socket = function (e, t) {
    var n = this.nsps[e];
    if (!n) {
      n = new r(this, e, t), this.nsps[e] = n;
      var i = this;
      n.on("connecting", o), n.on("connect", function () {
        n.id = i.generateId(e);
      }), this.autoConnect && o();
    }
    function o() {
      ~h(i.connecting, n) || i.connecting.push(n);
    }
    return n;
  }, p.prototype.destroy = function (e) {
    var t = h(this.connecting, e);
    ~t && this.connecting.splice(t, 1), this.connecting.length || this.close();
  }, p.prototype.packet = function (e) {
    c("writing packet %j", e);
    var t = this;
    e.query && 0 === e.type && (e.nsp += "?" + e.query), t.encoding ? t.packetBuffer.push(e) : (t.encoding = true, this.encoder.encode(e, function (n) {
      for (var i = 0; i < n.length; i++) t.engine.write(n[i], e.options);
      t.encoding = false, t.processPacketQueue();
    }));
  }, p.prototype.processPacketQueue = function () {
    if (this.packetBuffer.length > 0 && !this.encoding) {
      var e = this.packetBuffer.shift();
      this.packet(e);
    }
  }, p.prototype.cleanup = function () {
    c("cleanup");
    for (var e = this.subs.length, t = 0; t < e; t++) {
      this.subs.shift().destroy();
    }
    this.packetBuffer = [], this.encoding = false, this.lastPing = null, this.decoder.destroy();
  }, p.prototype.close = p.prototype.disconnect = function () {
    c("disconnect"), this.skipReconnect = true, this.reconnecting = false, "opening" === this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close();
  }, p.prototype.onclose = function (e) {
    c("onclose"), this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", e), this._reconnection && !this.skipReconnect && this.reconnect();
  }, p.prototype.reconnect = function () {
    if (this.reconnecting || this.skipReconnect) return this;
    var e = this;
    if (this.backoff.attempts >= this._reconnectionAttempts) c("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = false; else {
      var t = this.backoff.duration();
      c("will wait %dms before reconnect attempt", t), this.reconnecting = true;
      var n = setTimeout(function () {
        e.skipReconnect || (c("attempting reconnect"), e.emitAll("reconnect_attempt", e.backoff.attempts), e.emitAll("reconnecting", e.backoff.attempts), e.skipReconnect || e.open(function (t) {
          t ? (c("reconnect attempt error"), e.reconnecting = false, e.reconnect(), e.emitAll("reconnect_error", t.data)) : (c("reconnect success"), e.onreconnect());
        }));
      }, t);
      this.subs.push({destroy: function () {
        clearTimeout(n);
      }});
    }
  }, p.prototype.onreconnect = function () {
    var e = this.backoff.attempts;
    this.reconnecting = false, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", e);
  };
}, function (e, t, n) {
  var i = n(18), r = n(114), o = n(124), s = n(125);
  t.polling = function (e) {
    var t = false, n = false, s = false !== e.jsonp;
    if ("undefined" != typeof location) {
      var a = "https:" === location.protocol, l = location.port;
      l || (l = a ? 443 : 80), t = e.hostname !== location.hostname || l !== e.port, n = e.secure !== a;
    }
    if (e.xdomain = t, e.xscheme = n, "open" in new i(e) && !e.forceJSONP) return new r(e);
    if (!s) throw new Error("JSONP disabled");
    return new o(e);
  }, t.websocket = s;
}, function (e, t, n) {
  var i = n(19), r = n(9), o = n(3), s = n(10), a = n(33), l = n(11)("engine.io-client:polling");
  e.exports = h;
  var c = null != new (n(18))({xdomain: false}).responseType;
  function h(e) {
    var t = e && e.forceBase64;
    c && !t || (this.supportsBinary = false), i.call(this, e);
  }
  s(h, i), h.prototype.name = "polling", h.prototype.doOpen = function () {
    this.poll();
  }, h.prototype.pause = function (e) {
    var t = this;
    function n() {
      l("paused"), t.readyState = "paused", e();
    }
    if (this.readyState = "pausing", this.polling || !this.writable) {
      var i = 0;
      this.polling && (l("we are currently polling - waiting to pause"), i++, this.once("pollComplete", function () {
        l("pre-pause polling complete"), --i || n();
      })), this.writable || (l("we are currently writing - waiting to pause"), i++, this.once("drain", function () {
        l("pre-pause writing complete"), --i || n();
      }));
    } else n();
  }, h.prototype.poll = function () {
    l("polling"), this.polling = true, this.doPoll(), this.emit("poll");
  }, h.prototype.onData = function (e) {
    var t = this;
    l("polling got data %s", e);
    o.decodePayload(e, this.socket.binaryType, function (e, n, i) {
      if ("opening" === t.readyState && t.onOpen(), "close" === e.type) return t.onClose(), false;
      t.onPacket(e);
    }), "closed" !== this.readyState && (this.polling = false, this.emit("pollComplete"), "open" === this.readyState ? this.poll() : l('ignoring poll - transport state "%s"', this.readyState));
  }, h.prototype.doClose = function () {
    var e = this;
    function t() {
      l("writing close packet"), e.write([{type: "close"}]);
    }
    "open" === this.readyState ? (l("transport open - closing"), t()) : (l("transport not open - deferring close"), this.once("open", t));
  }, h.prototype.write = function (e) {
    var t = this;
    this.writable = false;
    var n = function () {
      t.writable = true, t.emit("drain");
    };
    o.encodePayload(e, this.supportsBinary, function (e) {
      t.doWrite(e, n);
    });
  }, h.prototype.uri = function () {
    var e = this.query || {}, t = this.secure ? "https" : "http", n = "";
    return false !== this.timestampRequests && (e[this.timestampParam] = a()), this.supportsBinary || e.sid || (e.b64 = 1), e = r.encode(e), this.port && ("https" === t && 443 !== Number(this.port) || "http" === t && 80 !== Number(this.port)) && (n = ":" + this.port), e.length && (e = "?" + e), t + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + n + this.path + e;
  };
}, function (e, t, n) {
  (function (t) {
    var i = n(116), r = Object.prototype.toString, o = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === r.call(Blob), s = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === r.call(File);
    e.exports = function e(n) {
      if (!n || "object" != typeof n) return false;
      if (i(n)) {
        for (var r = 0, a = n.length; r < a; r++) if (e(n[r])) return true;
        return false;
      }
      if ("function" == typeof t && t.isBuffer && t.isBuffer(n) || "function" == typeof ArrayBuffer && n instanceof ArrayBuffer || o && n instanceof Blob || s && n instanceof File) return true;
      if (n.toJSON && "function" == typeof n.toJSON && 1 === arguments.length) return e(n.toJSON(), true);
      for (var l in n) if (Object.prototype.hasOwnProperty.call(n, l) && e(n[l])) return true;
      return false;
    };
  }.call(this, n(8).Buffer));
}, function (e, t, n) {
  "use strict";
  var i, r = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), o = 64, s = {}, a = 0, l = 0;
  function c(e) {
    var t = "";
    do {
      t = r[e % o] + t, e = Math.floor(e / o);
    } while (e > 0);
    return t;
  }
  function h() {
    var e = c(+new Date);
    return e !== i ? (a = 0, i = e) : e + "." + c(a++);
  }
  for (; l < o; l++) s[r[l]] = l;
  h.encode = c, h.decode = function (e) {
    var t = 0;
    for (l = 0; l < e.length; l++) t = t * o + s[e.charAt(l)];
    return t;
  }, e.exports = h;
}, function (e, t) {
  var n = [].indexOf;
  e.exports = function (e, t) {
    if (n) return e.indexOf(t);
    for (var i = 0; i < e.length; ++i) if (e[i] === t) return i;
    return -1;
  };
}, function (e, t, n) {
  var i = n(17), r = n(36), o = n(127), s = n(37), a = n(38), l = n(7)("socket.io-client:socket"), c = n(9), h = n(32);
  e.exports = p;
  var u = {connect: 1, connect_error: 1, connect_timeout: 1, connecting: 1, disconnect: 1, error: 1, reconnect: 1, reconnect_attempt: 1, reconnect_failed: 1, reconnect_error: 1, reconnecting: 1, ping: 1, pong: 1}, d = r.prototype.emit;
  function p(e, t, n) {
    this.io = e, this.nsp = t, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = false, this.disconnected = true, this.flags = {}, n && n.query && (this.query = n.query), this.io.autoConnect && this.open();
  }
  r(p.prototype), p.prototype.subEvents = function () {
    if (!this.subs) {
      var e = this.io;
      this.subs = [s(e, "open", a(this, "onopen")), s(e, "packet", a(this, "onpacket")), s(e, "close", a(this, "onclose"))];
    }
  }, p.prototype.open = p.prototype.connect = function () {
    return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this);
  }, p.prototype.send = function () {
    var e = o(arguments);
    return e.unshift("message"), this.emit.apply(this, e), this;
  }, p.prototype.emit = function (e) {
    if (u.hasOwnProperty(e)) return d.apply(this, arguments), this;
    var t = o(arguments), n = {type: (undefined !== this.flags.binary ? this.flags.binary : h(t)) ? i.BINARY_EVENT : i.EVENT, data: t, options: {}};
    return n.options.compress = !this.flags || false !== this.flags.compress, "function" == typeof t[t.length - 1] && (l("emitting packet with ack id %d", this.ids), this.acks[this.ids] = t.pop(), n.id = this.ids++), this.connected ? this.packet(n) : this.sendBuffer.push(n), this.flags = {}, this;
  }, p.prototype.packet = function (e) {
    e.nsp = this.nsp, this.io.packet(e);
  }, p.prototype.onopen = function () {
    if (l("transport is open - connecting"), "/" !== this.nsp) if (this.query) {
      var e = "object" == typeof this.query ? c.encode(this.query) : this.query;
      l("sending connect packet with query %s", e), this.packet({type: i.CONNECT, query: e});
    } else this.packet({type: i.CONNECT});
  }, p.prototype.onclose = function (e) {
    l("close (%s)", e), this.connected = false, this.disconnected = true, delete this.id, this.emit("disconnect", e);
  }, p.prototype.onpacket = function (e) {
    var t = e.nsp === this.nsp, n = e.type === i.ERROR && "/" === e.nsp;
    if (t || n) switch (e.type) {
      case i.CONNECT:
        this.onconnect();
        break;
      case i.EVENT:
      case i.BINARY_EVENT:
        this.onevent(e);
        break;
      case i.ACK:
      case i.BINARY_ACK:
        this.onack(e);
        break;
      case i.DISCONNECT:
        this.ondisconnect();
        break;
      case i.ERROR:
        this.emit("error", e.data);
    }
  }, p.prototype.onevent = function (e) {
    var t = e.data || [];
    l("emitting event %j", t), null != e.id && (l("attaching ack callback to event"), t.push(this.ack(e.id))), this.connected ? d.apply(this, t) : this.receiveBuffer.push(t);
  }, p.prototype.ack = function (e) {
    var t = this, n = false;
    return function () {
      if (!n) {
        n = true;
        var r = o(arguments);
        l("sending ack %j", r), t.packet({type: h(r) ? i.BINARY_ACK : i.ACK, id: e, data: r});
      }
    };
  }, p.prototype.onack = function (e) {
    var t = this.acks[e.id];
    "function" == typeof t ? (l("calling ack %s with %j", e.id, e.data), t.apply(this, e.data), delete this.acks[e.id]) : l("bad ack %s", e.id);
  }, p.prototype.onconnect = function () {
    this.connected = true, this.disconnected = false, this.emit("connect"), this.emitBuffered();
  }, p.prototype.emitBuffered = function () {
    var e;
    for (e = 0; e < this.receiveBuffer.length; e++) d.apply(this, this.receiveBuffer[e]);
    for (this.receiveBuffer = [], e = 0; e < this.sendBuffer.length; e++) this.packet(this.sendBuffer[e]);
    this.sendBuffer = [];
  }, p.prototype.ondisconnect = function () {
    l("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect");
  }, p.prototype.destroy = function () {
    if (this.subs) {
      for (var e = 0; e < this.subs.length; e++) this.subs[e].destroy();
      this.subs = null;
    }
    this.io.destroy(this);
  }, p.prototype.close = p.prototype.disconnect = function () {
    return this.connected && (l("performing disconnect (%s)", this.nsp), this.packet({type: i.DISCONNECT})), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
  }, p.prototype.compress = function (e) {
    return this.flags.compress = e, this;
  }, p.prototype.binary = function (e) {
    return this.flags.binary = e, this;
  };
}, function (e, t, n) {
  function i(e) {
    if (e) return function (e) {
      for (var t in i.prototype) e[t] = i.prototype[t];
      return e;
    }(e);
  }
  e.exports = i, i.prototype.on = i.prototype.addEventListener = function (e, t) {
    return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this;
  }, i.prototype.once = function (e, t) {
    function n() {
      this.off(e, n), t.apply(this, arguments);
    }
    return n.fn = t, this.on(e, n), this;
  }, i.prototype.off = i.prototype.removeListener = i.prototype.removeAllListeners = i.prototype.removeEventListener = function (e, t) {
    if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
    var n, i = this._callbacks["$" + e];
    if (!i) return this;
    if (1 == arguments.length) return delete this._callbacks["$" + e], this;
    for (var r = 0; r < i.length; r++) if ((n = i[r]) === t || n.fn === t) {
      i.splice(r, 1);
      break;
    }
    return this;
  }, i.prototype.emit = function (e) {
    this._callbacks = this._callbacks || {};
    var t = [].slice.call(arguments, 1), n = this._callbacks["$" + e];
    if (n) for (var i = 0, r = (n = n.slice(0)).length; i < r; ++i) n[i].apply(this, t);
    return this;
  }, i.prototype.listeners = function (e) {
    return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || [];
  }, i.prototype.hasListeners = function (e) {
    return !!this.listeners(e).length;
  };
}, function (e, t) {
  e.exports = function (e, t, n) {
    return e.on(t, n), {destroy: function () {
      e.removeListener(t, n);
    }};
  };
}, function (e, t) {
  var n = [].slice;
  e.exports = function (e, t) {
    if ("string" == typeof t && (t = e[t]), "function" != typeof t) throw new Error("bind() requires a function");
    var i = n.call(arguments, 2);
    return function () {
      return t.apply(e, i.concat(n.call(arguments)));
    };
  };
}, function (e, t, n) {
  var i = {"./en.json": 137, "./ru.json": 138};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 39;
}, function (e, t, n) {
  var i = {"./en.json": 154, "./ru.json": 155};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 40;
}, function (e) {
  e.exports = JSON.parse('{"SERVER_IS_FULL":"Server is full"}');
}, function (e) {
  e.exports = JSON.parse("{}");
}, function (e) {
  e.exports = JSON.parse('{"invalidPlace":"Invalid place","blockCountLimit":"You cannot place the block of this type. Limit reached. Remove the old block of this type to place a new one.","notEnoughResources":"Not enough resources","minerDoneAndAddedToStorage":"A Miner has finished mining and has been added to the Storage","notStorageItem":"Item does not exists in Storage"}');
}, function (e) {
  e.exports = JSON.parse('{"invalidPlace":"Сюда нельзя поставить","blockCountLimit":"Нельзя разместить блок этого типа. Достигнут лимит. Удалите старый блок этого типа чтобы поставить новый.","notEnoughResources":"Недостаточно ресурсов","minerDoneAndAddedToStorage":"Буровая установка завершила добычу и была добавлена в Хранилище","notStorageItem":"Нет предмета на Складе"}');
}, function (e, t, n) {
  var i = n(100), r = n(17), o = n(29), s = n(7)("socket.io-client");
  e.exports = t = l;
  var a = t.managers = {};
  function l(e, t) {
    "object" == typeof e && (t = e, e = undefined), t = t || {};
    var n, r = i(e), l = r.source, c = r.id, h = r.path, u = a[c] && h in a[c].nsps;
    return t.forceNew || t["force new connection"] || false === t.multiplex || u ? (s("ignoring socket cache for %s", l), n = o(l, t)) : (a[c] || (s("new io instance for %s", l), a[c] = o(l, t)), n = a[c]), r.query && !t.query && (t.query = r.query), n.socket(r.path, t);
  }
  t.protocol = r.protocol, t.connect = l, t.Manager = n(29), t.Socket = n(35);
}, function (e, t) {
  undefined === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), undefined === Number.isInteger && (Number.isInteger = function (e) {
    return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
  }), undefined === Math.sign && (Math.sign = function (e) {
    return e < 0 ? -1 : e > 0 ? 1 : +e;
  }), "name" in Function.prototype == false && Object.defineProperty(Function.prototype, "name", {get: function () {
    return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1];
  }}), undefined === Object.assign && (Object.assign = function (e) {
    "use strict";
    if (null == e) throw new TypeError("Cannot convert undefined or null to object");
    for (var t = Object(e), n = 1; n < arguments.length; n++) {
      var i = arguments[n];
      if (null != i) for (var r in i) Object.prototype.hasOwnProperty.call(i, r) && (t[r] = i[r]);
    }
    return t;
  });
}, function (e, t, n) {
  "use strict";
  function i(e) {
    return !r(e);
  }
  function r(e) {
    return "undefined" == typeof window || "undefined" == typeof document ? "not a browser" : Array.prototype && Array.prototype.every && Array.prototype.filter && Array.prototype.forEach && Array.prototype.indexOf && Array.prototype.lastIndexOf && Array.prototype.map && Array.prototype.some && Array.prototype.reduce && Array.prototype.reduceRight && Array.isArray ? Function.prototype && Function.prototype.bind ? Object.keys && Object.create && Object.getPrototypeOf && Object.getOwnPropertyNames && Object.isSealed && Object.isFrozen && Object.isExtensible && Object.getOwnPropertyDescriptor && Object.defineProperty && Object.defineProperties && Object.seal && Object.freeze && Object.preventExtensions ? "JSON" in window && "parse" in JSON && "stringify" in JSON ? function () {
      if (!("Worker" in window && "Blob" in window && "URL" in window)) return false;
      var e, t, n = new Blob([""], {type: "text/javascript"}), i = URL.createObjectURL(n);
      try {
        t = new Worker(i), e = true;
      } catch (t) {
        e = false;
      }
      t && t.terminate();
      return URL.revokeObjectURL(i), e;
    }() ? "Uint8ClampedArray" in window ? ArrayBuffer.isView ? function () {
      const e = document.createElement("canvas");
      e.width = e.height = 1;
      const t = e.getContext("2d");
      if (!t) return false;
      const n = t.getImageData(0, 0, 1, 1);
      return n && n.width === e.width;
    }() ? function (e) {
      undefined === o[e] && (o[e] = function (e) {
        const t = function (e) {
          var t = document.createElement("canvas"), n = Object.create(i.webGLContextAttributes);
          return n.failIfMajorPerformanceCaveat = e, t.probablySupportsContext ? t.probablySupportsContext("webgl", n) || t.probablySupportsContext("experimental-webgl", n) : t.supportsContext ? t.supportsContext("webgl", n) || t.supportsContext("experimental-webgl", n) : t.getContext("webgl", n) || t.getContext("experimental-webgl", n);
        }(e);
        if (!t) return false;
        const n = t.createShader(t.VERTEX_SHADER);
        if (!n || t.isContextLost()) return false;
        return t.shaderSource(n, "void main() {}"), t.compileShader(n), true === t.getShaderParameter(n, t.COMPILE_STATUS);
      }(e));
      return o[e];
    }(e && e.failIfMajorPerformanceCaveat) ? undefined : "insufficient WebGL support" : "insufficient Canvas/getImageData support" : "insufficient ArrayBuffer support" : "insufficient Uint8ClampedArray support" : "insufficient worker support" : "insufficient JSON support" : "insufficient Object support" : "insufficient Function support" : "insufficent Array support";
  }
  e.exports ? e.exports = i : window && (window.mapboxgl = window.mapboxgl || {}, window.mapboxgl.supported = i, window.mapboxgl.notSupportedReason = r);
  var o = {};
  i.webGLContextAttributes = {antialias: false, alpha: true, stencil: true, depth: true};
}, function (e, t, n) {
  (function (e, n) {
    var i = 200, r = "__lodash_hash_undefined__", o = 1, s = 2, a = 0x1FFFFFFFFFFFFF, l = "[object Arguments]", c = "[object Array]", h = "[object AsyncFunction]", u = "[object Boolean]", d = "[object Date]", p = "[object Error]", m = "[object Function]", f = "[object GeneratorFunction]", g = "[object Map]", v = "[object Number]", y = "[object Null]", _ = "[object Object]", x = "[object Proxy]", b = "[object RegExp]", w = "[object Set]", S = "[object String]", E = "[object Symbol]", q = "[object Undefined]", T = "[object ArrayBuffer]", A = "[object DataView]", M = /^\[object .+?Constructor\]$/, C = /^(?:0|[1-9]\d*)$/, k = {};
    k["[object Float32Array]"] = k["[object Float64Array]"] = k["[object Int8Array]"] = k["[object Int16Array]"] = k["[object Int32Array]"] = k["[object Uint8Array]"] = k["[object Uint8ClampedArray]"] = k["[object Uint16Array]"] = k["[object Uint32Array]"] = true, k[l] = k[c] = k[T] = k[u] = k[A] = k[d] = k[p] = k[m] = k[g] = k[v] = k[_] = k[b] = k[w] = k[S] = k["[object WeakMap]"] = false;
    var R = "object" == typeof e && e && e.Object === Object && e, L = "object" == typeof self && self && self.Object === Object && self, P = R || L || Function("return this")(), D = t && !t.nodeType && t, O = D && "object" == typeof n && n && !n.nodeType && n, I = O && O.exports === D, B = I && R.process, F = function () {
      try {
        return B && B.binding && B.binding("util");
      } catch (e) {}
    }(), z = F && F.isTypedArray;
    function N(e, t) {
      for (var n = -1, i = null == e ? 0 : e.length; ++n < i;) if (t(e[n], n, e)) return true;
      return false;
    }
    function U(e) {
      var t = -1, n = Array(e.size);
      return e.forEach(function (e, i) {
        n[++t] = [i, e];
      }), n;
    }
    function V(e) {
      var t = -1, n = Array(e.size);
      return e.forEach(function (e) {
        n[++t] = e;
      }), n;
    }
    var G, H, j, $ = Array.prototype, W = Function.prototype, X = Object.prototype, Y = P["__core-js_shared__"], J = W.toString, K = X.hasOwnProperty, Z = (G = /[^.]+$/.exec(Y && Y.keys && Y.keys.IE_PROTO || "")) ? "Symbol(src)_1." + G : "", Q = X.toString, ee = RegExp("^" + J.call(K).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), te = I ? P.Buffer : undefined, ne = P.Symbol, ie = P.Uint8Array, re = X.propertyIsEnumerable, oe = $.splice, se = ne ? ne.toStringTag : undefined, ae = Object.getOwnPropertySymbols, le = te ? te.isBuffer : undefined, ce = (H = Object.keys, j = Object, function (e) {
      return H(j(e));
    }), he = Fe(P, "DataView"), ue = Fe(P, "Map"), de = Fe(P, "Promise"), pe = Fe(P, "Set"), me = Fe(P, "WeakMap"), fe = Fe(Object, "create"), ge = Ve(he), ve = Ve(ue), ye = Ve(de), _e = Ve(pe), xe = Ve(me), be = ne ? ne.prototype : undefined, we = be ? be.valueOf : undefined;
    function Se(e) {
      var t = -1, n = null == e ? 0 : e.length;
      for (this.clear(); ++t < n;) {
        var i = e[t];
        this.set(i[0], i[1]);
      }
    }
    function Ee(e) {
      var t = -1, n = null == e ? 0 : e.length;
      for (this.clear(); ++t < n;) {
        var i = e[t];
        this.set(i[0], i[1]);
      }
    }
    function qe(e) {
      var t = -1, n = null == e ? 0 : e.length;
      for (this.clear(); ++t < n;) {
        var i = e[t];
        this.set(i[0], i[1]);
      }
    }
    function Te(e) {
      var t = -1, n = null == e ? 0 : e.length;
      for (this.__data__ = new qe; ++t < n;) this.add(e[t]);
    }
    function Ae(e) {
      var t = this.__data__ = new Ee(e);
      this.size = t.size;
    }
    function Me(e, t) {
      var n = je(e), i = !n && He(e), r = !n && !i && $e(e), o = !n && !i && !r && Ke(e), s = n || i || r || o, a = s ? function (e, t) {
        for (var n = -1, i = Array(e); ++n < e;) i[n] = t(n);
        return i;
      }(e.length, String) : [], l = a.length;
      for (var c in e) !t && !K.call(e, c) || s && ("length" == c || r && ("offset" == c || "parent" == c) || o && ("buffer" == c || "byteLength" == c || "byteOffset" == c) || !!(l = null == l ? a : l) && ("number" == typeof c || C.test(c)) && c > -1 && c % 1 == 0 && c < l) || a.push(c);
      return a;
    }
    function Ce(e, t) {
      for (var n = e.length; n--;) if (e[n][0] === t || e[n][0] != e[n][0] && t != t) return n;
      return -1;
    }
    function ke(e) {
      return null == e ? undefined === e ? q : y : se && se in Object(e) ? function (e) {
        var t = K.call(e, se), n = e[se];
        try {
          e[se] = undefined;
          var i = true;
        } catch (e) {}
        var r = Q.call(e);
        i && (t ? e[se] = n : delete e[se]);
        return r;
      }(e) : function (e) {
        return Q.call(e);
      }(e);
    }
    function Re(e) {
      return null != e && "object" == typeof e && ke(e) == l;
    }
    function Le(e, t, n, i, r) {
      return e === t || (null == e || null == t || !(null != e && "object" == typeof e) && !(null != t && "object" == typeof t) ? e != e && t != t : function (e, t, n, i, r, a) {
        var h = je(e), m = je(t), f = h ? c : Ne(e), y = m ? c : Ne(t), x = (f = f == l ? _ : f) == _, q = (y = y == l ? _ : y) == _, M = f == y;
        if (M && $e(e)) {
          if (!$e(t)) return false;
          h = true, x = false;
        }
        if (M && !x) return a || (a = new Ae), h || Ke(e) ? Oe(e, t, n, i, r, a) : function (e, t, n, i, r, a, l) {
          switch (n) {
            case A:
              if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return false;
              e = e.buffer, t = t.buffer;
            case T:
              return !(e.byteLength != t.byteLength || !a(new ie(e), new ie(t)));
            case u:
            case d:
            case v:
              return +e === +t || +e != +e && +t != +t;
            case p:
              return e.name == t.name && e.message == t.message;
            case b:
            case S:
              return e == t + "";
            case g:
              var c = U;
            case w:
              var h = i & o;
              if (c || (c = V), e.size != t.size && !h) return false;
              var m = l.get(e);
              if (m) return m == t;
              i |= s, l.set(e, t);
              var f = Oe(c(e), c(t), i, r, a, l);
              return l.delete(e), f;
            case E:
              if (we) return we.call(e) == we.call(t);
          }
          return false;
        }(e, t, f, n, i, r, a);
        if (!(n & o)) {
          var C = x && K.call(e, "__wrapped__"), k = q && K.call(t, "__wrapped__");
          if (C || k) {
            var R = C ? e.value() : e, L = k ? t.value() : t;
            return a || (a = new Ae), r(R, L, n, i, a);
          }
        }
        if (!M) return false;
        return a || (a = new Ae), function (e, t, n, i, r, s) {
          var a = n & o, l = Ie(e), c = l.length, h = Ie(t).length;
          if (c != h && !a) return false;
          var u = c;
          for (; u--;) {
            var d = l[u];
            if (!(a ? d in t : K.call(t, d))) return false;
          }
          var p = s.get(e);
          if (p && s.get(t)) return p == t;
          var m = true;
          s.set(e, t), s.set(t, e);
          var f = a;
          for (; ++u < c;) {
            d = l[u];
            var g = e[d], v = t[d];
            if (i) var y = a ? i(v, g, d, t, e, s) : i(g, v, d, e, t, s);
            if (!(undefined === y ? g === v || r(g, v, n, i, s) : y)) {
              m = false;
              break;
            }
            f || (f = "constructor" == d);
          }
          if (m && !f) {
            var _ = e.constructor, x = t.constructor;
            _ != x && "constructor" in e && "constructor" in t && !("function" == typeof _ && _ instanceof _ && "function" == typeof x && x instanceof x) && (m = false);
          }
          return s.delete(e), s.delete(t), m;
        }(e, t, n, i, r, a);
      }(e, t, n, i, Le, r));
    }
    function Pe(e) {
      return !(!Ye(e) || function (e) {
        return !!Z && Z in e;
      }(e)) && (We(e) ? ee : M).test(Ve(e));
    }
    function De(e) {
      if (n = (t = e) && t.constructor, i = "function" == typeof n && n.prototype || X, t !== i) return ce(e);
      var t, n, i, r = [];
      for (var o in Object(e)) K.call(e, o) && "constructor" != o && r.push(o);
      return r;
    }
    function Oe(e, t, n, i, r, a) {
      var l = n & o, c = e.length, h = t.length;
      if (c != h && !(l && h > c)) return false;
      var u = a.get(e);
      if (u && a.get(t)) return u == t;
      var d = -1, p = true, m = n & s ? new Te : undefined;
      for (a.set(e, t), a.set(t, e); ++d < c;) {
        var f = e[d], g = t[d];
        if (i) var v = l ? i(g, f, d, t, e, a) : i(f, g, d, e, t, a);
        if (undefined !== v) {
          if (v) continue;
          p = false;
          break;
        }
        if (m) {
          if (!N(t, function (e, t) {
            if (o = t, !m.has(o) && (f === e || r(f, e, n, i, a))) return m.push(t);
            var o;
          })) {
            p = false;
            break;
          }
        } else if (f !== g && !r(f, g, n, i, a)) {
          p = false;
          break;
        }
      }
      return a.delete(e), a.delete(t), p;
    }
    function Ie(e) {
      return function (e, t, n) {
        var i = t(e);
        return je(e) ? i : function (e, t) {
          for (var n = -1, i = t.length, r = e.length; ++n < i;) e[r + n] = t[n];
          return e;
        }(i, n(e));
      }(e, Ze, ze);
    }
    function Be(e, t) {
      var n, i, r = e.__data__;
      return ("string" == (i = typeof (n = t)) || "number" == i || "symbol" == i || "boolean" == i ? "__proto__" !== n : null === n) ? r["string" == typeof t ? "string" : "hash"] : r.map;
    }
    function Fe(e, t) {
      var n = function (e, t) {
        return null == e ? undefined : e[t];
      }(e, t);
      return Pe(n) ? n : undefined;
    }
    Se.prototype.clear = function () {
      this.__data__ = fe ? fe(null) : {}, this.size = 0;
    }, Se.prototype.delete = function (e) {
      var t = this.has(e) && delete this.__data__[e];
      return this.size -= t ? 1 : 0, t;
    }, Se.prototype.get = function (e) {
      var t = this.__data__;
      if (fe) {
        var n = t[e];
        return n === r ? undefined : n;
      }
      return K.call(t, e) ? t[e] : undefined;
    }, Se.prototype.has = function (e) {
      var t = this.__data__;
      return fe ? undefined !== t[e] : K.call(t, e);
    }, Se.prototype.set = function (e, t) {
      var n = this.__data__;
      return this.size += this.has(e) ? 0 : 1, n[e] = fe && undefined === t ? r : t, this;
    }, Ee.prototype.clear = function () {
      this.__data__ = [], this.size = 0;
    }, Ee.prototype.delete = function (e) {
      var t = this.__data__, n = Ce(t, e);
      return !(n < 0) && (n == t.length - 1 ? t.pop() : oe.call(t, n, 1), --this.size, true);
    }, Ee.prototype.get = function (e) {
      var t = this.__data__, n = Ce(t, e);
      return n < 0 ? undefined : t[n][1];
    }, Ee.prototype.has = function (e) {
      return Ce(this.__data__, e) > -1;
    }, Ee.prototype.set = function (e, t) {
      var n = this.__data__, i = Ce(n, e);
      return i < 0 ? (++this.size, n.push([e, t])) : n[i][1] = t, this;
    }, qe.prototype.clear = function () {
      this.size = 0, this.__data__ = {hash: new Se, map: new (ue || Ee), string: new Se};
    }, qe.prototype.delete = function (e) {
      var t = Be(this, e).delete(e);
      return this.size -= t ? 1 : 0, t;
    }, qe.prototype.get = function (e) {
      return Be(this, e).get(e);
    }, qe.prototype.has = function (e) {
      return Be(this, e).has(e);
    }, qe.prototype.set = function (e, t) {
      var n = Be(this, e), i = n.size;
      return n.set(e, t), this.size += n.size == i ? 0 : 1, this;
    }, Te.prototype.add = Te.prototype.push = function (e) {
      return this.__data__.set(e, r), this;
    }, Te.prototype.has = function (e) {
      return this.__data__.has(e);
    }, Ae.prototype.clear = function () {
      this.__data__ = new Ee, this.size = 0;
    }, Ae.prototype.delete = function (e) {
      var t = this.__data__, n = t.delete(e);
      return this.size = t.size, n;
    }, Ae.prototype.get = function (e) {
      return this.__data__.get(e);
    }, Ae.prototype.has = function (e) {
      return this.__data__.has(e);
    }, Ae.prototype.set = function (e, t) {
      var n = this.__data__;
      if (n instanceof Ee) {
        var r = n.__data__;
        if (!ue || r.length < i - 1) return r.push([e, t]), this.size = ++n.size, this;
        n = this.__data__ = new qe(r);
      }
      return n.set(e, t), this.size = n.size, this;
    };
    var ze = ae ? function (e) {
      return null == e ? [] : (e = Object(e), function (e, t) {
        for (var n = -1, i = null == e ? 0 : e.length, r = 0, o = []; ++n < i;) {
          var s = e[n];
          t(s, n, e) && (o[r++] = s);
        }
        return o;
      }(ae(e), function (t) {
        return re.call(e, t);
      }));
    } : function () {
      return [];
    }, Ne = ke;
    function Ue(e, t) {
      return !!(t = null == t ? a : t) && ("number" == typeof e || C.test(e)) && e > -1 && e % 1 == 0 && e < t;
    }
    function Ve(e) {
      if (null != e) {
        try {
          return J.call(e);
        } catch (e) {}
        try {
          return e + "";
        } catch (e) {}
      }
      return "";
    }
    function Ge(e, t) {
      return e === t || e != e && t != t;
    }
    (he && Ne(new he(new ArrayBuffer(1))) != A || ue && Ne(new ue) != g || de && "[object Promise]" != Ne(de.resolve()) || pe && Ne(new pe) != w || me && "[object WeakMap]" != Ne(new me)) && (Ne = function (e) {
      var t = ke(e), n = t == _ ? e.constructor : undefined, i = n ? Ve(n) : "";
      if (i) switch (i) {
        case ge:
          return A;
        case ve:
          return g;
        case ye:
          return "[object Promise]";
        case _e:
          return w;
        case xe:
          return "[object WeakMap]";
      }
      return t;
    });
    var He = null != function () {
      return arguments;
    }() && "object" == typeof function () {
      return arguments;
    }() && ke(function () {
      return arguments;
    }()) == l ? Re : function (e) {
      return null != e && "object" == typeof e && K.call(e, "callee") && !re.call(e, "callee");
    }, je = Array.isArray;
    var $e = le || function () {
      return false;
    };
    function We(e) {
      if (!Ye(e)) return false;
      var t = ke(e);
      return t == m || t == f || t == h || t == x;
    }
    function Xe(e) {
      return "number" == typeof e && e > -1 && e % 1 == 0 && e <= a;
    }
    function Ye(e) {
      var t = typeof e;
      return null != e && ("object" == t || "function" == t);
    }
    function Je(e) {
      return null != e && "object" == typeof e;
    }
    var Ke = z ? function (e) {
      return function (t) {
        return e(t);
      };
    }(z) : function (e) {
      return null != e && "object" == typeof e && ("number" == typeof e.length && e.length > -1 && e.length % 1 == 0 && e.length <= a) && !!k[ke(e)];
    };
    function Ze(e) {
      return null != (t = e) && ("number" == typeof t.length && t.length > -1 && t.length % 1 == 0 && t.length <= a) && !We(t) ? Me(e) : De(e);
      var t;
    }
    n.exports = function (e, t) {
      return Le(e, t);
    };
  }.call(this, n(6), n(49)(e)));
}, function (e, t) {
  e.exports = function (e) {
    return e.webpackPolyfill || (e.deprecate = function () {}, e.paths = [], e.children || (e.children = []), Object.defineProperty(e, "loaded", {enumerable: true, get: function () {
      return e.l;
    }}), Object.defineProperty(e, "id", {enumerable: true, get: function () {
      return e.i;
    }}), e.webpackPolyfill = 1), e;
  };
}, function (e, t, n) {
  var i = {"./en.json": 51, "./ru.json": 52};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 50;
}, function (e) {
  e.exports = JSON.parse('{"title":"Key bindings"}');
}, function (e) {
  e.exports = JSON.parse('{"title":"Сочетания клавиш"}');
}, function (e) {
  e.exports = JSON.parse('{"CANVAS_NOT_SUPPORTED":"Render through Canvas is not supported","ENTITY_PLAYER":"Player","PLAYER_NOT_FOUND":"Player not found","YOU_HEALTH_IS_FULL":"Health is already full","I_KILL":"I killed ${name}","I_WAS_KILLED_BY":"I was killed by ${name}","S_BABY":"baby","SERVER_IS_FULL":"Server is full","GOODBYE_CRUEL_WORLD":"I committed suicide","YOU_WAS_RECONNECTED":"Session restored","YOU_NOT_HAVE_ENOUGH_PERMISSIONS":"Insufficient rights","VERY_FAR_AWAY":"Too Far","KICKED_DUE_TO_INACTIVITY":"Kicked for inactivity","DON_T_SPAM_YOU_ARE_MUTED":"You are muted for spamming","UNNAMED":"Not named","SLOW_INTERNET_CONNECTION":"Slow internet connection","CURRENT_PING":"Current ping","TELEPORT_DISABLED":"Teleport is disabled","MS":"ms"}');
}, function (e) {
  e.exports = JSON.parse('{"CANVAS_NOT_SUPPORTED":"Рендер через Canvas не поддерживается","ENTITY_PLAYER":"Игрок","PLAYER_NOT_FOUND":"Игрок не найден","YOU_HEALTH_IS_FULL":"Здоровье уже полное","I_KILL":"Вы убили ${name}","I_WAS_KILLED_BY":"Вас убил ${name}","SERVER_IS_FULL":"Сервер полон","GOODBYE_CRUEL_WORLD":"Покончил жизнь суицидом","YOU_WAS_RECONNECTED":"Сессия восстановлена","YOU_NOT_HAVE_ENOUGH_PERMISSIONS":"Недостаточно прав","VERY_FAR_AWAY":"Слишком далеко","KICKED_DUE_TO_INACTIVITY":"Выгнан за неактивность","DON_T_SPAM_YOU_ARE_MUTED":"Вас заткнули за спам","UNNAMED":"Неназвано","SLOW_INTERNET_CONNECTION":"Медленное интернет подключение","CURRENT_PING":"Текущий пинг","TELEPORT_DISABLED":"Телепорт отключен","MS":"мс"}');
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  touch-action: none;\n  -webkit-touch-callout: none;\n}\n*:not(input):not(textarea) {\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\nhtml {\n  height: 100%;\n  overflow: hidden;\n}\nbody {\n  overflow: hidden;\n  height: 100%;\n}\ntitle {\n  -webkit-app-region: drag;\n}\n#game-canvas {\n  position: absolute;\n  width: 100vw !important;\n  height: 100vh !important;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n}\n.game-mod {\n  height: 100%;\n}\n.loading {\n  cursor: default;\n  position: relative;\n  min-height: 20px;\n}\n.loading:before {\n  content: attr(data-before);\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0,0,0,0.4);\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  transition: all 0.2s;\n  opacity: 1;\n  visibility: visible;\n  z-index: 40;\n  font-size: 16px;\n  line-height: 20px;\n  color: #fff;\n}\n.loading:after {\n  content: url(\"data:image/svg+xml,%3Csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid' class='lds-rolling' style='background: none;'%3E%3Ccircle cx='50' cy='50' fill='none' ng-attr-stroke='%7B%7Bconfig.color%7D%7D' ng-attr-stroke-width='%7B%7Bconfig.width%7D%7D' ng-attr-r='%7B%7Bconfig.radius%7D%7D' ng-attr-stroke-dasharray='%7B%7Bconfig.dasharray%7D%7D' stroke='%23c0c0c0' stroke-width='10' r='35' stroke-dasharray='164.93361431346415 56.97787143782138' transform='rotate(30 50 50)'%3E%3CanimateTransform attributeName='transform' type='rotate' calcMode='linear' values='0 50 50;360 50 50' keyTimes='0;1' dur='1s' begin='0s' repeatCount='indefinite'%3E%3C/animateTransform%3E%3C/circle%3E%3C/svg%3E\");\n  position: absolute;\n  width: calc(20px + 2%);\n  height: calc(20px + 2%);\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  transition: all 0.2s;\n  opacity: 1;\n  visibility: visible;\n  z-index: 41;\n}\n.loading[data-before] {\n  min-height: calc(20px + 6%);\n}\n.loading[data-before]:before {\n  padding-top: calc(20px + 6%);\n}\n", ""]);
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".screens {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  color: #fff;\n  z-index: 20;\n  display: flex;\n}\n.screens .screen {\n  margin: auto;\n  display: flex;\n  padding: 5px;\n  justify-content: center;\n  align-items: flex-start;\n}\n", ""]);
}, function (e, t, n) {
  e.exports = function () {
    return new Worker(n.p + "9fc0a927620a0a0e9ac7.worker.js");
  };
}, function (e, t, n) {
  e.exports = function () {
    return new Worker(n.p + "67435267b03fe7904263.worker.js");
  };
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".ad-item {\n  background-color: rgba(0,0,0,0.1);\n}\n.ad-item.size300x250 {\n  width: 300px;\n  min-height: 250px;\n  margin: auto;\n}\n", ""]);
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, "#pushes {\n  position: fixed;\n  right: 1vw;\n  top: 1vw;\n  z-index: 100;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n#pushes .push {\n  border-radius: 0.4vw;\n  background-color: #fff;\n  box-shadow: 0 0.2vw 2vw rgba(0,0,0,0.5);\n  overflow: hidden;\n  transform: translateX(calc(100% + 1vw + 1vw));\n  opacity: 0;\n  height: 0;\n  display: none;\n}\n#pushes .push .wrap {\n  display: flex;\n  overflow: hidden;\n}\n#pushes .push .wrap .push-icon {\n  border-radius: 0.4vw 0 0 0.4vw;\n  background-color: transparent;\n  background-size: 80%;\n  background-position: center;\n  background-repeat: no-repeat;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#pushes .push .wrap .push-icon.error {\n  background-color: #ff5722;\n}\n#pushes .push .wrap .push-icon.warning {\n  background-color: #ffc107;\n}\n#pushes .push .wrap .push-icon.success {\n  background-color: #8bc34a;\n}\n#pushes .push .wrap .text-wrap .title {\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 1.2vw;\n  line-height: 1.6vw;\n}\n#pushes .push .wrap .text-wrap .text {\n  max-height: 4vw;\n  overflow: hidden;\n  font-size: 1vw;\n  line-height: 1.4vw;\n}\n#pushes .push .wrap .buttons {\n  display: flex;\n  flex-direction: column;\n}\n#pushes .push .wrap .buttons .push-button {\n  width: 3vw;\n  height: 50%;\n  border: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n}\n#pushes .push .wrap .buttons .push-button .button-icon {\n  max-width: 2vw;\n  max-height: 2vw;\n}\n#pushes .push .wrap .buttons .push-button.accept {\n  background: #8bc34a;\n}\n#pushes .push .wrap .buttons .push-button.reject {\n  background: #ff5722;\n}\n", ""]);
}, function (e) {
  e.exports = JSON.parse('{"PRESS":"Press Enter to chat","PLACEHOLDER":"Message (/help or !help)","typing":"is typing","banned":{"tooltip":{"title":"Banned","text":"Left: ${timeLeft}\\nReason: ${reason}"}},"muted":"Message sending blocked for ${timeLeft}. Reason: \'${reason}\'."}');
}, function (e) {
  e.exports = JSON.parse('{"PRESS":"Нажмите Ентер для чата","PLACEHOLDER":"Сообщение (/help или !help)","typing":"пишет","banned":{"tooltip":{"title":"Забанен","text":"До разбана: ${timeLeft}\\nПричина: ${reason}"}},"muted":"Отправка сообщений заблокирована на ${timeLeft}. Причина: \'${reason}\'."}');
}, function (e) {
  e.exports = JSON.parse('{"words":["ahole","anus","ash0le","ash0les","asholes","ass","Ass Monkey","Assface","assh0le","assh0lez","asshole","assholes","assholz","asswipe","azzhole","bassterds","bastard","bastards","bastardz","basterds","basterdz","Biatch","bitch","bitches","Blow Job","boffing","butthole","buttwipe","c0ck","c0cks","c0k","Carpet Muncher","cawk","cawks","Clit","cnts","cntz","cock","cockhead","cock-head","cocks","CockSucker","cock-sucker","crap","cum","cunt","cunts","cuntz","dick","dild0","dild0s","dildo","dildos","dilld0","dilld0s","dominatricks","dominatrics","dominatrix","dyke","enema","f u c k","f u c k e r","fag","fag1t","faget","fagg1t","faggit","faggot","fagg0t","fagit","fags","fagz","faig","faigs","fart","flipping the bird","fuck","fucker","fuckin","fucking","fucks","Fudge Packer","fuk","Fukah","Fuken","fuker","Fukin","Fukk","Fukkah","Fukken","Fukker","Fukkin","g00k","God-damned","h00r","h0ar","h0re","hells","hoar","hoor","hoore","jackoff","jap","japs","jerk-off","jisim","jiss","jizm","jizz","knob","knobs","knobz","kunt","kunts","kuntz","Lezzian","Lipshits","Lipshitz","masochist","masokist","massterbait","masstrbait","masstrbate","masterbaiter","masterbate","masterbates","Motha Fucker","Motha Fuker","Motha Fukkah","Motha Fukker","Mother Fucker","Mother Fukah","Mother Fuker","Mother Fukkah","Mother Fukker","mother-fucker","Mutha Fucker","Mutha Fukah","Mutha Fuker","Mutha Fukkah","Mutha Fukker","n1gr","nastt","nigger;","nigur;","niiger;","niigr;","orafis","orgasim;","orgasm","orgasum","oriface","orifice","orifiss","packi","packie","packy","paki","pakie","paky","pecker","peeenus","peeenusss","peenus","peinus","pen1s","penas","penis","penis-breath","penus","penuus","Phuc","Phuck","Phuk","Phuker","Phukker","polac","polack","polak","Poonani","pr1c","pr1ck","pr1k","pusse","pussee","pussy","puuke","puuker","qweir","recktum","rectum","retard","sadist","scank","schlong","screwing","semen","sex","sexy","Sh!t","sh1t","sh1ter","sh1ts","sh1tter","sh1tz","shit","shits","shitter","Shitty","Shity","shitz","Shyt","Shyte","Shytty","Shyty","skanck","skank","skankee","skankey","skanks","Skanky","slag","slut","sluts","Slutty","slutz","son-of-a-bitch","tit","turd","va1jina","vag1na","vagiina","vagina","vaj1na","vajina","vullva","vulva","w0p","wh00r","wh0re","whore","xrated","xxx","b!+ch","bitch","blowjob","clit","arschloch","fuck","shit","ass","asshole","b!tch","b17ch","b1tch","bastard","bi+ch","boiolas","buceta","c0ck","cawk","chink","cipa","clits","cock","cum","cunt","dildo","dirsa","ejakulate","fatass","fcuk","fuk","fux0r","hoer","hore","jism","kawk","l3itch","l3i+ch","masturbate","masterbat*","masterbat3","motherfucker","s.o.b.","mofo","nazi","nigga","nigger","nutsack","phuck","pimpis","pusse","pussy","scrotum","sh!t","shemale","shi+","sh!+","slut","smut","teets","tits","boobs","b00bs","teez","testical","testicle","titt","w00se","jackoff","wank","whoar","whore","*damn","*dyke","*fuck*","*shit*","@$$","amcik","andskota","arse*","assrammer","ayir","bi7ch","bitch*","bollock*","breasts","butt-pirate","cabron","cazzo","chraa","chuj","Cock*","cunt*","d4mn","daygo","dego","dick*","dike*","dupa","dziwka","ejackulate","Ekrem*","Ekto","enculer","faen","fag*","fanculo","fanny","feces","feg","Felcher","ficken","fitt*","Flikker","foreskin","Fotze","Fu(*","fuk*","futkretzn","gook","guiena","h0r","h4x0r","hell","helvete","hoer*","honkey","Huevon","hui","injun","jizz","kanker*","kike","klootzak","kraut","knulle","kuk","kuksuger","Kurac","kurwa","kusi*","kyrpa*","lesbo","mamhoon","masturbat*","merd*","mibun","monkleigh","mouliewop","muie","mulkku","muschi","nazis","nepesaurio","nigger*","orospu","paska*","perse","picka","pierdol*","pillu*","pimmel","piss*","pizda","poontsee","poop","porn","p0rn","pr0n","preteen","pula","pule","puta","puto","qahbeh","queef*","rautenberg","schaffer","scheiss*","schlampe","schmuck","screw","sh!t*","sharmuta","sharmute","shipal","shiz","skribz","skurwysyn","sphencter","spic","spierdalaj","splooge","suka","b00b*","testicle*","titt*","twat","vittu","wank*","wetback*","wichser","wop*","yed","zabourah"]}');
}, function (e, t, n) {
  e.exports = {object: n(65), array: n(66), regex: n(67)};
}, function (e, t) {
  e.exports = {"4r5e": 1, "5h1t": 1, "5hit": 1, a55: 1, anal: 1, anus: 1, ar5e: 1, arrse: 1, arse: 1, ass: 1, "ass-fucker": 1, asses: 1, assfucker: 1, assfukka: 1, asshole: 1, assholes: 1, asswhole: 1, a_s_s: 1, "b!tch": 1, b00bs: 1, b17ch: 1, b1tch: 1, ballbag: 1, balls: 1, ballsack: 1, bastard: 1, beastial: 1, beastiality: 1, bellend: 1, bestial: 1, bestiality: 1, "bi+ch": 1, biatch: 1, bitch: 1, bitcher: 1, bitchers: 1, bitches: 1, bitchin: 1, bitching: 1, bloody: 1, "blow job": 1, blowjob: 1, blowjobs: 1, boiolas: 1, bollock: 1, bollok: 1, boner: 1, boob: 1, boobs: 1, booobs: 1, boooobs: 1, booooobs: 1, booooooobs: 1, breasts: 1, buceta: 1, bugger: 1, bum: 1, "bunny fucker": 1, butt: 1, butthole: 1, buttmuch: 1, buttplug: 1, c0ck: 1, c0cksucker: 1, "carpet muncher": 1, cawk: 1, chink: 1, cipa: 1, cl1t: 1, clit: 1, clitoris: 1, clits: 1, cnut: 1, cock: 1, "cock-sucker": 1, cockface: 1, cockhead: 1, cockmunch: 1, cockmuncher: 1, cocks: 1, cocksuck: 1, cocksucked: 1, cocksucker: 1, cocksucking: 1, cocksucks: 1, cocksuka: 1, cocksukka: 1, cok: 1, cokmuncher: 1, coksucka: 1, coon: 1, cox: 1, crap: 1, cum: 1, cummer: 1, cumming: 1, cums: 1, cumshot: 1, cunilingus: 1, cunillingus: 1, cunnilingus: 1, cunt: 1, cuntlick: 1, cuntlicker: 1, cuntlicking: 1, cunts: 1, cyalis: 1, cyberfuc: 1, cyberfuck: 1, cyberfucked: 1, cyberfucker: 1, cyberfuckers: 1, cyberfucking: 1, d1ck: 1, damn: 1, dick: 1, dickhead: 1, dildo: 1, dildos: 1, dink: 1, dinks: 1, dirsa: 1, dlck: 1, "dog-fucker": 1, doggin: 1, dogging: 1, donkeyribber: 1, doosh: 1, duche: 1, dyke: 1, ejaculate: 1, ejaculated: 1, ejaculates: 1, ejaculating: 1, ejaculatings: 1, ejaculation: 1, ejakulate: 1, "f u c k": 1, "f u c k e r": 1, f4nny: 1, fag: 1, fagging: 1, faggitt: 1, faggot: 1, faggs: 1, fagot: 1, fagots: 1, fags: 1, fanny: 1, fannyflaps: 1, fannyfucker: 1, fanyy: 1, fatass: 1, fcuk: 1, fcuker: 1, fcuking: 1, feck: 1, fecker: 1, felching: 1, fellate: 1, fellatio: 1, fingerfuck: 1, fingerfucked: 1, fingerfucker: 1, fingerfuckers: 1, fingerfucking: 1, fingerfucks: 1, fistfuck: 1, fistfucked: 1, fistfucker: 1, fistfuckers: 1, fistfucking: 1, fistfuckings: 1, fistfucks: 1, flange: 1, fook: 1, fooker: 1, fuck: 1, fucka: 1, fucked: 1, fucker: 1, fuckers: 1, fuckhead: 1, fuckheads: 1, fuckin: 1, fucking: 1, fuckings: 1, fuckingshitmotherfucker: 1, fuckme: 1, fucks: 1, fuckwhit: 1, fuckwit: 1, "fudge packer": 1, fudgepacker: 1, fuk: 1, fuker: 1, fukker: 1, fukkin: 1, fuks: 1, fukwhit: 1, fukwit: 1, fux: 1, fux0r: 1, f_u_c_k: 1, gangbang: 1, gangbanged: 1, gangbangs: 1, gaylord: 1, gaysex: 1, goatse: 1, God: 1, "god-dam": 1, "god-damned": 1, goddamn: 1, goddamned: 1, hardcoresex: 1, hell: 1, heshe: 1, hoar: 1, hoare: 1, hoer: 1, homo: 1, hore: 1, horniest: 1, horny: 1, hotsex: 1, "jack-off": 1, jackoff: 1, jap: 1, "jerk-off": 1, jism: 1, jiz: 1, jizm: 1, jizz: 1, kawk: 1, knob: 1, knobead: 1, knobed: 1, knobend: 1, knobhead: 1, knobjocky: 1, knobjokey: 1, kock: 1, kondum: 1, kondums: 1, kum: 1, kummer: 1, kumming: 1, kums: 1, kunilingus: 1, "l3i+ch": 1, l3itch: 1, labia: 1, lust: 1, lusting: 1, m0f0: 1, m0fo: 1, m45terbate: 1, ma5terb8: 1, ma5terbate: 1, masochist: 1, "master-bate": 1, masterb8: 1, "masterbat*": 1, masterbat3: 1, masterbate: 1, masterbation: 1, masterbations: 1, masturbate: 1, "mo-fo": 1, mof0: 1, mofo: 1, mothafuck: 1, mothafucka: 1, mothafuckas: 1, mothafuckaz: 1, mothafucked: 1, mothafucker: 1, mothafuckers: 1, mothafuckin: 1, mothafucking: 1, mothafuckings: 1, mothafucks: 1, "mother fucker": 1, motherfuck: 1, motherfucked: 1, motherfucker: 1, motherfuckers: 1, motherfuckin: 1, motherfucking: 1, motherfuckings: 1, motherfuckka: 1, motherfucks: 1, muff: 1, mutha: 1, muthafecker: 1, muthafuckker: 1, muther: 1, mutherfucker: 1, n1gga: 1, n1gger: 1, nazi: 1, nigg3r: 1, nigg4h: 1, nigga: 1, niggah: 1, niggas: 1, niggaz: 1, nigger: 1, niggers: 1, nob: 1, "nob jokey": 1, nobhead: 1, nobjocky: 1, nobjokey: 1, numbnuts: 1, nutsack: 1, orgasim: 1, orgasims: 1, orgasm: 1, orgasms: 1, p0rn: 1, pawn: 1, pecker: 1, penis: 1, penisfucker: 1, phonesex: 1, phuck: 1, phuk: 1, phuked: 1, phuking: 1, phukked: 1, phukking: 1, phuks: 1, phuq: 1, pigfucker: 1, pimpis: 1, piss: 1, pissed: 1, pisser: 1, pissers: 1, pisses: 1, pissflaps: 1, pissin: 1, pissing: 1, pissoff: 1, poop: 1, porn: 1, porno: 1, pornography: 1, pornos: 1, prick: 1, pricks: 1, pron: 1, pube: 1, pusse: 1, pussi: 1, pussies: 1, pussy: 1, pussys: 1, rectum: 1, retard: 1, rimjaw: 1, rimming: 1, "s hit": 1, "s.o.b.": 1, sadist: 1, schlong: 1, screwing: 1, scroat: 1, scrote: 1, scrotum: 1, semen: 1, sex: 1, "sh!+": 1, "sh!t": 1, sh1t: 1, shag: 1, shagger: 1, shaggin: 1, shagging: 1, shemale: 1, "shi+": 1, shit: 1, shitdick: 1, shite: 1, shited: 1, shitey: 1, shitfuck: 1, shitfull: 1, shithead: 1, shiting: 1, shitings: 1, shits: 1, shitted: 1, shitter: 1, shitters: 1, shitting: 1, shittings: 1, shitty: 1, skank: 1, slut: 1, sluts: 1, smegma: 1, smut: 1, snatch: 1, "son-of-a-bitch": 1, spac: 1, spunk: 1, s_h_i_t: 1, t1tt1e5: 1, t1tties: 1, teets: 1, teez: 1, testical: 1, testicle: 1, tit: 1, titfuck: 1, tits: 1, titt: 1, tittie5: 1, tittiefucker: 1, titties: 1, tittyfuck: 1, tittywank: 1, titwank: 1, tosser: 1, turd: 1, tw4t: 1, twat: 1, twathead: 1, twatty: 1, twunt: 1, twunter: 1, v14gra: 1, v1gra: 1, vagina: 1, viagra: 1, vulva: 1, w00se: 1, wang: 1, wank: 1, wanker: 1, wanky: 1, whoar: 1, whore: 1, willies: 1, willy: 1, xrated: 1, xxx: 1};
}, function (e, t) {
  e.exports = ["4r5e", "5h1t", "5hit", "a55", "anal", "anus", "ar5e", "arrse", "arse", "ass", "ass-fucker", "asses", "assfucker", "assfukka", "asshole", "assholes", "asswhole", "a_s_s", "b!tch", "b00bs", "b17ch", "b1tch", "ballbag", "balls", "ballsack", "bastard", "beastial", "beastiality", "bellend", "bestial", "bestiality", "bi+ch", "biatch", "bitch", "bitcher", "bitchers", "bitches", "bitchin", "bitching", "bloody", "blow job", "blowjob", "blowjobs", "boiolas", "bollock", "bollok", "boner", "boob", "boobs", "booobs", "boooobs", "booooobs", "booooooobs", "breasts", "buceta", "bugger", "bum", "bunny fucker", "butt", "butthole", "buttmuch", "buttplug", "c0ck", "c0cksucker", "carpet muncher", "cawk", "chink", "cipa", "cl1t", "clit", "clitoris", "clits", "cnut", "cock", "cock-sucker", "cockface", "cockhead", "cockmunch", "cockmuncher", "cocks", "cocksuck", "cocksucked", "cocksucker", "cocksucking", "cocksucks", "cocksuka", "cocksukka", "cok", "cokmuncher", "coksucka", "coon", "cox", "crap", "cum", "cummer", "cumming", "cums", "cumshot", "cunilingus", "cunillingus", "cunnilingus", "cunt", "cuntlick", "cuntlicker", "cuntlicking", "cunts", "cyalis", "cyberfuc", "cyberfuck", "cyberfucked", "cyberfucker", "cyberfuckers", "cyberfucking", "d1ck", "damn", "dick", "dickhead", "dildo", "dildos", "dink", "dinks", "dirsa", "dlck", "dog-fucker", "doggin", "dogging", "donkeyribber", "doosh", "duche", "dyke", "ejaculate", "ejaculated", "ejaculates", "ejaculating", "ejaculatings", "ejaculation", "ejakulate", "f u c k", "f u c k e r", "f4nny", "fag", "fagging", "faggitt", "faggot", "faggs", "fagot", "fagots", "fags", "fanny", "fannyflaps", "fannyfucker", "fanyy", "fatass", "fcuk", "fcuker", "fcuking", "feck", "fecker", "felching", "fellate", "fellatio", "fingerfuck", "fingerfucked", "fingerfucker", "fingerfuckers", "fingerfucking", "fingerfucks", "fistfuck", "fistfucked", "fistfucker", "fistfuckers", "fistfucking", "fistfuckings", "fistfucks", "flange", "fook", "fooker", "fuck", "fucka", "fucked", "fucker", "fuckers", "fuckhead", "fuckheads", "fuckin", "fucking", "fuckings", "fuckingshitmotherfucker", "fuckme", "fucks", "fuckwhit", "fuckwit", "fudge packer", "fudgepacker", "fuk", "fuker", "fukker", "fukkin", "fuks", "fukwhit", "fukwit", "fux", "fux0r", "f_u_c_k", "gangbang", "gangbanged", "gangbangs", "gaylord", "gaysex", "goatse", "God", "god-dam", "god-damned", "goddamn", "goddamned", "hardcoresex", "hell", "heshe", "hoar", "hoare", "hoer", "homo", "hore", "horniest", "horny", "hotsex", "jack-off", "jackoff", "jap", "jerk-off", "jism", "jiz", "jizm", "jizz", "kawk", "knob", "knobead", "knobed", "knobend", "knobhead", "knobjocky", "knobjokey", "kock", "kondum", "kondums", "kum", "kummer", "kumming", "kums", "kunilingus", "l3i+ch", "l3itch", "labia", "lust", "lusting", "m0f0", "m0fo", "m45terbate", "ma5terb8", "ma5terbate", "masochist", "master-bate", "masterb8", "masterbat*", "masterbat3", "masterbate", "masterbation", "masterbations", "masturbate", "mo-fo", "mof0", "mofo", "mothafuck", "mothafucka", "mothafuckas", "mothafuckaz", "mothafucked", "mothafucker", "mothafuckers", "mothafuckin", "mothafucking", "mothafuckings", "mothafucks", "mother fucker", "motherfuck", "motherfucked", "motherfucker", "motherfuckers", "motherfuckin", "motherfucking", "motherfuckings", "motherfuckka", "motherfucks", "muff", "mutha", "muthafecker", "muthafuckker", "muther", "mutherfucker", "n1gga", "n1gger", "nazi", "nigg3r", "nigg4h", "nigga", "niggah", "niggas", "niggaz", "nigger", "niggers", "nob", "nob jokey", "nobhead", "nobjocky", "nobjokey", "numbnuts", "nutsack", "orgasim", "orgasims", "orgasm", "orgasms", "p0rn", "pawn", "pecker", "penis", "penisfucker", "phonesex", "phuck", "phuk", "phuked", "phuking", "phukked", "phukking", "phuks", "phuq", "pigfucker", "pimpis", "piss", "pissed", "pisser", "pissers", "pisses", "pissflaps", "pissin", "pissing", "pissoff", "poop", "porn", "porno", "pornography", "pornos", "prick", "pricks", "pron", "pube", "pusse", "pussi", "pussies", "pussy", "pussys", "rectum", "retard", "rimjaw", "rimming", "s hit", "s.o.b.", "sadist", "schlong", "screwing", "scroat", "scrote", "scrotum", "semen", "sex", "sh!+", "sh!t", "sh1t", "shag", "shagger", "shaggin", "shagging", "shemale", "shi+", "shit", "shitdick", "shite", "shited", "shitey", "shitfuck", "shitfull", "shithead", "shiting", "shitings", "shits", "shitted", "shitter", "shitters", "shitting", "shittings", "shitty", "skank", "slut", "sluts", "smegma", "smut", "snatch", "son-of-a-bitch", "spac", "spunk", "s_h_i_t", "t1tt1e5", "t1tties", "teets", "teez", "testical", "testicle", "tit", "titfuck", "tits", "titt", "tittie5", "tittiefucker", "titties", "tittyfuck", "tittywank", "titwank", "tosser", "turd", "tw4t", "twat", "twathead", "twatty", "twunt", "twunter", "v14gra", "v1gra", "vagina", "viagra", "vulva", "w00se", "wang", "wank", "wanker", "wanky", "whoar", "whore", "willies", "willy", "xrated", "xxx"];
}, function (e, t) {
  e.exports = /\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi;
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, "#chat {\n  color: #fff;\n  width: 40vw;\n  max-width: 400px;\n  user-select: none;\n  display: none;\n  z-index: 2;\n  padding: 10px;\n  border-radius: 0 4px 0 0;\n  transition: all 0.2s;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  font-size: 0.9vw;\n  line-height: 1vw;\n}\n#chat.mobile {\n  display: none !important;\n}\n#chat .messages {\n  flex-direction: column;\n  text-shadow: 1px 1px 0 #000;\n  max-height: 164px;\n  padding: 0 5px 0 0;\n  display: none;\n}\n#chat .messages.show {\n  display: flex;\n}\n#chat .messages .message {\n  word-break: break-all;\n  margin: 0 0 0.4vw;\n  display: none;\n}\n#chat .messages .message.show {\n  display: block;\n}\n#chat .messages .message:last-child {\n  margin: 0 0 5px;\n}\n#chat .messages .message * {\n  word-break: break-all;\n}\n#chat .offers {\n  display: flex;\n  justify-content: center;\n}\n#chat .offers .button {\n  margin-top: 0.5vw;\n  margin-bottom: 0.5vw;\n}\n#chat .offers .button:not(:last-child) {\n  margin-right: 0.5vw;\n}\n#chat .typing-players {\n  font-size: 12px;\n  line-height: 14px;\n  margin: 2px 0 5px;\n  color: rgba(255,255,255,0.6);\n  display: none;\n}\n#chat .typing-players.show {\n  display: block;\n}\n#chat .input-wrap:after {\n  display: none;\n}\n#chat .input-wrap {\n  position: relative;\n}\n#chat #chat-input {\n  width: 100%;\n  cursor: text;\n  background-color: transparent;\n  border: 0;\n  outline: 0;\n  color: #fff;\n}\n#chat #chat-input::placeholder {\n  color: #fff;\n  opacity: 1;\n  text-shadow: 1px 1px 0 #000;\n}\n#chat #chat-input:-ms-input-placeholder {\n  color: #fff;\n  text-shadow: 1px 1px 0 #000;\n}\n#chat #chat-input::-ms-input-placeholder {\n  color: #fff;\n  text-shadow: 1px 1px 0 #000;\n}\n#chat .hint {\n  position: absolute;\n  top: 0;\n  opacity: 0.3;\n}\n#chat .colors {\n  display: flex;\n  max-height: 0;\n  overflow: hidden;\n  transition: all 0.2s;\n}\n#chat .colors .color {\n  width: 100%;\n  height: 10px;\n  margin: 0 4px 0 0;\n  border-radius: 4px;\n  cursor: pointer;\n}\n#chat.show {\n  display: block;\n}\n#chat.highlighted {\n  background: rgba(0,0,0,0.6);\n  z-index: 70;\n}\n#chat.highlighted .messages {\n  max-height: 90vh;\n}\n#chat.highlighted .messages .message {\n  display: block;\n}\n#chat.highlighted .colors {\n  max-height: 10px;\n  margin: 5px 0 0;\n}\n#chat.highlighted #chat-input::placeholder {\n  color: #ccc;\n  opacity: 1;\n}\n#chat.highlighted #chat-input:-ms-input-placeholder {\n  color: #ccc;\n}\n#chat.highlighted #chat-input::-ms-input-placeholder {\n  color: #ccc;\n}\n", ""]);
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".modal {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 60;\n  background-color: rgba(0,0,0,0.4);\n}\n.modal.hide {\n  display: none;\n}\n.modal .container {\n  display: flex;\n  height: 100%;\n}\n.modal .container .content-wrap {\n  background-color: #fff;\n  margin: auto;\n  position: relative;\n  display: inline-block;\n  vertical-align: top;\n  padding: 15px;\n  border-radius: 5px;\n  color: #000;\n  box-shadow: inset 0 -3px 0 rgba(0,0,0,0.15);\n}\n.modal .container .content-wrap.scroll {\n  max-height: 95vh;\n}\n.modal .container .content-wrap .close {\n  position: absolute;\n  top: 1vw;\n  right: 1vw;\n  width: 1vw;\n  height: 1vw;\n  border: 0;\n  outline: 0;\n  opacity: 0.5;\n  transition: all 0.2s;\n  cursor: pointer;\n  background-color: transparent;\n}\n.modal .container .content-wrap .close:hover {\n  opacity: 1;\n}\n.modal .container .content-wrap .title {\n  font-size: 18px;\n  line-height: 20px;\n}\n.modal .container .content-wrap .content {\n  padding: 15px;\n}\n*[data-modal] {\n  cursor: pointer;\n}\n", ""]);
}, function (e, t, n) {
  var i = {"./en.json": 71, "./ru.json": 72};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 70;
}, function (e) {
  e.exports = JSON.parse('{"title":"Leave FeedBack!","rate":"Rate this game","awesome":"😍Awesome!","good":"🙂Good","meh":"😉Meh!","bad":"🙁Bad","horrible":"🤮Horrible!","whatLike":"What do you like?","whatImprove":"What needs to be improved?","contact":"How to contact you?","send":"Submit","leaveFeedback":"FeedBack","errorRate":"Please rate this game","errorLike":"What do you like?","errorImprove":"What needs to be improved?","errorSubmitTitle":"Error","errorSubmitText":"Something went wrong. Please try later","successSubmitTitle":"Success!","successSubmitText":"Many thanks for your help in improving the game!"}');
}, function (e) {
  e.exports = JSON.parse('{"title":"Оставьте отзыв!","rate":"Оцените эту игру","awesome":"😍Потрясающе!","good":"🙂Хорошо","meh":"😉Средне!","bad":"🙁Плохо","horrible":"🤮Ужасно!","whatLike":"Что понравилось?","whatImprove":"Что улучшить?","contact":"Как с Вами связаться?","send":"Отправить","leaveFeedback":"Отзыв","errorRate":"Пожалуйста, оцените игру","errorLike":"Что понравилось?","errorImprove":"Что улучшить?","errorSubmitTitle":"Ошибка","errorSubmitText":"Что-то пошло не так. Пожалуйста, попробуйте позже","successSubmitTitle":"Успешно!","successSubmitText":"Большое спасибо за вашу помощь в улучшении игры!"}');
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".modal-game-feedback .inputs {\n  display: flex;\n}\n.modal-game-feedback .inputs .rates {\n  margin-right: 3vw;\n  white-space: nowrap;\n}\n.modal-game-feedback .inputs .input-wraps {\n  min-width: 20vw;\n}\n.modal-game-feedback .wrap-rate-input {\n  margin: 0.5vw 0;\n}\n.modal-game-feedback .input-wrap {\n  margin: 1vw 0 0;\n}\n.modal-game-feedback .error {\n  color: #d04437;\n  display: none;\n  margin: 0 0 1vw;\n}\n.modal-game-feedback .error.show {\n  display: block;\n}\n.modal-game-feedback .button {\n  margin: 1.5vw auto 0;\n}\n#leave-game-feedback {\n  position: fixed;\n  z-index: 21;\n  background: rgba(0,0,0,0.4);\n  color: #fff;\n  padding: 0.5vw 1vw;\n  right: 0;\n  top: 50%;\n  transform: translate(37%, -50%) rotate(-90deg);\n  cursor: pointer;\n  display: none;\n  border-radius: 0.5vw 0.5vw 0 0;\n}\n#leave-game-feedback.show {\n  display: block;\n}\n.mobile-device .wrap-rate-input {\n  margin: 1vw 0;\n}\n", ""]);
}, function (e, t, n) {
  var i = n(15);
  e.exports = (i.default || i).template({compiler: [8, ">= 4.3.0"], main: function (e, t, n, i, r) {
    var o, s = null != t ? t : e.nullContext || {}, a = e.hooks.helperMissing, l = "function", c = e.escapeExpression;
    return '<div id="content-game-feedback">\n    <div class="form">\n        <div class="inputs">\n            <div class="rates">\n                <b>' + c(typeof (o = null != (o = n.rate || (null != t ? t.rate : t)) ? o : a) === l ? o.call(s, {name: "rate", hash: {}, data: r}) : o) + ' <span style="color: red">*</span></b>\n                <div class="wrap-rate-input"><input id="rate-awesome" class="radio" name="game-rate" type="radio"\n                                                    value="awesome"><label\n                        for="rate-awesome">' + c(typeof (o = null != (o = n.awesome || (null != t ? t.awesome : t)) ? o : a) === l ? o.call(s, {name: "awesome", hash: {}, data: r}) : o) + '</label></div>\n                <div class="wrap-rate-input"><input id="rate-good" class="radio" name="game-rate" type="radio"\n                                                    value="good"><label\n                        for="rate-good">' + c(typeof (o = null != (o = n.good || (null != t ? t.good : t)) ? o : a) === l ? o.call(s, {name: "good", hash: {}, data: r}) : o) + '</label></div>\n                <div class="wrap-rate-input"><input id="rate-meh" class="radio" name="game-rate" type="radio"\n                                                    value="meh"><label\n                        for="rate-meh">' + c(typeof (o = null != (o = n.meh || (null != t ? t.meh : t)) ? o : a) === l ? o.call(s, {name: "meh", hash: {}, data: r}) : o) + '</label></div>\n                <div class="wrap-rate-input"><input id="rate-bad" class="radio" name="game-rate" type="radio"\n                                                    value="bad"><label\n                        for="rate-bad">' + c(typeof (o = null != (o = n.bad || (null != t ? t.bad : t)) ? o : a) === l ? o.call(s, {name: "bad", hash: {}, data: r}) : o) + '</label></div>\n                <div class="wrap-rate-input"><input id="rate-horrible" class="radio" name="game-rate" type="radio"\n                                                    value="horrible"><label\n                        for="rate-horrible">' + c(typeof (o = null != (o = n.horrible || (null != t ? t.horrible : t)) ? o : a) === l ? o.call(s, {name: "horrible", hash: {}, data: r}) : o) + '</label></div>\n            </div>\n            <div class="input-wraps">\n                <div class="input-wrap">\n                    <textarea class="input what-like" placeholder="' + c(typeof (o = null != (o = n.whatLike || (null != t ? t.whatLike : t)) ? o : a) === l ? o.call(s, {name: "whatLike", hash: {}, data: r}) : o) + '*"></textarea>\n                </div>\n                <div class="input-wrap">\n                    <textarea class="input what-improve" placeholder="' + c(typeof (o = null != (o = n.whatImprove || (null != t ? t.whatImprove : t)) ? o : a) === l ? o.call(s, {name: "whatImprove", hash: {}, data: r}) : o) + '*"></textarea>\n                </div>\n                <div class="input-wrap">\n                    <input type="text" class="input contact" placeholder="' + c(typeof (o = null != (o = n.contact || (null != t ? t.contact : t)) ? o : a) === l ? o.call(s, {name: "contact", hash: {}, data: r}) : o) + '">\n                </div>\n            </div>\n        </div>\n        <button class="button send-feedback">' + c(typeof (o = null != (o = n.send || (null != t ? t.send : t)) ? o : a) === l ? o.call(s, {name: "send", hash: {}, data: r}) : o) + "</button>\n    </div>\n</div>";
  }, useData: true});
}, function (e, t, n) {
  "use strict";
  function i(e) {
    return e && e.__esModule ? e : {default: e};
  }
  function r(e) {
    if (e && e.__esModule) return e;
    var t = {};
    if (null != e) for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
    return t.default = e, t;
  }
  t.__esModule = true;
  var o = r(n(23)), s = i(n(86)), a = i(n(5)), l = r(n(2)), c = r(n(87)), h = i(n(88));
  function u() {
    var e = new o.HandlebarsEnvironment;
    return l.extend(e, o), e.SafeString = s.default, e.Exception = a.default, e.Utils = l, e.escapeExpression = l.escapeExpression, e.VM = c, e.template = function (t) {
      return c.template(t, e);
    }, e;
  }
  var d = u();
  d.create = u, h.default(d), d.default = d, t.default = d, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i = n(2);
  t.default = function (e) {
    e.registerHelper("blockHelperMissing", function (t, n) {
      var r = n.inverse, o = n.fn;
      if (true === t) return o(this);
      if (false === t || null == t) return r(this);
      if (i.isArray(t)) return t.length > 0 ? (n.ids && (n.ids = [n.name]), e.helpers.each(t, n)) : r(this);
      if (n.data && n.ids) {
        var s = i.createFrame(n.data);
        s.contextPath = i.appendContextPath(n.data.contextPath, n.name), n = {data: s};
      }
      return o(t, n);
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i, r = n(2), o = n(5), s = (i = o) && i.__esModule ? i : {default: i};
  t.default = function (e) {
    e.registerHelper("each", function (e, t) {
      if (!t) throw new s.default("Must pass iterator to #each");
      var n = t.fn, i = t.inverse, o = 0, a = "", l = undefined, c = undefined;
      function h(t, i, o) {
        l && (l.key = t, l.index = i, l.first = 0 === i, l.last = !!o, c && (l.contextPath = c + t)), a += n(e[t], {data: l, blockParams: r.blockParams([e[t], t], [c + t, null])});
      }
      if (t.data && t.ids && (c = r.appendContextPath(t.data.contextPath, t.ids[0]) + "."), r.isFunction(e) && (e = e.call(this)), t.data && (l = r.createFrame(t.data)), e && "object" == typeof e) if (r.isArray(e)) for (var u = e.length; o < u; o++) o in e && h(o, o, o === e.length - 1); else {
        var d = undefined;
        for (var p in e) e.hasOwnProperty(p) && (undefined !== d && h(d, o - 1), d = p, o++);
        undefined !== d && h(d, o - 1, true);
      }
      return 0 === o && (a = i(this)), a;
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i, r = n(5), o = (i = r) && i.__esModule ? i : {default: i};
  t.default = function (e) {
    e.registerHelper("helperMissing", function () {
      if (1 !== arguments.length) throw new o.default('Missing helper: "' + arguments[arguments.length - 1].name + '"');
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i = n(2);
  t.default = function (e) {
    e.registerHelper("if", function (e, t) {
      return i.isFunction(e) && (e = e.call(this)), !t.hash.includeZero && !e || i.isEmpty(e) ? t.inverse(this) : t.fn(this);
    }), e.registerHelper("unless", function (t, n) {
      return e.helpers.if.call(this, t, {fn: n.inverse, inverse: n.fn, hash: n.hash});
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true, t.default = function (e) {
    e.registerHelper("log", function () {
      for (var t = [undefined], n = arguments[arguments.length - 1], i = 0; i < arguments.length - 1; i++) t.push(arguments[i]);
      var r = 1;
      null != n.hash.level ? r = n.hash.level : n.data && null != n.data.level && (r = n.data.level), t[0] = r, e.log.apply(e, t);
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true, t.default = function (e) {
    e.registerHelper("lookup", function (e, t) {
      return e ? "constructor" !== t || e.propertyIsEnumerable(t) ? e[t] : undefined : e;
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i = n(2);
  t.default = function (e) {
    e.registerHelper("with", function (e, t) {
      i.isFunction(e) && (e = e.call(this));
      var n = t.fn;
      if (i.isEmpty(e)) return t.inverse(this);
      var r = t.data;
      return t.data && t.ids && ((r = i.createFrame(t.data)).contextPath = i.appendContextPath(t.data.contextPath, t.ids[0])), n(e, {data: r, blockParams: i.blockParams([e], [r && r.contextPath])});
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true, t.registerDefaultDecorators = function (e) {
    o.default(e);
  };
  var i, r = n(84), o = (i = r) && i.__esModule ? i : {default: i};
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i = n(2);
  t.default = function (e) {
    e.registerDecorator("inline", function (e, t, n, r) {
      var o = e;
      return t.partials || (t.partials = {}, o = function (r, o) {
        var s = n.partials;
        n.partials = i.extend({}, s, t.partials);
        var a = e(r, o);
        return n.partials = s, a;
      }), t.partials[r.args[0]] = r.fn, o;
    });
  }, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true;
  var i = n(2), r = {methodMap: ["debug", "info", "warn", "error"], level: "info", lookupLevel: function (e) {
    if ("string" == typeof e) {
      var t = i.indexOf(r.methodMap, e.toLowerCase());
      e = t >= 0 ? t : parseInt(e, 10);
    }
    return e;
  }, log: function (e) {
    if (e = r.lookupLevel(e), "undefined" != typeof console && r.lookupLevel(r.level) <= e) {
      var t = r.methodMap[e];
      console[t] || (t = "log");
      for (var n = arguments.length, i = Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++) i[o - 1] = arguments[o];
      console[t].apply(console, i);
    }
  }};
  t.default = r, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  function i(e) {
    this.string = e;
  }
  t.__esModule = true, i.prototype.toString = i.prototype.toHTML = function () {
    return "" + this.string;
  }, t.default = i, e.exports = t.default;
}, function (e, t, n) {
  "use strict";
  t.__esModule = true, t.checkRevision = function (e) {
    var t = e && e[0] || 1, n = a.COMPILER_REVISION;
    if (t >= a.LAST_COMPATIBLE_COMPILER_REVISION && t <= a.COMPILER_REVISION) return;
    if (t < a.LAST_COMPATIBLE_COMPILER_REVISION) {
      var i = a.REVISION_CHANGES[n], r = a.REVISION_CHANGES[t];
      throw new s.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + i + ") or downgrade your runtime to an older version (" + r + ").");
    }
    throw new s.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + e[1] + ").");
  }, t.template = function (e, t) {
    if (!t) throw new s.default("No environment passed to template");
    if (!e || !e.main) throw new s.default("Unknown template object: " + typeof e);
    e.main.decorator = e.main_d, t.VM.checkRevision(e.compiler);
    var n = e.compiler && 7 === e.compiler[0];
    var i = {strict: function (e, t) {
      if (!(t in e)) throw new s.default('"' + t + '" not defined in ' + e);
      return e[t];
    }, lookup: function (e, t) {
      for (var n = e.length, i = 0; i < n; i++) if (e[i] && null != e[i][t]) return e[i][t];
    }, lambda: function (e, t) {
      return "function" == typeof e ? e.call(t) : e;
    }, escapeExpression: r.escapeExpression, invokePartial: function (n, i, o) {
      o.hash && (i = r.extend({}, i, o.hash), o.ids && (o.ids[0] = true)), n = t.VM.resolvePartial.call(this, n, i, o);
      var a = r.extend({}, o, {hooks: this.hooks}), l = t.VM.invokePartial.call(this, n, i, a);
      if (null == l && t.compile && (o.partials[o.name] = t.compile(n, e.compilerOptions, t), l = o.partials[o.name](i, a)), null != l) {
        if (o.indent) {
          for (var c = l.split("\n"), h = 0, u = c.length; h < u && (c[h] || h + 1 !== u); h++) c[h] = o.indent + c[h];
          l = c.join("\n");
        }
        return l;
      }
      throw new s.default("The partial " + o.name + " could not be compiled when running in runtime-only mode");
    }, fn: function (t) {
      var n = e[t];
      return n.decorator = e[t + "_d"], n;
    }, programs: [], program: function (e, t, n, i, r) {
      var o = this.programs[e], s = this.fn(e);
      return t || r || i || n ? o = c(this, e, s, t, n, i, r) : o || (o = this.programs[e] = c(this, e, s)), o;
    }, data: function (e, t) {
      for (; e && t--;) e = e._parent;
      return e;
    }, nullContext: Object.seal({}), noop: t.VM.noop, compilerInfo: e.compiler};
    function o(t) {
      var n = arguments.length <= 1 || undefined === arguments[1] ? {} : arguments[1], r = n.data;
      o._setup(n), !n.partial && e.useData && (r = function (e, t) {
        t && "root" in t || ((t = t ? a.createFrame(t) : {}).root = e);
        return t;
      }(t, r));
      var s = undefined, l = e.useBlockParams ? [] : undefined;
      function c(t) {
        return "" + e.main(i, t, i.helpers, i.partials, r, l, s);
      }
      return e.useDepths && (s = n.depths ? t != n.depths[0] ? [t].concat(n.depths) : n.depths : [t]), (c = u(e.main, c, i, n.depths || [], r, l))(t, n);
    }
    return o.isTop = true, o._setup = function (o) {
      if (o.partial) i.helpers = o.helpers, i.partials = o.partials, i.decorators = o.decorators, i.hooks = o.hooks; else {
        i.helpers = r.extend({}, t.helpers, o.helpers), e.usePartial && (i.partials = r.extend({}, t.partials, o.partials)), (e.usePartial || e.useDecorators) && (i.decorators = r.extend({}, t.decorators, o.decorators)), i.hooks = {};
        var s = o.allowCallsToHelperMissing || n;
        l.moveHelperToHooks(i, "helperMissing", s), l.moveHelperToHooks(i, "blockHelperMissing", s);
      }
    }, o._child = function (t, n, r, o) {
      if (e.useBlockParams && !r) throw new s.default("must pass block params");
      if (e.useDepths && !o) throw new s.default("must pass parent depths");
      return c(i, t, e[t], n, 0, r, o);
    }, o;
  }, t.wrapProgram = c, t.resolvePartial = function (e, t, n) {
    e ? e.call || n.name || (n.name = e, e = n.partials[e]) : e = "@partial-block" === n.name ? n.data["partial-block"] : n.partials[n.name];
    return e;
  }, t.invokePartial = function (e, t, n) {
    var i = n.data && n.data["partial-block"];
    n.partial = true, n.ids && (n.data.contextPath = n.ids[0] || n.data.contextPath);
    var o = undefined;
    n.fn && n.fn !== h && function () {
      n.data = a.createFrame(n.data);
      var e = n.fn;
      o = n.data["partial-block"] = function (t) {
        var n = arguments.length <= 1 || undefined === arguments[1] ? {} : arguments[1];
        return n.data = a.createFrame(n.data), n.data["partial-block"] = i, e(t, n);
      }, e.partials && (n.partials = r.extend({}, n.partials, e.partials));
    }();
    undefined === e && o && (e = o);
    if (undefined === e) throw new s.default("The partial " + n.name + " could not be found");
    if (e instanceof Function) return e(t, n);
  }, t.noop = h;
  var i, r = function (e) {
    if (e && e.__esModule) return e;
    var t = {};
    if (null != e) for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
    return t.default = e, t;
  }(n(2)), o = n(5), s = (i = o) && i.__esModule ? i : {default: i}, a = n(23), l = n(24);
  function c(e, t, n, i, r, o, s) {
    function a(t) {
      var r = arguments.length <= 1 || undefined === arguments[1] ? {} : arguments[1], a = s;
      return !s || t == s[0] || t === e.nullContext && null === s[0] || (a = [t].concat(s)), n(e, t, e.helpers, e.partials, r.data || i, o && [r.blockParams].concat(o), a);
    }
    return (a = u(n, a, e, s, i, o)).program = t, a.depth = s ? s.length : 0, a.blockParams = r || 0, a;
  }
  function h() {
    return "";
  }
  function u(e, t, n, i, o, s) {
    if (e.decorator) {
      var a = {};
      t = e.decorator(t, a, n, i && i[0], o, s, i), r.extend(t, a);
    }
    return t;
  }
}, function (e, t, n) {
  "use strict";
  (function (n) {
    t.__esModule = true, t.default = function (e) {
      var t = undefined !== n ? n : window, i = t.Handlebars;
      e.noConflict = function () {
        return t.Handlebars === e && (t.Handlebars = i), e;
      };
    }, e.exports = t.default;
  }.call(this, n(6)));
}, function (e, t, n) {
  var i = n(15);
  e.exports = (i.default || i).template({compiler: [8, ">= 4.3.0"], main: function (e, t, n, i, r) {
    var o;
    return '<div id="leave-game-feedback" class="show">' + e.escapeExpression("function" == typeof (o = null != (o = n.leaveFeedback || (null != t ? t.leaveFeedback : t)) ? o : e.hooks.helperMissing) ? o.call(null != t ? t : e.nullContext || {}, {name: "leaveFeedback", hash: {}, data: r}) : o) + "</div>";
  }, useData: true});
}, function (e, t, n) {
  var i = {"./en.json": 91, "./ru.json": 92};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 90;
}, function (e) {
  e.exports = JSON.parse('{"cachedEntitiesCount":"Cached entities","entitiesCount":"Entities","drawableEntitiesCount":"Drawable entities","serverEntitiesCount":"Server entities","box2dActiveEntitiesCount":"Box2d active entities","box2dEntitiesCount":"Box2d entities","box2dJointsCount":"Box2d joints","sceneObjects3dAllCount":"Scene all objects3d","sceneHudObjects3dAllCount":"SceneHud all objects3d","instancedObjectsCount":"Instanced objects","instancedPlacesCount":"Instanced places","instancedBusyPlacesCount":"Instanced busy places","memoryGeometriesCount":"Geometries in memory","memoryTexturesCount":"Textures in memory","renderTrianglesCount":"Triangles","cachedSoundsCount":"Cached sounds"}');
}, function (e) {
  e.exports = JSON.parse('{"cachedEntitiesCount":"Cached entities","entitiesCount":"Entities","drawableEntitiesCount":"Drawable entities","serverEntitiesCount":"Server entities","box2dActiveEntitiesCount":"Box2d active entities","box2dEntitiesCount":"Box2d entities","box2dJointsCount":"Box2d joints","sceneObjects3dAllCount":"Scene all objects3d","sceneHudObjects3dAllCount":"SceneHud all objects3d","memoryGeometriesCount":"Geometries in memory","memoryTexturesCount":"Textures in memory","renderTrianglesCount":"Triangles","cachedSoundsCount":"Cached sounds"}');
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".game-metrics {\n  position: fixed;\n  top: 1vw;\n  left: 1vw;\n  color: #fff;\n  font-size: 1.5vw;\n  line-height: 1.8vw;\n  display: none;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n  z-index: 150;\n  background: rgba(0,0,0,0.7);\n  padding: 1vw;\n  border-radius: 0.4vw;\n}\n.game-metrics .red {\n  color: #ff6767;\n  font-weight: bold;\n  font-size: 2vw;\n}\n.game-metrics span {\n  font-family: 'Roboto Condensed', sans-serif;\n}\n", ""]);
}, function (e, t, n) {
  var i = n(15);
  e.exports = (i.default || i).template({compiler: [8, ">= 4.3.0"], main: function (e, t, n, i, r) {
    var o, s = null != t ? t : e.nullContext || {}, a = e.hooks.helperMissing, l = "function", c = e.escapeExpression;
    return '<div class="game-metrics">\n    <p class="cached-entities-count">' + c(typeof (o = null != (o = n.cachedEntitiesCount || (null != t ? t.cachedEntitiesCount : t)) ? o : a) === l ? o.call(s, {name: "cachedEntitiesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="entities-count">' + c(typeof (o = null != (o = n.entitiesCount || (null != t ? t.entitiesCount : t)) ? o : a) === l ? o.call(s, {name: "entitiesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="drawable-entities-count">' + c(typeof (o = null != (o = n.drawableEntitiesCount || (null != t ? t.drawableEntitiesCount : t)) ? o : a) === l ? o.call(s, {name: "drawableEntitiesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="server-entities-count">' + c(typeof (o = null != (o = n.serverEntitiesCount || (null != t ? t.serverEntitiesCount : t)) ? o : a) === l ? o.call(s, {name: "serverEntitiesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="box2d-active-entities-count">' + c(typeof (o = null != (o = n.box2dActiveEntitiesCount || (null != t ? t.box2dActiveEntitiesCount : t)) ? o : a) === l ? o.call(s, {name: "box2dActiveEntitiesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="box2d-entities-count">' + c(typeof (o = null != (o = n.box2dEntitiesCount || (null != t ? t.box2dEntitiesCount : t)) ? o : a) === l ? o.call(s, {name: "box2dEntitiesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="box2d-joints-count">' + c(typeof (o = null != (o = n.box2dJointsCount || (null != t ? t.box2dJointsCount : t)) ? o : a) === l ? o.call(s, {name: "box2dJointsCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="scene-objects3d-all-count">' + c(typeof (o = null != (o = n.sceneObjects3dAllCount || (null != t ? t.sceneObjects3dAllCount : t)) ? o : a) === l ? o.call(s, {name: "sceneObjects3dAllCount", hash: {}, data: r}) : o) + ': <span class="red"></span></p>\n    <p class="scene-hud-objects3d-all-count">' + c(typeof (o = null != (o = n.sceneHudObjects3dAllCount || (null != t ? t.sceneHudObjects3dAllCount : t)) ? o : a) === l ? o.call(s, {name: "sceneHudObjects3dAllCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="memory-geometries-count">' + c(typeof (o = null != (o = n.memoryGeometriesCount || (null != t ? t.memoryGeometriesCount : t)) ? o : a) === l ? o.call(s, {name: "memoryGeometriesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="instanced-objects-count">' + c(typeof (o = null != (o = n.instancedObjectsCount || (null != t ? t.instancedObjectsCount : t)) ? o : a) === l ? o.call(s, {name: "instancedObjectsCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="instanced-places-count">' + c(typeof (o = null != (o = n.instancedPlacesCount || (null != t ? t.instancedPlacesCount : t)) ? o : a) === l ? o.call(s, {name: "instancedPlacesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="instanced-busy-places-count">' + c(typeof (o = null != (o = n.instancedBusyPlacesCount || (null != t ? t.instancedBusyPlacesCount : t)) ? o : a) === l ? o.call(s, {name: "instancedBusyPlacesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="memory-textures-count">' + c(typeof (o = null != (o = n.memoryTexturesCount || (null != t ? t.memoryTexturesCount : t)) ? o : a) === l ? o.call(s, {name: "memoryTexturesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="render-triangles-count">' + c(typeof (o = null != (o = n.renderTrianglesCount || (null != t ? t.renderTrianglesCount : t)) ? o : a) === l ? o.call(s, {name: "renderTrianglesCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <p class="cached-sounds-count">' + c(typeof (o = null != (o = n.cachedSoundsCount || (null != t ? t.cachedSoundsCount : t)) ? o : a) === l ? o.call(s, {name: "cachedSoundsCount", hash: {}, data: r}) : o) + ': <span></span></p>\n    <button class="button small" onclick="GAME.events.showAverageHandlingTimeListeners();">AHTL</button>\n</div>\n';
  }, useData: true});
}, function (e) {
  e.exports = JSON.parse('{"players":"players","ping":"ping","ms":"ms","totalOnline":"Total online","wait":"Wait"}');
}, function (e) {
  e.exports = JSON.parse('{"players":"игроков","ping":"пинг","ms":"мс","totalOnline":"Всего онлайн","wait":"Ждите"}');
}, function (e, t, n) {
  var i = {"./en.json": 98, "./ru.json": 99};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 97;
}, function (e) {
  e.exports = JSON.parse('{"newestTooltip":{"title":"Game update!","text":"Game update released. Click to update"},"oldestTooltip":{"title":"Update rollback","text":"Developer rolled back game update. Click to reload"}}');
}, function (e) {
  e.exports = JSON.parse('{"newestTooltip":{"title":"Обновление игры!","text":"Выпущено обновление игры. Нажмите чтобы обновить"},"oldestTooltip":{"title":"Откат обновления","text":"Разработчик откатил обновление. Нажмите для перезагрузки"}}');
}, function (e, t, n) {
  var i = n(26), r = n(7)("socket.io-client:url");
  e.exports = function (e, t) {
    var n = e;
    t = t || "undefined" != typeof location && location, null == e && (e = t.protocol + "//" + t.host);
    "string" == typeof e && ("/" === e.charAt(0) && (e = "/" === e.charAt(1) ? t.protocol + e : t.host + e), /^(https?|wss?):\/\//.test(e) || (r("protocol-less url %s", e), e = undefined !== t ? t.protocol + "//" + e : "https://" + e), r("parse %s", e), n = i(e));
    n.port || (/^(http|ws)$/.test(n.protocol) ? n.port = "80" : /^(http|ws)s$/.test(n.protocol) && (n.port = "443"));
    n.path = n.path || "/";
    var o = -1 !== n.host.indexOf(":") ? "[" + n.host + "]" : n.host;
    return n.id = n.protocol + "://" + o + ":" + n.port, n.href = n.protocol + "://" + o + (t && t.port === n.port ? "" : ":" + n.port), n;
  };
}, function (e, t, n) {
  e.exports = function (e) {
    function t(e) {
      let t = 0;
      for (let n = 0; n < e.length; n++) t = (t << 5) - t + e.charCodeAt(n), t |= 0;
      return i.colors[Math.abs(t) % i.colors.length];
    }
    function i(e) {
      let n;
      function s(...e) {
        if (!s.enabled) return;
        const r = Number(new Date), o = r - (n || r);
        t.diff = o, t.prev = n, t.curr = r, n = r, e[0] = i.coerce(e[0]), "string" != typeof e[0] && e.unshift("%O");
        let a = 0;
        e[0] = e[0].replace(/%([a-zA-Z%])/g, (n, r) => {
          if ("%%" === n) return n;
          a++;
          const o = i.formatters[r];
          if ("function" == typeof o) {
            const i = e[a];
            n = o.call(t, i), e.splice(a, 1), a--;
          }
          return n;
        }), i.formatArgs.call(t, e), (t.log || i.log).apply(t, e);
      }
      return s.namespace = e, s.enabled = i.enabled(e), s.useColors = i.useColors(), s.color = t(e), s.destroy = r, s.extend = o, "function" == typeof i.init && i.init(s), i.instances.push(s), s;
    }
    function r() {
      const e = i.instances.indexOf(this);
      return -1 !== e && (i.instances.splice(e, 1), true);
    }
    function o(e, t) {
      const n = i(this.namespace + (undefined === t ? ":" : t) + e);
      return n.log = this.log, n;
    }
    function s(e) {
      return e.toString().substring(2, e.toString().length - 2).replace(/\.\*\?$/, "*");
    }
    return i.debug = i, i.default = i, i.coerce = function (e) {
      if (e instanceof Error) return e.stack || e.message;
      return e;
    }, i.disable = function () {
      const e = [...i.names.map(s), ...i.skips.map(s).map(e => "-" + e)].join(",");
      return i.enable(""), e;
    }, i.enable = function (e) {
      let t;
      i.save(e), i.names = [], i.skips = [];
      const n = ("string" == typeof e ? e : "").split(/[\s,]+/), r = n.length;
      for (t = 0; t < r; t++) n[t] && ("-" === (e = n[t].replace(/\*/g, ".*?"))[0] ? i.skips.push(new RegExp("^" + e.substr(1) + "$")) : i.names.push(new RegExp("^" + e + "$")));
      for (t = 0; t < i.instances.length; t++) {
        const e = i.instances[t];
        e.enabled = i.enabled(e.namespace);
      }
    }, i.enabled = function (e) {
      if ("*" === e[e.length - 1]) return true;
      let t, n;
      for (t = 0, n = i.skips.length; t < n; t++) if (i.skips[t].test(e)) return false;
      for (t = 0, n = i.names.length; t < n; t++) if (i.names[t].test(e)) return true;
      return false;
    }, i.humanize = n(102), Object.keys(e).forEach(t => {
      i[t] = e[t];
    }), i.instances = [], i.names = [], i.skips = [], i.formatters = {}, i.selectColor = t, i.enable(i.load()), i;
  };
}, function (e, t) {
  var n = 1e3, i = 60 * n, r = 60 * i, o = 24 * r, s = 7 * o, a = 365.25 * o;
  function l(e, t, n, i) {
    var r = t >= 1.5 * n;
    return Math.round(e / n) + " " + i + (r ? "s" : "");
  }
  e.exports = function (e, t) {
    t = t || {};
    var c = typeof e;
    if ("string" === c && e.length > 0) return function (e) {
      if ((e = String(e)).length > 100) return;
      var t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);
      if (!t) return;
      var l = parseFloat(t[1]);
      switch ((t[2] || "ms").toLowerCase()) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return l * a;
        case "weeks":
        case "week":
        case "w":
          return l * s;
        case "days":
        case "day":
        case "d":
          return l * o;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return l * r;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return l * i;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return l * n;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return l;
        default:
          return;
      }
    }(e);
    if ("number" === c && isFinite(e)) return t.long ? function (e) {
      var t = Math.abs(e);
      if (t >= o) return l(e, t, o, "day");
      if (t >= r) return l(e, t, r, "hour");
      if (t >= i) return l(e, t, i, "minute");
      if (t >= n) return l(e, t, n, "second");
      return e + " ms";
    }(e) : function (e) {
      var t = Math.abs(e);
      if (t >= o) return Math.round(e / o) + "d";
      if (t >= r) return Math.round(e / r) + "h";
      if (t >= i) return Math.round(e / i) + "m";
      if (t >= n) return Math.round(e / n) + "s";
      return e + "ms";
    }(e);
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
  };
}, function (e, t, n) {
  (function (i) {
    function r() {
      var e;
      try {
        e = t.storage.debug;
      } catch (e) {}
      return !e && undefined !== i && "env" in i && (e = i.env.DEBUG), e;
    }
    (t = e.exports = n(104)).log = function () {
      return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }, t.formatArgs = function (e) {
      var n = this.useColors;
      if (e[0] = (n ? "%c" : "") + this.namespace + (n ? " %c" : " ") + e[0] + (n ? "%c " : " ") + "+" + t.humanize(this.diff), !n) return;
      var i = "color: " + this.color;
      e.splice(1, 0, i, "color: inherit");
      var r = 0, o = 0;
      e[0].replace(/%[a-zA-Z%]/g, function (e) {
        "%%" !== e && (r++, "%c" === e && (o = r));
      }), e.splice(o, 0, i);
    }, t.save = function (e) {
      try {
        null == e ? t.storage.removeItem("debug") : t.storage.debug = e;
      } catch (e) {}
    }, t.load = r, t.useColors = function () {
      if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return true;
      if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return false;
      return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }, t.storage = "undefined" != typeof chrome && undefined !== chrome.storage ? chrome.storage.local : function () {
      try {
        return window.localStorage;
      } catch (e) {}
    }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t.formatters.j = function (e) {
      try {
        return JSON.stringify(e);
      } catch (e) {
        return "[UnexpectedJSONParseError]: " + e.message;
      }
    }, t.enable(r());
  }.call(this, n(16)));
}, function (e, t, n) {
  function i(e) {
    var n;
    function i() {
      if (i.enabled) {
        var e = i, r = +new Date, o = r - (n || r);
        e.diff = o, e.prev = n, e.curr = r, n = r;
        for (var s = new Array(arguments.length), a = 0; a < s.length; a++) s[a] = arguments[a];
        s[0] = t.coerce(s[0]), "string" != typeof s[0] && s.unshift("%O");
        var l = 0;
        s[0] = s[0].replace(/%([a-zA-Z%])/g, function (n, i) {
          if ("%%" === n) return n;
          l++;
          var r = t.formatters[i];
          if ("function" == typeof r) {
            var o = s[l];
            n = r.call(e, o), s.splice(l, 1), l--;
          }
          return n;
        }), t.formatArgs.call(e, s), (i.log || t.log || console.log.bind(console)).apply(e, s);
      }
    }
    return i.namespace = e, i.enabled = t.enabled(e), i.useColors = t.useColors(), i.color = function (e) {
      var n, i = 0;
      for (n in e) i = (i << 5) - i + e.charCodeAt(n), i |= 0;
      return t.colors[Math.abs(i) % t.colors.length];
    }(e), i.destroy = r, "function" == typeof t.init && t.init(i), t.instances.push(i), i;
  }
  function r() {
    var e = t.instances.indexOf(this);
    return -1 !== e && (t.instances.splice(e, 1), true);
  }
  (t = e.exports = i.debug = i.default = i).coerce = function (e) {
    return e instanceof Error ? e.stack || e.message : e;
  }, t.disable = function () {
    t.enable("");
  }, t.enable = function (e) {
    var n;
    t.save(e), t.names = [], t.skips = [];
    var i = ("string" == typeof e ? e : "").split(/[\s,]+/), r = i.length;
    for (n = 0; n < r; n++) i[n] && ("-" === (e = i[n].replace(/\*/g, ".*?"))[0] ? t.skips.push(new RegExp("^" + e.substr(1) + "$")) : t.names.push(new RegExp("^" + e + "$")));
    for (n = 0; n < t.instances.length; n++) {
      var o = t.instances[n];
      o.enabled = t.enabled(o.namespace);
    }
  }, t.enabled = function (e) {
    if ("*" === e[e.length - 1]) return true;
    var n, i;
    for (n = 0, i = t.skips.length; n < i; n++) if (t.skips[n].test(e)) return false;
    for (n = 0, i = t.names.length; n < i; n++) if (t.names[n].test(e)) return true;
    return false;
  }, t.humanize = n(105), t.instances = [], t.names = [], t.skips = [], t.formatters = {};
}, function (e, t) {
  var n = 1e3, i = 60 * n, r = 60 * i, o = 24 * r, s = 365.25 * o;
  function a(e, t, n) {
    if (!(e < t)) return e < 1.5 * t ? Math.floor(e / t) + " " + n : Math.ceil(e / t) + " " + n + "s";
  }
  e.exports = function (e, t) {
    t = t || {};
    var l, c = typeof e;
    if ("string" === c && e.length > 0) return function (e) {
      if ((e = String(e)).length > 100) return;
      var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);
      if (!t) return;
      var a = parseFloat(t[1]);
      switch ((t[2] || "ms").toLowerCase()) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return a * s;
        case "days":
        case "day":
        case "d":
          return a * o;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return a * r;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return a * i;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return a * n;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return a;
        default:
          return;
      }
    }(e);
    if ("number" === c && false === isNaN(e)) return t.long ? a(l = e, o, "day") || a(l, r, "hour") || a(l, i, "minute") || a(l, n, "second") || l + " ms" : function (e) {
      if (e >= o) return Math.round(e / o) + "d";
      if (e >= r) return Math.round(e / r) + "h";
      if (e >= i) return Math.round(e / i) + "m";
      if (e >= n) return Math.round(e / n) + "s";
      return e + "ms";
    }(e);
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
  };
}, function (e, t, n) {
  function i(e) {
    if (e) return function (e) {
      for (var t in i.prototype) e[t] = i.prototype[t];
      return e;
    }(e);
  }
  e.exports = i, i.prototype.on = i.prototype.addEventListener = function (e, t) {
    return this._callbacks = this._callbacks || {}, (this._callbacks["$" + e] = this._callbacks["$" + e] || []).push(t), this;
  }, i.prototype.once = function (e, t) {
    function n() {
      this.off(e, n), t.apply(this, arguments);
    }
    return n.fn = t, this.on(e, n), this;
  }, i.prototype.off = i.prototype.removeListener = i.prototype.removeAllListeners = i.prototype.removeEventListener = function (e, t) {
    if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
    var n, i = this._callbacks["$" + e];
    if (!i) return this;
    if (1 == arguments.length) return delete this._callbacks["$" + e], this;
    for (var r = 0; r < i.length; r++) if ((n = i[r]) === t || n.fn === t) {
      i.splice(r, 1);
      break;
    }
    return this;
  }, i.prototype.emit = function (e) {
    this._callbacks = this._callbacks || {};
    var t = [].slice.call(arguments, 1), n = this._callbacks["$" + e];
    if (n) for (var i = 0, r = (n = n.slice(0)).length; i < r; ++i) n[i].apply(this, t);
    return this;
  }, i.prototype.listeners = function (e) {
    return this._callbacks = this._callbacks || {}, this._callbacks["$" + e] || [];
  }, i.prototype.hasListeners = function (e) {
    return !!this.listeners(e).length;
  };
}, function (e, t, n) {
  var i = n(27), r = n(28), o = Object.prototype.toString, s = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === o.call(Blob), a = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === o.call(File);
  t.deconstructPacket = function (e) {
    var t = [], n = e.data, o = e;
    return o.data = function e(t, n) {
      if (!t) return t;
      if (r(t)) {
        var o = {_placeholder: true, num: n.length};
        return n.push(t), o;
      }
      if (i(t)) {
        for (var s = new Array(t.length), a = 0; a < t.length; a++) s[a] = e(t[a], n);
        return s;
      }
      if ("object" == typeof t && !(t instanceof Date)) {
        s = {};
        for (var l in t) s[l] = e(t[l], n);
        return s;
      }
      return t;
    }(n, t), o.attachments = t.length, {packet: o, buffers: t};
  }, t.reconstructPacket = function (e, t) {
    return e.data = function e(t, n) {
      if (!t) return t;
      if (t && t._placeholder) return n[t.num];
      if (i(t)) for (var r = 0; r < t.length; r++) t[r] = e(t[r], n); else if ("object" == typeof t) for (var o in t) t[o] = e(t[o], n);
      return t;
    }(e.data, t), e.attachments = undefined, e;
  }, t.removeBlobs = function (e, t) {
    var n = 0, o = e;
    !function e(l, c, h) {
      if (!l) return l;
      if (s && l instanceof Blob || a && l instanceof File) {
        n++;
        var u = new FileReader;
        u.onload = function () {
          h ? h[c] = this.result : o = this.result, --n || t(o);
        }, u.readAsArrayBuffer(l);
      } else if (i(l)) for (var d = 0; d < l.length; d++) e(l[d], d, l); else if ("object" == typeof l && !r(l)) for (var p in l) e(l[p], p, l);
    }(o), n || t(o);
  };
}, function (e, t, n) {
  "use strict";
  t.byteLength = function (e) {
    var t = c(e), n = t[0], i = t[1];
    return 3 * (n + i) / 4 - i;
  }, t.toByteArray = function (e) {
    var t, n, i = c(e), s = i[0], a = i[1], l = new o(function (e, t, n) {
      return 3 * (t + n) / 4 - n;
    }(0, s, a)), h = 0, u = a > 0 ? s - 4 : s;
    for (n = 0; n < u; n += 4) t = r[e.charCodeAt(n)] << 18 | r[e.charCodeAt(n + 1)] << 12 | r[e.charCodeAt(n + 2)] << 6 | r[e.charCodeAt(n + 3)], l[h++] = t >> 16 & 255, l[h++] = t >> 8 & 255, l[h++] = 255 & t;
    2 === a && (t = r[e.charCodeAt(n)] << 2 | r[e.charCodeAt(n + 1)] >> 4, l[h++] = 255 & t);
    1 === a && (t = r[e.charCodeAt(n)] << 10 | r[e.charCodeAt(n + 1)] << 4 | r[e.charCodeAt(n + 2)] >> 2, l[h++] = t >> 8 & 255, l[h++] = 255 & t);
    return l;
  }, t.fromByteArray = function (e) {
    for (var t, n = e.length, r = n % 3, o = [], s = 0, a = n - r; s < a; s += 16383) o.push(h(e, s, s + 16383 > a ? a : s + 16383));
    1 === r ? (t = e[n - 1], o.push(i[t >> 2] + i[t << 4 & 63] + "==")) : 2 === r && (t = (e[n - 2] << 8) + e[n - 1], o.push(i[t >> 10] + i[t >> 4 & 63] + i[t << 2 & 63] + "="));
    return o.join("");
  };
  for (var i = [], r = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, l = s.length; a < l; ++a) i[a] = s[a], r[s.charCodeAt(a)] = a;
  function c(e) {
    var t = e.length;
    if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
    var n = e.indexOf("=");
    return -1 === n && (n = t), [n, n === t ? 0 : 4 - n % 4];
  }
  function h(e, t, n) {
    for (var r, o, s = [], a = t; a < n; a += 3) r = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]), s.push(i[(o = r) >> 18 & 63] + i[o >> 12 & 63] + i[o >> 6 & 63] + i[63 & o]);
    return s.join("");
  }
  r["-".charCodeAt(0)] = 62, r["_".charCodeAt(0)] = 63;
}, function (e, t) {
  t.read = function (e, t, n, i, r) {
    var o, s, a = 8 * r - i - 1, l = (1 << a) - 1, c = l >> 1, h = -7, u = n ? r - 1 : 0, d = n ? -1 : 1, p = e[t + u];
    for (u += d, o = p & (1 << -h) - 1, p >>= -h, h += a; h > 0; o = 256 * o + e[t + u], u += d, h -= 8) ;
    for (s = o & (1 << -h) - 1, o >>= -h, h += i; h > 0; s = 256 * s + e[t + u], u += d, h -= 8) ;
    if (0 === o) o = 1 - c; else {
      if (o === l) return s ? NaN : Infinity * (p ? -1 : 1);
      s += Math.pow(2, i), o -= c;
    }
    return (p ? -1 : 1) * s * Math.pow(2, o - i);
  }, t.write = function (e, t, n, i, r, o) {
    var s, a, l, c = 8 * o - r - 1, h = (1 << c) - 1, u = h >> 1, d = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = i ? 0 : o - 1, m = i ? 1 : -1, f = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
    for (t = Math.abs(t), isNaN(t) || t === Infinity ? (a = isNaN(t) ? 1 : 0, s = h) : (s = Math.floor(Math.log(t) / Math.LN2), t * (l = Math.pow(2, -s)) < 1 && (s--, l *= 2), (t += s + u >= 1 ? d / l : d * Math.pow(2, 1 - u)) * l >= 2 && (s++, l /= 2), s + u >= h ? (a = 0, s = h) : s + u >= 1 ? (a = (t * l - 1) * Math.pow(2, r), s += u) : (a = t * Math.pow(2, u - 1) * Math.pow(2, r), s = 0)); r >= 8; e[n + p] = 255 & a, p += m, a /= 256, r -= 8) ;
    for (s = s << r | a, c += r; c > 0; e[n + p] = 255 & s, p += m, s /= 256, c -= 8) ;
    e[n + p - m] |= 128 * f;
  };
}, function (e, t) {
  var n = {}.toString;
  e.exports = Array.isArray || function (e) {
    return "[object Array]" == n.call(e);
  };
}, function (e, t, n) {
  e.exports = n(112), e.exports.parser = n(3);
}, function (e, t, n) {
  var i = n(30), r = n(20), o = n(11)("engine.io-client:socket"), s = n(34), a = n(3), l = n(26), c = n(9);
  function h(e, t) {
    if (!(this instanceof h)) return new h(e, t);
    t = t || {}, e && "object" == typeof e && (t = e, e = null), e ? (e = l(e), t.hostname = e.host, t.secure = "https" === e.protocol || "wss" === e.protocol, t.port = e.port, e.query && (t.query = e.query)) : t.host && (t.hostname = l(t.host).host), this.secure = null != t.secure ? t.secure : "undefined" != typeof location && "https:" === location.protocol, t.hostname && !t.port && (t.port = this.secure ? "443" : "80"), this.agent = t.agent || false, this.hostname = t.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), this.port = t.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80), this.query = t.query || {}, "string" == typeof this.query && (this.query = c.decode(this.query)), this.upgrade = false !== t.upgrade, this.path = (t.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!t.forceJSONP, this.jsonp = false !== t.jsonp, this.forceBase64 = !!t.forceBase64, this.enablesXDR = !!t.enablesXDR, this.withCredentials = false !== t.withCredentials, this.timestampParam = t.timestampParam || "t", this.timestampRequests = t.timestampRequests, this.transports = t.transports || ["polling", "websocket"], this.transportOptions = t.transportOptions || {}, this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = t.policyPort || 843, this.rememberUpgrade = t.rememberUpgrade || false, this.binaryType = null, this.onlyBinaryUpgrades = t.onlyBinaryUpgrades, this.perMessageDeflate = false !== t.perMessageDeflate && (t.perMessageDeflate || {}), true === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = t.pfx || null, this.key = t.key || null, this.passphrase = t.passphrase || null, this.cert = t.cert || null, this.ca = t.ca || null, this.ciphers = t.ciphers || null, this.rejectUnauthorized = undefined === t.rejectUnauthorized || t.rejectUnauthorized, this.forceNode = !!t.forceNode, this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase(), ("undefined" == typeof self || this.isReactNative) && (t.extraHeaders && Object.keys(t.extraHeaders).length > 0 && (this.extraHeaders = t.extraHeaders), t.localAddress && (this.localAddress = t.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, this.open();
  }
  e.exports = h, h.priorWebsocketSuccess = false, r(h.prototype), h.protocol = a.protocol, h.Socket = h, h.Transport = n(19), h.transports = n(30), h.parser = n(3), h.prototype.createTransport = function (e) {
    o('creating transport "%s"', e);
    var t = function (e) {
      var t = {};
      for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
      return t;
    }(this.query);
    t.EIO = a.protocol, t.transport = e;
    var n = this.transportOptions[e] || {};
    return this.id && (t.sid = this.id), new i[e]({query: t, socket: this, agent: n.agent || this.agent, hostname: n.hostname || this.hostname, port: n.port || this.port, secure: n.secure || this.secure, path: n.path || this.path, forceJSONP: n.forceJSONP || this.forceJSONP, jsonp: n.jsonp || this.jsonp, forceBase64: n.forceBase64 || this.forceBase64, enablesXDR: n.enablesXDR || this.enablesXDR, withCredentials: n.withCredentials || this.withCredentials, timestampRequests: n.timestampRequests || this.timestampRequests, timestampParam: n.timestampParam || this.timestampParam, policyPort: n.policyPort || this.policyPort, pfx: n.pfx || this.pfx, key: n.key || this.key, passphrase: n.passphrase || this.passphrase, cert: n.cert || this.cert, ca: n.ca || this.ca, ciphers: n.ciphers || this.ciphers, rejectUnauthorized: n.rejectUnauthorized || this.rejectUnauthorized, perMessageDeflate: n.perMessageDeflate || this.perMessageDeflate, extraHeaders: n.extraHeaders || this.extraHeaders, forceNode: n.forceNode || this.forceNode, localAddress: n.localAddress || this.localAddress, requestTimeout: n.requestTimeout || this.requestTimeout, protocols: n.protocols || undefined, isReactNative: this.isReactNative});
  }, h.prototype.open = function () {
    var e;
    if (this.rememberUpgrade && h.priorWebsocketSuccess && -1 !== this.transports.indexOf("websocket")) e = "websocket"; else {
      if (0 === this.transports.length) {
        var t = this;
        return void setTimeout(function () {
          t.emit("error", "No transports available");
        }, 0);
      }
      e = this.transports[0];
    }
    this.readyState = "opening";
    try {
      e = this.createTransport(e);
    } catch (e) {
      return this.transports.shift(), void this.open();
    }
    e.open(), this.setTransport(e);
  }, h.prototype.setTransport = function (e) {
    o("setting transport %s", e.name);
    var t = this;
    this.transport && (o("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()), this.transport = e, e.on("drain", function () {
      t.onDrain();
    }).on("packet", function (e) {
      t.onPacket(e);
    }).on("error", function (e) {
      t.onError(e);
    }).on("close", function () {
      t.onClose("transport close");
    });
  }, h.prototype.probe = function (e) {
    o('probing transport "%s"', e);
    var t = this.createTransport(e, {probe: 1}), n = false, i = this;
    function r() {
      if (i.onlyBinaryUpgrades) {
        var r = !this.supportsBinary && i.transport.supportsBinary;
        n = n || r;
      }
      n || (o('probe transport "%s" opened', e), t.send([{type: "ping", data: "probe"}]), t.once("packet", function (r) {
        if (!n) if ("pong" === r.type && "probe" === r.data) {
          if (o('probe transport "%s" pong', e), i.upgrading = true, i.emit("upgrading", t), !t) return;
          h.priorWebsocketSuccess = "websocket" === t.name, o('pausing current transport "%s"', i.transport.name), i.transport.pause(function () {
            n || "closed" !== i.readyState && (o("changing transport and sending upgrade packet"), d(), i.setTransport(t), t.send([{type: "upgrade"}]), i.emit("upgrade", t), t = null, i.upgrading = false, i.flush());
          });
        } else {
          o('probe transport "%s" failed', e);
          var s = new Error("probe error");
          s.transport = t.name, i.emit("upgradeError", s);
        }
      }));
    }
    function s() {
      n || (n = true, d(), t.close(), t = null);
    }
    function a(n) {
      var r = new Error("probe error: " + n);
      r.transport = t.name, s(), o('probe transport "%s" failed because of error: %s', e, n), i.emit("upgradeError", r);
    }
    function l() {
      a("transport closed");
    }
    function c() {
      a("socket closed");
    }
    function u(e) {
      t && e.name !== t.name && (o('"%s" works - aborting "%s"', e.name, t.name), s());
    }
    function d() {
      t.removeListener("open", r), t.removeListener("error", a), t.removeListener("close", l), i.removeListener("close", c), i.removeListener("upgrading", u);
    }
    h.priorWebsocketSuccess = false, t.once("open", r), t.once("error", a), t.once("close", l), this.once("close", c), this.once("upgrading", u), t.open();
  }, h.prototype.onOpen = function () {
    if (o("socket open"), this.readyState = "open", h.priorWebsocketSuccess = "websocket" === this.transport.name, this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause) {
      o("starting upgrade probes");
      for (var e = 0, t = this.upgrades.length; e < t; e++) this.probe(this.upgrades[e]);
    }
  }, h.prototype.onPacket = function (e) {
    if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch (o('socket receive: type "%s", data "%s"', e.type, e.data), this.emit("packet", e), this.emit("heartbeat"), e.type) {
      case "open":
        this.onHandshake(JSON.parse(e.data));
        break;
      case "pong":
        this.setPing(), this.emit("pong");
        break;
      case "error":
        var t = new Error("server error");
        t.code = e.data, this.onError(t);
        break;
      case "message":
        this.emit("data", e.data), this.emit("message", e.data);
    } else o('packet received with socket readyState "%s"', this.readyState);
  }, h.prototype.onHandshake = function (e) {
    this.emit("handshake", e), this.id = e.sid, this.transport.query.sid = e.sid, this.upgrades = this.filterUpgrades(e.upgrades), this.pingInterval = e.pingInterval, this.pingTimeout = e.pingTimeout, this.onOpen(), "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat));
  }, h.prototype.onHeartbeat = function (e) {
    clearTimeout(this.pingTimeoutTimer);
    var t = this;
    t.pingTimeoutTimer = setTimeout(function () {
      "closed" !== t.readyState && t.onClose("ping timeout");
    }, e || t.pingInterval + t.pingTimeout);
  }, h.prototype.setPing = function () {
    var e = this;
    clearTimeout(e.pingIntervalTimer), e.pingIntervalTimer = setTimeout(function () {
      o("writing ping packet - expecting pong within %sms", e.pingTimeout), e.ping(), e.onHeartbeat(e.pingTimeout);
    }, e.pingInterval);
  }, h.prototype.ping = function () {
    var e = this;
    this.sendPacket("ping", function () {
      e.emit("ping");
    });
  }, h.prototype.onDrain = function () {
    this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush();
  }, h.prototype.flush = function () {
    "closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (o("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"));
  }, h.prototype.write = h.prototype.send = function (e, t, n) {
    return this.sendPacket("message", e, t, n), this;
  }, h.prototype.sendPacket = function (e, t, n, i) {
    if ("function" == typeof t && (i = t, t = undefined), "function" == typeof n && (i = n, n = null), "closing" !== this.readyState && "closed" !== this.readyState) {
      (n = n || {}).compress = false !== n.compress;
      var r = {type: e, data: t, options: n};
      this.emit("packetCreate", r), this.writeBuffer.push(r), i && this.once("flush", i), this.flush();
    }
  }, h.prototype.close = function () {
    if ("opening" === this.readyState || "open" === this.readyState) {
      this.readyState = "closing";
      var e = this;
      this.writeBuffer.length ? this.once("drain", function () {
        this.upgrading ? i() : t();
      }) : this.upgrading ? i() : t();
    }
    function t() {
      e.onClose("forced close"), o("socket closing - telling transport to close"), e.transport.close();
    }
    function n() {
      e.removeListener("upgrade", n), e.removeListener("upgradeError", n), t();
    }
    function i() {
      e.once("upgrade", n), e.once("upgradeError", n);
    }
    return this;
  }, h.prototype.onError = function (e) {
    o("socket error %j", e), h.priorWebsocketSuccess = false, this.emit("error", e), this.onClose("transport error", e);
  }, h.prototype.onClose = function (e, t) {
    if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
      o('socket close with reason: "%s"', e);
      clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", e, t), this.writeBuffer = [], this.prevBufferLen = 0;
    }
  }, h.prototype.filterUpgrades = function (e) {
    for (var t = [], n = 0, i = e.length; n < i; n++) ~s(this.transports, e[n]) && t.push(e[n]);
    return t;
  };
}, function (e, t) {
  try {
    e.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest;
  } catch (t) {
    e.exports = false;
  }
}, function (e, t, n) {
  var i = n(18), r = n(31), o = n(20), s = n(10), a = n(11)("engine.io-client:polling-xhr");
  function l() {}
  function c(e) {
    if (r.call(this, e), this.requestTimeout = e.requestTimeout, this.extraHeaders = e.extraHeaders, "undefined" != typeof location) {
      var t = "https:" === location.protocol, n = location.port;
      n || (n = t ? 443 : 80), this.xd = "undefined" != typeof location && e.hostname !== location.hostname || n !== e.port, this.xs = e.secure !== t;
    }
  }
  function h(e) {
    this.method = e.method || "GET", this.uri = e.uri, this.xd = !!e.xd, this.xs = !!e.xs, this.async = false !== e.async, this.data = undefined !== e.data ? e.data : null, this.agent = e.agent, this.isBinary = e.isBinary, this.supportsBinary = e.supportsBinary, this.enablesXDR = e.enablesXDR, this.withCredentials = e.withCredentials, this.requestTimeout = e.requestTimeout, this.pfx = e.pfx, this.key = e.key, this.passphrase = e.passphrase, this.cert = e.cert, this.ca = e.ca, this.ciphers = e.ciphers, this.rejectUnauthorized = e.rejectUnauthorized, this.extraHeaders = e.extraHeaders, this.create();
  }
  if (e.exports = c, e.exports.Request = h, s(c, r), c.prototype.supportsBinary = true, c.prototype.request = function (e) {
    return (e = e || {}).uri = this.uri(), e.xd = this.xd, e.xs = this.xs, e.agent = this.agent || false, e.supportsBinary = this.supportsBinary, e.enablesXDR = this.enablesXDR, e.withCredentials = this.withCredentials, e.pfx = this.pfx, e.key = this.key, e.passphrase = this.passphrase, e.cert = this.cert, e.ca = this.ca, e.ciphers = this.ciphers, e.rejectUnauthorized = this.rejectUnauthorized, e.requestTimeout = this.requestTimeout, e.extraHeaders = this.extraHeaders, new h(e);
  }, c.prototype.doWrite = function (e, t) {
    var n = "string" != typeof e && undefined !== e, i = this.request({method: "POST", data: e, isBinary: n}), r = this;
    i.on("success", t), i.on("error", function (e) {
      r.onError("xhr post error", e);
    }), this.sendXhr = i;
  }, c.prototype.doPoll = function () {
    a("xhr poll");
    var e = this.request(), t = this;
    e.on("data", function (e) {
      t.onData(e);
    }), e.on("error", function (e) {
      t.onError("xhr poll error", e);
    }), this.pollXhr = e;
  }, o(h.prototype), h.prototype.create = function () {
    var e = {agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR};
    e.pfx = this.pfx, e.key = this.key, e.passphrase = this.passphrase, e.cert = this.cert, e.ca = this.ca, e.ciphers = this.ciphers, e.rejectUnauthorized = this.rejectUnauthorized;
    var t = this.xhr = new i(e), n = this;
    try {
      a("xhr open %s: %s", this.method, this.uri), t.open(this.method, this.uri, this.async);
      try {
        if (this.extraHeaders) for (var r in t.setDisableHeaderCheck && t.setDisableHeaderCheck(true), this.extraHeaders) this.extraHeaders.hasOwnProperty(r) && t.setRequestHeader(r, this.extraHeaders[r]);
      } catch (e) {}
      if ("POST" === this.method) try {
        this.isBinary ? t.setRequestHeader("Content-type", "application/octet-stream") : t.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
      } catch (e) {}
      try {
        t.setRequestHeader("Accept", "*/*");
      } catch (e) {}
      "withCredentials" in t && (t.withCredentials = this.withCredentials), this.requestTimeout && (t.timeout = this.requestTimeout), this.hasXDR() ? (t.onload = function () {
        n.onLoad();
      }, t.onerror = function () {
        n.onError(t.responseText);
      }) : t.onreadystatechange = function () {
        if (2 === t.readyState) try {
          var e = t.getResponseHeader("Content-Type");
          (n.supportsBinary && "application/octet-stream" === e || "application/octet-stream; charset=UTF-8" === e) && (t.responseType = "arraybuffer");
        } catch (e) {}
        4 === t.readyState && (200 === t.status || 1223 === t.status ? n.onLoad() : setTimeout(function () {
          n.onError("number" == typeof t.status ? t.status : 0);
        }, 0));
      }, a("xhr data %s", this.data), t.send(this.data);
    } catch (e) {
      return void setTimeout(function () {
        n.onError(e);
      }, 0);
    }
    "undefined" != typeof document && (this.index = h.requestsCount++, h.requests[this.index] = this);
  }, h.prototype.onSuccess = function () {
    this.emit("success"), this.cleanup();
  }, h.prototype.onData = function (e) {
    this.emit("data", e), this.onSuccess();
  }, h.prototype.onError = function (e) {
    this.emit("error", e), this.cleanup(true);
  }, h.prototype.cleanup = function (e) {
    if (undefined !== this.xhr && null !== this.xhr) {
      if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = l : this.xhr.onreadystatechange = l, e) try {
        this.xhr.abort();
      } catch (e) {}
      "undefined" != typeof document && delete h.requests[this.index], this.xhr = null;
    }
  }, h.prototype.onLoad = function () {
    var e;
    try {
      var t;
      try {
        t = this.xhr.getResponseHeader("Content-Type");
      } catch (e) {}
      e = ("application/octet-stream" === t || "application/octet-stream; charset=UTF-8" === t) && this.xhr.response || this.xhr.responseText;
    } catch (e) {
      this.onError(e);
    }
    null != e && this.onData(e);
  }, h.prototype.hasXDR = function () {
    return "undefined" != typeof XDomainRequest && !this.xs && this.enablesXDR;
  }, h.prototype.abort = function () {
    this.cleanup();
  }, h.requestsCount = 0, h.requests = {}, "undefined" != typeof document) if ("function" == typeof attachEvent) attachEvent("onunload", d); else if ("function" == typeof addEventListener) {
    var u = "onpagehide" in self ? "pagehide" : "unload";
    addEventListener(u, d, false);
  }
  function d() {
    for (var e in h.requests) h.requests.hasOwnProperty(e) && h.requests[e].abort();
  }
}, function (e, t) {
  e.exports = Object.keys || function (e) {
    var t = [], n = Object.prototype.hasOwnProperty;
    for (var i in e) n.call(e, i) && t.push(i);
    return t;
  };
}, function (e, t) {
  var n = {}.toString;
  e.exports = Array.isArray || function (e) {
    return "[object Array]" == n.call(e);
  };
}, function (e, t) {
  e.exports = function (e, t, n) {
    var i = e.byteLength;
    if (t = t || 0, n = n || i, e.slice) return e.slice(t, n);
    if (t < 0 && (t += i), n < 0 && (n += i), n > i && (n = i), t >= i || t >= n || 0 === i) return new ArrayBuffer(0);
    for (var r = new Uint8Array(e), o = new Uint8Array(n - t), s = t, a = 0; s < n; s++, a++) o[a] = r[s];
    return o.buffer;
  };
}, function (e, t) {
  function n() {}
  e.exports = function (e, t, i) {
    var r = false;
    return i = i || n, o.count = e, 0 === e ? t() : o;
    function o(e, n) {
      if (o.count <= 0) throw new Error("after called too many times");
      --o.count, e ? (r = true, t(e), t = i) : 0 !== o.count || r || t(null, n);
    }
  };
}, function (e, t) {
  var n, i, r, o = String.fromCharCode;
  function s(e) {
    for (var t, n, i = [], r = 0, o = e.length; r < o;) (t = e.charCodeAt(r++)) >= 55296 && t <= 56319 && r < o ? 56320 == (64512 & (n = e.charCodeAt(r++))) ? i.push(((1023 & t) << 10) + (1023 & n) + 65536) : (i.push(t), r--) : i.push(t);
    return i;
  }
  function a(e, t) {
    if (e >= 55296 && e <= 57343) {
      if (t) throw Error("Lone surrogate U+" + e.toString(16).toUpperCase() + " is not a scalar value");
      return false;
    }
    return true;
  }
  function l(e, t) {
    return o(e >> t & 63 | 128);
  }
  function c(e, t) {
    if (0 == (4294967168 & e)) return o(e);
    var n = "";
    return 0 == (4294965248 & e) ? n = o(e >> 6 & 31 | 192) : 0 == (4294901760 & e) ? (a(e, t) || (e = 65533), n = o(e >> 12 & 15 | 224), n += o(e >> 6 & 63 | 128)) : 0 == (4292870144 & e) && (n = o(e >> 18 & 7 | 240), n += o(e >> 12 & 63 | 128), n += o(e >> 6 & 63 | 128)), n += o(63 & e | 128);
  }
  function h() {
    if (r >= i) throw Error("Invalid byte index");
    var e = 255 & n[r];
    if (r++, 128 == (192 & e)) return 63 & e;
    throw Error("Invalid continuation byte");
  }
  function u(e) {
    var t, o;
    if (r > i) throw Error("Invalid byte index");
    if (r == i) return false;
    if (t = 255 & n[r], r++, 0 == (128 & t)) return t;
    if (192 == (224 & t)) {
      if ((o = (31 & t) << 6 | h()) >= 128) return o;
      throw Error("Invalid continuation byte");
    }
    if (224 == (240 & t)) {
      if ((o = (15 & t) << 12 | h() << 6 | h()) >= 2048) return a(o, e) ? o : 65533;
      throw Error("Invalid continuation byte");
    }
    if (240 == (248 & t) && (o = (7 & t) << 18 | h() << 12 | h() << 6 | h()) >= 65536 && o <= 1114111) return o;
    throw Error("Invalid UTF-8 detected");
  }
  e.exports = {version: "2.1.2", encode: function (e, t) {
    for (var n = false !== (t = t || {}).strict, i = s(e), r = i.length, o = -1, a = ""; ++o < r;) a += c(i[o], n);
    return a;
  }, decode: function (e, t) {
    var a = false !== (t = t || {}).strict;
    n = s(e), i = n.length, r = 0;
    for (var l, c = []; false !== (l = u(a));) c.push(l);
    return function (e) {
      for (var t, n = e.length, i = -1, r = ""; ++i < n;) (t = e[i]) > 65535 && (r += o((t -= 65536) >>> 10 & 1023 | 55296), t = 56320 | 1023 & t), r += o(t);
      return r;
    }(c);
  }};
}, function (e, t) {
  !function () {
    "use strict";
    for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = new Uint8Array(256), i = 0; i < e.length; i++) n[e.charCodeAt(i)] = i;
    t.encode = function (t) {
      var n, i = new Uint8Array(t), r = i.length, o = "";
      for (n = 0; n < r; n += 3) o += e[i[n] >> 2], o += e[(3 & i[n]) << 4 | i[n + 1] >> 4], o += e[(15 & i[n + 1]) << 2 | i[n + 2] >> 6], o += e[63 & i[n + 2]];
      return r % 3 == 2 ? o = o.substring(0, o.length - 1) + "=" : r % 3 == 1 && (o = o.substring(0, o.length - 2) + "=="), o;
    }, t.decode = function (e) {
      var t, i, r, o, s, a = 0.75 * e.length, l = e.length, c = 0;
      "=" === e[e.length - 1] && (a--, "=" === e[e.length - 2] && a--);
      var h = new ArrayBuffer(a), u = new Uint8Array(h);
      for (t = 0; t < l; t += 4) i = n[e.charCodeAt(t)], r = n[e.charCodeAt(t + 1)], o = n[e.charCodeAt(t + 2)], s = n[e.charCodeAt(t + 3)], u[c++] = i << 2 | r >> 4, u[c++] = (15 & r) << 4 | o >> 2, u[c++] = (3 & o) << 6 | 63 & s;
      return h;
    };
  }();
}, function (e, t) {
  var n = undefined !== n ? n : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder, i = function () {
    try {
      return 2 === new Blob(["hi"]).size;
    } catch (e) {
      return false;
    }
  }(), r = i && function () {
    try {
      return 2 === new Blob([new Uint8Array([1, 2])]).size;
    } catch (e) {
      return false;
    }
  }(), o = n && n.prototype.append && n.prototype.getBlob;
  function s(e) {
    return e.map(function (e) {
      if (e.buffer instanceof ArrayBuffer) {
        var t = e.buffer;
        if (e.byteLength !== t.byteLength) {
          var n = new Uint8Array(e.byteLength);
          n.set(new Uint8Array(t, e.byteOffset, e.byteLength)), t = n.buffer;
        }
        return t;
      }
      return e;
    });
  }
  function a(e, t) {
    t = t || {};
    var i = new n;
    return s(e).forEach(function (e) {
      i.append(e);
    }), t.type ? i.getBlob(t.type) : i.getBlob();
  }
  function l(e, t) {
    return new Blob(s(e), t || {});
  }
  "undefined" != typeof Blob && (a.prototype = Blob.prototype, l.prototype = Blob.prototype), e.exports = i ? r ? Blob : l : o ? a : undefined;
}, function (e, t, n) {
  e.exports = function (e) {
    function t(e) {
      let t = 0;
      for (let n = 0; n < e.length; n++) t = (t << 5) - t + e.charCodeAt(n), t |= 0;
      return i.colors[Math.abs(t) % i.colors.length];
    }
    function i(e) {
      let n;
      function s(...e) {
        if (!s.enabled) return;
        const r = Number(new Date), o = r - (n || r);
        t.diff = o, t.prev = n, t.curr = r, n = r, e[0] = i.coerce(e[0]), "string" != typeof e[0] && e.unshift("%O");
        let a = 0;
        e[0] = e[0].replace(/%([a-zA-Z%])/g, (n, r) => {
          if ("%%" === n) return n;
          a++;
          const o = i.formatters[r];
          if ("function" == typeof o) {
            const i = e[a];
            n = o.call(t, i), e.splice(a, 1), a--;
          }
          return n;
        }), i.formatArgs.call(t, e), (t.log || i.log).apply(t, e);
      }
      return s.namespace = e, s.enabled = i.enabled(e), s.useColors = i.useColors(), s.color = t(e), s.destroy = r, s.extend = o, "function" == typeof i.init && i.init(s), i.instances.push(s), s;
    }
    function r() {
      const e = i.instances.indexOf(this);
      return -1 !== e && (i.instances.splice(e, 1), true);
    }
    function o(e, t) {
      const n = i(this.namespace + (undefined === t ? ":" : t) + e);
      return n.log = this.log, n;
    }
    function s(e) {
      return e.toString().substring(2, e.toString().length - 2).replace(/\.\*\?$/, "*");
    }
    return i.debug = i, i.default = i, i.coerce = function (e) {
      if (e instanceof Error) return e.stack || e.message;
      return e;
    }, i.disable = function () {
      const e = [...i.names.map(s), ...i.skips.map(s).map(e => "-" + e)].join(",");
      return i.enable(""), e;
    }, i.enable = function (e) {
      let t;
      i.save(e), i.names = [], i.skips = [];
      const n = ("string" == typeof e ? e : "").split(/[\s,]+/), r = n.length;
      for (t = 0; t < r; t++) n[t] && ("-" === (e = n[t].replace(/\*/g, ".*?"))[0] ? i.skips.push(new RegExp("^" + e.substr(1) + "$")) : i.names.push(new RegExp("^" + e + "$")));
      for (t = 0; t < i.instances.length; t++) {
        const e = i.instances[t];
        e.enabled = i.enabled(e.namespace);
      }
    }, i.enabled = function (e) {
      if ("*" === e[e.length - 1]) return true;
      let t, n;
      for (t = 0, n = i.skips.length; t < n; t++) if (i.skips[t].test(e)) return false;
      for (t = 0, n = i.names.length; t < n; t++) if (i.names[t].test(e)) return true;
      return false;
    }, i.humanize = n(123), Object.keys(e).forEach(t => {
      i[t] = e[t];
    }), i.instances = [], i.names = [], i.skips = [], i.formatters = {}, i.selectColor = t, i.enable(i.load()), i;
  };
}, function (e, t) {
  var n = 1e3, i = 60 * n, r = 60 * i, o = 24 * r, s = 7 * o, a = 365.25 * o;
  function l(e, t, n, i) {
    var r = t >= 1.5 * n;
    return Math.round(e / n) + " " + i + (r ? "s" : "");
  }
  e.exports = function (e, t) {
    t = t || {};
    var c = typeof e;
    if ("string" === c && e.length > 0) return function (e) {
      if ((e = String(e)).length > 100) return;
      var t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);
      if (!t) return;
      var l = parseFloat(t[1]);
      switch ((t[2] || "ms").toLowerCase()) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return l * a;
        case "weeks":
        case "week":
        case "w":
          return l * s;
        case "days":
        case "day":
        case "d":
          return l * o;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return l * r;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return l * i;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return l * n;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return l;
        default:
          return;
      }
    }(e);
    if ("number" === c && isFinite(e)) return t.long ? function (e) {
      var t = Math.abs(e);
      if (t >= o) return l(e, t, o, "day");
      if (t >= r) return l(e, t, r, "hour");
      if (t >= i) return l(e, t, i, "minute");
      if (t >= n) return l(e, t, n, "second");
      return e + " ms";
    }(e) : function (e) {
      var t = Math.abs(e);
      if (t >= o) return Math.round(e / o) + "d";
      if (t >= r) return Math.round(e / r) + "h";
      if (t >= i) return Math.round(e / i) + "m";
      if (t >= n) return Math.round(e / n) + "s";
      return e + "ms";
    }(e);
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e));
  };
}, function (e, t, n) {
  (function (t) {
    var i = n(31), r = n(10);
    e.exports = h;
    var o, s = /\n/g, a = /\\n/g;
    function l() {}
    function c() {
      return "undefined" != typeof self ? self : "undefined" != typeof window ? window : undefined !== t ? t : {};
    }
    function h(e) {
      if (i.call(this, e), this.query = this.query || {}, !o) {
        var t = c();
        o = t.___eio = t.___eio || [];
      }
      this.index = o.length;
      var n = this;
      o.push(function (e) {
        n.onData(e);
      }), this.query.j = this.index, "function" == typeof addEventListener && addEventListener("beforeunload", function () {
        n.script && (n.script.onerror = l);
      }, false);
    }
    r(h, i), h.prototype.supportsBinary = false, h.prototype.doClose = function () {
      this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), i.prototype.doClose.call(this);
    }, h.prototype.doPoll = function () {
      var e = this, t = document.createElement("script");
      this.script && (this.script.parentNode.removeChild(this.script), this.script = null), t.async = true, t.src = this.uri(), t.onerror = function (t) {
        e.onError("jsonp poll error", t);
      };
      var n = document.getElementsByTagName("script")[0];
      n ? n.parentNode.insertBefore(t, n) : (document.head || document.body).appendChild(t), this.script = t, "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent) && setTimeout(function () {
        var e = document.createElement("iframe");
        document.body.appendChild(e), document.body.removeChild(e);
      }, 100);
    }, h.prototype.doWrite = function (e, t) {
      var n = this;
      if (!this.form) {
        var i, r = document.createElement("form"), o = document.createElement("textarea"), l = this.iframeId = "eio_iframe_" + this.index;
        r.className = "socketio", r.style.position = "absolute", r.style.top = "-1000px", r.style.left = "-1000px", r.target = l, r.method = "POST", r.setAttribute("accept-charset", "utf-8"), o.name = "d", r.appendChild(o), document.body.appendChild(r), this.form = r, this.area = o;
      }
      function c() {
        h(), t();
      }
      function h() {
        if (n.iframe) try {
          n.form.removeChild(n.iframe);
        } catch (e) {
          n.onError("jsonp polling iframe removal error", e);
        }
        try {
          var e = '<iframe src="javascript:0" name="' + n.iframeId + '">';
          i = document.createElement(e);
        } catch (e) {
          (i = document.createElement("iframe")).name = n.iframeId, i.src = "javascript:0";
        }
        i.id = n.iframeId, n.form.appendChild(i), n.iframe = i;
      }
      this.form.action = this.uri(), h(), e = e.replace(a, "\\\n"), this.area.value = e.replace(s, "\\n");
      try {
        this.form.submit();
      } catch (e) {}
      this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {
        "complete" === n.iframe.readyState && c();
      } : this.iframe.onload = c;
    };
  }.call(this, n(6)));
}, function (e, t, n) {
  (function (t) {
    var i, r, o = n(19), s = n(3), a = n(9), l = n(10), c = n(33), h = n(11)("engine.io-client:websocket");
    if ("undefined" != typeof WebSocket ? i = WebSocket : "undefined" != typeof self && (i = self.WebSocket || self.MozWebSocket), "undefined" == typeof window) try {
      r = n(126);
    } catch (e) {}
    var u = i || r;
    function d(e) {
      e && e.forceBase64 && (this.supportsBinary = false), this.perMessageDeflate = e.perMessageDeflate, this.usingBrowserWebSocket = i && !e.forceNode, this.protocols = e.protocols, this.usingBrowserWebSocket || (u = r), o.call(this, e);
    }
    e.exports = d, l(d, o), d.prototype.name = "websocket", d.prototype.supportsBinary = true, d.prototype.doOpen = function () {
      if (this.check()) {
        var e = this.uri(), t = this.protocols, n = {agent: this.agent, perMessageDeflate: this.perMessageDeflate};
        n.pfx = this.pfx, n.key = this.key, n.passphrase = this.passphrase, n.cert = this.cert, n.ca = this.ca, n.ciphers = this.ciphers, n.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (n.headers = this.extraHeaders), this.localAddress && (n.localAddress = this.localAddress);
        try {
          this.ws = this.usingBrowserWebSocket && !this.isReactNative ? t ? new u(e, t) : new u(e) : new u(e, t, n);
        } catch (e) {
          return this.emit("error", e);
        }
        undefined === this.ws.binaryType && (this.supportsBinary = false), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = true, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners();
      }
    }, d.prototype.addEventListeners = function () {
      var e = this;
      this.ws.onopen = function () {
        e.onOpen();
      }, this.ws.onclose = function () {
        e.onClose();
      }, this.ws.onmessage = function (t) {
        e.onData(t.data);
      }, this.ws.onerror = function (t) {
        e.onError("websocket error", t);
      };
    }, d.prototype.write = function (e) {
      var n = this;
      this.writable = false;
      for (var i = e.length, r = 0, o = i; r < o; r++) !function (e) {
        s.encodePacket(e, n.supportsBinary, function (r) {
          if (!n.usingBrowserWebSocket) {
            var o = {};
            if (e.options && (o.compress = e.options.compress), n.perMessageDeflate) ("string" == typeof r ? t.byteLength(r) : r.length) < n.perMessageDeflate.threshold && (o.compress = false);
          }
          try {
            n.usingBrowserWebSocket ? n.ws.send(r) : n.ws.send(r, o);
          } catch (e) {
            h("websocket closed before onclose event");
          }
          --i || a();
        });
      }(e[r]);
      function a() {
        n.emit("flush"), setTimeout(function () {
          n.writable = true, n.emit("drain");
        }, 0);
      }
    }, d.prototype.onClose = function () {
      o.prototype.onClose.call(this);
    }, d.prototype.doClose = function () {
      undefined !== this.ws && this.ws.close();
    }, d.prototype.uri = function () {
      var e = this.query || {}, t = this.secure ? "wss" : "ws", n = "";
      return this.port && ("wss" === t && 443 !== Number(this.port) || "ws" === t && 80 !== Number(this.port)) && (n = ":" + this.port), this.timestampRequests && (e[this.timestampParam] = c()), this.supportsBinary || (e.b64 = 1), (e = a.encode(e)).length && (e = "?" + e), t + "://" + (-1 !== this.hostname.indexOf(":") ? "[" + this.hostname + "]" : this.hostname) + n + this.path + e;
    }, d.prototype.check = function () {
      return !(!u || "__initialize" in u && this.name === d.prototype.name);
    };
  }.call(this, n(8).Buffer));
}, function (e, t) {}, function (e, t) {
  e.exports = function (e, t) {
    for (var n = [], i = (t = t || 0) || 0; i < e.length; i++) n[i - t] = e[i];
    return n;
  };
}, function (e, t) {
  function n(e) {
    e = e || {}, this.ms = e.min || 100, this.max = e.max || 1e4, this.factor = e.factor || 2, this.jitter = e.jitter > 0 && e.jitter <= 1 ? e.jitter : 0, this.attempts = 0;
  }
  e.exports = n, n.prototype.duration = function () {
    var e = this.ms * Math.pow(this.factor, this.attempts++);
    if (this.jitter) {
      var t = Math.random(), n = Math.floor(t * this.jitter * e);
      e = 0 == (1 & Math.floor(10 * t)) ? e - n : e + n;
    }
    return 0 | Math.min(e, this.max);
  }, n.prototype.reset = function () {
    this.attempts = 0;
  }, n.prototype.setMin = function (e) {
    this.ms = e;
  }, n.prototype.setMax = function (e) {
    this.max = e;
  }, n.prototype.setJitter = function (e) {
    this.jitter = e;
  };
}, function (e, t, n) {
  var i = {"./en.json": 130, "./ru.json": 131};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 129;
}, function (e) {
  e.exports = JSON.parse('{"title":"Menu","settings":"Settings","exitToMainScreen":"Exit to Main screen"}');
}, function (e) {
  e.exports = JSON.parse('{"title":"Меню","settings":"Настройки","exitToMainScreen":"Выйти в Главное меню"}');
}, function (e, t, n) {
  e.exports = function () {
    return new Worker(n.p + "528a5b56d2642f84b382.worker.js");
  };
}, function (e, t, n) {
  var i = {"./en.json": 134, "./ru.json": 135};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 133;
}, function (e) {
  e.exports = JSON.parse('{"waiting":"Waiting","recording":"Recording","saving":"Saving","errorInRecord":"Error in record","errorUpload":"Can\'t upload","uploading":"Uploading","uploaded":"Uploaded!","replayBy":"Replay by","uploadYourSelfRePlay":"Get top 1 and upload your replay on main page!","yourGameRecording":"You in top 1! Your game are recording. Everyone will see your replay!"}');
}, function (e) {
  e.exports = JSON.parse('{"waiting":"Ожидание","recording":"Запись","saving":"Сохранение","errorInRecord":"Ошибка в записи","errorUpload":"Ошибка при загрузке","uploading":"Отправка","uploaded":"Отправлено!","replayBy":"Запись игры от","uploadYourSelfRePlay":"Доберитесь до топ 1 и Ваш реплей увидят все!","yourGameRecording":"Вы добрались до топ 1! Ваша игра записывается. Её увидят все!"}');
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, "#recorder-widget {\n  transition: all ease-in-out 0.2s;\n  font-weight: bold;\n  color: #fff;\n  text-shadow: 1px 1px 0 #000;\n  text-align: center;\n  width: 100%;\n  margin-top: 10px;\n  display: none;\n}\n#recorder-widget.show {\n  display: block;\n}\n#recorder-widget .icon {\n  display: inline-block;\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  box-shadow: 0 0 0 3px rgba(0,0,0,0.3);\n  transition: all ease-in-out 0.2s;\n}\n#recorder-widget .icon.playing {\n  background-color: #e630ff;\n}\n#recorder-widget .icon.recording {\n  background-color: #ff3737;\n}\n#recorder-widget .icon.saving {\n  background-color: #fff737;\n}\n#recorder-widget .icon.uploading {\n  background-color: #37dcff;\n}\n#recorder-widget .icon.uploaded {\n  background-color: #37ff44;\n}\n#recorder-widget .icon.errorInRecord {\n  background-color: #808080;\n}\n#recorder-widget span {\n  display: inline-block;\n  vertical-align: top;\n  margin: 1px 0 0 5px;\n}\n#recorder-widget p {\n  display: inline-block;\n  vertical-align: top;\n  margin: 1px 0 0 5px;\n}\n", ""]);
}, function (e) {
  e.exports = JSON.parse('{"fps":"FPS: ","ping":"Ping: "}');
}, function (e) {
  e.exports = JSON.parse('{"fps":"FPS: ","ping":"Пинг: "}');
}, function (e, t, n) {
  var i = {"./en.json": 140, "./ru.json": 141};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 139;
}, function (e) {
  e.exports = JSON.parse('{"title":"Top players"}');
}, function (e) {
  e.exports = JSON.parse('{"title":"Лучшие игроки"}');
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".tabs-wrap {\n  display: flex;\n  flex-direction: column;\n}\n.tabs-wrap .tabs {\n  display: flex;\n}\n.tabs-wrap .tabs .tab {\n  padding: 0.5vw 1vw;\n  border-radius: 0.4vw 0.4vw 0 0;\n  margin: 0 0.3vw 0 0;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: all 0.2s;\n}\n.tabs-wrap .tabs .tab .icon {\n  width: 3vw;\n  height: 3vw;\n  margin: 0 0.5vw 0 0;\n}\n.tabs-wrap .tabs .tab .icon svg {\n  transition: all 0.2s;\n}\n.tabs-wrap .tabs .tab .icon svg path {\n  transition: all 0.2s;\n  fill: #fff;\n}\n.tabs-wrap .tabs .tab .icon .image {\n  width: 100%;\n  height: 100%;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n}\n.tabs-wrap .tabs .tab:last-child {\n  margin-right: 0;\n}\n.tabs-wrap .tabs .tab.active,\n.tabs-wrap .tabs .tab:hover {\n  background-color: rgba(255,255,255,0.2);\n}\n.tabs-wrap .tabs .tab.active .icon path,\n.tabs-wrap .tabs .tab:hover .icon path {\n  fill: #fff;\n}\n.tabs-wrap.vertical {\n  flex-direction: row;\n}\n.tabs-wrap.vertical .tabs {\n  flex-direction: column;\n}\n.tabs-wrap.vertical .tabs .tab {\n  width: 100%;\n  border-radius: 0;\n  text-align: center;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 1vw 1vw 0.6vw;\n}\n.tabs-wrap.vertical .tabs .tab.active,\n.tabs-wrap.vertical .tabs .tab:hover {\n  background-color: rgba(255,255,255,0.2);\n}\n.tabs-wrap .containers .container {\n  display: none;\n  padding: 1vw;\n  position: relative;\n}\n.tabs-wrap .containers .container.show {\n  display: block;\n}\n", ""]);
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".tooltip {\n  position: fixed;\n  background: rgba(0,0,0,0.8);\n  color: #fff;\n  padding: 0.8vw;\n  border-radius: 5px;\n  z-index: 999999999;\n  max-width: 240px;\n  text-align: center;\n  font-size: 0.8vw;\n  line-height: 0.8vw;\n}\n.tooltip:after {\n  content: '';\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  display: none;\n}\n.tooltip.bottom:after {\n  display: block;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, -100%);\n  border-width: 0 8px 8px 8px;\n  border-color: transparent transparent rgba(0,0,0,0.8) transparent;\n}\n.tooltip.left:after {\n  display: block;\n  top: 50%;\n  right: 0;\n  transform: translate(100%, -50%);\n  border-width: 8px 0 8px 8px;\n  border-color: transparent transparent transparent rgba(0,0,0,0.8);\n}\n.tooltip.top:after {\n  display: block;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 100%);\n  border-width: 8px 8px 0 8px;\n  border-color: rgba(0,0,0,0.8) transparent transparent transparent;\n}\n.tooltip.right:after {\n  display: block;\n  top: 50%;\n  left: 0;\n  transform: translate(-100%, -50%);\n  border-width: 8px 8px 8px 0;\n  border-color: transparent rgba(0,0,0,0.8) transparent transparent;\n}\n", ""]);
}, function (e) {
  e.exports = JSON.parse('{"tabs":{"storage":"Storage","tools":"Tools","armor":"Armor","potions":"Potions","miners":"Miners","generators":"Generators","sellers":"Sellers","defense":"Defense"},"buy":"Buy","use":"Use","consumes":"Consumes","produces":"Produces","repairs":"Repairs","cost":"Cost","health":"Health","healingSpeed":"Restore","healingDuration":"Time","protection":"Protection","damage":"Damage","attackRadius":"Attack radius","duration":"Duration","storageIsEmpty":"The Storage is empty. This is where old tools and blocks that were removed with a wrench come in.","count":"Count","produceTypes":{"tick":"per tick","hit":"per hit"},"items":{"ITEM_TOOL_PICKAXE_WOODEN":{"title":"Wooden Pickaxe","description":"The easiest pickaxe. It produces a few resources, but the cheapest.","textureName":"tools/wooden_pickaxe.png","group":"tools"},"ITEM_TOOL_PICKAXE_IRON":{"title":"Iron Pickaxe","description":"Improved pickaxe. Mining more resources. With it, you can mine gold.","textureName":"tools/iron_pickaxe.png","group":"tools"},"ITEM_TOOL_PICKAXE_GOLDEN":{"title":"Golden Pickaxe","description":"Improved pickaxe. Mining more resources. With it, you can mine diamonds.","textureName":"tools/golden_pickaxe.png","group":"tools"},"ITEM_TOOL_PICKAXE_DIAMOND":{"title":"Diamond Pickaxe","description":"The best pick that does not require energy. Mining more resources. With it, you can mine uranium.","textureName":"tools/diamond_pickaxe.png","group":"tools"},"ITEM_TOOL_DRILL":{"title":"Drill","description":"Simple electric drill. It extracts more resources, but consumes energy during operation.","textureName":"tools/drill.png","group":"tools"},"ITEM_TOOL_DRILL_DIAMOND":{"title":"Diamond Drill","description":"The best tool for resource extraction. It extracts a huge amount of resources per hit, but also consumes more energy.","textureName":"tools/diamond_drill.png","group":"tools"},"ITEM_TOOL_WRENCH":{"title":"Wrench","description":"Removes your blocks. Hit your block with a wrench to remove the block.","textureName":"tools/wrench.png","group":"tools"},"ITEM_ARMOR_LEATHER":{"title":"Leather Armor","description":"Hard to call it armor, but it\'s better than nothing.","textureName":"helmets/leather.png","group":"armor"},"ITEM_ARMOR_IRON":{"title":"Iron Armor","description":"Absorbs part of the damage.","textureName":"helmets/iron.png","group":"armor"},"ITEM_ARMOR_GOLD":{"title":"Golden Armor","description":"Better than iron armor, it absorbs more damage. And players like to show off at her.","textureName":"helmets/gold.png","group":"armor"},"ITEM_ARMOR_DIAMOND":{"title":"Diamond Armor","description":"The most durable armor that does not require energy. A great choice if you do not have generators, but have a lot of money o_O","textureName":"helmets/diamond.png","group":"armor"},"ITEM_ARMOR_NANO":{"title":"Nano Armor","description":"Carbon fiber armor. It protects better than a diamond armor but consumes energy while absorbing damage.","textureName":"helmets/nano.png","group":"armor"},"ITEM_ARMOR_QUANTUM":{"title":"Quantum Armor","description":"The best armor! Effectively absorbs most of the damage, but consumes more energy. Alas, it does not protect against coronavirus.","textureName":"helmets/quantum.png","group":"armor"},"ITEM_POTION_REGENERATION":{"title":"Potion of Regeneration","description":"Regenerates your health over time.","textureName":"potions/potion_of_regeneration.png","group":"potions"},"ITEM_POTION_REGENERATION2":{"title":"Potion of Regeneration II","description":"Regenerates your health over time.","textureName":"potions/potion_of_regeneration.png","group":"potions"},"ITEM_POTION_REGENERATION3":{"title":"Potion of Regeneration III","description":"Regenerates your health over time.","textureName":"potions/potion_of_regeneration.png","group":"potions"},"ENTITY_BLOCK_MINER_COAL":{"title":"Coal Miner","description":"It extracts coal from neighboring coal ores. Automatically placed in the Storage if there are no ores nearby.","textureName":"blocks/miners/coal-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_IRON":{"title":"Iron Miner","description":"It extracts iron from neighboring iron ores. Automatically placed in the Storage if there are no ores nearby.","textureName":"blocks/miners/iron-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_GOLD":{"title":"Gold Miner","description":"It extracts gold from neighboring golden ores. Automatically placed in the Storage if there are no ores nearby.","textureName":"blocks/miners/gold-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_DIAMOND":{"title":"Diamond Miner","description":"It extracts diamonds from neighboring diamond ores. Automatically placed in the Storage if there are no ores nearby.","textureName":"blocks/miners/diamond-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_URANIUM":{"title":"Uranium Miner","description":"It extracts uranium from neighboring uranium ores. Automatically placed in the Storage if there are no ores nearby.","textureName":"blocks/miners/uranium-miner.png","group":"miners"},"ENTITY_BLOCK_GENERATOR_MANUAL":{"title":"Manual Generator","description":"Generates energy from interacting with it. Not effective, but suitable when there are no other options.","textureName":"blocks/generators/manual-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_SOLAR":{"title":"Solar Generator","description":"Generates energy from sunlight.","textureName":"blocks/generators/solar-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_SOLAR_ADVANCED":{"title":"Advanced Solar Generator","description":"Generates more energy from sunlight.","textureName":"blocks/generators/advanced-solar-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_WIND":{"title":"Wind Generator","description":"Generates energy from wind.","textureName":"blocks/generators/wind-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_COAL":{"title":"Coal Generator","description":"Generates energy from coal.","textureName":"blocks/generators/coal-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_LAVA":{"title":"Geothermal Generator","description":"Generates energy from lava.","textureName":"blocks/generators/lava-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_WATER":{"title":"Water turbine","description":"Generates energy from water.","textureName":"blocks/generators/water-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_NUCLEAR":{"title":"Nuclear Generator","description":"Generates energy from uranium.","textureName":"blocks/generators/nuclear-generator.png","group":"generators"},"ENTITY_BLOCK_SELLER_MANUAL":{"title":"Manual Seller","description":"Sells energy for money from interacting with it. Not effective, but suitable when there are no other options.","textureName":"blocks/sellers/manual-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_SMALL":{"title":"Small Seller","description":"Sells energy for money.","textureName":"blocks/sellers/small-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_BIG":{"title":"Big Seller","description":"Sells more energy for big money.","textureName":"blocks/sellers/big-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_COAL":{"title":"Coal Seller","description":"Sells more energy and coals for big money.","textureName":"blocks/sellers/coal-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_GOLDEN":{"title":"Golden Seller","description":"Sells more energy and gold for big money.","textureName":"blocks/sellers/golden-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_DIAMOND":{"title":"Diamond Seller","description":"Sells more energy and diamonds for big money.","textureName":"blocks/sellers/diamond-seller.png","group":"sellers"},"ENTITY_BLOCK_BED":{"title":"Bed Block","description":"If you die, then appear in your bed. All your resources will be saved but bed will disappear.","textureName":"blocks/defense/bed.png","group":"defense"},"ENTITY_BLOCK_IRON":{"title":"Iron Block","description":"Serves to strengthen blocks or build walls.","textureName":"blocks/defense/iron.png","group":"defense"},"ENTITY_BLOCK_OBSIDIAN":{"title":"Obsidian Block","description":"Serves to strengthen blocks or build walls.","textureName":"blocks/defense/obsidian.png","group":"defense"},"ENTITY_BLOCK_REINFORCED_STONE":{"title":"Reinforced Stone","description":"The strongest block. Serves to strengthen blocks or build walls.","textureName":"blocks/defense/reinforced-stone.png","group":"defense"},"ENTITY_BLOCK_TESLA_COIL_1000":{"title":"Tesla Coil 1000","description":"Deals damage to enemies within the radius of destruction. Spends a lot of energy per hit for each player.","textureName":"blocks/defense/tesla-coil-1000.png","group":"defense"},"ENTITY_BLOCK_TESLA_COIL_2000":{"title":"Tesla Coil 2000","description":"An improved version of the usual Tesla coil. Deals more damage and has a larger radius of destruction. Spends even more energy per hit for each player.","textureName":"blocks/defense/tesla-coil-2000.png","group":"defense"},"ENTITY_BLOCK_TESLA_COIL_3000":{"title":"Tesla Coil 3000","description":"The top model for real boys and super girls. Destroys enemy blocks. It inflicts monstrous damage and has a huge radius of destruction. Spends even more energy per hit for each player.","textureName":"blocks/defense/tesla-coil-3000.png","group":"defense"}}}');
}, function (e) {
  e.exports = JSON.parse('{"tabs":{"storage":"Склад","tools":"Инструменты","armor":"Броня","potions":"Зелья","miners":"Буры","generators":"Генераторы","sellers":"Продавцы","defense":"Защита"},"buy":"Купить","use":"Использовать","consumes":"Потребляет","produces":"Производит","repairs":"Ремонт","cost":"Цена","health":"Здоровье","healingSpeed":"Восстанавливает","healingDuration":"Время","protection":"Защита","damage":"Урон","attackRadius":"Радиус атаки","count":"Количество","storageIsEmpty":"Склад пустой. Сюда попадают старые инструменты и блоки которые сняли ключом.","produceTypes":{"tick":"за тик","hit":"за удар"},"items":{"ITEM_TOOL_PICKAXE_WOODEN":{"title":"Деревянная кирка","description":"Самая простая кирка. Добывает мало ресурсов, но зато самая дешевая.","textureName":"tools/wooden_pickaxe.png","group":"tools"},"ITEM_TOOL_PICKAXE_IRON":{"title":"Железная кирка","description":"Улучшенная кирка. Добывает больше ресурсов. При помощи нее можно добывать золото.","textureName":"tools/iron_pickaxe.png","group":"tools"},"ITEM_TOOL_PICKAXE_GOLDEN":{"title":"Золотая кирка","description":"Улучшенная кирка. Добывает больше ресурсов. При помощи нее можно добывать алмазы.","textureName":"tools/golden_pickaxe.png","group":"tools"},"ITEM_TOOL_PICKAXE_DIAMOND":{"title":"Алмазная кирка","description":"Лучшая кирка не требующая энергии. Добывает больше ресурсов. При помощи нее можно добывать уран.","textureName":"tools/diamond_pickaxe.png","group":"tools"},"ITEM_TOOL_DRILL":{"title":"Бур","description":"Простой электрический бур. Добывает больше ресурсов, но во время работы потребляет энергию.","textureName":"tools/drill.png","group":"tools"},"ITEM_TOOL_DRILL_DIAMOND":{"title":"Алмазный бур","description":"Лучший инструмент для добычи ресурсов. Добывает огромное количество ресурсов за удар, но и энергии потребляет больше.","textureName":"tools/diamond_drill.png","group":"tools"},"ITEM_TOOL_WRENCH":{"title":"Ключ","description":"Убирает ваши блоки. Ударьте ключом по своему блоку для удаления блока.","textureName":"tools/wrench.png","group":"tools"},"ITEM_ARMOR_LEATHER":{"title":"Кожаная броня","description":"Броней назвать сложно, но это лучше чем ничего.","textureName":"helmets/leather.png","group":"armor"},"ITEM_ARMOR_IRON":{"title":"Железная броня","description":"Полноценная броня, поглощает часть урона.","textureName":"helmets/iron.png","group":"armor"},"ITEM_ARMOR_GOLD":{"title":"Золотая броня","description":"Лучше чем железная, поглощает больше урона. А еще в ней любят повыпендриваться.","textureName":"helmets/gold.png","group":"armor"},"ITEM_ARMOR_DIAMOND":{"title":"Алмазная броня","description":"Самая прочная броня не требующая энергии. Отличный выбор если у вас нет генераторов, но откуда-то есть куча денег о_О","textureName":"helmets/diamond.png","group":"armor"},"ITEM_ARMOR_NANO":{"title":"Нано броня","description":"Броня из углеволокна. Защищает лучше алмазной, но потребляет энергию во время поглощения урона.","textureName":"helmets/nano.png","group":"armor"},"ITEM_ARMOR_QUANTUM":{"title":"Квантовая броня","description":"Лучшая броня! Эффективно поглощает большую часть урона, но потребляет больше энергии. Увы, не защищает от коронавируса.","textureName":"helmets/quantum.png","group":"armor"},"ITEM_POTION_REGENERATION":{"title":"Зелье регенерации","description":"Регенирирует ваше здоровье на протяжении определенного действия","textureName":"potions/potion_of_regeneration.png","group":"potions"},"ITEM_POTION_REGENERATION2":{"title":"Зелье регенерации II","description":"Регенирирует ваше здоровье на протяжении определенного действия","textureName":"potions/potion_of_regeneration.png","group":"potions"},"ITEM_POTION_REGENERATION3":{"title":"Зелье регенерации III","description":"Регенирирует ваше здоровье на протяжении определенного действия","textureName":"potions/potion_of_regeneration.png","group":"potions"},"ENTITY_BLOCK_MINER_COAL":{"title":"Угольная буровая установка","description":"Добывает уголь из соседних угольных руд. Автоматически помещается в Хранилище если рядом нет руд.","textureName":"blocks/miners/coal-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_IRON":{"title":"Железная буровая установка","description":"Добывает железо из соседних железных руд. Автоматически помещается в Хранилище если рядом нет руд.","textureName":"blocks/miners/iron-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_GOLD":{"title":"Золотая буровая установка","description":"Добывает золото из соседних золотых руд. Автоматически помещается в Хранилище если рядом нет руд.","textureName":"blocks/miners/gold-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_DIAMOND":{"title":"Алмазная буровая установка","description":"Добывает алмазы из соседних алмазных руд. Автоматически помещается в Хранилище если рядом нет руд.","textureName":"blocks/miners/diamond-miner.png","group":"miners"},"ENTITY_BLOCK_MINER_URANIUM":{"title":"Урановая буровая установка","description":"Добывает уран из соседних урановых руд. Автоматически помещается в Хранилище если рядом нет руд.","textureName":"blocks/miners/uranium-miner.png","group":"miners"},"ENTITY_BLOCK_GENERATOR_MANUAL":{"title":"Ручной генератор","description":"Генерирует энергию от взаимодействия с ним. Не эффективен, но подходит когда нет других вариантов.","textureName":"blocks/generators/manual-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_SOLAR":{"title":"Солнечная панель","description":"Генерирует энергию от солнечных лучей.","textureName":"blocks/generators/solar-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_SOLAR_ADVANCED":{"title":"Продвинутая солнечная панель","description":"Генерирует больше энергии от солнечных лучей.","textureName":"blocks/generators/advanced-solar-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_WIND":{"title":"Ветрогенератор","description":"Генерирует энергию от ветра.","textureName":"blocks/generators/wind-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_COAL":{"title":"Угольный генератор","description":"Генерирует энергию из угля.","textureName":"blocks/generators/coal-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_LAVA":{"title":"Геотермальный генератор","description":"Генерирует энергию из лавы.","textureName":"blocks/generators/lava-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_WATER":{"title":"Водяная турбина","description":"Генерирует энергию из воды.","textureName":"blocks/generators/water-generator.png","group":"generators"},"ENTITY_BLOCK_GENERATOR_NUCLEAR":{"title":"Ядерный реактор","description":"Генерирует энергию из урана.","textureName":"blocks/generators/nuclear-generator.png","group":"generators"},"ENTITY_BLOCK_SELLER_MANUAL":{"title":"Ручной продавец","description":"Продает энергию за деньги от взаимодействия с ним. Не эффективен, но подходит когда нет других вариантов.","textureName":"blocks/sellers/manual-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_SMALL":{"title":"Маленький продавец","description":"Продает энергию за деньги.","textureName":"blocks/sellers/small-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_BIG":{"title":"Большой продавец","description":"Продает энергию за большие деньги.","textureName":"blocks/sellers/big-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_COAL":{"title":"Угольный продавец","description":"Продает энергию и угли за большие деньги.","textureName":"blocks/sellers/coal-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_GOLDEN":{"title":"Золотой продавец","description":"Продает энергию и золото за большие деньги.","textureName":"blocks/sellers/golden-seller.png","group":"sellers"},"ENTITY_BLOCK_SELLER_DIAMOND":{"title":"Алмазный продавец","description":"Продает энергию и алмазы за большие деньги.","textureName":"blocks/sellers/diamond-seller.png","group":"sellers"},"ENTITY_BLOCK_BED":{"title":"Кровать","description":"Если вы погибните, то появитесь в своей кровати. Все ваши ресурсы сохранятся, но кровать исчезнет.","textureName":"blocks/defense/bed.png","group":"defense"},"ENTITY_BLOCK_IRON":{"title":"Железный блок","description":"Служит для укрепления блоков или постройки стен.","textureName":"blocks/defense/iron.png","group":"defense"},"ENTITY_BLOCK_OBSIDIAN":{"title":"Обсидиановый блок","description":"Служит для укрепления блоков или постройки стен.","textureName":"blocks/defense/obsidian.png","group":"defense"},"ENTITY_BLOCK_REINFORCED_STONE":{"title":"Укреплённый камень","description":"Самый прочный блок. Служит для укрепления блоков или постройки стен.","textureName":"blocks/defense/reinforced-stone.png","group":"defense"},"ENTITY_BLOCK_TESLA_COIL_1000":{"title":"Катушка Теслы 1000","description":"Наносит урон врагам в радиусе поражения. Расходует много энергии за удар на каждого игрока.","textureName":"blocks/defense/tesla-coil-1000.png","group":"defense"},"ENTITY_BLOCK_TESLA_COIL_2000":{"title":"Катушка Теслы 2000","description":"Улучшенная версия обычной катушки Теслы. Наносит больше урона и имеет больший радиус поражения. Расходует еще больше энергии за удар на каждого игрока.","textureName":"blocks/defense/tesla-coil-2000.png","group":"defense"},"ENTITY_BLOCK_TESLA_COIL_3000":{"title":"Катушка Теслы 3000","description":"Топовая модель для настоящих мальчиков и супер девочек. Уничтожает вражеские блоки. Наносит чудовищный урон и имеет огромный радиус поражения. Расходует еще больше энергии за удар на каждого игрока.","textureName":"blocks/defense/tesla-coil-3000.png","group":"defense"}}}');
}, function (e) {
  e.exports = JSON.parse('{"teams":"Teams","join":"Join","joinRequest":"Team request","joinRequestSent":"Join request sent","myTeam":"My team: ${team}","createTeam":"Create team","teamName":"Team name","wantJoinToTeam":"${player} want join to team","acceptedTo":"Accepted to ${team}","youAreAcceptedToTeam":"You are accepted to team ${team}","newTeammate":"New teammate","teammateLeave":"Teammate leave","teammateLeaveTeam":"Teammate \'${teammate}\' leave team","leave":"Leave","kick":"Kick","kicked":"Kicked","kickFromTeam":"Player \'${kicker}\' kick you from team","kickedTeammate":"Kicked teammate","kickedTeammateBy":"Teammate \'${kicker}\' kicked \'${kicked}\'","teammateDead":"\'${teammate}\' died","error":"Error","alreadyInTeam":"Already in team","joinRequestNotFound":"Join request not found","teammatesTooFar":"Players too far","teamNotFound":"Team not found"}');
}, function (e) {
  e.exports = JSON.parse('{"teams":"Команды","join":"Вступить","joinRequest":"Запрос в команду","joinRequestSent":"Запрос в команду отправлен","myTeam":"Моя команда: ${team}","createTeam":"Создать команду","teamName":"Имя команды","wantJoinToTeam":"${player} хочет в команду","acceptedTo":"Принят в ${team}","youAreAcceptedToTeam":"Вы приняты в команду ${team}","newTeammate":"Новый товарищ","teammateLeave":"Товарищ вышел","teammateLeaveTeam":"Товарищ \'${teammate}\' покинул команду","leave":"Выйти","kick":"Выгнать","kicked":"Выгнан","kickFromTeam":"Игрок \'${kicker}\' выгнал вас из команды","kickedTeammate":"Товарищ выгнан","kickedTeammateBy":"Товарищ \'${kicker}\' выгнал \'${kicked}\'","teammateDead":"\'${teammate}\' умер","error":"Ошибка","alreadyInTeam":"Уже в команде","joinRequestNotFound":"Запрос вступления не найден","teammatesTooFar":"Игроки слишком далеко","teamNotFound":"Команда не найдена"}');
}, function (e, t, n) {
  var i = {"./en.json": 149, "./ru.json": 150};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 148;
}, function (e) {
  e.exports = JSON.parse('{"perTick":"t","gameMenu":"Menu","shop":"Shop","fullScreen":{"enable":"Enable full screen","disable":"Disable full screen"},"howToPlay":"Sell energy, resources and make money.<br>Generators generate energy. Buy a generator in shop.","teams":"Teams","hotKeys":{"attack":"Attack","speedUp":"Speed up"}}');
}, function (e) {
  e.exports = JSON.parse('{"perTick":"т","gameMenu":"Меню","shop":"Магазин","fullScreen":{"enable":"Включить полный экран","disable":"Выключить полный экран"},"howToPlay":"Продавайте энергию, ресурсы и зарабатывайте деньги.<br>Генераторы вырабатывают энергию. Купите генератор в магазине.","teams":"Команды","hotKeys":{"attack":"Атака","speedUp":"Ускориться"}}');
}, function (e, t, n) {
  var i = {"./en.json": 152, "./ru.json": 153};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 151;
}, function (e) {
  e.exports = JSON.parse('{"lvlUp":"Lvl Up!"}');
}, function (e) {
  e.exports = JSON.parse('{"lvlUp":"Новый уровень!"}');
}, function (e) {
  e.exports = JSON.parse('{"fps":"FPS: ","ping":"Ping: "}');
}, function (e) {
  e.exports = JSON.parse('{"fps":"FPS: ","ping":"Пинг: "}');
}, function (e, t, n) {
  var i = {"./en.json": 157, "./ru.json": 158};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 156;
}, function (e) {
  e.exports = JSON.parse('{"title":"Top players"}');
}, function (e) {
  e.exports = JSON.parse('{"title":"Лучшие игроки"}');
}, function (e, t, n) {
  var i = {"./en.json": 160, "./ru.json": 161};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 159;
}, function (e) {
  e.exports = JSON.parse('{"gameMenu":"Menu","fullScreen":{"enable":"Enable full screen","disable":"Disable full screen"},"howToPlay":"How To Play","teams":"Teams","hotKeys":{"attack":"Attack","speedUp":"Speed up"}}');
}, function (e) {
  e.exports = JSON.parse('{"gameMenu":"Меню","fullScreen":{"enable":"Включить полный экран","disable":"Выключить полный экран"},"howToPlay":"Как играть","teams":"Команды","hotKeys":{"attack":"Атака","speedUp":"Ускориться"}}');
}, function (e, t, n) {
  var i = {"./en.json": 163, "./ru.json": 164};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 162;
}, function (e) {
  e.exports = JSON.parse('{"share":"Share","tw":{"particle":"Click me!"},"fb":{"particle":"And me!"},"vk":{"particle":"And me!!","accessModalTitle":"Share score","giveAccessAndShare":"Give access and share"}}');
}, function (e) {
  e.exports = JSON.parse('{"share":"Поделиться","tw":{"particle":"Нажми меня!"},"fb":{"particle":"И меня!"},"vk":{"particle":"И меня!!","accessModalTitle":"Share score","giveAccessAndShare":"Give access and share"}}');
}, function (e, t, n) {
  var i = {"./en.json": 166, "./ru.json": 167};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 165;
}, function (e) {
  e.exports = JSON.parse('{"reSpawn":"Respawn","inMainMenu":"In menu","spectate":"Spectate","disableAdBlock":"Disable AdBlock and get <b>+20% experience</b>","help":["<p><b>Speed up</b> on the right mouse button, but be careful you reduce experience. <b>Attack</b> at enemies with the right mouse button and <b>get to top 1</b>!</p>","<p>Eat cakes, cookies, cooked fish and everything you find to grow in size while you are small, most importantly do not eat poisonous potatoes, because it reduces your experience and you become smaller!</p>","<p>Attack smaller enemies, so you have a better chance of staying alive.</p>","<p><b>Hint</b>: for players who disable the ad blocker, an additional 20% of experience is awarded!</p>","<p>One of the effective attack tactics: approach the enemy on the left side so that it is to your right and from your sword, then - immediately attack first!</p>","<p>MineStrike will let you <b>have fun</b> and not let you get bored!</p>"],"scoreTitle":"Your score","shareText":"Share your incredible score","shareOffer":"Can you beat my record for ${points} points?\\nTry to do it on MineStrike.fun!","anotherGameTitle":"Play in the game!"}');
}, function (e) {
  e.exports = JSON.parse('{"reSpawn":"Возродиться","inMainMenu":"В меню","spectate":"Наблюдать","disableAdBlock":"Выключи AdBlock и поулчи <b>+20% ускорения к прокачке!</b>","help":["<p><b>Ускоряйтесь</b> на правую кнопку мыши, но будьте осторожны, вы уменьшите свой опыт. <b>Атакуйте</b> врагов на правую кнопку мыши и <b>доберитесь до топ 1</b>!</p>","<p>Ешьте тортики, печеньки, приготовленную рыбу и все что найдете, чтобы увеличиваться в размерах пока вы маленькие, главное не ешьте ядовитый картофель, потому что он уменьшает ваш опыт и вы становитесь меньше!</p>","<p>Атакуйте врагов меньшего размера, так у вас больше шансов остаться вживых и убегайте от больших врагов чтобы они вас не убили одним махом своего мощного оружия!</p>","<p><b>Подсказка</b>: у игроков отключивших блокировщик рекламы начисляется дополнительно 20% опыта!</p>","<p>Одна из эффективных тактик атаки: подходите к врагу с левой стороны, чтобы он был справа от вас и от вашего меча, затем - немедленно атакуйте первым!</p>","<p>MineStrike позволит вам <b>весело</b> провести время и не даст заскучать!</p>"],"scoreTitle":"Ваш счёт","shareText":"Поделись своим супер счётом","shareOffer":"Слабо побить мой рекорд ${points} очков?\\nПопробуй сделать это на MineStrike.fun!","anotherGameTitle":"Сыграйте в игру!"}');
}, function (e, t, n) {
  var i = {"./en.json": 169, "./ru.json": 170};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 168;
}, function (e) {
  e.exports = JSON.parse('{"reSpawn":"Respawn","inMainMenu":"In menu","spectate":"Spectate","disableAdBlock":"Disable AdBlock and get <b>+20% experience</b>","help":["<p><b>Speed up</b> on the right mouse button, but be careful you reduce experience. <b>Attack</b> at enemies with the right mouse button and <b>get to top 1</b>!</p>","<p>Eat cakes, cookies, cooked fish and everything you find to grow in size while you are small, most importantly do not eat poisonous potatoes, because it reduces your experience and you become smaller!</p>","<p>Attack smaller enemies, so you have a better chance of staying alive.</p>","<p><b>Hint</b>: for players who disable the ad blocker, an additional 20% of experience is awarded!</p>","<p>One of the effective attack tactics: approach the enemy on the left side so that it is to your right and from your sword, then - immediately attack first!</p>","<p>MineStrike will let you <b>have fun</b> and not let you get bored!</p>"],"scoreTitle":"Your score","shareText":"Share your incredible score","shareOffer":"Can you beat my record for ${points} points?\\nTry to do it on MineStrike.fun!","anotherGameTitle":"Play in the game!"}');
}, function (e) {
  e.exports = JSON.parse('{"reSpawn":"Возродиться","inMainMenu":"В меню","spectate":"Наблюдать","disableAdBlock":"Выключи AdBlock и поулчи <b>+20% ускорения к прокачке!</b>","help":["<p><b>Ускоряйтесь</b> на правую кнопку мыши, но будьте осторожны, вы уменьшите свой опыт. <b>Атакуйте</b> врагов на правую кнопку мыши и <b>доберитесь до топ 1</b>!</p>","<p>Ешьте тортики, печеньки, приготовленную рыбу и все что найдете, чтобы увеличиваться в размерах пока вы маленькие, главное не ешьте ядовитый картофель, потому что он уменьшает ваш опыт и вы становитесь меньше!</p>","<p>Атакуйте врагов меньшего размера, так у вас больше шансов остаться вживых и убегайте от больших врагов чтобы они вас не убили одним махом своего мощного оружия!</p>","<p><b>Подсказка</b>: у игроков отключивших блокировщик рекламы начисляется дополнительно 20% опыта!</p>","<p>Одна из эффективных тактик атаки: подходите к врагу с левой стороны, чтобы он был справа от вас и от вашего меча, затем - немедленно атакуйте первым!</p>","<p>MineStrike позволит вам <b>весело</b> провести время и не даст заскучать!</p>"],"scoreTitle":"Ваш счёт","shareText":"Поделись своим супер счётом","shareOffer":"Слабо побить мой рекорд ${points} очков?\\nПопробуй сделать это на MineStrike.fun!","anotherGameTitle":"Сыграйте в игру!"}');
}, function (e, t, n) {
  var i = {"./en.json": 172, "./ru.json": 173};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 171;
}, function (e) {
  e.exports = JSON.parse('{"inMainScreen":"In Main screen","status":"Status","statuses":{"expectation":"Waiting","retryingAfter":"Retrying after","connectionAttempt":"Connection attempt","connectionError":"Connection error","receivingServerInfo":"Receiving list of servers","errorReceivingServerInfo":"Error receiving list of servers","clientWillAutoConnectToServer":"Reloading","connecting":"Connecting","login":"Login","reLogin":"Spawn"},"shortSeconds":"sec.","codes":{"2":{"title":"Session replaced","text":"The session was running on another device"},"4":{"title":"Server stopped"},"5":{"title":"Room is destroyed"},"6":{"title":"Room not active"},"7":{"title":"Server is closed"},"8":{"title":"Authorisation Error"},"9":{"title":"Server is full"},"10":{"title":"Keep alive timeout"},"11":{"title":"Invalid state"},"12":{"title":"Respawn not allowed"},"13":{"title":"Server update","text":["<p>Wooow! Server update!</p>","<p>It takes 30-60 seconds.</p>","<p>If the game isn\'t connecting to server for more than two minutes, then restart game and try connect.</p>"]},"15":{"title":"Server reboot","text":["<p>Server is rebooting.</p>","<p>It takes 30-60 seconds.</p>","<p>If the game isn\'t connecting to server for more than two minutes, then restart game and try connect.</p>"]},"default":{"title":"Connection lost","text":["<p>Perhaps you have problems with the Internet or server reboots.</p>"]}}}');
}, function (e) {
  e.exports = JSON.parse('{"inMainScreen":"На главный экран","status":"Статус","statuses":{"expectation":"Ожидание","retryingAfter":"Повторная попытка через","connectionAttempt":"Попытка подключения","connectionError":"Ошибка подключения","receivingServerInfo":"Получение списка серверов","errorReceivingServerInfo":"Ошибка получения списка серверов","clientWillAutoConnectToServer":"Перезагрузка","connecting":"Подключение","login":"Авторизация","reLogin":"Появление"},"shortSeconds":"сек.","codes":{"2":{"title":"Сессия заменена","text":"Сессия была запущена на другом устройстве"},"4":{"title":"Сервер остановлен"},"5":{"title":"Комната разрушена"},"6":{"title":"Комната не активна"},"7":{"title":"Сервер закрыт"},"8":{"title":"Ошибка авторизации"},"9":{"title":"Сервер полон"},"10":{"title":"Keep alive timeout"},"11":{"title":"Server error"},"12":{"title":"Респавн запрещен"},"13":{"title":"Обновление сервера","text":["<p>Воооу! Обновление сервера!</p>","<p>Это займет 30-60 секунд.</p>","<p>Если игра не подключается к серверу больше двух минут, то перезагрузите игру.</p>"]},"15":{"title":"Перезагрузка сервера","text":["<p>Сервер перезагружается.</p>","<p>Это займет 30-60 секунд.</p>","<p>Если игра не подключается к серверу больше двух минут, то перезагрузите игру.</p>"]},"default":{"title":"Соединение потеряно","text":["<p>Возможно, у Вас проблемы с интернетом или сервер перезагружается.</p>"]}}}');
}, function (e, t, n) {
  var i = {"./en.json": 175, "./ru.json": 176};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 174;
}, function (e) {
  e.exports = JSON.parse('{"dead":"Dead","killedYou":"killed you","kickedOut":"Kicked out","reason":"Reason"}');
}, function (e) {
  e.exports = JSON.parse('{"dead":"Мертв","killedYou":"убил вас","kickedOut":"Выпнут","reason":"Причина"}');
}, function (e, t, n) {
  var i = {"./en.json": 178, "./ru.json": 179};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 177;
}, function (e) {
  e.exports = JSON.parse('{"interval":{"TODAY":"Today","THREE_DAYS":"3 days","WEEK":"Week"}}');
}, function (e) {
  e.exports = JSON.parse('{"interval":{"TODAY":"Сегодня","THREE_DAYS":"3 дня","WEEK":"Неделя"}}');
}, function (e, t, n) {
  var i = {"./en.json": 181, "./ru.json": 182};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 180;
}, function (e) {
  e.exports = JSON.parse('{"nickname":"Nick Name","play":"Play","connecting":"Connecting","login":"Login","reLogin":"Spawn","wait":"Wait","enterNickname":"Enter your nickname","server":"Server","gameMode":"Game mode","signIn":"Sign in","signOut":"Sign out","disableAdBlock":"Disable AdBlock and get <b>+20% experience!</b>","support":"Support","shareButtonsOffer":"Play with me in MineStrike.fun!","partners":{"playgamesio.net":"Play Games IO","poki.com":"Poki","iogames.space":"More IO Game","crazygames.com":"Crazy Games","vseigru.net":"All games","4j.com":"Best IO Games","igroutka.ru":"Igroutka","titotu.io":"Titotu.io Games","obfog.com":"Best games","kevin.games":"Kevin games","multoigri.ru":"Multoigri.ru","brightestgames.com":"BrightestGames","vitalitygames.com":"VitalityGames","gamepix.com":"GAMEPIX","play-games.com":"PLAY-GAMES"},"notMojang":"NOT AN OFFICIAL MINECRAFT PRODUCT. NOT APPROVED BY OR ASSOCIATED WITH MOJANG.","downloadApps":{"betterPerformance":"Standalone clients have fewer lags and better game performance","macos":"Download for Mac OS","linux":"Download for Linux","windows":"Download for Windows"},"about":["<div class=\'title\'>Controls</div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-move white\'></div><span> - Move</span></div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-left white\'></div><span> - Attack</span></div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-right white\'></div><span> - Speed up</span></div>","<br><br>","<div class=\'title\'><span>About game</span></div>","<div class=\'content-padding\'>","<p><b>Minestrike.fun</b> - is a fun Minecraft style game.</p>","<p>Eat cakes, cookies, cooked fish and everything you find to grow in size while you are small, most importantly do not eat poisonous potatoes, because it reduces your experience and you become smaller!</p>","<p>Attack smaller enemies, so you have a better chance of staying alive.</p>","<p>You can insurance yourself just run away from large enemies so that they do not kill you with one fell swoop of their powerful weapon or you can donate your experience to the enemy. But you won’t be able to run for a long time, because when you run, your experience decreases.</p>","<p>The game has only 15 levels:</p>","<ul>","<li>Steve with a wooden sword</li>","<li>A bee with a sunflower</li>","<li>Pumpkin with a stick</li>","<li>Fish with a fishing rod</li>","<li>Ocelot with a stone sword</li>","<li>A pig with a stone pickaxe</li>","<li>Zombies with an iron shovel</li>","<li>Skeleton with bone</li>","<li>Creeper with an iron pickaxe</li>","<li>Drowned man with a trident</li>","<li>Enderman with a diamond sword</li>","<li>Zombie Pigman with a golden sword</li>","<li>Blaze with an blaze rod</li>","<li>Witch with an Enchanted diamond sword</li>","<li>Herobrine with nanosable</li>","</ul>","<p>Can you get to level 15 and become the biggest and strongest in the game?</p>","<p><b>Hint</b>: for players who disable the ad blocker, an additional 20% of experience is awarded!</p>","<p>One of the effective attack tactics: approach the enemy on the left side so that it is to your right and from your sword, then - immediately attack first!</p>","<p>MineStrike will let you <b>have fun</b> and not let you get bored!</p>","<p>This game uses nice and fast hosting to provide good user experience and game play. You can learn more about the software that we use by writing to us in discord.</p>","<div class=\'title\'>Colors in chat</div>","<p><b>Example:</b></p>","<p>[RED]Mine [GOLD]Strike - <font style=\'color: #FF5555\'>Mine</font> <font style=\'color: #FFAA00\'>Strike</font></p>","<p><b>Colors:</b></p>","<p><font style=\'color: #555555\'>[BLACK]</font>, <font style=\'color: #0000AA\'>[DARK_BLUE]</font>, <font style=\'color: #00AA00\'>[DARK_GREEN]</font>, <font style=\'color: #00AAAA\'>[DARK_AQUA]</font>, <font style=\'color: #AA0000\'>[DARK_RED]</font>, <font style=\'color: #AA00AA\'>[DARK_PURPLE]</font>, <font style=\'color: #FFAA00\'>[GOLD]</font>, <font style=\'color: #AAAAAA\'>[GRAY]</font>, <font style=\'color: #555555\'>[DARK_GRAY]</font>, <font style=\'color: #5555FF\'>[BLUE]</font>, <font style=\'color: #55FF55\'>[GREEN]</font>, <font style=\'color: #55FFFF\'>[AQUA]</font>, <font style=\'color: #FF5555\'>[RED]</font>, <font style=\'color: #FF55FF\'>[PURPLE]</font>, <font style=\'color: #FFFF55\'>[YELLOW]</font>, <font style=\'color: #FFFFFF\'>[WHITE]</font>, <b>[BOLD]</b>, <u>[UNDERLINE]</u>, <s>[STRIKEOUT]</s>, <i>[ITALIC]</i>, [RESET] - reset style</p>","</div>"],"anotherGameTitle":"Play in the game!","leadersBoard":"Leaders Board 💪"}');
}, function (e) {
  e.exports = JSON.parse('{"nickname":"Ник","play":"Играть","connecting":"Подключение","login":"Появление","reLogin":"Появление","wait":"Ждите","enterNickname":"Введите ваш ник","server":"Сервер","gameMode":"Режим игры","signIn":"Войти","signOut":"Выйти","disableAdBlock":"Выключи AdBlock и поулчи <b>+20% ускорения к прокачке!</b>","support":"Поддержка","shareButtonsOffer":"Играй со мной в MineStrike.fun!","partners":{"playgamesio.net":"Играть в IO Игры","poki.com":"Poki","iogames.space":"Больше IO игр","crazygames.com":"Сумасшедшие игры","vseigru.net":"Все игры","4j.com":"Лучшие игры","igroutka.ru":"Игроутка","obfog.com":"Игры на Obfog","titotu.io":"IO игры на Titotu.io","kevin.games":"Kevin games","multoigri.ru":"Multoigri.ru","brightestgames.com":"BrightestGames","vitalitygames.com":"VitalityGames","gamepix.com":"GAMEPIX","play-games.com":"PLAY-GAMES"},"notMojang":"НЕ ОФИЦИАЛЬНЫЙ ПРОДУКТ MINECRAFT. НЕ УТВЕРЖДЕНО И НЕ СВЯЗАННО С МОДЖАНГОМ.","about":["<div class=\'title\'>Управление</div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-move white\'></div><span> - Двигаться</span></div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-left white\'></div><span> - Атаковать</span></div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-right white\'></div><span> - Ускориться</span></div>","<br><br>","<div class=\'title\'><span>Об игре</span></div>","<div class=\'content-padding\'>","<p><b>Minestrike.fun</b> - это забавная игра в стиле Minecraft</p>","<p>Ешьте тортики, печеньки, приготовленную рыбу и все что найдете, чтобы увеличиваться в размерах пока вы маленькие, главное не ешьте ядовитый картофель, потому что он уменьшает ваш опыт и вы становитесь меньше!</p>","<p>Атакуйте врагов меньшего размера, так у вас больше шансов остаться вживых и убегайте от больших врагов чтобы они вас не убили одним махом своего мощного оружия! Но долго бегать не получится, потому что, при беге ваш опыт уменьшается.</p>","<p>В игре всего 15 уровней:</p>","<ul>","<li>Стив с деревянным мечом</li>","<li>Пчела с подсолнухом</li>","<li>Тыква с палкой</li>","<li>Рыба с удочкой</li>","<li>Оцелот с каменным мечом</li>","<li>Свинья с каменной киркой</li>","<li>Зомби с железной лопатой</li>","<li>Скелетон с костью</li>","<li>Крипер с железной киркой</li>","<li>Утопленник с трезубцем</li>","<li>Эндермен с алмазным мечом</li>","<li>Зомби-свиночеловек с золотым мечом</li>","<li>Ифрит с ифритовым стержнем</li>","<li>Ведьма с зачарованным алмазным мечом</li>","<li>Херобрин с наносаблей</li>","</ul>","<p>А вы сможете добраться до 15 уровня и стать самым большим и сильным в игре?</p>","<p><b>Подсказка</b>: у игроков отключивших блокировщик рекламы начисляется дополнительно 20% опыта!</p>","<p>Одна из эффективных тактик атаки: подходите к врагу с левой стороны, чтобы он был справа от вас и от вашего меча, затем - немедленно атакуйте первым!</p>","<p>MineStrike позволит вам <b>весело</b> провести время и не даст заскучать!</p>","<div class=\'title\'>Цвета в чате</div>","<p><b>Пример:</b></p>","<p>[RED]Mine [GOLD]Strike - <font style=\'color: #FF5555\'>Mine</font> <font style=\'color: #FFAA00\'>Strike</font></p>","<p><b>Цвета:</b></p>","<p><font style=\'color: #555555\'>[BLACK]</font>, <font style=\'color: #0000AA\'>[DARK_BLUE]</font>, <font style=\'color: #00AA00\'>[DARK_GREEN]</font>, <font style=\'color: #00AAAA\'>[DARK_AQUA]</font>, <font style=\'color: #AA0000\'>[DARK_RED]</font>, <font style=\'color: #AA00AA\'>[DARK_PURPLE]</font>, <font style=\'color: #FFAA00\'>[GOLD]</font>, <font style=\'color: #AAAAAA\'>[GRAY]</font>, <font style=\'color: #555555\'>[DARK_GRAY]</font>, <font style=\'color: #5555FF\'>[BLUE]</font>, <font style=\'color: #55FF55\'>[GREEN]</font>, <font style=\'color: #55FFFF\'>[AQUA]</font>, <font style=\'color: #FF5555\'>[RED]</font>, <font style=\'color: #FF55FF\'>[PURPLE]</font>, <font style=\'color: #FFFF55\'>[YELLOW]</font>, <font style=\'color: #FFFFFF\'>[WHITE]</font>, <b>[BOLD]</b>, <u>[UNDERLINE]</u>, <s>[STRIKEOUT]</s>, <i>[ITALIC]</i>, [RESET] - сбросить стиль</p>","</div>"],"anotherGameTitle":"Сыграйте в игру!","leadersBoard":"Лучшие игроки 💪"}');
}, function (e, t, n) {
  var i = {"./en.json": 184, "./ru.json": 185};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 183;
}, function (e) {
  e.exports = JSON.parse('{"nickname":"Nick Name","play":"Play","connecting":"Connecting","login":"Login","reLogin":"Spawn","wait":"Wait","enterNickname":"Enter your nickname","server":"Server","shareButtonsOffer":"Play with me in MineStrike.io!","notMojang":"NOT AN OFFICIAL MINECRAFT PRODUCT. NOT APPROVED BY OR ASSOCIATED WITH MOJANG.","leadersBoard":"Leaders Board 💪"}');
}, function (e) {
  e.exports = JSON.parse('{"nickname":"Ник","play":"Играть","connecting":"Подключение","login":"Появление","reLogin":"Появление","wait":"Ждите","enterNickname":"Введите ваш ник","server":"Сервер","shareButtonsOffer":"Играй со мной в MineStrike.io!","notMojang":"НЕ ОФИЦИАЛЬНЫЙ ПРОДУКТ MINECRAFT. НЕ УТВЕРЖДЕНО И НЕ СВЯЗАННО С МОДЖАНГОМ.","leadersBoard":"Лучшие игроки 💪"}');
}, function (e, t, n) {
  e.exports = function () {
    return new Worker(n.p + "6d2736410089df6da827.worker.js");
  };
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, ".game-mod.mineStrike {\n  font-family: 'Default', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: 400;\n}\n.game-mod.mineStrike.mobile-device {\n  font-size: 2.2vw;\n  line-height: 2.4vw;\n}\n.game-mod.mineStrike b {\n  font-family: 'Default', sans-serif;\n}\n.game-mod.mineStrike label {\n  display: block;\n}\n.game-mod.mineStrike object {\n  display: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.game-mod.mineStrike .clear {\n  clear: both;\n}\n.game-mod.mineStrike svg.icon path.first-tone {\n  opacity: 0.5;\n}\n.game-mod.mineStrike #chat #chat-input {\n  font: 500 0.9vw/1.2vw 'Default', sans-serif, sans-serif;\n}\n.game-mod.mineStrike #chat .hint {\n  font: 500 0.9vw/1.2vw 'Default', sans-serif, sans-serif;\n}\n@font-face {\n  font-family: 'Default';\n  src: url(\"/games/minestrike/fonts/minecraft.ttf\") format('truetype');\n}\n.game-mod.mineStrike a {\n  color: inherit;\n  text-decoration: underline;\n  cursor: pointer;\n}\n.game-mod.mineStrike a:visited {\n  color: inherit;\n  text-decoration: underline;\n}\n.game-mod.mineStrike select.select {\n  width: 100%;\n  padding: 0.4vw 20px 0.4vw 0.6vw;\n  outline: 0;\n  font: 1vw 'Open Sans', sans-serif;\n  color: #fff;\n  font-family: 'Default', sans-serif;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border: 0.12vw solid #e0e0e0;\n  background: url(\"/games/minestrike/images/select-arrow.png\") calc(100% - 10px)/12px no-repeat #989898;\n}\n.game-mod.mineStrike select.select::-ms-expand {\n  display: none;\n}\n@media screen and (min-width: 0 0) {\n  .game-mod.mineStrike select.select {\n    background: none 9;\n    padding: 5px 9;\n  }\n}\n.game-mod.mineStrike input.input,\n.game-mod.mineStrike textarea.input {\n  width: 100%;\n  padding: 0.8vw;\n  font-family: 'Default', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: 400;\n  color: #fff;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n  outline: 0;\n  cursor: text;\n  position: relative;\n  transition: all 0.2s;\n  display: block;\n  background: #8b8b8b;\n  border: 0;\n  box-shadow: inset -0.2vw -0.2vw #c6c6c6, inset 0.2vw 0.2vw rgba(0,0,0,0.7);\n}\n.game-mod.mineStrike input.input.slim,\n.game-mod.mineStrike textarea.input.slim {\n  padding: 0.6vw 0.6vw;\n}\n.game-mod.mineStrike input.input::-webkit-input-placeholder,\n.game-mod.mineStrike textarea.input::-webkit-input-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineStrike input.input::-moz-placeholder,\n.game-mod.mineStrike textarea.input::-moz-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineStrike input.input:-moz-placeholder,\n.game-mod.mineStrike textarea.input:-moz-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineStrike input.input:-ms-input-placeholder,\n.game-mod.mineStrike textarea.input:-ms-input-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineStrike.mobile-device input.input,\n.game-mod.mineStrike.mobile-device textarea.input {\n  padding: 1.8vw;\n  font-size: 2.2vw;\n  line-height: 2.4vw;\n  text-shadow: 0.2vw 0.2vw 0 #000;\n  box-shadow: inset -0.4vw -0.4vw #c6c6c6, inset 0.4vw 0.4vw rgba(0,0,0,0.7);\n}\n.game-mod.mineStrike input.file {\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.game-mod.mineStrike input.file + label {\n  display: inline-block;\n  cursor: pointer;\n}\n.game-mod.mineStrike input.checkbox {\n  vertical-align: top;\n  width: 2vw;\n  height: 2vw;\n  z-index: 1;\n  position: absolute;\n  opacity: 0;\n}\n.game-mod.mineStrike input.checkbox + label {\n  cursor: pointer;\n  display: inline-block;\n  line-height: 2vw;\n}\n.game-mod.mineStrike input.checkbox:not(checked) + label {\n  position: relative;\n  padding: 0 0 0 2.5vw;\n  vertical-align: top;\n}\n.game-mod.mineStrike input.checkbox:not(checked) + label:before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 0.2vw;\n  box-shadow: inset -0.2vw -0.2vw #c6c6c6, inset 0.2vw 0.2vw rgba(0,0,0,0.7);\n  background: #8b8b8b;\n  transition: all 0.2s;\n}\n.game-mod.mineStrike input.checkbox:not(checked) + label:after {\n  content: '';\n  position: absolute;\n  top: 0.51vw;\n  left: 0.51vw;\n  width: 1vw;\n  height: 1vw;\n  border-radius: 0.2vw;\n  transition: all 0.2s;\n}\n.game-mod.mineStrike input.checkbox:checked + label:after {\n  background: #adabab;\n}\n.game-mod.mineStrike input.radio {\n  vertical-align: top;\n  width: 2vw;\n  height: 2vw;\n}\n.game-mod.mineStrike input.radio + label {\n  cursor: pointer;\n  line-height: 2vw;\n  display: inline-block;\n}\n.game-mod.mineStrike input.radio:not(checked) {\n  position: absolute;\n  opacity: 0;\n}\n.game-mod.mineStrike input.radio:not(checked) + label {\n  position: relative;\n  padding: 0 0 0 2.5vw;\n}\n.game-mod.mineStrike input.radio:not(checked) + label:before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 0.2vw;\n  box-shadow: inset -0.2vw -0.2vw #c6c6c6, inset 0.2vw 0.2vw rgba(0,0,0,0.7);\n  background: #8b8b8b;\n  transition: all 0.2s;\n}\n.game-mod.mineStrike input.radio:not(checked) + label:after {\n  content: '';\n  position: absolute;\n  top: 0.51vw;\n  left: 0.51vw;\n  width: 1vw;\n  height: 1vw;\n  border-radius: 0.2vw;\n  transition: all 0.2s;\n}\n.game-mod.mineStrike input.radio:checked + label:before {\n  box-shadow: inset -0.2vw -0.2vw rgba(0,0,0,0.7), inset 0.2vw 0.2vw #c6c6c6;\n  background: #adabab;\n}\n.game-mod.mineStrike.mobile-device input.radio {\n  width: 4vw;\n  height: 4vw;\n}\n.game-mod.mineStrike.mobile-device input.radio + label {\n  line-height: 4vw;\n}\n.game-mod.mineStrike.mobile-device input.radio:not(checked) + label {\n  padding: 0 0 0 5vw;\n}\n.game-mod.mineStrike.mobile-device input.radio:not(checked) + label:before {\n  width: 4vw;\n  height: 4vw;\n  border-radius: 0.4vw;\n  box-shadow: inset -0.4vw -0.4vw #c6c6c6, inset 0.4vw 0.4vw rgba(0,0,0,0.7);\n}\n.game-mod.mineStrike.mobile-device input.radio:not(checked) + label:after {\n  top: 1vw;\n  left: 1vw;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 0.4vw;\n}\n.game-mod.mineStrike.mobile-device input.radio:checked + label:before {\n  box-shadow: inset -0.4vw -0.4vw rgba(0,0,0,0.7), inset 0.4vw 0.4vw #c6c6c6;\n}\n.game-mod.mineStrike input.range {\n  -webkit-appearance: none;\n  width: 100%;\n  height: 1vw;\n  border-radius: 0.4vw;\n  background: rgba(0,0,0,0.5);\n  outline: none;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n}\n.game-mod.mineStrike input.range::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 1.5vw;\n  height: 1.5vw;\n  border-radius: 50%;\n  background: #fff;\n  cursor: pointer;\n}\n.game-mod.mineStrike input.range::-moz-range-thumb {\n  width: 1.5vw;\n  height: 1.5vw;\n  border-radius: 50%;\n  background: #fff;\n  cursor: pointer;\n}\n.game-mod.mineStrike .range-container {\n  display: flex;\n}\n.game-mod.mineStrike .range-container .progress {\n  position: relative;\n  width: 100%;\n}\n.game-mod.mineStrike .range-container .progress .fill {\n  background-color: #fff;\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 1vw;\n  border-radius: 0.4vw;\n}\n.game-mod.mineStrike .range-container .progress .range {\n  vertical-align: top;\n  position: relative;\n  z-index: 1;\n}\n.game-mod.mineStrike .range-container span {\n  font-family: 'Default', sans-serif;\n  vertical-align: top;\n  margin: 0 0 0 0.5vw;\n  min-width: 3vw;\n  text-align: center;\n}\n.game-mod.mineStrike .button {\n  padding: 1vw 1.5vw;\n  background-color: #989898;\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  display: block;\n  font-family: 'Default', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: 400;\n  color: #fff;\n  position: relative;\n  border-radius: 0;\n  transition: all 0.2s;\n  overflow: hidden;\n  background-image: url(\"/games/minestrike/images/button.png\"), url(\"/games/minestrike/images/button-hover.png\");\n  box-shadow: inset 0.2vw 0.2vw rgba(255,255,255,0.7), inset -0.2vw -0.2vw rgba(0,0,0,0.5);\n  text-shadow: 0.15vw 0.15vw rgba(0,0,0,0.5);\n}\n.game-mod.mineStrike .button:disabled {\n  text-shadow: none;\n  background: #d4d2d2;\n}\n.game-mod.mineStrike .button:hover:not(:disabled) {\n  background-image: url(\"/games/minestrike/images/button-hover.png\");\n}\n.game-mod.mineStrike .button:hover:before {\n  display: block;\n}\n.game-mod.mineStrike .button:active {\n  box-shadow: inset 0.2vw 0.2vw rgba(0,0,0,0.5), inset -0.2vw -0.2vw rgba(255,255,255,0.5);\n  text-shadow: none;\n}\n.game-mod.mineStrike .button svg path {\n  fill: #fff;\n}\n.game-mod.mineStrike .button a.button {\n  text-decoration: none;\n  display: block;\n}\n.game-mod.mineStrike .button a.button a:visited {\n  color: #fff;\n}\n.game-mod.mineStrike.mobile-device .button {\n  padding: 2vw 2.5vw;\n  font-size: 2.2vw;\n  line-height: 2.4vw;\n  box-shadow: inset 0.4vw 0.4vw rgba(255,255,255,0.7), inset -0.4vw -0.4vw rgba(0,0,0,0.5);\n  text-shadow: 0.3vw 0.3vw rgba(0,0,0,0.5);\n}\n.game-mod.mineStrike .modal {\n  background-color: rgba(0,0,0,0.3);\n}\n.game-mod.mineStrike .modal .container .content-wrap {\n  color: #fff;\n  max-width: 70vw;\n  background: #adabab;\n  padding: 2vw;\n  box-shadow: inset 0.5vw 0.5vw rgba(255,255,255,0.7), inset -0.5vw -0.5vw rgba(0,0,0,0.5);\n  border-radius: 1vw;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .modal .container .content-wrap .close svg path {\n  fill: $white;\n}\n.game-mod.mineStrike .modal .container .content-wrap .title {\n  font-family: 'Default', sans-serif;\n  color: #333;\n  font-size: 1.3vw;\n  margin-bottom: 0.8vw;\n  text-shadow: none;\n}\n.game-mod.mineStrike .modal .container .content-wrap .title span {\n  display: block;\n  position: relative;\n}\n.game-mod.mineStrike .modal .container .content-wrap .content {\n  padding: 0;\n}\n.game-mod.mineStrike .modal .container .content-wrap .content p:not(last-child) {\n  margin-bottom: 0.5vw;\n}\n.game-mod.mineStrike.mobile-device .modal .container .content-wrap {\n  padding: 4vw;\n  box-shadow: inset 1vw 1vw rgba(255,255,255,0.7), inset -1vw -1vw rgba(0,0,0,0.5);\n  border-radius: 2vw;\n  text-shadow: 0.2vw 0.2vw #000;\n}\n.game-mod.mineStrike.mobile-device .modal .container .content-wrap .title {\n  font-size: 2.3vw;\n  margin-bottom: 1.8vw;\n}\n.game-mod.mineStrike.mobile-device .modal .container .content-wrap .close {\n  top: 2vw;\n  right: 2vw;\n  width: 2vw;\n  height: 2vw;\n}\n.game-mod.mineStrike.mobile-device .modal .container .content-wrap .content p:not(last-child) {\n  margin-bottom: 1vw;\n}\n.game-mod.mineStrike .tooltip {\n  position: fixed;\n  background-image: url(\"/games/minestrike/images/button.png\");\n  padding: 1vw 0.8vw;\n  border-radius: 0.4vw;\n  z-index: 999999999;\n  max-width: 25vw;\n  text-align: center;\n  color: #fff;\n  box-shadow: inset 0.1vw 0.1vw rgba(255,255,255,0.7), inset -0.1vw -0.1vw rgba(0,0,0,0.5), 0 0 3vw rgba(0,0,0,0.5);\n  text-shadow: 0.06vw 0.06vw 0 #000;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n}\n.game-mod.mineStrike .tooltip.bottom:after {\n  border-color: transparent transparent #8b8b8b transparent;\n}\n.game-mod.mineStrike .tooltip.left:after {\n  border-color: transparent transparent transparent #8b8b8b;\n}\n.game-mod.mineStrike .tooltip.top:after {\n  border-color: #8b8b8b transparent transparent transparent;\n}\n.game-mod.mineStrike .tooltip.right:after {\n  border-color: transparent #8b8b8b transparent transparent;\n}\n.game-mod.mineStrike .tooltip .description {\n  font-size: 1vw;\n  line-height: 1.2vw;\n}\n.game-mod.mineStrike #pushes .push {\n  background-color: rgba(46,68,97,0.98);\n  background-image: url(\"/games/minestrike/images/button.png\");\n  color: #fff;\n  box-shadow: inset 0.2vw 0.2vw rgba(255,255,255,0.7), inset -0.2vw -0.2vw rgba(0,0,0,0.5);\n  text-shadow: 0.1vw 0.1vw rgba(0,0,0,0.5);\n}\n.game-mod.mineStrike #pushes .push .wrap .push-icon {\n  box-shadow: inset 0.2vw 0.2vw rgba(255,255,255,0.7), inset 0vw -0.2vw rgba(0,0,0,0.5);\n  text-shadow: 0.1vw 0.1vw rgba(0,0,0,0.5);\n}\n.game-mod.mineStrike #pushes .push .wrap .buttons .push-button {\n  background: transparent;\n  transition: all 0.2s;\n}\n.game-mod.mineStrike #pushes .push .wrap .buttons .push-button .button-icon path {\n  fill: #fff !important;\n}\n.game-mod.mineStrike #pushes .push .wrap .buttons .push-button.accept:hover path {\n  fill: #8bc34a !important;\n}\n.game-mod.mineStrike #pushes .push .wrap .buttons .push-button.reject:hover path {\n  fill: #ff5722 !important;\n}\n.game-mod.mineStrike .dom-bar {\n  width: 100%;\n  position: relative;\n  height: 2vw;\n  background-color: #000;\n}\n.game-mod.mineStrike .dom-bar .progress {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 50%;\n  background-color: #f00;\n}\n.game-mod.mineStrike .dom-bar .text {\n  position: relative;\n  line-height: 2vw;\n  text-align: center;\n}\n.game-mod.mineStrike .screens {\n  position: relative;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  justify-content: flex-end;\n}\n.game-mod.mineStrike .screens .screens-container {\n  position: relative;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container.dark {\n  background-color: rgba(0,0,0,0.3);\n}\n.game-mod.mineStrike .screens .screens-container .screen {\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen .screen-window {\n  background: rgba(0,0,0,0.4);\n  padding: 1.5vw;\n  background-position: 0 0;\n  background-repeat: no-repeat;\n  max-height: 100%;\n  border-radius: 0.4vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .block {\n  vertical-align: top;\n  display: block;\n  position: relative;\n  width: 100%;\n  margin-bottom: 1vw;\n  border-radius: 0.4vw;\n  background-color: rgba(0,0,0,0.4);\n  color: #fff;\n  box-shadow: none;\n  padding: 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .block b {\n  color: #ffa600;\n}\n.game-mod.mineStrike .screens .screens-container .screen .block p:not(:last-child) {\n  margin: 0 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .block .title {\n  color: #ffa600;\n  font-size: 1.6vw;\n  margin-bottom: 0.8vw;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen .block .title span {\n  display: block;\n  position: relative;\n}\n.game-mod.mineStrike .screens .screens-container .screen .ad-item.size300x250 {\n  margin: 0 auto;\n  background-color: rgba(0,0,0,0.4);\n  padding: 1vw;\n  width: calc(300px + 2vw);\n  min-height: calc(250px + 2vw);\n  overflow: hidden;\n}\n.game-mod.mineStrike .screens .screens-container .screen .ad-item.size300x250 .disable-adblock {\n  margin: 0 auto;\n  width: 300px;\n  height: 250px;\n  display: block;\n  position: relative;\n}\n.game-mod.mineStrike .screens .screens-container .screen .ad-item.size300x250 .disable-adblock img {\n  width: 100%;\n  height: 100%;\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineStrike .screens .screens-container .screen .ad-item.size300x250 .disable-adblock .text {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  font-size: 14px;\n  line-height: 16px;\n  text-shadow: 1px 1px 0 #000;\n  text-align: center;\n  background: rgba(0,0,0,0.5);\n}\n.game-mod.mineStrike .screens .screens-container .screen .ad-item.size300x250 .disable-adblock .text p {\n  margin: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item {\n  width: initial;\n  height: initial;\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n  margin: 0 auto;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item .disable-adblock {\n  margin: 0 auto;\n  display: block;\n  position: relative;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item .disable-adblock img {\n  width: 100%;\n  height: 100%;\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item .disable-adblock .text {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  font-size: 14px;\n  line-height: 16px;\n  text-shadow: 1px 1px 0 #000;\n  text-align: center;\n  background: rgba(0,0,0,0.5);\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item .disable-adblock .text p {\n  margin: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item.size300x250 .disable-adblock {\n  width: 300px;\n  height: 250px;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item.size300x250 .disable-adblock img {\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item.size728x90 .disable-adblock {\n  width: 728px;\n  height: 90px;\n}\n.game-mod.mineStrike .screens .screens-container .screen .adinplay-item.size728x90 .disable-adblock img {\n  max-width: 728px;\n  max-height: 90px;\n}\n.game-mod.mineStrike .screens .screens-container .screen .pgi-widget-banner-2 {\n  min-height: 15.24vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .offer .buttons {\n  margin: 1vw 0 0;\n  justify-content: center;\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen .offer .skip {\n  background: no-repeat;\n  border: 0;\n  outline: 0;\n  font-family: 'Default', sans-serif;\n  font-size: 0.7vw;\n  color: rgba(255,255,255,0.5);\n  margin: 0 0 0 1vw;\n  cursor: pointer;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players {\n  color: #fff;\n  user-select: none;\n  text-shadow: 1px 1px 0 #000;\n  font-size: 1.4vw;\n  line-height: 1.4vw;\n  font-weight: 900;\n  z-index: 2;\n  margin: 1vw;\n  background: rgba(0,0,0,0.3);\n  padding: 0.8vw 0.8vw 0.4vw;\n  border-radius: 0.5vw;\n  pointer-events: all;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players p {\n  text-align: center;\n  margin: 0 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table thead .player:first-child td {\n  padding: 0.5vh 0.4vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player .number {\n  text-align: right;\n  vertical-align: top;\n  padding-right: 0.2vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player .flag {\n  width: 2vw;\n  height: 1.5vw;\n  vertical-align: top;\n  margin: 0 5px 0 7px;\n  position: relative;\n  text-align: center;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player .flag .flag-icon {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player .flag .flag-name {\n  font-size: 0.3vw;\n  line-height: 0.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player .name {\n  white-space: nowrap;\n  vertical-align: top;\n  padding: 0 0.4vw;\n  max-width: 14vw;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player .score {\n  white-space: nowrap;\n  vertical-align: top;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 90%;\n  padding-left: 0.2vw;\n  padding-right: 0.2vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player .score {\n  text-align: right;\n}\n.game-mod.mineStrike .screens .screens-container .screen .top-players .top-players-table .player.iam {\n  color: #5f5;\n}\n.game-mod.mineStrike .screens .screens-container .screen .metrics {\n  text-align: right;\n  text-shadow: 0.1vw 0.1vw #000;\n  margin: 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .metrics .metric p {\n  display: inline-block;\n}\n.game-mod.mineStrike .screens .screens-container .screen .metrics .metric p.value {\n  margin-left: 0.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .lvl-bar {\n  background-image: url(\"/games/minestrike/images/exp-bar.png\");\n  width: 60vw;\n  height: calc(60vw / 35);\n  background-color: transparent;\n  background-size: 100%;\n  background-position: top;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n  margin: 1vw 0;\n  pointer-events: all;\n}\n.game-mod.mineStrike .screens .screens-container .screen .lvl-bar p {\n  line-height: 2vw;\n  font-size: 2vw;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen .lvl-bar .progress {\n  background: transparent;\n  overflow: hidden;\n}\n.game-mod.mineStrike .screens .screens-container .screen .lvl-bar .progress .progress-inner {\n  width: 60vw;\n  height: calc(60vw / 35);\n  background-color: transparent;\n  background-image: url(\"/games/minestrike/images/exp-bar.png\");\n  background-size: 100%;\n  background-position: bottom;\n}\n.game-mod.mineStrike .screens .screens-container .screen .lvl-bar .lvl-up {\n  position: absolute;\n  left: 50%;\n  top: 0;\n  transform: translate(-50%);\n  color: #f6e94c;\n  opacity: 0;\n  width: 100%;\n  text-align: center;\n}\n.game-mod.mineStrike .screens .screens-container .screen .lvl-bar .lvl-up.show {\n  animation: lvlUpShow infinite 1s;\n}\n@-moz-keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n@-webkit-keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n@-o-keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n@keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n.game-mod.mineStrike .screens .screens-container .screen .leaders-board {\n  position: relative;\n}\n.game-mod.mineStrike .screens .screens-container .screen .leaders-board .title {\n  margin-right: 5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .leaders-board .interval-wrap {\n  position: absolute;\n  top: 0.8vw;\n  right: 0vw;\n  width: 6vw;\n  overflow: hidden;\n}\n.game-mod.mineStrike .screens .screens-container .screen .leaders-board .interval-wrap .interval {\n  background: transparent;\n  border: 0;\n  outline: 0;\n  text-align: right;\n  color: rgba(255,255,255,0.5);\n  font-size: 1.2vw;\n  line-height: 1.5vw;\n  font-family: 'AdLib', sans-serif;\n  width: 10vw;\n  height: 2vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen .leaders-board .players {\n  padding: 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen .leaders-board .players .player {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineStrike .screens .screens-container .screen .leaders-board .players .player:not(:first-child) {\n  margin: 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .row.row-1 {\n  height: 65%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .row.row-2 {\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .col {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  margin: 0 1vw;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .col.center-col {\n  max-width: 25vw;\n  margin: 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .col.right-col {\n  margin-right: 0;\n  width: 100%;\n  max-width: 25vw;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block {\n  max-height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .login-wrap .login-container {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .login-wrap .login-container .nickname-wrap {\n  position: relative;\n  background: rgba(0,0,0,0.6);\n  background-image: url(\"/games/minestrike/images/input.png\");\n  background-size: cover;\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .login-wrap .login-container .nickname-wrap .nickname {\n  margin: 0 auto;\n  display: block;\n  background: transparent;\n  box-shadow: none;\n  height: 100%;\n  padding: 0.8vw 1.2vw;\n  font-size: 1.6vw;\n  line-height: 1.8vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .login-wrap .login-container .nickname-wrap:after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 1vw;\n  background-image: url(\"/games/minestrike/images/input.png\");\n  background-position: right top;\n  background-size: cover;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .selectors {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .selectors .select {\n  display: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .selectors .select.show {\n  display: block;\n  margin-top: 0.8vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .play-button {\n  position: relative;\n  overflow: visible;\n  padding: 0.9vw 1.5vw;\n  margin-left: 0.8vw;\n  font-size: 2vw;\n  line-height: 2.5vw;\n  animation: playPulse 0.8s infinite;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .share {\n  margin: 2vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .share .text {\n  display: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .share .buttons {\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .share .buttons .button {\n  width: 100%;\n  height: 3vw;\n  padding: 0.6vw;\n  overflow: visible;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.login .share .buttons .button:not(:last-child) {\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .block.pgi {\n  padding: 1vw;\n  margin-top: 1vw;\n  width: calc(300px + 2vw);\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .button-icons {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .button-icons .button {\n  width: 4vw;\n  height: 4vw;\n  padding: 0.5vw;\n  margin: 1vw 1vw 1vw 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .button-icons .button svg {\n  width: 100%;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .download-apps-wrap {\n  position: fixed;\n  bottom: 3vw;\n  left: 50%;\n  transform: translate(-50%, 0);\n  background-color: rgba(0,0,0,0.4);\n  padding: 1vw;\n  font-size: 1vw;\n  line-height: 1vw;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .download-apps-wrap .download-apps-text {\n  text-align: center;\n  margin: 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .download-apps-wrap .download-apps {\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .download-apps-wrap .download-app {\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  text-decoration: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .download-apps-wrap .download-app:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .download-apps-wrap .download-app svg {\n  width: 2vw !important;\n  height: 2vw !important;\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .about {\n  max-height: 30vh;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .about .keyboard-keys {\n  margin: 0.5vw 0 0.8vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log {\n  max-height: 72vh;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .another-game img {\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .partners {\n  position: fixed;\n  bottom: 1vw;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  text-align: center;\n  font-size: 1vw;\n  line-height: 1vw;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n  padding: 0.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .partners .partner {\n  text-decoration: none;\n  margin: 0 0.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .not-mojang {\n  position: fixed;\n  bottom: 0.2vw;\n  left: 50%;\n  transform: translate(-50%, 0);\n  width: 100%;\n  text-align: center;\n  font-size: 0.8vw;\n  line-height: 1vw;\n  color: #fff;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log {\n  max-height: 55vh;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change {\n  overflow: hidden;\n  margin: 0 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change:last-child {\n  margin-bottom: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change.new {\n  position: relative;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change.new .label {\n  display: block;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .label {\n  position: absolute;\n  right: -2vw;\n  top: 0.9vw;\n  background: #f00;\n  padding: 0.2vw 0.5vw 0.1vw;\n  transform: rotate(45deg);\n  width: 7vw;\n  text-align: center;\n  font-size: 1vw;\n  line-height: 1vw;\n  text-transform: uppercase;\n  display: none;\n  z-index: 1;\n  opacity: 0.8;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content {\n  padding: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content .header {\n  color: rgba(255,255,255,0.8);\n  margin-bottom: 0.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .text-title {\n  font-family: 'Default', sans-serif;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .info {\n  float: right;\n  color: rgba(255,255,255,0.5);\n  font-size: 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .info .version {\n  display: inline-block;\n  margin-right: 5px;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .info .date {\n  display: inline-block;\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content .text {\n  color: rgba(255,255,255,0.5);\n}\n.game-mod.mineStrike .screens .screens-container .screen.main .change-log .change-log-list .change .content .text p {\n  margin: 0 0 5px;\n}\n@-moz-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .row.row-2 {\n  width: 100%;\n  transform: scale(0.6) translate(0, -40%);\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .row.row-2 .adinplay-item {\n  padding: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .col {\n  margin: 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .col.center-col {\n  max-width: 50vw;\n  margin: 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .col.right-col {\n  margin-right: 0;\n  width: 100%;\n  max-width: 40vw;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container .nickname-wrap {\n  position: relative;\n  background: rgba(0,0,0,0.6);\n  background-image: url(\"/games/minestrike/images/input.png\");\n  background-size: cover;\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container .nickname-wrap .nickname {\n  margin: 0 auto;\n  display: block;\n  background: transparent;\n  box-shadow: none;\n  height: 100%;\n  padding: 1.8vw 2.2vw;\n  font-size: 2.4vw;\n  line-height: 2.8vw;\n  min-width: 26vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container .nickname-wrap:after {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 1vw;\n  background-image: url(\"/games/minestrike/images/input.png\");\n  background-position: right top;\n  background-size: cover;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .selectors {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .selectors .select {\n  display: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .selectors .select.show {\n  display: block;\n  margin-top: 0.8vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .play-button {\n  position: relative;\n  overflow: visible;\n  padding: 1.6vw 2vw;\n  margin-left: 1.8vw;\n  font-size: 3vw;\n  line-height: 3.5vw;\n  animation: playPulse 0.8s infinite;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .share {\n  margin: 2vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .share .text {\n  display: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .share .buttons {\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .share .buttons .button {\n  width: 100%;\n  height: 5vw;\n  padding: 1vw;\n  overflow: visible;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .block.login .share .buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .skins-container .swiper-button-next,\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .skins-container .swiper-button-prev {\n  height: 3.26vw;\n  width: 2.4vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .skins-container .selected-box {\n  width: 10vw;\n  height: 10vw;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 0 4vw #ffa601;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .skins-container .skins-wrap .skin {\n  width: 10vw;\n  height: 10vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .button-icons {\n  position: fixed;\n  top: 0;\n  right: 0;\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .button-icons .button {\n  width: 4vw;\n  height: 4vw;\n  padding: 0.5vw;\n  margin: 1vw 1vw 1vw 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .button-icons .button svg {\n  width: 100%;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .not-mojang {\n  position: fixed;\n  bottom: 0.2vw;\n  left: 50%;\n  transform: translate(-50%, 0);\n  width: 100%;\n  text-align: center;\n  font-size: 0.8vw;\n  line-height: 1vw;\n  color: #fff;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .leaders-board {\n  position: relative;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .leaders-board .title {\n  margin-right: 5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .leaders-board .interval-wrap {\n  position: absolute;\n  top: 1.5vw;\n  right: 0.5vw;\n  width: 7vw;\n  overflow: hidden;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .leaders-board .interval-wrap .interval {\n  background: transparent;\n  border: 0;\n  outline: 0;\n  text-align: right;\n  color: rgba(255,255,255,0.5);\n  font-size: 1.5vw;\n  line-height: 1.5vw;\n  font-family: 'AdLib', sans-serif;\n  width: 10vw;\n  height: 2vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .leaders-board .players {\n  padding: 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .leaders-board .players .player {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .leaders-board .players .player:not(:first-child) {\n  margin: 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .resource-packs-widget {\n  margin: 2vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .resource-packs-widget .buttons {\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .resource-packs-widget .buttons .button {\n  width: 100%;\n  font-size: 2vw;\n  line-height: 2.2vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileMain .resource-packs-widget .buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n@-moz-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineStrike .screens .screens-container .screen.gameOver {\n  margin: auto;\n  display: flex;\n  padding: 0;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.gameOver .container {\n  color: #fff;\n  background: rgba(0,0,0,0.5);\n  padding: 2vw;\n  width: 100vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.gameOver .container .title {\n  font-size: 6vw;\n  line-height: 6.5vw;\n  text-align: center;\n  margin: 2vw 0;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.gameOver .container .title.dead {\n  color: #f55;\n}\n.game-mod.mineStrike .screens .screens-container .screen.gameOver .container .title.kick {\n  color: #55f;\n}\n.game-mod.mineStrike .screens .screens-container .screen.gameOver .container .text {\n  padding: 1vw;\n  border-radius: 0.4vw;\n  color: #fff;\n  display: none;\n  max-width: 50vw;\n  margin: 0 auto;\n  font-size: 3vw;\n  line-height: 3.5vw;\n  text-align: center;\n}\n.game-mod.mineStrike .screens .screens-container .screen.gameOver .container .text.show {\n  display: block;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .row.row-1 {\n  height: 65%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .row.row-2 {\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .col {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  margin: 0 1vw;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .col.center-col {\n  max-width: 25vw;\n  margin: 0 1vw;\n  min-width: 25vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .col.right-col {\n  margin-right: 0;\n  width: 100%;\n  max-width: 25vw;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .score-wrap {\n  margin: 0 0 2vw;\n  text-align: center;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .score-wrap .score-title {\n  font-size: 3vw;\n  line-height: 3.2vw;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .score-wrap .score {\n  font-size: 4vw;\n  line-height: 4.2vw;\n  margin: 1vw 0 0;\n  text-shadow: 0.4vw 0.4vw #000;\n  color: #ffa600;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .main-buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .main-buttons .button {\n  white-space: nowrap;\n  padding: 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .main-buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .main-buttons .respawn {\n  animation: reSpawnPulse 0.8s infinite;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share {\n  margin: 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .text {\n  margin: 0 0 1vw;\n  text-align: center;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.8s;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .text.show {\n  opacity: 1;\n  visibility: visible;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .buttons {\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .buttons .button {\n  width: 100%;\n  height: 3vw;\n  padding: 0.6vw;\n  overflow: visible;\n  position: relative;\n  transition: transform 0.1s;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .buttons .button:not(:last-child) {\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .buttons .button.scale {\n  transform: scale(1.1);\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .buttons .button .particle-container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  white-space: nowrap;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .share .buttons .button .particle-container .content {\n  transform: rotate(90deg);\n  font-size: 2vw;\n  color: #5ff;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .block.pgi {\n  padding: 1vw;\n  margin-top: 1vw;\n  width: calc(300px + 2vw);\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .help.block {\n  max-height: 50vh;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .another-game img {\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.reSpawn .spectate {\n  margin: 1vw auto 0;\n}\n@-moz-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .row.row-2 {\n  width: 100%;\n  transform: scale(0.6) translate(0, -40%);\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .row.row-2 .adinplay-item {\n  padding: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .col {\n  margin: 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .col.center-col {\n  width: 50vw;\n  margin: 0 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .col.right-col {\n  margin-right: 0;\n  width: 36vw;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .score-wrap {\n  margin: 0 0 2vw;\n  text-align: center;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .score-wrap .score-title {\n  font-size: 3vw;\n  line-height: 3.2vw;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .score-wrap .score {\n  font-size: 4vw;\n  line-height: 4.2vw;\n  margin: 1vw 0 0;\n  text-shadow: 0.4vw 0.4vw #000;\n  color: #ffa600;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .main-buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .main-buttons .button {\n  white-space: nowrap;\n  padding: 1vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .main-buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .main-buttons .respawn {\n  animation: reSpawnPulse 0.8s infinite;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share {\n  margin: 1vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .text {\n  margin: 0 0 1vw;\n  text-align: center;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.8s;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .text.show {\n  opacity: 1;\n  visibility: visible;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .buttons {\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .buttons .button {\n  width: 100%;\n  height: 4.5vw;\n  padding: 0.8vw;\n  overflow: visible;\n  position: relative;\n  transition: transform 0.1s;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .buttons .button:not(:last-child) {\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .buttons .button.scale {\n  transform: scale(1.1);\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .buttons .button .particle-container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  white-space: nowrap;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .share .buttons .button .particle-container .content {\n  transform: rotate(90deg);\n  font-size: 2vw;\n  color: #5ff;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .offer .skip {\n  font-size: 1.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .help.block {\n  max-height: 60vh;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .another-game img {\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.mobileReSpawn .spectate {\n  margin: 1vw auto 0;\n}\n@-moz-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .button {\n  pointer-events: all;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .top-left {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .top-left .buttons {\n  position: absolute;\n  top: 1vw;\n  left: 1vw;\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .top-left .buttons .button {\n  margin: 0 0.5vw 0 0;\n  width: 3vw;\n  height: 3vw;\n  padding: 0.6vw 0.8vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .top-left .buttons .button .icon {\n  width: 100%;\n  height: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .top-right {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .bottom {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .joystick-zone {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 30vw;\n  height: 30vw;\n  pointer-events: all;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .joystick {\n  position: absolute;\n  bottom: 6vw;\n  left: 6vw;\n  width: 16vw;\n  height: 16vw;\n  border-radius: 50%;\n  background-color: rgba(0,0,0,0.2);\n  pointer-events: all;\n  display: flex;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .joystick .lever {\n  width: 8vw;\n  height: 8vw;\n  margin: auto;\n  border-radius: 50%;\n  background-color: rgba(0,0,0,0.2);\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .mobile-button {\n  border-radius: 50%;\n  border: 0;\n  outline: 0;\n  position: absolute;\n  width: 10vw;\n  height: 10vw;\n  pointer-events: all;\n  background: rgba(0,0,0,0.3);\n  box-shadow: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .mobile-button.speed-up {\n  right: 12vw;\n  bottom: 3vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .mobile-button.attack {\n  right: 3vw;\n  bottom: 12vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .hotkeys {\n  margin: 0 1vw 1vw 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .hotkeys > div {\n  display: table;\n  margin: 0 0 0 auto;\n}\n.game-mod.mineStrike .screens .screens-container .screen.game .hotkeys > div span {\n  text-shadow: 0.1vw 0.1vw 0 #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect {\n  margin: auto;\n  display: flex;\n  padding: 0.5vw;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  background-color: rgba(0,0,0,0.8);\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect .container {\n  color: #fff;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect .container .dom-logo {\n  width: 15vw;\n  height: 15vw;\n  margin: auto;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect .container .text {\n  background: rgba(0,0,0,0.2);\n  padding: 1vw;\n  border-radius: 0.4vw;\n  color: rgba(255,255,255,0.5);\n  display: none;\n  max-width: 50vw;\n  margin: 0 auto;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect .container .text.show {\n  display: block;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect .container .status {\n  font-size: 3vw;\n  line-height: 3.5vw;\n  text-align: center;\n  margin: 2vw 0;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect .container .in-main-menu {\n  margin: 2vw auto 0;\n  display: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.connect .container .in-main-menu.show {\n  display: block;\n}\n.game-mod.mineStrike .screens .screens-container .screen.settings .block {\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n}\n.game-mod.mineStrike .screens .screens-container .screen.settings .button {\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.settings .button:not(:first-child) {\n  margin: 0.5vw auto 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.graphics table td {\n  padding: 0.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.graphics .block {\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n}\n.game-mod.mineStrike .screens .screens-container .screen.graphics .button {\n  margin: 1vw auto 0;\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.keyBindings table {\n  display: block;\n  columns: 2;\n}\n.game-mod.mineStrike .screens .screens-container .screen.keyBindings table tr {\n  page-break-inside: avoid;\n  break-inside: avoid;\n  vertical-align: top;\n}\n.game-mod.mineStrike .screens .screens-container .screen.keyBindings table td {\n  padding: 0.2vw;\n  vertical-align: middle;\n}\n.game-mod.mineStrike .screens .screens-container .screen.keyBindings .block {\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n}\n.game-mod.mineStrike .screens .screens-container .screen.keyBindings .button {\n  margin: 1vw auto 0;\n  width: 100%;\n}\n.game-mod.mineStrike .screens .screens-container .screen.keyBindings .key-binding {\n  background: rgba(0,0,0,0.5);\n  padding: 0.5vw;\n  border-radius: 0.4vw;\n  font-weight: bold;\n}\n.game-mod.mineStrike .screens .screens-container .screen.startMobile {\n  margin: auto;\n  display: flex;\n  padding: 0.5vw;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n}\n.game-mod.mineStrike .screens .screens-container .screen.startMobile .container {\n  color: #fff;\n}\n.game-mod.mineStrike .screens .screens-container .screen.startMobile .container .enable-full-screen {\n  font-size: 5vmin;\n  line-height: 7vmin;\n  padding: 5vmin 6vmin;\n}\n.game-mod.mineStrike .screens .screens-container .screen.startMobile .container .skip {\n  background: none;\n  color: rgba(0,0,0,0.3);\n  margin: 7vmin auto 0;\n  font-size: 4vmin;\n  line-height: 6vmin;\n  box-shadow: none;\n  text-shadow: none;\n}\n.game-mod.mineStrike .screens .screens-container .screen.spectator {\n  margin: auto;\n  display: flex;\n  padding: 0;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.spectator .top-right {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n.game-mod.mineStrike .screens .screens-container .screen.spectator .player-name {\n  position: absolute;\n  top: 2vw;\n  left: 50vw;\n  transform: translateX(-50%);\n  font-size: 2vw;\n  text-shadow: 0.2vw 0.2vw #000;\n}\n.game-mod.mineStrike .screens .screens-container .screen.spectator .previous,\n.game-mod.mineStrike .screens .screens-container .screen.spectator .next {\n  position: absolute;\n  top: 50vh;\n  transform: translateY(-50%);\n  font-size: 4vw;\n  line-height: 4.5vw;\n  padding: 1vw 2.5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.spectator .previous {\n  left: 5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.spectator .next {\n  right: 5vw;\n}\n.game-mod.mineStrike .screens .screens-container .screen.spectator .in-respawn-screen {\n  position: absolute;\n  bottom: 2vw;\n  left: 50vw;\n  transform: translateX(-50%);\n  font-size: 2vw;\n  line-height: 2.5vw;\n}\n.game-mod.mineStrike.mobile-device .screens .screens-container .screen .block {\n  margin-bottom: 2vw;\n  border-radius: 0.8vw;\n  padding: 2vw;\n}\n.game-mod.mineStrike.mobile-device .screens .screens-container .screen .block .title {\n  color: #ffa600;\n  font-size: 2.6vw;\n  margin-bottom: 1.8vw;\n  text-shadow: 0.2vw 0.2vw 0 #000;\n}\n.game-mod.mineStrike .keyboard-keys {\n  white-space: nowrap;\n  margin: 0 0 0.3vw;\n}\n.game-mod.mineStrike .keyboard-keys span {\n  margin: 0.8vw 0 0 0.5vw;\n  vertical-align: top;\n  display: inline-block;\n}\n.game-mod.mineStrike .keyboard-keys span.left {\n  margin: 0.4vw 0.5vw 0 0;\n}\n.game-mod.mineStrike .keyboard-keys .key {\n  background: #383838;\n  position: relative;\n  padding: 0.8vw 1vw 0.5vw 1vw;\n  border-radius: 0.2vw;\n  color: #fff;\n  font-family: 'Default', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: bold;\n  text-transform: uppercase;\n  vertical-align: middle;\n  display: inline-block;\n  margin: 0 0.2vw;\n  box-shadow: 0 0.3vw 0 #000;\n}\n.game-mod.mineStrike .keyboard-keys .key:after {\n  content: '';\n  position: absolute;\n  border: 0.1vw solid #8c8c8c;\n  left: 0.4vw;\n  top: 0.3vw;\n  right: 0.4vw;\n  bottom: 0.4vw;\n  border-radius: 0.2vw;\n}\n.game-mod.mineStrike .keyboard-keys .key.white {\n  background: #d9dbdb;\n  box-shadow: 0 0.3vw 0 #a0a0a0;\n  color: #000;\n}\n.game-mod.mineStrike .keyboard-keys .key.white:after {\n  border: 0.1vw solid #b1b1b1;\n}\n.game-mod.mineStrike .mouse-button-wrap span {\n  margin: 1.3vw 0 0 0;\n  vertical-align: top;\n  display: inline-block;\n}\n.game-mod.mineStrike .mouse-button-wrap .mouse-button {\n  width: 3vw;\n  height: 3vw;\n  background-size: contain;\n  background-repeat: no-repeat;\n  font-weight: bold;\n  display: inline-block;\n}\n.game-mod.mineStrike .mouse-button-wrap .mouse-button.white {\n  filter: invert(1);\n  color: #000;\n}\n.game-mod.mineStrike .mouse-button-wrap .mouse-button.mouse-left {\n  background-image: url(\"/games/minestrike/images/icons/mouse-button-left.svg\");\n}\n.game-mod.mineStrike .mouse-button-wrap .mouse-button.mouse-right {\n  background-image: url(\"/games/minestrike/images/icons/mouse-button-left.svg\");\n  transform: scaleX(-1);\n}\n.game-mod.mineStrike .mouse-button-wrap .mouse-button.mouse-move {\n  background-image: url(\"/games/minestrike/images/icons/mouse-move.svg\");\n}\n.game-mod.mineStrike .scroll {\n  overflow: auto;\n  padding-right: 0.5vw;\n  max-height: 90vh;\n  touch-action: initial;\n}\n.game-mod.mineStrike .scroll * {\n  touch-action: initial;\n}\n.game-mod.mineStrike .scroll::-webkit-scrollbar {\n  width: 0.6vw;\n}\n.game-mod.mineStrike .scroll::-webkit-scrollbar-track {\n  background: rgba(255,255,255,0);\n}\n.game-mod.mineStrike .scroll::-webkit-scrollbar-thumb {\n  background-color: #8b8b8b;\n  outline: 0;\n  border-radius: 1vw;\n}\n.game-mod.mineStrike .scroll.scroll-slim::-webkit-scrollbar {\n  width: 0.2vw;\n}\n.game-mod.mineStrike .scroll.scroll-hide::-webkit-scrollbar {\n  width: 0;\n}\n", ""]);
}, function (e, t, n) {
  var i = {"./en.json": 41, "./ru.json": 42};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 188;
}, function (e, t, n) {
  var i = {"./en.json": 190, "./ru.json": 191};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 189;
}, function (e) {
  e.exports = JSON.parse('{"title":"What\'s new!","new":"New","log":[{"version":0.015,"text":["<div class=\'header\'>","<b class=\'text-title\'>Armor added!</b>","<div class=\'info\'><div class=\'version\'>v0.015</div><div class=\'date\'>08.03.20</div></div></div>","<div class=\'text\'>","<p>At the request of the players, I added an armor: iron, gold, and diamond. The armor gives protection for 1 hit and disappears after the strike.</p>","<p>Weapon no longer deals damage when moving in the opposite direction.</p>","<p>Fixed small bugs.</p>","</div>"]},{"version":0.013,"text":["<div class=\'header\'>","<b class=\'text-title\'>Enhancements</b>","<div class=\'info\'><div class=\'version\'>v0.013</div><div class=\'date\'>07.03.20</div></div></div>","<div class=\'text\'>","<p>Fixed recording and playback of replays.</p>","<p>Improved attack mechanics.</p>","<p>Fixed small bugs.</p>","</div>"]},{"version":0.007,"text":["<div class=\'header\'>","<b class=\'text-title\'>Fixed bugs</b>","<div class=\'info\'><div class=\'version\'>v0.007</div><div class=\'date\'>22.02.20</div></div></div>","<div class=\'text\'>","<p>Fixed attack animation.</p>","<p>Fixed small bugs.</p>","</div>"]},{"version":0.004,"text":["<div class=\'header\'>","<b class=\'text-title\'>Fixed bugs</b>","<div class=\'info\'><div class=\'version\'>v0.004</div><div class=\'date\'>21.02.20</div></div></div>","<div class=\'text\'>","<p>Fixed a reset of nickname after respawn.</p>","<p>Fixed small bugs.</p>","</div>"]},{"version":0.001,"text":["<div class=\'header\'>","<b class=\'text-title\'>Beta test</b>","<div class=\'info\'><div class=\'version\'>v0.001</div><div class=\'date\'>19.02.20</div></div></div>","<div class=\'text\'><p>The game in open testing phase.</p></div>"]}]}');
}, function (e) {
  e.exports = JSON.parse('{"title":"Что нового?","new":"Новое","log":[{"version":0.015,"text":["<div class=\'header\'>","<b class=\'text-title\'>Добавлена броня!</b>","<div class=\'info\'><div class=\'version\'>v0.015</div><div class=\'date\'>08.03.20</div></div></div>","<div class=\'text\'>","<p>По просьбе игроков, я добавил броню: железную, золотую и алмазную. Броня дает защиту на 1 удар и пропадает после удара.</p>","<p>Оружее больше не наносит урон когда двигается в обратную сторону.</p>","<p>Исправлены мелкие ошибки.</p>","</div>"]},{"version":0.013,"text":["<div class=\'header\'>","<b class=\'text-title\'>Улучшения</b>","<div class=\'info\'><div class=\'version\'>v0.013</div><div class=\'date\'>07.03.20</div></div></div>","<div class=\'text\'>","<p>Исправлена запись и воспроизведение реплеев.</p>","<p>Улучшена механика атаки.</p>","<p>Исправлены мелкие ошибки.</p>","</div>"]},{"version":0.007,"text":["<div class=\'header\'>","<b class=\'text-title\'>Исправление ошибок</b>","<div class=\'info\'><div class=\'version\'>v0.007</div><div class=\'date\'>22.02.20</div></div></div>","<div class=\'text\'>","<p>Исправлена анимация атаки.</p>","<p>Исправлены мелкие ошибки.</p>","</div>"]},{"version":0.004,"text":["<div class=\'header\'>","<b class=\'text-title\'>Исправление ошибок</b>","<div class=\'info\'><div class=\'version\'>v0.004</div><div class=\'date\'>21.02.20</div></div></div>","<div class=\'text\'>","<p>Исправлено сохранение имени при респавне.</p>","<p>Исправлены мелкие ошибки.</p>","</div>"]},{"version":0.001,"text":["<div class=\'header\'>","<b class=\'text-title\'>Тестирование</b>","<div class=\'info\'><div class=\'version\'>v0.001</div><div class=\'date\'>19.02.20</div></div></div>","<div class=\'text\'><p>Игра в стадии открытого тестирования.</p></div>"]}]}');
}, function (e, t, n) {
  var i = {"./en.json": 193, "./ru.json": 194};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 192;
}, function (e) {
  e.exports = JSON.parse('{"share":"Share","tw":{"particle":"Click me!"},"fb":{"particle":"And me!"},"vk":{"particle":"And me!!","accessModalTitle":"Share score","giveAccessAndShare":"Give access and share"}}');
}, function (e) {
  e.exports = JSON.parse('{"share":"Поделиться","tw":{"particle":"Нажми меня!"},"fb":{"particle":"И меня!"},"vk":{"particle":"И меня!!","accessModalTitle":"Share score","giveAccessAndShare":"Give access and share"}}');
}, function (e, t, n) {
  var i = {"./en.json": 196, "./ru.json": 197};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 195;
}, function (e) {
  e.exports = JSON.parse('{"reSpawn":"Respawn","inMainMenu":"In menu","spectate":"Spectate","disableAdBlock":"Disable AdBlock and get <b>$1,000!</b>","help":["<p>Mine resources, buy in the store and put generators for energy production, put selling blocks to sell resources and energy for money. Buy improved tools, armor, new generators, and automatic miners. Protect your buildings with walls and Tesla coils.</p>","<p>Each type of ore has its own miner for automatic extraction of resources.</p>","<p>Each generator consumes something (or not) and produces energy.</p>","<p>Place the “Small seller” or “Big seller” block to sell resources for money.</p>","<p>Protect your buildings with walls, Tesla coils and put a bed that will revive you after death.</p>","<p>MineEnergy will let you <b>have fun</b> and not let you get bored!</p>"],"scoreTitle":"Your money","shareText":"Share your incredible score","shareOffer":"Can you beat my record for $${points}?\\nTry to do it on MineEnergy.fun!","anotherGameTitle":"Play in the game!"}');
}, function (e) {
  e.exports = JSON.parse('{"reSpawn":"Возродиться","inMainMenu":"В меню","spectate":"Наблюдать","disableAdBlock":"Выключите AdBlock и поулчите <b>$1,000!</b>","help":["<p>Добывайте ресурсы, покупайте в магазине и ставьте генераторы для добычи энергии, ставьте продающие блоки чтобы продавать ресурсы и энергию за деньги. Покупайте улучшенные инструменты, броню, новые генераторы и автоматические буровые установки. Защищайте ваши постройки стенами и катушками Теслы.</p>","<p>Для каждого вида руды существует своя буровая установка для автоматической добычи ресурсов.</p>","<p>Каждый генератор что-то потребляет (или нет) и производит энергию.</p>","<p>Ставьте блок “Маленький продавец” или “Большой продавец” чтобы продавать ресурсы за деньги.</p>","<p>Защищайте ваши сооружения стенами, катушками Теслы и ставьте кровать, которая возродит вас после смерти.</p>","<p>MineEnergy позволит вам <b>весело</b> провести время и не даст заскучать!</p>"],"scoreTitle":"Ваши деньги","shareText":"Поделись своим супер счётом","shareOffer":"Слабо побить мой рекорд $${points}?\\nПопробуй сделать это на MineEnergy.fun!","anotherGameTitle":"Сыграйте в игру!"}');
}, function (e, t, n) {
  var i = {"./en.json": 199, "./ru.json": 200};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 198;
}, function (e) {
  e.exports = JSON.parse('{"inMainScreen":"In Main screen","status":"Status","statuses":{"expectation":"Waiting","retryingAfter":"Retrying after","connectionAttempt":"Connection attempt","connectionError":"Connection error","receivingServerInfo":"Receiving list of servers","errorReceivingServerInfo":"Error receiving list of servers","clientWillAutoConnectToServer":"Reloading","connecting":"Connecting","login":"Login","reLogin":"Spawn"},"shortSeconds":"sec.","codes":{"2":{"title":"Session replaced","text":"The session was running on another device"},"4":{"title":"Server stopped"},"5":{"title":"Room is destroyed"},"6":{"title":"Room not active"},"7":{"title":"Server is closed"},"8":{"title":"Authorisation Error"},"9":{"title":"Server is full"},"10":{"title":"Keep alive timeout"},"11":{"title":"Invalid state"},"12":{"title":"Respawn not allowed"},"13":{"title":"Server update","text":["<p>Wooow! Server update!</p>","<p>It takes 30-60 seconds.</p>","<p>If the game isn\'t connecting to server for more than two minutes, then restart game and try connect.</p>"]},"15":{"title":"Server reboot","text":["<p>Server is rebooting.</p>","<p>It takes 30-60 seconds.</p>","<p>If the game isn\'t connecting to server for more than two minutes, then restart game and try connect.</p>"]},"default":{"title":"Connection lost","text":["<p>Perhaps you have problems with the Internet or server reboots.</p>"]}}}');
}, function (e) {
  e.exports = JSON.parse('{"inMainScreen":"На главный экран","status":"Статус","statuses":{"expectation":"Ожидание","retryingAfter":"Повторная попытка через","connectionAttempt":"Попытка подключения","connectionError":"Ошибка подключения","receivingServerInfo":"Получение списка серверов","errorReceivingServerInfo":"Ошибка получения списка серверов","clientWillAutoConnectToServer":"Перезагрузка","connecting":"Подключение","login":"Авторизация","reLogin":"Появление"},"shortSeconds":"сек.","codes":{"2":{"title":"Сессия заменена","text":"Сессия была запущена на другом устройстве"},"4":{"title":"Сервер остановлен"},"5":{"title":"Комната разрушена"},"6":{"title":"Комната не активна"},"7":{"title":"Сервер закрыт"},"8":{"title":"Ошибка авторизации"},"9":{"title":"Сервер полон"},"10":{"title":"Keep alive timeout"},"11":{"title":"Server error"},"12":{"title":"Респавн запрещен"},"13":{"title":"Обновление сервера","text":["<p>Воооу! Обновление сервера!</p>","<p>Это займет 30-60 секунд.</p>","<p>Если игра не подключается к серверу больше двух минут, то перезагрузите игру.</p>"]},"15":{"title":"Перезагрузка сервера","text":["<p>Сервер перезагружается.</p>","<p>Это займет 30-60 секунд.</p>","<p>Если игра не подключается к серверу больше двух минут, то перезагрузите игру.</p>"]},"default":{"title":"Соединение потеряно","text":["<p>Возможно, у Вас проблемы с интернетом или сервер перезагружается.</p>"]}}}');
}, function (e, t, n) {
  var i = {"./en.json": 202, "./ru.json": 203};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 201;
}, function (e) {
  e.exports = JSON.parse('{"dead":"Dead","killedYou":"killed you","kickedOut":"Kicked out","reason":"Reason"}');
}, function (e) {
  e.exports = JSON.parse('{"dead":"Мертв","killedYou":"убил вас","kickedOut":"Выпнут","reason":"Причина"}');
}, function (e, t, n) {
  var i = {"./en.json": 205, "./ru.json": 206};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 204;
}, function (e) {
  e.exports = JSON.parse('{"interval":{"TODAY":"Today","THREE_DAYS":"3 days","WEEK":"Week"}}');
}, function (e) {
  e.exports = JSON.parse('{"interval":{"TODAY":"Сегодня","THREE_DAYS":"3 дня","WEEK":"Неделя"}}');
}, function (e, t, n) {
  var i = {"./en.json": 208, "./ru.json": 209};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 207;
}, function (e) {
  e.exports = JSON.parse('{"nickname":"Nick Name","play":"Play","connecting":"Connecting","login":"Login","reLogin":"Spawn","wait":"Wait","enterNickname":"Enter your nickname","server":"Server","gameMode":"Game mode","signIn":"Sign in","signOut":"Sign out","disableAdBlock":"Disable AdBlock and get <b>$1,000!</b>","support":"Support","shareButtonsOffer":"Play with me in MineEnergy.fun!","partners":{"playgamesio.net":"Play Games IO","iogames.space":"MoreIOGame","crazygames.com":"CrazyGames","vseigru.net":"All games","igroutka.ru":"Igroutka","titotu.io":"Titotu","gamasexual.com":"Free games","gamasexual.ru":"Free games","kevin.games":"Kevin games","multoigri.ru":"Multoigri","brightestgames.com":"BrightestGames","vitalitygames.com":"VitalityGames","gamepix.com":"GAMEPIX","play-games.com":"PLAY-GAMES"},"notMojang":"NOT AN OFFICIAL MINECRAFT PRODUCT. NOT APPROVED BY OR ASSOCIATED WITH MOJANG.","downloadApps":{"betterPerformance":"Standalone clients have fewer lags and better game performance","macos":"Download for Mac OS","linux":"Download for Linux","windows":"Download for Windows"},"about":["<div class=\'title\'>Controls</div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-left white\'></div><span> - Hit</span></div>","<div class=\'keyboard-keys\'><div class=\'key white\'>W</div><div class=\'key white\'>A</div><div class=\'key white\'>S</div><div class=\'key white\'>D</div><span> - Move</span></div>","<div class=\'keyboard-keys\'><div class=\'key white\'>Left Shift</div><span> - Speed Up</span></div>","<div class=\'keyboard-keys\'><div class=\'key white\'>E</div><span> - Open shop</span></div>","<br><br>","<div class=\'title\'><span>About game</span></div>","<div class=\'content-padding\'>","<p><b>MineEnergy.fun</b> is a free Minecraft style game.</p>","<p>Mine resources, buy in the store and put generators for energy production, put selling blocks to sell resources and energy for money. Buy improved tools, armor, new generators, and automatic miners. Protect your buildings with walls and Tesla coils.</p>","<p>Get resources from ores:</p>","<ul>","<li>coal ore</li>","<li>iron ore</li>","<li>golden ore</li>","<li>diamond ore</li>","<li>uranium ore</li>","</ul>","<p>Each type of ore has its own miner for automatic extraction of resources.</p>","<p>Put the generators:</p>","<ul>","<li>manual generator - generates energy from interacting with it. Not effective, but suitable when there are no other options.</li>","<li>solar generator - generates energy from sunlight.</li>","<li>wind generator - generates energy from wind.</li>","<li>coal generator - generates energy from coal.</li>","<li>geothermal generator - generates energy from lava.</li>","<li>water turbine - generates energy from water.</li>","<li>водяная турбина - генерирует энергию из воды.</li>","<li>nuclear generator - generates energy from uranium.</li>","</ul>","<p>Each generator consumes something (or not) and produces energy.</p>","<p>Place the “Small seller” or “Big seller” block to sell resources for money.</p>","<p>For money you can buy an improved tools:</p>","<ul>","<li>wooden pickaxe - the easiest pickaxe. It produces a few resources, but the cheapest.</li>","<li>iron pickaxe - improved pickaxe. Mining more resources. With it, you can mine gold.</li>","<li>golden pickaxe - improved pickaxe. Mining more resources. With it, you can mine diamonds.</li>","<li>diamond pickaxe - the best pick that does not require energy. Mining more resources. With it, you can mine uranium.</li>","<li>drill - dimple electric drill. It extracts more resources, but consumes energy during operation.</li>","<li>diamond drill - the best tool for resource extraction. It extracts a huge amount of resources per hit, but also consumes more energy.</li>","<li>wrench - removes your blocks. Hit your block with a wrench to remove the block.</li>","</ul>","<p>You can buy armor:</p>","<ul>","<li>leather armor - hard to call it armor, but it\'s better than nothing.</li>","<li>iron armor - absorbs part of the damage.</li>","<li>golden armor - better than iron armor, it absorbs more damage. And players like to show off at her.</li>","<li>diamond armor - the most durable armor that does not require energy. A great choice if you do not have generators, but have a lot of money o_O</li>","<li>nano armor - carbon fiber armor. It protects better than a diamond armor but consumes energy while absorbing damage.</li>","<li>quantum armor - the best armor! Effectively absorbs most of the damage, but consumes more energy. Alas, it does not protect against coronavirus.</li>","</ul>","<p>Protect your buildings with walls, Tesla coils and put a bed that will revive you after death.</p>","<p>MineEnergy will let you have fun and not let you get bored!</p>","<p>This game uses nice and fast hosting to provide good user experience and game play. You can learn more about the software that we use by writing in discord.</p>","<div class=\'title\'>Colors in chat</div>","<p><b>Example:</b></p>","<p>[RED]Mine [GOLD]Energy - <font style=\'color: #FF5555\'>Mine</font> <font style=\'color: #FFAA00\'>Energy</font></p>","<p><b>Colors:</b></p>","<p><font style=\'color: #555555\'>[BLACK]</font>, <font style=\'color: #0000AA\'>[DARK_BLUE]</font>, <font style=\'color: #00AA00\'>[DARK_GREEN]</font>, <font style=\'color: #00AAAA\'>[DARK_AQUA]</font>, <font style=\'color: #AA0000\'>[DARK_RED]</font>, <font style=\'color: #AA00AA\'>[DARK_PURPLE]</font>, <font style=\'color: #FFAA00\'>[GOLD]</font>, <font style=\'color: #AAAAAA\'>[GRAY]</font>, <font style=\'color: #555555\'>[DARK_GRAY]</font>, <font style=\'color: #5555FF\'>[BLUE]</font>, <font style=\'color: #55FF55\'>[GREEN]</font>, <font style=\'color: #55FFFF\'>[AQUA]</font>, <font style=\'color: #FF5555\'>[RED]</font>, <font style=\'color: #FF55FF\'>[PURPLE]</font>, <font style=\'color: #FFFF55\'>[YELLOW]</font>, <font style=\'color: #FFFFFF\'>[WHITE]</font>, <b>[BOLD]</b>, <u>[UNDERLINE]</u>, <s>[STRIKEOUT]</s>, <i>[ITALIC]</i>, [RESET] - reset style</p>","</div>"],"anotherGameTitle":"Play in the game!","leadersBoard":"Leaders Board 💪"}');
}, function (e) {
  e.exports = JSON.parse('{"nickname":"Ник","play":"Играть","connecting":"Подключение","login":"Появление","reLogin":"Появление","wait":"Ждите","enterNickname":"Введите ваш ник","server":"Сервер","gameMode":"Режим игры","signIn":"Войти","signOut":"Выйти","disableAdBlock":"Выключите AdBlock и поулчите <b>$1,000!</b>","support":"Поддержка","shareButtonsOffer":"Играй со мной в MineEnergy.fun!","partners":{"playgamesio.net":"Играть в IO Игры","iogames.space":"Больше IO игр","crazygames.com":"Сумасшедшие игры","vseigru.net":"Все игры","igroutka.ru":"Игроутка","titotu.io":"Titotu.io","gamasexual.com":"Бесплатные игры","gamasexual.ru":"Бесплатные игры","kevin.games":"Kevin games","multoigri.ru":"Multoigri","brightestgames.com":"BrightestGames","vitalitygames.com":"VitalityGames","gamepix.com":"GAMEPIX","play-games.com":"PLAY-GAMES"},"notMojang":"НЕ ОФИЦИАЛЬНЫЙ ПРОДУКТ MINECRAFT. НЕ УТВЕРЖДЕНО И НЕ СВЯЗАННО С МОДЖАНГОМ.","about":["<div class=\'title\'>Управление</div>","<div class=\'mouse-button-wrap\'><div class=\'mouse-button mouse-left white\'></div><span> - Удар</span></div>","<div class=\'keyboard-keys\'><div class=\'key white\'>W</div><div class=\'key white\'>A</div><div class=\'key white\'>S</div><div class=\'key white\'>D</div><span> - Двигаться</span></div>","<div class=\'keyboard-keys\'><div class=\'key white\'>левый Shift</div><span> - Ускориться</span></div>","<div class=\'keyboard-keys\'><div class=\'key white\'>E</div><span> - Открыть магазин</span></div>","<br><br>","<div class=\'title\'><span>Об игре</span></div>","<div class=\'content-padding\'>","<p><b>MineEnergy.fun</b> - бесплатная игра в стиле Майнкрафт.</p>","<p>Добывайте ресурсы, покупайте в магазине и ставьте генераторы для добычи энергии, ставьте продающие блоки чтобы продавать ресурсы и энергию за деньги. Покупайте улучшенные инструменты, броню, новые генераторы и автоматические буровые установки. Защищайте ваши постройки стенами и катушками Теслы.</p>","<p>Добывайте ресурсы из руд:</p>","<ul>","<li>угольная</li>","<li>железная</li>","<li>золотая</li>","<li>алмазная</li>","<li>урановая</li>","</ul>","<p>Для каждого вида руды существует своя буровая установка для автоматической добычи ресурсов.</p>","<p>Ставьте генераторы:</p>","<ul>","<li>ручной генератор - генерирует энергию от взаимодействия с ним. Не эффективен, но подходит когда нет других вариантов.</li>","<li>солнечная панель - генерирует энергию от солнечных лучей.</li>","<li>ветрогенератор - генерирует энергию от ветра.</li>","<li>угольный генератор - генерирует энергию из угля.</li>","<li>геотермальный генератор - генерирует энергию из лавы.</li>","<li>водяная турбина - генерирует энергию из воды.</li>","<li>ядерный генератор - генерирует энергию из урана.</li>","</ul>","<p>Каждый генератор что-то потребляет (или нет) и производит энергию.</p>","<p>Ставьте блок “Маленький продавец” или “Большой продавец” чтобы продавать ресурсы за деньги.</p>","<p>За деньги вы сможете купить улучшенный инструменты:</p>","<ul>","<li>деревянная кирка - самая простая кирка. Добывает мало ресурсов, но зато самая дешевая.</li>","<li>железная кирка - улучшенная кирка. Добывает больше ресурсов. При помощи нее можно добывать золото.</li>","<li>золотая кирка - улучшенная кирка. Добывает больше ресурсов. При помощи нее можно добывать алмазы.</li>","<li>алмазная кирка - лучшая кирка не требующая энергии. Добывает больше ресурсов. при помощи нее можно добывать уран.</li>","<li>бур - простой электрический бур. Добывает больше ресурсов, но во время работы потребляет энергию.</li>","<li>алмазный бур - лучший инструмент для добычи ресурсов. Добывает огромное количество ресурсов за удар, но и энергии потребляет больше.</li>","<li>гаечный ключ - убирает ваши блоки. Ударьте ключом по своему блоку для удаления блока.</li>","</ul>","<p>Сможете купить броню:</p>","<ul>","<li>кожаная броня - броней назвать сложно, но это лучше чем ничего.</li>","<li>железная броня - полноценная броня, поглощает часть урона.</li>","<li>золотая броня - лучше чем железная, поглощает больше урона. А еще в ней любят повыпендриваться.</li>","<li>алмазная броня - самая прочная броня не требующая энергии. Отличный выбор если у вас нет генераторов, но откуда-то есть куча денег о_О</li>","<li>нано броня - броня из углеволокна. Защищает лучше алмазной, но потребляет энергию во время поглощения урона.</li>","<li>квантовая броня - лучшая броня! Эффективно поглощает большую часть урона, но потребляет больше энергии. Увы, не защищает от коронавируса.</li>","</ul>","<p>Защищайте ваши сооружения стенами, катушками Теслы и ставьте кровать, которая возродит вас после смерти.</p>","<div class=\'title\'>Цвета в чате</div>","<p><b>Пример:</b></p>","<p>[RED]Mine [GOLD]Energy - <font style=\'color: #FF5555\'>Mine</font> <font style=\'color: #FFAA00\'>Energy</font></p>","<p><b>Цвета:</b></p>","<p><font style=\'color: #555555\'>[BLACK]</font>, <font style=\'color: #0000AA\'>[DARK_BLUE]</font>, <font style=\'color: #00AA00\'>[DARK_GREEN]</font>, <font style=\'color: #00AAAA\'>[DARK_AQUA]</font>, <font style=\'color: #AA0000\'>[DARK_RED]</font>, <font style=\'color: #AA00AA\'>[DARK_PURPLE]</font>, <font style=\'color: #FFAA00\'>[GOLD]</font>, <font style=\'color: #AAAAAA\'>[GRAY]</font>, <font style=\'color: #555555\'>[DARK_GRAY]</font>, <font style=\'color: #5555FF\'>[BLUE]</font>, <font style=\'color: #55FF55\'>[GREEN]</font>, <font style=\'color: #55FFFF\'>[AQUA]</font>, <font style=\'color: #FF5555\'>[RED]</font>, <font style=\'color: #FF55FF\'>[PURPLE]</font>, <font style=\'color: #FFFF55\'>[YELLOW]</font>, <font style=\'color: #FFFFFF\'>[WHITE]</font>, <b>[BOLD]</b>, <u>[UNDERLINE]</u>, <s>[STRIKEOUT]</s>, <i>[ITALIC]</i>, [RESET] - сбросить стиль</p>","</div>"],"anotherGameTitle":"Сыграйте в игру!","leadersBoard":"Лучшие игроки 💪"}');
}, function (e, t, n) {
  e.exports = function () {
    return new Worker(n.p + "e8580ce0036e61810ba6.worker.js");
  };
}, function (e, t, n) {
  (e.exports = n(1)(false)).push([e.i, '.game-mod.mineEnergy {\n  font-family: \'Default\', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: 400;\n}\n.game-mod.mineEnergy.mobile-device {\n  font-size: 2.2vw;\n  line-height: 2.4vw;\n}\n.game-mod.mineEnergy b {\n  font-family: \'Default\', sans-serif;\n}\n.game-mod.mineEnergy label {\n  display: block;\n}\n.game-mod.mineEnergy object {\n  display: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.game-mod.mineEnergy .clear {\n  clear: both;\n}\n.game-mod.mineEnergy svg.icon path.first-tone {\n  opacity: 0.5;\n}\n.game-mod.mineEnergy #chat #chat-input {\n  font: 500 0.9vw/1.2vw \'Default\', sans-serif, sans-serif;\n}\n.game-mod.mineEnergy #chat .hint {\n  font: 500 0.9vw/1.2vw \'Default\', sans-serif, sans-serif;\n}\n@font-face {\n  font-family: \'Default\';\n  src: url("/games/mineenergy/fonts/minecraft.ttf") format(\'truetype\');\n}\n.game-mod.mineEnergy a {\n  color: inherit;\n  text-decoration: underline;\n  cursor: pointer;\n}\n.game-mod.mineEnergy a:visited {\n  color: inherit;\n  text-decoration: underline;\n}\n.game-mod.mineEnergy select.select {\n  width: 100%;\n  padding: 0.4vw 20px 0.4vw 0.6vw;\n  outline: 0;\n  font: 1vw \'Open Sans\', sans-serif;\n  color: #fff;\n  font-family: \'Default\', sans-serif;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  border: 0.12vw solid #e0e0e0;\n  background: url("/games/mineenergy/images/select-arrow.png") calc(100% - 10px)/12px no-repeat #989898;\n}\n.game-mod.mineEnergy select.select::-ms-expand {\n  display: none;\n}\n@media screen and (min-width: 0 0) {\n  .game-mod.mineEnergy select.select {\n    background: none 9;\n    padding: 5px 9;\n  }\n}\n.game-mod.mineEnergy input.input,\n.game-mod.mineEnergy textarea.input {\n  width: 100%;\n  padding: 0.8vw;\n  font-family: \'Default\', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: 400;\n  color: #fff;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n  outline: 0;\n  cursor: text;\n  position: relative;\n  transition: all 0.2s;\n  display: block;\n  background: #8b8b8b;\n  border: 0;\n  box-shadow: inset -0.2vw -0.2vw #c6c6c6, inset 0.2vw 0.2vw rgba(0,0,0,0.7);\n}\n.game-mod.mineEnergy input.input.slim,\n.game-mod.mineEnergy textarea.input.slim {\n  padding: 0.6vw 0.6vw;\n}\n.game-mod.mineEnergy input.input::-webkit-input-placeholder,\n.game-mod.mineEnergy textarea.input::-webkit-input-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineEnergy input.input::-moz-placeholder,\n.game-mod.mineEnergy textarea.input::-moz-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineEnergy input.input:-moz-placeholder,\n.game-mod.mineEnergy textarea.input:-moz-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineEnergy input.input:-ms-input-placeholder,\n.game-mod.mineEnergy textarea.input:-ms-input-placeholder {\n  color: rgba(255,255,255,0.7);\n}\n.game-mod.mineEnergy.mobile-device input.input,\n.game-mod.mineEnergy.mobile-device textarea.input {\n  padding: 1.8vw;\n  font-size: 2.2vw;\n  line-height: 2.4vw;\n  text-shadow: 0.2vw 0.2vw 0 #000;\n  box-shadow: inset -0.4vw -0.4vw #c6c6c6, inset 0.4vw 0.4vw rgba(0,0,0,0.7);\n}\n.game-mod.mineEnergy input.file {\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n}\n.game-mod.mineEnergy input.file + label {\n  display: inline-block;\n  cursor: pointer;\n}\n.game-mod.mineEnergy input.checkbox {\n  vertical-align: top;\n  width: 2vw;\n  height: 2vw;\n  z-index: 1;\n  position: absolute;\n  opacity: 0;\n}\n.game-mod.mineEnergy input.checkbox + label {\n  cursor: pointer;\n  display: inline-block;\n  line-height: 2vw;\n}\n.game-mod.mineEnergy input.checkbox:not(checked) + label {\n  position: relative;\n  padding: 0 0 0 2.5vw;\n  vertical-align: top;\n}\n.game-mod.mineEnergy input.checkbox:not(checked) + label:before {\n  content: \'\';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 0.2vw;\n  box-shadow: inset -0.2vw -0.2vw #c6c6c6, inset 0.2vw 0.2vw rgba(0,0,0,0.7);\n  background: #8b8b8b;\n  transition: all 0.2s;\n}\n.game-mod.mineEnergy input.checkbox:not(checked) + label:after {\n  content: \'\';\n  position: absolute;\n  top: 0.51vw;\n  left: 0.51vw;\n  width: 1vw;\n  height: 1vw;\n  border-radius: 0.2vw;\n  transition: all 0.2s;\n}\n.game-mod.mineEnergy input.checkbox:checked + label:after {\n  background: #adabab;\n}\n.game-mod.mineEnergy input.radio {\n  vertical-align: top;\n  width: 2vw;\n  height: 2vw;\n}\n.game-mod.mineEnergy input.radio + label {\n  cursor: pointer;\n  line-height: 2vw;\n  display: inline-block;\n}\n.game-mod.mineEnergy input.radio:not(checked) {\n  position: absolute;\n  opacity: 0;\n}\n.game-mod.mineEnergy input.radio:not(checked) + label {\n  position: relative;\n  padding: 0 0 0 2.5vw;\n}\n.game-mod.mineEnergy input.radio:not(checked) + label:before {\n  content: \'\';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 0.2vw;\n  box-shadow: inset -0.2vw -0.2vw #c6c6c6, inset 0.2vw 0.2vw rgba(0,0,0,0.7);\n  background: #8b8b8b;\n  transition: all 0.2s;\n}\n.game-mod.mineEnergy input.radio:not(checked) + label:after {\n  content: \'\';\n  position: absolute;\n  top: 0.51vw;\n  left: 0.51vw;\n  width: 1vw;\n  height: 1vw;\n  border-radius: 0.2vw;\n  transition: all 0.2s;\n}\n.game-mod.mineEnergy input.radio:checked + label:before {\n  box-shadow: inset -0.2vw -0.2vw rgba(0,0,0,0.7), inset 0.2vw 0.2vw #c6c6c6;\n  background: #adabab;\n}\n.game-mod.mineEnergy.mobile-device input.radio {\n  width: 4vw;\n  height: 4vw;\n}\n.game-mod.mineEnergy.mobile-device input.radio + label {\n  line-height: 4vw;\n}\n.game-mod.mineEnergy.mobile-device input.radio:not(checked) + label {\n  padding: 0 0 0 5vw;\n}\n.game-mod.mineEnergy.mobile-device input.radio:not(checked) + label:before {\n  width: 4vw;\n  height: 4vw;\n  border-radius: 0.4vw;\n  box-shadow: inset -0.4vw -0.4vw #c6c6c6, inset 0.4vw 0.4vw rgba(0,0,0,0.7);\n}\n.game-mod.mineEnergy.mobile-device input.radio:not(checked) + label:after {\n  top: 1vw;\n  left: 1vw;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 0.4vw;\n}\n.game-mod.mineEnergy.mobile-device input.radio:checked + label:before {\n  box-shadow: inset -0.4vw -0.4vw rgba(0,0,0,0.7), inset 0.4vw 0.4vw #c6c6c6;\n}\n.game-mod.mineEnergy input.range {\n  -webkit-appearance: none;\n  width: 100%;\n  height: 1vw;\n  border-radius: 0.4vw;\n  background: rgba(0,0,0,0.5);\n  outline: none;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n}\n.game-mod.mineEnergy input.range::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 1.5vw;\n  height: 1.5vw;\n  border-radius: 50%;\n  background: #fff;\n  cursor: pointer;\n}\n.game-mod.mineEnergy input.range::-moz-range-thumb {\n  width: 1.5vw;\n  height: 1.5vw;\n  border-radius: 50%;\n  background: #fff;\n  cursor: pointer;\n}\n.game-mod.mineEnergy .range-container {\n  display: flex;\n}\n.game-mod.mineEnergy .range-container .progress {\n  position: relative;\n  width: 100%;\n}\n.game-mod.mineEnergy .range-container .progress .fill {\n  background-color: #fff;\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 1vw;\n  border-radius: 0.4vw;\n}\n.game-mod.mineEnergy .range-container .progress .range {\n  vertical-align: top;\n  position: relative;\n  z-index: 1;\n}\n.game-mod.mineEnergy .range-container span {\n  font-family: \'Default\', sans-serif;\n  vertical-align: top;\n  margin: 0 0 0 0.5vw;\n  min-width: 3vw;\n  text-align: center;\n}\n.game-mod.mineEnergy .button {\n  padding: 1vw 1.5vw;\n  background-color: #989898;\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  display: block;\n  font-family: \'Default\', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: 400;\n  color: #fff;\n  position: relative;\n  border-radius: 0;\n  transition: all 0.2s;\n  overflow: hidden;\n  background-image: url("/games/mineenergy/images/button.png"), url("/games/mineenergy/images/button-hover.png");\n  box-shadow: inset 0.2vw 0.2vw rgba(255,255,255,0.7), inset -0.2vw -0.2vw rgba(0,0,0,0.5);\n  text-shadow: 0.15vw 0.15vw rgba(0,0,0,0.5);\n}\n.game-mod.mineEnergy .button:disabled {\n  text-shadow: none;\n  background: #d4d2d2;\n  cursor: auto;\n}\n.game-mod.mineEnergy .button:hover:not(:disabled) {\n  background-image: url("/games/mineenergy/images/button-hover.png");\n}\n.game-mod.mineEnergy .button:hover:before {\n  display: block;\n}\n.game-mod.mineEnergy .button:active {\n  box-shadow: inset 0.2vw 0.2vw rgba(0,0,0,0.5), inset -0.2vw -0.2vw rgba(255,255,255,0.5);\n  text-shadow: none;\n}\n.game-mod.mineEnergy .button svg path {\n  fill: #fff;\n}\n.game-mod.mineEnergy .button a.button {\n  text-decoration: none;\n  display: block;\n}\n.game-mod.mineEnergy .button a.button a:visited {\n  color: #fff;\n}\n.game-mod.mineEnergy.mobile-device .button {\n  padding: 2vw 2.5vw;\n  font-size: 2.2vw;\n  line-height: 2.4vw;\n  box-shadow: inset 0.4vw 0.4vw rgba(255,255,255,0.7), inset -0.4vw -0.4vw rgba(0,0,0,0.5);\n  text-shadow: 0.3vw 0.3vw rgba(0,0,0,0.5);\n}\n.game-mod.mineEnergy .modal {\n  background-color: rgba(0,0,0,0.3);\n}\n.game-mod.mineEnergy .modal .container .content-wrap {\n  color: #fff;\n  background: #adabab;\n  padding: 2vw;\n  box-shadow: inset 0.5vw 0.5vw rgba(255,255,255,0.7), inset -0.5vw -0.5vw rgba(0,0,0,0.5);\n  border-radius: 1vw;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .modal .container .content-wrap .close svg path {\n  fill: $white;\n}\n.game-mod.mineEnergy .modal .container .content-wrap .title {\n  font-family: \'Default\', sans-serif;\n  color: #333;\n  font-size: 1.3vw;\n  margin-bottom: 0.8vw;\n  text-shadow: none;\n}\n.game-mod.mineEnergy .modal .container .content-wrap .title span {\n  display: block;\n  position: relative;\n}\n.game-mod.mineEnergy .modal .container .content-wrap .content {\n  padding: 0;\n}\n.game-mod.mineEnergy .modal .container .content-wrap .content p:not(last-child) {\n  margin-bottom: 0.5vw;\n}\n.game-mod.mineEnergy.mobile-device .modal .container .content-wrap {\n  padding: 4vw;\n  box-shadow: inset 1vw 1vw rgba(255,255,255,0.7), inset -1vw -1vw rgba(0,0,0,0.5);\n  border-radius: 2vw;\n  text-shadow: 0.2vw 0.2vw #000;\n}\n.game-mod.mineEnergy.mobile-device .modal .container .content-wrap .title {\n  font-size: 2.3vw;\n  margin-bottom: 1.8vw;\n}\n.game-mod.mineEnergy.mobile-device .modal .container .content-wrap .close {\n  top: 2vw;\n  right: 2vw;\n  width: 2vw;\n  height: 2vw;\n}\n.game-mod.mineEnergy.mobile-device .modal .container .content-wrap .content p:not(last-child) {\n  margin-bottom: 1vw;\n}\n.game-mod.mineEnergy .tooltip {\n  position: fixed;\n  background-image: url("/games/mineenergy/images/button.png");\n  padding: 1vw 0.8vw;\n  border-radius: 0.4vw;\n  z-index: 999999999;\n  max-width: 25vw;\n  text-align: center;\n  color: #fff;\n  box-shadow: inset 0.1vw 0.1vw rgba(255,255,255,0.7), inset -0.1vw -0.1vw rgba(0,0,0,0.5), 0 0 3vw rgba(0,0,0,0.5);\n  text-shadow: 0.06vw 0.06vw 0 #000;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n}\n.game-mod.mineEnergy .tooltip.bottom:after {\n  border-color: transparent transparent #8b8b8b transparent;\n}\n.game-mod.mineEnergy .tooltip.left:after {\n  border-color: transparent transparent transparent #8b8b8b;\n}\n.game-mod.mineEnergy .tooltip.top:after {\n  border-color: #8b8b8b transparent transparent transparent;\n}\n.game-mod.mineEnergy .tooltip.right:after {\n  border-color: transparent #8b8b8b transparent transparent;\n}\n.game-mod.mineEnergy .tooltip .description {\n  font-size: 1vw;\n  line-height: 1.2vw;\n}\n.game-mod.mineEnergy #pushes .push {\n  background-color: rgba(46,68,97,0.98);\n  background-image: url("/games/mineenergy/images/button.png");\n  color: #fff;\n  box-shadow: inset 0.2vw 0.2vw rgba(255,255,255,0.7), inset -0.2vw -0.2vw rgba(0,0,0,0.5);\n  text-shadow: 0.1vw 0.1vw rgba(0,0,0,0.5);\n}\n.game-mod.mineEnergy #pushes .push .wrap .push-icon {\n  box-shadow: inset 0.2vw 0.2vw rgba(255,255,255,0.7), inset 0vw -0.2vw rgba(0,0,0,0.5);\n  text-shadow: 0.1vw 0.1vw rgba(0,0,0,0.5);\n}\n.game-mod.mineEnergy #pushes .push .wrap .buttons .push-button {\n  background: transparent;\n  transition: all 0.2s;\n}\n.game-mod.mineEnergy #pushes .push .wrap .buttons .push-button .button-icon path {\n  fill: #fff !important;\n}\n.game-mod.mineEnergy #pushes .push .wrap .buttons .push-button.accept:hover path {\n  fill: #8bc34a !important;\n}\n.game-mod.mineEnergy #pushes .push .wrap .buttons .push-button.reject:hover path {\n  fill: #ff5722 !important;\n}\n.game-mod.mineEnergy .dom-bar {\n  width: 100%;\n  position: relative;\n  height: 2vw;\n  background-color: #000;\n}\n.game-mod.mineEnergy .dom-bar .progress {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 50%;\n  background-color: #f00;\n}\n.game-mod.mineEnergy .dom-bar .text {\n  position: relative;\n  line-height: 2vw;\n  text-align: center;\n}\n.game-mod.mineEnergy .screens {\n  position: relative;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  justify-content: flex-end;\n}\n.game-mod.mineEnergy .screens .screens-container {\n  position: relative;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container.dark {\n  background-color: rgba(0,0,0,0.3);\n}\n.game-mod.mineEnergy .screens .screens-container .screen {\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .screen-window {\n  background: rgba(0,0,0,0.4);\n  padding: 1.5vw;\n  background-position: 0 0;\n  background-repeat: no-repeat;\n  max-height: 100%;\n  border-radius: 0.4vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .block {\n  vertical-align: top;\n  display: block;\n  position: relative;\n  width: 100%;\n  margin-bottom: 1vw;\n  border-radius: 0.4vw;\n  background-color: rgba(0,0,0,0.4);\n  color: #fff;\n  box-shadow: none;\n  padding: 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .block b {\n  color: #ffa600;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .block p:not(:last-child) {\n  margin: 0 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .block .title {\n  color: #ffa600;\n  font-size: 1.6vw;\n  margin-bottom: 0.8vw;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .block .title span {\n  display: block;\n  position: relative;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .ad-item.size300x250 {\n  margin: 0 auto;\n  background-color: rgba(0,0,0,0.4);\n  padding: 1vw;\n  width: calc(300px + 2vw);\n  min-height: calc(250px + 2vw);\n  overflow: hidden;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .ad-item.size300x250 .disable-adblock {\n  margin: 0 auto;\n  width: 300px;\n  height: 250px;\n  display: block;\n  position: relative;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .ad-item.size300x250 .disable-adblock img {\n  width: 100%;\n  height: 100%;\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .ad-item.size300x250 .disable-adblock .text {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  font-size: 14px;\n  line-height: 16px;\n  text-shadow: 1px 1px 0 #000;\n  text-align: center;\n  background: rgba(0,0,0,0.5);\n}\n.game-mod.mineEnergy .screens .screens-container .screen .ad-item.size300x250 .disable-adblock .text p {\n  margin: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item {\n  width: initial;\n  height: initial;\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n  margin: 0 auto;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item .disable-adblock {\n  margin: 0 auto;\n  display: block;\n  position: relative;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item .disable-adblock img {\n  width: 100%;\n  height: 100%;\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item .disable-adblock .text {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  font-size: 14px;\n  line-height: 16px;\n  text-shadow: 1px 1px 0 #000;\n  text-align: center;\n  background: rgba(0,0,0,0.5);\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item .disable-adblock .text p {\n  margin: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item.size300x250 .disable-adblock {\n  width: 300px;\n  min-height: 250px;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item.size300x250 .disable-adblock img {\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item.size728x90 .disable-adblock {\n  width: 728px;\n  height: 90px;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .adinplay-item.size728x90 .disable-adblock img {\n  max-width: 728px;\n  max-height: 90px;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .pgi-widget-banner-2 {\n  min-height: 15.24vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .offer .buttons {\n  margin: 1vw 0 0;\n  justify-content: center;\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .offer .skip {\n  background: no-repeat;\n  border: 0;\n  outline: 0;\n  font-family: \'Default\', sans-serif;\n  font-size: 0.7vw;\n  color: rgba(255,255,255,0.5);\n  margin: 0 0 0 1vw;\n  cursor: pointer;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players {\n  color: #fff;\n  user-select: none;\n  text-shadow: 1px 1px 0 #000;\n  font-size: 1vw;\n  line-height: 1vw;\n  font-weight: 900;\n  z-index: 2;\n  margin: 1vw;\n  background: rgba(0,0,0,0.3);\n  padding: 0.6vw 0.6vw 0.4vw;\n  border-radius: 0.5vw;\n  pointer-events: all;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players p {\n  text-align: center;\n  margin: 0 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table thead .player:first-child td {\n  padding: 0.5vh 0.4vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player .number {\n  text-align: right;\n  vertical-align: top;\n  padding-right: 0.2vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player .flag {\n  width: 2vw;\n  height: 1.3vw;\n  vertical-align: top;\n  margin: 0 5px 0 7px;\n  position: relative;\n  text-align: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player .flag .flag-icon {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player .flag .flag-name {\n  font-size: 0.3vw;\n  line-height: 0.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player .name {\n  white-space: nowrap;\n  vertical-align: top;\n  padding: 0 0.2vw;\n  max-width: 14vw;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player .score {\n  white-space: nowrap;\n  vertical-align: top;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 90%;\n  padding-left: 0.2vw;\n  padding-right: 0.2vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player .score {\n  text-align: right;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .top-players .top-players-table .player.iam {\n  color: #5f5;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .metrics {\n  text-align: right;\n  text-shadow: 0.1vw 0.1vw #000;\n  margin: 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .metrics .metric p {\n  display: inline-block;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .metrics .metric p.value {\n  margin-left: 0.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .lvl-bar {\n  background-image: url("/games/mineenergy/images/exp-bar.png");\n  width: 60vw;\n  height: calc(60vw / 35);\n  background-color: transparent;\n  background-size: 100%;\n  background-position: top;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n  margin: 1vw 0;\n  pointer-events: all;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .lvl-bar p {\n  line-height: 2vw;\n  font-size: 2vw;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .lvl-bar .progress {\n  background: transparent;\n  overflow: hidden;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .lvl-bar .progress .progress-inner {\n  width: 60vw;\n  height: calc(60vw / 35);\n  background-color: transparent;\n  background-image: url("/games/mineenergy/images/exp-bar.png");\n  background-size: 100%;\n  background-position: bottom;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .lvl-bar .lvl-up {\n  position: absolute;\n  left: 50%;\n  top: 0;\n  transform: translate(-50%);\n  color: #f6e94c;\n  opacity: 0;\n  width: 100%;\n  text-align: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .lvl-bar .lvl-up.show {\n  animation: lvlUpShow infinite 1s;\n}\n@-moz-keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n@-webkit-keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n@-o-keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n@keyframes lvlUpShow {\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    top: -30vh;\n    font-size: 5vw;\n    text-shadow: 0.5vw 0.5vw #000;\n    opacity: 0;\n  }\n}\n.game-mod.mineEnergy .screens .screens-container .screen .leaders-board {\n  position: relative;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .leaders-board .title-wrap {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .leaders-board .interval-wrap .interval {\n  background: transparent;\n  border: 0;\n  outline: 0;\n  text-align: right;\n  color: rgba(255,255,255,0.5);\n  font-size: 1.2vw;\n  line-height: 1.5vw;\n  font-family: \'AdLib\', sans-serif;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .leaders-board .players {\n  padding: 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .leaders-board .players .player {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .leaders-board .players .player:not(:first-child) {\n  margin: 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources {\n  background: rgba(0,0,0,0.3);\n  margin: 1vw;\n  padding: 0.8vw;\n  pointer-events: all;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource {\n  display: flex;\n  align-items: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource:not(:last-child) {\n  margin: 0 0 0.25vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.increased .text {\n  background-image: url("/games/mineenergy/images/icons/green-arrow.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.decreased .text {\n  background-image: url("/games/mineenergy/images/icons/red-arrow.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource .icon {\n  width: 2.5vw;\n  height: 2.5vw;\n  margin: 0 0.5vw 0 0;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource .text {\n  text-shadow: 0.1vw 0.1vw 0 #000;\n  background-repeat: no-repeat;\n  background-position: 0 50%;\n  padding: 0 0 0 1.2vw;\n  background-size: 1vw;\n  font-size: 1vw;\n  line-height: 1.2vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.coal .icon {\n  background-image: url("/games/mineenergy/images/textures/items/coal.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.iron .icon {\n  background-image: url("/games/mineenergy/images/textures/items/iron_ingot.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.gold .icon {\n  background-image: url("/games/mineenergy/images/textures/items/gold_ingot.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.diamond .icon {\n  background-image: url("/games/mineenergy/images/textures/items/diamond.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.uranium .icon {\n  background-image: url("/games/mineenergy/images/textures/items/uranium.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.energy .icon {\n  background-image: url("/games/mineenergy/images/textures/items/energy.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen .resources .resource.money .icon {\n  background-image: url("/games/mineenergy/images/textures/items/money.png");\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .row.row-1 {\n  height: 65%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .row.row-2 {\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .col {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  margin: 0 1vw;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .col.center-col {\n  max-width: 25vw;\n  margin: 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .col.right-col {\n  margin-right: 0;\n  width: 100%;\n  max-width: 25vw;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block {\n  max-height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .login-wrap .login-container {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .login-wrap .login-container .nickname-wrap {\n  position: relative;\n  background: rgba(0,0,0,0.6);\n  background-image: url("/games/mineenergy/images/input.png");\n  background-size: cover;\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .login-wrap .login-container .nickname-wrap .nickname {\n  margin: 0 auto;\n  display: block;\n  background: transparent;\n  box-shadow: none;\n  height: 100%;\n  padding: 0.8vw 1.2vw;\n  font-size: 1.6vw;\n  line-height: 1.8vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .login-wrap .login-container .nickname-wrap:after {\n  content: \'\';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 1vw;\n  background-image: url("/games/mineenergy/images/input.png");\n  background-position: right top;\n  background-size: cover;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .selectors {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .selectors .select {\n  display: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .selectors .select.show {\n  display: block;\n  margin-top: 0.8vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .play-button {\n  position: relative;\n  overflow: visible;\n  padding: 0.9vw 1.5vw;\n  margin-left: 0.8vw;\n  font-size: 2vw;\n  line-height: 2.5vw;\n  animation: playPulse 0.8s infinite;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .share {\n  margin: 2vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .share .text {\n  display: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .share .buttons {\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .share .buttons .button {\n  width: 100%;\n  height: 3vw;\n  padding: 0.6vw;\n  overflow: visible;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.login .share .buttons .button:not(:last-child) {\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .block.pgi {\n  padding: 1vw;\n  margin-top: 1vw;\n  width: calc(300px + 2vw);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .button-icons {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .button-icons .button {\n  width: 4vw;\n  height: 4vw;\n  padding: 0.5vw;\n  margin: 1vw 1vw 1vw 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .button-icons .button svg {\n  width: 100%;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .download-apps-wrap {\n  position: fixed;\n  bottom: 3vw;\n  left: 50%;\n  transform: translate(-50%, 0);\n  background-color: rgba(0,0,0,0.4);\n  padding: 1vw;\n  font-size: 1vw;\n  line-height: 1vw;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .download-apps-wrap .download-apps-text {\n  text-align: center;\n  margin: 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .download-apps-wrap .download-apps {\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .download-apps-wrap .download-app {\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  text-decoration: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .download-apps-wrap .download-app:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .download-apps-wrap .download-app svg {\n  width: 2vw !important;\n  height: 2vw !important;\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .about {\n  max-height: 30vh;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .about .keyboard-keys {\n  margin: 0.5vw 0 0.8vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log {\n  max-height: 72vh;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .another-game img {\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .partners {\n  position: fixed;\n  bottom: 1vw;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  text-align: center;\n  font-size: 1vw;\n  line-height: 1vw;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n  padding: 0.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .partners .partner {\n  text-decoration: none;\n  margin: 0 0.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .not-mojang {\n  position: fixed;\n  bottom: 0.2vw;\n  left: 50%;\n  transform: translate(-50%, 0);\n  width: 100%;\n  text-align: center;\n  font-size: 0.8vw;\n  line-height: 1vw;\n  color: #fff;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log {\n  max-height: 55vh;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change {\n  overflow: hidden;\n  margin: 0 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change:last-child {\n  margin-bottom: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change.new {\n  position: relative;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change.new .label {\n  display: block;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .label {\n  position: absolute;\n  right: -2vw;\n  top: 0.9vw;\n  background: #f00;\n  padding: 0.2vw 0.5vw 0.1vw;\n  transform: rotate(45deg);\n  width: 7vw;\n  text-align: center;\n  font-size: 1vw;\n  line-height: 1vw;\n  text-transform: uppercase;\n  display: none;\n  z-index: 1;\n  opacity: 0.8;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content {\n  padding: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content .header {\n  color: rgba(255,255,255,0.8);\n  margin-bottom: 0.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .text-title {\n  font-family: \'Default\', sans-serif;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .info {\n  float: right;\n  color: rgba(255,255,255,0.5);\n  font-size: 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .info .version {\n  display: inline-block;\n  margin-right: 5px;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content .header .info .date {\n  display: inline-block;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content .text {\n  color: rgba(255,255,255,0.5);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.main .change-log .change-log-list .change .content .text p {\n  margin: 0 0 5px;\n}\n@-moz-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .row.row-2 {\n  width: 100%;\n  transform: scale(0.6) translate(0, -40%);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .row.row-2 .adinplay-item {\n  padding: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .col {\n  margin: 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .col.center-col {\n  max-width: 50vw;\n  margin: 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .col.right-col {\n  margin-right: 0;\n  width: 100%;\n  max-width: 40vw;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container .nickname-wrap {\n  position: relative;\n  background: rgba(0,0,0,0.6);\n  background-image: url("/games/mineenergy/images/input.png");\n  background-size: cover;\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container .nickname-wrap .nickname {\n  margin: 0 auto;\n  display: block;\n  background: transparent;\n  box-shadow: none;\n  height: 100%;\n  padding: 1.8vw 2.2vw;\n  font-size: 2.4vw;\n  line-height: 2.8vw;\n  min-width: 26vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .login-wrap .login-container .nickname-wrap:after {\n  content: \'\';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 1vw;\n  background-image: url("/games/mineenergy/images/input.png");\n  background-position: right top;\n  background-size: cover;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .selectors {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .selectors .select {\n  display: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .selectors .select.show {\n  display: block;\n  margin-top: 0.8vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .play-button {\n  position: relative;\n  overflow: visible;\n  padding: 1.6vw 2vw;\n  margin-left: 1.8vw;\n  font-size: 3vw;\n  line-height: 3.5vw;\n  animation: playPulse 0.8s infinite;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .share {\n  margin: 2vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .share .text {\n  display: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .share .buttons {\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .share .buttons .button {\n  width: 100%;\n  height: 5vw;\n  padding: 1vw;\n  overflow: visible;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .block.login .share .buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .skins-container .swiper-button-next,\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .skins-container .swiper-button-prev {\n  height: 3.26vw;\n  width: 2.4vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .skins-container .selected-box {\n  width: 10vw;\n  height: 10vw;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 0 4vw #ffa601;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .skins-container .skins-wrap .skin {\n  width: 10vw;\n  height: 10vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .button-icons {\n  position: fixed;\n  top: 0;\n  right: 0;\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .button-icons .button {\n  width: 4vw;\n  height: 4vw;\n  padding: 0.5vw;\n  margin: 1vw 1vw 1vw 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .button-icons .button svg {\n  width: 100%;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .not-mojang {\n  position: fixed;\n  bottom: 0.2vw;\n  left: 50%;\n  transform: translate(-50%, 0);\n  width: 100%;\n  text-align: center;\n  font-size: 0.8vw;\n  line-height: 1vw;\n  color: #fff;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .leaders-board {\n  position: relative;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .leaders-board .title {\n  margin-right: 5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .leaders-board .interval-wrap {\n  position: absolute;\n  top: 1.5vw;\n  right: 0.5vw;\n  width: 7vw;\n  overflow: hidden;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .leaders-board .interval-wrap .interval {\n  background: transparent;\n  border: 0;\n  outline: 0;\n  text-align: right;\n  color: rgba(255,255,255,0.5);\n  font-size: 1.5vw;\n  line-height: 1.5vw;\n  font-family: \'AdLib\', sans-serif;\n  width: 10vw;\n  height: 2vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .leaders-board .players {\n  padding: 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .leaders-board .players .player {\n  display: flex;\n  justify-content: space-between;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .leaders-board .players .player:not(:first-child) {\n  margin: 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .resource-packs-widget {\n  margin: 2vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .resource-packs-widget .buttons {\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .resource-packs-widget .buttons .button {\n  width: 100%;\n  font-size: 2vw;\n  line-height: 2.2vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileMain .resource-packs-widget .buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n@-moz-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes playPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineEnergy .screens .screens-container .screen.gameOver {\n  margin: auto;\n  display: flex;\n  padding: 0;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.gameOver .container {\n  color: #fff;\n  background: rgba(0,0,0,0.5);\n  padding: 2vw;\n  width: 100vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.gameOver .container .title {\n  font-size: 6vw;\n  line-height: 6.5vw;\n  text-align: center;\n  margin: 2vw 0;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.gameOver .container .title.dead {\n  color: #f55;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.gameOver .container .title.kick {\n  color: #55f;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.gameOver .container .text {\n  padding: 1vw;\n  border-radius: 0.4vw;\n  color: #fff;\n  display: none;\n  max-width: 50vw;\n  margin: 0 auto;\n  font-size: 3vw;\n  line-height: 3.5vw;\n  text-align: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.gameOver .container .text.show {\n  display: block;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .row.row-1 {\n  height: 65%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .row.row-2 {\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .col {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  margin: 0 1vw;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .col.center-col {\n  max-width: 25vw;\n  margin: 0 1vw;\n  min-width: 25vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .col.right-col {\n  margin-right: 0;\n  width: 100%;\n  max-width: 25vw;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .score-wrap {\n  margin: 0 0 2vw;\n  text-align: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .score-wrap .score-title {\n  font-size: 3vw;\n  line-height: 3.2vw;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .score-wrap .score {\n  font-size: 4vw;\n  line-height: 4.2vw;\n  margin: 1vw 0 0;\n  text-shadow: 0.4vw 0.4vw #000;\n  color: #ffa600;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .main-buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .main-buttons .button {\n  white-space: nowrap;\n  padding: 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .main-buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .main-buttons .respawn {\n  animation: reSpawnPulse 0.8s infinite;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share {\n  margin: 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .text {\n  margin: 0 0 1vw;\n  text-align: center;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.8s;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .text.show {\n  opacity: 1;\n  visibility: visible;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .buttons {\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .buttons .button {\n  width: 100%;\n  height: 3vw;\n  padding: 0.6vw;\n  overflow: visible;\n  position: relative;\n  transition: transform 0.1s;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .buttons .button:not(:last-child) {\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .buttons .button.scale {\n  transform: scale(1.1);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .buttons .button .particle-container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  white-space: nowrap;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .share .buttons .button .particle-container .content {\n  transform: rotate(90deg);\n  font-size: 2vw;\n  color: #5ff;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .block.pgi {\n  padding: 1vw;\n  margin-top: 1vw;\n  width: calc(300px + 2vw);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .help.block {\n  max-height: 50vh;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .another-game img {\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.reSpawn .spectate {\n  margin: 1vw auto 0;\n}\n@-moz-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .row.row-2 {\n  width: 100%;\n  transform: scale(0.6) translate(0, -40%);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .row.row-2 .adinplay-item {\n  padding: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .col {\n  margin: 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .col.center-col {\n  width: 50vw;\n  margin: 0 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .col.right-col {\n  margin-right: 0;\n  width: 36vw;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .score-wrap {\n  margin: 0 0 2vw;\n  text-align: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .score-wrap .score-title {\n  font-size: 3vw;\n  line-height: 3.2vw;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .score-wrap .score {\n  font-size: 4vw;\n  line-height: 4.2vw;\n  margin: 1vw 0 0;\n  text-shadow: 0.4vw 0.4vw #000;\n  color: #ffa600;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .main-buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .main-buttons .button {\n  white-space: nowrap;\n  padding: 1vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .main-buttons .button:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .main-buttons .respawn {\n  animation: reSpawnPulse 0.8s infinite;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share {\n  margin: 1vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .text {\n  margin: 0 0 1vw;\n  text-align: center;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.8s;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .text.show {\n  opacity: 1;\n  visibility: visible;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .buttons {\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .buttons .button {\n  width: 100%;\n  height: 4.5vw;\n  padding: 0.8vw;\n  overflow: visible;\n  position: relative;\n  transition: transform 0.1s;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .buttons .button:not(:last-child) {\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .buttons .button.scale {\n  transform: scale(1.1);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .buttons .button .particle-container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  white-space: nowrap;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .share .buttons .button .particle-container .content {\n  transform: rotate(90deg);\n  font-size: 2vw;\n  color: #5ff;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .offer .skip {\n  font-size: 1.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .help.block {\n  max-height: 60vh;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .another-game img {\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.mobileReSpawn .spectate {\n  margin: 1vw auto 0;\n}\n@-moz-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@-o-keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes reSpawnPulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .button {\n  pointer-events: all;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-left {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top .how-to-play {\n  margin: 1vw 0 0;\n  text-shadow: 0.1vw 0.1vw 0 #000;\n  text-align: center;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right .ability-active-effects-effect {\n  width: 5vw;\n  height: 5vw;\n  font-size: 1vw;\n  line-height: 6.5vw;\n  text-align: center;\n  font-weight: bold;\n  color: #fff;\n  margin: 1vw 1vw 0 auto;\n  padding: 0.5vw;\n  background-color: rgba(0,0,0,0.3);\n  background-size: 55%;\n  background-repeat: no-repeat;\n  background-position: 50% 5%;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right .buttons {\n  margin-top: 1vw;\n  margin-right: 1vw;\n  display: flex;\n  justify-content: flex-end;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right .buttons .button {\n  width: 3vw;\n  height: 3vw;\n  padding: 0.6vw 0.8vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right .buttons .button .icon {\n  width: 100%;\n  height: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right .buttons .button.open-teams {\n  display: flex;\n  align-items: center;\n  width: initial;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right .buttons .button.open-teams .icon {\n  width: 2vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .top-right .buttons .button.open-teams p {\n  margin: 0.1vw 0 0 0.7vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .bottom {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .bottom-right {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .bottom-right .ad-reward-trigger {\n  background-image: url("/games/mineenergy/images/textures/blocks/chest.png");\n  background-repeat: no-repeat;\n  background-position: 50% 0;\n  background-size: 4vw;\n  background-color: transparent;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n  padding: 5vw 0.9vw 0;\n  margin: 1vw auto;\n  box-shadow: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .bottom-right .shop-button {\n  display: flex;\n  flex-direction: column;\n  margin: auto 1vw 2vw 0;\n  padding: 0;\n  background-color: transparent;\n  background-image: none;\n  border: 0;\n  box-shadow: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .bottom-right .shop-button .shop-icon {\n  width: 5vw;\n  height: 5vw;\n  margin: 0 auto 0.5vw;\n  background-image: url("/games/mineenergy/images/icons/shop.png");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .bottom-right .shop-button .text {\n  margin: auto;\n  text-align: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .joystick-zone {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 30vw;\n  height: 30vw;\n  pointer-events: all;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .joystick {\n  position: absolute;\n  bottom: 6vw;\n  left: 6vw;\n  width: 16vw;\n  height: 16vw;\n  border-radius: 50%;\n  background-color: rgba(0,0,0,0.2);\n  pointer-events: all;\n  display: flex;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .joystick .lever {\n  width: 8vw;\n  height: 8vw;\n  margin: auto;\n  border-radius: 50%;\n  background-color: rgba(0,0,0,0.2);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .mobile-button {\n  border-radius: 50%;\n  border: 0;\n  outline: 0;\n  position: absolute;\n  width: 10vw;\n  height: 10vw;\n  pointer-events: all;\n  background: rgba(0,0,0,0.3);\n  box-shadow: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .mobile-button.speed-up {\n  right: 12vw;\n  bottom: 3vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .mobile-button.attack {\n  right: 3vw;\n  bottom: 12vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .hotkeys {\n  margin: 0 1vw 1vw 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .hotkeys > div {\n  display: table;\n  margin: 0 0 0 auto;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.game .hotkeys > div span {\n  text-shadow: 0.1vw 0.1vw 0 #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect {\n  margin: auto;\n  display: flex;\n  padding: 0.5vw;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  background-color: rgba(0,0,0,0.8);\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect .container {\n  color: #fff;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect .container .dom-logo {\n  width: 15vw;\n  height: 15vw;\n  margin: auto;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect .container .text {\n  background: rgba(0,0,0,0.2);\n  padding: 1vw;\n  border-radius: 0.4vw;\n  color: rgba(255,255,255,0.5);\n  display: none;\n  max-width: 50vw;\n  margin: 0 auto;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect .container .text.show {\n  display: block;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect .container .status {\n  font-size: 3vw;\n  line-height: 3.5vw;\n  text-align: center;\n  margin: 2vw 0;\n  text-shadow: 0.3vw 0.3vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect .container .in-main-menu {\n  margin: 2vw auto 0;\n  display: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.connect .container .in-main-menu.show {\n  display: block;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.settings .block {\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.settings .button {\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.settings .button:not(:first-child) {\n  margin: 0.5vw auto 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.graphics table td {\n  padding: 0.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.graphics .block {\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.graphics .button {\n  margin: 1vw auto 0;\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.keyBindings table {\n  display: block;\n  columns: 2;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.keyBindings table tr {\n  page-break-inside: avoid;\n  break-inside: avoid;\n  vertical-align: top;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.keyBindings table td {\n  padding: 0.2vw;\n  vertical-align: middle;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.keyBindings .block {\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n}\n.game-mod.mineEnergy .screens .screens-container .screen.keyBindings .button {\n  margin: 1vw auto 0;\n  width: 100%;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.keyBindings .key-binding {\n  background: rgba(0,0,0,0.5);\n  padding: 0.5vw;\n  border-radius: 0.4vw;\n  font-weight: bold;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.startMobile {\n  margin: auto;\n  display: flex;\n  padding: 0.5vw;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.startMobile .container {\n  color: #fff;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.startMobile .container .enable-full-screen {\n  font-size: 5vmin;\n  line-height: 7vmin;\n  padding: 5vmin 6vmin;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.startMobile .container .skip {\n  background: none;\n  color: rgba(0,0,0,0.3);\n  margin: 7vmin auto 0;\n  font-size: 4vmin;\n  line-height: 6vmin;\n  box-shadow: none;\n  text-shadow: none;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.spectator {\n  margin: auto;\n  display: flex;\n  padding: 0;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  text-shadow: 0.1vw 0.1vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.spectator .top-right {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.spectator .player-name {\n  position: absolute;\n  top: 2vw;\n  left: 50vw;\n  transform: translateX(-50%);\n  font-size: 2vw;\n  text-shadow: 0.2vw 0.2vw #000;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.spectator .previous,\n.game-mod.mineEnergy .screens .screens-container .screen.spectator .next {\n  position: absolute;\n  top: 50vh;\n  transform: translateY(-50%);\n  font-size: 4vw;\n  line-height: 4.5vw;\n  padding: 1vw 2.5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.spectator .previous {\n  left: 5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.spectator .next {\n  right: 5vw;\n}\n.game-mod.mineEnergy .screens .screens-container .screen.spectator .in-respawn-screen {\n  position: absolute;\n  bottom: 2vw;\n  left: 50vw;\n  transform: translateX(-50%);\n  font-size: 2vw;\n  line-height: 2.5vw;\n}\n.game-mod.mineEnergy.mobile-device .screens .screens-container .screen .block {\n  margin-bottom: 2vw;\n  border-radius: 0.8vw;\n  padding: 2vw;\n}\n.game-mod.mineEnergy.mobile-device .screens .screens-container .screen .block .title {\n  color: #ffa600;\n  font-size: 2.6vw;\n  margin-bottom: 1.8vw;\n  text-shadow: 0.2vw 0.2vw 0 #000;\n}\n.game-mod.mineEnergy .shop-modal .container .content-wrap {\n  background: transparent;\n  box-shadow: none;\n  padding: 0;\n}\n.game-mod.mineEnergy .shop-modal .container .content-wrap .close {\n  width: 3vw;\n  height: 3vw;\n  z-index: 2;\n  transform: translate(4vw);\n  background: #adabab;\n  opacity: 1;\n}\n.game-mod.mineEnergy .shop-modal .shop-item {\n  display: grid;\n  grid-template-columns: 7vw 30vw min-content min-content;\n}\n.game-mod.mineEnergy .shop-modal .shop-item:not(:last-child) {\n  margin: 0 0 2vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item.unavailable .characteristic.costs .name {\n  color: #f55;\n}\n.game-mod.mineEnergy .shop-modal .shop-item.available .characteristic.costs .name {\n  color: #5f5;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .image {\n  width: 5vw;\n  height: 5vw;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n  flex-shrink: 0;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .content {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: hidden;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .content .shop-title {\n  margin: 0 0 1vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .content .description {\n  font-size: 1vw;\n  line-height: 1.2vw;\n  text-shadow: 0.05vw 0.05vw #000;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics {\n  padding: 0 0 0 1vw;\n  overflow: hidden;\n  font-size: 1vw;\n  line-height: 1.2vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic {\n  display: grid;\n  grid-template-columns: auto 11vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic:not(:last-child) {\n  margin: 0 0 0.5vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .name {\n  text-shadow: 0.05vw 0.05vw #000;\n  margin: 0 0.5vw 0 0;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources:not(:last-child) {\n  margin: 0 0 0.5vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources p {\n  margin-bottom: 0 !important;\n  text-shadow: 0.05vw 0.05vw #000;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources > p {\n  margin-right: 1vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource {\n  display: flex;\n  align-items: center;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource:not(:last-child) {\n  margin: 0 1vw 0 0;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.enough {\n  color: #5f5;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.not-enough {\n  color: #f55;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource .icon {\n  width: 1.5vw;\n  height: 1.5vw;\n  margin: 0 0.5vw 0 0;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource .type {\n  margin: 0 0 0 0.5vw;\n  font-size: 0.8vw;\n  line-height: 1vw;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.coal .icon {\n  background-image: url("/games/mineenergy/images/textures/items/coal.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.iron .icon {\n  background-image: url("/games/mineenergy/images/textures/items/iron_ingot.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.gold .icon {\n  background-image: url("/games/mineenergy/images/textures/items/gold_ingot.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.diamond .icon {\n  background-image: url("/games/mineenergy/images/textures/items/diamond.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.uranium .icon {\n  background-image: url("/games/mineenergy/images/textures/items/uranium.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.energy .icon {\n  background-image: url("/games/mineenergy/images/textures/items/energy.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.money .icon {\n  background-image: url("/games/mineenergy/images/textures/items/money.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.health .icon {\n  background-image: url("/games/mineenergy/images/icons/heart.png");\n  background-size: 90%;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.healingSpeed .icon {\n  background-image: url("/games/mineenergy/images/icons/heart.png");\n  background-size: 90%;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.healingDuration .icon {\n  background-image: url("/games/mineenergy/images/icons/time.png");\n  background-size: 90%;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.protection .icon {\n  background-image: url("/games/mineenergy/images/icons/shield.png");\n  background-size: 90%;\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.damage .icon {\n  background-image: url("/games/mineenergy/images/icons/sword.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .characteristics .characteristic .resources .resource.attackRadius .icon {\n  background-image: url("/games/mineenergy/images/icons/attack-radius.png");\n}\n.game-mod.mineEnergy .shop-modal .shop-item .actions {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item {\n  width: initial;\n  height: initial;\n  padding: 1vw;\n  background-color: rgba(0,0,0,0.4);\n  margin: 0 auto;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item .disable-adblock {\n  margin: 0 auto;\n  display: block;\n  position: relative;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item .disable-adblock img {\n  width: 100%;\n  height: 100%;\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item .disable-adblock .text {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px;\n  font-size: 14px;\n  line-height: 16px;\n  text-shadow: 1px 1px 0 #000;\n  text-align: center;\n  background: rgba(0,0,0,0.5);\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item .disable-adblock .text p {\n  margin: 0;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item.size300x250 .disable-adblock {\n  width: 300px;\n  min-height: 250px;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item.size300x250 .disable-adblock img {\n  max-width: 300px;\n  max-height: 250px;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item.size728x90 .disable-adblock {\n  width: 728px;\n  height: 90px;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item.size728x90 .disable-adblock img {\n  max-width: 728px;\n  max-height: 90px;\n}\n.game-mod.mineEnergy .shop-modal .adinplay-item {\n  padding: 0;\n  background-color: transparent;\n  margin: 1vw auto 0;\n  display: table;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container {\n  display: flex;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .teams {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .teams .teams-title {\n  text-align: center;\n  margin: 0 0 2vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .teams .teams-list {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .teams .teams-list .team-item {\n  display: flex;\n  align-items: center;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .teams .teams-list .team-item:not(:last-child) {\n  margin: 0 0 1vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .teams .teams-list .team-item .button {\n  margin: 0 0 0 1vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .team {\n  display: none;\n  margin: 0 0 0 3vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .team.show {\n  display: block;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .team .team-name {\n  text-align: center;\n  margin: 0 0 2vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .team .teammates {\n  display: flex;\n  flex-direction: column;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .team .teammates .teammate {\n  display: flex;\n  align-items: center;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .team .teammates .teammate:not(:last-child) {\n  margin: 0 0 1vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .team .teammates .teammate .button {\n  margin: 0 0 0 1vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .create-team {\n  display: none;\n  margin: 0 0 0 3vw;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .create-team.show {\n  display: block;\n}\n.game-mod.mineEnergy .teams-modal .container .content-wrap .content .modal-container .create-team .button {\n  margin: 1vw 0 0;\n}\n.game-mod.mineEnergy .ad-reward {\n  text-align: center;\n}\n.game-mod.mineEnergy .ad-reward .reward {\n  margin: 3vw auto;\n  text-align: center;\n}\n.game-mod.mineEnergy .ad-reward .reward .image-container {\n  position: relative;\n  margin: auto;\n  width: 8vw;\n  height: 8vw;\n  display: flex;\n}\n.game-mod.mineEnergy .ad-reward .reward .image-container .image {\n  width: 100%;\n  height: 100%;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n.game-mod.mineEnergy .ad-reward .reward .image-container .image.shake {\n  animation: shake 0.2s infinite;\n}\n.game-mod.mineEnergy .ad-reward .reward .image-container .particles-container {\n  position: absolute;\n  margin: auto;\n  width: 12vw;\n  height: 12vw;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.game-mod.mineEnergy .ad-reward .reward .image-container .particles-container .particle {\n  position: absolute;\n  width: 12vw;\n  height: 12vw;\n  background-repeat: no-repeat;\n  background-size: 100%;\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n.game-mod.mineEnergy .ad-reward .reward .text {\n  margin: 1vw auto 0;\n}\n.game-mod.mineEnergy .ad-reward .button {\n  margin: 2vw auto 0;\n}\n@-moz-keyframes shake {\n  0% {\n    transform: rotate(-8deg);\n  }\n  50% {\n    transform: rotate(8deg);\n  }\n  100% {\n    transform: rotate(-8deg);\n  }\n}\n@-webkit-keyframes shake {\n  0% {\n    transform: rotate(-8deg);\n  }\n  50% {\n    transform: rotate(8deg);\n  }\n  100% {\n    transform: rotate(-8deg);\n  }\n}\n@-o-keyframes shake {\n  0% {\n    transform: rotate(-8deg);\n  }\n  50% {\n    transform: rotate(8deg);\n  }\n  100% {\n    transform: rotate(-8deg);\n  }\n}\n@keyframes shake {\n  0% {\n    transform: rotate(-8deg);\n  }\n  50% {\n    transform: rotate(8deg);\n  }\n  100% {\n    transform: rotate(-8deg);\n  }\n}\n.game-mod.mineEnergy .tabs-wrap .tabs {\n  z-index: 1;\n}\n.game-mod.mineEnergy .tabs-wrap .tabs .tab {\n  padding: 1vw 2vw;\n  box-shadow: inset 0.25vw 0.25vw rgba(255,255,255,0.7), inset -0.25vw 0 rgba(0,0,0,0.5);\n  border-radius: 0.5vw 0.5vw 0 0;\n  background-color: #908d8d;\n  transition: none;\n}\n.game-mod.mineEnergy .tabs-wrap .tabs .tab.active,\n.game-mod.mineEnergy .tabs-wrap .tabs .tab:hover {\n  background-color: #adabab;\n}\n.game-mod.mineEnergy .tabs-wrap .tabs .tab.active {\n  transform: translateY(0.3vw);\n}\n.game-mod.mineEnergy .tabs-wrap .tabs .tab .icon .image {\n  image-rendering: crisp-edges;\n  image-rendering: pixelated;\n}\n.game-mod.mineEnergy .tabs-wrap .containers .container {\n  padding: 2vw;\n  background: #adabab;\n  box-shadow: inset 0.25vw 0.25vw rgba(255,255,255,0.7), inset -0.25vw -0.25vw rgba(0,0,0,0.5);\n  border-radius: 0 0.5vw 0.5vw 0.5vw;\n}\n.game-mod.mineEnergy .tabs-wrap .containers .container .tab-content.scroll {\n  overflow-x: hidden;\n  max-height: 60vh;\n}\n.game-mod.mineEnergy .keyboard-keys {\n  white-space: nowrap;\n  margin: 0 0 0.3vw;\n}\n.game-mod.mineEnergy .keyboard-keys span {\n  margin: 0.8vw 0 0 0.5vw;\n  vertical-align: top;\n  display: inline-block;\n}\n.game-mod.mineEnergy .keyboard-keys span.left {\n  margin: 0.4vw 0.5vw 0 0;\n}\n.game-mod.mineEnergy .keyboard-keys .key {\n  background: #383838;\n  position: relative;\n  padding: 0.8vw 1vw 0.5vw 1vw;\n  border-radius: 0.2vw;\n  color: #fff;\n  font-family: \'Default\', sans-serif;\n  font-size: 1.2vw;\n  line-height: 1.4vw;\n  font-weight: bold;\n  text-transform: uppercase;\n  vertical-align: middle;\n  display: inline-block;\n  margin: 0 0.2vw;\n  box-shadow: 0 0.3vw 0 #000;\n}\n.game-mod.mineEnergy .keyboard-keys .key:after {\n  content: \'\';\n  position: absolute;\n  border: 0.1vw solid #8c8c8c;\n  left: 0.4vw;\n  top: 0.3vw;\n  right: 0.4vw;\n  bottom: 0.4vw;\n  border-radius: 0.2vw;\n}\n.game-mod.mineEnergy .keyboard-keys .key.white {\n  background: #d9dbdb;\n  box-shadow: 0 0.3vw 0 #a0a0a0;\n  color: #000;\n}\n.game-mod.mineEnergy .keyboard-keys .key.white:after {\n  border: 0.1vw solid #b1b1b1;\n}\n.game-mod.mineEnergy .mouse-button-wrap span {\n  margin: 1.3vw 0 0 0;\n  vertical-align: top;\n  display: inline-block;\n}\n.game-mod.mineEnergy .mouse-button-wrap .mouse-button {\n  width: 3vw;\n  height: 3vw;\n  background-size: contain;\n  background-repeat: no-repeat;\n  font-weight: bold;\n  display: inline-block;\n}\n.game-mod.mineEnergy .mouse-button-wrap .mouse-button.white {\n  filter: invert(1);\n  color: #000;\n}\n.game-mod.mineEnergy .mouse-button-wrap .mouse-button.mouse-left {\n  background-image: url("/games/mineenergy/images/icons/mouse-button-left.svg");\n}\n.game-mod.mineEnergy .mouse-button-wrap .mouse-button.mouse-right {\n  background-image: url("/games/mineenergy/images/icons/mouse-button-left.svg");\n  transform: scaleX(-1);\n}\n.game-mod.mineEnergy .mouse-button-wrap .mouse-button.mouse-move {\n  background-image: url("/games/mineenergy/images/icons/mouse-move.svg");\n}\n.game-mod.mineEnergy .scroll {\n  overflow: auto;\n  padding-right: 0.5vw;\n  max-height: 90vh;\n  touch-action: initial;\n}\n.game-mod.mineEnergy .scroll * {\n  touch-action: initial;\n}\n.game-mod.mineEnergy .scroll::-webkit-scrollbar {\n  width: 0.6vw;\n}\n.game-mod.mineEnergy .scroll::-webkit-scrollbar-track {\n  background: rgba(255,255,255,0);\n}\n.game-mod.mineEnergy .scroll::-webkit-scrollbar-thumb {\n  background-color: #8b8b8b;\n  outline: 0;\n  border-radius: 1vw;\n}\n.game-mod.mineEnergy .scroll.scroll-slim::-webkit-scrollbar {\n  width: 0.2vw;\n}\n.game-mod.mineEnergy .scroll.scroll-hide::-webkit-scrollbar {\n  width: 0;\n}\n', ""]);
}, function (e, t, n) {
  var i = {"./en.json": 43, "./ru.json": 44};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 212;
}, function (e, t, n) {
  var i = {"./en.json": 214, "./ru.json": 215};
  function r(e) {
    var t = o(e);
    return n(t);
  }
  function o(e) {
    if (!n.o(i, e)) {
      var t = new Error("Cannot find module '" + e + "'");
      throw t.code = "MODULE_NOT_FOUND", t;
    }
    return i[e];
  }
  r.keys = function () {
    return Object.keys(i);
  }, r.resolve = o, e.exports = r, r.id = 213;
}, function (e) {
  e.exports = JSON.parse('{"title":"What\'s new!","new":"New","log":[{"version":0.039,"text":["<div class=\'header\'>","<b class=\'text-title\'>Added PvE server</b>","<div class=\'info\'><div class=\'version\'>v0.039</div><div class=\'date\'>12.03.23</div></div></div>","<div class=\'text\'>","<p>- added PvE server.</p>","<p>- fixed chat.</p>","<p>- fixed small bugs.</p>","</div>"]},{"version":0.024,"text":["<div class=\'header\'>","<b class=\'text-title\'>New blocks and Improvements</b>","<div class=\'info\'><div class=\'version\'>v0.024</div><div class=\'date\'>05.10.20</div></div></div>","<div class=\'text\'>","<p>- added Coal, Golden and Diamond Sellers.</p>","<p>- added Advanced Solar Generator.</p>","<p>- instead of production speed in tick, the difference between production speed and consumption in tick is displayed.</p>","<p>- Miners remain in place when there is a lack of energy.</p>","<p>- changed a price and quantity of ore in the tools.</p>","<p>- fixed small bugs.</p>","</div>"]},{"version":0.023,"text":["<div class=\'header\'>","<b class=\'text-title\'>Storage and Manual Seller</b>","<div class=\'info\'><div class=\'version\'>v0.023</div><div class=\'date\'>24.09.20</div></div></div>","<div class=\'text\'>","<p>- added the Storage, where old tools and blocks, dismantled by wrench are placed.</p>","<p>- added Manual Seller.</p>","<p>- Miners are placed in the Storage if there are no ores nearby.</p>","<p>- the strength of the walls has increased.</p>","<p>- the strength of the ores has decreased.</p>","<p>- fixed small bugs.</p>","</div>"]},{"version":0.022,"text":["<div class=\'header\'>","<b class=\'text-title\'>Update!</b>","<div class=\'info\'><div class=\'version\'>v0.022</div><div class=\'date\'>23.09.20</div></div></div>","<div class=\'text\'>","<p>- added Tesla Coil 3000, which destroys enemies blocks.</p>","<p>- added 3 Potion of Regeneration.</p>","<p>- ores are depleted and appear in new places.</p>","<p>- invulnerability is disabled 10 seconds after spawning.</p>","<p>- fixed small bugs.</p>","</div>"]},{"version":0.013,"text":["<div class=\'header\'>","<b class=\'text-title\'>Fixed bugs</b>","<div class=\'info\'><div class=\'version\'>v0.013</div><div class=\'date\'>12.04.20</div></div></div>","<div class=\'text\'>","<p>Added different damage for pickaxes.</p>","<p>The bed will disappear after player respawn.</p>","<p>Tesla coil does not consume resources for damage invulnerable players.</p>","<p>Fixed small bugs.</p>","</div>"]},{"version":0.001,"text":["<div class=\'header\'>","<b class=\'text-title\'>Beta</b>","<div class=\'info\'><div class=\'version\'>v0.001</div><div class=\'date\'>04.03.20</div></div></div>","<div class=\'text\'><p>Welcome everyone! It\'s beta game.</p></div>"]}]}');
}, function (e) {
  e.exports = JSON.parse('{"title":"Что нового?","new":"Новое","log":[{"version":0.039,"text":["<div class=\'header\'>","<b class=\'text-title\'>Добавлен PvE сервер</b>","<div class=\'info\'><div class=\'version\'>v0.039</div><div class=\'date\'>12.03.23</div></div></div>","<div class=\'text\'>","<p>- добавлен PvE сервер.</p>","<p>- исправлен чат.</p>","<p>- исправлены мелкие ошибки.</p>","</div>"]},{"version":0.024,"text":["<div class=\'header\'>","<b class=\'text-title\'>Новые блоки и улучшения</b>","<div class=\'info\'><div class=\'version\'>v0.024</div><div class=\'date\'>05.10.20</div></div></div>","<div class=\'text\'>","<p>- добавлены Угольный, Золотой и Алмазный продавцы.</p>","<p>- добавлен Продвинутый солнечный гегератор.</p>","<p>- вместо скорости производства в тик отображается разница между скоростью производства и потреблением в тик.</p>","<p>- майнеры остаются на месте при недостатке энергии.</p>","<p>- изменена цена и количество добываемой руды у инструментов.</p>","<p>- исправлены мелкие ошибки.</p>","</div>"]},{"version":0.023,"text":["<div class=\'header\'>","<b class=\'text-title\'>Хранилище и Ручной продавец</b>","<div class=\'info\'><div class=\'version\'>v0.023</div><div class=\'date\'>24.09.20</div></div></div>","<div class=\'text\'>","<p>- добавлено хранилище, в которое помещаются старые инструменты и блоки, демонтированные ключом.</p>","<p>- добавлен Ручной Продавец.</p>","<p>- Буровые установки помещаются в Хранилище если рядом нет руд.</p>","<p>- увеличена прочность стен.</p>","<p>- уменьшена прочность руд.</p>","<p>- исправлены мелкие ошибки.</p>","</div>"]},{"version":0.022,"text":["<div class=\'header\'>","<b class=\'text-title\'>Обновление!</b>","<div class=\'info\'><div class=\'version\'>v0.022</div><div class=\'date\'>23.09.20</div></div></div>","<div class=\'text\'>","<p>- добавлена Катушка Теслы 3000, разрушающая чужие блоки.</p>","<p>- добавлено 3 Зелья Регенерации</p>","<p>- руда истощается и появляется в новых местах.</p>","<p>- неуязвимость отключается через 10 секунд после спавна.</p>","<p>- исправлены мелкие ошибки.</p>","</div>"]},{"version":0.013,"text":["<div class=\'header\'>","<b class=\'text-title\'>Исправление ошибок</b>","<div class=\'info\'><div class=\'version\'>v0.013</div><div class=\'date\'>12.04.20</div></div></div>","<div class=\'text\'>","<p>Киркам добавлен разный уровень урона.</p>","<p>Кровать стала исчезать после возрождения игрока.</p>","<p>Катушка Теслы не потребляет ресурсы для нанесения урона неуязвимым игрокам.</p>","<p>Исправлены мелкие ошибки.</p>","</div>"]},{"version":0.001,"text":["<div class=\'header\'>","<b class=\'text-title\'>Бета</b>","<div class=\'info\'><div class=\'version\'>v0.001</div><div class=\'date\'>04.03.20</div></div></div>","<div class=\'text\'><p>Добро пожаловать! Игра в стадии Бета.</p></div>"]}]}');
}, function (e, t) {
  THREE.SVGLoader = function (e) {
    this.manager = undefined !== e ? e : THREE.DefaultLoadingManager;
  }, THREE.SVGLoader.prototype = {constructor: THREE.SVGLoader, load: function (e, t, n, i) {
    var r = this;
    new THREE.FileLoader(r.manager).load(e, function (e) {
      t(r.parse(e));
    }, n, i);
  }, parse: function (e) {
    function t(e, t, i, r, o, s, a, l) {
      r = r * Math.PI / 180, t = Math.abs(t), i = Math.abs(i);
      var c = (a.x - l.x) / 2, h = (a.y - l.y) / 2, u = Math.cos(r) * c + Math.sin(r) * h, d = -Math.sin(r) * c + Math.cos(r) * h, p = t * t, m = i * i, f = u * u, g = d * d, v = f / p + g / m;
      if (v > 1) {
        var y = Math.sqrt(v);
        p = (t *= y) * t, m = (i *= y) * i;
      }
      var _ = p * g + m * f, x = (p * m - _) / _, b = Math.sqrt(Math.max(0, x));
      o === s && (b = -b);
      var w = b * t * d / i, S = -b * i * u / t, E = Math.cos(r) * w - Math.sin(r) * S + (a.x + l.x) / 2, q = Math.sin(r) * w + Math.cos(r) * S + (a.y + l.y) / 2, T = n(1, 0, (u - w) / t, (d - S) / i), A = n((u - w) / t, (d - S) / i, (-u - w) / t, (-d - S) / i) % (2 * Math.PI);
      e.currentPath.absellipse(E, q, t, i, T, T + A, 0 === s, r);
    }
    function n(e, t, n, i) {
      var r = e * n + t * i, o = Math.sqrt(e * e + t * t) * Math.sqrt(n * n + i * i), s = Math.acos(Math.max(-1, Math.min(1, r / o)));
      return e * i - t * n < 0 && (s = -s), s;
    }
    function i(e, t) {
      return t = Object.assign({}, t), e.hasAttribute("fill") && (t.fill = e.getAttribute("fill")), "" !== e.style.fill && (t.fill = e.style.fill), t;
    }
    function r(e) {
      return "none" !== e.fill && "transparent" !== e.fill;
    }
    function o(e, t) {
      return e - (t - e);
    }
    function s(e) {
      for (var t = e.split(/[\s,]+|(?=\s?[+\-])/), n = 0; n < t.length; n++) {
        var i = t[n];
        i.indexOf(".") !== i.lastIndexOf(".") && t.splice(n + 1, 0, "0." + i.split(".")[2]), t[n] = parseFloat(i);
      }
      return t;
    }
    var a = {viewBox: {x: 0, y: 0, width: 0, height: 0}, paths: []};
    return function e(n, l) {
      if (1 === n.nodeType) {
        switch (n.nodeName) {
          case "svg":
            a.viewBox = function (e) {
              var t = e.getAttribute("viewBox");
              t && (t = t.split(/[\s|,]+/));
              return {x: parseInt(t[0]), y: parseInt(t[1]), width: parseInt(t[2]), height: parseInt(t[3])};
            }(n);
            break;
          case "g":
            l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l);
            break;
          case "path":
            l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l), n.hasAttribute("d") && ("none" !== l.fill && "transparent" !== l.fill) && a.paths.push(function (e, n) {
              var i = new THREE.ShapePath;
              i.color.setStyle(n.fill);
              for (var r = new THREE.Vector2, a = new THREE.Vector2, l = e.getAttribute("d").match(/[a-df-z][^a-df-z]*/gi), c = 0, h = l.length; c < h; c++) {
                var u = l[c], d = u.charAt(0), p = u.substr(1).trim();
                switch (d) {
                  case "M":
                    for (var m = s(p), f = 0, g = m.length; f < g; f += 2) r.x = m[f + 0], r.y = m[f + 1], a.x = r.x, a.y = r.y, i.moveTo(r.x, r.y);
                    break;
                  case "H":
                    for (m = s(p), f = 0, g = m.length; f < g; f++) r.x = m[f], a.x = r.x, a.y = r.y, i.lineTo(r.x, r.y);
                    break;
                  case "V":
                    for (m = s(p), f = 0, g = m.length; f < g; f++) r.y = m[f], a.x = r.x, a.y = r.y, i.lineTo(r.x, r.y);
                    break;
                  case "L":
                    for (m = s(p), f = 0, g = m.length; f < g; f += 2) r.x = m[f + 0], r.y = m[f + 1], a.x = r.x, a.y = r.y, i.lineTo(r.x, r.y);
                    break;
                  case "C":
                    for (m = s(p), f = 0, g = m.length; f < g; f += 6) i.bezierCurveTo(m[f + 0], m[f + 1], m[f + 2], m[f + 3], m[f + 4], m[f + 5]), a.x = m[f + 2], a.y = m[f + 3], r.x = m[f + 4], r.y = m[f + 5];
                    break;
                  case "S":
                    m = s(p);
                    i.bezierCurveTo(r.x - (a.x - r.x), r.y - (a.y - r.y), m[0], m[1], m[2], m[3]), a.x = m[0], a.y = m[1], r.x = m[2], r.y = m[3];
                    break;
                  case "Q":
                    m = s(p);
                    i.quadraticCurveTo(m[0], m[1], m[2], m[3]), a.x = m[0], a.y = m[1], r.x = m[2], r.y = m[3];
                    break;
                  case "T":
                    m = s(p);
                    var v = r.x - (a.x - r.x), y = r.y - (a.y - r.y);
                    i.quadraticCurveTo(v, y, m[0], m[1]), a.x = v, a.y = y, r.x = m[0], r.y = m[1];
                    break;
                  case "A":
                    for (m = s(p), f = 0, g = m.length; f < g; f += 7) {
                      var _ = r.clone();
                      r.x = m[f + 5], r.y = m[f + 6], a.x = r.x, a.y = r.y, t(i, m[f], m[f + 1], m[f + 2], m[f + 3], m[f + 4], _, r);
                    }
                    break;
                  case "m":
                    for (m = s(p), f = 0, g = m.length; f < g; f += 2) r.x += m[f + 0], r.y += m[f + 1], a.x = r.x, a.y = r.y, i.moveTo(r.x, r.y);
                    break;
                  case "h":
                    for (m = s(p), f = 0, g = m.length; f < g; f++) r.x += m[f], a.x = r.x, a.y = r.y, i.lineTo(r.x, r.y);
                    break;
                  case "v":
                    for (m = s(p), f = 0, g = m.length; f < g; f++) r.y += m[f], a.x = r.x, a.y = r.y, i.lineTo(r.x, r.y);
                    break;
                  case "l":
                    for (m = s(p), f = 0, g = m.length; f < g; f += 2) r.x += m[f + 0], r.y += m[f + 1], a.x = r.x, a.y = r.y, i.lineTo(r.x, r.y);
                    break;
                  case "c":
                    for (m = s(p), f = 0, g = m.length; f < g; f += 6) i.bezierCurveTo(r.x + m[f + 0], r.y + m[f + 1], r.x + m[f + 2], r.y + m[f + 3], r.x + m[f + 4], r.y + m[f + 5]), a.x = r.x + m[f + 2], a.y = r.y + m[f + 3], r.x += m[f + 4], r.y += m[f + 5];
                    break;
                  case "s":
                    m = s(p);
                    i.bezierCurveTo(r.x - (a.x - r.x), r.y - (a.y - r.y), r.x + m[0], r.y + m[1], r.x + m[2], r.y + m[3]), a.x = r.x + m[0], a.y = r.y + m[1], r.x += m[2], r.y += m[3];
                    break;
                  case "q":
                    m = s(p);
                    i.quadraticCurveTo(r.x + m[0], r.y + m[1], r.x + m[2], r.y + m[3]), a.x = r.x + m[0], a.y = r.y + m[1], r.x += m[2], r.y += m[3];
                    break;
                  case "t":
                    m = s(p), v = r.x - (a.x - r.x), y = r.y - (a.y - r.y);
                    i.quadraticCurveTo(v, y, r.x + m[0], r.y + m[1]), a.x = v, a.y = y, r.x = r.x + m[0], r.y = r.y + m[1];
                    break;
                  case "a":
                    for (m = s(p), f = 0, g = m.length; f < g; f += 7) {
                      _ = r.clone();
                      r.x += m[f + 5], r.y += m[f + 6], a.x = r.x, a.y = r.y, t(i, m[f], m[f + 1], m[f + 2], m[f + 3], m[f + 4], _, r);
                    }
                    break;
                  case "Z":
                  case "z":
                    i.currentPath.autoClose = true;
                    break;
                  default:
                    console.warn(u);
                }
              }
              return i;
            }(n, l));
            break;
          case "rect":
            "none" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && "transparent" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && a.paths.push(function (e, t) {
              var n = parseFloat(e.getAttribute("x") || 0), i = parseFloat(e.getAttribute("y") || 0), r = parseFloat(e.getAttribute("rx") || 0), o = parseFloat(e.getAttribute("ry") || 0), s = parseFloat(e.getAttribute("width")), a = parseFloat(e.getAttribute("height")), l = new THREE.ShapePath;
              l.color.setStyle(t.fill), l.moveTo(n + 2 * r, i), l.lineTo(n + s - 2 * r, i), (0 !== r || 0 !== o) && l.bezierCurveTo(n + s, i, n + s, i, n + s, i + 2 * o);
              l.lineTo(n + s, i + a - 2 * o), (0 !== r || 0 !== o) && l.bezierCurveTo(n + s, i + a, n + s, i + a, n + s - 2 * r, i + a);
              l.lineTo(n + 2 * r, i + a), (0 !== r || 0 !== o) && (l.bezierCurveTo(n, i + a, n, i + a, n, i + a - 2 * o), l.lineTo(n, i + 2 * o), l.bezierCurveTo(n, i, n, i, n + 2 * r, i));
              return l;
            }(n, l));
            break;
          case "polygon":
            "none" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && "transparent" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && a.paths.push(function (e, t) {
              var n = new THREE.ShapePath;
              n.color.setStyle(t.fill);
              var i = 0;
              return e.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g, function (e, t, r) {
                var o = parseFloat(t), s = parseFloat(r);
                0 === i ? n.moveTo(o, s) : n.lineTo(o, s);
                i++;
              }), n.currentPath.autoClose = true, n;
            }(n, l));
            break;
          case "polyline":
            "none" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && "transparent" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && a.paths.push(function (e, t) {
              var n = new THREE.ShapePath;
              n.color.setStyle(t.fill);
              var i = 0;
              return e.getAttribute("points").replace(/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g, function (e, t, r) {
                var o = parseFloat(t), s = parseFloat(r);
                0 === i ? n.moveTo(o, s) : n.lineTo(o, s);
                i++;
              }), n.currentPath.autoClose = false, n;
            }(n, l));
            break;
          case "circle":
            "none" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && "transparent" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && a.paths.push(function (e, t) {
              var n = parseFloat(e.getAttribute("cx")), i = parseFloat(e.getAttribute("cy")), r = parseFloat(e.getAttribute("r")), o = new THREE.Path;
              o.absarc(n, i, r, 0, 2 * Math.PI);
              var s = new THREE.ShapePath;
              return s.color.setStyle(t.fill), s.subPaths.push(o), s;
            }(n, l));
            break;
          case "ellipse":
            "none" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && "transparent" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && a.paths.push(function (e, t) {
              var n = parseFloat(e.getAttribute("cx")), i = parseFloat(e.getAttribute("cy")), r = parseFloat(e.getAttribute("rx")), o = parseFloat(e.getAttribute("ry")), s = new THREE.Path;
              s.absellipse(n, i, r, o, 0, 2 * Math.PI);
              var a = new THREE.ShapePath;
              return a.color.setStyle(t.fill), a.subPaths.push(s), a;
            }(n, l));
            break;
          case "line":
            "none" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && "transparent" !== (l = (l = Object.assign({}, l), n.hasAttribute("fill") && (l.fill = n.getAttribute("fill")), "" !== n.style.fill && (l.fill = n.style.fill), l)).fill && a.paths.push(function (e, t) {
              var n = parseFloat(e.getAttribute("x1")), i = parseFloat(e.getAttribute("y1")), r = parseFloat(e.getAttribute("x2")), o = parseFloat(e.getAttribute("y2")), s = new THREE.ShapePath;
              return s.moveTo(n, i), s.lineTo(r, o), s.currentPath.autoClose = false, s;
            }(n));
        }
        if (a.paths.length && ["path", "rect", "polygon", "polyline", "circle", "ellipse", "line"].includes(n.nodeName)) {
          a.paths[a.paths.length - 1].pathId = n.id ? n.id : Math.random().toString(36).substr(2, 9), a.paths[a.paths.length - 1].pathDataset = n.dataset, "true" === n.getAttribute("physics") && (a.paths[a.paths.length - 1].physics = true);
        }
        for (var c = n.childNodes, h = 0; h < c.length; h++) e(c[h], l);
      }
    }((new DOMParser).parseFromString(e, "image/svg+xml").documentElement, {fill: "#000"}), a;
  }};
}, function (e, t, n) {
  var i = n(218);
  THREE.TTFLoader = function (e) {
    this.manager = undefined !== e ? e : THREE.DefaultLoadingManager, this.reversed = false;
  }, THREE.TTFLoader.prototype = {constructor: THREE.TTFLoader, load: function (e, t, n, i) {
    var r = this, o = new THREE.FileLoader(this.manager);
    o.setPath(this.path), o.setResponseType("arraybuffer"), o.load(e, function (e) {
      t(r.parse(e));
    }, n, i);
  }, setPath: function (e) {
    return this.path = e, this;
  }, parse: function (e) {
    function t(e) {
      var t, n = [];
      e.forEach(function (e) {
        "m" === e.type.toLowerCase() ? (t = [e], n.push(t)) : "z" !== e.type.toLowerCase() && t.push(e);
      });
      var i = [];
      return n.forEach(function (e) {
        var t = {type: "m", x: e[e.length - 1].x, y: e[e.length - 1].y};
        i.push(t);
        for (var n = e.length - 1; n > 0; n--) {
          var r = e[n];
          t = {type: r.type};
          undefined !== r.x2 && undefined !== r.y2 ? (t.x1 = r.x2, t.y1 = r.y2, t.x2 = r.x1, t.y2 = r.y1) : undefined !== r.x1 && undefined !== r.y1 && (t.x1 = r.x1, t.y1 = r.y1), t.x = e[n - 1].x, t.y = e[n - 1].y, i.push(t);
        }
      }), i;
    }
    return undefined === i ? (console.warn("THREE.TTFLoader: The loader requires opentype.js. Make sure it's included before using the loader."), null) : function (e, n) {
      for (var i = Math.round, r = {}, o = 1e5 / (72 * (e.unitsPerEm || 2048)), s = e.encoding.cmap.glyphIndexMap, a = Object.keys(s), l = 0; l < a.length; l++) {
        var c = a[l], h = e.glyphs.glyphs[s[c]];
        if (undefined !== c) {
          var u = {ha: i(h.advanceWidth * o), x_min: i(h.xMin * o), x_max: i(h.xMax * o), o: ""};
          n && (h.path.commands = t(h.path.commands)), h.path.commands.forEach(function (e) {
            "c" === e.type.toLowerCase() && (e.type = "b"), u.o += e.type.toLowerCase() + " ", undefined !== e.x && undefined !== e.y && (u.o += i(e.x * o) + " " + i(e.y * o) + " "), undefined !== e.x1 && undefined !== e.y1 && (u.o += i(e.x1 * o) + " " + i(e.y1 * o) + " "), undefined !== e.x2 && undefined !== e.y2 && (u.o += i(e.x2 * o) + " " + i(e.y2 * o) + " ");
          }), r[String.fromCodePoint(h.unicode)] = u;
        }
      }
      return {glyphs: r, familyName: e.getEnglishName("fullName"), ascender: i(e.ascender * o), descender: i(e.descender * o), underlinePosition: e.tables.post.underlinePosition, underlineThickness: e.tables.post.underlineThickness, boundingBox: {xMin: e.tables.head.xMin, xMax: e.tables.head.xMax, yMin: e.tables.head.yMin, yMax: e.tables.head.yMax}, resolution: 1e3, original_font_information: e.tables.name};
    }(i.parse(e), this.reversed);
  }};
}, function (e, t, n) {
  (function (e) {
    !function (t) {
      "use strict";
      var i, r;
      String.prototype.codePointAt || (i = function () {
        try {
          var e = {}, t = Object.defineProperty, n = t(e, e, e) && t;
        } catch (e) {}
        return n;
      }(), r = function (e) {
        if (null == this) throw TypeError();
        var t = String(this), n = t.length, i = e ? Number(e) : 0;
        if (i != i && (i = 0), !(i < 0 || i >= n)) {
          var r, o = t.charCodeAt(i);
          return o >= 55296 && o <= 56319 && n > i + 1 && (r = t.charCodeAt(i + 1)) >= 56320 && r <= 57343 ? 1024 * (o - 55296) + r - 56320 + 65536 : o;
        }
      }, i ? i(String.prototype, "codePointAt", {value: r, configurable: true, writable: true}) : String.prototype.codePointAt = r);
      var o = 0, s = -3;
      function a() {
        this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
      }
      function l(e, t) {
        this.source = e, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t, this.destLen = 0, this.ltree = new a, this.dtree = new a;
      }
      var c = new a, h = new a, u = new Uint8Array(30), d = new Uint16Array(30), p = new Uint8Array(30), m = new Uint16Array(30), f = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), g = new a, v = new Uint8Array(320);
      function y(e, t, n, i) {
        var r, o;
        for (r = 0; r < n; ++r) e[r] = 0;
        for (r = 0; r < 30 - n; ++r) e[r + n] = r / n | 0;
        for (o = i, r = 0; r < 30; ++r) t[r] = o, o += 1 << e[r];
      }
      var _ = new Uint16Array(16);
      function x(e, t, n, i) {
        var r, o;
        for (r = 0; r < 16; ++r) e.table[r] = 0;
        for (r = 0; r < i; ++r) e.table[t[n + r]]++;
        for (e.table[0] = 0, o = 0, r = 0; r < 16; ++r) _[r] = o, o += e.table[r];
        for (r = 0; r < i; ++r) t[n + r] && (e.trans[_[t[n + r]]++] = r);
      }
      function b(e) {
        e.bitcount-- || (e.tag = e.source[e.sourceIndex++], e.bitcount = 7);
        var t = 1 & e.tag;
        return e.tag >>>= 1, t;
      }
      function w(e, t, n) {
        if (!t) return n;
        for (; e.bitcount < 24;) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
        var i = e.tag & 65535 >>> 16 - t;
        return e.tag >>>= t, e.bitcount -= t, i + n;
      }
      function S(e, t) {
        for (; e.bitcount < 24;) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;
        var n = 0, i = 0, r = 0, o = e.tag;
        do {
          i = 2 * i + (1 & o), o >>>= 1, ++r, n += t.table[r], i -= t.table[r];
        } while (i >= 0);
        return e.tag = o, e.bitcount -= r, t.trans[n + i];
      }
      function E(e, t, n) {
        var i, r, o, s, a, l;
        for (i = w(e, 5, 257), r = w(e, 5, 1), o = w(e, 4, 4), s = 0; s < 19; ++s) v[s] = 0;
        for (s = 0; s < o; ++s) {
          var c = w(e, 3, 0);
          v[f[s]] = c;
        }
        for (x(g, v, 0, 19), a = 0; a < i + r;) {
          var h = S(e, g);
          switch (h) {
            case 16:
              var u = v[a - 1];
              for (l = w(e, 2, 3); l; --l) v[a++] = u;
              break;
            case 17:
              for (l = w(e, 3, 3); l; --l) v[a++] = 0;
              break;
            case 18:
              for (l = w(e, 7, 11); l; --l) v[a++] = 0;
              break;
            default:
              v[a++] = h;
          }
        }
        x(t, v, 0, i), x(n, v, i, r);
      }
      function q(e, t, n) {
        for (;;) {
          var i, r, s, a, l = S(e, t);
          if (256 === l) return o;
          if (l < 256) e.dest[e.destLen++] = l; else for (i = w(e, u[l -= 257], d[l]), r = S(e, n), a = s = e.destLen - w(e, p[r], m[r]); a < s + i; ++a) e.dest[e.destLen++] = e.dest[a];
        }
      }
      function T(e) {
        for (var t, n; e.bitcount > 8;) e.sourceIndex--, e.bitcount -= 8;
        if ((t = 256 * (t = e.source[e.sourceIndex + 1]) + e.source[e.sourceIndex]) !== (65535 & ~(256 * e.source[e.sourceIndex + 3] + e.source[e.sourceIndex + 2]))) return s;
        for (e.sourceIndex += 4, n = t; n; --n) e.dest[e.destLen++] = e.source[e.sourceIndex++];
        return e.bitcount = 0, o;
      }
      (function (e, t) {
        var n;
        for (n = 0; n < 7; ++n) e.table[n] = 0;
        for (e.table[7] = 24, e.table[8] = 152, e.table[9] = 112, n = 0; n < 24; ++n) e.trans[n] = 256 + n;
        for (n = 0; n < 144; ++n) e.trans[24 + n] = n;
        for (n = 0; n < 8; ++n) e.trans[168 + n] = 280 + n;
        for (n = 0; n < 112; ++n) e.trans[176 + n] = 144 + n;
        for (n = 0; n < 5; ++n) t.table[n] = 0;
        for (t.table[5] = 32, n = 0; n < 32; ++n) t.trans[n] = n;
      }(c, h), y(u, d, 4, 3), y(p, m, 2, 1), u[28] = 0, d[28] = 258);
      var A = function (e, t) {
        var n, i, r = new l(e, t);
        do {
          switch (n = b(r), w(r, 2, 0)) {
            case 0:
              i = T(r);
              break;
            case 1:
              i = q(r, c, h);
              break;
            case 2:
              E(r, r.ltree, r.dtree), i = q(r, r.ltree, r.dtree);
              break;
            default:
              i = s;
          }
          if (i !== o) throw new Error("Data error");
        } while (!n);
        return r.destLen < r.dest.length ? "function" == typeof r.dest.slice ? r.dest.slice(0, r.destLen) : r.dest.subarray(0, r.destLen) : r.dest;
      };
      function M(e, t, n, i, r) {
        return Math.pow(1 - r, 3) * e + 3 * Math.pow(1 - r, 2) * r * t + 3 * (1 - r) * Math.pow(r, 2) * n + Math.pow(r, 3) * i;
      }
      function C() {
        this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
      }
      function k() {
        this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
      }
      function R(e) {
        throw new Error(e);
      }
      function L(e, t) {
        e || R(t);
      }
      C.prototype.isEmpty = function () {
        return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
      }, C.prototype.addPoint = function (e, t) {
        "number" == typeof e && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e, this.x2 = e), e < this.x1 && (this.x1 = e), e > this.x2 && (this.x2 = e)), "number" == typeof t && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t, this.y2 = t), t < this.y1 && (this.y1 = t), t > this.y2 && (this.y2 = t));
      }, C.prototype.addX = function (e) {
        this.addPoint(e, null);
      }, C.prototype.addY = function (e) {
        this.addPoint(null, e);
      }, C.prototype.addBezier = function (e, t, n, i, r, o, s, a) {
        var l = [e, t], c = [n, i], h = [r, o], u = [s, a];
        this.addPoint(e, t), this.addPoint(s, a);
        for (var d = 0; d <= 1; d++) {
          var p = 6 * l[d] - 12 * c[d] + 6 * h[d], m = -3 * l[d] + 9 * c[d] - 9 * h[d] + 3 * u[d], f = 3 * c[d] - 3 * l[d];
          if (0 !== m) {
            var g = Math.pow(p, 2) - 4 * f * m;
            if (!(g < 0)) {
              var v = (-p + Math.sqrt(g)) / (2 * m);
              0 < v && v < 1 && (0 === d && this.addX(Math.pow(1 - v, 3) * l[d] + 3 * Math.pow(1 - v, 2) * v * c[d] + 3 * (1 - v) * Math.pow(v, 2) * h[d] + Math.pow(v, 3) * u[d]), 1 === d && this.addY(Math.pow(1 - v, 3) * l[d] + 3 * Math.pow(1 - v, 2) * v * c[d] + 3 * (1 - v) * Math.pow(v, 2) * h[d] + Math.pow(v, 3) * u[d]));
              var y = (-p - Math.sqrt(g)) / (2 * m);
              0 < y && y < 1 && (0 === d && this.addX(Math.pow(1 - y, 3) * l[d] + 3 * Math.pow(1 - y, 2) * y * c[d] + 3 * (1 - y) * Math.pow(y, 2) * h[d] + Math.pow(y, 3) * u[d]), 1 === d && this.addY(Math.pow(1 - y, 3) * l[d] + 3 * Math.pow(1 - y, 2) * y * c[d] + 3 * (1 - y) * Math.pow(y, 2) * h[d] + Math.pow(y, 3) * u[d]));
            }
          } else {
            if (0 === p) continue;
            var _ = -f / p;
            0 < _ && _ < 1 && (0 === d && this.addX(Math.pow(1 - _, 3) * l[d] + 3 * Math.pow(1 - _, 2) * _ * c[d] + 3 * (1 - _) * Math.pow(_, 2) * h[d] + Math.pow(_, 3) * u[d]), 1 === d && this.addY(Math.pow(1 - _, 3) * l[d] + 3 * Math.pow(1 - _, 2) * _ * c[d] + 3 * (1 - _) * Math.pow(_, 2) * h[d] + Math.pow(_, 3) * u[d]));
          }
        }
      }, C.prototype.addQuad = function (e, t, n, i, r, o) {
        var s = e + 0.6666666666666666 * (n - e), a = t + 0.6666666666666666 * (i - t), l = s + 0.3333333333333333 * (r - e), c = a + 0.3333333333333333 * (o - t);
        this.addBezier(e, t, s, a, l, c, r, o);
      }, k.prototype.moveTo = function (e, t) {
        this.commands.push({type: "M", x: e, y: t});
      }, k.prototype.lineTo = function (e, t) {
        this.commands.push({type: "L", x: e, y: t});
      }, k.prototype.curveTo = k.prototype.bezierCurveTo = function (e, t, n, i, r, o) {
        this.commands.push({type: "C", x1: e, y1: t, x2: n, y2: i, x: r, y: o});
      }, k.prototype.quadTo = k.prototype.quadraticCurveTo = function (e, t, n, i) {
        this.commands.push({type: "Q", x1: e, y1: t, x: n, y: i});
      }, k.prototype.close = k.prototype.closePath = function () {
        this.commands.push({type: "Z"});
      }, k.prototype.extend = function (e) {
        if (e.commands) e = e.commands; else if (e instanceof C) {
          var t = e;
          return this.moveTo(t.x1, t.y1), this.lineTo(t.x2, t.y1), this.lineTo(t.x2, t.y2), this.lineTo(t.x1, t.y2), void this.close();
        }
        Array.prototype.push.apply(this.commands, e);
      }, k.prototype.getBoundingBox = function () {
        for (var e = new C, t = 0, n = 0, i = 0, r = 0, o = 0; o < this.commands.length; o++) {
          var s = this.commands[o];
          switch (s.type) {
            case "M":
              e.addPoint(s.x, s.y), t = i = s.x, n = r = s.y;
              break;
            case "L":
              e.addPoint(s.x, s.y), i = s.x, r = s.y;
              break;
            case "Q":
              e.addQuad(i, r, s.x1, s.y1, s.x, s.y), i = s.x, r = s.y;
              break;
            case "C":
              e.addBezier(i, r, s.x1, s.y1, s.x2, s.y2, s.x, s.y), i = s.x, r = s.y;
              break;
            case "Z":
              i = t, r = n;
              break;
            default:
              throw new Error("Unexpected path command " + s.type);
          }
        }
        return e.isEmpty() && e.addPoint(0, 0), e;
      }, k.prototype.draw = function (e) {
        e.beginPath();
        for (var t = 0; t < this.commands.length; t += 1) {
          var n = this.commands[t];
          "M" === n.type ? e.moveTo(n.x, n.y) : "L" === n.type ? e.lineTo(n.x, n.y) : "C" === n.type ? e.bezierCurveTo(n.x1, n.y1, n.x2, n.y2, n.x, n.y) : "Q" === n.type ? e.quadraticCurveTo(n.x1, n.y1, n.x, n.y) : "Z" === n.type && e.closePath();
        }
        this.fill && (e.fillStyle = this.fill, e.fill()), this.stroke && (e.strokeStyle = this.stroke, e.lineWidth = this.strokeWidth, e.stroke());
      }, k.prototype.toPathData = function (e) {
        function t(t) {
          return Math.round(t) === t ? "" + Math.round(t) : t.toFixed(e);
        }
        function n() {
          for (var e = arguments, n = "", i = 0; i < arguments.length; i += 1) {
            var r = e[i];
            r >= 0 && i > 0 && (n += " "), n += t(r);
          }
          return n;
        }
        e = undefined !== e ? e : 2;
        for (var i = "", r = 0; r < this.commands.length; r += 1) {
          var o = this.commands[r];
          "M" === o.type ? i += "M" + n(o.x, o.y) : "L" === o.type ? i += "L" + n(o.x, o.y) : "C" === o.type ? i += "C" + n(o.x1, o.y1, o.x2, o.y2, o.x, o.y) : "Q" === o.type ? i += "Q" + n(o.x1, o.y1, o.x, o.y) : "Z" === o.type && (i += "Z");
        }
        return i;
      }, k.prototype.toSVG = function (e) {
        var t = '<path d="';
        return t += this.toPathData(e), t += '"', this.fill && "black" !== this.fill && (null === this.fill ? t += ' fill="none"' : t += ' fill="' + this.fill + '"'), this.stroke && (t += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t += "/>";
      }, k.prototype.toDOMElement = function (e) {
        var t = this.toPathData(e), n = document.createElementNS("http://www.w3.org/2000/svg", "path");
        return n.setAttribute("d", t), n;
      };
      var P = {fail: R, argument: L, assert: L}, D = {}, O = {}, I = {};
      function B(e) {
        return function () {
          return e;
        };
      }
      O.BYTE = function (e) {
        return P.argument(e >= 0 && e <= 255, "Byte value should be between 0 and 255."), [e];
      }, I.BYTE = B(1), O.CHAR = function (e) {
        return [e.charCodeAt(0)];
      }, I.CHAR = B(1), O.CHARARRAY = function (e) {
        for (var t = [], n = 0; n < e.length; n += 1) t[n] = e.charCodeAt(n);
        return t;
      }, I.CHARARRAY = function (e) {
        return e.length;
      }, O.USHORT = function (e) {
        return [e >> 8 & 255, 255 & e];
      }, I.USHORT = B(2), O.SHORT = function (e) {
        return e >= 32768 && (e = -(65536 - e)), [e >> 8 & 255, 255 & e];
      }, I.SHORT = B(2), O.UINT24 = function (e) {
        return [e >> 16 & 255, e >> 8 & 255, 255 & e];
      }, I.UINT24 = B(3), O.ULONG = function (e) {
        return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
      }, I.ULONG = B(4), O.LONG = function (e) {
        return e >= 2147483648 && (e = -(4294967296 - e)), [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
      }, I.LONG = B(4), O.FIXED = O.ULONG, I.FIXED = I.ULONG, O.FWORD = O.SHORT, I.FWORD = I.SHORT, O.UFWORD = O.USHORT, I.UFWORD = I.USHORT, O.LONGDATETIME = function (e) {
        return [0, 0, 0, 0, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
      }, I.LONGDATETIME = B(8), O.TAG = function (e) {
        return P.argument(4 === e.length, "Tag should be exactly 4 ASCII characters."), [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)];
      }, I.TAG = B(4), O.Card8 = O.BYTE, I.Card8 = I.BYTE, O.Card16 = O.USHORT, I.Card16 = I.USHORT, O.OffSize = O.BYTE, I.OffSize = I.BYTE, O.SID = O.USHORT, I.SID = I.USHORT, O.NUMBER = function (e) {
        return e >= -107 && e <= 107 ? [e + 139] : e >= 108 && e <= 1131 ? [247 + ((e -= 108) >> 8), 255 & e] : e >= -1131 && e <= -108 ? [251 + ((e = -e - 108) >> 8), 255 & e] : e >= -32768 && e <= 32767 ? O.NUMBER16(e) : O.NUMBER32(e);
      }, I.NUMBER = function (e) {
        return O.NUMBER(e).length;
      }, O.NUMBER16 = function (e) {
        return [28, e >> 8 & 255, 255 & e];
      }, I.NUMBER16 = B(3), O.NUMBER32 = function (e) {
        return [29, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
      }, I.NUMBER32 = B(5), O.REAL = function (e) {
        var t = e.toString(), n = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);
        if (n) {
          var i = parseFloat("1e" + ((n[2] ? +n[2] : 0) + n[1].length));
          t = (Math.round(e * i) / i).toString();
        }
        for (var r = "", o = 0, s = t.length; o < s; o += 1) {
          var a = t[o];
          r += "e" === a ? "-" === t[++o] ? "c" : "b" : "." === a ? "a" : "-" === a ? "e" : a;
        }
        for (var l = [30], c = 0, h = (r += 1 & r.length ? "f" : "ff").length; c < h; c += 2) l.push(parseInt(r.substr(c, 2), 16));
        return l;
      }, I.REAL = function (e) {
        return O.REAL(e).length;
      }, O.NAME = O.CHARARRAY, I.NAME = I.CHARARRAY, O.STRING = O.CHARARRAY, I.STRING = I.CHARARRAY, D.UTF8 = function (e, t, n) {
        for (var i = [], r = n, o = 0; o < r; o++, t += 1) i[o] = e.getUint8(t);
        return String.fromCharCode.apply(null, i);
      }, D.UTF16 = function (e, t, n) {
        for (var i = [], r = n / 2, o = 0; o < r; o++, t += 2) i[o] = e.getUint16(t);
        return String.fromCharCode.apply(null, i);
      }, O.UTF16 = function (e) {
        for (var t = [], n = 0; n < e.length; n += 1) {
          var i = e.charCodeAt(n);
          t[t.length] = i >> 8 & 255, t[t.length] = 255 & i;
        }
        return t;
      }, I.UTF16 = function (e) {
        return 2 * e.length;
      };
      var F = {"x-mac-croatian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ", "x-mac-cyrillic": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю", "x-mac-gaelic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ", "x-mac-greek": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­", "x-mac-icelandic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-inuit": "ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł", "x-mac-ce": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ", macintosh: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-romanian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-turkish": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};
      D.MACSTRING = function (e, t, n, i) {
        var r = F[i];
        if (undefined !== r) {
          for (var o = "", s = 0; s < n; s++) {
            var a = e.getUint8(t + s);
            o += a <= 127 ? String.fromCharCode(a) : r[127 & a];
          }
          return o;
        }
      };
      var z, N = "function" == typeof WeakMap && new WeakMap;
      function U(e) {
        return e >= -128 && e <= 127;
      }
      function V(e, t, n) {
        for (var i = 0, r = e.length; t < r && i < 64 && 0 === e[t];) ++t, ++i;
        return n.push(128 | i - 1), t;
      }
      function G(e, t, n) {
        for (var i = 0, r = e.length, o = t; o < r && i < 64;) {
          var s = e[o];
          if (!(s >= -128 && s <= 127)) break;
          if (0 === s && o + 1 < r && 0 === e[o + 1]) break;
          ++o, ++i;
        }
        n.push(i - 1);
        for (var a = t; a < o; ++a) n.push(e[a] + 256 & 255);
        return o;
      }
      function H(e, t, n) {
        for (var i = 0, r = e.length, o = t; o < r && i < 64;) {
          var s = e[o];
          if (0 === s) break;
          if (s >= -128 && s <= 127 && o + 1 < r && (e[o + 1] >= -128 && e[o + 1] <= 127)) break;
          ++o, ++i;
        }
        n.push(64 | i - 1);
        for (var a = t; a < o; ++a) {
          var l = e[a];
          n.push(l + 65536 >> 8 & 255, l + 256 & 255);
        }
        return o;
      }
      O.MACSTRING = function (e, t) {
        var n = function (e) {
          if (!z) for (var t in z = {}, F) z[t] = new String(t);
          var n = z[e];
          if (undefined !== n) {
            if (N) {
              var i = N.get(n);
              if (undefined !== i) return i;
            }
            var r = F[e];
            if (undefined !== r) {
              for (var o = {}, s = 0; s < r.length; s++) o[r.charCodeAt(s)] = s + 128;
              return N && N.set(n, o), o;
            }
          }
        }(t);
        if (undefined !== n) {
          for (var i = [], r = 0; r < e.length; r++) {
            var o = e.charCodeAt(r);
            if (o >= 128 && undefined === (o = n[o])) return;
            i[r] = o;
          }
          return i;
        }
      }, I.MACSTRING = function (e, t) {
        var n = O.MACSTRING(e, t);
        return undefined !== n ? n.length : 0;
      }, O.VARDELTAS = function (e) {
        for (var t = 0, n = []; t < e.length;) {
          var i = e[t];
          t = 0 === i ? V(e, t, n) : i >= -128 && i <= 127 ? G(e, t, n) : H(e, t, n);
        }
        return n;
      }, O.INDEX = function (e) {
        for (var t = 1, n = [t], i = [], r = 0; r < e.length; r += 1) {
          var o = O.OBJECT(e[r]);
          Array.prototype.push.apply(i, o), t += o.length, n.push(t);
        }
        if (0 === i.length) return [0, 0];
        for (var s = [], a = 1 + Math.floor(Math.log(t) / Math.log(2)) / 8 | 0, l = [undefined, O.BYTE, O.USHORT, O.UINT24, O.ULONG][a], c = 0; c < n.length; c += 1) {
          var h = l(n[c]);
          Array.prototype.push.apply(s, h);
        }
        return Array.prototype.concat(O.Card16(e.length), O.OffSize(a), s, i);
      }, I.INDEX = function (e) {
        return O.INDEX(e).length;
      }, O.DICT = function (e) {
        for (var t = [], n = Object.keys(e), i = n.length, r = 0; r < i; r += 1) {
          var o = parseInt(n[r], 0), s = e[o];
          t = (t = t.concat(O.OPERAND(s.value, s.type))).concat(O.OPERATOR(o));
        }
        return t;
      }, I.DICT = function (e) {
        return O.DICT(e).length;
      }, O.OPERATOR = function (e) {
        return e < 1200 ? [e] : [12, e - 1200];
      }, O.OPERAND = function (e, t) {
        var n = [];
        if (Array.isArray(t)) for (var i = 0; i < t.length; i += 1) P.argument(e.length === t.length, "Not enough arguments given for type" + t), n = n.concat(O.OPERAND(e[i], t[i])); else if ("SID" === t) n = n.concat(O.NUMBER(e)); else if ("offset" === t) n = n.concat(O.NUMBER32(e)); else if ("number" === t) n = n.concat(O.NUMBER(e)); else {
          if ("real" !== t) throw new Error("Unknown operand type " + t);
          n = n.concat(O.REAL(e));
        }
        return n;
      }, O.OP = O.BYTE, I.OP = I.BYTE;
      var j = "function" == typeof WeakMap && new WeakMap;
      function $(e, t, n) {
        for (var i = 0; i < t.length; i += 1) {
          var r = t[i];
          this[r.name] = r.value;
        }
        if (this.tableName = e, this.fields = t, n) for (var o = Object.keys(n), s = 0; s < o.length; s += 1) {
          var a = o[s], l = n[a];
          undefined !== this[a] && (this[a] = l);
        }
      }
      function W(e, t, n) {
        undefined === n && (n = t.length);
        var i = new Array(t.length + 1);
        i[0] = {name: e + "Count", type: "USHORT", value: n};
        for (var r = 0; r < t.length; r++) i[r + 1] = {name: e + r, type: "USHORT", value: t[r]};
        return i;
      }
      function X(e, t, n) {
        var i = t.length, r = new Array(i + 1);
        r[0] = {name: e + "Count", type: "USHORT", value: i};
        for (var o = 0; o < i; o++) r[o + 1] = {name: e + o, type: "TABLE", value: n(t[o], o)};
        return r;
      }
      function Y(e, t, n) {
        var i = t.length, r = [];
        r[0] = {name: e + "Count", type: "USHORT", value: i};
        for (var o = 0; o < i; o++) r = r.concat(n(t[o], o));
        return r;
      }
      function J(e) {
        1 === e.format ? $.call(this, "coverageTable", [{name: "coverageFormat", type: "USHORT", value: 1}].concat(W("glyph", e.glyphs))) : P.assert(false, "Can't create coverage table format 2 yet.");
      }
      function K(e) {
        $.call(this, "scriptListTable", Y("scriptRecord", e, function (e, t) {
          var n = e.script, i = n.defaultLangSys;
          return P.assert(!!i, "Unable to write GSUB: script " + e.tag + " has no default language system."), [{name: "scriptTag" + t, type: "TAG", value: e.tag}, {name: "script" + t, type: "TABLE", value: new $("scriptTable", [{name: "defaultLangSys", type: "TABLE", value: new $("defaultLangSys", [{name: "lookupOrder", type: "USHORT", value: 0}, {name: "reqFeatureIndex", type: "USHORT", value: i.reqFeatureIndex}].concat(W("featureIndex", i.featureIndexes)))}].concat(Y("langSys", n.langSysRecords, function (e, t) {
            var n = e.langSys;
            return [{name: "langSysTag" + t, type: "TAG", value: e.tag}, {name: "langSys" + t, type: "TABLE", value: new $("langSys", [{name: "lookupOrder", type: "USHORT", value: 0}, {name: "reqFeatureIndex", type: "USHORT", value: n.reqFeatureIndex}].concat(W("featureIndex", n.featureIndexes)))}];
          })))}];
        }));
      }
      function Z(e) {
        $.call(this, "featureListTable", Y("featureRecord", e, function (e, t) {
          var n = e.feature;
          return [{name: "featureTag" + t, type: "TAG", value: e.tag}, {name: "feature" + t, type: "TABLE", value: new $("featureTable", [{name: "featureParams", type: "USHORT", value: n.featureParams}].concat(W("lookupListIndex", n.lookupListIndexes)))}];
        }));
      }
      function Q(e, t) {
        $.call(this, "lookupListTable", X("lookup", e, function (e) {
          var n = t[e.lookupType];
          return P.assert(!!n, "Unable to write GSUB lookup type " + e.lookupType + " tables."), new $("lookupTable", [{name: "lookupType", type: "USHORT", value: e.lookupType}, {name: "lookupFlag", type: "USHORT", value: e.lookupFlag}].concat(X("subtable", e.subtables, n)));
        }));
      }
      O.CHARSTRING = function (e) {
        if (j) {
          var t = j.get(e);
          if (undefined !== t) return t;
        }
        for (var n = [], i = e.length, r = 0; r < i; r += 1) {
          var o = e[r];
          n = n.concat(O[o.type](o.value));
        }
        return j && j.set(e, n), n;
      }, I.CHARSTRING = function (e) {
        return O.CHARSTRING(e).length;
      }, O.OBJECT = function (e) {
        var t = O[e.type];
        return P.argument(undefined !== t, "No encoding function for type " + e.type), t(e.value);
      }, I.OBJECT = function (e) {
        var t = I[e.type];
        return P.argument(undefined !== t, "No sizeOf function for type " + e.type), t(e.value);
      }, O.TABLE = function (e) {
        for (var t = [], n = e.fields.length, i = [], r = [], o = 0; o < n; o += 1) {
          var s = e.fields[o], a = O[s.type];
          P.argument(undefined !== a, "No encoding function for field type " + s.type + " (" + s.name + ")");
          var l = e[s.name];
          undefined === l && (l = s.value);
          var c = a(l);
          "TABLE" === s.type ? (r.push(t.length), t = t.concat([0, 0]), i.push(c)) : t = t.concat(c);
        }
        for (var h = 0; h < i.length; h += 1) {
          var u = r[h], d = t.length;
          P.argument(d < 65536, "Table " + e.tableName + " too big."), t[u] = d >> 8, t[u + 1] = 255 & d, t = t.concat(i[h]);
        }
        return t;
      }, I.TABLE = function (e) {
        for (var t = 0, n = e.fields.length, i = 0; i < n; i += 1) {
          var r = e.fields[i], o = I[r.type];
          P.argument(undefined !== o, "No sizeOf function for field type " + r.type + " (" + r.name + ")");
          var s = e[r.name];
          undefined === s && (s = r.value), t += o(s), "TABLE" === r.type && (t += 2);
        }
        return t;
      }, O.RECORD = O.TABLE, I.RECORD = I.TABLE, O.LITERAL = function (e) {
        return e;
      }, I.LITERAL = function (e) {
        return e.length;
      }, $.prototype.encode = function () {
        return O.TABLE(this);
      }, $.prototype.sizeOf = function () {
        return I.TABLE(this);
      }, J.prototype = Object.create($.prototype), J.prototype.constructor = J, K.prototype = Object.create($.prototype), K.prototype.constructor = K, Z.prototype = Object.create($.prototype), Z.prototype.constructor = Z, Q.prototype = Object.create($.prototype), Q.prototype.constructor = Q;
      var ee = {Table: $, Record: $, Coverage: J, ScriptList: K, FeatureList: Z, LookupList: Q, ushortList: W, tableList: X, recordList: Y};
      function te(e, t) {
        return e.getUint8(t);
      }
      function ne(e, t) {
        return e.getUint16(t, false);
      }
      function ie(e, t) {
        return e.getUint32(t, false);
      }
      function re(e, t) {
        return e.getInt16(t, false) + e.getUint16(t + 2, false) / 65535;
      }
      var oe = {byte: 1, uShort: 2, short: 2, uLong: 4, fixed: 4, longDateTime: 8, tag: 4};
      function se(e, t) {
        this.data = e, this.offset = t, this.relativeOffset = 0;
      }
      se.prototype.parseByte = function () {
        var e = this.data.getUint8(this.offset + this.relativeOffset);
        return this.relativeOffset += 1, e;
      }, se.prototype.parseChar = function () {
        var e = this.data.getInt8(this.offset + this.relativeOffset);
        return this.relativeOffset += 1, e;
      }, se.prototype.parseCard8 = se.prototype.parseByte, se.prototype.parseUShort = function () {
        var e = this.data.getUint16(this.offset + this.relativeOffset);
        return this.relativeOffset += 2, e;
      }, se.prototype.parseCard16 = se.prototype.parseUShort, se.prototype.parseSID = se.prototype.parseUShort, se.prototype.parseOffset16 = se.prototype.parseUShort, se.prototype.parseShort = function () {
        var e = this.data.getInt16(this.offset + this.relativeOffset);
        return this.relativeOffset += 2, e;
      }, se.prototype.parseF2Dot14 = function () {
        var e = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
        return this.relativeOffset += 2, e;
      }, se.prototype.parseULong = function () {
        var e = this.data.getUint32(this.offset + this.relativeOffset, false);
        return this.relativeOffset += 4, e;
      }, se.prototype.parseOffset32 = se.prototype.parseULong, se.prototype.parseFixed = function () {
        var e = this.data.getInt16(this.offset + this.relativeOffset, false) + this.data.getUint16(this.offset + this.relativeOffset + 2, false) / 65535;
        return this.relativeOffset += 4, e;
      }, se.prototype.parseString = function (e) {
        var t = this.data, n = this.offset + this.relativeOffset, i = "";
        this.relativeOffset += e;
        for (var r = 0; r < e; r++) i += String.fromCharCode(t.getUint8(n + r));
        return i;
      }, se.prototype.parseTag = function () {
        return this.parseString(4);
      }, se.prototype.parseLongDateTime = function () {
        var e = this.data.getUint32(this.offset + this.relativeOffset + 4, false);
        return e -= 2082844800, this.relativeOffset += 8, e;
      }, se.prototype.parseVersion = function (e) {
        var t = this.data.getUint16(this.offset + this.relativeOffset, false), n = this.data.getUint16(this.offset + this.relativeOffset + 2, false);
        return this.relativeOffset += 4, undefined === e && (e = 4096), t + n / e / 10;
      }, se.prototype.skip = function (e, t) {
        undefined === t && (t = 1), this.relativeOffset += oe[e] * t;
      }, se.prototype.parseULongList = function (e) {
        undefined === e && (e = this.parseULong());
        for (var t = new Array(e), n = this.data, i = this.offset + this.relativeOffset, r = 0; r < e; r++) t[r] = n.getUint32(i), i += 4;
        return this.relativeOffset += 4 * e, t;
      }, se.prototype.parseOffset16List = se.prototype.parseUShortList = function (e) {
        undefined === e && (e = this.parseUShort());
        for (var t = new Array(e), n = this.data, i = this.offset + this.relativeOffset, r = 0; r < e; r++) t[r] = n.getUint16(i), i += 2;
        return this.relativeOffset += 2 * e, t;
      }, se.prototype.parseShortList = function (e) {
        for (var t = new Array(e), n = this.data, i = this.offset + this.relativeOffset, r = 0; r < e; r++) t[r] = n.getInt16(i), i += 2;
        return this.relativeOffset += 2 * e, t;
      }, se.prototype.parseByteList = function (e) {
        for (var t = new Array(e), n = this.data, i = this.offset + this.relativeOffset, r = 0; r < e; r++) t[r] = n.getUint8(i++);
        return this.relativeOffset += e, t;
      }, se.prototype.parseList = function (e, t) {
        t || (t = e, e = this.parseUShort());
        for (var n = new Array(e), i = 0; i < e; i++) n[i] = t.call(this);
        return n;
      }, se.prototype.parseList32 = function (e, t) {
        t || (t = e, e = this.parseULong());
        for (var n = new Array(e), i = 0; i < e; i++) n[i] = t.call(this);
        return n;
      }, se.prototype.parseRecordList = function (e, t) {
        t || (t = e, e = this.parseUShort());
        for (var n = new Array(e), i = Object.keys(t), r = 0; r < e; r++) {
          for (var o = {}, s = 0; s < i.length; s++) {
            var a = i[s], l = t[a];
            o[a] = l.call(this);
          }
          n[r] = o;
        }
        return n;
      }, se.prototype.parseRecordList32 = function (e, t) {
        t || (t = e, e = this.parseULong());
        for (var n = new Array(e), i = Object.keys(t), r = 0; r < e; r++) {
          for (var o = {}, s = 0; s < i.length; s++) {
            var a = i[s], l = t[a];
            o[a] = l.call(this);
          }
          n[r] = o;
        }
        return n;
      }, se.prototype.parseStruct = function (e) {
        if ("function" == typeof e) return e.call(this);
        for (var t = Object.keys(e), n = {}, i = 0; i < t.length; i++) {
          var r = t[i], o = e[r];
          n[r] = o.call(this);
        }
        return n;
      }, se.prototype.parseValueRecord = function (e) {
        if (undefined === e && (e = this.parseUShort()), 0 !== e) {
          var t = {};
          return 1 & e && (t.xPlacement = this.parseShort()), 2 & e && (t.yPlacement = this.parseShort()), 4 & e && (t.xAdvance = this.parseShort()), 8 & e && (t.yAdvance = this.parseShort()), 16 & e && (t.xPlaDevice = undefined, this.parseShort()), 32 & e && (t.yPlaDevice = undefined, this.parseShort()), 64 & e && (t.xAdvDevice = undefined, this.parseShort()), 128 & e && (t.yAdvDevice = undefined, this.parseShort()), t;
        }
      }, se.prototype.parseValueRecordList = function () {
        for (var e = this.parseUShort(), t = this.parseUShort(), n = new Array(t), i = 0; i < t; i++) n[i] = this.parseValueRecord(e);
        return n;
      }, se.prototype.parsePointer = function (e) {
        var t = this.parseOffset16();
        if (t > 0) return new se(this.data, this.offset + t).parseStruct(e);
      }, se.prototype.parsePointer32 = function (e) {
        var t = this.parseOffset32();
        if (t > 0) return new se(this.data, this.offset + t).parseStruct(e);
      }, se.prototype.parseListOfLists = function (e) {
        for (var t = this.parseOffset16List(), n = t.length, i = this.relativeOffset, r = new Array(n), o = 0; o < n; o++) {
          var s = t[o];
          if (0 !== s) if (this.relativeOffset = s, e) {
            for (var a = this.parseOffset16List(), l = new Array(a.length), c = 0; c < a.length; c++) this.relativeOffset = s + a[c], l[c] = e.call(this);
            r[o] = l;
          } else r[o] = this.parseUShortList(); else r[o] = undefined;
        }
        return this.relativeOffset = i, r;
      }, se.prototype.parseCoverage = function () {
        var e = this.offset + this.relativeOffset, t = this.parseUShort(), n = this.parseUShort();
        if (1 === t) return {format: 1, glyphs: this.parseUShortList(n)};
        if (2 === t) {
          for (var i = new Array(n), r = 0; r < n; r++) i[r] = {start: this.parseUShort(), end: this.parseUShort(), index: this.parseUShort()};
          return {format: 2, ranges: i};
        }
        throw new Error("0x" + e.toString(16) + ": Coverage format must be 1 or 2.");
      }, se.prototype.parseClassDef = function () {
        var e = this.offset + this.relativeOffset, t = this.parseUShort();
        if (1 === t) return {format: 1, startGlyph: this.parseUShort(), classes: this.parseUShortList()};
        if (2 === t) return {format: 2, ranges: this.parseRecordList({start: se.uShort, end: se.uShort, classId: se.uShort})};
        throw new Error("0x" + e.toString(16) + ": ClassDef format must be 1 or 2.");
      }, se.list = function (e, t) {
        return function () {
          return this.parseList(e, t);
        };
      }, se.list32 = function (e, t) {
        return function () {
          return this.parseList32(e, t);
        };
      }, se.recordList = function (e, t) {
        return function () {
          return this.parseRecordList(e, t);
        };
      }, se.recordList32 = function (e, t) {
        return function () {
          return this.parseRecordList32(e, t);
        };
      }, se.pointer = function (e) {
        return function () {
          return this.parsePointer(e);
        };
      }, se.pointer32 = function (e) {
        return function () {
          return this.parsePointer32(e);
        };
      }, se.tag = se.prototype.parseTag, se.byte = se.prototype.parseByte, se.uShort = se.offset16 = se.prototype.parseUShort, se.uShortList = se.prototype.parseUShortList, se.uLong = se.offset32 = se.prototype.parseULong, se.uLongList = se.prototype.parseULongList, se.struct = se.prototype.parseStruct, se.coverage = se.prototype.parseCoverage, se.classDef = se.prototype.parseClassDef;
      var ae = {reserved: se.uShort, reqFeatureIndex: se.uShort, featureIndexes: se.uShortList};
      se.prototype.parseScriptList = function () {
        return this.parsePointer(se.recordList({tag: se.tag, script: se.pointer({defaultLangSys: se.pointer(ae), langSysRecords: se.recordList({tag: se.tag, langSys: se.pointer(ae)})})})) || [];
      }, se.prototype.parseFeatureList = function () {
        return this.parsePointer(se.recordList({tag: se.tag, feature: se.pointer({featureParams: se.offset16, lookupListIndexes: se.uShortList})})) || [];
      }, se.prototype.parseLookupList = function (e) {
        return this.parsePointer(se.list(se.pointer(function () {
          var t = this.parseUShort();
          P.argument(1 <= t && t <= 9, "GPOS/GSUB lookup type " + t + " unknown.");
          var n = this.parseUShort(), i = 16 & n;
          return {lookupType: t, lookupFlag: n, subtables: this.parseList(se.pointer(e[t])), markFilteringSet: i ? this.parseUShort() : undefined};
        }))) || [];
      }, se.prototype.parseFeatureVariationsList = function () {
        return this.parsePointer32(function () {
          var e = this.parseUShort(), t = this.parseUShort();
          return P.argument(1 === e && t < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({conditionSetOffset: se.offset32, featureTableSubstitutionOffset: se.offset32});
        }) || [];
      };
      var le = {getByte: te, getCard8: te, getUShort: ne, getCard16: ne, getShort: function (e, t) {
        return e.getInt16(t, false);
      }, getULong: ie, getFixed: re, getTag: function (e, t) {
        for (var n = "", i = t; i < t + 4; i += 1) n += String.fromCharCode(e.getInt8(i));
        return n;
      }, getOffset: function (e, t, n) {
        for (var i = 0, r = 0; r < n; r += 1) i <<= 8, i += e.getUint8(t + r);
        return i;
      }, getBytes: function (e, t, n) {
        for (var i = [], r = t; r < n; r += 1) i.push(e.getUint8(r));
        return i;
      }, bytesToString: function (e) {
        for (var t = "", n = 0; n < e.length; n += 1) t += String.fromCharCode(e[n]);
        return t;
      }, Parser: se};
      function ce(e, t, n) {
        e.segments.push({end: t, start: t, delta: -(t - n), offset: 0, glyphIndex: n});
      }
      var he = {parse: function (e, t) {
        var n = {};
        n.version = le.getUShort(e, t), P.argument(0 === n.version, "cmap table version should be 0."), n.numTables = le.getUShort(e, t + 2);
        for (var i = -1, r = n.numTables - 1; r >= 0; r -= 1) {
          var o = le.getUShort(e, t + 4 + 8 * r), s = le.getUShort(e, t + 4 + 8 * r + 2);
          if (3 === o && (0 === s || 1 === s || 10 === s) || 0 === o && (0 === s || 1 === s || 2 === s || 3 === s || 4 === s)) {
            i = le.getULong(e, t + 4 + 8 * r + 4);
            break;
          }
        }
        if (-1 === i) throw new Error("No valid cmap sub-tables found.");
        var a = new le.Parser(e, t + i);
        if (n.format = a.parseUShort(), 12 === n.format) !function (e, t) {
          var n;
          t.parseUShort(), e.length = t.parseULong(), e.language = t.parseULong(), e.groupCount = n = t.parseULong(), e.glyphIndexMap = {};
          for (var i = 0; i < n; i += 1) for (var r = t.parseULong(), o = t.parseULong(), s = t.parseULong(), a = r; a <= o; a += 1) e.glyphIndexMap[a] = s, s++;
        }(n, a); else {
          if (4 !== n.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + n.format + ").");
          !function (e, t, n, i, r) {
            var o;
            e.length = t.parseUShort(), e.language = t.parseUShort(), e.segCount = o = t.parseUShort() >> 1, t.skip("uShort", 3), e.glyphIndexMap = {};
            for (var s = new le.Parser(n, i + r + 14), a = new le.Parser(n, i + r + 16 + 2 * o), l = new le.Parser(n, i + r + 16 + 4 * o), c = new le.Parser(n, i + r + 16 + 6 * o), h = i + r + 16 + 8 * o, u = 0; u < o - 1; u += 1) for (var d = undefined, p = s.parseUShort(), m = a.parseUShort(), f = l.parseShort(), g = c.parseUShort(), v = m; v <= p; v += 1) 0 !== g ? (h = c.offset + c.relativeOffset - 2, h += g, h += 2 * (v - m), 0 !== (d = le.getUShort(n, h)) && (d = d + f & 65535)) : d = v + f & 65535, e.glyphIndexMap[v] = d;
          }(n, a, e, t, i);
        }
        return n;
      }, make: function (e) {
        var t, n = true;
        for (t = e.length - 1; t > 0; t -= 1) if (e.get(t).unicode > 65535) {
          console.log("Adding CMAP format 12 (needed!)"), n = false;
          break;
        }
        var i = [{name: "version", type: "USHORT", value: 0}, {name: "numTables", type: "USHORT", value: n ? 1 : 2}, {name: "platformID", type: "USHORT", value: 3}, {name: "encodingID", type: "USHORT", value: 1}, {name: "offset", type: "ULONG", value: n ? 12 : 20}];
        n || (i = i.concat([{name: "cmap12PlatformID", type: "USHORT", value: 3}, {name: "cmap12EncodingID", type: "USHORT", value: 10}, {name: "cmap12Offset", type: "ULONG", value: 0}])), i = i.concat([{name: "format", type: "USHORT", value: 4}, {name: "cmap4Length", type: "USHORT", value: 0}, {name: "language", type: "USHORT", value: 0}, {name: "segCountX2", type: "USHORT", value: 0}, {name: "searchRange", type: "USHORT", value: 0}, {name: "entrySelector", type: "USHORT", value: 0}, {name: "rangeShift", type: "USHORT", value: 0}]);
        var r = new ee.Table("cmap", i);
        for (r.segments = [], t = 0; t < e.length; t += 1) {
          for (var o = e.get(t), s = 0; s < o.unicodes.length; s += 1) ce(r, o.unicodes[s], t);
          r.segments = r.segments.sort(function (e, t) {
            return e.start - t.start;
          });
        }
        !function (e) {
          e.segments.push({end: 65535, start: 65535, delta: 1, offset: 0});
        }(r);
        var a = r.segments.length, l = 0, c = [], h = [], u = [], d = [], p = [], m = [];
        for (t = 0; t < a; t += 1) {
          var f = r.segments[t];
          f.end <= 65535 && f.start <= 65535 ? (c = c.concat({name: "end_" + t, type: "USHORT", value: f.end}), h = h.concat({name: "start_" + t, type: "USHORT", value: f.start}), u = u.concat({name: "idDelta_" + t, type: "SHORT", value: f.delta}), d = d.concat({name: "idRangeOffset_" + t, type: "USHORT", value: f.offset}), undefined !== f.glyphId && (p = p.concat({name: "glyph_" + t, type: "USHORT", value: f.glyphId}))) : l += 1, n || undefined === f.glyphIndex || (m = (m = (m = m.concat({name: "cmap12Start_" + t, type: "ULONG", value: f.start})).concat({name: "cmap12End_" + t, type: "ULONG", value: f.end})).concat({name: "cmap12Glyph_" + t, type: "ULONG", value: f.glyphIndex}));
        }
        if (r.segCountX2 = 2 * (a - l), r.searchRange = 2 * Math.pow(2, Math.floor(Math.log(a - l) / Math.log(2))), r.entrySelector = Math.log(r.searchRange / 2) / Math.log(2), r.rangeShift = r.segCountX2 - r.searchRange, r.fields = r.fields.concat(c), r.fields.push({name: "reservedPad", type: "USHORT", value: 0}), r.fields = r.fields.concat(h), r.fields = r.fields.concat(u), r.fields = r.fields.concat(d), r.fields = r.fields.concat(p), r.cmap4Length = 14 + 2 * c.length + 2 + 2 * h.length + 2 * u.length + 2 * d.length + 2 * p.length, !n) {
          var g = 16 + 4 * m.length;
          r.cmap12Offset = 20 + r.cmap4Length, r.fields = r.fields.concat([{name: "cmap12Format", type: "USHORT", value: 12}, {name: "cmap12Reserved", type: "USHORT", value: 0}, {name: "cmap12Length", type: "ULONG", value: g}, {name: "cmap12Language", type: "ULONG", value: 0}, {name: "cmap12nGroups", type: "ULONG", value: m.length / 3}]), r.fields = r.fields.concat(m);
        }
        return r;
      }}, ue = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], de = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], pe = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], me = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
      function fe(e) {
        this.font = e;
      }
      function ge(e) {
        this.cmap = e;
      }
      function ve(e, t) {
        this.encoding = e, this.charset = t;
      }
      function ye(e) {
        switch (e.version) {
          case 1:
            this.names = me.slice();
            break;
          case 2:
            this.names = new Array(e.numberOfGlyphs);
            for (var t = 0; t < e.numberOfGlyphs; t++) e.glyphNameIndex[t] < me.length ? this.names[t] = me[e.glyphNameIndex[t]] : this.names[t] = e.names[e.glyphNameIndex[t] - me.length];
            break;
          case 2.5:
            this.names = new Array(e.numberOfGlyphs);
            for (var n = 0; n < e.numberOfGlyphs; n++) this.names[n] = me[n + e.glyphNameIndex[n]];
            break;
          case 3:
          default:
            this.names = [];
        }
      }
      function _e(e, t) {
        t.lowMemory ? function (e) {
          e._IndexToUnicodeMap = {};
          for (var t = e.tables.cmap.glyphIndexMap, n = Object.keys(t), i = 0; i < n.length; i += 1) {
            var r = n[i], o = t[r];
            undefined === e._IndexToUnicodeMap[o] ? e._IndexToUnicodeMap[o] = {unicodes: [parseInt(r)]} : e._IndexToUnicodeMap[o].unicodes.push(parseInt(r));
          }
        }(e) : function (e) {
          for (var t, n = e.tables.cmap.glyphIndexMap, i = Object.keys(n), r = 0; r < i.length; r += 1) {
            var o = i[r], s = n[o];
            (t = e.glyphs.get(s)).addUnicode(parseInt(o));
          }
          for (var a = 0; a < e.glyphs.length; a += 1) t = e.glyphs.get(a), e.cffEncoding ? e.isCIDFont ? t.name = "gid" + a : t.name = e.cffEncoding.charset[a] : e.glyphNames.names && (t.name = e.glyphNames.glyphIndexToName(a));
        }(e);
      }
      fe.prototype.charToGlyphIndex = function (e) {
        var t = e.codePointAt(0), n = this.font.glyphs;
        if (n) for (var i = 0; i < n.length; i += 1) for (var r = n.get(i), o = 0; o < r.unicodes.length; o += 1) if (r.unicodes[o] === t) return i;
        return null;
      }, ge.prototype.charToGlyphIndex = function (e) {
        return this.cmap.glyphIndexMap[e.codePointAt(0)] || 0;
      }, ve.prototype.charToGlyphIndex = function (e) {
        var t = e.codePointAt(0), n = this.encoding[t];
        return this.charset.indexOf(n);
      }, ye.prototype.nameToGlyphIndex = function (e) {
        return this.names.indexOf(e);
      }, ye.prototype.glyphIndexToName = function (e) {
        return this.names[e];
      };
      var xe = {line: function (e, t, n, i, r) {
        e.beginPath(), e.moveTo(t, n), e.lineTo(i, r), e.stroke();
      }};
      function be(e) {
        this.bindConstructorValues(e);
      }
      function we(e, t, n) {
        Object.defineProperty(e, t, {get: function () {
          return e.path, e[n];
        }, set: function (t) {
          e[n] = t;
        }, enumerable: true, configurable: true});
      }
      function Se(e, t) {
        if (this.font = e, this.glyphs = {}, Array.isArray(t)) for (var n = 0; n < t.length; n++) {
          var i = t[n];
          i.path.unitsPerEm = e.unitsPerEm, this.glyphs[n] = i;
        }
        this.length = t && t.length || 0;
      }
      be.prototype.bindConstructorValues = function (e) {
        var t, n;
        this.index = e.index || 0, this.name = e.name || null, this.unicode = e.unicode || undefined, this.unicodes = e.unicodes || undefined !== e.unicode ? [e.unicode] : [], e.xMin && (this.xMin = e.xMin), e.yMin && (this.yMin = e.yMin), e.xMax && (this.xMax = e.xMax), e.yMax && (this.yMax = e.yMax), e.advanceWidth && (this.advanceWidth = e.advanceWidth), Object.defineProperty(this, "path", (t = e.path, n = t || new k, {configurable: true, get: function () {
          return "function" == typeof n && (n = n()), n;
        }, set: function (e) {
          n = e;
        }}));
      }, be.prototype.addUnicode = function (e) {
        0 === this.unicodes.length && (this.unicode = e), this.unicodes.push(e);
      }, be.prototype.getBoundingBox = function () {
        return this.path.getBoundingBox();
      }, be.prototype.getPath = function (e, t, n, i, r) {
        var o, s;
        e = undefined !== e ? e : 0, t = undefined !== t ? t : 0, n = undefined !== n ? n : 72, i || (i = {});
        var a = i.xScale, l = i.yScale;
        if (i.hinting && r && r.hinting && (s = this.path && r.hinting.exec(this, n)), s) o = r.hinting.getCommands(s), e = Math.round(e), t = Math.round(t), a = l = 1; else {
          o = this.path.commands;
          var c = 1 / (this.path.unitsPerEm || 1e3) * n;
          undefined === a && (a = c), undefined === l && (l = c);
        }
        for (var h = new k, u = 0; u < o.length; u += 1) {
          var d = o[u];
          "M" === d.type ? h.moveTo(e + d.x * a, t + -d.y * l) : "L" === d.type ? h.lineTo(e + d.x * a, t + -d.y * l) : "Q" === d.type ? h.quadraticCurveTo(e + d.x1 * a, t + -d.y1 * l, e + d.x * a, t + -d.y * l) : "C" === d.type ? h.curveTo(e + d.x1 * a, t + -d.y1 * l, e + d.x2 * a, t + -d.y2 * l, e + d.x * a, t + -d.y * l) : "Z" === d.type && h.closePath();
        }
        return h;
      }, be.prototype.getContours = function () {
        if (undefined === this.points) return [];
        for (var e = [], t = [], n = 0; n < this.points.length; n += 1) {
          var i = this.points[n];
          t.push(i), i.lastPointOfContour && (e.push(t), t = []);
        }
        return P.argument(0 === t.length, "There are still points left in the current contour."), e;
      }, be.prototype.getMetrics = function () {
        for (var e = this.path.commands, t = [], n = [], i = 0; i < e.length; i += 1) {
          var r = e[i];
          "Z" !== r.type && (t.push(r.x), n.push(r.y)), "Q" !== r.type && "C" !== r.type || (t.push(r.x1), n.push(r.y1)), "C" === r.type && (t.push(r.x2), n.push(r.y2));
        }
        var o = {xMin: Math.min.apply(null, t), yMin: Math.min.apply(null, n), xMax: Math.max.apply(null, t), yMax: Math.max.apply(null, n), leftSideBearing: this.leftSideBearing};
        return isFinite(o.xMin) || (o.xMin = 0), isFinite(o.xMax) || (o.xMax = this.advanceWidth), isFinite(o.yMin) || (o.yMin = 0), isFinite(o.yMax) || (o.yMax = 0), o.rightSideBearing = this.advanceWidth - o.leftSideBearing - (o.xMax - o.xMin), o;
      }, be.prototype.draw = function (e, t, n, i, r) {
        this.getPath(t, n, i, r).draw(e);
      }, be.prototype.drawPoints = function (e, t, n, i) {
        function r(t, n, i, r) {
          var o = 2 * Math.PI;
          e.beginPath();
          for (var s = 0; s < t.length; s += 1) e.moveTo(n + t[s].x * r, i + t[s].y * r), e.arc(n + t[s].x * r, i + t[s].y * r, 2, 0, o, false);
          e.closePath(), e.fill();
        }
        t = undefined !== t ? t : 0, n = undefined !== n ? n : 0, i = undefined !== i ? i : 24;
        for (var o = 1 / this.path.unitsPerEm * i, s = [], a = [], l = this.path, c = 0; c < l.commands.length; c += 1) {
          var h = l.commands[c];
          undefined !== h.x && s.push({x: h.x, y: -h.y}), undefined !== h.x1 && a.push({x: h.x1, y: -h.y1}), undefined !== h.x2 && a.push({x: h.x2, y: -h.y2});
        }
        e.fillStyle = "blue", r(s, t, n, o), e.fillStyle = "red", r(a, t, n, o);
      }, be.prototype.drawMetrics = function (e, t, n, i) {
        var r;
        t = undefined !== t ? t : 0, n = undefined !== n ? n : 0, i = undefined !== i ? i : 24, r = 1 / this.path.unitsPerEm * i, e.lineWidth = 1, e.strokeStyle = "black", xe.line(e, t, -1e4, t, 1e4), xe.line(e, -1e4, n, 1e4, n);
        var o = this.xMin || 0, s = this.yMin || 0, a = this.xMax || 0, l = this.yMax || 0, c = this.advanceWidth || 0;
        e.strokeStyle = "blue", xe.line(e, t + o * r, -1e4, t + o * r, 1e4), xe.line(e, t + a * r, -1e4, t + a * r, 1e4), xe.line(e, -1e4, n + -s * r, 1e4, n + -s * r), xe.line(e, -1e4, n + -l * r, 1e4, n + -l * r), e.strokeStyle = "green", xe.line(e, t + c * r, -1e4, t + c * r, 1e4);
      }, Se.prototype.get = function (e) {
        if (undefined === this.glyphs[e]) {
          this.font._push(e), "function" == typeof this.glyphs[e] && (this.glyphs[e] = this.glyphs[e]());
          var t = this.glyphs[e], n = this.font._IndexToUnicodeMap[e];
          if (n) for (var i = 0; i < n.unicodes.length; i++) t.addUnicode(n.unicodes[i]);
          this.font.cffEncoding ? this.font.isCIDFont ? t.name = "gid" + e : t.name = this.font.cffEncoding.charset[e] : this.font.glyphNames.names && (t.name = this.font.glyphNames.glyphIndexToName(e)), this.glyphs[e].advanceWidth = this.font._hmtxTableData[e].advanceWidth, this.glyphs[e].leftSideBearing = this.font._hmtxTableData[e].leftSideBearing;
        } else "function" == typeof this.glyphs[e] && (this.glyphs[e] = this.glyphs[e]());
        return this.glyphs[e];
      }, Se.prototype.push = function (e, t) {
        this.glyphs[e] = t, this.length++;
      };
      var Ee = {GlyphSet: Se, glyphLoader: function (e, t) {
        return new be({index: t, font: e});
      }, ttfGlyphLoader: function (e, t, n, i, r, o) {
        return function () {
          var s = new be({index: t, font: e});
          return s.path = function () {
            n(s, i, r);
            var t = o(e.glyphs, s);
            return t.unitsPerEm = e.unitsPerEm, t;
          }, we(s, "xMin", "_xMin"), we(s, "xMax", "_xMax"), we(s, "yMin", "_yMin"), we(s, "yMax", "_yMax"), s;
        };
      }, cffGlyphLoader: function (e, t, n, i) {
        return function () {
          var r = new be({index: t, font: e});
          return r.path = function () {
            var t = n(e, r, i);
            return t.unitsPerEm = e.unitsPerEm, t;
          }, r;
        };
      }};
      function qe(e, t) {
        if (e === t) return true;
        if (Array.isArray(e) && Array.isArray(t)) {
          if (e.length !== t.length) return false;
          for (var n = 0; n < e.length; n += 1) if (!qe(e[n], t[n])) return false;
          return true;
        }
        return false;
      }
      function Te(e) {
        return e.length < 1240 ? 107 : e.length < 33900 ? 1131 : 32768;
      }
      function Ae(e, t, n) {
        var i, r, o = [], s = [], a = le.getCard16(e, t);
        if (0 !== a) {
          var l = le.getByte(e, t + 2);
          i = t + (a + 1) * l + 2;
          for (var c = t + 3, h = 0; h < a + 1; h += 1) o.push(le.getOffset(e, c, l)), c += l;
          r = i + o[a];
        } else r = t + 2;
        for (var u = 0; u < o.length - 1; u += 1) {
          var d = le.getBytes(e, i + o[u], i + o[u + 1]);
          n && (d = n(d)), s.push(d);
        }
        return {objects: s, startOffset: t, endOffset: r};
      }
      function Me(e, t) {
        if (28 === t) return e.parseByte() << 8 | e.parseByte();
        if (29 === t) return e.parseByte() << 24 | e.parseByte() << 16 | e.parseByte() << 8 | e.parseByte();
        if (30 === t) return function (e) {
          for (var t = "", n = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"];;) {
            var i = e.parseByte(), r = i >> 4, o = 15 & i;
            if (15 === r) break;
            if (t += n[r], 15 === o) break;
            t += n[o];
          }
          return parseFloat(t);
        }(e);
        if (t >= 32 && t <= 246) return t - 139;
        if (t >= 247 && t <= 250) return 256 * (t - 247) + e.parseByte() + 108;
        if (t >= 251 && t <= 254) return 256 * -(t - 251) - e.parseByte() - 108;
        throw new Error("Invalid b0 " + t);
      }
      function Ce(e, t, n) {
        t = undefined !== t ? t : 0;
        var i = new le.Parser(e, t), r = [], o = [];
        for (n = undefined !== n ? n : e.length; i.relativeOffset < n;) {
          var s = i.parseByte();
          s <= 21 ? (12 === s && (s = 1200 + i.parseByte()), r.push([s, o]), o = []) : o.push(Me(i, s));
        }
        return function (e) {
          for (var t = {}, n = 0; n < e.length; n += 1) {
            var i = e[n][0], r = e[n][1], o = undefined;
            if (o = 1 === r.length ? r[0] : r, t.hasOwnProperty(i) && !isNaN(t[i])) throw new Error("Object " + t + " already has key " + i);
            t[i] = o;
          }
          return t;
        }(r);
      }
      function ke(e, t) {
        return t = t <= 390 ? ue[t] : e[t - 391];
      }
      function Re(e, t, n) {
        for (var i, r = {}, o = 0; o < t.length; o += 1) {
          var s = t[o];
          if (Array.isArray(s.type)) {
            var a = [];
            a.length = s.type.length;
            for (var l = 0; l < s.type.length; l++) undefined === (i = undefined !== e[s.op] ? e[s.op][l] : undefined) && (i = undefined !== s.value && undefined !== s.value[l] ? s.value[l] : null), "SID" === s.type[l] && (i = ke(n, i)), a[l] = i;
            r[s.name] = a;
          } else undefined === (i = e[s.op]) && (i = undefined !== s.value ? s.value : null), "SID" === s.type && (i = ke(n, i)), r[s.name] = i;
        }
        return r;
      }
      var Le = [{name: "version", op: 0, type: "SID"}, {name: "notice", op: 1, type: "SID"}, {name: "copyright", op: 1200, type: "SID"}, {name: "fullName", op: 2, type: "SID"}, {name: "familyName", op: 3, type: "SID"}, {name: "weight", op: 4, type: "SID"}, {name: "isFixedPitch", op: 1201, type: "number", value: 0}, {name: "italicAngle", op: 1202, type: "number", value: 0}, {name: "underlinePosition", op: 1203, type: "number", value: -100}, {name: "underlineThickness", op: 1204, type: "number", value: 50}, {name: "paintType", op: 1205, type: "number", value: 0}, {name: "charstringType", op: 1206, type: "number", value: 2}, {name: "fontMatrix", op: 1207, type: ["real", "real", "real", "real", "real", "real"], value: [0.001, 0, 0, 0.001, 0, 0]}, {name: "uniqueId", op: 13, type: "number"}, {name: "fontBBox", op: 5, type: ["number", "number", "number", "number"], value: [0, 0, 0, 0]}, {name: "strokeWidth", op: 1208, type: "number", value: 0}, {name: "xuid", op: 14, type: [], value: null}, {name: "charset", op: 15, type: "offset", value: 0}, {name: "encoding", op: 16, type: "offset", value: 0}, {name: "charStrings", op: 17, type: "offset", value: 0}, {name: "private", op: 18, type: ["number", "offset"], value: [0, 0]}, {name: "ros", op: 1230, type: ["SID", "SID", "number"]}, {name: "cidFontVersion", op: 1231, type: "number", value: 0}, {name: "cidFontRevision", op: 1232, type: "number", value: 0}, {name: "cidFontType", op: 1233, type: "number", value: 0}, {name: "cidCount", op: 1234, type: "number", value: 8720}, {name: "uidBase", op: 1235, type: "number"}, {name: "fdArray", op: 1236, type: "offset"}, {name: "fdSelect", op: 1237, type: "offset"}, {name: "fontName", op: 1238, type: "SID"}], Pe = [{name: "subrs", op: 19, type: "offset", value: 0}, {name: "defaultWidthX", op: 20, type: "number", value: 0}, {name: "nominalWidthX", op: 21, type: "number", value: 0}];
      function De(e, t) {
        return Re(Ce(e, 0, e.byteLength), Le, t);
      }
      function Oe(e, t, n, i) {
        return Re(Ce(e, t, n), Pe, i);
      }
      function Ie(e, t, n, i) {
        for (var r = [], o = 0; o < n.length; o += 1) {
          var s = Re(Ce(new DataView(new Uint8Array(n[o]).buffer), 0, new DataView(new Uint8Array(n[o]).buffer).byteLength), Le, i);
          s._subrs = [], s._subrsBias = 0;
          var a = s.private[0], l = s.private[1];
          if (0 !== a && 0 !== l) {
            var c = Re(Ce(e, l + t, a), Pe, i);
            if (s._defaultWidthX = c.defaultWidthX, s._nominalWidthX = c.nominalWidthX, 0 !== c.subrs) {
              var h = Ae(e, l + c.subrs + t);
              s._subrs = h.objects, s._subrsBias = Te(s._subrs);
            }
            s._privateDict = c;
          }
          r.push(s);
        }
        return r;
      }
      function Be(e, t, n) {
        var i, r, o, s, a, l, c, h, u = new k, d = [], p = 0, m = false, f = false, g = 0, v = 0;
        if (e.isCIDFont) {
          var y = e.tables.cff.topDict._fdSelect[t.index], _ = e.tables.cff.topDict._fdArray[y];
          a = _._subrs, l = _._subrsBias, c = _._defaultWidthX, h = _._nominalWidthX;
        } else a = e.tables.cff.topDict._subrs, l = e.tables.cff.topDict._subrsBias, c = e.tables.cff.topDict._defaultWidthX, h = e.tables.cff.topDict._nominalWidthX;
        var x = c;
        function b(e, t) {
          f && u.closePath(), u.moveTo(e, t), f = true;
        }
        function w() {
          d.length % 2 != 0 && !m && (x = d.shift() + h), p += d.length >> 1, d.length = 0, m = true;
        }
        return function n(c) {
          for (var y, _, S, E, q, T, A, M, C, k, R, L, P = 0; P < c.length;) {
            var D = c[P];
            switch (P += 1, D) {
              case 1:
              case 3:
                w();
                break;
              case 4:
                d.length > 1 && !m && (x = d.shift() + h, m = true), v += d.pop(), b(g, v);
                break;
              case 5:
                for (; d.length > 0;) g += d.shift(), v += d.shift(), u.lineTo(g, v);
                break;
              case 6:
                for (; d.length > 0 && (g += d.shift(), u.lineTo(g, v), 0 !== d.length);) v += d.shift(), u.lineTo(g, v);
                break;
              case 7:
                for (; d.length > 0 && (v += d.shift(), u.lineTo(g, v), 0 !== d.length);) g += d.shift(), u.lineTo(g, v);
                break;
              case 8:
                for (; d.length > 0;) i = g + d.shift(), r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), g = o + d.shift(), v = s + d.shift(), u.curveTo(i, r, o, s, g, v);
                break;
              case 10:
                q = d.pop() + l, (T = a[q]) && n(T);
                break;
              case 11:
                return;
              case 12:
                switch (D = c[P], P += 1, D) {
                  case 35:
                    i = g + d.shift(), r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), A = o + d.shift(), M = s + d.shift(), C = A + d.shift(), k = M + d.shift(), R = C + d.shift(), L = k + d.shift(), g = R + d.shift(), v = L + d.shift(), d.shift(), u.curveTo(i, r, o, s, A, M), u.curveTo(C, k, R, L, g, v);
                    break;
                  case 34:
                    i = g + d.shift(), r = v, o = i + d.shift(), s = r + d.shift(), A = o + d.shift(), M = s, C = A + d.shift(), k = s, R = C + d.shift(), L = v, g = R + d.shift(), u.curveTo(i, r, o, s, A, M), u.curveTo(C, k, R, L, g, v);
                    break;
                  case 36:
                    i = g + d.shift(), r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), A = o + d.shift(), M = s, C = A + d.shift(), k = s, R = C + d.shift(), L = k + d.shift(), g = R + d.shift(), u.curveTo(i, r, o, s, A, M), u.curveTo(C, k, R, L, g, v);
                    break;
                  case 37:
                    i = g + d.shift(), r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), A = o + d.shift(), M = s + d.shift(), C = A + d.shift(), k = M + d.shift(), R = C + d.shift(), L = k + d.shift(), Math.abs(R - g) > Math.abs(L - v) ? g = R + d.shift() : v = L + d.shift(), u.curveTo(i, r, o, s, A, M), u.curveTo(C, k, R, L, g, v);
                    break;
                  default:
                    console.log("Glyph " + t.index + ": unknown operator 1200" + D), d.length = 0;
                }
                break;
              case 14:
                d.length > 0 && !m && (x = d.shift() + h, m = true), f && (u.closePath(), f = false);
                break;
              case 18:
                w();
                break;
              case 19:
              case 20:
                w(), P += p + 7 >> 3;
                break;
              case 21:
                d.length > 2 && !m && (x = d.shift() + h, m = true), v += d.pop(), b(g += d.pop(), v);
                break;
              case 22:
                d.length > 1 && !m && (x = d.shift() + h, m = true), b(g += d.pop(), v);
                break;
              case 23:
                w();
                break;
              case 24:
                for (; d.length > 2;) i = g + d.shift(), r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), g = o + d.shift(), v = s + d.shift(), u.curveTo(i, r, o, s, g, v);
                g += d.shift(), v += d.shift(), u.lineTo(g, v);
                break;
              case 25:
                for (; d.length > 6;) g += d.shift(), v += d.shift(), u.lineTo(g, v);
                i = g + d.shift(), r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), g = o + d.shift(), v = s + d.shift(), u.curveTo(i, r, o, s, g, v);
                break;
              case 26:
                for (d.length % 2 && (g += d.shift()); d.length > 0;) i = g, r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), g = o, v = s + d.shift(), u.curveTo(i, r, o, s, g, v);
                break;
              case 27:
                for (d.length % 2 && (v += d.shift()); d.length > 0;) i = g + d.shift(), r = v, o = i + d.shift(), s = r + d.shift(), g = o + d.shift(), v = s, u.curveTo(i, r, o, s, g, v);
                break;
              case 28:
                y = c[P], _ = c[P + 1], d.push((y << 24 | _ << 16) >> 16), P += 2;
                break;
              case 29:
                q = d.pop() + e.gsubrsBias, (T = e.gsubrs[q]) && n(T);
                break;
              case 30:
                for (; d.length > 0 && (i = g, r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), g = o + d.shift(), v = s + (1 === d.length ? d.shift() : 0), u.curveTo(i, r, o, s, g, v), 0 !== d.length);) i = g + d.shift(), r = v, o = i + d.shift(), s = r + d.shift(), v = s + d.shift(), g = o + (1 === d.length ? d.shift() : 0), u.curveTo(i, r, o, s, g, v);
                break;
              case 31:
                for (; d.length > 0 && (i = g + d.shift(), r = v, o = i + d.shift(), s = r + d.shift(), v = s + d.shift(), g = o + (1 === d.length ? d.shift() : 0), u.curveTo(i, r, o, s, g, v), 0 !== d.length);) i = g, r = v + d.shift(), o = i + d.shift(), s = r + d.shift(), g = o + d.shift(), v = s + (1 === d.length ? d.shift() : 0), u.curveTo(i, r, o, s, g, v);
                break;
              default:
                D < 32 ? console.log("Glyph " + t.index + ": unknown operator " + D) : D < 247 ? d.push(D - 139) : D < 251 ? (y = c[P], P += 1, d.push(256 * (D - 247) + y + 108)) : D < 255 ? (y = c[P], P += 1, d.push(256 * -(D - 251) - y - 108)) : (y = c[P], _ = c[P + 1], S = c[P + 2], E = c[P + 3], P += 4, d.push((y << 24 | _ << 16 | S << 8 | E) / 65536));
            }
          }
        }(n), t.advanceWidth = x, u;
      }
      function Fe(e, t) {
        var n, i = ue.indexOf(e);
        return i >= 0 && (n = i), (i = t.indexOf(e)) >= 0 ? n = i + ue.length : (n = ue.length + t.length, t.push(e)), n;
      }
      function ze(e, t, n) {
        for (var i = {}, r = 0; r < e.length; r += 1) {
          var o = e[r], s = t[o.name];
          undefined === s || qe(s, o.value) || ("SID" === o.type && (s = Fe(s, n)), i[o.op] = {name: o.name, type: o.type, value: s});
        }
        return i;
      }
      function Ne(e, t) {
        var n = new ee.Record("Top DICT", [{name: "dict", type: "DICT", value: {}}]);
        return n.dict = ze(Le, e, t), n;
      }
      function Ue(e) {
        var t = new ee.Record("Top DICT INDEX", [{name: "topDicts", type: "INDEX", value: []}]);
        return t.topDicts = [{name: "topDict_0", type: "TABLE", value: e}], t;
      }
      function Ve(e) {
        var t = [], n = e.path;
        t.push({name: "width", type: "NUMBER", value: e.advanceWidth});
        for (var i = 0, r = 0, o = 0; o < n.commands.length; o += 1) {
          var s = undefined, a = undefined, l = n.commands[o];
          if ("Q" === l.type && (l = {type: "C", x: l.x, y: l.y, x1: 0.3333333333333333 * i + 0.6666666666666666 * l.x1, y1: 0.3333333333333333 * r + 0.6666666666666666 * l.y1, x2: 0.3333333333333333 * l.x + 0.6666666666666666 * l.x1, y2: 0.3333333333333333 * l.y + 0.6666666666666666 * l.y1}), "M" === l.type) s = Math.round(l.x - i), a = Math.round(l.y - r), t.push({name: "dx", type: "NUMBER", value: s}), t.push({name: "dy", type: "NUMBER", value: a}), t.push({name: "rmoveto", type: "OP", value: 21}), i = Math.round(l.x), r = Math.round(l.y); else if ("L" === l.type) s = Math.round(l.x - i), a = Math.round(l.y - r), t.push({name: "dx", type: "NUMBER", value: s}), t.push({name: "dy", type: "NUMBER", value: a}), t.push({name: "rlineto", type: "OP", value: 5}), i = Math.round(l.x), r = Math.round(l.y); else if ("C" === l.type) {
            var c = Math.round(l.x1 - i), h = Math.round(l.y1 - r), u = Math.round(l.x2 - l.x1), d = Math.round(l.y2 - l.y1);
            s = Math.round(l.x - l.x2), a = Math.round(l.y - l.y2), t.push({name: "dx1", type: "NUMBER", value: c}), t.push({name: "dy1", type: "NUMBER", value: h}), t.push({name: "dx2", type: "NUMBER", value: u}), t.push({name: "dy2", type: "NUMBER", value: d}), t.push({name: "dx", type: "NUMBER", value: s}), t.push({name: "dy", type: "NUMBER", value: a}), t.push({name: "rrcurveto", type: "OP", value: 8}), i = Math.round(l.x), r = Math.round(l.y);
          }
        }
        return t.push({name: "endchar", type: "OP", value: 14}), t;
      }
      var Ge = {parse: function (e, t, n, i) {
        n.tables.cff = {};
        var r = function (e, t) {
          var n = {};
          return n.formatMajor = le.getCard8(e, t), n.formatMinor = le.getCard8(e, t + 1), n.size = le.getCard8(e, t + 2), n.offsetSize = le.getCard8(e, t + 3), n.startOffset = t, n.endOffset = t + 4, n;
        }(e, t), o = Ae(e, r.endOffset, le.bytesToString), s = Ae(e, o.endOffset), a = Ae(e, s.endOffset, le.bytesToString), l = Ae(e, a.endOffset);
        n.gsubrs = l.objects, n.gsubrsBias = Te(n.gsubrs);
        var c = Ie(e, t, s.objects, a.objects);
        if (1 !== c.length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + c.length);
        var h = c[0];
        if (n.tables.cff.topDict = h, h._privateDict && (n.defaultWidthX = h._privateDict.defaultWidthX, n.nominalWidthX = h._privateDict.nominalWidthX), undefined !== h.ros[0] && undefined !== h.ros[1] && (n.isCIDFont = true), n.isCIDFont) {
          var u = h.fdArray, d = h.fdSelect;
          if (0 === u || 0 === d) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
          var p = Ae(e, u += t), m = Ie(e, t, p.objects, a.objects);
          h._fdArray = m, d += t, h._fdSelect = function (e, t, n, i) {
            var r, o = [], s = new le.Parser(e, t), a = s.parseCard8();
            if (0 === a) for (var l = 0; l < n; l++) {
              if ((r = s.parseCard8()) >= i) throw new Error("CFF table CID Font FDSelect has bad FD index value " + r + " (FD count " + i + ")");
              o.push(r);
            } else {
              if (3 !== a) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + a);
              var c, h = s.parseCard16(), u = s.parseCard16();
              if (0 !== u) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + u);
              for (var d = 0; d < h; d++) {
                if (r = s.parseCard8(), c = s.parseCard16(), r >= i) throw new Error("CFF table CID Font FDSelect has bad FD index value " + r + " (FD count " + i + ")");
                if (c > n) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + c);
                for (; u < c; u++) o.push(r);
                u = c;
              }
              if (c !== n) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + c);
            }
            return o;
          }(e, d, n.numGlyphs, m.length);
        }
        var f, g = t + h.private[1], v = Re(Ce(e, g, h.private[0]), Pe, a.objects);
        if (n.defaultWidthX = v.defaultWidthX, n.nominalWidthX = v.nominalWidthX, 0 !== v.subrs) {
          var y = g + v.subrs, _ = Ae(e, y);
          n.subrs = _.objects, n.subrsBias = Te(n.subrs);
        } else n.subrs = [], n.subrsBias = 0;
        i.lowMemory ? (f = function (e, t) {
          var n, i, r = [], o = le.getCard16(e, t);
          if (0 !== o) {
            var s = le.getByte(e, t + 2);
            n = t + (o + 1) * s + 2;
            for (var a = t + 3, l = 0; l < o + 1; l += 1) r.push(le.getOffset(e, a, s)), a += s;
            i = n + r[o];
          } else i = t + 2;
          return {offsets: r, startOffset: t, endOffset: i};
        }(e, t + h.charStrings), n.nGlyphs = f.offsets.length) : (f = Ae(e, t + h.charStrings), n.nGlyphs = f.objects.length);
        var x = function (e, t, n, i) {
          var r, o, s = new le.Parser(e, t);
          n -= 1;
          var a = [".notdef"], l = s.parseCard8();
          if (0 === l) for (var c = 0; c < n; c += 1) r = s.parseSID(), a.push(ke(i, r)); else if (1 === l) for (; a.length <= n;) {
            r = s.parseSID(), o = s.parseCard8();
            for (var h = 0; h <= o; h += 1) a.push(ke(i, r)), r += 1;
          } else {
            if (2 !== l) throw new Error("Unknown charset format " + l);
            for (; a.length <= n;) {
              r = s.parseSID(), o = s.parseCard16();
              for (var u = 0; u <= o; u += 1) a.push(ke(i, r)), r += 1;
            }
          }
          return a;
        }(e, t + h.charset, n.nGlyphs, a.objects);
        if (0 === h.encoding ? n.cffEncoding = new ve(de, x) : 1 === h.encoding ? n.cffEncoding = new ve(pe, x) : n.cffEncoding = function (e, t, n) {
          var i, r = {}, o = new le.Parser(e, t), s = o.parseCard8();
          if (0 === s) for (var a = o.parseCard8(), l = 0; l < a; l += 1) r[i = o.parseCard8()] = l; else {
            if (1 !== s) throw new Error("Unknown encoding format " + s);
            var c = o.parseCard8();
            i = 1;
            for (var h = 0; h < c; h += 1) for (var u = o.parseCard8(), d = o.parseCard8(), p = u; p <= u + d; p += 1) r[p] = i, i += 1;
          }
          return new ve(r, n);
        }(e, t + h.encoding, x), n.encoding = n.encoding || n.cffEncoding, n.glyphs = new Ee.GlyphSet(n), i.lowMemory) n._push = function (i) {
          var r = function (e, t, n, i, r) {
            var o = le.getCard16(n, i), s = 0;
            0 !== o && (s = i + (o + 1) * le.getByte(n, i + 2) + 2);
            var a = le.getBytes(n, s + t[e], s + t[e + 1]);
            return r && (a = r(a)), a;
          }(i, f.offsets, e, t + h.charStrings);
          n.glyphs.push(i, Ee.cffGlyphLoader(n, i, Be, r));
        }; else for (var b = 0; b < n.nGlyphs; b += 1) {
          var w = f.objects[b];
          n.glyphs.push(b, Ee.cffGlyphLoader(n, b, Be, w));
        }
      }, make: function (e, t) {
        for (var n, i = new ee.Table("CFF ", [{name: "header", type: "RECORD"}, {name: "nameIndex", type: "RECORD"}, {name: "topDictIndex", type: "RECORD"}, {name: "stringIndex", type: "RECORD"}, {name: "globalSubrIndex", type: "RECORD"}, {name: "charsets", type: "RECORD"}, {name: "charStringsIndex", type: "RECORD"}, {name: "privateDict", type: "RECORD"}]), r = 1 / t.unitsPerEm, o = {version: t.version, fullName: t.fullName, familyName: t.familyName, weight: t.weightName, fontBBox: t.fontBBox || [0, 0, 0, 0], fontMatrix: [r, 0, 0, r, 0, 0], charset: 999, encoding: 0, charStrings: 999, private: [0, 999]}, s = [], a = 1; a < e.length; a += 1) n = e.get(a), s.push(n.name);
        var l = [];
        i.header = new ee.Record("Header", [{name: "major", type: "Card8", value: 1}, {name: "minor", type: "Card8", value: 0}, {name: "hdrSize", type: "Card8", value: 4}, {name: "major", type: "Card8", value: 1}]), i.nameIndex = function (e) {
          var t = new ee.Record("Name INDEX", [{name: "names", type: "INDEX", value: []}]);
          t.names = [];
          for (var n = 0; n < e.length; n += 1) t.names.push({name: "name_" + n, type: "NAME", value: e[n]});
          return t;
        }([t.postScriptName]);
        var c = Ne(o, l);
        i.topDictIndex = Ue(c), i.globalSubrIndex = new ee.Record("Global Subr INDEX", [{name: "subrs", type: "INDEX", value: []}]), i.charsets = function (e, t) {
          for (var n = new ee.Record("Charsets", [{name: "format", type: "Card8", value: 0}]), i = 0; i < e.length; i += 1) {
            var r = Fe(e[i], t);
            n.fields.push({name: "glyph_" + i, type: "SID", value: r});
          }
          return n;
        }(s, l), i.charStringsIndex = function (e) {
          for (var t = new ee.Record("CharStrings INDEX", [{name: "charStrings", type: "INDEX", value: []}]), n = 0; n < e.length; n += 1) {
            var i = e.get(n), r = Ve(i);
            t.charStrings.push({name: i.name, type: "CHARSTRING", value: r});
          }
          return t;
        }(e), i.privateDict = function (e, t) {
          var n = new ee.Record("Private DICT", [{name: "dict", type: "DICT", value: {}}]);
          return n.dict = ze(Pe, e, t), n;
        }({}, l), i.stringIndex = function (e) {
          var t = new ee.Record("String INDEX", [{name: "strings", type: "INDEX", value: []}]);
          t.strings = [];
          for (var n = 0; n < e.length; n += 1) t.strings.push({name: "string_" + n, type: "STRING", value: e[n]});
          return t;
        }(l);
        var h = i.header.sizeOf() + i.nameIndex.sizeOf() + i.topDictIndex.sizeOf() + i.stringIndex.sizeOf() + i.globalSubrIndex.sizeOf();
        return o.charset = h, o.encoding = 0, o.charStrings = o.charset + i.charsets.sizeOf(), o.private[1] = o.charStrings + i.charStringsIndex.sizeOf(), c = Ne(o, l), i.topDictIndex = Ue(c), i;
      }}, He = {parse: function (e, t) {
        var n = {}, i = new le.Parser(e, t);
        return n.version = i.parseVersion(), n.fontRevision = Math.round(1e3 * i.parseFixed()) / 1e3, n.checkSumAdjustment = i.parseULong(), n.magicNumber = i.parseULong(), P.argument(1594834165 === n.magicNumber, "Font header has wrong magic number."), n.flags = i.parseUShort(), n.unitsPerEm = i.parseUShort(), n.created = i.parseLongDateTime(), n.modified = i.parseLongDateTime(), n.xMin = i.parseShort(), n.yMin = i.parseShort(), n.xMax = i.parseShort(), n.yMax = i.parseShort(), n.macStyle = i.parseUShort(), n.lowestRecPPEM = i.parseUShort(), n.fontDirectionHint = i.parseShort(), n.indexToLocFormat = i.parseShort(), n.glyphDataFormat = i.parseShort(), n;
      }, make: function (e) {
        var t = Math.round((new Date).getTime() / 1e3) + 2082844800, n = t;
        return e.createdTimestamp && (n = e.createdTimestamp + 2082844800), new ee.Table("head", [{name: "version", type: "FIXED", value: 65536}, {name: "fontRevision", type: "FIXED", value: 65536}, {name: "checkSumAdjustment", type: "ULONG", value: 0}, {name: "magicNumber", type: "ULONG", value: 1594834165}, {name: "flags", type: "USHORT", value: 0}, {name: "unitsPerEm", type: "USHORT", value: 1e3}, {name: "created", type: "LONGDATETIME", value: n}, {name: "modified", type: "LONGDATETIME", value: t}, {name: "xMin", type: "SHORT", value: 0}, {name: "yMin", type: "SHORT", value: 0}, {name: "xMax", type: "SHORT", value: 0}, {name: "yMax", type: "SHORT", value: 0}, {name: "macStyle", type: "USHORT", value: 0}, {name: "lowestRecPPEM", type: "USHORT", value: 0}, {name: "fontDirectionHint", type: "SHORT", value: 2}, {name: "indexToLocFormat", type: "SHORT", value: 0}, {name: "glyphDataFormat", type: "SHORT", value: 0}], e);
      }}, je = {parse: function (e, t) {
        var n = {}, i = new le.Parser(e, t);
        return n.version = i.parseVersion(), n.ascender = i.parseShort(), n.descender = i.parseShort(), n.lineGap = i.parseShort(), n.advanceWidthMax = i.parseUShort(), n.minLeftSideBearing = i.parseShort(), n.minRightSideBearing = i.parseShort(), n.xMaxExtent = i.parseShort(), n.caretSlopeRise = i.parseShort(), n.caretSlopeRun = i.parseShort(), n.caretOffset = i.parseShort(), i.relativeOffset += 8, n.metricDataFormat = i.parseShort(), n.numberOfHMetrics = i.parseUShort(), n;
      }, make: function (e) {
        return new ee.Table("hhea", [{name: "version", type: "FIXED", value: 65536}, {name: "ascender", type: "FWORD", value: 0}, {name: "descender", type: "FWORD", value: 0}, {name: "lineGap", type: "FWORD", value: 0}, {name: "advanceWidthMax", type: "UFWORD", value: 0}, {name: "minLeftSideBearing", type: "FWORD", value: 0}, {name: "minRightSideBearing", type: "FWORD", value: 0}, {name: "xMaxExtent", type: "FWORD", value: 0}, {name: "caretSlopeRise", type: "SHORT", value: 1}, {name: "caretSlopeRun", type: "SHORT", value: 0}, {name: "caretOffset", type: "SHORT", value: 0}, {name: "reserved1", type: "SHORT", value: 0}, {name: "reserved2", type: "SHORT", value: 0}, {name: "reserved3", type: "SHORT", value: 0}, {name: "reserved4", type: "SHORT", value: 0}, {name: "metricDataFormat", type: "SHORT", value: 0}, {name: "numberOfHMetrics", type: "USHORT", value: 0}], e);
      }}, $e = {parse: function (e, t, n, i, r, o, s) {
        s.lowMemory ? function (e, t, n, i, r) {
          var o, s;
          e._hmtxTableData = {};
          for (var a = new le.Parser(t, n), l = 0; l < r; l += 1) l < i && (o = a.parseUShort(), s = a.parseShort()), e._hmtxTableData[l] = {advanceWidth: o, leftSideBearing: s};
        }(e, t, n, i, r) : function (e, t, n, i, r) {
          for (var o, s, a = new le.Parser(e, t), l = 0; l < i; l += 1) {
            l < n && (o = a.parseUShort(), s = a.parseShort());
            var c = r.get(l);
            c.advanceWidth = o, c.leftSideBearing = s;
          }
        }(t, n, i, r, o);
      }, make: function (e) {
        for (var t = new ee.Table("hmtx", []), n = 0; n < e.length; n += 1) {
          var i = e.get(n), r = i.advanceWidth || 0, o = i.leftSideBearing || 0;
          t.fields.push({name: "advanceWidth_" + n, type: "USHORT", value: r}), t.fields.push({name: "leftSideBearing_" + n, type: "SHORT", value: o});
        }
        return t;
      }}, We = {make: function (e) {
        for (var t = new ee.Table("ltag", [{name: "version", type: "ULONG", value: 1}, {name: "flags", type: "ULONG", value: 0}, {name: "numTags", type: "ULONG", value: e.length}]), n = "", i = 12 + 4 * e.length, r = 0; r < e.length; ++r) {
          var o = n.indexOf(e[r]);
          o < 0 && (o = n.length, n += e[r]), t.fields.push({name: "offset " + r, type: "USHORT", value: i + o}), t.fields.push({name: "length " + r, type: "USHORT", value: e[r].length});
        }
        return t.fields.push({name: "stringPool", type: "CHARARRAY", value: n}), t;
      }, parse: function (e, t) {
        var n = new le.Parser(e, t), i = n.parseULong();
        P.argument(1 === i, "Unsupported ltag table version."), n.skip("uLong", 1);
        for (var r = n.parseULong(), o = [], s = 0; s < r; s++) {
          for (var a = "", l = t + n.parseUShort(), c = n.parseUShort(), h = l; h < l + c; ++h) a += String.fromCharCode(e.getInt8(h));
          o.push(a);
        }
        return o;
      }}, Xe = {parse: function (e, t) {
        var n = {}, i = new le.Parser(e, t);
        return n.version = i.parseVersion(), n.numGlyphs = i.parseUShort(), 1 === n.version && (n.maxPoints = i.parseUShort(), n.maxContours = i.parseUShort(), n.maxCompositePoints = i.parseUShort(), n.maxCompositeContours = i.parseUShort(), n.maxZones = i.parseUShort(), n.maxTwilightPoints = i.parseUShort(), n.maxStorage = i.parseUShort(), n.maxFunctionDefs = i.parseUShort(), n.maxInstructionDefs = i.parseUShort(), n.maxStackElements = i.parseUShort(), n.maxSizeOfInstructions = i.parseUShort(), n.maxComponentElements = i.parseUShort(), n.maxComponentDepth = i.parseUShort()), n;
      }, make: function (e) {
        return new ee.Table("maxp", [{name: "version", type: "FIXED", value: 20480}, {name: "numGlyphs", type: "USHORT", value: e}]);
      }}, Ye = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"], Je = {0: "en", 1: "fr", 2: "de", 3: "it", 4: "nl", 5: "sv", 6: "es", 7: "da", 8: "pt", 9: "no", 10: "he", 11: "ja", 12: "ar", 13: "fi", 14: "el", 15: "is", 16: "mt", 17: "tr", 18: "hr", 19: "zh-Hant", 20: "ur", 21: "hi", 22: "th", 23: "ko", 24: "lt", 25: "pl", 26: "hu", 27: "es", 28: "lv", 29: "se", 30: "fo", 31: "fa", 32: "ru", 33: "zh", 34: "nl-BE", 35: "ga", 36: "sq", 37: "ro", 38: "cz", 39: "sk", 40: "si", 41: "yi", 42: "sr", 43: "mk", 44: "bg", 45: "uk", 46: "be", 47: "uz", 48: "kk", 49: "az-Cyrl", 50: "az-Arab", 51: "hy", 52: "ka", 53: "mo", 54: "ky", 55: "tg", 56: "tk", 57: "mn-CN", 58: "mn", 59: "ps", 60: "ks", 61: "ku", 62: "sd", 63: "bo", 64: "ne", 65: "sa", 66: "mr", 67: "bn", 68: "as", 69: "gu", 70: "pa", 71: "or", 72: "ml", 73: "kn", 74: "ta", 75: "te", 76: "si", 77: "my", 78: "km", 79: "lo", 80: "vi", 81: "id", 82: "tl", 83: "ms", 84: "ms-Arab", 85: "am", 86: "ti", 87: "om", 88: "so", 89: "sw", 90: "rw", 91: "rn", 92: "ny", 93: "mg", 94: "eo", 128: "cy", 129: "eu", 130: "ca", 131: "la", 132: "qu", 133: "gn", 134: "ay", 135: "tt", 136: "ug", 137: "dz", 138: "jv", 139: "su", 140: "gl", 141: "af", 142: "br", 143: "iu", 144: "gd", 145: "gv", 146: "ga", 147: "to", 148: "el-polyton", 149: "kl", 150: "az", 151: "nn"}, Ke = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 5, 11: 1, 12: 4, 13: 0, 14: 6, 15: 0, 16: 0, 17: 0, 18: 0, 19: 2, 20: 4, 21: 9, 22: 21, 23: 3, 24: 29, 25: 29, 26: 29, 27: 29, 28: 29, 29: 0, 30: 0, 31: 4, 32: 7, 33: 25, 34: 0, 35: 0, 36: 0, 37: 0, 38: 29, 39: 29, 40: 0, 41: 5, 42: 7, 43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 48: 7, 49: 7, 50: 4, 51: 24, 52: 23, 53: 7, 54: 7, 55: 7, 56: 7, 57: 27, 58: 7, 59: 4, 60: 4, 61: 4, 62: 4, 63: 26, 64: 9, 65: 9, 66: 9, 67: 13, 68: 13, 69: 11, 70: 10, 71: 12, 72: 17, 73: 16, 74: 14, 75: 15, 76: 18, 77: 19, 78: 20, 79: 22, 80: 30, 81: 0, 82: 0, 83: 0, 84: 4, 85: 28, 86: 28, 87: 28, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 7, 136: 4, 137: 26, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 28, 144: 0, 145: 0, 146: 0, 147: 0, 148: 6, 149: 0, 150: 0, 151: 0}, Ze = {1078: "af", 1052: "sq", 1156: "gsw", 1118: "am", 5121: "ar-DZ", 15361: "ar-BH", 3073: "ar", 2049: "ar-IQ", 11265: "ar-JO", 13313: "ar-KW", 12289: "ar-LB", 4097: "ar-LY", 6145: "ary", 8193: "ar-OM", 16385: "ar-QA", 1025: "ar-SA", 10241: "ar-SY", 7169: "aeb", 14337: "ar-AE", 9217: "ar-YE", 1067: "hy", 1101: "as", 2092: "az-Cyrl", 1068: "az", 1133: "ba", 1069: "eu", 1059: "be", 2117: "bn", 1093: "bn-IN", 8218: "bs-Cyrl", 5146: "bs", 1150: "br", 1026: "bg", 1027: "ca", 3076: "zh-HK", 5124: "zh-MO", 2052: "zh", 4100: "zh-SG", 1028: "zh-TW", 1155: "co", 1050: "hr", 4122: "hr-BA", 1029: "cs", 1030: "da", 1164: "prs", 1125: "dv", 2067: "nl-BE", 1043: "nl", 3081: "en-AU", 10249: "en-BZ", 4105: "en-CA", 9225: "en-029", 16393: "en-IN", 6153: "en-IE", 8201: "en-JM", 17417: "en-MY", 5129: "en-NZ", 13321: "en-PH", 18441: "en-SG", 7177: "en-ZA", 11273: "en-TT", 2057: "en-GB", 1033: "en", 12297: "en-ZW", 1061: "et", 1080: "fo", 1124: "fil", 1035: "fi", 2060: "fr-BE", 3084: "fr-CA", 1036: "fr", 5132: "fr-LU", 6156: "fr-MC", 4108: "fr-CH", 1122: "fy", 1110: "gl", 1079: "ka", 3079: "de-AT", 1031: "de", 5127: "de-LI", 4103: "de-LU", 2055: "de-CH", 1032: "el", 1135: "kl", 1095: "gu", 1128: "ha", 1037: "he", 1081: "hi", 1038: "hu", 1039: "is", 1136: "ig", 1057: "id", 1117: "iu", 2141: "iu-Latn", 2108: "ga", 1076: "xh", 1077: "zu", 1040: "it", 2064: "it-CH", 1041: "ja", 1099: "kn", 1087: "kk", 1107: "km", 1158: "quc", 1159: "rw", 1089: "sw", 1111: "kok", 1042: "ko", 1088: "ky", 1108: "lo", 1062: "lv", 1063: "lt", 2094: "dsb", 1134: "lb", 1071: "mk", 2110: "ms-BN", 1086: "ms", 1100: "ml", 1082: "mt", 1153: "mi", 1146: "arn", 1102: "mr", 1148: "moh", 1104: "mn", 2128: "mn-CN", 1121: "ne", 1044: "nb", 2068: "nn", 1154: "oc", 1096: "or", 1123: "ps", 1045: "pl", 1046: "pt", 2070: "pt-PT", 1094: "pa", 1131: "qu-BO", 2155: "qu-EC", 3179: "qu", 1048: "ro", 1047: "rm", 1049: "ru", 9275: "smn", 4155: "smj-NO", 5179: "smj", 3131: "se-FI", 1083: "se", 2107: "se-SE", 8251: "sms", 6203: "sma-NO", 7227: "sms", 1103: "sa", 7194: "sr-Cyrl-BA", 3098: "sr", 6170: "sr-Latn-BA", 2074: "sr-Latn", 1132: "nso", 1074: "tn", 1115: "si", 1051: "sk", 1060: "sl", 11274: "es-AR", 16394: "es-BO", 13322: "es-CL", 9226: "es-CO", 5130: "es-CR", 7178: "es-DO", 12298: "es-EC", 17418: "es-SV", 4106: "es-GT", 18442: "es-HN", 2058: "es-MX", 19466: "es-NI", 6154: "es-PA", 15370: "es-PY", 10250: "es-PE", 20490: "es-PR", 3082: "es", 1034: "es", 21514: "es-US", 14346: "es-UY", 8202: "es-VE", 2077: "sv-FI", 1053: "sv", 1114: "syr", 1064: "tg", 2143: "tzm", 1097: "ta", 1092: "tt", 1098: "te", 1054: "th", 1105: "bo", 1055: "tr", 1090: "tk", 1152: "ug", 1058: "uk", 1070: "hsb", 1056: "ur", 2115: "uz-Cyrl", 1091: "uz", 1066: "vi", 1106: "cy", 1160: "wo", 1157: "sah", 1144: "ii", 1130: "yo"};
      function Qe(e, t, n) {
        switch (e) {
          case 0:
            if (65535 === t) return "und";
            if (n) return n[t];
            break;
          case 1:
            return Je[t];
          case 3:
            return Ze[t];
        }
      }
      var et = "utf-16", tt = {0: "macintosh", 1: "x-mac-japanese", 2: "x-mac-chinesetrad", 3: "x-mac-korean", 6: "x-mac-greek", 7: "x-mac-cyrillic", 9: "x-mac-devanagai", 10: "x-mac-gurmukhi", 11: "x-mac-gujarati", 12: "x-mac-oriya", 13: "x-mac-bengali", 14: "x-mac-tamil", 15: "x-mac-telugu", 16: "x-mac-kannada", 17: "x-mac-malayalam", 18: "x-mac-sinhalese", 19: "x-mac-burmese", 20: "x-mac-khmer", 21: "x-mac-thai", 22: "x-mac-lao", 23: "x-mac-georgian", 24: "x-mac-armenian", 25: "x-mac-chinesesimp", 26: "x-mac-tibetan", 27: "x-mac-mongolian", 28: "x-mac-ethiopic", 29: "x-mac-ce", 30: "x-mac-vietnamese", 31: "x-mac-extarabic"}, nt = {15: "x-mac-icelandic", 17: "x-mac-turkish", 18: "x-mac-croatian", 24: "x-mac-ce", 25: "x-mac-ce", 26: "x-mac-ce", 27: "x-mac-ce", 28: "x-mac-ce", 30: "x-mac-icelandic", 37: "x-mac-romanian", 38: "x-mac-ce", 39: "x-mac-ce", 40: "x-mac-ce", 143: "x-mac-inuit", 146: "x-mac-gaelic"};
      function it(e, t, n) {
        switch (e) {
          case 0:
            return et;
          case 1:
            return nt[n] || tt[t];
          case 3:
            if (1 === t || 10 === t) return et;
        }
      }
      function rt(e) {
        var t = {};
        for (var n in e) t[e[n]] = parseInt(n);
        return t;
      }
      function ot(e, t, n, i, r, o) {
        return new ee.Record("NameRecord", [{name: "platformID", type: "USHORT", value: e}, {name: "encodingID", type: "USHORT", value: t}, {name: "languageID", type: "USHORT", value: n}, {name: "nameID", type: "USHORT", value: i}, {name: "length", type: "USHORT", value: r}, {name: "offset", type: "USHORT", value: o}]);
      }
      function st(e, t) {
        var n = function (e, t) {
          var n = e.length, i = t.length - n + 1;
          e: for (var r = 0; r < i; r++) for (; r < i; r++) {
            for (var o = 0; o < n; o++) if (t[r + o] !== e[o]) continue e;
            return r;
          }
          return -1;
        }(e, t);
        if (n < 0) {
          n = t.length;
          for (var i = 0, r = e.length; i < r; ++i) t.push(e[i]);
        }
        return n;
      }
      var at = {parse: function (e, t, n) {
        for (var i = {}, r = new le.Parser(e, t), o = r.parseUShort(), s = r.parseUShort(), a = r.offset + r.parseUShort(), l = 0; l < s; l++) {
          var c = r.parseUShort(), h = r.parseUShort(), u = r.parseUShort(), d = r.parseUShort(), p = Ye[d] || d, m = r.parseUShort(), f = r.parseUShort(), g = Qe(c, u, n), v = it(c, h, u);
          if (undefined !== v && undefined !== g) {
            var y = undefined;
            if (y = v === et ? D.UTF16(e, a + f, m) : D.MACSTRING(e, a + f, m, v)) {
              var _ = i[p];
              undefined === _ && (_ = i[p] = {}), _[g] = y;
            }
          }
        }
        return 1 === o && r.parseUShort(), i;
      }, make: function (e, t) {
        var n, i = [], r = {}, o = rt(Ye);
        for (var s in e) {
          var a = o[s];
          if (undefined === a && (a = s), n = parseInt(a), isNaN(n)) throw new Error('Name table entry "' + s + '" does not exist, see nameTableNames for complete list.');
          r[n] = e[s], i.push(n);
        }
        for (var l = rt(Je), c = rt(Ze), h = [], u = [], d = 0; d < i.length; d++) {
          var p = r[n = i[d]];
          for (var m in p) {
            var f = p[m], g = 1, v = l[m], y = Ke[v], _ = it(g, y, v), x = O.MACSTRING(f, _);
            undefined === x && (g = 0, (v = t.indexOf(m)) < 0 && (v = t.length, t.push(m)), y = 4, x = O.UTF16(f));
            var b = st(x, u);
            h.push(ot(g, y, v, n, x.length, b));
            var w = c[m];
            if (undefined !== w) {
              var S = O.UTF16(f), E = st(S, u);
              h.push(ot(3, 1, w, n, S.length, E));
            }
          }
        }
        h.sort(function (e, t) {
          return e.platformID - t.platformID || e.encodingID - t.encodingID || e.languageID - t.languageID || e.nameID - t.nameID;
        });
        for (var q = new ee.Table("name", [{name: "format", type: "USHORT", value: 0}, {name: "count", type: "USHORT", value: h.length}, {name: "stringOffset", type: "USHORT", value: 6 + 12 * h.length}]), T = 0; T < h.length; T++) q.fields.push({name: "record_" + T, type: "RECORD", value: h[T]});
        return q.fields.push({name: "strings", type: "LITERAL", value: u}), q;
      }}, lt = [{begin: 0, end: 127}, {begin: 128, end: 255}, {begin: 256, end: 383}, {begin: 384, end: 591}, {begin: 592, end: 687}, {begin: 688, end: 767}, {begin: 768, end: 879}, {begin: 880, end: 1023}, {begin: 11392, end: 11519}, {begin: 1024, end: 1279}, {begin: 1328, end: 1423}, {begin: 1424, end: 1535}, {begin: 42240, end: 42559}, {begin: 1536, end: 1791}, {begin: 1984, end: 2047}, {begin: 2304, end: 2431}, {begin: 2432, end: 2559}, {begin: 2560, end: 2687}, {begin: 2688, end: 2815}, {begin: 2816, end: 2943}, {begin: 2944, end: 3071}, {begin: 3072, end: 3199}, {begin: 3200, end: 3327}, {begin: 3328, end: 3455}, {begin: 3584, end: 3711}, {begin: 3712, end: 3839}, {begin: 4256, end: 4351}, {begin: 6912, end: 7039}, {begin: 4352, end: 4607}, {begin: 7680, end: 7935}, {begin: 7936, end: 8191}, {begin: 8192, end: 8303}, {begin: 8304, end: 8351}, {begin: 8352, end: 8399}, {begin: 8400, end: 8447}, {begin: 8448, end: 8527}, {begin: 8528, end: 8591}, {begin: 8592, end: 8703}, {begin: 8704, end: 8959}, {begin: 8960, end: 9215}, {begin: 9216, end: 9279}, {begin: 9280, end: 9311}, {begin: 9312, end: 9471}, {begin: 9472, end: 9599}, {begin: 9600, end: 9631}, {begin: 9632, end: 9727}, {begin: 9728, end: 9983}, {begin: 9984, end: 10175}, {begin: 12288, end: 12351}, {begin: 12352, end: 12447}, {begin: 12448, end: 12543}, {begin: 12544, end: 12591}, {begin: 12592, end: 12687}, {begin: 43072, end: 43135}, {begin: 12800, end: 13055}, {begin: 13056, end: 13311}, {begin: 44032, end: 55215}, {begin: 55296, end: 57343}, {begin: 67840, end: 67871}, {begin: 19968, end: 40959}, {begin: 57344, end: 63743}, {begin: 12736, end: 12783}, {begin: 64256, end: 64335}, {begin: 64336, end: 65023}, {begin: 65056, end: 65071}, {begin: 65040, end: 65055}, {begin: 65104, end: 65135}, {begin: 65136, end: 65279}, {begin: 65280, end: 65519}, {begin: 65520, end: 65535}, {begin: 3840, end: 4095}, {begin: 1792, end: 1871}, {begin: 1920, end: 1983}, {begin: 3456, end: 3583}, {begin: 4096, end: 4255}, {begin: 4608, end: 4991}, {begin: 5024, end: 5119}, {begin: 5120, end: 5759}, {begin: 5760, end: 5791}, {begin: 5792, end: 5887}, {begin: 6016, end: 6143}, {begin: 6144, end: 6319}, {begin: 10240, end: 10495}, {begin: 40960, end: 42127}, {begin: 5888, end: 5919}, {begin: 66304, end: 66351}, {begin: 66352, end: 66383}, {begin: 66560, end: 66639}, {begin: 118784, end: 119039}, {begin: 119808, end: 120831}, {begin: 1044480, end: 1048573}, {begin: 65024, end: 65039}, {begin: 917504, end: 917631}, {begin: 6400, end: 6479}, {begin: 6480, end: 6527}, {begin: 6528, end: 6623}, {begin: 6656, end: 6687}, {begin: 11264, end: 11359}, {begin: 11568, end: 11647}, {begin: 19904, end: 19967}, {begin: 43008, end: 43055}, {begin: 65536, end: 65663}, {begin: 65856, end: 65935}, {begin: 66432, end: 66463}, {begin: 66464, end: 66527}, {begin: 66640, end: 66687}, {begin: 66688, end: 66735}, {begin: 67584, end: 67647}, {begin: 68096, end: 68191}, {begin: 119552, end: 119647}, {begin: 73728, end: 74751}, {begin: 119648, end: 119679}, {begin: 7040, end: 7103}, {begin: 7168, end: 7247}, {begin: 7248, end: 7295}, {begin: 43136, end: 43231}, {begin: 43264, end: 43311}, {begin: 43312, end: 43359}, {begin: 43520, end: 43615}, {begin: 65936, end: 65999}, {begin: 66e3, end: 66047}, {begin: 66208, end: 66271}, {begin: 127024, end: 127135}], ct = {parse: function (e, t) {
        var n = {}, i = new le.Parser(e, t);
        n.version = i.parseUShort(), n.xAvgCharWidth = i.parseShort(), n.usWeightClass = i.parseUShort(), n.usWidthClass = i.parseUShort(), n.fsType = i.parseUShort(), n.ySubscriptXSize = i.parseShort(), n.ySubscriptYSize = i.parseShort(), n.ySubscriptXOffset = i.parseShort(), n.ySubscriptYOffset = i.parseShort(), n.ySuperscriptXSize = i.parseShort(), n.ySuperscriptYSize = i.parseShort(), n.ySuperscriptXOffset = i.parseShort(), n.ySuperscriptYOffset = i.parseShort(), n.yStrikeoutSize = i.parseShort(), n.yStrikeoutPosition = i.parseShort(), n.sFamilyClass = i.parseShort(), n.panose = [];
        for (var r = 0; r < 10; r++) n.panose[r] = i.parseByte();
        return n.ulUnicodeRange1 = i.parseULong(), n.ulUnicodeRange2 = i.parseULong(), n.ulUnicodeRange3 = i.parseULong(), n.ulUnicodeRange4 = i.parseULong(), n.achVendID = String.fromCharCode(i.parseByte(), i.parseByte(), i.parseByte(), i.parseByte()), n.fsSelection = i.parseUShort(), n.usFirstCharIndex = i.parseUShort(), n.usLastCharIndex = i.parseUShort(), n.sTypoAscender = i.parseShort(), n.sTypoDescender = i.parseShort(), n.sTypoLineGap = i.parseShort(), n.usWinAscent = i.parseUShort(), n.usWinDescent = i.parseUShort(), n.version >= 1 && (n.ulCodePageRange1 = i.parseULong(), n.ulCodePageRange2 = i.parseULong()), n.version >= 2 && (n.sxHeight = i.parseShort(), n.sCapHeight = i.parseShort(), n.usDefaultChar = i.parseUShort(), n.usBreakChar = i.parseUShort(), n.usMaxContent = i.parseUShort()), n;
      }, make: function (e) {
        return new ee.Table("OS/2", [{name: "version", type: "USHORT", value: 3}, {name: "xAvgCharWidth", type: "SHORT", value: 0}, {name: "usWeightClass", type: "USHORT", value: 0}, {name: "usWidthClass", type: "USHORT", value: 0}, {name: "fsType", type: "USHORT", value: 0}, {name: "ySubscriptXSize", type: "SHORT", value: 650}, {name: "ySubscriptYSize", type: "SHORT", value: 699}, {name: "ySubscriptXOffset", type: "SHORT", value: 0}, {name: "ySubscriptYOffset", type: "SHORT", value: 140}, {name: "ySuperscriptXSize", type: "SHORT", value: 650}, {name: "ySuperscriptYSize", type: "SHORT", value: 699}, {name: "ySuperscriptXOffset", type: "SHORT", value: 0}, {name: "ySuperscriptYOffset", type: "SHORT", value: 479}, {name: "yStrikeoutSize", type: "SHORT", value: 49}, {name: "yStrikeoutPosition", type: "SHORT", value: 258}, {name: "sFamilyClass", type: "SHORT", value: 0}, {name: "bFamilyType", type: "BYTE", value: 0}, {name: "bSerifStyle", type: "BYTE", value: 0}, {name: "bWeight", type: "BYTE", value: 0}, {name: "bProportion", type: "BYTE", value: 0}, {name: "bContrast", type: "BYTE", value: 0}, {name: "bStrokeVariation", type: "BYTE", value: 0}, {name: "bArmStyle", type: "BYTE", value: 0}, {name: "bLetterform", type: "BYTE", value: 0}, {name: "bMidline", type: "BYTE", value: 0}, {name: "bXHeight", type: "BYTE", value: 0}, {name: "ulUnicodeRange1", type: "ULONG", value: 0}, {name: "ulUnicodeRange2", type: "ULONG", value: 0}, {name: "ulUnicodeRange3", type: "ULONG", value: 0}, {name: "ulUnicodeRange4", type: "ULONG", value: 0}, {name: "achVendID", type: "CHARARRAY", value: "XXXX"}, {name: "fsSelection", type: "USHORT", value: 0}, {name: "usFirstCharIndex", type: "USHORT", value: 0}, {name: "usLastCharIndex", type: "USHORT", value: 0}, {name: "sTypoAscender", type: "SHORT", value: 0}, {name: "sTypoDescender", type: "SHORT", value: 0}, {name: "sTypoLineGap", type: "SHORT", value: 0}, {name: "usWinAscent", type: "USHORT", value: 0}, {name: "usWinDescent", type: "USHORT", value: 0}, {name: "ulCodePageRange1", type: "ULONG", value: 0}, {name: "ulCodePageRange2", type: "ULONG", value: 0}, {name: "sxHeight", type: "SHORT", value: 0}, {name: "sCapHeight", type: "SHORT", value: 0}, {name: "usDefaultChar", type: "USHORT", value: 0}, {name: "usBreakChar", type: "USHORT", value: 0}, {name: "usMaxContext", type: "USHORT", value: 0}], e);
      }, unicodeRanges: lt, getUnicodeRange: function (e) {
        for (var t = 0; t < lt.length; t += 1) {
          var n = lt[t];
          if (e >= n.begin && e < n.end) return t;
        }
        return -1;
      }}, ht = {parse: function (e, t) {
        var n = {}, i = new le.Parser(e, t);
        switch (n.version = i.parseVersion(), n.italicAngle = i.parseFixed(), n.underlinePosition = i.parseShort(), n.underlineThickness = i.parseShort(), n.isFixedPitch = i.parseULong(), n.minMemType42 = i.parseULong(), n.maxMemType42 = i.parseULong(), n.minMemType1 = i.parseULong(), n.maxMemType1 = i.parseULong(), n.version) {
          case 1:
            n.names = me.slice();
            break;
          case 2:
            n.numberOfGlyphs = i.parseUShort(), n.glyphNameIndex = new Array(n.numberOfGlyphs);
            for (var r = 0; r < n.numberOfGlyphs; r++) n.glyphNameIndex[r] = i.parseUShort();
            n.names = [];
            for (var o = 0; o < n.numberOfGlyphs; o++) if (n.glyphNameIndex[o] >= me.length) {
              var s = i.parseChar();
              n.names.push(i.parseString(s));
            }
            break;
          case 2.5:
            n.numberOfGlyphs = i.parseUShort(), n.offset = new Array(n.numberOfGlyphs);
            for (var a = 0; a < n.numberOfGlyphs; a++) n.offset[a] = i.parseChar();
        }
        return n;
      }, make: function () {
        return new ee.Table("post", [{name: "version", type: "FIXED", value: 196608}, {name: "italicAngle", type: "FIXED", value: 0}, {name: "underlinePosition", type: "FWORD", value: 0}, {name: "underlineThickness", type: "FWORD", value: 0}, {name: "isFixedPitch", type: "ULONG", value: 0}, {name: "minMemType42", type: "ULONG", value: 0}, {name: "maxMemType42", type: "ULONG", value: 0}, {name: "minMemType1", type: "ULONG", value: 0}, {name: "maxMemType1", type: "ULONG", value: 0}]);
      }}, ut = new Array(9);
      ut[1] = function () {
        var e = this.offset + this.relativeOffset, t = this.parseUShort();
        return 1 === t ? {substFormat: 1, coverage: this.parsePointer(se.coverage), deltaGlyphId: this.parseUShort()} : 2 === t ? {substFormat: 2, coverage: this.parsePointer(se.coverage), substitute: this.parseOffset16List()} : void P.assert(false, "0x" + e.toString(16) + ": lookup type 1 format must be 1 or 2.");
      }, ut[2] = function () {
        var e = this.parseUShort();
        return P.argument(1 === e, "GSUB Multiple Substitution Subtable identifier-format must be 1"), {substFormat: e, coverage: this.parsePointer(se.coverage), sequences: this.parseListOfLists()};
      }, ut[3] = function () {
        var e = this.parseUShort();
        return P.argument(1 === e, "GSUB Alternate Substitution Subtable identifier-format must be 1"), {substFormat: e, coverage: this.parsePointer(se.coverage), alternateSets: this.parseListOfLists()};
      }, ut[4] = function () {
        var e = this.parseUShort();
        return P.argument(1 === e, "GSUB ligature table identifier-format must be 1"), {substFormat: e, coverage: this.parsePointer(se.coverage), ligatureSets: this.parseListOfLists(function () {
          return {ligGlyph: this.parseUShort(), components: this.parseUShortList(this.parseUShort() - 1)};
        })};
      };
      var dt = {sequenceIndex: se.uShort, lookupListIndex: se.uShort};
      ut[5] = function () {
        var e = this.offset + this.relativeOffset, t = this.parseUShort();
        if (1 === t) return {substFormat: t, coverage: this.parsePointer(se.coverage), ruleSets: this.parseListOfLists(function () {
          var e = this.parseUShort(), t = this.parseUShort();
          return {input: this.parseUShortList(e - 1), lookupRecords: this.parseRecordList(t, dt)};
        })};
        if (2 === t) return {substFormat: t, coverage: this.parsePointer(se.coverage), classDef: this.parsePointer(se.classDef), classSets: this.parseListOfLists(function () {
          var e = this.parseUShort(), t = this.parseUShort();
          return {classes: this.parseUShortList(e - 1), lookupRecords: this.parseRecordList(t, dt)};
        })};
        if (3 === t) {
          var n = this.parseUShort(), i = this.parseUShort();
          return {substFormat: t, coverages: this.parseList(n, se.pointer(se.coverage)), lookupRecords: this.parseRecordList(i, dt)};
        }
        P.assert(false, "0x" + e.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
      }, ut[6] = function () {
        var e = this.offset + this.relativeOffset, t = this.parseUShort();
        return 1 === t ? {substFormat: 1, coverage: this.parsePointer(se.coverage), chainRuleSets: this.parseListOfLists(function () {
          return {backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(dt)};
        })} : 2 === t ? {substFormat: 2, coverage: this.parsePointer(se.coverage), backtrackClassDef: this.parsePointer(se.classDef), inputClassDef: this.parsePointer(se.classDef), lookaheadClassDef: this.parsePointer(se.classDef), chainClassSet: this.parseListOfLists(function () {
          return {backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(dt)};
        })} : 3 === t ? {substFormat: 3, backtrackCoverage: this.parseList(se.pointer(se.coverage)), inputCoverage: this.parseList(se.pointer(se.coverage)), lookaheadCoverage: this.parseList(se.pointer(se.coverage)), lookupRecords: this.parseRecordList(dt)} : void P.assert(false, "0x" + e.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
      }, ut[7] = function () {
        var e = this.parseUShort();
        P.argument(1 === e, "GSUB Extension Substitution subtable identifier-format must be 1");
        var t = this.parseUShort(), n = new se(this.data, this.offset + this.parseULong());
        return {substFormat: 1, lookupType: t, extension: ut[t].call(n)};
      }, ut[8] = function () {
        var e = this.parseUShort();
        return P.argument(1 === e, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), {substFormat: e, coverage: this.parsePointer(se.coverage), backtrackCoverage: this.parseList(se.pointer(se.coverage)), lookaheadCoverage: this.parseList(se.pointer(se.coverage)), substitutes: this.parseUShortList()};
      };
      var pt = new Array(9);
      pt[1] = function (e) {
        return 1 === e.substFormat ? new ee.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 1}, {name: "coverage", type: "TABLE", value: new ee.Coverage(e.coverage)}, {name: "deltaGlyphID", type: "USHORT", value: e.deltaGlyphId}]) : new ee.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 2}, {name: "coverage", type: "TABLE", value: new ee.Coverage(e.coverage)}].concat(ee.ushortList("substitute", e.substitute)));
      }, pt[3] = function (e) {
        return P.assert(1 === e.substFormat, "Lookup type 3 substFormat must be 1."), new ee.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 1}, {name: "coverage", type: "TABLE", value: new ee.Coverage(e.coverage)}].concat(ee.tableList("altSet", e.alternateSets, function (e) {
          return new ee.Table("alternateSetTable", ee.ushortList("alternate", e));
        })));
      }, pt[4] = function (e) {
        return P.assert(1 === e.substFormat, "Lookup type 4 substFormat must be 1."), new ee.Table("substitutionTable", [{name: "substFormat", type: "USHORT", value: 1}, {name: "coverage", type: "TABLE", value: new ee.Coverage(e.coverage)}].concat(ee.tableList("ligSet", e.ligatureSets, function (e) {
          return new ee.Table("ligatureSetTable", ee.tableList("ligature", e, function (e) {
            return new ee.Table("ligatureTable", [{name: "ligGlyph", type: "USHORT", value: e.ligGlyph}].concat(ee.ushortList("component", e.components, e.components.length + 1)));
          }));
        })));
      };
      var mt = {parse: function (e, t) {
        var n = new se(e, t = t || 0), i = n.parseVersion(1);
        return P.argument(1 === i || 1.1 === i, "Unsupported GSUB table version."), 1 === i ? {version: i, scripts: n.parseScriptList(), features: n.parseFeatureList(), lookups: n.parseLookupList(ut)} : {version: i, scripts: n.parseScriptList(), features: n.parseFeatureList(), lookups: n.parseLookupList(ut), variations: n.parseFeatureVariationsList()};
      }, make: function (e) {
        return new ee.Table("GSUB", [{name: "version", type: "ULONG", value: 65536}, {name: "scripts", type: "TABLE", value: new ee.ScriptList(e.scripts)}, {name: "features", type: "TABLE", value: new ee.FeatureList(e.features)}, {name: "lookups", type: "TABLE", value: new ee.LookupList(e.lookups, pt)}]);
      }}, ft = {parse: function (e, t) {
        var n = new le.Parser(e, t), i = n.parseULong();
        P.argument(1 === i, "Unsupported META table version."), n.parseULong(), n.parseULong();
        for (var r = n.parseULong(), o = {}, s = 0; s < r; s++) {
          var a = n.parseTag(), l = n.parseULong(), c = n.parseULong(), h = D.UTF8(e, t + l, c);
          o[a] = h;
        }
        return o;
      }, make: function (e) {
        var t = Object.keys(e).length, n = "", i = 16 + 12 * t, r = new ee.Table("meta", [{name: "version", type: "ULONG", value: 1}, {name: "flags", type: "ULONG", value: 0}, {name: "offset", type: "ULONG", value: i}, {name: "numTags", type: "ULONG", value: t}]);
        for (var o in e) {
          var s = n.length;
          n += e[o], r.fields.push({name: "tag " + o, type: "TAG", value: o}), r.fields.push({name: "offset " + o, type: "ULONG", value: i + s}), r.fields.push({name: "length " + o, type: "ULONG", value: e[o].length});
        }
        return r.fields.push({name: "stringPool", type: "CHARARRAY", value: n}), r;
      }};
      function gt(e) {
        return Math.log(e) / Math.log(2) | 0;
      }
      function vt(e) {
        for (; e.length % 4 != 0;) e.push(0);
        for (var t = 0, n = 0; n < e.length; n += 4) t += (e[n] << 24) + (e[n + 1] << 16) + (e[n + 2] << 8) + e[n + 3];
        return t %= Math.pow(2, 32);
      }
      function yt(e, t, n, i) {
        return new ee.Record("Table Record", [{name: "tag", type: "TAG", value: undefined !== e ? e : ""}, {name: "checkSum", type: "ULONG", value: undefined !== t ? t : 0}, {name: "offset", type: "ULONG", value: undefined !== n ? n : 0}, {name: "length", type: "ULONG", value: undefined !== i ? i : 0}]);
      }
      function _t(e) {
        var t = new ee.Table("sfnt", [{name: "version", type: "TAG", value: "OTTO"}, {name: "numTables", type: "USHORT", value: 0}, {name: "searchRange", type: "USHORT", value: 0}, {name: "entrySelector", type: "USHORT", value: 0}, {name: "rangeShift", type: "USHORT", value: 0}]);
        t.tables = e, t.numTables = e.length;
        var n = Math.pow(2, Math.log(t.numTables) / Math.log(2) | 0);
        t.searchRange = 16 * n, t.entrySelector = Math.log(n) / Math.log(2) | 0, t.rangeShift = 16 * t.numTables - t.searchRange;
        for (var i = [], r = [], o = t.sizeOf() + yt().sizeOf() * t.numTables; o % 4 != 0;) o += 1, r.push({name: "padding", type: "BYTE", value: 0});
        for (var s = 0; s < e.length; s += 1) {
          var a = e[s];
          P.argument(4 === a.tableName.length, "Table name" + a.tableName + " is invalid.");
          var l = a.sizeOf(), c = yt(a.tableName, vt(a.encode()), o, l);
          for (i.push({name: c.tag + " Table Record", type: "RECORD", value: c}), r.push({name: a.tableName + " table", type: "RECORD", value: a}), o += l, P.argument(!isNaN(o), "Something went wrong calculating the offset."); o % 4 != 0;) o += 1, r.push({name: "padding", type: "BYTE", value: 0});
        }
        return i.sort(function (e, t) {
          return e.value.tag > t.value.tag ? 1 : -1;
        }), t.fields = t.fields.concat(i), t.fields = t.fields.concat(r), t;
      }
      function xt(e, t, n) {
        for (var i = 0; i < t.length; i += 1) {
          var r = e.charToGlyphIndex(t[i]);
          if (r > 0) return e.glyphs.get(r).getMetrics();
        }
        return n;
      }
      function bt(e) {
        for (var t = 0, n = 0; n < e.length; n += 1) t += e[n];
        return t / e.length;
      }
      var wt = {make: _t, fontToTable: function (e) {
        for (var t, n = [], i = [], r = [], o = [], s = [], a = [], l = [], c = 0, h = 0, u = 0, d = 0, p = 0, m = 0; m < e.glyphs.length; m += 1) {
          var f = e.glyphs.get(m), g = 0 | f.unicode;
          if (isNaN(f.advanceWidth)) throw new Error("Glyph " + f.name + " (" + m + "): advanceWidth is not a number.");
          (t > g || undefined === t) && g > 0 && (t = g), c < g && (c = g);
          var v = ct.getUnicodeRange(g);
          if (v < 32) h |= 1 << v; else if (v < 64) u |= 1 << v - 32; else if (v < 96) d |= 1 << v - 64; else {
            if (!(v < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
            p |= 1 << v - 96;
          }
          if (".notdef" !== f.name) {
            var y = f.getMetrics();
            n.push(y.xMin), i.push(y.yMin), r.push(y.xMax), o.push(y.yMax), a.push(y.leftSideBearing), l.push(y.rightSideBearing), s.push(f.advanceWidth);
          }
        }
        var _ = {xMin: Math.min.apply(null, n), yMin: Math.min.apply(null, i), xMax: Math.max.apply(null, r), yMax: Math.max.apply(null, o), advanceWidthMax: Math.max.apply(null, s), advanceWidthAvg: bt(s), minLeftSideBearing: Math.min.apply(null, a), maxLeftSideBearing: Math.max.apply(null, a), minRightSideBearing: Math.min.apply(null, l)};
        _.ascender = e.ascender, _.descender = e.descender;
        var x = He.make({flags: 3, unitsPerEm: e.unitsPerEm, xMin: _.xMin, yMin: _.yMin, xMax: _.xMax, yMax: _.yMax, lowestRecPPEM: 3, createdTimestamp: e.createdTimestamp}), b = je.make({ascender: _.ascender, descender: _.descender, advanceWidthMax: _.advanceWidthMax, minLeftSideBearing: _.minLeftSideBearing, minRightSideBearing: _.minRightSideBearing, xMaxExtent: _.maxLeftSideBearing + (_.xMax - _.xMin), numberOfHMetrics: e.glyphs.length}), w = Xe.make(e.glyphs.length), S = ct.make({xAvgCharWidth: Math.round(_.advanceWidthAvg), usWeightClass: e.tables.os2.usWeightClass, usWidthClass: e.tables.os2.usWidthClass, usFirstCharIndex: t, usLastCharIndex: c, ulUnicodeRange1: h, ulUnicodeRange2: u, ulUnicodeRange3: d, ulUnicodeRange4: p, fsSelection: e.tables.os2.fsSelection, sTypoAscender: _.ascender, sTypoDescender: _.descender, sTypoLineGap: 0, usWinAscent: _.yMax, usWinDescent: Math.abs(_.yMin), ulCodePageRange1: 1, sxHeight: xt(e, "xyvw", {yMax: Math.round(_.ascender / 2)}).yMax, sCapHeight: xt(e, "HIKLEFJMNTZBDPRAGOQSUVWXY", _).yMax, usDefaultChar: e.hasChar(" ") ? 32 : 0, usBreakChar: e.hasChar(" ") ? 32 : 0}), E = $e.make(e.glyphs), q = he.make(e.glyphs), T = e.getEnglishName("fontFamily"), A = e.getEnglishName("fontSubfamily"), M = T + " " + A, C = e.getEnglishName("postScriptName");
        C || (C = T.replace(/\s/g, "") + "-" + A);
        var k = {};
        for (var R in e.names) k[R] = e.names[R];
        k.uniqueID || (k.uniqueID = {en: e.getEnglishName("manufacturer") + ":" + M}), k.postScriptName || (k.postScriptName = {en: C}), k.preferredFamily || (k.preferredFamily = e.names.fontFamily), k.preferredSubfamily || (k.preferredSubfamily = e.names.fontSubfamily);
        var L = [], P = at.make(k, L), D = L.length > 0 ? We.make(L) : undefined, O = ht.make(), I = Ge.make(e.glyphs, {version: e.getEnglishName("version"), fullName: M, familyName: T, weightName: A, postScriptName: C, unitsPerEm: e.unitsPerEm, fontBBox: [0, _.yMin, _.ascender, _.advanceWidthMax]}), B = e.metas && Object.keys(e.metas).length > 0 ? ft.make(e.metas) : undefined, F = [x, b, w, S, P, q, O, I, E];
        D && F.push(D), e.tables.gsub && F.push(mt.make(e.tables.gsub)), B && F.push(B);
        for (var z = _t(F), N = vt(z.encode()), U = z.fields, V = false, G = 0; G < U.length; G += 1) if ("head table" === U[G].name) {
          U[G].value.checkSumAdjustment = 2981146554 - N, V = true;
          break;
        }
        if (!V) throw new Error("Could not find head table with checkSum to adjust.");
        return z;
      }, computeCheckSum: vt};
      function St(e, t) {
        for (var n = 0, i = e.length - 1; n <= i;) {
          var r = n + i >>> 1, o = e[r].tag;
          if (o === t) return r;
          o < t ? n = r + 1 : i = r - 1;
        }
        return -n - 1;
      }
      function Et(e, t) {
        for (var n = 0, i = e.length - 1; n <= i;) {
          var r = n + i >>> 1, o = e[r];
          if (o === t) return r;
          o < t ? n = r + 1 : i = r - 1;
        }
        return -n - 1;
      }
      function qt(e, t) {
        for (var n, i = 0, r = e.length - 1; i <= r;) {
          var o = i + r >>> 1, s = (n = e[o]).start;
          if (s === t) return n;
          s < t ? i = o + 1 : r = o - 1;
        }
        if (i > 0) return t > (n = e[i - 1]).end ? 0 : n;
      }
      function Tt(e, t) {
        this.font = e, this.tableName = t;
      }
      function At(e) {
        Tt.call(this, e, "gpos");
      }
      function Mt(e) {
        Tt.call(this, e, "gsub");
      }
      function Ct(e, t) {
        var n = e.length;
        if (n !== t.length) return false;
        for (var i = 0; i < n; i++) if (e[i] !== t[i]) return false;
        return true;
      }
      function kt(e, t, n) {
        for (var i = e.subtables, r = 0; r < i.length; r++) {
          var o = i[r];
          if (o.substFormat === t) return o;
        }
        if (n) return i.push(n), n;
      }
      function Rt(e) {
        for (var t = new ArrayBuffer(e.length), n = new Uint8Array(t), i = 0; i < e.length; ++i) n[i] = e[i];
        return t;
      }
      function Lt(e, t) {
        if (!e) throw t;
      }
      function Pt(e, t, n, i, r) {
        var o;
        return (t & i) > 0 ? (o = e.parseByte(), 0 == (t & r) && (o = -o), o = n + o) : o = (t & r) > 0 ? n : n + e.parseShort(), o;
      }
      function Dt(e, t, n) {
        var i, r, o = new le.Parser(t, n);
        if (e.numberOfContours = o.parseShort(), e._xMin = o.parseShort(), e._yMin = o.parseShort(), e._xMax = o.parseShort(), e._yMax = o.parseShort(), e.numberOfContours > 0) {
          for (var s = e.endPointIndices = [], a = 0; a < e.numberOfContours; a += 1) s.push(o.parseUShort());
          e.instructionLength = o.parseUShort(), e.instructions = [];
          for (var l = 0; l < e.instructionLength; l += 1) e.instructions.push(o.parseByte());
          var c = s[s.length - 1] + 1;
          i = [];
          for (var h = 0; h < c; h += 1) if (r = o.parseByte(), i.push(r), (8 & r) > 0) for (var u = o.parseByte(), d = 0; d < u; d += 1) i.push(r), h += 1;
          if (P.argument(i.length === c, "Bad flags."), s.length > 0) {
            var p, m = [];
            if (c > 0) {
              for (var f = 0; f < c; f += 1) r = i[f], (p = {}).onCurve = !!(1 & r), p.lastPointOfContour = s.indexOf(f) >= 0, m.push(p);
              for (var g = 0, v = 0; v < c; v += 1) r = i[v], (p = m[v]).x = Pt(o, r, g, 2, 16), g = p.x;
              for (var y = 0, _ = 0; _ < c; _ += 1) r = i[_], (p = m[_]).y = Pt(o, r, y, 4, 32), y = p.y;
            }
            e.points = m;
          } else e.points = [];
        } else if (0 === e.numberOfContours) e.points = []; else {
          e.isComposite = true, e.points = [], e.components = [];
          for (var x = true; x;) {
            i = o.parseUShort();
            var b = {glyphIndex: o.parseUShort(), xScale: 1, scale01: 0, scale10: 0, yScale: 1, dx: 0, dy: 0};
            (1 & i) > 0 ? (2 & i) > 0 ? (b.dx = o.parseShort(), b.dy = o.parseShort()) : b.matchedPoints = [o.parseUShort(), o.parseUShort()] : (2 & i) > 0 ? (b.dx = o.parseChar(), b.dy = o.parseChar()) : b.matchedPoints = [o.parseByte(), o.parseByte()], (8 & i) > 0 ? b.xScale = b.yScale = o.parseF2Dot14() : (64 & i) > 0 ? (b.xScale = o.parseF2Dot14(), b.yScale = o.parseF2Dot14()) : (128 & i) > 0 && (b.xScale = o.parseF2Dot14(), b.scale01 = o.parseF2Dot14(), b.scale10 = o.parseF2Dot14(), b.yScale = o.parseF2Dot14()), e.components.push(b), x = !!(32 & i);
          }
          if (256 & i) {
            e.instructionLength = o.parseUShort(), e.instructions = [];
            for (var w = 0; w < e.instructionLength; w += 1) e.instructions.push(o.parseByte());
          }
        }
      }
      function Ot(e, t) {
        for (var n = [], i = 0; i < e.length; i += 1) {
          var r = e[i], o = {x: t.xScale * r.x + t.scale01 * r.y + t.dx, y: t.scale10 * r.x + t.yScale * r.y + t.dy, onCurve: r.onCurve, lastPointOfContour: r.lastPointOfContour};
          n.push(o);
        }
        return n;
      }
      function It(e) {
        var t = new k;
        if (!e) return t;
        for (var n = function (e) {
          for (var t = [], n = [], i = 0; i < e.length; i += 1) {
            var r = e[i];
            n.push(r), r.lastPointOfContour && (t.push(n), n = []);
          }
          return P.argument(0 === n.length, "There are still points left in the current contour."), t;
        }(e), i = 0; i < n.length; ++i) {
          var r = n[i], o = null, s = r[r.length - 1], a = r[0];
          if (s.onCurve) t.moveTo(s.x, s.y); else if (a.onCurve) t.moveTo(a.x, a.y); else {
            var l = {x: 0.5 * (s.x + a.x), y: 0.5 * (s.y + a.y)};
            t.moveTo(l.x, l.y);
          }
          for (var c = 0; c < r.length; ++c) if (o = s, s = a, a = r[(c + 1) % r.length], s.onCurve) t.lineTo(s.x, s.y); else {
            var h = a;
            o.onCurve || (s.x, o.x, s.y, o.y), a.onCurve || (h = {x: 0.5 * (s.x + a.x), y: 0.5 * (s.y + a.y)}), t.quadraticCurveTo(s.x, s.y, h.x, h.y);
          }
          t.closePath();
        }
        return t;
      }
      function Bt(e, t) {
        if (t.isComposite) for (var n = 0; n < t.components.length; n += 1) {
          var i = t.components[n], r = e.get(i.glyphIndex);
          if (r.getPath(), r.points) {
            var o = undefined;
            if (undefined === i.matchedPoints) o = Ot(r.points, i); else {
              if (i.matchedPoints[0] > t.points.length - 1 || i.matchedPoints[1] > r.points.length - 1) throw Error("Matched points out of range in " + t.name);
              var s = t.points[i.matchedPoints[0]], a = r.points[i.matchedPoints[1]], l = {xScale: i.xScale, scale01: i.scale01, scale10: i.scale10, yScale: i.yScale, dx: 0, dy: 0};
              a = Ot([a], l)[0], l.dx = s.x - a.x, l.dy = s.y - a.y, o = Ot(r.points, l);
            }
            t.points = t.points.concat(o);
          }
        }
        return It(t.points);
      }
      Tt.prototype = {searchTag: St, binSearch: Et, getTable: function (e) {
        var t = this.font.tables[this.tableName];
        return !t && e && (t = this.font.tables[this.tableName] = this.createDefaultTable()), t;
      }, getScriptNames: function () {
        var e = this.getTable();
        return e ? e.scripts.map(function (e) {
          return e.tag;
        }) : [];
      }, getDefaultScriptName: function () {
        var e = this.getTable();
        if (e) {
          for (var t = false, n = 0; n < e.scripts.length; n++) {
            var i = e.scripts[n].tag;
            if ("DFLT" === i) return i;
            "latn" === i && (t = true);
          }
          return t ? "latn" : undefined;
        }
      }, getScriptTable: function (e, t) {
        var n = this.getTable(t);
        if (n) {
          e = e || "DFLT";
          var i = n.scripts, r = St(n.scripts, e);
          if (r >= 0) return i[r].script;
          if (t) {
            var o = {tag: e, script: {defaultLangSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []}, langSysRecords: []}};
            return i.splice(-1 - r, 0, o), o.script;
          }
        }
      }, getLangSysTable: function (e, t, n) {
        var i = this.getScriptTable(e, n);
        if (i) {
          if (!t || "dflt" === t || "DFLT" === t) return i.defaultLangSys;
          var r = St(i.langSysRecords, t);
          if (r >= 0) return i.langSysRecords[r].langSys;
          if (n) {
            var o = {tag: t, langSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []}};
            return i.langSysRecords.splice(-1 - r, 0, o), o.langSys;
          }
        }
      }, getFeatureTable: function (e, t, n, i) {
        var r = this.getLangSysTable(e, t, i);
        if (r) {
          for (var o, s = r.featureIndexes, a = this.font.tables[this.tableName].features, l = 0; l < s.length; l++) if ((o = a[s[l]]).tag === n) return o.feature;
          if (i) {
            var c = a.length;
            return P.assert(0 === c || n >= a[c - 1].tag, "Features must be added in alphabetical order."), o = {tag: n, feature: {params: 0, lookupListIndexes: []}}, a.push(o), s.push(c), o.feature;
          }
        }
      }, getLookupTables: function (e, t, n, i, r) {
        var o = this.getFeatureTable(e, t, n, r), s = [];
        if (o) {
          for (var a, l = o.lookupListIndexes, c = this.font.tables[this.tableName].lookups, h = 0; h < l.length; h++) (a = c[l[h]]).lookupType === i && s.push(a);
          if (0 === s.length && r) {
            a = {lookupType: i, lookupFlag: 0, subtables: [], markFilteringSet: undefined};
            var u = c.length;
            return c.push(a), l.push(u), [a];
          }
        }
        return s;
      }, getGlyphClass: function (e, t) {
        switch (e.format) {
          case 1:
            return e.startGlyph <= t && t < e.startGlyph + e.classes.length ? e.classes[t - e.startGlyph] : 0;
          case 2:
            var n = qt(e.ranges, t);
            return n ? n.classId : 0;
        }
      }, getCoverageIndex: function (e, t) {
        switch (e.format) {
          case 1:
            var n = Et(e.glyphs, t);
            return n >= 0 ? n : -1;
          case 2:
            var i = qt(e.ranges, t);
            return i ? i.index + t - i.start : -1;
        }
      }, expandCoverage: function (e) {
        if (1 === e.format) return e.glyphs;
        for (var t = [], n = e.ranges, i = 0; i < n.length; i++) for (var r = n[i], o = r.start, s = r.end, a = o; a <= s; a++) t.push(a);
        return t;
      }}, At.prototype = Tt.prototype, At.prototype.init = function () {
        var e = this.getDefaultScriptName();
        this.defaultKerningTables = this.getKerningTables(e);
      }, At.prototype.getKerningValue = function (e, t, n) {
        for (var i = 0; i < e.length; i++) for (var r = e[i].subtables, o = 0; o < r.length; o++) {
          var s = r[o], a = this.getCoverageIndex(s.coverage, t);
          if (!(a < 0)) switch (s.posFormat) {
            case 1:
              for (var l = s.pairSets[a], c = 0; c < l.length; c++) {
                var h = l[c];
                if (h.secondGlyph === n) return h.value1 && h.value1.xAdvance || 0;
              }
              break;
            case 2:
              var u = this.getGlyphClass(s.classDef1, t), d = this.getGlyphClass(s.classDef2, n), p = s.classRecords[u][d];
              return p.value1 && p.value1.xAdvance || 0;
          }
        }
        return 0;
      }, At.prototype.getKerningTables = function (e, t) {
        if (this.font.tables.gpos) return this.getLookupTables(e, t, "kern", 2);
      }, Mt.prototype = Tt.prototype, Mt.prototype.createDefaultTable = function () {
        return {version: 1, scripts: [{tag: "DFLT", script: {defaultLangSys: {reserved: 0, reqFeatureIndex: 65535, featureIndexes: []}, langSysRecords: []}}], features: [], lookups: []};
      }, Mt.prototype.getSingle = function (e, t, n) {
        for (var i = [], r = this.getLookupTables(t, n, e, 1), o = 0; o < r.length; o++) for (var s = r[o].subtables, a = 0; a < s.length; a++) {
          var l = s[a], c = this.expandCoverage(l.coverage), h = undefined;
          if (1 === l.substFormat) {
            var u = l.deltaGlyphId;
            for (h = 0; h < c.length; h++) {
              var d = c[h];
              i.push({sub: d, by: d + u});
            }
          } else {
            var p = l.substitute;
            for (h = 0; h < c.length; h++) i.push({sub: c[h], by: p[h]});
          }
        }
        return i;
      }, Mt.prototype.getAlternates = function (e, t, n) {
        for (var i = [], r = this.getLookupTables(t, n, e, 3), o = 0; o < r.length; o++) for (var s = r[o].subtables, a = 0; a < s.length; a++) for (var l = s[a], c = this.expandCoverage(l.coverage), h = l.alternateSets, u = 0; u < c.length; u++) i.push({sub: c[u], by: h[u]});
        return i;
      }, Mt.prototype.getLigatures = function (e, t, n) {
        for (var i = [], r = this.getLookupTables(t, n, e, 4), o = 0; o < r.length; o++) for (var s = r[o].subtables, a = 0; a < s.length; a++) for (var l = s[a], c = this.expandCoverage(l.coverage), h = l.ligatureSets, u = 0; u < c.length; u++) for (var d = c[u], p = h[u], m = 0; m < p.length; m++) {
          var f = p[m];
          i.push({sub: [d].concat(f.components), by: f.ligGlyph});
        }
        return i;
      }, Mt.prototype.addSingle = function (e, t, n, i) {
        var r = kt(this.getLookupTables(n, i, e, 1, true)[0], 2, {substFormat: 2, coverage: {format: 1, glyphs: []}, substitute: []});
        P.assert(1 === r.coverage.format, "Ligature: unable to modify coverage table format " + r.coverage.format);
        var o = t.sub, s = this.binSearch(r.coverage.glyphs, o);
        s < 0 && (s = -1 - s, r.coverage.glyphs.splice(s, 0, o), r.substitute.splice(s, 0, 0)), r.substitute[s] = t.by;
      }, Mt.prototype.addAlternate = function (e, t, n, i) {
        var r = kt(this.getLookupTables(n, i, e, 3, true)[0], 1, {substFormat: 1, coverage: {format: 1, glyphs: []}, alternateSets: []});
        P.assert(1 === r.coverage.format, "Ligature: unable to modify coverage table format " + r.coverage.format);
        var o = t.sub, s = this.binSearch(r.coverage.glyphs, o);
        s < 0 && (s = -1 - s, r.coverage.glyphs.splice(s, 0, o), r.alternateSets.splice(s, 0, 0)), r.alternateSets[s] = t.by;
      }, Mt.prototype.addLigature = function (e, t, n, i) {
        var r = this.getLookupTables(n, i, e, 4, true)[0], o = r.subtables[0];
        o || (o = {substFormat: 1, coverage: {format: 1, glyphs: []}, ligatureSets: []}, r.subtables[0] = o), P.assert(1 === o.coverage.format, "Ligature: unable to modify coverage table format " + o.coverage.format);
        var s = t.sub[0], a = t.sub.slice(1), l = {ligGlyph: t.by, components: a}, c = this.binSearch(o.coverage.glyphs, s);
        if (c >= 0) {
          for (var h = o.ligatureSets[c], u = 0; u < h.length; u++) if (Ct(h[u].components, a)) return;
          h.push(l);
        } else c = -1 - c, o.coverage.glyphs.splice(c, 0, s), o.ligatureSets.splice(c, 0, [l]);
      }, Mt.prototype.getFeature = function (e, t, n) {
        if (/ss\d\d/.test(e)) return this.getSingle(e, t, n);
        switch (e) {
          case "aalt":
          case "salt":
            return this.getSingle(e, t, n).concat(this.getAlternates(e, t, n));
          case "dlig":
          case "liga":
          case "rlig":
            return this.getLigatures(e, t, n);
        }
      }, Mt.prototype.add = function (e, t, n, i) {
        if (/ss\d\d/.test(e)) return this.addSingle(e, t, n, i);
        switch (e) {
          case "aalt":
          case "salt":
            return "number" == typeof t.by ? this.addSingle(e, t, n, i) : this.addAlternate(e, t, n, i);
          case "dlig":
          case "liga":
          case "rlig":
            return this.addLigature(e, t, n, i);
        }
      };
      var Ft, zt, Nt, Ut, Vt = {getPath: It, parse: function (e, t, n, i, r) {
        return r.lowMemory ? function (e, t, n, i) {
          var r = new Ee.GlyphSet(i);
          return i._push = function (o) {
            var s = n[o];
            s !== n[o + 1] ? r.push(o, Ee.ttfGlyphLoader(i, o, Dt, e, t + s, Bt)) : r.push(o, Ee.glyphLoader(i, o));
          }, r;
        }(e, t, n, i) : function (e, t, n, i) {
          for (var r = new Ee.GlyphSet(i), o = 0; o < n.length - 1; o += 1) {
            var s = n[o];
            s !== n[o + 1] ? r.push(o, Ee.ttfGlyphLoader(i, o, Dt, e, t + s, Bt)) : r.push(o, Ee.glyphLoader(i, o));
          }
          return r;
        }(e, t, n, i);
      }};
      function Gt(e) {
        this.font = e, this.getCommands = function (e) {
          return Vt.getPath(e).commands;
        }, this._fpgmState = this._prepState = undefined, this._errorState = 0;
      }
      function Ht(e) {
        return e;
      }
      function jt(e) {
        return Math.sign(e) * Math.round(Math.abs(e));
      }
      function $t(e) {
        return Math.sign(e) * Math.round(Math.abs(2 * e)) / 2;
      }
      function Wt(e) {
        return Math.sign(e) * (Math.round(Math.abs(e) + 0.5) - 0.5);
      }
      function Xt(e) {
        return Math.sign(e) * Math.ceil(Math.abs(e));
      }
      function Yt(e) {
        return Math.sign(e) * Math.floor(Math.abs(e));
      }
      var Jt = function (e) {
        var t = this.srPeriod, n = this.srPhase, i = 1;
        return e < 0 && (e = -e, i = -1), e += this.srThreshold - n, e = Math.trunc(e / t) * t, (e += n) < 0 ? n * i : e * i;
      }, Kt = {x: 1, y: 0, axis: "x", distance: function (e, t, n, i) {
        return (n ? e.xo : e.x) - (i ? t.xo : t.x);
      }, interpolate: function (e, t, n, i) {
        var r, o, s, a, l, c, h;
        if (!i || i === this) return r = e.xo - t.xo, o = e.xo - n.xo, l = t.x - t.xo, c = n.x - n.xo, 0 === (h = (s = Math.abs(r)) + (a = Math.abs(o))) ? void (e.x = e.xo + (l + c) / 2) : void (e.x = e.xo + (l * a + c * s) / h);
        r = i.distance(e, t, true, true), o = i.distance(e, n, true, true), l = i.distance(t, t, false, true), c = i.distance(n, n, false, true), 0 !== (h = (s = Math.abs(r)) + (a = Math.abs(o))) ? Kt.setRelative(e, e, (l * a + c * s) / h, i, true) : Kt.setRelative(e, e, (l + c) / 2, i, true);
      }, normalSlope: Number.NEGATIVE_INFINITY, setRelative: function (e, t, n, i, r) {
        if (i && i !== this) {
          var o = r ? t.xo : t.x, s = r ? t.yo : t.y, a = o + n * i.x, l = s + n * i.y;
          e.x = a + (e.y - l) / i.normalSlope;
        } else e.x = (r ? t.xo : t.x) + n;
      }, slope: 0, touch: function (e) {
        e.xTouched = true;
      }, touched: function (e) {
        return e.xTouched;
      }, untouch: function (e) {
        e.xTouched = false;
      }}, Zt = {x: 0, y: 1, axis: "y", distance: function (e, t, n, i) {
        return (n ? e.yo : e.y) - (i ? t.yo : t.y);
      }, interpolate: function (e, t, n, i) {
        var r, o, s, a, l, c, h;
        if (!i || i === this) return r = e.yo - t.yo, o = e.yo - n.yo, l = t.y - t.yo, c = n.y - n.yo, 0 === (h = (s = Math.abs(r)) + (a = Math.abs(o))) ? void (e.y = e.yo + (l + c) / 2) : void (e.y = e.yo + (l * a + c * s) / h);
        r = i.distance(e, t, true, true), o = i.distance(e, n, true, true), l = i.distance(t, t, false, true), c = i.distance(n, n, false, true), 0 !== (h = (s = Math.abs(r)) + (a = Math.abs(o))) ? Zt.setRelative(e, e, (l * a + c * s) / h, i, true) : Zt.setRelative(e, e, (l + c) / 2, i, true);
      }, normalSlope: 0, setRelative: function (e, t, n, i, r) {
        if (i && i !== this) {
          var o = r ? t.xo : t.x, s = r ? t.yo : t.y, a = o + n * i.x, l = s + n * i.y;
          e.y = l + i.normalSlope * (e.x - a);
        } else e.y = (r ? t.yo : t.y) + n;
      }, slope: Number.POSITIVE_INFINITY, touch: function (e) {
        e.yTouched = true;
      }, touched: function (e) {
        return e.yTouched;
      }, untouch: function (e) {
        e.yTouched = false;
      }};
      function Qt(e, t) {
        this.x = e, this.y = t, this.axis = undefined, this.slope = t / e, this.normalSlope = -e / t, Object.freeze(this);
      }
      function en(e, t) {
        var n = Math.sqrt(e * e + t * t);
        return t /= n, 1 == (e /= n) && 0 === t ? Kt : 0 === e && 1 === t ? Zt : new Qt(e, t);
      }
      function tn(e, t, n, i) {
        this.x = this.xo = Math.round(64 * e) / 64, this.y = this.yo = Math.round(64 * t) / 64, this.lastPointOfContour = n, this.onCurve = i, this.prevPointOnContour = undefined, this.nextPointOnContour = undefined, this.xTouched = false, this.yTouched = false, Object.preventExtensions(this);
      }
      Object.freeze(Kt), Object.freeze(Zt), Qt.prototype.distance = function (e, t, n, i) {
        return this.x * Kt.distance(e, t, n, i) + this.y * Zt.distance(e, t, n, i);
      }, Qt.prototype.interpolate = function (e, t, n, i) {
        var r, o, s, a, l, c, h;
        s = i.distance(e, t, true, true), a = i.distance(e, n, true, true), r = i.distance(t, t, false, true), o = i.distance(n, n, false, true), 0 !== (h = (l = Math.abs(s)) + (c = Math.abs(a))) ? this.setRelative(e, e, (r * c + o * l) / h, i, true) : this.setRelative(e, e, (r + o) / 2, i, true);
      }, Qt.prototype.setRelative = function (e, t, n, i, r) {
        i = i || this;
        var o = r ? t.xo : t.x, s = r ? t.yo : t.y, a = o + n * i.x, l = s + n * i.y, c = i.normalSlope, h = this.slope, u = e.x, d = e.y;
        e.x = (h * u - c * a + l - d) / (h - c), e.y = h * (e.x - u) + d;
      }, Qt.prototype.touch = function (e) {
        e.xTouched = true, e.yTouched = true;
      }, tn.prototype.nextTouched = function (e) {
        for (var t = this.nextPointOnContour; !e.touched(t) && t !== this;) t = t.nextPointOnContour;
        return t;
      }, tn.prototype.prevTouched = function (e) {
        for (var t = this.prevPointOnContour; !e.touched(t) && t !== this;) t = t.prevPointOnContour;
        return t;
      };
      var nn = Object.freeze(new tn(0, 0)), rn = {cvCutIn: 1.0625, deltaBase: 9, deltaShift: 0.125, loop: 1, minDis: 1, autoFlip: true};
      function on(e, t) {
        switch (this.env = e, this.stack = [], this.prog = t, e) {
          case "glyf":
            this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
          case "prep":
            this.fv = this.pv = this.dpv = Kt, this.round = jt;
        }
      }
      function sn(e) {
        for (var t = e.tZone = new Array(e.gZone.length), n = 0; n < t.length; n++) t[n] = new tn(0, 0);
      }
      function an(e, t) {
        var n, i = e.prog, r = e.ip, o = 1;
        do {
          if (88 === (n = i[++r])) o++; else if (89 === n) o--; else if (64 === n) r += i[r + 1] + 1; else if (65 === n) r += 2 * i[r + 1] + 1; else if (n >= 176 && n <= 183) r += n - 176 + 1; else if (n >= 184 && n <= 191) r += 2 * (n - 184 + 1); else if (t && 1 === o && 27 === n) break;
        } while (o > 0);
        e.ip = r;
      }
      function ln(e, n) {
        t.DEBUG && console.log(n.step, "SVTCA[" + e.axis + "]"), n.fv = n.pv = n.dpv = e;
      }
      function cn(e, n) {
        t.DEBUG && console.log(n.step, "SPVTCA[" + e.axis + "]"), n.pv = n.dpv = e;
      }
      function hn(e, n) {
        t.DEBUG && console.log(n.step, "SFVTCA[" + e.axis + "]"), n.fv = e;
      }
      function un(e, n) {
        var i, r, o = n.stack, s = o.pop(), a = o.pop(), l = n.z2[s], c = n.z1[a];
        t.DEBUG && console.log("SPVTL[" + e + "]", s, a), e ? (i = l.y - c.y, r = c.x - l.x) : (i = c.x - l.x, r = c.y - l.y), n.pv = n.dpv = en(i, r);
      }
      function dn(e, n) {
        var i, r, o = n.stack, s = o.pop(), a = o.pop(), l = n.z2[s], c = n.z1[a];
        t.DEBUG && console.log("SFVTL[" + e + "]", s, a), e ? (i = l.y - c.y, r = c.x - l.x) : (i = c.x - l.x, r = c.y - l.y), n.fv = en(i, r);
      }
      function pn(e) {
        t.DEBUG && console.log(e.step, "POP[]"), e.stack.pop();
      }
      function mn(e, n) {
        var i = n.stack.pop(), r = n.z0[i], o = n.fv, s = n.pv;
        t.DEBUG && console.log(n.step, "MDAP[" + e + "]", i);
        var a = s.distance(r, nn);
        e && (a = n.round(a)), o.setRelative(r, nn, a, s), o.touch(r), n.rp0 = n.rp1 = i;
      }
      function fn(e, n) {
        var i, r, o, s = n.z2, a = s.length - 2;
        t.DEBUG && console.log(n.step, "IUP[" + e.axis + "]");
        for (var l = 0; l < a; l++) i = s[l], e.touched(i) || (r = i.prevTouched(e)) !== i && (r === (o = i.nextTouched(e)) && e.setRelative(i, i, e.distance(r, r, false, true), e, true), e.interpolate(i, r, o, e));
      }
      function gn(e, n) {
        for (var i = n.stack, r = e ? n.rp1 : n.rp2, o = (e ? n.z0 : n.z1)[r], s = n.fv, a = n.pv, l = n.loop, c = n.z2; l--;) {
          var h = i.pop(), u = c[h], d = a.distance(o, o, false, true);
          s.setRelative(u, u, d, a), s.touch(u), t.DEBUG && console.log(n.step, (n.loop > 1 ? "loop " + (n.loop - l) + ": " : "") + "SHP[" + (e ? "rp1" : "rp2") + "]", h);
        }
        n.loop = 1;
      }
      function vn(e, n) {
        var i = n.stack, r = e ? n.rp1 : n.rp2, o = (e ? n.z0 : n.z1)[r], s = n.fv, a = n.pv, l = i.pop(), c = n.z2[n.contours[l]], h = c;
        t.DEBUG && console.log(n.step, "SHC[" + e + "]", l);
        var u = a.distance(o, o, false, true);
        do {
          h !== o && s.setRelative(h, h, u, a), h = h.nextPointOnContour;
        } while (h !== c);
      }
      function yn(e, n) {
        var i, r, o = n.stack, s = e ? n.rp1 : n.rp2, a = (e ? n.z0 : n.z1)[s], l = n.fv, c = n.pv, h = o.pop();
        switch (t.DEBUG && console.log(n.step, "SHZ[" + e + "]", h), h) {
          case 0:
            i = n.tZone;
            break;
          case 1:
            i = n.gZone;
            break;
          default:
            throw new Error("Invalid zone");
        }
        for (var u = c.distance(a, a, false, true), d = i.length - 2, p = 0; p < d; p++) r = i[p], l.setRelative(r, r, u, c);
      }
      function _n(e, n) {
        var i = n.stack, r = i.pop() / 64, o = i.pop(), s = n.z1[o], a = n.z0[n.rp0], l = n.fv, c = n.pv;
        l.setRelative(s, a, r, c), l.touch(s), t.DEBUG && console.log(n.step, "MSIRP[" + e + "]", r, o), n.rp1 = n.rp0, n.rp2 = o, e && (n.rp0 = o);
      }
      function xn(e, n) {
        var i = n.stack, r = i.pop(), o = i.pop(), s = n.z0[o], a = n.fv, l = n.pv, c = n.cvt[r];
        t.DEBUG && console.log(n.step, "MIAP[" + e + "]", r, "(", c, ")", o);
        var h = l.distance(s, nn);
        e && (Math.abs(h - c) < n.cvCutIn && (h = c), h = n.round(h)), a.setRelative(s, nn, h, l), 0 === n.zp0 && (s.xo = s.x, s.yo = s.y), a.touch(s), n.rp0 = n.rp1 = o;
      }
      function bn(e, n) {
        var i = n.stack, r = i.pop(), o = n.z2[r];
        t.DEBUG && console.log(n.step, "GC[" + e + "]", r), i.push(64 * n.dpv.distance(o, nn, e, false));
      }
      function wn(e, n) {
        var i = n.stack, r = i.pop(), o = i.pop(), s = n.z1[r], a = n.z0[o], l = n.dpv.distance(a, s, e, e);
        t.DEBUG && console.log(n.step, "MD[" + e + "]", r, o, "->", l), n.stack.push(Math.round(64 * l));
      }
      function Sn(e, n) {
        var i = n.stack, r = i.pop(), o = n.fv, s = n.pv, a = n.ppem, l = n.deltaBase + 16 * (e - 1), c = n.deltaShift, h = n.z0;
        t.DEBUG && console.log(n.step, "DELTAP[" + e + "]", r, i);
        for (var u = 0; u < r; u++) {
          var d = i.pop(), p = i.pop();
          if (l + ((240 & p) >> 4) === a) {
            var m = (15 & p) - 8;
            m >= 0 && m++, t.DEBUG && console.log(n.step, "DELTAPFIX", d, "by", m * c);
            var f = h[d];
            o.setRelative(f, f, m * c, s);
          }
        }
      }
      function En(e, n) {
        var i = n.stack, r = i.pop();
        t.DEBUG && console.log(n.step, "ROUND[]"), i.push(64 * n.round(r / 64));
      }
      function qn(e, n) {
        var i = n.stack, r = i.pop(), o = n.ppem, s = n.deltaBase + 16 * (e - 1), a = n.deltaShift;
        t.DEBUG && console.log(n.step, "DELTAC[" + e + "]", r, i);
        for (var l = 0; l < r; l++) {
          var c = i.pop(), h = i.pop();
          if (s + ((240 & h) >> 4) === o) {
            var u = (15 & h) - 8;
            u >= 0 && u++;
            var d = u * a;
            t.DEBUG && console.log(n.step, "DELTACFIX", c, "by", d), n.cvt[c] += d;
          }
        }
      }
      function Tn(e, n) {
        var i, r, o = n.stack, s = o.pop(), a = o.pop(), l = n.z2[s], c = n.z1[a];
        t.DEBUG && console.log(n.step, "SDPVTL[" + e + "]", s, a), e ? (i = l.y - c.y, r = c.x - l.x) : (i = c.x - l.x, r = c.y - l.y), n.dpv = en(i, r);
      }
      function An(e, n) {
        var i = n.stack, r = n.prog, o = n.ip;
        t.DEBUG && console.log(n.step, "PUSHB[" + e + "]");
        for (var s = 0; s < e; s++) i.push(r[++o]);
        n.ip = o;
      }
      function Mn(e, n) {
        var i = n.ip, r = n.prog, o = n.stack;
        t.DEBUG && console.log(n.ip, "PUSHW[" + e + "]");
        for (var s = 0; s < e; s++) {
          var a = r[++i] << 8 | r[++i];
          32768 & a && (a = -(1 + (65535 ^ a))), o.push(a);
        }
        n.ip = i;
      }
      function Cn(e, n, i, r, o, s) {
        var a, l, c, h, u = s.stack, d = e && u.pop(), p = u.pop(), m = s.rp0, f = s.z0[m], g = s.z1[p], v = s.minDis, y = s.fv, _ = s.dpv;
        c = (l = a = _.distance(g, f, true, true)) >= 0 ? 1 : -1, l = Math.abs(l), e && (h = s.cvt[d], r && Math.abs(l - h) < s.cvCutIn && (l = h)), i && l < v && (l = v), r && (l = s.round(l)), y.setRelative(g, f, c * l, _), y.touch(g), t.DEBUG && console.log(s.step, (e ? "MIRP[" : "MDRP[") + (n ? "M" : "m") + (i ? ">" : "_") + (r ? "R" : "_") + (0 === o ? "Gr" : 1 === o ? "Bl" : 2 === o ? "Wh" : "") + "]", e ? d + "(" + s.cvt[d] + "," + h + ")" : "", p, "(d =", a, "->", c * l, ")"), s.rp1 = s.rp0, s.rp2 = p, n && (s.rp0 = p);
      }
      function kn(e) {
        this.char = e, this.state = {}, this.activeState = null;
      }
      function Rn(e, t, n) {
        this.contextName = n, this.startIndex = e, this.endOffset = t;
      }
      function Ln(e, t, n) {
        this.contextName = e, this.openRange = null, this.ranges = [], this.checkStart = t, this.checkEnd = n;
      }
      function Pn(e, t) {
        this.context = e, this.index = t, this.length = e.length, this.current = e[t], this.backtrack = e.slice(0, t), this.lookahead = e.slice(t + 1);
      }
      function Dn(e) {
        this.eventId = e, this.subscribers = [];
      }
      function On(e) {
        var t = this, n = ["start", "end", "next", "newToken", "contextStart", "contextEnd", "insertToken", "removeToken", "removeRange", "replaceToken", "replaceRange", "composeRUD", "updateContextsRanges"];
        n.forEach(function (e) {
          Object.defineProperty(t.events, e, {value: new Dn(e)});
        }), e && n.forEach(function (n) {
          var i = e[n];
          "function" == typeof i && t.events[n].subscribe(i);
        }), ["insertToken", "removeToken", "removeRange", "replaceToken", "replaceRange", "composeRUD"].forEach(function (e) {
          t.events[e].subscribe(t.updateContextsRanges);
        });
      }
      function In(e) {
        this.tokens = [], this.registeredContexts = {}, this.contextCheckers = [], this.events = {}, this.registeredModifiers = [], On.call(this, e);
      }
      function Bn(e) {
        return /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(e);
      }
      function Fn(e) {
        return /[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(e);
      }
      function zn(e) {
        return /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(e);
      }
      function Nn(e) {
        return /[A-z]/.test(e);
      }
      function Un(e) {
        this.font = e, this.features = {};
      }
      function Vn(e) {
        this.id = e.id, this.tag = e.tag, this.substitution = e.substitution;
      }
      function Gn(e, t) {
        if (!e) return -1;
        switch (t.format) {
          case 1:
            return t.glyphs.indexOf(e);
          case 2:
            for (var n = t.ranges, i = 0; i < n.length; i++) {
              var r = n[i];
              if (e >= r.start && e <= r.end) {
                var o = e - r.start;
                return r.index + o;
              }
            }
            break;
          default:
            return -1;
        }
        return -1;
      }
      function Hn(e, t) {
        return -1 === Gn(e, t.coverage) ? null : e + t.deltaGlyphId;
      }
      function jn(e, t) {
        var n = Gn(e, t.coverage);
        return -1 === n ? null : t.substitute[n];
      }
      function $n(e, t) {
        for (var n = [], i = 0; i < e.length; i++) {
          var r = e[i], o = t.current, s = Gn(o = Array.isArray(o) ? o[0] : o, r);
          -1 !== s && n.push(s);
        }
        return n.length !== e.length ? -1 : n;
      }
      function Wn(e, t) {
        var n = t.inputCoverage.length + t.lookaheadCoverage.length + t.backtrackCoverage.length;
        if (e.context.length < n) return [];
        var i = $n(t.inputCoverage, e);
        if (-1 === i) return [];
        var r = t.inputCoverage.length - 1;
        if (e.lookahead.length < t.lookaheadCoverage.length) return [];
        for (var o = e.lookahead.slice(r); o.length && /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(o[0].char);) o.shift();
        var s = new Pn(o, 0), a = $n(t.lookaheadCoverage, s), l = [].concat(e.backtrack);
        for (l.reverse(); l.length && /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(l[0].char);) l.shift();
        if (l.length < t.backtrackCoverage.length) return [];
        var c = new Pn(l, 0), h = $n(t.backtrackCoverage, c), u = [];
        if (i.length === t.inputCoverage.length && a.length === t.lookaheadCoverage.length && h.length === t.backtrackCoverage.length) for (var d = 0; d < t.lookupRecords.length; d++) for (var p = t.lookupRecords[d].lookupListIndex, m = this.getLookupByIndex(p), f = 0; f < m.subtables.length; f++) {
          var g = m.subtables[f], v = this.getLookupMethod(m, g);
          if ("12" === this.getSubstitutionType(m, g)) for (var y = 0; y < i.length; y++) {
            var _ = v(e.get(y));
            _ && u.push(_);
          }
        }
        return u;
      }
      function Xn(e, t) {
        var n, i = Gn(e.current, t.coverage);
        if (-1 === i) return null;
        for (var r = t.ligatureSets[i], o = 0; o < r.length; o++) {
          n = r[o];
          for (var s = 0; s < n.components.length && e.lookahead[s] === n.components[s]; s++) if (s === n.components.length - 1) return n;
        }
        return null;
      }
      function Yn(e, t) {
        var n = Gn(e, t.coverage);
        return -1 === n ? null : t.sequences[n];
      }
      Gt.prototype.exec = function (e, n) {
        if ("number" != typeof n) throw new Error("Point size is not a number!");
        if (!(this._errorState > 2)) {
          var i = this.font, r = this._prepState;
          if (!r || r.ppem !== n) {
            var o = this._fpgmState;
            if (!o) {
              on.prototype = rn, (o = this._fpgmState = new on("fpgm", i.tables.fpgm)).funcs = [], o.font = i, t.DEBUG && (console.log("---EXEC FPGM---"), o.step = -1);
              try {
                zt(o);
              } catch (e) {
                return console.log("Hinting error in FPGM:" + e), void (this._errorState = 3);
              }
            }
            on.prototype = o, (r = this._prepState = new on("prep", i.tables.prep)).ppem = n;
            var s = i.tables.cvt;
            if (s) for (var a = r.cvt = new Array(s.length), l = n / i.unitsPerEm, c = 0; c < s.length; c++) a[c] = s[c] * l; else r.cvt = [];
            t.DEBUG && (console.log("---EXEC PREP---"), r.step = -1);
            try {
              zt(r);
            } catch (e) {
              this._errorState < 2 && console.log("Hinting error in PREP:" + e), this._errorState = 2;
            }
          }
          if (!(this._errorState > 1)) try {
            return Nt(e, r);
          } catch (e) {
            return this._errorState < 1 && (console.log("Hinting error:" + e), console.log("Note: further hinting errors are silenced")), void (this._errorState = 1);
          }
        }
      }, Nt = function (e, n) {
        var i, r, o, s = n.ppem / n.font.unitsPerEm, a = s, l = e.components;
        if (on.prototype = n, l) {
          var c = n.font;
          r = [], i = [];
          for (var h = 0; h < l.length; h++) {
            var u = l[h], d = c.glyphs.get(u.glyphIndex);
            o = new on("glyf", d.instructions), t.DEBUG && (console.log("---EXEC COMP " + h + "---"), o.step = -1), Ut(d, o, s, a);
            for (var p = Math.round(u.dx * s), m = Math.round(u.dy * a), f = o.gZone, g = o.contours, v = 0; v < f.length; v++) {
              var y = f[v];
              y.xTouched = y.yTouched = false, y.xo = y.x = y.x + p, y.yo = y.y = y.y + m;
            }
            var _ = r.length;
            r.push.apply(r, f);
            for (var x = 0; x < g.length; x++) i.push(g[x] + _);
          }
          e.instructions && !o.inhibitGridFit && ((o = new on("glyf", e.instructions)).gZone = o.z0 = o.z1 = o.z2 = r, o.contours = i, r.push(new tn(0, 0), new tn(Math.round(e.advanceWidth * s), 0)), t.DEBUG && (console.log("---EXEC COMPOSITE---"), o.step = -1), zt(o), r.length -= 2);
        } else o = new on("glyf", e.instructions), t.DEBUG && (console.log("---EXEC GLYPH---"), o.step = -1), Ut(e, o, s, a), r = o.gZone;
        return r;
      }, Ut = function (e, n, i, r) {
        for (var o, s, a, l = e.points || [], c = l.length, h = n.gZone = n.z0 = n.z1 = n.z2 = [], u = n.contours = [], d = 0; d < c; d++) o = l[d], h[d] = new tn(o.x * i, o.y * r, o.lastPointOfContour, o.onCurve);
        for (var p = 0; p < c; p++) o = h[p], s || (s = o, u.push(p)), o.lastPointOfContour ? (o.nextPointOnContour = s, s.prevPointOnContour = o, s = undefined) : (a = h[p + 1], o.nextPointOnContour = a, a.prevPointOnContour = o);
        if (!n.inhibitGridFit) {
          if (t.DEBUG) {
            console.log("PROCESSING GLYPH", n.stack);
            for (var m = 0; m < c; m++) console.log(m, h[m].x, h[m].y);
          }
          if (h.push(new tn(0, 0), new tn(Math.round(e.advanceWidth * i), 0)), zt(n), h.length -= 2, t.DEBUG) {
            console.log("FINISHED GLYPH", n.stack);
            for (var f = 0; f < c; f++) console.log(f, h[f].x, h[f].y);
          }
        }
      }, zt = function (e) {
        var n = e.prog;
        if (n) {
          var i, r = n.length;
          for (e.ip = 0; e.ip < r; e.ip++) {
            if (t.DEBUG && e.step++, !(i = Ft[n[e.ip]])) throw new Error("unknown instruction: 0x" + Number(n[e.ip]).toString(16));
            i(e);
          }
        }
      }, Ft = [ln.bind(undefined, Zt), ln.bind(undefined, Kt), cn.bind(undefined, Zt), cn.bind(undefined, Kt), hn.bind(undefined, Zt), hn.bind(undefined, Kt), un.bind(undefined, 0), un.bind(undefined, 1), dn.bind(undefined, 0), dn.bind(undefined, 1), function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "SPVFS[]", i, r), e.pv = e.dpv = en(r, i);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "SPVFS[]", i, r), e.fv = en(r, i);
      }, function (e) {
        var n = e.stack, i = e.pv;
        t.DEBUG && console.log(e.step, "GPV[]"), n.push(16384 * i.x), n.push(16384 * i.y);
      }, function (e) {
        var n = e.stack, i = e.fv;
        t.DEBUG && console.log(e.step, "GFV[]"), n.push(16384 * i.x), n.push(16384 * i.y);
      }, function (e) {
        e.fv = e.pv, t.DEBUG && console.log(e.step, "SFVTPV[]");
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop(), o = n.pop(), s = n.pop(), a = n.pop(), l = e.z0, c = e.z1, h = l[i], u = l[r], d = c[o], p = c[s], m = e.z2[a];
        t.DEBUG && console.log("ISECT[], ", i, r, o, s, a);
        var f = h.x, g = h.y, v = u.x, y = u.y, _ = d.x, x = d.y, b = p.x, w = p.y, S = (f - v) * (x - w) - (g - y) * (_ - b), E = f * y - g * v, q = _ * w - x * b;
        m.x = (E * (_ - b) - q * (f - v)) / S, m.y = (E * (x - w) - q * (g - y)) / S;
      }, function (e) {
        e.rp0 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP0[]", e.rp0);
      }, function (e) {
        e.rp1 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP1[]", e.rp1);
      }, function (e) {
        e.rp2 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP2[]", e.rp2);
      }, function (e) {
        var n = e.stack.pop();
        switch (t.DEBUG && console.log(e.step, "SZP0[]", n), e.zp0 = n, n) {
          case 0:
            e.tZone || sn(e), e.z0 = e.tZone;
            break;
          case 1:
            e.z0 = e.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }, function (e) {
        var n = e.stack.pop();
        switch (t.DEBUG && console.log(e.step, "SZP1[]", n), e.zp1 = n, n) {
          case 0:
            e.tZone || sn(e), e.z1 = e.tZone;
            break;
          case 1:
            e.z1 = e.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }, function (e) {
        var n = e.stack.pop();
        switch (t.DEBUG && console.log(e.step, "SZP2[]", n), e.zp2 = n, n) {
          case 0:
            e.tZone || sn(e), e.z2 = e.tZone;
            break;
          case 1:
            e.z2 = e.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }, function (e) {
        var n = e.stack.pop();
        switch (t.DEBUG && console.log(e.step, "SZPS[]", n), e.zp0 = e.zp1 = e.zp2 = n, n) {
          case 0:
            e.tZone || sn(e), e.z0 = e.z1 = e.z2 = e.tZone;
            break;
          case 1:
            e.z0 = e.z1 = e.z2 = e.gZone;
            break;
          default:
            throw new Error("Invalid zone pointer");
        }
      }, function (e) {
        e.loop = e.stack.pop(), t.DEBUG && console.log(e.step, "SLOOP[]", e.loop);
      }, function (e) {
        t.DEBUG && console.log(e.step, "RTG[]"), e.round = jt;
      }, function (e) {
        t.DEBUG && console.log(e.step, "RTHG[]"), e.round = Wt;
      }, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "SMD[]", n), e.minDis = n / 64;
      }, function (e) {
        t.DEBUG && console.log(e.step, "ELSE[]"), an(e, false);
      }, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "JMPR[]", n), e.ip += n - 1;
      }, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "SCVTCI[]", n), e.cvCutIn = n / 64;
      }, undefined, undefined, function (e) {
        var n = e.stack;
        t.DEBUG && console.log(e.step, "DUP[]"), n.push(n[n.length - 1]);
      }, pn, function (e) {
        t.DEBUG && console.log(e.step, "CLEAR[]"), e.stack.length = 0;
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "SWAP[]"), n.push(i), n.push(r);
      }, function (e) {
        var n = e.stack;
        t.DEBUG && console.log(e.step, "DEPTH[]"), n.push(n.length);
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "CINDEX[]", i), n.push(n[n.length - i]);
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "MINDEX[]", i), n.push(n.splice(n.length - i, 1)[0]);
      }, undefined, undefined, undefined, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "LOOPCALL[]", i, r);
        var o = e.ip, s = e.prog;
        e.prog = e.funcs[i];
        for (var a = 0; a < r; a++) zt(e), t.DEBUG && console.log(++e.step, a + 1 < r ? "next loopcall" : "done loopcall", a);
        e.ip = o, e.prog = s;
      }, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "CALL[]", n);
        var i = e.ip, r = e.prog;
        e.prog = e.funcs[n], zt(e), e.ip = i, e.prog = r, t.DEBUG && console.log(++e.step, "returning from", n);
      }, function (e) {
        if ("fpgm" !== e.env) throw new Error("FDEF not allowed here");
        var n = e.stack, i = e.prog, r = e.ip, o = n.pop(), s = r;
        for (t.DEBUG && console.log(e.step, "FDEF[]", o); 45 !== i[++r];) ;
        e.ip = r, e.funcs[o] = i.slice(s + 1, r);
      }, undefined, mn.bind(undefined, 0), mn.bind(undefined, 1), fn.bind(undefined, Zt), fn.bind(undefined, Kt), gn.bind(undefined, 0), gn.bind(undefined, 1), vn.bind(undefined, 0), vn.bind(undefined, 1), yn.bind(undefined, 0), yn.bind(undefined, 1), function (e) {
        for (var n = e.stack, i = e.loop, r = e.fv, o = n.pop() / 64, s = e.z2; i--;) {
          var a = n.pop(), l = s[a];
          t.DEBUG && console.log(e.step, (e.loop > 1 ? "loop " + (e.loop - i) + ": " : "") + "SHPIX[]", a, o), r.setRelative(l, l, o), r.touch(l);
        }
        e.loop = 1;
      }, function (e) {
        for (var n = e.stack, i = e.rp1, r = e.rp2, o = e.loop, s = e.z0[i], a = e.z1[r], l = e.fv, c = e.dpv, h = e.z2; o--;) {
          var u = n.pop(), d = h[u];
          t.DEBUG && console.log(e.step, (e.loop > 1 ? "loop " + (e.loop - o) + ": " : "") + "IP[]", u, i, "<->", r), l.interpolate(d, s, a, c), l.touch(d);
        }
        e.loop = 1;
      }, _n.bind(undefined, 0), _n.bind(undefined, 1), function (e) {
        for (var n = e.stack, i = e.rp0, r = e.z0[i], o = e.loop, s = e.fv, a = e.pv, l = e.z1; o--;) {
          var c = n.pop(), h = l[c];
          t.DEBUG && console.log(e.step, (e.loop > 1 ? "loop " + (e.loop - o) + ": " : "") + "ALIGNRP[]", c), s.setRelative(h, r, 0, a), s.touch(h);
        }
        e.loop = 1;
      }, function (e) {
        t.DEBUG && console.log(e.step, "RTDG[]"), e.round = $t;
      }, xn.bind(undefined, 0), xn.bind(undefined, 1), function (e) {
        var n = e.prog, i = e.ip, r = e.stack, o = n[++i];
        t.DEBUG && console.log(e.step, "NPUSHB[]", o);
        for (var s = 0; s < o; s++) r.push(n[++i]);
        e.ip = i;
      }, function (e) {
        var n = e.ip, i = e.prog, r = e.stack, o = i[++n];
        t.DEBUG && console.log(e.step, "NPUSHW[]", o);
        for (var s = 0; s < o; s++) {
          var a = i[++n] << 8 | i[++n];
          32768 & a && (a = -(1 + (65535 ^ a))), r.push(a);
        }
        e.ip = n;
      }, function (e) {
        var n = e.stack, i = e.store;
        i || (i = e.store = []);
        var r = n.pop(), o = n.pop();
        t.DEBUG && console.log(e.step, "WS", r, o), i[o] = r;
      }, function (e) {
        var n = e.stack, i = e.store, r = n.pop();
        t.DEBUG && console.log(e.step, "RS", r);
        var o = i && i[r] || 0;
        n.push(o);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "WCVTP", i, r), e.cvt[r] = i / 64;
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "RCVT", i), n.push(64 * e.cvt[i]);
      }, bn.bind(undefined, 0), bn.bind(undefined, 1), undefined, wn.bind(undefined, 0), wn.bind(undefined, 1), function (e) {
        t.DEBUG && console.log(e.step, "MPPEM[]"), e.stack.push(e.ppem);
      }, undefined, function (e) {
        t.DEBUG && console.log(e.step, "FLIPON[]"), e.autoFlip = true;
      }, undefined, undefined, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "LT[]", i, r), n.push(r < i ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "LTEQ[]", i, r), n.push(r <= i ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "GT[]", i, r), n.push(r > i ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "GTEQ[]", i, r), n.push(r >= i ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "EQ[]", i, r), n.push(i === r ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "NEQ[]", i, r), n.push(i !== r ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "ODD[]", i), n.push(Math.trunc(i) % 2 ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "EVEN[]", i), n.push(Math.trunc(i) % 2 ? 0 : 1);
      }, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "IF[]", n), n || (an(e, true), t.DEBUG && console.log(e.step, "EIF[]"));
      }, function (e) {
        t.DEBUG && console.log(e.step, "EIF[]");
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "AND[]", i, r), n.push(i && r ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "OR[]", i, r), n.push(i || r ? 1 : 0);
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "NOT[]", i), n.push(i ? 0 : 1);
      }, Sn.bind(undefined, 1), function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "SDB[]", n), e.deltaBase = n;
      }, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "SDS[]", n), e.deltaShift = Math.pow(0.5, n);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "ADD[]", i, r), n.push(r + i);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "SUB[]", i, r), n.push(r - i);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "DIV[]", i, r), n.push(64 * r / i);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "MUL[]", i, r), n.push(r * i / 64);
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "ABS[]", i), n.push(Math.abs(i));
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "NEG[]", i), n.push(-i);
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "FLOOR[]", i), n.push(64 * Math.floor(i / 64));
      }, function (e) {
        var n = e.stack, i = n.pop();
        t.DEBUG && console.log(e.step, "CEILING[]", i), n.push(64 * Math.ceil(i / 64));
      }, En.bind(undefined, 0), En.bind(undefined, 1), En.bind(undefined, 2), En.bind(undefined, 3), undefined, undefined, undefined, undefined, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "WCVTF[]", i, r), e.cvt[r] = i * e.ppem / e.font.unitsPerEm;
      }, Sn.bind(undefined, 2), Sn.bind(undefined, 3), qn.bind(undefined, 1), qn.bind(undefined, 2), qn.bind(undefined, 3), function (e) {
        var n, i = e.stack.pop();
        switch (t.DEBUG && console.log(e.step, "SROUND[]", i), e.round = Jt, 192 & i) {
          case 0:
            n = 0.5;
            break;
          case 64:
            n = 1;
            break;
          case 128:
            n = 2;
            break;
          default:
            throw new Error("invalid SROUND value");
        }
        switch (e.srPeriod = n, 48 & i) {
          case 0:
            e.srPhase = 0;
            break;
          case 16:
            e.srPhase = 0.25 * n;
            break;
          case 32:
            e.srPhase = 0.5 * n;
            break;
          case 48:
            e.srPhase = 0.75 * n;
            break;
          default:
            throw new Error("invalid SROUND value");
        }
        i &= 15, e.srThreshold = 0 === i ? 0 : (i / 8 - 0.5) * n;
      }, function (e) {
        var n, i = e.stack.pop();
        switch (t.DEBUG && console.log(e.step, "S45ROUND[]", i), e.round = Jt, 192 & i) {
          case 0:
            n = Math.sqrt(2) / 2;
            break;
          case 64:
            n = Math.sqrt(2);
            break;
          case 128:
            n = 2 * Math.sqrt(2);
            break;
          default:
            throw new Error("invalid S45ROUND value");
        }
        switch (e.srPeriod = n, 48 & i) {
          case 0:
            e.srPhase = 0;
            break;
          case 16:
            e.srPhase = 0.25 * n;
            break;
          case 32:
            e.srPhase = 0.5 * n;
            break;
          case 48:
            e.srPhase = 0.75 * n;
            break;
          default:
            throw new Error("invalid S45ROUND value");
        }
        i &= 15, e.srThreshold = 0 === i ? 0 : (i / 8 - 0.5) * n;
      }, undefined, undefined, function (e) {
        t.DEBUG && console.log(e.step, "ROFF[]"), e.round = Ht;
      }, undefined, function (e) {
        t.DEBUG && console.log(e.step, "RUTG[]"), e.round = Xt;
      }, function (e) {
        t.DEBUG && console.log(e.step, "RDTG[]"), e.round = Yt;
      }, pn, pn, undefined, undefined, undefined, undefined, undefined, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "SCANCTRL[]", n);
      }, Tn.bind(undefined, 0), Tn.bind(undefined, 1), function (e) {
        var n = e.stack, i = n.pop(), r = 0;
        t.DEBUG && console.log(e.step, "GETINFO[]", i), 1 & i && (r = 35), 32 & i && (r |= 4096), n.push(r);
      }, undefined, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop(), o = n.pop();
        t.DEBUG && console.log(e.step, "ROLL[]"), n.push(r), n.push(i), n.push(o);
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "MAX[]", i, r), n.push(Math.max(r, i));
      }, function (e) {
        var n = e.stack, i = n.pop(), r = n.pop();
        t.DEBUG && console.log(e.step, "MIN[]", i, r), n.push(Math.min(r, i));
      }, function (e) {
        var n = e.stack.pop();
        t.DEBUG && console.log(e.step, "SCANTYPE[]", n);
      }, function (e) {
        var n = e.stack.pop(), i = e.stack.pop();
        switch (t.DEBUG && console.log(e.step, "INSTCTRL[]", n, i), n) {
          case 1:
            return void (e.inhibitGridFit = !!i);
          case 2:
            return void (e.ignoreCvt = !!i);
          default:
            throw new Error("invalid INSTCTRL[] selector");
        }
      }, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, An.bind(undefined, 1), An.bind(undefined, 2), An.bind(undefined, 3), An.bind(undefined, 4), An.bind(undefined, 5), An.bind(undefined, 6), An.bind(undefined, 7), An.bind(undefined, 8), Mn.bind(undefined, 1), Mn.bind(undefined, 2), Mn.bind(undefined, 3), Mn.bind(undefined, 4), Mn.bind(undefined, 5), Mn.bind(undefined, 6), Mn.bind(undefined, 7), Mn.bind(undefined, 8), Cn.bind(undefined, 0, 0, 0, 0, 0), Cn.bind(undefined, 0, 0, 0, 0, 1), Cn.bind(undefined, 0, 0, 0, 0, 2), Cn.bind(undefined, 0, 0, 0, 0, 3), Cn.bind(undefined, 0, 0, 0, 1, 0), Cn.bind(undefined, 0, 0, 0, 1, 1), Cn.bind(undefined, 0, 0, 0, 1, 2), Cn.bind(undefined, 0, 0, 0, 1, 3), Cn.bind(undefined, 0, 0, 1, 0, 0), Cn.bind(undefined, 0, 0, 1, 0, 1), Cn.bind(undefined, 0, 0, 1, 0, 2), Cn.bind(undefined, 0, 0, 1, 0, 3), Cn.bind(undefined, 0, 0, 1, 1, 0), Cn.bind(undefined, 0, 0, 1, 1, 1), Cn.bind(undefined, 0, 0, 1, 1, 2), Cn.bind(undefined, 0, 0, 1, 1, 3), Cn.bind(undefined, 0, 1, 0, 0, 0), Cn.bind(undefined, 0, 1, 0, 0, 1), Cn.bind(undefined, 0, 1, 0, 0, 2), Cn.bind(undefined, 0, 1, 0, 0, 3), Cn.bind(undefined, 0, 1, 0, 1, 0), Cn.bind(undefined, 0, 1, 0, 1, 1), Cn.bind(undefined, 0, 1, 0, 1, 2), Cn.bind(undefined, 0, 1, 0, 1, 3), Cn.bind(undefined, 0, 1, 1, 0, 0), Cn.bind(undefined, 0, 1, 1, 0, 1), Cn.bind(undefined, 0, 1, 1, 0, 2), Cn.bind(undefined, 0, 1, 1, 0, 3), Cn.bind(undefined, 0, 1, 1, 1, 0), Cn.bind(undefined, 0, 1, 1, 1, 1), Cn.bind(undefined, 0, 1, 1, 1, 2), Cn.bind(undefined, 0, 1, 1, 1, 3), Cn.bind(undefined, 1, 0, 0, 0, 0), Cn.bind(undefined, 1, 0, 0, 0, 1), Cn.bind(undefined, 1, 0, 0, 0, 2), Cn.bind(undefined, 1, 0, 0, 0, 3), Cn.bind(undefined, 1, 0, 0, 1, 0), Cn.bind(undefined, 1, 0, 0, 1, 1), Cn.bind(undefined, 1, 0, 0, 1, 2), Cn.bind(undefined, 1, 0, 0, 1, 3), Cn.bind(undefined, 1, 0, 1, 0, 0), Cn.bind(undefined, 1, 0, 1, 0, 1), Cn.bind(undefined, 1, 0, 1, 0, 2), Cn.bind(undefined, 1, 0, 1, 0, 3), Cn.bind(undefined, 1, 0, 1, 1, 0), Cn.bind(undefined, 1, 0, 1, 1, 1), Cn.bind(undefined, 1, 0, 1, 1, 2), Cn.bind(undefined, 1, 0, 1, 1, 3), Cn.bind(undefined, 1, 1, 0, 0, 0), Cn.bind(undefined, 1, 1, 0, 0, 1), Cn.bind(undefined, 1, 1, 0, 0, 2), Cn.bind(undefined, 1, 1, 0, 0, 3), Cn.bind(undefined, 1, 1, 0, 1, 0), Cn.bind(undefined, 1, 1, 0, 1, 1), Cn.bind(undefined, 1, 1, 0, 1, 2), Cn.bind(undefined, 1, 1, 0, 1, 3), Cn.bind(undefined, 1, 1, 1, 0, 0), Cn.bind(undefined, 1, 1, 1, 0, 1), Cn.bind(undefined, 1, 1, 1, 0, 2), Cn.bind(undefined, 1, 1, 1, 0, 3), Cn.bind(undefined, 1, 1, 1, 1, 0), Cn.bind(undefined, 1, 1, 1, 1, 1), Cn.bind(undefined, 1, 1, 1, 1, 2), Cn.bind(undefined, 1, 1, 1, 1, 3)], kn.prototype.setState = function (e, t) {
        return this.state[e] = t, this.activeState = {key: e, value: this.state[e]}, this.activeState;
      }, kn.prototype.getState = function (e) {
        return this.state[e] || null;
      }, In.prototype.inboundIndex = function (e) {
        return e >= 0 && e < this.tokens.length;
      }, In.prototype.composeRUD = function (e) {
        var t = this, n = e.map(function (e) {
          return t[e[0]].apply(t, e.slice(1).concat(true));
        }), i = function (e) {
          return "object" == typeof e && e.hasOwnProperty("FAIL");
        };
        if (n.every(i)) return {FAIL: "composeRUD: one or more operations hasn't completed successfully", report: n.filter(i)};
        this.dispatch("composeRUD", [n.filter(function (e) {
          return !("object" == typeof e && e.hasOwnProperty("FAIL"));
        })]);
      }, In.prototype.replaceRange = function (e, t, n, i) {
        t = null !== t ? t : this.tokens.length;
        var r = n.every(function (e) {
          return e instanceof kn;
        });
        if (!isNaN(e) && this.inboundIndex(e) && r) {
          var o = this.tokens.splice.apply(this.tokens, [e, t].concat(n));
          return i || this.dispatch("replaceToken", [e, t, n]), [o, n];
        }
        return {FAIL: "replaceRange: invalid tokens or startIndex."};
      }, In.prototype.replaceToken = function (e, t, n) {
        if (!isNaN(e) && this.inboundIndex(e) && t instanceof kn) {
          var i = this.tokens.splice(e, 1, t);
          return n || this.dispatch("replaceToken", [e, t]), [i[0], t];
        }
        return {FAIL: "replaceToken: invalid token or index."};
      }, In.prototype.removeRange = function (e, t, n) {
        t = isNaN(t) ? this.tokens.length : t;
        var i = this.tokens.splice(e, t);
        return n || this.dispatch("removeRange", [i, e, t]), i;
      }, In.prototype.removeToken = function (e, t) {
        if (!isNaN(e) && this.inboundIndex(e)) {
          var n = this.tokens.splice(e, 1);
          return t || this.dispatch("removeToken", [n, e]), n;
        }
        return {FAIL: "removeToken: invalid token index."};
      }, In.prototype.insertToken = function (e, t, n) {
        return e.every(function (e) {
          return e instanceof kn;
        }) ? (this.tokens.splice.apply(this.tokens, [t, 0].concat(e)), n || this.dispatch("insertToken", [e, t]), e) : {FAIL: "insertToken: invalid token(s)."};
      }, In.prototype.registerModifier = function (e, t, n) {
        this.events.newToken.subscribe(function (i, r) {
          var o = [i, r], s = [i, r];
          if (null === t || true === t.apply(this, o)) {
            var a = n.apply(this, s);
            i.setState(e, a);
          }
        }), this.registeredModifiers.push(e);
      }, Dn.prototype.subscribe = function (e) {
        return "function" == typeof e ? this.subscribers.push(e) - 1 : {FAIL: "invalid '" + this.eventId + "' event handler"};
      }, Dn.prototype.unsubscribe = function (e) {
        this.subscribers.splice(e, 1);
      }, Pn.prototype.setCurrentIndex = function (e) {
        this.index = e, this.current = this.context[e], this.backtrack = this.context.slice(0, e), this.lookahead = this.context.slice(e + 1);
      }, Pn.prototype.get = function (e) {
        switch (true) {
          case 0 === e:
            return this.current;
          case e < 0 && Math.abs(e) <= this.backtrack.length:
            return this.backtrack.slice(e)[0];
          case e > 0 && e <= this.lookahead.length:
            return this.lookahead[e - 1];
          default:
            return null;
        }
      }, In.prototype.rangeToText = function (e) {
        if (e instanceof Rn) return this.getRangeTokens(e).map(function (e) {
          return e.char;
        }).join("");
      }, In.prototype.getText = function () {
        return this.tokens.map(function (e) {
          return e.char;
        }).join("");
      }, In.prototype.getContext = function (e) {
        var t = this.registeredContexts[e];
        return t || null;
      }, In.prototype.on = function (e, t) {
        var n = this.events[e];
        return n ? n.subscribe(t) : null;
      }, In.prototype.dispatch = function (e, t) {
        var n = this, i = this.events[e];
        i instanceof Dn && i.subscribers.forEach(function (e) {
          e.apply(n, t || []);
        });
      }, In.prototype.registerContextChecker = function (e, t, n) {
        if (this.getContext(e)) return {FAIL: "context name '" + e + "' is already registered."};
        if ("function" != typeof t) return {FAIL: "missing context start check."};
        if ("function" != typeof n) return {FAIL: "missing context end check."};
        var i = new Ln(e, t, n);
        return this.registeredContexts[e] = i, this.contextCheckers.push(i), i;
      }, In.prototype.getRangeTokens = function (e) {
        var t = e.startIndex + e.endOffset;
        return [].concat(this.tokens.slice(e.startIndex, t));
      }, In.prototype.getContextRanges = function (e) {
        var t = this.getContext(e);
        return t ? t.ranges : {FAIL: "context checker '" + e + "' is not registered."};
      }, In.prototype.resetContextsRanges = function () {
        var e = this.registeredContexts;
        for (var t in e) e.hasOwnProperty(t) && (e[t].ranges = []);
      }, In.prototype.updateContextsRanges = function () {
        this.resetContextsRanges();
        for (var e = this.tokens.map(function (e) {
          return e.char;
        }), t = 0; t < e.length; t++) {
          var n = new Pn(e, t);
          this.runContextCheck(n);
        }
        this.dispatch("updateContextsRanges", [this.registeredContexts]);
      }, In.prototype.setEndOffset = function (e, t) {
        var n = new Rn(this.getContext(t).openRange.startIndex, e, t), i = this.getContext(t).ranges;
        return n.rangeId = t + "." + i.length, i.push(n), this.getContext(t).openRange = null, n;
      }, In.prototype.runContextCheck = function (e) {
        var t = this, n = e.index;
        this.contextCheckers.forEach(function (i) {
          var r = i.contextName, o = t.getContext(r).openRange;
          if (!o && i.checkStart(e) && (o = new Rn(n, null, r), t.getContext(r).openRange = o, t.dispatch("contextStart", [r, n])), o && i.checkEnd(e)) {
            var s = n - o.startIndex + 1, a = t.setEndOffset(s, r);
            t.dispatch("contextEnd", [r, a]);
          }
        });
      }, In.prototype.tokenize = function (e) {
        this.tokens = [], this.resetContextsRanges();
        var t = Array.from(e);
        this.dispatch("start");
        for (var n = 0; n < t.length; n++) {
          var i = t[n], r = new Pn(t, n);
          this.dispatch("next", [r]), this.runContextCheck(r);
          var o = new kn(i);
          this.tokens.push(o), this.dispatch("newToken", [o, r]);
        }
        return this.dispatch("end", [this.tokens]), this.tokens;
      }, Un.prototype.getDefaultScriptFeaturesIndexes = function () {
        for (var e = this.font.tables.gsub.scripts, t = 0; t < e.length; t++) {
          var n = e[t];
          if ("DFLT" === n.tag) return n.script.defaultLangSys.featureIndexes;
        }
        return [];
      }, Un.prototype.getScriptFeaturesIndexes = function (e) {
        if (!this.font.tables.gsub) return [];
        if (!e) return this.getDefaultScriptFeaturesIndexes();
        for (var t = this.font.tables.gsub.scripts, n = 0; n < t.length; n++) {
          var i = t[n];
          if (i.tag === e && i.script.defaultLangSys) return i.script.defaultLangSys.featureIndexes;
          var r = i.langSysRecords;
          if (r) for (var o = 0; o < r.length; o++) {
            var s = r[o];
            if (s.tag === e) return s.langSys.featureIndexes;
          }
        }
        return this.getDefaultScriptFeaturesIndexes();
      }, Un.prototype.mapTagsToFeatures = function (e, t) {
        for (var n = {}, i = 0; i < e.length; i++) {
          var r = e[i].tag, o = e[i].feature;
          n[r] = o;
        }
        this.features[t].tags = n;
      }, Un.prototype.getScriptFeatures = function (e) {
        var t = this.features[e];
        if (this.features.hasOwnProperty(e)) return t;
        var n = this.getScriptFeaturesIndexes(e);
        if (!n) return null;
        var i = this.font.tables.gsub;
        return t = n.map(function (e) {
          return i.features[e];
        }), this.features[e] = t, this.mapTagsToFeatures(t, e), t;
      }, Un.prototype.getSubstitutionType = function (e, t) {
        return e.lookupType.toString() + t.substFormat.toString();
      }, Un.prototype.getLookupMethod = function (e, t) {
        var n = this;
        switch (this.getSubstitutionType(e, t)) {
          case "11":
            return function (e) {
              return Hn.apply(n, [e, t]);
            };
          case "12":
            return function (e) {
              return jn.apply(n, [e, t]);
            };
          case "63":
            return function (e) {
              return Wn.apply(n, [e, t]);
            };
          case "41":
            return function (e) {
              return Xn.apply(n, [e, t]);
            };
          case "21":
            return function (e) {
              return Yn.apply(n, [e, t]);
            };
          default:
            throw new Error("lookupType: " + e.lookupType + " - substFormat: " + t.substFormat + " is not yet supported");
        }
      }, Un.prototype.lookupFeature = function (e) {
        var t = e.contextParams, n = t.index, i = this.getFeature({tag: e.tag, script: e.script});
        if (!i) return new Error("font '" + this.font.names.fullName.en + "' doesn't support feature '" + e.tag + "' for script '" + e.script + "'.");
        for (var r = this.getFeatureLookups(i), o = [].concat(t.context), s = 0; s < r.length; s++) for (var a = r[s], l = this.getLookupSubtables(a), c = 0; c < l.length; c++) {
          var h = l[c], u = this.getSubstitutionType(a, h), d = this.getLookupMethod(a, h), p = undefined;
          switch (u) {
            case "11":
              (p = d(t.current)) && o.splice(n, 1, new Vn({id: 11, tag: e.tag, substitution: p}));
              break;
            case "12":
              (p = d(t.current)) && o.splice(n, 1, new Vn({id: 12, tag: e.tag, substitution: p}));
              break;
            case "63":
              p = d(t), Array.isArray(p) && p.length && o.splice(n, 1, new Vn({id: 63, tag: e.tag, substitution: p}));
              break;
            case "41":
              (p = d(t)) && o.splice(n, 1, new Vn({id: 41, tag: e.tag, substitution: p}));
              break;
            case "21":
              (p = d(t.current)) && o.splice(n, 1, new Vn({id: 21, tag: e.tag, substitution: p}));
          }
          t = new Pn(o, n), Array.isArray(p) && !p.length || (p = null);
        }
        return o.length ? o : null;
      }, Un.prototype.supports = function (e) {
        if (!e.script) return false;
        this.getScriptFeatures(e.script);
        var t = this.features.hasOwnProperty(e.script);
        if (!e.tag) return t;
        var n = this.features[e.script].some(function (t) {
          return t.tag === e.tag;
        });
        return t && n;
      }, Un.prototype.getLookupSubtables = function (e) {
        return e.subtables || null;
      }, Un.prototype.getLookupByIndex = function (e) {
        return this.font.tables.gsub.lookups[e] || null;
      }, Un.prototype.getFeatureLookups = function (e) {
        return e.lookupListIndexes.map(this.getLookupByIndex.bind(this));
      }, Un.prototype.getFeature = function (e) {
        if (!this.font) return {FAIL: "No font was found"};
        this.features.hasOwnProperty(e.script) || this.getScriptFeatures(e.script);
        var t = this.features[e.script];
        return t ? t.tags[e.tag] ? this.features[e.script].tags[e.tag] : null : {FAIL: "No feature for script " + e.script};
      };
      var Jn = {startCheck: function (e) {
        var t = e.current, n = e.get(-1);
        return null === n && /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(t) || !/[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(n) && /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(t);
      }, endCheck: function (e) {
        var t = e.get(1);
        return null === t || !/[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(t);
      }}, Kn = {startCheck: function (e) {
        var t = e.current, n = e.get(-1);
        return (/[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(t) || /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(t)) && !/[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(n);
      }, endCheck: function (e) {
        var t = e.get(1);
        switch (true) {
          case null === t:
            return true;
          case !/[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(t) && !/[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(t):
            var n = /\s/.test(t);
            if (!n) return true;
            if (n && !e.lookahead.some(function (e) {
              return /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(e) || /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(e);
            })) return true;
            break;
          default:
            return false;
        }
      }}, Zn = {11: function (e, t, n) {
        t[n].setState(e.tag, e.substitution);
      }, 12: function (e, t, n) {
        t[n].setState(e.tag, e.substitution);
      }, 63: function (e, t, n) {
        e.substitution.forEach(function (i, r) {
          t[n + r].setState(e.tag, i);
        });
      }, 41: function (e, t, n) {
        var i = t[n];
        i.setState(e.tag, e.substitution.ligGlyph);
        for (var r = e.substitution.components.length, o = 0; o < r; o++) (i = t[n + o + 1]).setState("deleted", true);
      }};
      function Qn(e, t, n) {
        e instanceof Vn && Zn[e.id](e, t, n);
      }
      function ei(e) {
        var t = this, n = this.featuresTags.arab, i = this.tokenizer.getRangeTokens(e);
        if (1 !== i.length) {
          var r = new Pn(i.map(function (e) {
            return e.getState("glyphIndex");
          }), 0), o = new Pn(i.map(function (e) {
            return e.char;
          }), 0);
          i.forEach(function (e, s) {
            if (!/[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(e.char)) {
              r.setCurrentIndex(s), o.setCurrentIndex(s);
              var a, l = 0;
              switch (function (e) {
                for (var t = [].concat(e.backtrack), n = t.length - 1; n >= 0; n--) {
                  var i = t[n], r = /[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(i), o = /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(i);
                  if (!r && !o) return true;
                  if (r) return false;
                }
                return false;
              }(o) && (l |= 1), function (e) {
                if (/[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(e.current)) return false;
                for (var t = 0; t < e.lookahead.length; t++) if (!/[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(e.lookahead[t])) return true;
                return false;
              }(o) && (l |= 2), l) {
                case 1:
                  a = "fina";
                  break;
                case 2:
                  a = "init";
                  break;
                case 3:
                  a = "medi";
              }
              if (-1 !== n.indexOf(a)) {
                var c = t.query.lookupFeature({tag: a, script: "arab", contextParams: r});
                if (c instanceof Error) return console.info(c.message);
                c.forEach(function (e, t) {
                  e instanceof Vn && (Qn(e, i, t), r.context[t] = e.substitution);
                });
              }
            }
          });
        }
      }
      function ti(e, t) {
        return new Pn(e.map(function (e) {
          return e.activeState.value;
        }), t || 0);
      }
      function ni(e) {
        var t = this, n = this.tokenizer.getRangeTokens(e), i = ti(n);
        i.context.forEach(function (e, r) {
          i.setCurrentIndex(r);
          var o = t.query.lookupFeature({tag: "rlig", script: "arab", contextParams: i});
          o.length && (o.forEach(function (e) {
            return Qn(e, n, r);
          }), i = ti(n));
        });
      }
      var ii = {startCheck: function (e) {
        var t = e.current, n = e.get(-1);
        return null === n && /[A-z]/.test(t) || !/[A-z]/.test(n) && /[A-z]/.test(t);
      }, endCheck: function (e) {
        var t = e.get(1);
        return null === t || !/[A-z]/.test(t);
      }};
      function ri(e, t) {
        return new Pn(e.map(function (e) {
          return e.activeState.value;
        }), t || 0);
      }
      function oi(e) {
        var t = this, n = this.tokenizer.getRangeTokens(e), i = ri(n);
        i.context.forEach(function (e, r) {
          i.setCurrentIndex(r);
          var o = t.query.lookupFeature({tag: "liga", script: "latn", contextParams: i});
          o.length && (o.forEach(function (e) {
            return Qn(e, n, r);
          }), i = ri(n));
        });
      }
      function si(e) {
        this.baseDir = e || "ltr", this.tokenizer = new In, this.featuresTags = {};
      }
      function ai(e) {
        var t = this.contextChecks[e + "Check"];
        return this.tokenizer.registerContextChecker(e, t.startCheck, t.endCheck);
      }
      function li() {
        return ai.call(this, "latinWord"), ai.call(this, "arabicWord"), ai.call(this, "arabicSentence"), this.tokenizer.tokenize(this.text);
      }
      function ci() {
        var e = this;
        this.tokenizer.getContextRanges("arabicSentence").forEach(function (t) {
          var n = e.tokenizer.getRangeTokens(t);
          e.tokenizer.replaceRange(t.startIndex, t.endOffset, n.reverse());
        });
      }
      function hi() {
        if (-1 === this.tokenizer.registeredModifiers.indexOf("glyphIndex")) throw new Error("glyphIndex modifier is required to apply arabic presentation features.");
      }
      function ui() {
        var e = this;
        this.featuresTags.hasOwnProperty("arab") && (hi.call(this), this.tokenizer.getContextRanges("arabicWord").forEach(function (t) {
          ei.call(e, t);
        }));
      }
      function di() {
        var e = this;
        this.featuresTags.hasOwnProperty("arab") && -1 !== this.featuresTags.arab.indexOf("rlig") && (hi.call(this), this.tokenizer.getContextRanges("arabicWord").forEach(function (t) {
          ni.call(e, t);
        }));
      }
      function pi() {
        var e = this;
        this.featuresTags.hasOwnProperty("latn") && -1 !== this.featuresTags.latn.indexOf("liga") && (hi.call(this), this.tokenizer.getContextRanges("latinWord").forEach(function (t) {
          oi.call(e, t);
        }));
      }
      function mi(e) {
        (e = e || {}).empty || (Lt(e.familyName, "When creating a new Font object, familyName is required."), Lt(e.styleName, "When creating a new Font object, styleName is required."), Lt(e.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), Lt(e.ascender, "When creating a new Font object, ascender is required."), Lt(e.descender, "When creating a new Font object, descender is required."), Lt(e.descender < 0, "Descender should be negative (e.g. -512)."), this.names = {fontFamily: {en: e.familyName || " "}, fontSubfamily: {en: e.styleName || " "}, fullName: {en: e.fullName || e.familyName + " " + e.styleName}, postScriptName: {en: e.postScriptName || (e.familyName + e.styleName).replace(/\s/g, "")}, designer: {en: e.designer || " "}, designerURL: {en: e.designerURL || " "}, manufacturer: {en: e.manufacturer || " "}, manufacturerURL: {en: e.manufacturerURL || " "}, license: {en: e.license || " "}, licenseURL: {en: e.licenseURL || " "}, version: {en: e.version || "Version 0.1"}, description: {en: e.description || " "}, copyright: {en: e.copyright || " "}, trademark: {en: e.trademark || " "}}, this.unitsPerEm = e.unitsPerEm || 1e3, this.ascender = e.ascender, this.descender = e.descender, this.createdTimestamp = e.createdTimestamp, this.tables = {os2: {usWeightClass: e.weightClass || this.usWeightClasses.MEDIUM, usWidthClass: e.widthClass || this.usWidthClasses.MEDIUM, fsSelection: e.fsSelection || this.fsSelectionValues.REGULAR}}), this.supported = true, this.glyphs = new Ee.GlyphSet(this, e.glyphs || []), this.encoding = new fe(this), this.position = new At(this), this.substitution = new Mt(this), this.tables = this.tables || {}, this._push = null, this._hmtxTableData = {}, Object.defineProperty(this, "hinting", {get: function () {
          return this._hinting ? this._hinting : "truetype" === this.outlinesFormat ? this._hinting = new Gt(this) : undefined;
        }});
      }
      function fi(e, t) {
        var n = JSON.stringify(e), i = 256;
        for (var r in t) {
          var o = parseInt(r);
          if (o && !(o < 256)) {
            if (JSON.stringify(t[r]) === n) return o;
            i <= o && (i = o + 1);
          }
        }
        return t[i] = e, i;
      }
      function gi(e, t, n) {
        var i = fi(t.name, n);
        return [{name: "tag_" + e, type: "TAG", value: t.tag}, {name: "minValue_" + e, type: "FIXED", value: t.minValue << 16}, {name: "defaultValue_" + e, type: "FIXED", value: t.defaultValue << 16}, {name: "maxValue_" + e, type: "FIXED", value: t.maxValue << 16}, {name: "flags_" + e, type: "USHORT", value: 0}, {name: "nameID_" + e, type: "USHORT", value: i}];
      }
      function vi(e, t, n) {
        var i = {}, r = new le.Parser(e, t);
        return i.tag = r.parseTag(), i.minValue = r.parseFixed(), i.defaultValue = r.parseFixed(), i.maxValue = r.parseFixed(), r.skip("uShort", 1), i.name = n[r.parseUShort()] || {}, i;
      }
      function yi(e, t, n, i) {
        for (var r = [{name: "nameID_" + e, type: "USHORT", value: fi(t.name, i)}, {name: "flags_" + e, type: "USHORT", value: 0}], o = 0; o < n.length; ++o) {
          var s = n[o].tag;
          r.push({name: "axis_" + e + " " + s, type: "FIXED", value: t.coordinates[s] << 16});
        }
        return r;
      }
      function _i(e, t, n, i) {
        var r = {}, o = new le.Parser(e, t);
        r.name = i[o.parseUShort()] || {}, o.skip("uShort", 1), r.coordinates = {};
        for (var s = 0; s < n.length; ++s) r.coordinates[n[s].tag] = o.parseFixed();
        return r;
      }
      si.prototype.setText = function (e) {
        this.text = e;
      }, si.prototype.contextChecks = {latinWordCheck: ii, arabicWordCheck: Jn, arabicSentenceCheck: Kn}, si.prototype.registerFeatures = function (e, t) {
        var n = this, i = t.filter(function (t) {
          return n.query.supports({script: e, tag: t});
        });
        this.featuresTags.hasOwnProperty(e) ? this.featuresTags[e] = this.featuresTags[e].concat(i) : this.featuresTags[e] = i;
      }, si.prototype.applyFeatures = function (e, t) {
        if (!e) throw new Error("No valid font was provided to apply features");
        this.query || (this.query = new Un(e));
        for (var n = 0; n < t.length; n++) {
          var i = t[n];
          this.query.supports({script: i.script}) && this.registerFeatures(i.script, i.tags);
        }
      }, si.prototype.registerModifier = function (e, t, n) {
        this.tokenizer.registerModifier(e, t, n);
      }, si.prototype.checkContextReady = function (e) {
        return !!this.tokenizer.getContext(e);
      }, si.prototype.applyFeaturesToContexts = function () {
        this.checkContextReady("arabicWord") && (ui.call(this), di.call(this)), this.checkContextReady("latinWord") && pi.call(this), this.checkContextReady("arabicSentence") && ci.call(this);
      }, si.prototype.processText = function (e) {
        this.text && this.text === e || (this.setText(e), li.call(this), this.applyFeaturesToContexts());
      }, si.prototype.getBidiText = function (e) {
        return this.processText(e), this.tokenizer.getText();
      }, si.prototype.getTextGlyphs = function (e) {
        this.processText(e);
        for (var t = [], n = 0; n < this.tokenizer.tokens.length; n++) {
          var i = this.tokenizer.tokens[n];
          if (!i.state.deleted) {
            var r = i.activeState.value;
            t.push(Array.isArray(r) ? r[0] : r);
          }
        }
        return t;
      }, mi.prototype.hasChar = function (e) {
        return null !== this.encoding.charToGlyphIndex(e);
      }, mi.prototype.charToGlyphIndex = function (e) {
        return this.encoding.charToGlyphIndex(e);
      }, mi.prototype.charToGlyph = function (e) {
        var t = this.charToGlyphIndex(e), n = this.glyphs.get(t);
        return n || (n = this.glyphs.get(0)), n;
      }, mi.prototype.updateFeatures = function (e) {
        return this.defaultRenderOptions.features.map(function (t) {
          return "latn" === t.script ? {script: "latn", tags: t.tags.filter(function (t) {
            return e[t];
          })} : t;
        });
      }, mi.prototype.stringToGlyphs = function (e, t) {
        var n = this, i = new si;
        i.registerModifier("glyphIndex", null, function (e) {
          return n.charToGlyphIndex(e.char);
        });
        var r = t ? this.updateFeatures(t.features) : this.defaultRenderOptions.features;
        i.applyFeatures(this, r);
        for (var o = i.getTextGlyphs(e), s = o.length, a = new Array(s), l = this.glyphs.get(0), c = 0; c < s; c += 1) a[c] = n.glyphs.get(o[c]) || l;
        return a;
      }, mi.prototype.nameToGlyphIndex = function (e) {
        return this.glyphNames.nameToGlyphIndex(e);
      }, mi.prototype.nameToGlyph = function (e) {
        var t = this.nameToGlyphIndex(e), n = this.glyphs.get(t);
        return n || (n = this.glyphs.get(0)), n;
      }, mi.prototype.glyphIndexToName = function (e) {
        return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e) : "";
      }, mi.prototype.getKerningValue = function (e, t) {
        e = e.index || e, t = t.index || t;
        var n = this.position.defaultKerningTables;
        return n ? this.position.getKerningValue(n, e, t) : this.kerningPairs[e + "," + t] || 0;
      }, mi.prototype.defaultRenderOptions = {kerning: true, features: [{script: "arab", tags: ["init", "medi", "fina", "rlig"]}, {script: "latn", tags: ["liga", "rlig"]}]}, mi.prototype.forEachGlyph = function (e, t, n, i, r, o) {
        t = undefined !== t ? t : 0, n = undefined !== n ? n : 0, i = undefined !== i ? i : 72, r = r || this.defaultRenderOptions;
        var s, a = 1 / this.unitsPerEm * i, l = this.stringToGlyphs(e, r);
        if (r.kerning) {
          var c = r.script || this.position.getDefaultScriptName();
          s = this.position.getKerningTables(c, r.language);
        }
        for (var h = 0; h < l.length; h += 1) {
          var u = l[h];
          o.call(this, u, t, n, i, r), u.advanceWidth && (t += u.advanceWidth * a), r.kerning && h < l.length - 1 && (t += (s ? this.position.getKerningValue(s, u.index, l[h + 1].index) : this.getKerningValue(u, l[h + 1])) * a), r.letterSpacing ? t += r.letterSpacing * i : r.tracking && (t += r.tracking / 1e3 * i);
        }
        return t;
      }, mi.prototype.getPath = function (e, t, n, i, r) {
        var o = new k;
        return this.forEachGlyph(e, t, n, i, r, function (e, t, n, i) {
          var s = e.getPath(t, n, i, r, this);
          o.extend(s);
        }), o;
      }, mi.prototype.getPaths = function (e, t, n, i, r) {
        var o = [];
        return this.forEachGlyph(e, t, n, i, r, function (e, t, n, i) {
          var s = e.getPath(t, n, i, r, this);
          o.push(s);
        }), o;
      }, mi.prototype.getAdvanceWidth = function (e, t, n) {
        return this.forEachGlyph(e, 0, 0, t, n, function () {});
      }, mi.prototype.draw = function (e, t, n, i, r, o) {
        this.getPath(t, n, i, r, o).draw(e);
      }, mi.prototype.drawPoints = function (e, t, n, i, r, o) {
        this.forEachGlyph(t, n, i, r, o, function (t, n, i, r) {
          t.drawPoints(e, n, i, r);
        });
      }, mi.prototype.drawMetrics = function (e, t, n, i, r, o) {
        this.forEachGlyph(t, n, i, r, o, function (t, n, i, r) {
          t.drawMetrics(e, n, i, r);
        });
      }, mi.prototype.getEnglishName = function (e) {
        var t = this.names[e];
        if (t) return t.en;
      }, mi.prototype.validate = function () {
        var e = this;
        function t(t) {
          var n = e.getEnglishName(t);
          n && n.trim().length;
        }
        t("fontFamily"), t("weightName"), t("manufacturer"), t("copyright"), t("version"), this.unitsPerEm;
      }, mi.prototype.toTables = function () {
        return wt.fontToTable(this);
      }, mi.prototype.toBuffer = function () {
        return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
      }, mi.prototype.toArrayBuffer = function () {
        for (var e = this.toTables().encode(), t = new ArrayBuffer(e.length), n = new Uint8Array(t), i = 0; i < e.length; i++) n[i] = e[i];
        return t;
      }, mi.prototype.download = function (t) {
        var i = this.getEnglishName("fontFamily"), r = this.getEnglishName("fontSubfamily");
        t = t || i.replace(/\s/g, "") + "-" + r + ".otf";
        var o = this.toArrayBuffer();
        if ("undefined" != typeof window) if (window.URL = window.URL || window.webkitURL, window.URL) {
          var s = new DataView(o), a = new Blob([s], {type: "font/opentype"}), l = document.createElement("a");
          l.href = window.URL.createObjectURL(a), l.download = t;
          var c = document.createEvent("MouseEvents");
          c.initEvent("click", true, false), l.dispatchEvent(c);
        } else console.warn("Font file could not be downloaded. Try using a different browser."); else {
          var h = n(21), u = function (t) {
            for (var n = new e(t.byteLength), i = new Uint8Array(t), r = 0; r < n.length; ++r) n[r] = i[r];
            return n;
          }(o);
          h.writeFileSync(t, u);
        }
      }, mi.prototype.fsSelectionValues = {ITALIC: 1, UNDERSCORE: 2, NEGATIVE: 4, OUTLINED: 8, STRIKEOUT: 16, BOLD: 32, REGULAR: 64, USER_TYPO_METRICS: 128, WWS: 256, OBLIQUE: 512}, mi.prototype.usWidthClasses = {ULTRA_CONDENSED: 1, EXTRA_CONDENSED: 2, CONDENSED: 3, SEMI_CONDENSED: 4, MEDIUM: 5, SEMI_EXPANDED: 6, EXPANDED: 7, EXTRA_EXPANDED: 8, ULTRA_EXPANDED: 9}, mi.prototype.usWeightClasses = {THIN: 100, EXTRA_LIGHT: 200, LIGHT: 300, NORMAL: 400, MEDIUM: 500, SEMI_BOLD: 600, BOLD: 700, EXTRA_BOLD: 800, BLACK: 900};
      var xi = {make: function (e, t) {
        var n = new ee.Table("fvar", [{name: "version", type: "ULONG", value: 65536}, {name: "offsetToData", type: "USHORT", value: 0}, {name: "countSizePairs", type: "USHORT", value: 2}, {name: "axisCount", type: "USHORT", value: e.axes.length}, {name: "axisSize", type: "USHORT", value: 20}, {name: "instanceCount", type: "USHORT", value: e.instances.length}, {name: "instanceSize", type: "USHORT", value: 4 + 4 * e.axes.length}]);
        n.offsetToData = n.sizeOf();
        for (var i = 0; i < e.axes.length; i++) n.fields = n.fields.concat(gi(i, e.axes[i], t));
        for (var r = 0; r < e.instances.length; r++) n.fields = n.fields.concat(yi(r, e.instances[r], e.axes, t));
        return n;
      }, parse: function (e, t, n) {
        var i = new le.Parser(e, t), r = i.parseULong();
        P.argument(65536 === r, "Unsupported fvar table version.");
        var o = i.parseOffset16();
        i.skip("uShort", 1);
        for (var s = i.parseUShort(), a = i.parseUShort(), l = i.parseUShort(), c = i.parseUShort(), h = [], u = 0; u < s; u++) h.push(vi(e, t + o + u * a, n));
        for (var d = [], p = t + o + s * a, m = 0; m < l; m++) d.push(_i(e, p + m * c, h, n));
        return {axes: h, instances: d};
      }}, bi = new Array(10);
      bi[1] = function () {
        var e = this.offset + this.relativeOffset, t = this.parseUShort();
        return 1 === t ? {posFormat: 1, coverage: this.parsePointer(se.coverage), value: this.parseValueRecord()} : 2 === t ? {posFormat: 2, coverage: this.parsePointer(se.coverage), values: this.parseValueRecordList()} : void P.assert(false, "0x" + e.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
      }, bi[2] = function () {
        var e = this.offset + this.relativeOffset, t = this.parseUShort();
        P.assert(1 === t || 2 === t, "0x" + e.toString(16) + ": GPOS lookup type 2 format must be 1 or 2.");
        var n = this.parsePointer(se.coverage), i = this.parseUShort(), r = this.parseUShort();
        if (1 === t) return {posFormat: t, coverage: n, valueFormat1: i, valueFormat2: r, pairSets: this.parseList(se.pointer(se.list(function () {
          return {secondGlyph: this.parseUShort(), value1: this.parseValueRecord(i), value2: this.parseValueRecord(r)};
        })))};
        if (2 === t) {
          var o = this.parsePointer(se.classDef), s = this.parsePointer(se.classDef), a = this.parseUShort(), l = this.parseUShort();
          return {posFormat: t, coverage: n, valueFormat1: i, valueFormat2: r, classDef1: o, classDef2: s, class1Count: a, class2Count: l, classRecords: this.parseList(a, se.list(l, function () {
            return {value1: this.parseValueRecord(i), value2: this.parseValueRecord(r)};
          }))};
        }
      }, bi[3] = function () {
        return {error: "GPOS Lookup 3 not supported"};
      }, bi[4] = function () {
        return {error: "GPOS Lookup 4 not supported"};
      }, bi[5] = function () {
        return {error: "GPOS Lookup 5 not supported"};
      }, bi[6] = function () {
        return {error: "GPOS Lookup 6 not supported"};
      }, bi[7] = function () {
        return {error: "GPOS Lookup 7 not supported"};
      }, bi[8] = function () {
        return {error: "GPOS Lookup 8 not supported"};
      }, bi[9] = function () {
        return {error: "GPOS Lookup 9 not supported"};
      };
      var wi = new Array(10), Si = {parse: function (e, t) {
        var n = new se(e, t = t || 0), i = n.parseVersion(1);
        return P.argument(1 === i || 1.1 === i, "Unsupported GPOS table version " + i), 1 === i ? {version: i, scripts: n.parseScriptList(), features: n.parseFeatureList(), lookups: n.parseLookupList(bi)} : {version: i, scripts: n.parseScriptList(), features: n.parseFeatureList(), lookups: n.parseLookupList(bi), variations: n.parseFeatureVariationsList()};
      }, make: function (e) {
        return new ee.Table("GPOS", [{name: "version", type: "ULONG", value: 65536}, {name: "scripts", type: "TABLE", value: new ee.ScriptList(e.scripts)}, {name: "features", type: "TABLE", value: new ee.FeatureList(e.features)}, {name: "lookups", type: "TABLE", value: new ee.LookupList(e.lookups, wi)}]);
      }}, Ei = {parse: function (e, t) {
        var n = new le.Parser(e, t), i = n.parseUShort();
        if (0 === i) return function (e) {
          var t = {};
          e.skip("uShort");
          var n = e.parseUShort();
          P.argument(0 === n, "Unsupported kern sub-table version."), e.skip("uShort", 2);
          var i = e.parseUShort();
          e.skip("uShort", 3);
          for (var r = 0; r < i; r += 1) {
            var o = e.parseUShort(), s = e.parseUShort(), a = e.parseShort();
            t[o + "," + s] = a;
          }
          return t;
        }(n);
        if (1 === i) return function (e) {
          var t = {};
          e.skip("uShort"), e.parseULong() > 1 && console.warn("Only the first kern subtable is supported."), e.skip("uLong");
          var n = 255 & e.parseUShort();
          if (e.skip("uShort"), 0 === n) {
            var i = e.parseUShort();
            e.skip("uShort", 3);
            for (var r = 0; r < i; r += 1) {
              var o = e.parseUShort(), s = e.parseUShort(), a = e.parseShort();
              t[o + "," + s] = a;
            }
          }
          return t;
        }(n);
        throw new Error("Unsupported kern table version (" + i + ").");
      }}, qi = {parse: function (e, t, n, i) {
        for (var r = new le.Parser(e, t), o = i ? r.parseUShort : r.parseULong, s = [], a = 0; a < n + 1; a += 1) {
          var l = o.call(r);
          i && (l *= 2), s.push(l);
        }
        return s;
      }};
      function Ti(e, t) {
        n(21).readFile(e, function (e, n) {
          if (e) return t(e.message);
          t(null, Rt(n));
        });
      }
      function Ai(e, t) {
        var n = new XMLHttpRequest;
        n.open("get", e, true), n.responseType = "arraybuffer", n.onload = function () {
          return n.response ? t(null, n.response) : t("Font could not be loaded: " + n.statusText);
        }, n.onerror = function () {
          t("Font could not be loaded");
        }, n.send();
      }
      function Mi(e, t) {
        for (var n = [], i = 12, r = 0; r < t; r += 1) {
          var o = le.getTag(e, i), s = le.getULong(e, i + 4), a = le.getULong(e, i + 8), l = le.getULong(e, i + 12);
          n.push({tag: o, checksum: s, offset: a, length: l, compression: false}), i += 16;
        }
        return n;
      }
      function Ci(e, t) {
        if ("WOFF" === t.compression) {
          var n = new Uint8Array(e.buffer, t.offset + 2, t.compressedLength - 2), i = new Uint8Array(t.length);
          if (A(n, i), i.byteLength !== t.length) throw new Error("Decompression error: " + t.tag + " decompressed length doesn't match recorded length");
          return {data: new DataView(i.buffer, 0), offset: 0};
        }
        return {data: e, offset: t.offset};
      }
      function ki(e, t) {
        var n, i;
        t = null == t ? {} : t;
        var r, o, s, a, l, c, h, u, d, p, m, f, g = new mi({empty: true}), v = new DataView(e, 0), y = [], _ = le.getTag(v, 0);
        if (_ === String.fromCharCode(0, 1, 0, 0) || "true" === _ || "typ1" === _) g.outlinesFormat = "truetype", y = Mi(v, r = le.getUShort(v, 4)); else if ("OTTO" === _) g.outlinesFormat = "cff", y = Mi(v, r = le.getUShort(v, 4)); else {
          if ("wOFF" !== _) throw new Error("Unsupported OpenType signature " + _);
          var x = le.getTag(v, 4);
          if (x === String.fromCharCode(0, 1, 0, 0)) g.outlinesFormat = "truetype"; else {
            if ("OTTO" !== x) throw new Error("Unsupported OpenType flavor " + _);
            g.outlinesFormat = "cff";
          }
          y = function (e, t) {
            for (var n = [], i = 44, r = 0; r < t; r += 1) {
              var o = le.getTag(e, i), s = le.getULong(e, i + 4), a = le.getULong(e, i + 8), l = le.getULong(e, i + 12), c = undefined;
              c = a < l && "WOFF", n.push({tag: o, offset: s, compression: c, compressedLength: a, length: l}), i += 20;
            }
            return n;
          }(v, r = le.getUShort(v, 12));
        }
        for (var b = 0; b < r; b += 1) {
          var w = y[b], S = undefined;
          switch (w.tag) {
            case "cmap":
              S = Ci(v, w), g.tables.cmap = he.parse(S.data, S.offset), g.encoding = new ge(g.tables.cmap);
              break;
            case "cvt ":
              S = Ci(v, w), f = new le.Parser(S.data, S.offset), g.tables.cvt = f.parseShortList(w.length / 2);
              break;
            case "fvar":
              s = w;
              break;
            case "fpgm":
              S = Ci(v, w), f = new le.Parser(S.data, S.offset), g.tables.fpgm = f.parseByteList(w.length);
              break;
            case "head":
              S = Ci(v, w), g.tables.head = He.parse(S.data, S.offset), g.unitsPerEm = g.tables.head.unitsPerEm, n = g.tables.head.indexToLocFormat;
              break;
            case "hhea":
              S = Ci(v, w), g.tables.hhea = je.parse(S.data, S.offset), g.ascender = g.tables.hhea.ascender, g.descender = g.tables.hhea.descender, g.numberOfHMetrics = g.tables.hhea.numberOfHMetrics;
              break;
            case "hmtx":
              h = w;
              break;
            case "ltag":
              S = Ci(v, w), i = We.parse(S.data, S.offset);
              break;
            case "maxp":
              S = Ci(v, w), g.tables.maxp = Xe.parse(S.data, S.offset), g.numGlyphs = g.tables.maxp.numGlyphs;
              break;
            case "name":
              p = w;
              break;
            case "OS/2":
              S = Ci(v, w), g.tables.os2 = ct.parse(S.data, S.offset);
              break;
            case "post":
              S = Ci(v, w), g.tables.post = ht.parse(S.data, S.offset), g.glyphNames = new ye(g.tables.post);
              break;
            case "prep":
              S = Ci(v, w), f = new le.Parser(S.data, S.offset), g.tables.prep = f.parseByteList(w.length);
              break;
            case "glyf":
              a = w;
              break;
            case "loca":
              d = w;
              break;
            case "CFF ":
              o = w;
              break;
            case "kern":
              u = w;
              break;
            case "GPOS":
              l = w;
              break;
            case "GSUB":
              c = w;
              break;
            case "meta":
              m = w;
          }
        }
        var E = Ci(v, p);
        if (g.tables.name = at.parse(E.data, E.offset, i), g.names = g.tables.name, a && d) {
          var q = 0 === n, T = Ci(v, d), A = qi.parse(T.data, T.offset, g.numGlyphs, q), M = Ci(v, a);
          g.glyphs = Vt.parse(M.data, M.offset, A, g, t);
        } else {
          if (!o) throw new Error("Font doesn't contain TrueType or CFF outlines.");
          var C = Ci(v, o);
          Ge.parse(C.data, C.offset, g, t);
        }
        var k = Ci(v, h);
        if ($e.parse(g, k.data, k.offset, g.numberOfHMetrics, g.numGlyphs, g.glyphs, t), _e(g, t), u) {
          var R = Ci(v, u);
          g.kerningPairs = Ei.parse(R.data, R.offset);
        } else g.kerningPairs = {};
        if (l) {
          var L = Ci(v, l);
          g.tables.gpos = Si.parse(L.data, L.offset), g.position.init();
        }
        if (c) {
          var P = Ci(v, c);
          g.tables.gsub = mt.parse(P.data, P.offset);
        }
        if (s) {
          var D = Ci(v, s);
          g.tables.fvar = xi.parse(D.data, D.offset, g.names);
        }
        if (m) {
          var O = Ci(v, m);
          g.tables.meta = ft.parse(O.data, O.offset), g.metas = g.tables.meta;
        }
        return g;
      }
      t.Font = mi, t.Glyph = be, t.Path = k, t.BoundingBox = C, t._parse = le, t.parse = ki, t.load = function (e, t, n) {
        ("undefined" == typeof window ? Ti : Ai)(e, function (e, i) {
          if (e) return t(e);
          var r;
          try {
            r = ki(i, n);
          } catch (e) {
            return t(e, null);
          }
          return t(null, r);
        });
      }, t.loadSync = function (e, t) {
        return ki(Rt(n(21).readFileSync(e)), t);
      }, Object.defineProperty(t, "__esModule", {value: true});
    }(t);
  }.call(this, n(8).Buffer));
}, function (e, t) {
  (function () {
    "use strict";
    var e = undefined, t = this;
    function n(n, i) {
      var r, o = n.split("."), s = t;
      !(o[0] in s) && s.execScript && s.execScript("var " + o[0]);
      for (; o.length && (r = o.shift());) o.length || i === e ? s = s[r] ? s[r] : s[r] = {} : s[r] = i;
    }
    var i = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array && "undefined" != typeof DataView;
    function r(e) {
      var t, n, r, o, s, a, l, c, h, u, d = e.length, p = 0, m = Number.POSITIVE_INFINITY;
      for (c = 0; c < d; ++c) e[c] > p && (p = e[c]), e[c] < m && (m = e[c]);
      for (t = 1 << p, n = new (i ? Uint32Array : Array)(t), r = 1, o = 0, s = 2; r <= p;) {
        for (c = 0; c < d; ++c) if (e[c] === r) {
          for (a = 0, l = o, h = 0; h < r; ++h) a = a << 1 | 1 & l, l >>= 1;
          for (u = r << 16 | c, h = a; h < t; h += s) n[h] = u;
          ++o;
        }
        ++r, o <<= 1, s <<= 1;
      }
      return [n, p, m];
    }
    function o(e, t) {
      switch (this.g = [], this.h = 32768, this.d = this.f = this.a = this.l = 0, this.input = i ? new Uint8Array(e) : e, this.m = false, this.i = a, this.r = false, !t && (t = {}) || (t.index && (this.a = t.index), t.bufferSize && (this.h = t.bufferSize), t.bufferType && (this.i = t.bufferType), t.resize && (this.r = t.resize)), this.i) {
        case s:
          this.b = 32768, this.c = new (i ? Uint8Array : Array)(32768 + this.h + 258);
          break;
        case a:
          this.b = 0, this.c = new (i ? Uint8Array : Array)(this.h), this.e = this.z, this.n = this.v, this.j = this.w;
          break;
        default:
          throw Error("invalid inflate mode");
      }
    }
    var s = 0, a = 1, l = {t: s, s: a};
    o.prototype.k = function () {
      for (; !this.m;) {
        var t = A(this, 3);
        switch (1 & t && (this.m = true), t >>>= 1) {
          case 0:
            var n = this.input, o = this.a, l = this.c, c = this.b, h = n.length, u = e, p = l.length, m = e;
            if (this.d = this.f = 0, o + 1 >= h) throw Error("invalid uncompressed block header: LEN");
            if (u = n[o++] | n[o++] << 8, o + 1 >= h) throw Error("invalid uncompressed block header: NLEN");
            if (u === ~(n[o++] | n[o++] << 8)) throw Error("invalid uncompressed block header: length verify");
            if (o + u > n.length) throw Error("input buffer is broken");
            switch (this.i) {
              case s:
                for (; c + u > l.length;) {
                  if (u -= m = p - c, i) l.set(n.subarray(o, o + m), c), c += m, o += m; else for (; m--;) l[c++] = n[o++];
                  this.b = c, l = this.e(), c = this.b;
                }
                break;
              case a:
                for (; c + u > l.length;) l = this.e({p: 2});
                break;
              default:
                throw Error("invalid inflate mode");
            }
            if (i) l.set(n.subarray(o, o + u), c), c += u, o += u; else for (; u--;) l[c++] = n[o++];
            this.a = o, this.b = c, this.c = l;
            break;
          case 1:
            this.j(E, T);
            break;
          case 2:
            var f, g, v, y, _ = A(this, 5) + 257, x = A(this, 5) + 1, b = A(this, 4) + 4, w = new (i ? Uint8Array : Array)(d.length), S = e, q = e, C = e, k = e, R = e;
            for (R = 0; R < b; ++R) w[d[R]] = A(this, 3);
            if (!i) for (R = b, b = w.length; R < b; ++R) w[d[R]] = 0;
            for (f = r(w), S = new (i ? Uint8Array : Array)(_ + x), R = 0, y = _ + x; R < y;) switch (q = M(this, f), q) {
              case 16:
                for (k = 3 + A(this, 2); k--;) S[R++] = C;
                break;
              case 17:
                for (k = 3 + A(this, 3); k--;) S[R++] = 0;
                C = 0;
                break;
              case 18:
                for (k = 11 + A(this, 7); k--;) S[R++] = 0;
                C = 0;
                break;
              default:
                C = S[R++] = q;
            }
            g = r(i ? S.subarray(0, _) : S.slice(0, _)), v = r(i ? S.subarray(_) : S.slice(_)), this.j(g, v);
            break;
          default:
            throw Error("unknown BTYPE: " + t);
        }
      }
      return this.n();
    };
    var c, h, u = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], d = i ? new Uint16Array(u) : u, p = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258], m = i ? new Uint16Array(p) : p, f = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0], g = i ? new Uint8Array(f) : f, v = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577], y = i ? new Uint16Array(v) : v, _ = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], x = i ? new Uint8Array(_) : _, b = new (i ? Uint8Array : Array)(288);
    for (c = 0, h = b.length; c < h; ++c) b[c] = 143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8;
    var w, S, E = r(b), q = new (i ? Uint8Array : Array)(30);
    for (w = 0, S = q.length; w < S; ++w) q[w] = 5;
    var T = r(q);
    function A(e, t) {
      for (var n, i = e.f, r = e.d, o = e.input, s = e.a, a = o.length; r < t;) {
        if (s >= a) throw Error("input buffer is broken");
        i |= o[s++] << r, r += 8;
      }
      return n = i & (1 << t) - 1, e.f = i >>> t, e.d = r - t, e.a = s, n;
    }
    function M(e, t) {
      for (var n, i, r = e.f, o = e.d, s = e.input, a = e.a, l = s.length, c = t[0], h = t[1]; o < h && !(a >= l);) r |= s[a++] << o, o += 8;
      if ((i = (n = c[r & (1 << h) - 1]) >>> 16) > o) throw Error("invalid code length: " + i);
      return e.f = r >> i, e.d = o - i, e.a = a, 65535 & n;
    }
    function C(e, t) {
      var n, i;
      switch (this.input = e, this.a = 0, !t && (t = {}) || (t.index && (this.a = t.index), t.verify && (this.A = t.verify)), n = e[this.a++], i = e[this.a++], 15 & n) {
        case k:
          this.method = k;
          break;
        default:
          throw Error("unsupported compression method");
      }
      if (0 != ((n << 8) + i) % 31) throw Error("invalid fcheck flag:" + ((n << 8) + i) % 31);
      if (32 & i) throw Error("fdict flag is not supported");
      this.q = new o(e, {index: this.a, bufferSize: t.bufferSize, bufferType: t.bufferType, resize: t.resize});
    }
    o.prototype.j = function (e, t) {
      var n = this.c, i = this.b;
      this.o = e;
      for (var r, o, s, a, l = n.length - 258; 256 !== (r = M(this, e));) if (256 > r) i >= l && (this.b = i, n = this.e(), i = this.b), n[i++] = r; else for (a = m[o = r - 257], 0 < g[o] && (a += A(this, g[o])), r = M(this, t), s = y[r], 0 < x[r] && (s += A(this, x[r])), i >= l && (this.b = i, n = this.e(), i = this.b); a--;) n[i] = n[i++ - s];
      for (; 8 <= this.d;) this.d -= 8, this.a--;
      this.b = i;
    }, o.prototype.w = function (e, t) {
      var n = this.c, i = this.b;
      this.o = e;
      for (var r, o, s, a, l = n.length; 256 !== (r = M(this, e));) if (256 > r) i >= l && (l = (n = this.e()).length), n[i++] = r; else for (a = m[o = r - 257], 0 < g[o] && (a += A(this, g[o])), r = M(this, t), s = y[r], 0 < x[r] && (s += A(this, x[r])), i + a > l && (l = (n = this.e()).length); a--;) n[i] = n[i++ - s];
      for (; 8 <= this.d;) this.d -= 8, this.a--;
      this.b = i;
    }, o.prototype.e = function () {
      var e, t, n = new (i ? Uint8Array : Array)(this.b - 32768), r = this.b - 32768, o = this.c;
      if (i) n.set(o.subarray(32768, n.length)); else for (e = 0, t = n.length; e < t; ++e) n[e] = o[e + 32768];
      if (this.g.push(n), this.l += n.length, i) o.set(o.subarray(r, r + 32768)); else for (e = 0; 32768 > e; ++e) o[e] = o[r + e];
      return this.b = 32768, o;
    }, o.prototype.z = function (e) {
      var t, n, r, o = this.input.length / this.a + 1 | 0, s = this.input, a = this.c;
      return e && ("number" == typeof e.p && (o = e.p), "number" == typeof e.u && (o += e.u)), 2 > o ? n = (r = (s.length - this.a) / this.o[2] / 2 * 258 | 0) < a.length ? a.length + r : a.length << 1 : n = a.length * o, i ? (t = new Uint8Array(n)).set(a) : t = a, this.c = t;
    }, o.prototype.n = function () {
      var e, t, n, r, o, s = 0, a = this.c, l = this.g, c = new (i ? Uint8Array : Array)(this.l + (this.b - 32768));
      if (0 === l.length) return i ? this.c.subarray(32768, this.b) : this.c.slice(32768, this.b);
      for (t = 0, n = l.length; t < n; ++t) for (r = 0, o = (e = l[t]).length; r < o; ++r) c[s++] = e[r];
      for (t = 32768, n = this.b; t < n; ++t) c[s++] = a[t];
      return this.g = [], this.buffer = c;
    }, o.prototype.v = function () {
      var e, t = this.b;
      return i ? this.r ? (e = new Uint8Array(t)).set(this.c.subarray(0, t)) : e = this.c.subarray(0, t) : (this.c.length > t && (this.c.length = t), e = this.c), this.buffer = e;
    }, C.prototype.k = function () {
      var e, t, n = this.input;
      if (e = this.q.k(), this.a = this.q.a, this.A) {
        t = (n[this.a++] << 24 | n[this.a++] << 16 | n[this.a++] << 8 | n[this.a++]) >>> 0;
        var i = e;
        if ("string" == typeof i) {
          var r, o, s = i.split("");
          for (r = 0, o = s.length; r < o; r++) s[r] = (255 & s[r].charCodeAt(0)) >>> 0;
          i = s;
        }
        for (var a, l = 1, c = 0, h = i.length, u = 0; 0 < h;) {
          h -= a = 1024 < h ? 1024 : h;
          do {
            c += l += i[u++];
          } while (--a);
          l %= 65521, c %= 65521;
        }
        if (t !== (c << 16 | l) >>> 0) throw Error("invalid adler-32 checksum");
      }
      return e;
    };
    var k = 8;
    n("Zlib.Inflate", C), n("Zlib.Inflate.prototype.decompress", C.prototype.k);
    var R, L, P, D, O = {ADAPTIVE: l.s, BLOCK: l.t};
    if (Object.keys) R = Object.keys(O); else for (L in R = [], P = 0, O) R[P++] = L;
    for (P = 0, D = R.length; P < D; ++P) n("Zlib.Inflate.BufferType." + (L = R[P]), O[L]);
  }.call(this));
}, function (e, t) {
  THREE.FBXLoader = function () {
    var e, t, n;
    function i(e) {
      this.manager = undefined !== e ? e : THREE.DefaultLoadingManager;
    }
    function r(e) {
      this.textureLoader = e;
    }
    function o() {}
    function s() {}
    function a() {}
    function l() {}
    function c(e, t) {
      this.dv = new DataView(e), this.offset = 0, this.littleEndian = undefined === t || t;
    }
    function h() {}
    function u(e) {
      var t = e.match(/FBXVersion: (\d+)/);
      if (t) return parseInt(t[1]);
      throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.");
    }
    function d(e) {
      return e / 46186158e3;
    }
    i.prototype = {constructor: i, crossOrigin: "anonymous", load: function (e, t, n, i) {
      var r = this, o = undefined === r.path ? THREE.LoaderUtils.extractUrlBase(e) : r.path, s = new THREE.FileLoader(this.manager);
      s.setPath(r.path), s.setResponseType("arraybuffer"), s.load(e, function (n) {
        try {
          t(r.parse(n, o));
        } catch (t) {
          setTimeout(function () {
            i && i(t), r.manager.itemError(e);
          }, 0);
        }
      }, n, i);
    }, setPath: function (e) {
      return this.path = e, this;
    }, setResourcePath: function (e) {
      return this.resourcePath = e, this;
    }, setCrossOrigin: function (e) {
      return this.crossOrigin = e, this;
    }, parse: function (t, n) {
      if (s = "Kaydara FBX Binary  ", (o = t).byteLength >= s.length && s === (false && (0 = 0), undefined === s.length && (s.length = o.byteLength), THREE.LoaderUtils.decodeText(new Uint8Array(o, 0, s.length)))) e = (new l).parse(t); else {
        var i = (undefined === t && (t = 0), undefined === n && (n = t.byteLength), THREE.LoaderUtils.decodeText(new Uint8Array(t, t, n)));
        if (!function (e) {
          var t = ["K", "a", "y", "d", "a", "r", "a", "\\", "F", "B", "X", "\\", "B", "i", "n", "a", "r", "y", "\\", "\\"], n = 0;
          for (var i = 0; i < t.length; ++i) {
            if ((o = undefined, o = e[(r = 1) - 1], e = e.slice(n + r), n++, o) === t[i]) return false;
          }
          var r, o;
          return true;
        }(i)) throw new Error("THREE.FBXLoader: Unknown format.");
        if (u(i) < 7e3) throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: " + u(i));
        e = (new a).parse(i);
      }
      var o, s;
      return new r(new THREE.TextureLoader(this.manager).setPath(this.resourcePath || n).setCrossOrigin(this.crossOrigin)).parse(e);
    }}, r.prototype = {constructor: r, parse: function () {
      t = this.parseConnections();
      var e = this.parseImages(), i = this.parseTextures(e), r = this.parseMaterials(i), s = this.parseDeformers(), a = (new o).parse(s);
      return this.parseScene(s, a, r), n;
    }, parseConnections: function () {
      var t = new Map;
      "Connections" in e && e.Connections.connections.forEach(function (e) {
        var n = e[0], i = e[1], r = e[2];
        t.has(n) || t.set(n, {parents: [], children: []});
        var o = {ID: i, relationship: r};
        t.get(n).parents.push(o), t.has(i) || t.set(i, {parents: [], children: []});
        var s = {ID: n, relationship: r};
        t.get(i).children.push(s);
      });
      return t;
    }, parseImages: function () {
      var t = {}, n = {};
      if ("Video" in e.Objects) {
        var i = e.Objects.Video;
        for (var r in i) {
          var o = i[r];
          if (t[c = parseInt(r)] = o.RelativeFilename || o.Filename, "Content" in o) {
            var s = o.Content instanceof ArrayBuffer && o.Content.byteLength > 0, a = "string" == typeof o.Content && "" !== o.Content;
            if (s || a) {
              var l = this.parseImage(i[r]);
              n[o.RelativeFilename || o.Filename] = l;
            }
          }
        }
      }
      for (var c in t) {
        var h = t[c];
        undefined !== n[h] ? t[c] = n[h] : t[c] = t[c].split("\\").pop();
      }
      return t;
    }, parseImage: function (e) {
      var t, n = e.Content, i = e.RelativeFilename || e.Filename, r = i.slice(i.lastIndexOf(".") + 1).toLowerCase();
      switch (r) {
        case "bmp":
          t = "image/bmp";
          break;
        case "jpg":
        case "jpeg":
          t = "image/jpeg";
          break;
        case "png":
          t = "image/png";
          break;
        case "tif":
          t = "image/tiff";
          break;
        case "tga":
          null === THREE.Loader.Handlers.get(".tga") && console.warn("FBXLoader: TGA loader not found, skipping ", i), t = "image/tga";
          break;
        default:
          return void console.warn('FBXLoader: Image type "' + r + '" is not supported.');
      }
      if ("string" == typeof n) return "data:" + t + ";base64," + n;
      var o = new Uint8Array(n);
      return window.URL.createObjectURL(new Blob([o], {type: t}));
    }, parseTextures: function (t) {
      var n = new Map;
      if ("Texture" in e.Objects) {
        var i = e.Objects.Texture;
        for (var r in i) {
          var o = this.parseTexture(i[r], t);
          n.set(parseInt(r), o);
        }
      }
      return n;
    }, parseTexture: function (e, t) {
      var n = this.loadTexture(e, t);
      n.ID = e.id, n.name = e.attrName;
      var i = e.WrapModeU, r = e.WrapModeV, o = undefined !== i ? i.value : 0, s = undefined !== r ? r.value : 0;
      if (n.wrapS = 0 === o ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping, n.wrapT = 0 === s ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping, "Scaling" in e) {
        var a = e.Scaling.value;
        n.repeat.x = a[0], n.repeat.y = a[1];
      }
      return n;
    }, loadTexture: function (e, n) {
      var i, r, o = this.textureLoader.path, s = t.get(e.id).children;
      undefined !== s && s.length > 0 && undefined !== n[s[0].ID] && (0 !== (i = n[s[0].ID]).indexOf("blob:") && 0 !== i.indexOf("data:") || this.textureLoader.setPath(undefined));
      var a = e.FileName.slice(-3).toLowerCase();
      if ("tga" === a) {
        var l = THREE.Loader.Handlers.get(".tga");
        null === l ? (console.warn("FBXLoader: TGA loader not found, creating placeholder texture for", e.RelativeFilename), r = new THREE.Texture) : r = l.load(i);
      } else "psd" === a ? (console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for", e.RelativeFilename), r = new THREE.Texture) : r = this.textureLoader.load(i);
      return this.textureLoader.setPath(o), r;
    }, parseMaterials: function (t) {
      var n = new Map;
      if ("Material" in e.Objects) {
        var i = e.Objects.Material;
        for (var r in i) {
          var o = this.parseMaterial(i[r], t);
          null !== o && n.set(parseInt(r), o);
        }
      }
      return n;
    }, parseMaterial: function (e, n) {
      var i = e.id, r = e.attrName, o = e.ShadingModel;
      if ("object" == typeof o && (o = o.value), !t.has(i)) return null;
      var s, a = this.parseParameters(e, n, i);
      switch (o.toLowerCase()) {
        case "phong":
          s = new THREE.MeshBasicMaterial;
          break;
        case "lambert":
          s = new THREE.MeshLambertMaterial;
          break;
        default:
          console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.', o), s = new THREE.MeshPhongMaterial;
      }
      return s.setValues(a), s.name = r, s;
    }, parseParameters: function (e, n, i) {
      var r = {};
      e.BumpFactor && (r.bumpScale = e.BumpFactor.value), e.Diffuse ? r.color = (new THREE.Color).fromArray(e.Diffuse.value) : e.DiffuseColor && "Color" === e.DiffuseColor.type && (r.color = (new THREE.Color).fromArray(e.DiffuseColor.value)), e.DisplacementFactor && (r.displacementScale = e.DisplacementFactor.value), e.Emissive ? r.emissive = (new THREE.Color).fromArray(e.Emissive.value) : e.EmissiveColor && "Color" === e.EmissiveColor.type && (r.emissive = (new THREE.Color).fromArray(e.EmissiveColor.value)), e.EmissiveFactor && (r.emissiveIntensity = parseFloat(e.EmissiveFactor.value)), e.Opacity && (r.opacity = parseFloat(e.Opacity.value)), r.opacity < 1 && (r.transparent = true), e.ReflectionFactor && (r.reflectivity = e.ReflectionFactor.value), e.Shininess && (r.shininess = e.Shininess.value), e.Specular ? r.specular = (new THREE.Color).fromArray(e.Specular.value) : e.SpecularColor && "Color" === e.SpecularColor.type && (r.specular = (new THREE.Color).fromArray(e.SpecularColor.value));
      var o = this;
      return t.get(i).children.forEach(function (e) {
        var t = e.relationship;
        switch (t) {
          case "Bump":
            r.bumpMap = o.getTexture(n, e.ID);
            break;
          case "Maya|TEX_ao_map":
            r.aoMap = o.getTexture(n, e.ID);
            break;
          case "DiffuseColor":
          case "Maya|TEX_color_map":
            r.map = o.getTexture(n, e.ID), r.map.encoding = THREE.sRGBEncoding;
            break;
          case "DisplacementColor":
            r.displacementMap = o.getTexture(n, e.ID);
            break;
          case "EmissiveColor":
            r.emissiveMap = o.getTexture(n, e.ID), r.emissiveMap.encoding = THREE.sRGBEncoding;
            break;
          case "NormalMap":
          case "Maya|TEX_normal_map":
            r.normalMap = o.getTexture(n, e.ID);
            break;
          case "ReflectionColor":
            r.envMap = o.getTexture(n, e.ID), r.envMap.mapping = THREE.EquirectangularReflectionMapping, r.envMap.encoding = THREE.sRGBEncoding;
            break;
          case "SpecularColor":
            r.specularMap = o.getTexture(n, e.ID), r.specularMap.encoding = THREE.sRGBEncoding;
            break;
          case "TransparentColor":
            r.alphaMap = o.getTexture(n, e.ID), r.transparent = true;
            break;
          case "AmbientColor":
          case "ShininessExponent":
          case "SpecularFactor":
          case "VectorDisplacementColor":
          default:
            console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.", t);
        }
      }), r;
    }, getTexture: function (n, i) {
      return "LayeredTexture" in e.Objects && i in e.Objects.LayeredTexture && (console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."), i = t.get(i).children[0].ID), n.get(i);
    }, parseDeformers: function () {
      var n = {}, i = {};
      if ("Deformer" in e.Objects) {
        var r = e.Objects.Deformer;
        for (var o in r) {
          var s = r[o], a = t.get(parseInt(o));
          if ("Skin" === s.attrType) {
            var l = this.parseSkeleton(a, r);
            l.ID = o, a.parents.length > 1 && console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."), l.geometryID = a.parents[0].ID, n[o] = l;
          } else if ("BlendShape" === s.attrType) {
            var c = {id: o};
            c.rawTargets = this.parseMorphTargets(a, r), c.id = o, a.parents.length > 1 && console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."), i[o] = c;
          }
        }
      }
      return {skeletons: n, morphTargets: i};
    }, parseSkeleton: function (e, t) {
      var n = [];
      return e.children.forEach(function (e) {
        var i = t[e.ID];
        if ("Cluster" === i.attrType) {
          var r = {ID: e.ID, indices: [], weights: [], transformLink: (new THREE.Matrix4).fromArray(i.TransformLink.a)};
          "Indexes" in i && (r.indices = i.Indexes.a, r.weights = i.Weights.a), n.push(r);
        }
      }), {rawBones: n, bones: []};
    }, parseMorphTargets: function (e, n) {
      for (var i = [], r = 0; r < e.children.length; r++) {
        var o = e.children[r], s = n[o.ID], a = {name: s.attrName, initialWeight: s.DeformPercent, id: s.id, fullWeights: s.FullWeights.a};
        if ("BlendShapeChannel" !== s.attrType) return;
        a.geoID = t.get(parseInt(o.ID)).children.filter(function (e) {
          return undefined === e.relationship;
        })[0].ID, i.push(a);
      }
      return i;
    }, parseScene: function (i, r, o) {
      n = new THREE.Group;
      var a = this.parseModels(i.skeletons, r, o), l = e.Objects.Model, c = this;
      a.forEach(function (e) {
        var i = l[e.ID];
        c.setLookAtProperties(e, i), t.get(e.ID).parents.forEach(function (t) {
          var n = a.get(t.ID);
          undefined !== n && n.add(e);
        }), null === e.parent && n.add(e);
      }), this.bindSkeleton(i.skeletons, r, a), this.createAmbientLight(), this.setupMorphMaterials(), n.traverse(function (e) {
        if (e.userData.transformData) {
          e.parent && (e.userData.transformData.parentMatrixWorld = e.parent.matrix);
          var t = v(e.userData.transformData);
          e.applyMatrix(t);
        }
      });
      var h = (new s).parse();
      1 === n.children.length && n.children[0].isGroup && (n.children[0].animations = h, n = n.children[0]), n.animations = h;
    }, parseModels: function (n, i, r) {
      var o = new Map, s = e.Objects.Model;
      for (var a in s) {
        var l = parseInt(a), c = s[a], h = t.get(l), u = this.buildSkeleton(h, n, l, c.attrName);
        if (!u) {
          switch (c.attrType) {
            case "Camera":
              u = this.createCamera(h);
              break;
            case "Light":
              u = this.createLight(h);
              break;
            case "Mesh":
              u = this.createMesh(h, i, r);
              break;
            case "NurbsCurve":
              u = this.createCurve(h, i);
              break;
            case "LimbNode":
            case "Root":
              u = new THREE.Bone;
              break;
            case "Null":
            default:
              u = new THREE.Group;
          }
          u.name = THREE.PropertyBinding.sanitizeNodeName(c.attrName), u.ID = l;
        }
        this.getTransformData(u, c), o.set(l, u);
      }
      return o;
    }, buildSkeleton: function (e, t, n, i) {
      var r = null;
      return e.parents.forEach(function (e) {
        for (var o in t) {
          var s = t[o];
          s.rawBones.forEach(function (t, o) {
            if (t.ID === e.ID) {
              var a = r;
              (r = new THREE.Bone).matrixWorld.copy(t.transformLink), r.name = THREE.PropertyBinding.sanitizeNodeName(i), r.ID = n, s.bones[o] = r, null !== a && r.add(a);
            }
          });
        }
      }), r;
    }, createCamera: function (t) {
      var n, i;
      if (t.children.forEach(function (t) {
        var n = e.Objects.NodeAttribute[t.ID];
        undefined !== n && (i = n);
      }), undefined === i) n = new THREE.Object3D; else {
        var r = 0;
        undefined !== i.CameraProjectionType && 1 === i.CameraProjectionType.value && (r = 1);
        var o = 1;
        undefined !== i.NearPlane && (o = i.NearPlane.value / 1e3);
        var s = 1e3;
        undefined !== i.FarPlane && (s = i.FarPlane.value / 1e3);
        var a = window.innerWidth, l = window.innerHeight;
        undefined !== i.AspectWidth && undefined !== i.AspectHeight && (a = i.AspectWidth.value, l = i.AspectHeight.value);
        var c = a / l, h = 45;
        undefined !== i.FieldOfView && (h = i.FieldOfView.value);
        var u = i.FocalLength ? i.FocalLength.value : null;
        switch (r) {
          case 0:
            n = new THREE.PerspectiveCamera(h, c, o, s), null !== u && n.setFocalLength(u);
            break;
          case 1:
            n = new THREE.OrthographicCamera(-a / 2, a / 2, l / 2, -l / 2, o, s);
            break;
          default:
            console.warn("THREE.FBXLoader: Unknown camera type " + r + "."), n = new THREE.Object3D;
        }
      }
      return n;
    }, createLight: function (t) {
      var n, i;
      if (t.children.forEach(function (t) {
        var n = e.Objects.NodeAttribute[t.ID];
        undefined !== n && (i = n);
      }), undefined === i) n = new THREE.Object3D; else {
        var r;
        r = undefined === i.LightType ? 0 : i.LightType.value;
        var o = 16777215;
        undefined !== i.Color && (o = (new THREE.Color).fromArray(i.Color.value));
        var s = undefined === i.Intensity ? 1 : i.Intensity.value / 100;
        undefined !== i.CastLightOnObject && 0 === i.CastLightOnObject.value && (s = 0);
        var a = 0;
        undefined !== i.FarAttenuationEnd && (a = undefined !== i.EnableFarAttenuation && 0 === i.EnableFarAttenuation.value ? 0 : i.FarAttenuationEnd.value);
        switch (r) {
          case 0:
            n = new THREE.PointLight(o, s, a, 1);
            break;
          case 1:
            n = new THREE.DirectionalLight(o, s);
            break;
          case 2:
            var l = Math.PI / 3;
            undefined !== i.InnerAngle && (l = THREE.Math.degToRad(i.InnerAngle.value));
            var c = 0;
            undefined !== i.OuterAngle && (c = THREE.Math.degToRad(i.OuterAngle.value), c = Math.max(c, 1)), n = new THREE.SpotLight(o, s, a, l, c, 1);
            break;
          default:
            console.warn("THREE.FBXLoader: Unknown light type " + i.LightType.value + ", defaulting to a THREE.PointLight."), n = new THREE.PointLight(o, s);
        }
        undefined !== i.CastShadows && 1 === i.CastShadows.value && (n.castShadow = true);
      }
      return n;
    }, createMesh: function (e, t, n) {
      var i, r = null, o = null, s = [];
      return e.children.forEach(function (e) {
        t.has(e.ID) && (r = t.get(e.ID)), n.has(e.ID) && s.push(n.get(e.ID));
      }), s.length > 1 ? o = s : s.length > 0 ? o = s[0] : (o = new THREE.MeshPhongMaterial({color: 13421772}), s.push(o)), "color" in r.attributes && s.forEach(function (e) {
        e.vertexColors = THREE.VertexColors;
      }), r.FBX_Deformer ? (s.forEach(function (e) {
        e.skinning = true;
      }), (i = new THREE.SkinnedMesh(r, o)).normalizeSkinWeights()) : i = new THREE.Mesh(r, o), i;
    }, createCurve: function (e, t) {
      var n = e.children.reduce(function (e, n) {
        return t.has(n.ID) && (e = t.get(n.ID)), e;
      }, null), i = new THREE.LineBasicMaterial({color: 3342591, linewidth: 1});
      return new THREE.Line(n, i);
    }, getTransformData: function (e, t) {
      var n = {};
      "InheritType" in t && (n.inheritType = parseInt(t.InheritType.value)), n.eulerOrder = "RotationOrder" in t ? y(t.RotationOrder.value) : "ZYX", "Lcl_Translation" in t && (n.translation = t.Lcl_Translation.value), "PreRotation" in t && (n.preRotation = t.PreRotation.value), "Lcl_Rotation" in t && (n.rotation = t.Lcl_Rotation.value), "PostRotation" in t && (n.postRotation = t.PostRotation.value), "Lcl_Scaling" in t && (n.scale = t.Lcl_Scaling.value), "ScalingOffset" in t && (n.scalingOffset = t.ScalingOffset.value), "ScalingPivot" in t && (n.scalingPivot = t.ScalingPivot.value), "RotationOffset" in t && (n.rotationOffset = t.RotationOffset.value), "RotationPivot" in t && (n.rotationPivot = t.RotationPivot.value), e.userData.transformData = n;
    }, setLookAtProperties: function (i, r) {
      "LookAtProperty" in r && t.get(i.ID).children.forEach(function (t) {
        if ("LookAtProperty" === t.relationship) {
          var r = e.Objects.Model[t.ID];
          if ("Lcl_Translation" in r) {
            var o = r.Lcl_Translation.value;
            undefined !== i.target ? (i.target.position.fromArray(o), n.add(i.target)) : i.lookAt((new THREE.Vector3).fromArray(o));
          }
        }
      });
    }, bindSkeleton: function (e, n, i) {
      var r = this.parsePoseNodes();
      for (var o in e) {
        var s = e[o];
        t.get(parseInt(s.ID)).parents.forEach(function (e) {
          if (n.has(e.ID)) {
            var o = e.ID;
            t.get(o).parents.forEach(function (e) {
              i.has(e.ID) && i.get(e.ID).bind(new THREE.Skeleton(s.bones), r[e.ID]);
            });
          }
        });
      }
    }, parsePoseNodes: function () {
      var t = {};
      if ("Pose" in e.Objects) {
        var n = e.Objects.Pose;
        for (var i in n) if ("BindPose" === n[i].attrType) {
          var r = n[i].PoseNode;
          Array.isArray(r) ? r.forEach(function (e) {
            t[e.Node] = (new THREE.Matrix4).fromArray(e.Matrix.a);
          }) : t[r.Node] = (new THREE.Matrix4).fromArray(r.Matrix.a);
        }
      }
      return t;
    }, createAmbientLight: function () {
      if ("GlobalSettings" in e && "AmbientColor" in e.GlobalSettings) {
        var t = e.GlobalSettings.AmbientColor.value, i = t[0], r = t[1], o = t[2];
        if (0 !== i || 0 !== r || 0 !== o) {
          var s = new THREE.Color(i, r, o);
          n.add(new THREE.AmbientLight(s, 1));
        }
      }
    }, setupMorphMaterials: function () {
      var e = this;
      n.traverse(function (t) {
        t.isMesh && t.geometry.morphAttributes.position && t.geometry.morphAttributes.position.length && (Array.isArray(t.material) ? t.material.forEach(function (n, i) {
          e.setupMorphMaterial(t, n, i);
        }) : e.setupMorphMaterial(t, t.material));
      });
    }, setupMorphMaterial: function (e, t, i) {
      var r = e.uuid, o = t.uuid, s = false;
      if (n.traverse(function (e) {
        e.isMesh && (Array.isArray(e.material) ? e.material.forEach(function (t) {
          t.uuid === o && e.uuid !== r && (s = true);
        }) : e.material.uuid === o && e.uuid !== r && (s = true));
      }), true === s) {
        var a = t.clone();
        a.morphTargets = true, undefined === i ? e.material = a : e.material[i] = a;
      } else t.morphTargets = true;
    }}, o.prototype = {constructor: o, parse: function (n) {
      var i = new Map;
      if ("Geometry" in e.Objects) {
        var r = e.Objects.Geometry;
        for (var o in r) {
          var s = t.get(parseInt(o)), a = this.parseGeometry(s, r[o], n);
          i.set(parseInt(o), a);
        }
      }
      return i;
    }, parseGeometry: function (e, t, n) {
      switch (t.attrType) {
        case "Mesh":
          return this.parseMeshGeometry(e, t, n);
        case "NurbsCurve":
          return this.parseNurbsGeometry(t);
      }
    }, parseMeshGeometry: function (t, n, i) {
      var r = i.skeletons, o = i.morphTargets, s = t.parents.map(function (t) {
        return e.Objects.Model[t.ID];
      });
      if (0 !== s.length) {
        var a = t.children.reduce(function (e, t) {
          return undefined !== r[t.ID] && (e = r[t.ID]), e;
        }, null), l = t.children.reduce(function (e, t) {
          return undefined !== o[t.ID] && (e = o[t.ID]), e;
        }, null), c = s[0], h = {};
        "RotationOrder" in c && (h.eulerOrder = y(c.RotationOrder.value)), "InheritType" in c && (h.inheritType = parseInt(c.InheritType.value)), "GeometricTranslation" in c && (h.translation = c.GeometricTranslation.value), "GeometricRotation" in c && (h.rotation = c.GeometricRotation.value), "GeometricScaling" in c && (h.scale = c.GeometricScaling.value);
        var u = v(h);
        return this.genGeometry(n, a, l, u);
      }
    }, genGeometry: function (e, t, n, i) {
      var r = new THREE.BufferGeometry;
      e.attrName && (r.name = e.attrName);
      var o = this.parseGeoNode(e, t), s = this.genBuffers(o), a = new THREE.Float32BufferAttribute(s.vertex, 3);
      if (i.applyToBufferAttribute(a), r.addAttribute("position", a), s.colors.length > 0 && r.addAttribute("color", new THREE.Float32BufferAttribute(s.colors, 3)), t && (r.addAttribute("skinIndex", new THREE.Uint16BufferAttribute(s.weightsIndices, 4)), r.addAttribute("skinWeight", new THREE.Float32BufferAttribute(s.vertexWeights, 4)), r.FBX_Deformer = t), s.normal.length > 0) {
        var l = new THREE.Float32BufferAttribute(s.normal, 3);
        (new THREE.Matrix3).getNormalMatrix(i).applyToBufferAttribute(l), r.addAttribute("normal", l);
      }
      if (s.uvs.forEach(function (e, t) {
        var n = "uv" + (t + 1).toString();
        0 === t && (n = "uv"), r.addAttribute(n, new THREE.Float32BufferAttribute(s.uvs[t], 2));
      }), o.material && "AllSame" !== o.material.mappingType) {
        var c = s.materialIndex[0], h = 0;
        if (s.materialIndex.forEach(function (e, t) {
          e !== c && (r.addGroup(h, t - h, c), c = e, h = t);
        }), r.groups.length > 0) {
          var u = r.groups[r.groups.length - 1], d = u.start + u.count;
          d !== s.materialIndex.length && r.addGroup(d, s.materialIndex.length - d, c);
        }
        0 === r.groups.length && r.addGroup(0, s.materialIndex.length, s.materialIndex[0]);
      }
      return this.addMorphTargets(r, e, n, i), r;
    }, parseGeoNode: function (e, t) {
      var n = {};
      if (n.vertexPositions = undefined !== e.Vertices ? e.Vertices.a : [], n.vertexIndices = undefined !== e.PolygonVertexIndex ? e.PolygonVertexIndex.a : [], e.LayerElementColor && (n.color = this.parseVertexColors(e.LayerElementColor[0])), e.LayerElementMaterial && (n.material = this.parseMaterialIndices(e.LayerElementMaterial[0])), e.LayerElementNormal && (n.normal = this.parseNormals(e.LayerElementNormal[0])), e.LayerElementUV) {
        n.uv = [];
        for (var i = 0; e.LayerElementUV[i];) n.uv.push(this.parseUVs(e.LayerElementUV[i])), i++;
      }
      return n.weightTable = {}, null !== t && (n.skeleton = t, t.rawBones.forEach(function (e, t) {
        e.indices.forEach(function (i, r) {
          undefined === n.weightTable[i] && (n.weightTable[i] = []), n.weightTable[i].push({id: t, weight: e.weights[r]});
        });
      })), n;
    }, genBuffers: function (e) {
      var t = {vertex: [], normal: [], colors: [], uvs: [], materialIndex: [], vertexWeights: [], weightsIndices: []}, n = 0, i = 0, r = false, o = [], s = [], a = [], l = [], c = [], h = [], u = this;
      return e.vertexIndices.forEach(function (d, p) {
        var f = false;
        d < 0 && (d ^= -1, f = true);
        var g = [], v = [];
        if (o.push(3 * d, 3 * d + 1, 3 * d + 2), e.color) {
          var y = m(p, n, d, e.color);
          a.push(y[0], y[1], y[2]);
        }
        if (e.skeleton) {
          if (undefined !== e.weightTable[d] && e.weightTable[d].forEach(function (e) {
            v.push(e.weight), g.push(e.id);
          }), v.length > 4) {
            r || (console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."), r = true);
            var _ = [0, 0, 0, 0], x = [0, 0, 0, 0];
            v.forEach(function (e, t) {
              var n = e, i = g[t];
              x.forEach(function (e, t, r) {
                if (n > e) {
                  r[t] = n, n = e;
                  var o = _[t];
                  _[t] = i, i = o;
                }
              });
            }), g = _, v = x;
          }
          for (; v.length < 4;) v.push(0), g.push(0);
          for (var b = 0; b < 4; ++b) c.push(v[b]), h.push(g[b]);
        }
        if (e.normal) {
          y = m(p, n, d, e.normal);
          s.push(y[0], y[1], y[2]);
        }
        if (e.material && "AllSame" !== e.material.mappingType) var w = m(p, n, d, e.material)[0];
        e.uv && e.uv.forEach(function (e, t) {
          var i = m(p, n, d, e);
          undefined === l[t] && (l[t] = []), l[t].push(i[0]), l[t].push(i[1]);
        }), i++, f && (u.genFace(t, e, o, w, s, a, l, c, h, i), n++, i = 0, o = [], s = [], a = [], l = [], c = [], h = []);
      }), t;
    }, genFace: function (e, t, n, i, r, o, s, a, l, c) {
      for (var h = 2; h < c; h++) e.vertex.push(t.vertexPositions[n[0]]), e.vertex.push(t.vertexPositions[n[1]]), e.vertex.push(t.vertexPositions[n[2]]), e.vertex.push(t.vertexPositions[n[3 * (h - 1)]]), e.vertex.push(t.vertexPositions[n[3 * (h - 1) + 1]]), e.vertex.push(t.vertexPositions[n[3 * (h - 1) + 2]]), e.vertex.push(t.vertexPositions[n[3 * h]]), e.vertex.push(t.vertexPositions[n[3 * h + 1]]), e.vertex.push(t.vertexPositions[n[3 * h + 2]]), t.skeleton && (e.vertexWeights.push(a[0]), e.vertexWeights.push(a[1]), e.vertexWeights.push(a[2]), e.vertexWeights.push(a[3]), e.vertexWeights.push(a[4 * (h - 1)]), e.vertexWeights.push(a[4 * (h - 1) + 1]), e.vertexWeights.push(a[4 * (h - 1) + 2]), e.vertexWeights.push(a[4 * (h - 1) + 3]), e.vertexWeights.push(a[4 * h]), e.vertexWeights.push(a[4 * h + 1]), e.vertexWeights.push(a[4 * h + 2]), e.vertexWeights.push(a[4 * h + 3]), e.weightsIndices.push(l[0]), e.weightsIndices.push(l[1]), e.weightsIndices.push(l[2]), e.weightsIndices.push(l[3]), e.weightsIndices.push(l[4 * (h - 1)]), e.weightsIndices.push(l[4 * (h - 1) + 1]), e.weightsIndices.push(l[4 * (h - 1) + 2]), e.weightsIndices.push(l[4 * (h - 1) + 3]), e.weightsIndices.push(l[4 * h]), e.weightsIndices.push(l[4 * h + 1]), e.weightsIndices.push(l[4 * h + 2]), e.weightsIndices.push(l[4 * h + 3])), t.color && (e.colors.push(o[0]), e.colors.push(o[1]), e.colors.push(o[2]), e.colors.push(o[3 * (h - 1)]), e.colors.push(o[3 * (h - 1) + 1]), e.colors.push(o[3 * (h - 1) + 2]), e.colors.push(o[3 * h]), e.colors.push(o[3 * h + 1]), e.colors.push(o[3 * h + 2])), t.material && "AllSame" !== t.material.mappingType && (e.materialIndex.push(i), e.materialIndex.push(i), e.materialIndex.push(i)), t.normal && (e.normal.push(r[0]), e.normal.push(r[1]), e.normal.push(r[2]), e.normal.push(r[3 * (h - 1)]), e.normal.push(r[3 * (h - 1) + 1]), e.normal.push(r[3 * (h - 1) + 2]), e.normal.push(r[3 * h]), e.normal.push(r[3 * h + 1]), e.normal.push(r[3 * h + 2])), t.uv && t.uv.forEach(function (t, n) {
        undefined === e.uvs[n] && (e.uvs[n] = []), e.uvs[n].push(s[n][0]), e.uvs[n].push(s[n][1]), e.uvs[n].push(s[n][2 * (h - 1)]), e.uvs[n].push(s[n][2 * (h - 1) + 1]), e.uvs[n].push(s[n][2 * h]), e.uvs[n].push(s[n][2 * h + 1]);
      });
    }, addMorphTargets: function (t, n, i, r) {
      if (null !== i) {
        t.morphAttributes.position = [];
        var o = this;
        i.rawTargets.forEach(function (i) {
          var s = e.Objects.Geometry[i.geoID];
          undefined !== s && o.genMorphGeometry(t, n, s, r, i.name);
        });
      }
    }, genMorphGeometry: function (e, t, n, i, r) {
      var o = new THREE.BufferGeometry;
      n.attrName && (o.name = n.attrName);
      for (var s = undefined !== t.PolygonVertexIndex ? t.PolygonVertexIndex.a : [], a = undefined !== t.Vertices ? t.Vertices.a.slice() : [], l = undefined !== n.Vertices ? n.Vertices.a : [], c = undefined !== n.Indexes ? n.Indexes.a : [], h = 0; h < c.length; h++) {
        var u = 3 * c[h];
        a[u] += l[3 * h], a[u + 1] += l[3 * h + 1], a[u + 2] += l[3 * h + 2];
      }
      var d = {vertexIndices: s, vertexPositions: a}, p = this.genBuffers(d), m = new THREE.Float32BufferAttribute(p.vertex, 3);
      m.name = r || n.attrName, i.applyToBufferAttribute(m), e.morphAttributes.position.push(m);
    }, parseNormals: function (e) {
      var t = e.MappingInformationType, n = e.ReferenceInformationType, i = e.Normals.a, r = [];
      return "IndexToDirect" === n && ("NormalIndex" in e ? r = e.NormalIndex.a : "NormalsIndex" in e && (r = e.NormalsIndex.a)), {dataSize: 3, buffer: i, indices: r, mappingType: t, referenceType: n};
    }, parseUVs: function (e) {
      var t = e.MappingInformationType, n = e.ReferenceInformationType, i = e.UV.a, r = [];
      return "IndexToDirect" === n && (r = e.UVIndex.a), {dataSize: 2, buffer: i, indices: r, mappingType: t, referenceType: n};
    }, parseVertexColors: function (e) {
      var t = e.MappingInformationType, n = e.ReferenceInformationType, i = e.Colors.a, r = [];
      return "IndexToDirect" === n && (r = e.ColorIndex.a), {dataSize: 4, buffer: i, indices: r, mappingType: t, referenceType: n};
    }, parseMaterialIndices: function (e) {
      var t = e.MappingInformationType, n = e.ReferenceInformationType;
      if ("NoMappingInformation" === t) return {dataSize: 1, buffer: [0], indices: [0], mappingType: "AllSame", referenceType: n};
      for (var i = e.Materials.a, r = [], o = 0; o < i.length; ++o) r.push(o);
      return {dataSize: 1, buffer: i, indices: r, mappingType: t, referenceType: n};
    }, parseNurbsGeometry: function (e) {
      if (undefined === THREE.NURBSCurve) return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."), new THREE.BufferGeometry;
      var t = parseInt(e.Order);
      if (isNaN(t)) return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s", e.Order, e.id), new THREE.BufferGeometry;
      for (var n, i, r = t - 1, o = e.KnotVector.a, s = [], a = e.Points.a, l = 0, c = a.length; l < c; l += 4) s.push((new THREE.Vector4).fromArray(a, l));
      if ("Closed" === e.Form) s.push(s[0]); else if ("Periodic" === e.Form) {
        n = r, i = o.length - 1 - n;
        for (l = 0; l < r; ++l) s.push(s[l]);
      }
      var h = new THREE.NURBSCurve(r, o, s, n, i).getPoints(7 * s.length), u = new Float32Array(3 * h.length);
      h.forEach(function (e, t) {
        e.toArray(u, 3 * t);
      });
      var d = new THREE.BufferGeometry;
      return d.addAttribute("position", new THREE.BufferAttribute(u, 3)), d;
    }}, s.prototype = {constructor: s, parse: function () {
      var e = [], t = this.parseClips();
      if (undefined !== t) for (var n in t) {
        var i = t[n], r = this.addClip(i);
        e.push(r);
      }
      return e;
    }, parseClips: function () {
      if (undefined !== e.Objects.AnimationCurve) {
        var t = this.parseAnimationCurveNodes();
        this.parseAnimationCurves(t);
        var n = this.parseAnimationLayers(t);
        return this.parseAnimStacks(n);
      }
    }, parseAnimationCurveNodes: function () {
      var t = e.Objects.AnimationCurveNode, n = new Map;
      for (var i in t) {
        var r = t[i];
        if (null !== r.attrName.match(/S|R|T|DeformPercent/)) {
          var o = {id: r.id, attr: r.attrName, curves: {}};
          n.set(o.id, o);
        }
      }
      return n;
    }, parseAnimationCurves: function (n) {
      var i = e.Objects.AnimationCurve;
      for (var r in i) {
        var o = {id: i[r].id, times: i[r].KeyTime.a.map(d), values: i[r].KeyValueFloat.a}, s = t.get(o.id);
        if (undefined !== s) {
          var a = s.parents[0].ID, l = s.parents[0].relationship;
          l.match(/X/) ? n.get(a).curves.x = o : l.match(/Y/) ? n.get(a).curves.y = o : l.match(/Z/) ? n.get(a).curves.z = o : l.match(/d|DeformPercent/) && n.has(a) && (n.get(a).curves.morph = o);
        }
      }
    }, parseAnimationLayers: function (i) {
      var r = e.Objects.AnimationLayer, o = new Map;
      for (var s in r) {
        var a = [], l = t.get(parseInt(s));
        if (undefined !== l) l.children.forEach(function (r, o) {
          if (i.has(r.ID)) {
            var s = i.get(r.ID);
            if (undefined !== s.curves.x || undefined !== s.curves.y || undefined !== s.curves.z) {
              if (undefined === a[o]) if (undefined !== (p = t.get(r.ID).parents.filter(function (e) {
                return undefined !== e.relationship;
              })[0].ID)) {
                var l = e.Objects.Model[p.toString()], c = {modelName: THREE.PropertyBinding.sanitizeNodeName(l.attrName), ID: l.id, initialPosition: [0, 0, 0], initialRotation: [0, 0, 0], initialScale: [1, 1, 1]};
                n.traverse(function (e) {
                  e.ID === l.id && (c.transform = e.matrix, e.userData.transformData && (c.eulerOrder = e.userData.transformData.eulerOrder));
                }), c.transform || (c.transform = new THREE.Matrix4), "PreRotation" in l && (c.preRotation = l.PreRotation.value), "PostRotation" in l && (c.postRotation = l.PostRotation.value), a[o] = c;
              }
              a[o] && (a[o][s.attr] = s);
            } else if (undefined !== s.curves.morph) {
              if (undefined === a[o]) {
                var h = t.get(r.ID).parents.filter(function (e) {
                  return undefined !== e.relationship;
                })[0].ID, u = t.get(h).parents[0].ID, d = t.get(u).parents[0].ID, p = t.get(d).parents[0].ID;
                l = e.Objects.Model[p], c = {modelName: THREE.PropertyBinding.sanitizeNodeName(l.attrName), morphName: e.Objects.Deformer[h].attrName};
                a[o] = c;
              }
              a[o][s.attr] = s;
            }
          }
        }), o.set(parseInt(s), a);
      }
      return o;
    }, parseAnimStacks: function (n) {
      var i = e.Objects.AnimationStack, r = {};
      for (var o in i) {
        var s = t.get(parseInt(o)).children;
        s.length > 1 && console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");
        var a = n.get(s[0].ID);
        r[o] = {name: i[o].attrName, layer: a};
      }
      return r;
    }, addClip: function (e) {
      var t = [], n = this;
      return e.layer.forEach(function (e) {
        t = t.concat(n.generateTracks(e));
      }), new THREE.AnimationClip(e.name, -1, t);
    }, generateTracks: function (e) {
      var t = [], n = new THREE.Vector3, i = new THREE.Quaternion, r = new THREE.Vector3;
      if (e.transform && e.transform.decompose(n, i, r), n = n.toArray(), i = (new THREE.Euler).setFromQuaternion(i, e.eulerOrder).toArray(), r = r.toArray(), undefined !== e.T && Object.keys(e.T.curves).length > 0) {
        var o = this.generateVectorTrack(e.modelName, e.T.curves, n, "position");
        undefined !== o && t.push(o);
      }
      if (undefined !== e.R && Object.keys(e.R.curves).length > 0) {
        var s = this.generateRotationTrack(e.modelName, e.R.curves, i, e.preRotation, e.postRotation, e.eulerOrder);
        undefined !== s && t.push(s);
      }
      if (undefined !== e.S && Object.keys(e.S.curves).length > 0) {
        var a = this.generateVectorTrack(e.modelName, e.S.curves, r, "scale");
        undefined !== a && t.push(a);
      }
      if (undefined !== e.DeformPercent) {
        var l = this.generateMorphTrack(e);
        undefined !== l && t.push(l);
      }
      return t;
    }, generateVectorTrack: function (e, t, n, i) {
      var r = this.getTimesForAllAxes(t), o = this.getKeyframeTrackValues(r, t, n);
      return new THREE.VectorKeyframeTrack(e + "." + i, r, o);
    }, generateRotationTrack: function (e, t, n, i, r, o) {
      undefined !== t.x && (this.interpolateRotations(t.x), t.x.values = t.x.values.map(THREE.Math.degToRad)), undefined !== t.y && (this.interpolateRotations(t.y), t.y.values = t.y.values.map(THREE.Math.degToRad)), undefined !== t.z && (this.interpolateRotations(t.z), t.z.values = t.z.values.map(THREE.Math.degToRad));
      var s = this.getTimesForAllAxes(t), a = this.getKeyframeTrackValues(s, t, n);
      undefined !== i && ((i = i.map(THREE.Math.degToRad)).push(o), i = (new THREE.Euler).fromArray(i), i = (new THREE.Quaternion).setFromEuler(i)), undefined !== r && ((r = r.map(THREE.Math.degToRad)).push(o), r = (new THREE.Euler).fromArray(r), r = (new THREE.Quaternion).setFromEuler(r).inverse());
      for (var l = new THREE.Quaternion, c = new THREE.Euler, h = [], u = 0; u < a.length; u += 3) c.set(a[u], a[u + 1], a[u + 2], o), l.setFromEuler(c), undefined !== i && l.premultiply(i), undefined !== r && l.multiply(r), l.toArray(h, u / 3 * 4);
      return new THREE.QuaternionKeyframeTrack(e + ".quaternion", s, h);
    }, generateMorphTrack: function (e) {
      var t = e.DeformPercent.curves.morph, i = t.values.map(function (e) {
        return e / 100;
      }), r = n.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];
      return new THREE.NumberKeyframeTrack(e.modelName + ".morphTargetInfluences[" + r + "]", t.times, i);
    }, getTimesForAllAxes: function (e) {
      var t = [];
      return undefined !== e.x && (t = t.concat(e.x.times)), undefined !== e.y && (t = t.concat(e.y.times)), undefined !== e.z && (t = t.concat(e.z.times)), t = t.sort(function (e, t) {
        return e - t;
      }).filter(function (e, t, n) {
        return n.indexOf(e) == t;
      });
    }, getKeyframeTrackValues: function (e, t, n) {
      var i = n, r = [], o = -1, s = -1, a = -1;
      return e.forEach(function (e) {
        if (t.x && (o = t.x.times.indexOf(e)), t.y && (s = t.y.times.indexOf(e)), t.z && (a = t.z.times.indexOf(e)), -1 !== o) {
          var n = t.x.values[o];
          r.push(n), i[0] = n;
        } else r.push(i[0]);
        if (-1 !== s) {
          var l = t.y.values[s];
          r.push(l), i[1] = l;
        } else r.push(i[1]);
        if (-1 !== a) {
          var c = t.z.values[a];
          r.push(c), i[2] = c;
        } else r.push(i[2]);
      }), r;
    }, interpolateRotations: function (e) {
      for (var t = 1; t < e.values.length; t++) {
        var n = e.values[t - 1], i = e.values[t] - n, r = Math.abs(i);
        if (r >= 180) {
          for (var o = r / 180, s = i / o, a = n + s, l = e.times[t - 1], c = (e.times[t] - l) / o, h = l + c, u = [], d = []; h < e.times[t];) u.push(h), h += c, d.push(a), a += s;
          e.times = e.times.slice(0, t).concat(u).concat(e.times.slice(t)), e.values = e.values.slice(0, t).concat(d).concat(e.values.slice(t));
        }
      }
    }}, a.prototype = {constructor: a, getPrevNode: function () {
      return this.nodeStack[this.currentIndent - 2];
    }, getCurrentNode: function () {
      return this.nodeStack[this.currentIndent - 1];
    }, getCurrentProp: function () {
      return this.currentProp;
    }, pushStack: function (e) {
      this.nodeStack.push(e), this.currentIndent += 1;
    }, popStack: function () {
      this.nodeStack.pop(), this.currentIndent -= 1;
    }, setCurrentProp: function (e, t) {
      this.currentProp = e, this.currentPropName = t;
    }, parse: function (e) {
      this.currentIndent = 0, this.allNodes = new h, this.nodeStack = [], this.currentProp = [], this.currentPropName = "";
      var t = this, n = e.split(/[\r\n]+/);
      return n.forEach(function (e, i) {
        var r = e.match(/^[\s\t]*;/), o = e.match(/^[\s\t]*$/);
        if (!r && !o) {
          var s = e.match("^\\t{" + t.currentIndent + "}(\\w+):(.*){", ""), a = e.match("^\\t{" + t.currentIndent + "}(\\w+):[\\s\\t\\r\\n](.*)"), l = e.match("^\\t{" + (t.currentIndent - 1) + "}}");
          s ? t.parseNodeBegin(e, s) : a ? t.parseNodeProperty(e, a, n[++i]) : l ? t.popStack() : e.match(/^[^\s\t}]/) && t.parseNodePropertyContinued(e);
        }
      }), this.allNodes;
    }, parseNodeBegin: function (e, t) {
      var n = t[1].trim().replace(/^"/, "").replace(/"$/, ""), i = t[2].split(",").map(function (e) {
        return e.trim().replace(/^"/, "").replace(/"$/, "");
      }), r = {name: n}, o = this.parseNodeAttr(i), s = this.getCurrentNode();
      0 === this.currentIndent ? this.allNodes.add(n, r) : n in s ? ("PoseNode" === n ? s.PoseNode.push(r) : undefined !== s[n].id && (s[n] = {}, s[n][s[n].id] = s[n]), "" !== o.id && (s[n][o.id] = r)) : "number" == typeof o.id ? (s[n] = {}, s[n][o.id] = r) : "Properties70" !== n && (s[n] = "PoseNode" === n ? [r] : r), "number" == typeof o.id && (r.id = o.id), "" !== o.name && (r.attrName = o.name), "" !== o.type && (r.attrType = o.type), this.pushStack(r);
    }, parseNodeAttr: function (e) {
      var t = e[0];
      "" !== e[0] && (t = parseInt(e[0]), isNaN(t) && (t = e[0]));
      var n = "", i = "";
      return e.length > 1 && (n = e[1].replace(/^(\w+)::/, ""), i = e[2]), {id: t, name: n, type: i};
    }, parseNodeProperty: function (e, t, n) {
      var i = t[1].replace(/^"/, "").replace(/"$/, "").trim(), r = t[2].replace(/^"/, "").replace(/"$/, "").trim();
      "Content" === i && "," === r && (r = n.replace(/"/g, "").replace(/,$/, "").trim());
      var o = this.getCurrentNode();
      if ("Properties70" !== o.name) {
        if ("C" === i) {
          var s = r.split(",").slice(1), a = parseInt(s[0]), l = parseInt(s[1]), c = r.split(",").slice(3);
          i = "connections", function (e, t) {
            for (var n = 0, i = e.length, r = t.length; n < r; n++, i++) e[i] = t[n];
          }(r = [a, l], c = c.map(function (e) {
            return e.trim().replace(/^"/, "");
          })), undefined === o[i] && (o[i] = []);
        }
        "Node" === i && (o.id = r), i in o && Array.isArray(o[i]) ? o[i].push(r) : "a" !== i ? o[i] = r : o.a = r, this.setCurrentProp(o, i), "a" === i && "," !== r.slice(-1) && (o.a = _(r));
      } else this.parseNodeSpecialProperty(e, i, r);
    }, parseNodePropertyContinued: function (e) {
      var t = this.getCurrentNode();
      t.a += e, "," !== e.slice(-1) && (t.a = _(t.a));
    }, parseNodeSpecialProperty: function (e, t, n) {
      var i = n.split('",').map(function (e) {
        return e.trim().replace(/^\"/, "").replace(/\s/, "_");
      }), r = i[0], o = i[1], s = i[2], a = i[3], l = i[4];
      switch (o) {
        case "int":
        case "enum":
        case "bool":
        case "ULongLong":
        case "double":
        case "Number":
        case "FieldOfView":
          l = parseFloat(l);
          break;
        case "Color":
        case "ColorRGB":
        case "Vector3D":
        case "Lcl_Translation":
        case "Lcl_Rotation":
        case "Lcl_Scaling":
          l = _(l);
      }
      this.getPrevNode()[r] = {type: o, type2: s, flag: a, value: l}, this.setCurrentProp(this.getPrevNode(), r);
    }}, l.prototype = {constructor: l, parse: function (e) {
      var t = new c(e);
      t.skip(23);
      var n = t.getUint32();
      console.log("THREE.FBXLoader: FBX binary version: " + n);
      for (var i = new h; !this.endOfContent(t);) {
        var r = this.parseNode(t, n);
        null !== r && i.add(r.name, r);
      }
      return i;
    }, endOfContent: function (e) {
      return e.size() % 16 == 0 ? (e.getOffset() + 160 + 16 & -16) >= e.size() : e.getOffset() + 160 + 16 >= e.size();
    }, parseNode: function (e, t) {
      var n = {}, i = t >= 7500 ? e.getUint64() : e.getUint32(), r = t >= 7500 ? e.getUint64() : e.getUint32(), o = (t >= 7500 ? e.getUint64() : e.getUint32(), e.getUint8()), s = e.getString(o);
      if (0 === i) return null;
      for (var a = [], l = 0; l < r; l++) a.push(this.parseProperty(e));
      var c = a.length > 0 ? a[0] : "", h = a.length > 1 ? a[1] : "", u = a.length > 2 ? a[2] : "";
      for (n.singleProperty = 1 === r && e.getOffset() === i; i > e.getOffset();) {
        var d = this.parseNode(e, t);
        null !== d && this.parseSubNode(s, n, d);
      }
      return n.propertyList = a, "number" == typeof c && (n.id = c), "" !== h && (n.attrName = h), "" !== u && (n.attrType = u), "" !== s && (n.name = s), n;
    }, parseSubNode: function (e, t, n) {
      if (true === n.singleProperty) {
        var i = n.propertyList[0];
        Array.isArray(i) ? (t[n.name] = n, n.a = i) : t[n.name] = i;
      } else if ("Connections" === e && "C" === n.name) {
        var r = [];
        n.propertyList.forEach(function (e, t) {
          0 !== t && r.push(e);
        }), undefined === t.connections && (t.connections = []), t.connections.push(r);
      } else if ("Properties70" === n.name) {
        Object.keys(n).forEach(function (e) {
          t[e] = n[e];
        });
      } else if ("Properties70" === e && "P" === n.name) {
        var o, s = n.propertyList[0], a = n.propertyList[1], l = n.propertyList[2], c = n.propertyList[3];
        0 === s.indexOf("Lcl ") && (s = s.replace("Lcl ", "Lcl_")), 0 === a.indexOf("Lcl ") && (a = a.replace("Lcl ", "Lcl_")), o = "Color" === a || "ColorRGB" === a || "Vector" === a || "Vector3D" === a || 0 === a.indexOf("Lcl_") ? [n.propertyList[4], n.propertyList[5], n.propertyList[6]] : n.propertyList[4], t[s] = {type: a, type2: l, flag: c, value: o};
      } else undefined === t[n.name] ? "number" == typeof n.id ? (t[n.name] = {}, t[n.name][n.id] = n) : t[n.name] = n : "PoseNode" === n.name ? (Array.isArray(t[n.name]) || (t[n.name] = [t[n.name]]), t[n.name].push(n)) : undefined === t[n.name][n.id] && (t[n.name][n.id] = n);
    }, parseProperty: function (e) {
      var t = e.getString(1);
      switch (t) {
        case "C":
          return e.getBoolean();
        case "D":
          return e.getFloat64();
        case "F":
          return e.getFloat32();
        case "I":
          return e.getInt32();
        case "L":
          return e.getInt64();
        case "R":
          var n = e.getUint32();
          return e.getArrayBuffer(n);
        case "S":
          n = e.getUint32();
          return e.getString(n);
        case "Y":
          return e.getInt16();
        case "b":
        case "c":
        case "d":
        case "f":
        case "i":
        case "l":
          var i = e.getUint32(), r = e.getUint32(), o = e.getUint32();
          if (0 === r) switch (t) {
            case "b":
            case "c":
              return e.getBooleanArray(i);
            case "d":
              return e.getFloat64Array(i);
            case "f":
              return e.getFloat32Array(i);
            case "i":
              return e.getInt32Array(i);
            case "l":
              return e.getInt64Array(i);
          }
          "undefined" == typeof Zlib && console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");
          var s = new c(new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(o))).decompress().buffer);
          switch (t) {
            case "b":
            case "c":
              return s.getBooleanArray(i);
            case "d":
              return s.getFloat64Array(i);
            case "f":
              return s.getFloat32Array(i);
            case "i":
              return s.getInt32Array(i);
            case "l":
              return s.getInt64Array(i);
          }
        default:
          throw new Error("THREE.FBXLoader: Unknown property type " + t);
      }
    }}, c.prototype = {constructor: c, getOffset: function () {
      return this.offset;
    }, size: function () {
      return this.dv.buffer.byteLength;
    }, skip: function (e) {
      this.offset += e;
    }, getBoolean: function () {
      return 1 == (1 & this.getUint8());
    }, getBooleanArray: function (e) {
      for (var t = [], n = 0; n < e; n++) t.push(this.getBoolean());
      return t;
    }, getUint8: function () {
      var e = this.dv.getUint8(this.offset);
      return this.offset += 1, e;
    }, getInt16: function () {
      var e = this.dv.getInt16(this.offset, this.littleEndian);
      return this.offset += 2, e;
    }, getInt32: function () {
      var e = this.dv.getInt32(this.offset, this.littleEndian);
      return this.offset += 4, e;
    }, getInt32Array: function (e) {
      for (var t = [], n = 0; n < e; n++) t.push(this.getInt32());
      return t;
    }, getUint32: function () {
      var e = this.dv.getUint32(this.offset, this.littleEndian);
      return this.offset += 4, e;
    }, getInt64: function () {
      var e, t;
      return this.littleEndian ? (e = this.getUint32(), t = this.getUint32()) : (t = this.getUint32(), e = this.getUint32()), 2147483648 & t ? (t = 4294967295 & ~t, 4294967295 === (e = 4294967295 & ~e) && (t = t + 1 & 4294967295), -(4294967296 * t + (e = e + 1 & 4294967295))) : 4294967296 * t + e;
    }, getInt64Array: function (e) {
      for (var t = [], n = 0; n < e; n++) t.push(this.getInt64());
      return t;
    }, getUint64: function () {
      var e, t;
      return this.littleEndian ? (e = this.getUint32(), t = this.getUint32()) : (t = this.getUint32(), e = this.getUint32()), 4294967296 * t + e;
    }, getFloat32: function () {
      var e = this.dv.getFloat32(this.offset, this.littleEndian);
      return this.offset += 4, e;
    }, getFloat32Array: function (e) {
      for (var t = [], n = 0; n < e; n++) t.push(this.getFloat32());
      return t;
    }, getFloat64: function () {
      var e = this.dv.getFloat64(this.offset, this.littleEndian);
      return this.offset += 8, e;
    }, getFloat64Array: function (e) {
      for (var t = [], n = 0; n < e; n++) t.push(this.getFloat64());
      return t;
    }, getArrayBuffer: function (e) {
      var t = this.dv.buffer.slice(this.offset, this.offset + e);
      return this.offset += e, t;
    }, getString: function (e) {
      for (var t = [], n = 0; n < e; n++) t[n] = this.getUint8();
      var i = t.indexOf(0);
      return i >= 0 && (t = t.slice(0, i)), THREE.LoaderUtils.decodeText(new Uint8Array(t));
    }}, h.prototype = {constructor: h, add: function (e, t) {
      this[e] = t;
    }};
    var p = [];
    function m(e, t, n, i) {
      var r;
      switch (i.mappingType) {
        case "ByPolygonVertex":
          r = e;
          break;
        case "ByPolygon":
          r = t;
          break;
        case "ByVertice":
          r = n;
          break;
        case "AllSame":
          r = i.indices[0];
          break;
        default:
          console.warn("THREE.FBXLoader: unknown attribute mapping type " + i.mappingType);
      }
      "IndexToDirect" === i.referenceType && (r = i.indices[r]);
      var o = r * i.dataSize, s = o + i.dataSize;
      return function (e, t, n, i) {
        for (var r = n, o = 0; r < i; r++, o++) e[o] = t[r];
        return e;
      }(p, i.buffer, o, s);
    }
    var f = new THREE.Euler, g = new THREE.Vector3;
    function v(e) {
      var t, n = new THREE.Matrix4, i = new THREE.Matrix4, r = new THREE.Matrix4, o = new THREE.Matrix4, s = new THREE.Matrix4, a = new THREE.Matrix4, l = new THREE.Matrix4, c = new THREE.Matrix4, h = new THREE.Matrix4, u = new THREE.Matrix4, d = new THREE.Matrix4, p = e.inheritType ? e.inheritType : 0;
      (e.translation && n.setPosition(g.fromArray(e.translation)), e.preRotation) && ((t = e.preRotation.map(THREE.Math.degToRad)).push(e.eulerOrder), i.makeRotationFromEuler(f.fromArray(t)));
      e.rotation && ((t = e.rotation.map(THREE.Math.degToRad)).push(e.eulerOrder), r.makeRotationFromEuler(f.fromArray(t)));
      e.postRotation && ((t = e.postRotation.map(THREE.Math.degToRad)).push(e.eulerOrder), o.makeRotationFromEuler(f.fromArray(t)));
      e.scale && s.scale(g.fromArray(e.scale)), e.scalingOffset && l.setPosition(g.fromArray(e.scalingOffset)), e.scalingPivot && a.setPosition(g.fromArray(e.scalingPivot)), e.rotationOffset && c.setPosition(g.fromArray(e.rotationOffset)), e.rotationPivot && h.setPosition(g.fromArray(e.rotationPivot)), e.parentMatrixWorld && (u = e.parentMatrixWorld);
      var m = i.multiply(r).multiply(o), v = new THREE.Matrix4;
      u.extractRotation(v);
      var y, _, x, b, w = new THREE.Matrix4;
      if (w.copyPosition(u), x = w.getInverse(w).multiply(u), _ = v.getInverse(v).multiply(x), y = s, 0 === p) b = v.multiply(m).multiply(_).multiply(y); else if (1 === p) b = v.multiply(_).multiply(m).multiply(y); else {
        var S = (new THREE.Matrix4).copy(s), E = _.multiply(S.getInverse(S));
        b = v.multiply(m).multiply(E).multiply(y);
      }
      var q = n.multiply(c).multiply(h).multiply(i).multiply(r).multiply(o).multiply(h.getInverse(h)).multiply(l).multiply(a).multiply(s).multiply(a.getInverse(a)), T = (new THREE.Matrix4).copyPosition(q), A = u.multiply(T);
      return d.copyPosition(A), q = d.multiply(b);
    }
    function y(e) {
      var t = ["ZYX", "YZX", "XZY", "ZXY", "YXZ", "XYZ"];
      return 6 === (e = e || 0) ? (console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."), "ZYX") : t[e];
    }
    function _(e) {
      return e.split(",").map(function (e) {
        return parseFloat(e);
      });
    }
    function x(e, t, n) {
      return undefined === t && (t = 0), undefined === n && (n = e.byteLength), THREE.LoaderUtils.decodeText(new Uint8Array(e, t, n));
    }
    function b(e, t, n) {
      return e.slice(0, t).concat(n).concat(e.slice(t));
    }
    return i;
  }();
}, function (e, t) {
  THREE.RenderableObject = function () {
    this.id = 0, this.object = null, this.z = 0, this.renderOrder = 0;
  }, THREE.RenderableFace = function () {
    this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.v3 = new THREE.RenderableVertex, this.normalModel = new THREE.Vector3, this.vertexNormalsModel = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3], this.vertexNormalsLength = 0, this.color = new THREE.Color, this.material = null, this.uvs = [new THREE.Vector2, new THREE.Vector2, new THREE.Vector2], this.z = 0, this.renderOrder = 0;
  }, THREE.RenderableVertex = function () {
    this.position = new THREE.Vector3, this.positionWorld = new THREE.Vector3, this.positionScreen = new THREE.Vector4, this.visible = true;
  }, THREE.RenderableVertex.prototype.copy = function (e) {
    this.positionWorld.copy(e.positionWorld), this.positionScreen.copy(e.positionScreen);
  }, THREE.RenderableLine = function () {
    this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.vertexColors = [new THREE.Color, new THREE.Color], this.material = null, this.z = 0, this.renderOrder = 0;
  }, THREE.RenderableSprite = function () {
    this.id = 0, this.object = null, this.x = 0, this.y = 0, this.z = 0, this.rotation = 0, this.scale = new THREE.Vector2, this.material = null, this.renderOrder = 0;
  }, THREE.Projector = function () {
    var e, t, n, i, r, o, s, a, l, c, h, u = [], d = 0, p = [], m = 0, f = [], g = 0, v = [], y = 0, _ = [], x = 0, b = {objects: [], lights: [], elements: []}, w = new THREE.Vector3, S = new THREE.Vector4, E = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), q = new THREE.Box3, T = new Array(3), A = new THREE.Matrix4, M = new THREE.Matrix4, C = new THREE.Matrix4, k = new THREE.Matrix3, R = new THREE.Frustum, L = new THREE.Vector4, P = new THREE.Vector4;
    this.projectVector = function (e, t) {
      console.warn("THREE.Projector: .projectVector() is now vector.project()."), e.project(t);
    }, this.unprojectVector = function (e, t) {
      console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), e.unproject(t);
    }, this.pickingRay = function () {
      console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().");
    };
    var D = new function () {
      var e = [], t = [], i = [], o = null, a = new THREE.Matrix3;
      function l(e) {
        var t = e.position, n = e.positionWorld, i = e.positionScreen;
        n.copy(t).applyMatrix4(h), i.copy(n).applyMatrix4(M);
        var r = 1 / i.w;
        i.x *= r, i.y *= r, i.z *= r, e.visible = i.x >= -1 && i.x <= 1 && i.y >= -1 && i.y <= 1 && i.z >= -1 && i.z <= 1;
      }
      function c(e, t, n) {
        return true === e.visible || true === t.visible || true === n.visible || (T[0] = e.positionScreen, T[1] = t.positionScreen, T[2] = n.positionScreen, E.intersectsBox(q.setFromPoints(T)));
      }
      function u(e, t, n) {
        return (n.positionScreen.x - e.positionScreen.x) * (t.positionScreen.y - e.positionScreen.y) - (n.positionScreen.y - e.positionScreen.y) * (t.positionScreen.x - e.positionScreen.x) < 0;
      }
      return {setObject: function (n) {
        (o = n).material, a.getNormalMatrix(o.matrixWorld), e.length = 0, t.length = 0, i.length = 0;
      }, projectVertex: l, checkTriangleVisibility: c, checkBackfaceCulling: u, pushVertex: function (e, t, i) {
        (n = B()).position.set(e, t, i), l(n);
      }, pushNormal: function (t, n, i) {
        e.push(t, n, i);
      }, pushColor: function (e, n, i) {
        t.push(e, n, i);
      }, pushUv: function (e, t) {
        i.push(e, t);
      }, pushLine: function (e, n) {
        var i = p[e], r = p[n];
        i.positionScreen.copy(i.position).applyMatrix4(C), r.positionScreen.copy(r.position).applyMatrix4(C), true === U(i.positionScreen, r.positionScreen) && (i.positionScreen.multiplyScalar(1 / i.positionScreen.w), r.positionScreen.multiplyScalar(1 / r.positionScreen.w), (s = z()).id = o.id, s.v1.copy(i), s.v2.copy(r), s.z = Math.max(i.positionScreen.z, r.positionScreen.z), s.renderOrder = o.renderOrder, s.material = o.material, o.material.vertexColors === THREE.VertexColors && (s.vertexColors[0].fromArray(t, 3 * e), s.vertexColors[1].fromArray(t, 3 * n)), b.elements.push(s));
      }, pushTriangle: function (n, s, l, h) {
        var d = p[n], m = p[s], f = p[l];
        if (false !== (true === d.visible || true === m.visible || true === f.visible || (T[0] = d.positionScreen, T[1] = m.positionScreen, T[2] = f.positionScreen, E.intersectsBox(q.setFromPoints(T)))) && (h.side === THREE.DoubleSide || true === (f.positionScreen.x - d.positionScreen.x) * (m.positionScreen.y - d.positionScreen.y) - (f.positionScreen.y - d.positionScreen.y) * (m.positionScreen.x - d.positionScreen.x) < 0)) {
          (r = F()).id = o.id, r.v1.copy(d), r.v2.copy(m), r.v3.copy(f), r.z = (d.positionScreen.z + m.positionScreen.z + f.positionScreen.z) / 3, r.renderOrder = o.renderOrder, w.subVectors(f.position, m.position), S.subVectors(d.position, m.position), w.cross(S), r.normalModel.copy(w), r.normalModel.applyMatrix3(a).normalize();
          for (var g = 0; g < 3; g++) {
            var v = r.vertexNormalsModel[g];
            v.fromArray(e, 3 * arguments[g]), v.applyMatrix3(a).normalize(), r.uvs[g].fromArray(i, 2 * arguments[g]);
          }
          r.vertexNormalsLength = 3, r.material = h, h.vertexColors !== THREE.FaceColors && h.vertexColors !== THREE.VertexColors || r.color.fromArray(t, 3 * n), b.elements.push(r);
        }
      }};
    };
    function O(n) {
      (e = function () {
        if (t === d) {
          var e = new THREE.RenderableObject;
          return u.push(e), d++, t++, e;
        }
        return u[t++];
      }()).id = n.id, e.object = n, w.setFromMatrixPosition(n.matrixWorld), w.applyMatrix4(M), e.z = w.z, e.renderOrder = n.renderOrder, b.objects.push(e);
    }
    function I(e, t, n) {
      var i = 1 / e.w;
      e.z *= i, e.z >= -1 && e.z <= 1 && ((l = function () {
        if (c === x) {
          var e = new THREE.RenderableSprite;
          return _.push(e), x++, c++, e;
        }
        return _[c++];
      }()).id = t.id, l.x = e.x * i, l.y = e.y * i, l.z = e.z, l.renderOrder = t.renderOrder, l.object = t, l.rotation = t.rotation, l.scale.x = t.scale.x * Math.abs(l.x - (e.x + n.projectionMatrix.elements[0]) / (e.w + n.projectionMatrix.elements[12])), l.scale.y = t.scale.y * Math.abs(l.y - (e.y + n.projectionMatrix.elements[5]) / (e.w + n.projectionMatrix.elements[13])), l.material = t.material, b.elements.push(l));
    }
    function B() {
      if (i === m) {
        var e = new THREE.RenderableVertex;
        return p.push(e), m++, i++, e;
      }
      return p[i++];
    }
    function F() {
      if (o === g) {
        var e = new THREE.RenderableFace;
        return f.push(e), g++, o++, e;
      }
      return f[o++];
    }
    function z() {
      if (a === y) {
        var e = new THREE.RenderableLine;
        return v.push(e), y++, a++, e;
      }
      return v[a++];
    }
    function N(e, t) {
      return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id !== t.id ? e.id - t.id : 0;
    }
    function U(e, t) {
      var n = 0, i = 1, r = e.z + e.w, o = t.z + t.w, s = -e.z + e.w, a = -t.z + t.w;
      return r >= 0 && o >= 0 && s >= 0 && a >= 0 || !(r < 0 && o < 0 || s < 0 && a < 0) && (r < 0 ? n = Math.max(n, r / (r - o)) : o < 0 && (i = Math.min(i, r / (r - o))), s < 0 ? n = Math.max(n, s / (s - a)) : a < 0 && (i = Math.min(i, s / (s - a))), !(i < n) && (e.lerp(t, n), t.lerp(e, 1 - i), true));
    }
    this.projectScene = function (e, n, l, u) {
      o = 0, a = 0, c = 0, b.elements.length = 0, true === e.autoUpdate && e.updateMatrixWorld(), null === n.parent && n.updateMatrixWorld(), A.copy(n.matrixWorldInverse), M.multiplyMatrices(n.projectionMatrix, A), R.setFromMatrix(M), t = 0, b.objects.length = 0, b.lights.length = 0, function e(t) {
        if (false !== t.visible) {
          if (t instanceof THREE.Light) b.lights.push(t); else if (t instanceof THREE.Mesh || t instanceof THREE.Line || t instanceof THREE.Points) {
            if (false === t.material.visible) return;
            if (true === t.frustumCulled && false === R.intersectsObject(t)) return;
            O(t);
          } else if (t instanceof THREE.Sprite) {
            if (false === t.material.visible) return;
            if (true === t.frustumCulled && false === R.intersectsSprite(t)) return;
            O(t);
          }
          for (var n = t.children, i = 0, r = n.length; i < r; i++) e(n[i]);
        }
      }(e), true === l && b.objects.sort(N);
      for (var d = b.objects, m = 0, f = d.length; m < f; m++) {
        var g = d[m].object, v = g.geometry;
        if (D.setObject(g), h = g.matrixWorld, i = 0, g instanceof THREE.Mesh) {
          if (v instanceof THREE.BufferGeometry) {
            var y = g.material, _ = Array.isArray(y), x = v.attributes, E = v.groups;
            if (undefined === x.position) continue;
            for (var q = 0, T = (qe = x.position.array).length; q < T; q += 3) {
              var V = qe[q], G = qe[q + 1], H = qe[q + 2];
              if (true === y.morphTargets) for (var j = v.morphAttributes.position, $ = g.morphTargetInfluences, W = 0, X = j.length; W < X; W++) {
                if (0 !== (se = $[W])) V += ((ae = j[W]).getX(q / 3) - qe[q]) * se, G += (ae.getY(q / 3) - qe[q + 1]) * se, H += (ae.getZ(q / 3) - qe[q + 2]) * se;
              }
              D.pushVertex(V, G, H);
            }
            if (undefined !== x.normal) {
              var Y = x.normal.array;
              for (q = 0, T = Y.length; q < T; q += 3) D.pushNormal(Y[q], Y[q + 1], Y[q + 2]);
            }
            if (undefined !== x.color) for (q = 0, T = (Se = x.color.array).length; q < T; q += 3) D.pushColor(Se[q], Se[q + 1], Se[q + 2]);
            if (undefined !== x.uv) {
              var J = x.uv.array;
              for (q = 0, T = J.length; q < T; q += 2) D.pushUv(J[q], J[q + 1]);
            }
            if (null !== v.index) {
              var K = v.index.array;
              if (E.length > 0) for (var Z = 0; Z < E.length; Z++) {
                var Q = E[Z];
                if (undefined !== (y = true === _ ? g.material[Q.materialIndex] : g.material)) for (q = Q.start, T = Q.start + Q.count; q < T; q += 3) D.pushTriangle(K[q], K[q + 1], K[q + 2], y);
              } else for (q = 0, T = K.length; q < T; q += 3) D.pushTriangle(K[q], K[q + 1], K[q + 2], y);
            } else if (E.length > 0) for (Z = 0; Z < E.length; Z++) {
              Q = E[Z];
              if (undefined !== (y = true === _ ? g.material[Q.materialIndex] : g.material)) for (q = Q.start, T = Q.start + Q.count; q < T; q += 3) D.pushTriangle(q, q + 1, q + 2, y);
            } else for (q = 0, T = qe.length / 3; q < T; q += 3) D.pushTriangle(q, q + 1, q + 2, y);
          } else if (v instanceof THREE.Geometry) {
            var ee = v.vertices, te = v.faces, ne = v.faceVertexUvs[0];
            k.getNormalMatrix(h);
            y = g.material, _ = Array.isArray(y);
            for (var ie = 0, re = ee.length; ie < re; ie++) {
              var oe = ee[ie];
              if (w.copy(oe), true === y.morphTargets) for (j = v.morphTargets, $ = g.morphTargetInfluences, W = 0, X = j.length; W < X; W++) {
                var se;
                if (0 !== (se = $[W])) {
                  var ae, le = (ae = j[W]).vertices[ie];
                  w.x += (le.x - oe.x) * se, w.y += (le.y - oe.y) * se, w.z += (le.z - oe.z) * se;
                }
              }
              D.pushVertex(w.x, w.y, w.z);
            }
            for (var ce = 0, he = te.length; ce < he; ce++) {
              var ue = te[ce];
              if (undefined !== (y = true === _ ? g.material[ue.materialIndex] : g.material)) {
                var de = y.side, pe = p[ue.a], me = p[ue.b], fe = p[ue.c];
                if (false !== D.checkTriangleVisibility(pe, me, fe)) {
                  var ge = D.checkBackfaceCulling(pe, me, fe);
                  if (de !== THREE.DoubleSide) {
                    if (de === THREE.FrontSide && false === ge) continue;
                    if (de === THREE.BackSide && true === ge) continue;
                  }
                  (r = F()).id = g.id, r.v1.copy(pe), r.v2.copy(me), r.v3.copy(fe), r.normalModel.copy(ue.normal), false !== ge || de !== THREE.BackSide && de !== THREE.DoubleSide || r.normalModel.negate(), r.normalModel.applyMatrix3(k).normalize();
                  for (var ve = ue.vertexNormals, ye = 0, _e = Math.min(ve.length, 3); ye < _e; ye++) {
                    var xe = r.vertexNormalsModel[ye];
                    xe.copy(ve[ye]), false !== ge || de !== THREE.BackSide && de !== THREE.DoubleSide || xe.negate(), xe.applyMatrix3(k).normalize();
                  }
                  r.vertexNormalsLength = ve.length;
                  var be = ne[ce];
                  if (undefined !== be) for (var we = 0; we < 3; we++) r.uvs[we].copy(be[we]);
                  r.color = ue.color, r.material = y, r.z = (pe.positionScreen.z + me.positionScreen.z + fe.positionScreen.z) / 3, r.renderOrder = g.renderOrder, b.elements.push(r);
                }
              }
            }
          }
        } else if (g instanceof THREE.Line) {
          if (C.multiplyMatrices(M, h), v instanceof THREE.BufferGeometry) {
            if (undefined !== (x = v.attributes).position) {
              for (q = 0, T = (qe = x.position.array).length; q < T; q += 3) D.pushVertex(qe[q], qe[q + 1], qe[q + 2]);
              if (undefined !== x.color) {
                var Se;
                for (q = 0, T = (Se = x.color.array).length; q < T; q += 3) D.pushColor(Se[q], Se[q + 1], Se[q + 2]);
              }
              if (null !== v.index) for (q = 0, T = (K = v.index.array).length; q < T; q += 2) D.pushLine(K[q], K[q + 1]); else {
                var Ee = g instanceof THREE.LineSegments ? 2 : 1;
                for (q = 0, T = qe.length / 3 - 1; q < T; q += Ee) D.pushLine(q, q + 1);
              }
            }
          } else if (v instanceof THREE.Geometry) {
            if (0 === (ee = g.geometry.vertices).length) continue;
            (pe = B()).positionScreen.copy(ee[0]).applyMatrix4(C);
            for (Ee = g instanceof THREE.LineSegments ? 2 : 1, ie = 1, re = ee.length; ie < re; ie++) (pe = B()).positionScreen.copy(ee[ie]).applyMatrix4(C), (ie + 1) % Ee > 0 || (me = p[i - 2], L.copy(pe.positionScreen), P.copy(me.positionScreen), true === U(L, P) && (L.multiplyScalar(1 / L.w), P.multiplyScalar(1 / P.w), (s = z()).id = g.id, s.v1.positionScreen.copy(L), s.v2.positionScreen.copy(P), s.z = Math.max(L.z, P.z), s.renderOrder = g.renderOrder, s.material = g.material, g.material.vertexColors === THREE.VertexColors && (s.vertexColors[0].copy(g.geometry.colors[ie]), s.vertexColors[1].copy(g.geometry.colors[ie - 1])), b.elements.push(s)));
          }
        } else if (g instanceof THREE.Points) {
          if (C.multiplyMatrices(M, h), v instanceof THREE.Geometry) for (ie = 0, re = (ee = g.geometry.vertices).length; ie < re; ie++) {
            oe = ee[ie];
            S.set(oe.x, oe.y, oe.z, 1), S.applyMatrix4(C), I(S, g, n);
          } else if (v instanceof THREE.BufferGeometry) {
            if (undefined !== (x = v.attributes).position) {
              var qe;
              for (q = 0, T = (qe = x.position.array).length; q < T; q += 3) S.set(qe[q], qe[q + 1], qe[q + 2], 1), S.applyMatrix4(C), I(S, g, n);
            }
          }
        } else g instanceof THREE.Sprite && (g.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, g.matrixWorld), S.set(h.elements[12], h.elements[13], h.elements[14], 1), S.applyMatrix4(M), I(S, g, n));
      }
      return true === u && b.elements.sort(N), b;
    };
  };
}, function (e, t) {
  THREE.TransformControls = function (e, t) {
    THREE.Object3D.call(this), t = undefined !== t ? t : document, this.visible = false;
    var n = new THREE.TransformControlsGizmo;
    this.add(n);
    var i = new THREE.TransformControlsPlane;
    this.add(i);
    var r = this;
    z("camera", e), z("object", undefined), z("enabled", true), z("axis", null), z("mode", "translate"), z("translationSnap", null), z("rotationSnap", null), z("space", "world"), z("size", 1), z("dragging", false), z("showX", true), z("showY", true), z("showZ", true);
    var o = {type: "change"}, s = {type: "mouseDown"}, a = {type: "mouseUp", mode: r.mode}, l = {type: "objectChange"}, c = new THREE.Raycaster, h = new THREE.Vector3, u = new THREE.Vector3, d = new THREE.Quaternion, p = {X: new THREE.Vector3(1, 0, 0), Y: new THREE.Vector3(0, 1, 0), Z: new THREE.Vector3(0, 0, 1)}, m = new THREE.Vector3, f = new THREE.Vector3, g = new THREE.Vector3, v = new THREE.Vector3, y = new THREE.Vector3, _ = new THREE.Vector3, x = 0, b = new THREE.Vector3, w = new THREE.Quaternion, S = new THREE.Vector3, E = new THREE.Vector3, q = new THREE.Quaternion, T = new THREE.Quaternion, A = new THREE.Vector3, M = new THREE.Vector3, C = new THREE.Quaternion, k = new THREE.Vector3, R = new THREE.Vector3, L = new THREE.Quaternion, P = new THREE.Quaternion, D = new THREE.Vector3, O = new THREE.Vector3, I = new THREE.Vector3, B = new THREE.Quaternion, F = new THREE.Vector3;
    function z(e, t) {
      var s = t;
      Object.defineProperty(r, e, {get: function () {
        return undefined !== s ? s : t;
      }, set: function (t) {
        s !== t && (s = t, i[e] = t, n[e] = t, r.dispatchEvent({type: e + "-changed", value: t}), r.dispatchEvent(o));
      }}), r[e] = t, i[e] = t, n[e] = t;
    }
    function N(e) {
      var n = e.changedTouches ? e.changedTouches[0] : e, i = t.getBoundingClientRect();
      return {x: (n.clientX - i.left) / i.width * 2 - 1, y: -(n.clientY - i.top) / i.height * 2 + 1, button: e.button};
    }
    function U(e) {
      r.enabled && r.pointerHover(N(e));
    }
    function V(e) {
      r.enabled && (document.addEventListener("mousemove", G, false), r.pointerHover(N(e)), r.pointerDown(N(e)));
    }
    function G(e) {
      r.enabled && r.pointerMove(N(e));
    }
    function H(e) {
      r.enabled && (document.removeEventListener("mousemove", G, false), r.pointerUp(N(e)));
    }
    z("worldPosition", R), z("worldPositionStart", M), z("worldQuaternion", L), z("worldQuaternionStart", C), z("cameraPosition", b), z("cameraQuaternion", w), z("pointStart", m), z("pointEnd", f), z("rotationAxis", v), z("rotationAngle", x), z("eye", O), t.addEventListener("mousedown", V, false), t.addEventListener("touchstart", V, false), t.addEventListener("mousemove", U, false), t.addEventListener("touchmove", U, false), t.addEventListener("touchmove", G, false), document.addEventListener("mouseup", H, false), t.addEventListener("touchend", H, false), t.addEventListener("touchcancel", H, false), t.addEventListener("touchleave", H, false), this.dispose = function () {
      t.removeEventListener("mousedown", V), t.removeEventListener("touchstart", V), t.removeEventListener("mousemove", U), document.removeEventListener("mousemove", G), t.removeEventListener("touchmove", U), t.removeEventListener("touchmove", G), document.removeEventListener("mouseup", H), t.removeEventListener("touchend", H), t.removeEventListener("touchcancel", H), t.removeEventListener("touchleave", H), this.traverse(function (e) {
        e.geometry && e.geometry.dispose(), e.material && e.material.dispose();
      });
    }, this.attach = function (e) {
      return this.object = e, this.visible = true, this;
    }, this.detach = function () {
      return this.object = undefined, this.visible = false, this.axis = null, this;
    }, this.updateMatrixWorld = function () {
      undefined !== this.object && (this.object.updateMatrixWorld(), this.object.parent.matrixWorld.decompose(E, q, A), this.object.matrixWorld.decompose(R, L, D), T.copy(q).inverse(), P.copy(L).inverse()), this.camera.updateMatrixWorld(), this.camera.matrixWorld.decompose(b, w, S), O.copy(b).sub(R).normalize(), THREE.Object3D.prototype.updateMatrixWorld.call(this);
    }, this.pointerHover = function (e) {
      if (undefined !== this.object && true !== this.dragging && (undefined === e.button || 0 === e.button)) {
        c.setFromCamera(e, this.camera);
        var t = c.intersectObjects(n.picker[this.mode].children, true)[0] || false;
        this.axis = t ? t.object.name : null;
      }
    }, this.pointerDown = function (e) {
      if (!(undefined === this.object || true === this.dragging || undefined !== e.button && 0 !== e.button || 0 !== e.button && undefined !== e.button || null === this.axis)) {
        c.setFromCamera(e, this.camera);
        var t = c.intersectObjects([i], true)[0] || false;
        if (t) {
          var n = this.space;
          if ("scale" === this.mode ? n = "local" : "E" !== this.axis && "XYZE" !== this.axis && "XYZ" !== this.axis || (n = "world"), "local" === n && "rotate" === this.mode) {
            var r = this.rotationSnap;
            "X" === this.axis && r && (this.object.rotation.x = Math.round(this.object.rotation.x / r) * r), "Y" === this.axis && r && (this.object.rotation.y = Math.round(this.object.rotation.y / r) * r), "Z" === this.axis && r && (this.object.rotation.z = Math.round(this.object.rotation.z / r) * r);
          }
          this.object.updateMatrixWorld(), this.object.parent.updateMatrixWorld(), I.copy(this.object.position), B.copy(this.object.quaternion), F.copy(this.object.scale), this.object.matrixWorld.decompose(M, C, k), m.copy(t.point).sub(M);
        }
        this.dragging = true, s.mode = this.mode, this.dispatchEvent(s);
      }
    }, this.pointerMove = function (e) {
      var t = this.axis, n = this.mode, r = this.object, s = this.space;
      if ("scale" === n ? s = "local" : "E" !== t && "XYZE" !== t && "XYZ" !== t || (s = "world"), undefined !== r && null !== t && false !== this.dragging && (undefined === e.button || 0 === e.button)) {
        c.setFromCamera(e, this.camera);
        var a = c.intersectObjects([i], true)[0] || false;
        if (false !== a) {
          if (f.copy(a.point).sub(M), "translate" === n) g.copy(f).sub(m), "local" === s && "XYZ" !== t && g.applyQuaternion(P), -1 === t.indexOf("X") && (g.x = 0), -1 === t.indexOf("Y") && (g.y = 0), -1 === t.indexOf("Z") && (g.z = 0), "local" === s && "XYZ" !== t ? g.applyQuaternion(B).divide(A) : g.applyQuaternion(T).divide(A), r.position.copy(g).add(I), this.translationSnap && ("local" === s && (r.position.applyQuaternion(d.copy(B).inverse()), -1 !== t.search("X") && (r.position.x = Math.round(r.position.x / this.translationSnap) * this.translationSnap), -1 !== t.search("Y") && (r.position.y = Math.round(r.position.y / this.translationSnap) * this.translationSnap), -1 !== t.search("Z") && (r.position.z = Math.round(r.position.z / this.translationSnap) * this.translationSnap), r.position.applyQuaternion(B)), "world" === s && (r.parent && r.position.add(h.setFromMatrixPosition(r.parent.matrixWorld)), -1 !== t.search("X") && (r.position.x = Math.round(r.position.x / this.translationSnap) * this.translationSnap), -1 !== t.search("Y") && (r.position.y = Math.round(r.position.y / this.translationSnap) * this.translationSnap), -1 !== t.search("Z") && (r.position.z = Math.round(r.position.z / this.translationSnap) * this.translationSnap), r.parent && r.position.sub(h.setFromMatrixPosition(r.parent.matrixWorld)))); else if ("scale" === n) {
            if (-1 !== t.search("XYZ")) {
              var b = f.length() / m.length();
              f.dot(m) < 0 && (b *= -1), u.set(b, b, b);
            } else h.copy(m), u.copy(f), h.applyQuaternion(P), u.applyQuaternion(P), u.divide(h), -1 === t.search("X") && (u.x = 1), -1 === t.search("Y") && (u.y = 1), -1 === t.search("Z") && (u.z = 1);
            r.scale.copy(F).multiply(u);
          } else if ("rotate" === n) {
            g.copy(f).sub(m);
            var w = 20 / R.distanceTo(h.setFromMatrixPosition(this.camera.matrixWorld));
            "E" === t ? (v.copy(O), x = f.angleTo(m), y.copy(m).normalize(), _.copy(f).normalize(), x *= _.cross(y).dot(O) < 0 ? 1 : -1) : "XYZE" === t ? (v.copy(g).cross(O).normalize(), x = g.dot(h.copy(v).cross(this.eye)) * w) : "X" !== t && "Y" !== t && "Z" !== t || (v.copy(p[t]), h.copy(p[t]), "local" === s && h.applyQuaternion(L), x = g.dot(h.cross(O).normalize()) * w), this.rotationSnap && (x = Math.round(x / this.rotationSnap) * this.rotationSnap), this.rotationAngle = x, "local" === s && "E" !== t && "XYZE" !== t ? (r.quaternion.copy(B), r.quaternion.multiply(d.setFromAxisAngle(v, x)).normalize()) : (v.applyQuaternion(T), r.quaternion.copy(d.setFromAxisAngle(v, x)), r.quaternion.multiply(B).normalize());
          }
          this.dispatchEvent(o), this.dispatchEvent(l);
        }
      }
    }, this.pointerUp = function (e) {
      undefined !== e.button && 0 !== e.button || (this.dragging && null !== this.axis && (a.mode = this.mode, this.dispatchEvent(a)), this.dragging = false, undefined === e.button && (this.axis = null));
    }, this.getMode = function () {
      return r.mode;
    }, this.setMode = function (e) {
      r.mode = e;
    }, this.setTranslationSnap = function (e) {
      r.translationSnap = e;
    }, this.setRotationSnap = function (e) {
      r.rotationSnap = e;
    }, this.setSize = function (e) {
      r.size = e;
    }, this.setSpace = function (e) {
      r.space = e;
    }, this.update = function () {
      console.warn("THREE.TransformControls: update function has no more functionality and therefore has been deprecated.");
    };
  }, THREE.TransformControls.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {constructor: THREE.TransformControls, isTransformControls: true}), THREE.TransformControlsGizmo = function () {
    "use strict";
    THREE.Object3D.call(this), this.type = "TransformControlsGizmo";
    var e = new THREE.MeshBasicMaterial({depthTest: false, depthWrite: false, transparent: true, side: THREE.DoubleSide, fog: false}), t = new THREE.LineBasicMaterial({depthTest: false, depthWrite: false, transparent: true, linewidth: 1, fog: false}), n = e.clone();
    n.opacity = 0.15;
    var i = e.clone();
    i.opacity = 0.33;
    var r = e.clone();
    r.color.set(16711680);
    var o = e.clone();
    o.color.set(65280);
    var s = e.clone();
    s.color.set(255);
    var a = e.clone();
    a.opacity = 0.25;
    var l = a.clone();
    l.color.set(16776960);
    var c = a.clone();
    c.color.set(65535);
    var h = a.clone();
    h.color.set(16711935), e.clone().color.set(16776960);
    var u = t.clone();
    u.color.set(16711680);
    var d = t.clone();
    d.color.set(65280);
    var p = t.clone();
    p.color.set(255);
    var m = t.clone();
    m.color.set(65535);
    var f = t.clone();
    f.color.set(16711935);
    var g = t.clone();
    g.color.set(16776960);
    var v = t.clone();
    v.color.set(7895160);
    var y = g.clone();
    y.opacity = 0.25;
    var _ = new THREE.CylinderBufferGeometry(0, 0.05, 0.2, 12, 1, false), x = new THREE.BoxBufferGeometry(0.125, 0.125, 0.125), b = new THREE.BufferGeometry;
    b.addAttribute("position", new THREE.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));
    var w, S = function (e, t) {
      for (var n = new THREE.BufferGeometry, i = [], r = 0; r <= 64 * t; ++r) i.push(0, Math.cos(r / 32 * Math.PI) * e, Math.sin(r / 32 * Math.PI) * e);
      return n.addAttribute("position", new THREE.Float32BufferAttribute(i, 3)), n;
    }, E = {X: [[new THREE.Mesh(_, r), [1, 0, 0], [0, 0, -Math.PI / 2], null, "fwd"], [new THREE.Mesh(_, r), [1, 0, 0], [0, 0, Math.PI / 2], null, "bwd"], [new THREE.Line(b, u)]], Y: [[new THREE.Mesh(_, o), [0, 1, 0], null, null, "fwd"], [new THREE.Mesh(_, o), [0, 1, 0], [Math.PI, 0, 0], null, "bwd"], [new THREE.Line(b, d), null, [0, 0, Math.PI / 2]]], Z: [[new THREE.Mesh(_, s), [0, 0, 1], [Math.PI / 2, 0, 0], null, "fwd"], [new THREE.Mesh(_, s), [0, 0, 1], [-Math.PI / 2, 0, 0], null, "bwd"], [new THREE.Line(b, p), null, [0, -Math.PI / 2, 0]]], XYZ: [[new THREE.Mesh(new THREE.OctahedronBufferGeometry(0.1, 0), a.clone()), [0, 0, 0], [0, 0, 0]]], XY: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.295, 0.295), l.clone()), [0.15, 0.15, 0]], [new THREE.Line(b, g), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new THREE.Line(b, g), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]], YZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.295, 0.295), c.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new THREE.Line(b, m), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new THREE.Line(b, m), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]], XZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.295, 0.295), h.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new THREE.Line(b, f), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new THREE.Line(b, f), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]}, q = {X: [[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), n), [0.6, 0, 0], [0, 0, -Math.PI / 2]]], Y: [[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), n), [0, 0.6, 0]]], Z: [[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), n), [0, 0, 0.6], [Math.PI / 2, 0, 0]]], XYZ: [[new THREE.Mesh(new THREE.OctahedronBufferGeometry(0.2, 0), n)]], XY: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), n), [0.2, 0.2, 0]]], YZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), n), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]], XZ: [[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), n), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]}, T = {START: [[new THREE.Mesh(new THREE.OctahedronBufferGeometry(0.01, 2), i), null, null, null, "helper"]], END: [[new THREE.Mesh(new THREE.OctahedronBufferGeometry(0.01, 2), i), null, null, null, "helper"]], DELTA: [[new THREE.Line((w = new THREE.BufferGeometry, w.addAttribute("position", new THREE.Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3)), w), i), null, null, null, "helper"]], X: [[new THREE.Line(b, i.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], "helper"]], Y: [[new THREE.Line(b, i.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], "helper"]], Z: [[new THREE.Line(b, i.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], "helper"]]}, A = {X: [[new THREE.Line(S(1, 0.5), u)], [new THREE.Mesh(new THREE.OctahedronBufferGeometry(0.04, 0), r), [0, 0, 0.99], null, [1, 3, 1]]], Y: [[new THREE.Line(S(1, 0.5), d), null, [0, 0, -Math.PI / 2]], [new THREE.Mesh(new THREE.OctahedronBufferGeometry(0.04, 0), o), [0, 0, 0.99], null, [3, 1, 1]]], Z: [[new THREE.Line(S(1, 0.5), p), null, [0, Math.PI / 2, 0]], [new THREE.Mesh(new THREE.OctahedronBufferGeometry(0.04, 0), s), [0.99, 0, 0], null, [1, 3, 1]]], E: [[new THREE.Line(S(1.25, 1), y), null, [0, Math.PI / 2, 0]], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), y), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), y), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), y), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new THREE.Mesh(new THREE.CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), y), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]], XYZE: [[new THREE.Line(S(1, 1), v), null, [0, Math.PI / 2, 0]]]}, M = {AXIS: [[new THREE.Line(b, i.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], "helper"]]}, C = {X: [[new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.1, 4, 24), n), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]], Y: [[new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.1, 4, 24), n), [0, 0, 0], [Math.PI / 2, 0, 0]]], Z: [[new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.1, 4, 24), n), [0, 0, 0], [0, 0, -Math.PI / 2]]], E: [[new THREE.Mesh(new THREE.TorusBufferGeometry(1.25, 0.1, 2, 24), n)]], XYZE: [[new THREE.Mesh(new THREE.SphereBufferGeometry(0.7, 10, 8), n)]]}, k = {X: [[new THREE.Mesh(x, r), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new THREE.Line(b, u), null, null, [0.8, 1, 1]]], Y: [[new THREE.Mesh(x, o), [0, 0.8, 0]], [new THREE.Line(b, d), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]], Z: [[new THREE.Mesh(x, s), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new THREE.Line(b, p), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]], XY: [[new THREE.Mesh(x, l), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new THREE.Line(b, g), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new THREE.Line(b, g), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]], YZ: [[new THREE.Mesh(x, c), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new THREE.Line(b, m), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new THREE.Line(b, m), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]], XZ: [[new THREE.Mesh(x, h), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new THREE.Line(b, f), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new THREE.Line(b, f), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]], XYZX: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.125, 0.125, 0.125), a.clone()), [1.1, 0, 0]]], XYZY: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.125, 0.125, 0.125), a.clone()), [0, 1.1, 0]]], XYZZ: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.125, 0.125, 0.125), a.clone()), [0, 0, 1.1]]]}, R = {X: [[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 0.8, 4, 1, false), n), [0.5, 0, 0], [0, 0, -Math.PI / 2]]], Y: [[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 0.8, 4, 1, false), n), [0, 0.5, 0]]], Z: [[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 0.8, 4, 1, false), n), [0, 0, 0.5], [Math.PI / 2, 0, 0]]], XY: [[new THREE.Mesh(x, n), [0.85, 0.85, 0], null, [3, 3, 0.2]]], YZ: [[new THREE.Mesh(x, n), [0, 0.85, 0.85], null, [0.2, 3, 3]]], XZ: [[new THREE.Mesh(x, n), [0.85, 0, 0.85], null, [3, 0.2, 3]]], XYZX: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.2, 0.2, 0.2), n), [1.1, 0, 0]]], XYZY: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.2, 0.2, 0.2), n), [0, 1.1, 0]]], XYZZ: [[new THREE.Mesh(new THREE.BoxBufferGeometry(0.2, 0.2, 0.2), n), [0, 0, 1.1]]]}, L = {X: [[new THREE.Line(b, i.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], "helper"]], Y: [[new THREE.Line(b, i.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], "helper"]], Z: [[new THREE.Line(b, i.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], "helper"]]}, P = function (e) {
      var t = new THREE.Object3D;
      for (var n in e) for (var i = e[n].length; i--;) {
        var r = e[n][i][0].clone(), o = e[n][i][1], s = e[n][i][2], a = e[n][i][3], l = e[n][i][4];
        r.name = n, r.tag = l, o && r.position.set(o[0], o[1], o[2]), s && r.rotation.set(s[0], s[1], s[2]), a && r.scale.set(a[0], a[1], a[2]), r.updateMatrix();
        var c = r.geometry.clone();
        c.applyMatrix(r.matrix), r.geometry = c, r.renderOrder = Infinity, r.position.set(0, 0, 0), r.rotation.set(0, 0, 0), r.scale.set(1, 1, 1), t.add(r);
      }
      return t;
    }, D = new THREE.Vector3(0, 0, 0), O = new THREE.Euler, I = new THREE.Vector3(0, 1, 0), B = new THREE.Vector3(0, 0, 0), F = new THREE.Matrix4, z = new THREE.Quaternion, N = new THREE.Quaternion, U = new THREE.Quaternion, V = new THREE.Vector3(1, 0, 0), G = new THREE.Vector3(0, 1, 0), H = new THREE.Vector3(0, 0, 1);
    this.gizmo = {}, this.picker = {}, this.helper = {}, this.add(this.gizmo.translate = P(E)), this.add(this.gizmo.rotate = P(A)), this.add(this.gizmo.scale = P(k)), this.add(this.picker.translate = P(q)), this.add(this.picker.rotate = P(C)), this.add(this.picker.scale = P(R)), this.add(this.helper.translate = P(T)), this.add(this.helper.rotate = P(M)), this.add(this.helper.scale = P(L)), this.picker.translate.visible = false, this.picker.rotate.visible = false, this.picker.scale.visible = false, this.updateMatrixWorld = function () {
      var e = this.space;
      "scale" === this.mode && (e = "local");
      var t = "local" === e ? this.worldQuaternion : U;
      this.gizmo.translate.visible = "translate" === this.mode, this.gizmo.rotate.visible = "rotate" === this.mode, this.gizmo.scale.visible = "scale" === this.mode, this.helper.translate.visible = "translate" === this.mode, this.helper.rotate.visible = "rotate" === this.mode, this.helper.scale.visible = "scale" === this.mode;
      var n = [];
      n = (n = (n = n.concat(this.picker[this.mode].children)).concat(this.gizmo[this.mode].children)).concat(this.helper[this.mode].children);
      for (var i = 0; i < n.length; i++) {
        var r = n[i];
        r.visible = true, r.rotation.set(0, 0, 0), r.position.copy(this.worldPosition);
        var o = this.worldPosition.distanceTo(this.cameraPosition);
        if (r.scale.set(1, 1, 1).multiplyScalar(o * this.size / 7), "helper" !== r.tag) {
          if (r.quaternion.copy(t), "translate" === this.mode || "scale" === this.mode) {
            "X" !== r.name && "XYZX" !== r.name || Math.abs(I.copy(V).applyQuaternion(t).dot(this.eye)) > 0.99 && (r.scale.set(1e-10, 1e-10, 1e-10), r.visible = false), "Y" !== r.name && "XYZY" !== r.name || Math.abs(I.copy(G).applyQuaternion(t).dot(this.eye)) > 0.99 && (r.scale.set(1e-10, 1e-10, 1e-10), r.visible = false), "Z" !== r.name && "XYZZ" !== r.name || Math.abs(I.copy(H).applyQuaternion(t).dot(this.eye)) > 0.99 && (r.scale.set(1e-10, 1e-10, 1e-10), r.visible = false), "XY" === r.name && Math.abs(I.copy(H).applyQuaternion(t).dot(this.eye)) < 0.2 && (r.scale.set(1e-10, 1e-10, 1e-10), r.visible = false), "YZ" === r.name && Math.abs(I.copy(V).applyQuaternion(t).dot(this.eye)) < 0.2 && (r.scale.set(1e-10, 1e-10, 1e-10), r.visible = false), "XZ" === r.name && Math.abs(I.copy(G).applyQuaternion(t).dot(this.eye)) < 0.2 && (r.scale.set(1e-10, 1e-10, 1e-10), r.visible = false), -1 !== r.name.search("X") && (I.copy(V).applyQuaternion(t).dot(this.eye) < 0 ? "fwd" === r.tag ? r.visible = false : r.scale.x *= -1 : "bwd" === r.tag && (r.visible = false)), -1 !== r.name.search("Y") && (I.copy(G).applyQuaternion(t).dot(this.eye) < 0 ? "fwd" === r.tag ? r.visible = false : r.scale.y *= -1 : "bwd" === r.tag && (r.visible = false)), -1 !== r.name.search("Z") && (I.copy(H).applyQuaternion(t).dot(this.eye) < 0 ? "fwd" === r.tag ? r.visible = false : r.scale.z *= -1 : "bwd" === r.tag && (r.visible = false));
          } else "rotate" === this.mode && (N.copy(t), I.copy(this.eye).applyQuaternion(z.copy(t).inverse()), -1 !== r.name.search("E") && r.quaternion.setFromRotationMatrix(F.lookAt(this.eye, B, G)), "X" === r.name && (z.setFromAxisAngle(V, Math.atan2(-I.y, I.z)), z.multiplyQuaternions(N, z), r.quaternion.copy(z)), "Y" === r.name && (z.setFromAxisAngle(G, Math.atan2(I.x, I.z)), z.multiplyQuaternions(N, z), r.quaternion.copy(z)), "Z" === r.name && (z.setFromAxisAngle(H, Math.atan2(I.y, I.x)), z.multiplyQuaternions(N, z), r.quaternion.copy(z)));
          r.visible = r.visible && (-1 === r.name.indexOf("X") || this.showX), r.visible = r.visible && (-1 === r.name.indexOf("Y") || this.showY), r.visible = r.visible && (-1 === r.name.indexOf("Z") || this.showZ), r.visible = r.visible && (-1 === r.name.indexOf("E") || this.showX && this.showY && this.showZ), r.material._opacity = r.material._opacity || r.material.opacity, r.material._color = r.material._color || r.material.color.clone(), r.material.color.copy(r.material._color), r.material.opacity = r.material._opacity, this.enabled ? this.axis && (r.name === this.axis ? (r.material.opacity = 1, r.material.color.lerp(new THREE.Color(1, 1, 1), 0.5)) : this.axis.split("").some(function (e) {
            return r.name === e;
          }) ? (r.material.opacity = 1, r.material.color.lerp(new THREE.Color(1, 1, 1), 0.5)) : (r.material.opacity *= 0.25, r.material.color.lerp(new THREE.Color(1, 1, 1), 0.5))) : (r.material.opacity *= 0.5, r.material.color.lerp(new THREE.Color(1, 1, 1), 0.5));
        } else r.visible = false, "AXIS" === r.name ? (r.position.copy(this.worldPositionStart), r.visible = !!this.axis, "X" === this.axis && (z.setFromEuler(O.set(0, 0, 0)), r.quaternion.copy(t).multiply(z), Math.abs(I.copy(V).applyQuaternion(t).dot(this.eye)) > 0.9 && (r.visible = false)), "Y" === this.axis && (z.setFromEuler(O.set(0, 0, Math.PI / 2)), r.quaternion.copy(t).multiply(z), Math.abs(I.copy(G).applyQuaternion(t).dot(this.eye)) > 0.9 && (r.visible = false)), "Z" === this.axis && (z.setFromEuler(O.set(0, Math.PI / 2, 0)), r.quaternion.copy(t).multiply(z), Math.abs(I.copy(H).applyQuaternion(t).dot(this.eye)) > 0.9 && (r.visible = false)), "XYZE" === this.axis && (z.setFromEuler(O.set(0, Math.PI / 2, 0)), I.copy(this.rotationAxis), r.quaternion.setFromRotationMatrix(F.lookAt(B, I, G)), r.quaternion.multiply(z), r.visible = this.dragging), "E" === this.axis && (r.visible = false)) : "START" === r.name ? (r.position.copy(this.worldPositionStart), r.visible = this.dragging) : "END" === r.name ? (r.position.copy(this.worldPosition), r.visible = this.dragging) : "DELTA" === r.name ? (r.position.copy(this.worldPositionStart), r.quaternion.copy(this.worldQuaternionStart), D.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1), D.applyQuaternion(this.worldQuaternionStart.clone().inverse()), r.scale.copy(D), r.visible = this.dragging) : (r.quaternion.copy(t), this.dragging ? r.position.copy(this.worldPositionStart) : r.position.copy(this.worldPosition), this.axis && (r.visible = -1 !== this.axis.search(r.name)));
      }
      THREE.Object3D.prototype.updateMatrixWorld.call(this);
    };
  }, THREE.TransformControlsGizmo.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {constructor: THREE.TransformControlsGizmo, isTransformControlsGizmo: true}), THREE.TransformControlsPlane = function () {
    "use strict";
    THREE.Mesh.call(this, new THREE.PlaneBufferGeometry(1e5, 1e5, 2, 2), new THREE.MeshBasicMaterial({visible: false, wireframe: true, side: THREE.DoubleSide, transparent: true, opacity: 0.1})), this.type = "TransformControlsPlane";
    var e = new THREE.Vector3(1, 0, 0), t = new THREE.Vector3(0, 1, 0), n = new THREE.Vector3(0, 0, 1), i = new THREE.Vector3, r = new THREE.Vector3, o = new THREE.Vector3, s = new THREE.Matrix4, a = new THREE.Quaternion;
    this.updateMatrixWorld = function () {
      var l = this.space;
      switch (this.position.copy(this.worldPosition), "scale" === this.mode && (l = "local"), e.set(1, 0, 0).applyQuaternion("local" === l ? this.worldQuaternion : a), t.set(0, 1, 0).applyQuaternion("local" === l ? this.worldQuaternion : a), n.set(0, 0, 1).applyQuaternion("local" === l ? this.worldQuaternion : a), o.copy(t), this.mode) {
        case "translate":
        case "scale":
          switch (this.axis) {
            case "X":
              o.copy(this.eye).cross(e), r.copy(e).cross(o);
              break;
            case "Y":
              o.copy(this.eye).cross(t), r.copy(t).cross(o);
              break;
            case "Z":
              o.copy(this.eye).cross(n), r.copy(n).cross(o);
              break;
            case "XY":
              r.copy(n);
              break;
            case "YZ":
              r.copy(e);
              break;
            case "XZ":
              o.copy(n), r.copy(t);
              break;
            case "XYZ":
            case "E":
              r.set(0, 0, 0);
          }
          break;
        case "rotate":
        default:
          r.set(0, 0, 0);
      }
      0 === r.length() ? this.quaternion.copy(this.cameraQuaternion) : (s.lookAt(i.set(0, 0, 0), r, o), this.quaternion.setFromRotationMatrix(s)), THREE.Object3D.prototype.updateMatrixWorld.call(this);
    };
  }, THREE.TransformControlsPlane.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {constructor: THREE.TransformControlsPlane, isTransformControlsPlane: true});
}, function (e, t) {
  THREE.OrbitControls = function (e, t) {
    var n, i, r, o, s;
    this.object = e, this.domElement = undefined !== t ? t : document, this.enabled = true, this.target = new THREE.Vector3, this.minDistance = 0, this.maxDistance = Infinity, this.minZoom = 0, this.maxZoom = Infinity, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -Infinity, this.maxAzimuthAngle = Infinity, this.enableDamping = false, this.dampingFactor = 0.05, this.enableZoom = true, this.zoomSpeed = 1, this.enableRotate = true, this.rotateSpeed = 1, this.enablePan = true, this.panSpeed = 1, this.screenSpacePanning = false, this.keyPanSpeed = 7, this.autoRotate = false, this.autoRotateSpeed = 2, this.enableKeys = true, this.keys = {LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40}, this.mouseButtons = {LEFT: THREE.MOUSE.ROTATE, MIDDLE: THREE.MOUSE.DOLLY, RIGHT: THREE.MOUSE.PAN}, this.touches = {ONE: THREE.TOUCH.ROTATE, TWO: THREE.TOUCH.DOLLY_PAN}, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function () {
      return m.phi;
    }, this.getAzimuthalAngle = function () {
      return m.theta;
    }, this.saveState = function () {
      a.target0.copy(a.target), a.position0.copy(a.object.position), a.zoom0 = a.object.zoom;
    }, this.reset = function () {
      a.target.copy(a.target0), a.object.position.copy(a.position0), a.object.zoom = a.zoom0, a.object.updateProjectionMatrix(), a.dispatchEvent(l), a.update(), d = u.NONE;
    }, this.update = (n = new THREE.Vector3, i = (new THREE.Quaternion).setFromUnitVectors(e.up, new THREE.Vector3(0, 1, 0)), r = i.clone().inverse(), o = new THREE.Vector3, s = new THREE.Quaternion, function () {
      var e = a.object.position;
      return n.copy(e).sub(a.target), n.applyQuaternion(i), m.setFromVector3(n), a.autoRotate && d === u.NONE && C(2 * Math.PI / 60 / 60 * a.autoRotateSpeed), a.enableDamping ? (m.theta += f.theta * a.dampingFactor, m.phi += f.phi * a.dampingFactor) : (m.theta += f.theta, m.phi += f.phi), m.theta = Math.max(a.minAzimuthAngle, Math.min(a.maxAzimuthAngle, m.theta)), m.phi = Math.max(a.minPolarAngle, Math.min(a.maxPolarAngle, m.phi)), m.makeSafe(), m.radius *= g, m.radius = Math.max(a.minDistance, Math.min(a.maxDistance, m.radius)), true === a.enableDamping ? a.target.addScaledVector(v, a.dampingFactor) : a.target.add(v), n.setFromSpherical(m), n.applyQuaternion(r), e.copy(a.target).add(n), a.object.lookAt(a.target), true === a.enableDamping ? (f.theta *= 1 - a.dampingFactor, f.phi *= 1 - a.dampingFactor, v.multiplyScalar(1 - a.dampingFactor)) : (f.set(0, 0, 0), v.set(0, 0, 0)), g = 1, !!(y || o.distanceToSquared(a.object.position) > p || 8 * (1 - s.dot(a.object.quaternion)) > p) && (a.dispatchEvent(l), o.copy(a.object.position), s.copy(a.object.quaternion), y = false, true);
    }), this.dispose = function () {
      a.domElement.removeEventListener("contextmenu", Q, false), a.domElement.removeEventListener("mousedown", j, false), a.domElement.removeEventListener("wheel", X, false), a.domElement.removeEventListener("touchstart", J, false), a.domElement.removeEventListener("touchend", Z, false), a.domElement.removeEventListener("touchmove", K, false), document.removeEventListener("mousemove", $, false), document.removeEventListener("mouseup", W, false), window.removeEventListener("keydown", Y, false);
    };
    var a = this, l = {type: "change"}, c = {type: "start"}, h = {type: "end"}, u = {NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_PAN: 4, TOUCH_DOLLY_PAN: 5, TOUCH_DOLLY_ROTATE: 6}, d = u.NONE, p = 0.000001, m = new THREE.Spherical, f = new THREE.Spherical, g = 1, v = new THREE.Vector3, y = false, _ = new THREE.Vector2, x = new THREE.Vector2, b = new THREE.Vector2, w = new THREE.Vector2, S = new THREE.Vector2, E = new THREE.Vector2, q = new THREE.Vector2, T = new THREE.Vector2, A = new THREE.Vector2;
    function M() {
      return Math.pow(0.95, a.zoomSpeed);
    }
    function C(e) {
      f.theta -= e;
    }
    function k(e) {
      f.phi -= e;
    }
    var R, L = (R = new THREE.Vector3, function (e, t) {
      R.setFromMatrixColumn(t, 0), R.multiplyScalar(-e), v.add(R);
    }), P = function () {
      var e = new THREE.Vector3;
      return function (t, n) {
        true === a.screenSpacePanning ? e.setFromMatrixColumn(n, 1) : (e.setFromMatrixColumn(n, 0), e.crossVectors(a.object.up, e)), e.multiplyScalar(t), v.add(e);
      };
    }(), D = function () {
      var e = new THREE.Vector3;
      return function (t, n) {
        var i = a.domElement === document ? a.domElement.body : a.domElement;
        if (a.object.isPerspectiveCamera) {
          var r = a.object.position;
          e.copy(r).sub(a.target);
          var o = e.length();
          o *= Math.tan(a.object.fov / 2 * Math.PI / 180), L(2 * t * o / i.clientHeight, a.object.matrix), P(2 * n * o / i.clientHeight, a.object.matrix);
        } else a.object.isOrthographicCamera ? (L(t * (a.object.right - a.object.left) / a.object.zoom / i.clientWidth, a.object.matrix), P(n * (a.object.top - a.object.bottom) / a.object.zoom / i.clientHeight, a.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), a.enablePan = false);
      };
    }();
    function O(e) {
      a.object.isPerspectiveCamera ? g /= e : a.object.isOrthographicCamera ? (a.object.zoom = Math.max(a.minZoom, Math.min(a.maxZoom, a.object.zoom * e)), a.object.updateProjectionMatrix(), y = true) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), a.enableZoom = false);
    }
    function I(e) {
      a.object.isPerspectiveCamera ? g *= e : a.object.isOrthographicCamera ? (a.object.zoom = Math.max(a.minZoom, Math.min(a.maxZoom, a.object.zoom / e)), a.object.updateProjectionMatrix(), y = true) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), a.enableZoom = false);
    }
    function B(e) {
      _.set(e.clientX, e.clientY);
    }
    function F(e) {
      w.set(e.clientX, e.clientY);
    }
    function z(e) {
      if (1 == e.touches.length) _.set(e.touches[0].pageX, e.touches[0].pageY); else {
        var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX), n = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
        _.set(t, n);
      }
    }
    function N(e) {
      if (1 == e.touches.length) w.set(e.touches[0].pageX, e.touches[0].pageY); else {
        var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX), n = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
        w.set(t, n);
      }
    }
    function U(e) {
      var t = e.touches[0].pageX - e.touches[1].pageX, n = e.touches[0].pageY - e.touches[1].pageY, i = Math.sqrt(t * t + n * n);
      q.set(0, i);
    }
    function V(e) {
      if (1 == e.touches.length) x.set(e.touches[0].pageX, e.touches[0].pageY); else {
        var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX), n = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
        x.set(t, n);
      }
      b.subVectors(x, _).multiplyScalar(a.rotateSpeed);
      var i = a.domElement === document ? a.domElement.body : a.domElement;
      C(2 * Math.PI * b.x / i.clientHeight), k(2 * Math.PI * b.y / i.clientHeight), _.copy(x);
    }
    function G(e) {
      if (1 == e.touches.length) S.set(e.touches[0].pageX, e.touches[0].pageY); else {
        var t = 0.5 * (e.touches[0].pageX + e.touches[1].pageX), n = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);
        S.set(t, n);
      }
      E.subVectors(S, w).multiplyScalar(a.panSpeed), D(E.x, E.y), w.copy(S);
    }
    function H(e) {
      var t = e.touches[0].pageX - e.touches[1].pageX, n = e.touches[0].pageY - e.touches[1].pageY, i = Math.sqrt(t * t + n * n);
      T.set(0, i), A.set(0, Math.pow(T.y / q.y, a.zoomSpeed)), O(A.y), q.copy(T);
    }
    function j(e) {
      if (false !== a.enabled) {
        switch (e.preventDefault(), a.domElement.focus ? a.domElement.focus() : window.focus(), e.button) {
          case 0:
            switch (a.mouseButtons.LEFT) {
              case THREE.MOUSE.ROTATE:
                if (e.ctrlKey || e.metaKey || e.shiftKey) {
                  if (false === a.enablePan) return;
                  F(e), d = u.PAN;
                } else {
                  if (false === a.enableRotate) return;
                  B(e), d = u.ROTATE;
                }
                break;
              case THREE.MOUSE.PAN:
                if (e.ctrlKey || e.metaKey || e.shiftKey) {
                  if (false === a.enableRotate) return;
                  B(e), d = u.ROTATE;
                } else {
                  if (false === a.enablePan) return;
                  F(e), d = u.PAN;
                }
                break;
              default:
                d = u.NONE;
            }
            break;
          case 1:
            switch (a.mouseButtons.MIDDLE) {
              case THREE.MOUSE.DOLLY:
                if (false === a.enableZoom) return;
                !function (e) {
                  q.set(e.clientX, e.clientY);
                }(e), d = u.DOLLY;
                break;
              default:
                d = u.NONE;
            }
            break;
          case 2:
            switch (a.mouseButtons.RIGHT) {
              case THREE.MOUSE.ROTATE:
                if (false === a.enableRotate) return;
                B(e), d = u.ROTATE;
                break;
              case THREE.MOUSE.PAN:
                if (false === a.enablePan) return;
                F(e), d = u.PAN;
                break;
              default:
                d = u.NONE;
            }
        }
        d !== u.NONE && (document.addEventListener("mousemove", $, false), document.addEventListener("mouseup", W, false), a.dispatchEvent(c));
      }
    }
    function $(e) {
      if (false !== a.enabled) switch (e.preventDefault(), d) {
        case u.ROTATE:
          if (false === a.enableRotate) return;
          !function (e) {
            x.set(e.clientX, e.clientY), b.subVectors(x, _).multiplyScalar(a.rotateSpeed);
            var t = a.domElement === document ? a.domElement.body : a.domElement;
            C(2 * Math.PI * b.x / t.clientHeight), k(2 * Math.PI * b.y / t.clientHeight), _.copy(x), a.update();
          }(e);
          break;
        case u.DOLLY:
          if (false === a.enableZoom) return;
          !function (e) {
            T.set(e.clientX, e.clientY), A.subVectors(T, q), A.y > 0 ? O(Math.pow(0.95, a.zoomSpeed)) : A.y < 0 && I(Math.pow(0.95, a.zoomSpeed)), q.copy(T), a.update();
          }(e);
          break;
        case u.PAN:
          if (false === a.enablePan) return;
          !function (e) {
            S.set(e.clientX, e.clientY), E.subVectors(S, w).multiplyScalar(a.panSpeed), D(E.x, E.y), w.copy(S), a.update();
          }(e);
      }
    }
    function W(e) {
      false !== a.enabled && (document.removeEventListener("mousemove", $, false), document.removeEventListener("mouseup", W, false), a.dispatchEvent(h), d = u.NONE);
    }
    function X(e) {
      false === a.enabled || false === a.enableZoom || d !== u.NONE && d !== u.ROTATE || (e.preventDefault(), e.stopPropagation(), a.dispatchEvent(c), function (e) {
        e.deltaY < 0 ? I(Math.pow(0.95, a.zoomSpeed)) : e.deltaY > 0 && O(Math.pow(0.95, a.zoomSpeed)), a.update();
      }(e), a.dispatchEvent(h));
    }
    function Y(e) {
      false !== a.enabled && false !== a.enableKeys && false !== a.enablePan && function (e) {
        var t = false;
        switch (e.keyCode) {
          case a.keys.UP:
            D(0, a.keyPanSpeed), t = true;
            break;
          case a.keys.BOTTOM:
            D(0, -a.keyPanSpeed), t = true;
            break;
          case a.keys.LEFT:
            D(a.keyPanSpeed, 0), t = true;
            break;
          case a.keys.RIGHT:
            D(-a.keyPanSpeed, 0), t = true;
        }
        t && (e.preventDefault(), a.update());
      }(e);
    }
    function J(e) {
      if (false !== a.enabled) {
        switch (e.preventDefault(), e.touches.length) {
          case 1:
            switch (a.touches.ONE) {
              case THREE.TOUCH.ROTATE:
                if (false === a.enableRotate) return;
                z(e), d = u.TOUCH_ROTATE;
                break;
              case THREE.TOUCH.PAN:
                if (false === a.enablePan) return;
                N(e), d = u.TOUCH_PAN;
                break;
              default:
                d = u.NONE;
            }
            break;
          case 2:
            switch (a.touches.TWO) {
              case THREE.TOUCH.DOLLY_PAN:
                if (false === a.enableZoom && false === a.enablePan) return;
                !function (e) {
                  a.enableZoom && U(e), a.enablePan && N(e);
                }(e), d = u.TOUCH_DOLLY_PAN;
                break;
              case THREE.TOUCH.DOLLY_ROTATE:
                if (false === a.enableZoom && false === a.enableRotate) return;
                !function (e) {
                  a.enableZoom && U(e), a.enableRotate && z(e);
                }(e), d = u.TOUCH_DOLLY_ROTATE;
                break;
              default:
                d = u.NONE;
            }
            break;
          default:
            d = u.NONE;
        }
        d !== u.NONE && a.dispatchEvent(c);
      }
    }
    function K(e) {
      if (false !== a.enabled) switch (e.preventDefault(), e.stopPropagation(), d) {
        case u.TOUCH_ROTATE:
          if (false === a.enableRotate) return;
          V(e), a.update();
          break;
        case u.TOUCH_PAN:
          if (false === a.enablePan) return;
          G(e), a.update();
          break;
        case u.TOUCH_DOLLY_PAN:
          if (false === a.enableZoom && false === a.enablePan) return;
          !function (e) {
            a.enableZoom && H(e), a.enablePan && G(e);
          }(e), a.update();
          break;
        case u.TOUCH_DOLLY_ROTATE:
          if (false === a.enableZoom && false === a.enableRotate) return;
          !function (e) {
            a.enableZoom && H(e), a.enableRotate && V(e);
          }(e), a.update();
          break;
        default:
          d = u.NONE;
      }
    }
    function Z(e) {
      false !== a.enabled && (a.dispatchEvent(h), d = u.NONE);
    }
    function Q(e) {
      false !== a.enabled && e.preventDefault();
    }
    a.domElement.addEventListener("contextmenu", Q, false), a.domElement.addEventListener("mousedown", j, false), a.domElement.addEventListener("wheel", X, false), a.domElement.addEventListener("touchstart", J, false), a.domElement.addEventListener("touchend", Z, false), a.domElement.addEventListener("touchmove", K, false), window.addEventListener("keydown", Y, false), this.update();
  }, THREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype), THREE.OrbitControls.prototype.constructor = THREE.OrbitControls, THREE.MapControls = function (e, t) {
    THREE.OrbitControls.call(this, e, t), this.mouseButtons.LEFT = THREE.MOUSE.PAN, this.mouseButtons.RIGHT = THREE.MOUSE.ROTATE, this.touches.ONE = THREE.TOUCH.PAN, this.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;
  }, THREE.MapControls.prototype = Object.create(THREE.EventDispatcher.prototype), THREE.MapControls.prototype.constructor = THREE.MapControls;
}, function (e, t) {
  THREE.TrackballControls = function (e, t) {
    var n = this, i = {NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4};
    this.object = e, this.domElement = undefined !== t ? t : document, this.enabled = true, this.screen = {left: 0, top: 0, width: 0, height: 0}, this.rotateSpeed = 1, this.zoomSpeed = 1.2, this.panSpeed = 0.3, this.noRotate = false, this.noZoom = false, this.noPan = false, this.staticMoving = false, this.dynamicDampingFactor = 0.2, this.minDistance = 0, this.maxDistance = Infinity, this.keys = [65, 83, 68], this.mouseButtons = {LEFT: THREE.MOUSE.ROTATE, MIDDLE: THREE.MOUSE.ZOOM, RIGHT: THREE.MOUSE.PAN}, this.target = new THREE.Vector3;
    var r = new THREE.Vector3, o = i.NONE, s = i.NONE, a = new THREE.Vector3, l = new THREE.Vector2, c = new THREE.Vector2, h = new THREE.Vector3, u = 0, d = new THREE.Vector2, p = new THREE.Vector2, m = 0, f = 0, g = new THREE.Vector2, v = new THREE.Vector2;
    this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.up0 = this.object.up.clone();
    var y = {type: "change"}, _ = {type: "start"}, x = {type: "end"};
    this.handleResize = function () {
      if (this.domElement === document) this.screen.left = 0, this.screen.top = 0, this.screen.width = window.innerWidth, this.screen.height = window.innerHeight; else {
        var e = this.domElement.getBoundingClientRect(), t = this.domElement.ownerDocument.documentElement;
        this.screen.left = e.left + window.pageXOffset - t.clientLeft, this.screen.top = e.top + window.pageYOffset - t.clientTop, this.screen.width = e.width, this.screen.height = e.height;
      }
    };
    var b, w, S, E, q, T, A, M, C, k, R, L = (b = new THREE.Vector2, function (e, t) {
      return b.set((e - n.screen.left) / n.screen.width, (t - n.screen.top) / n.screen.height), b;
    }), P = function () {
      var e = new THREE.Vector2;
      return function (t, i) {
        return e.set((t - 0.5 * n.screen.width - n.screen.left) / (0.5 * n.screen.width), (n.screen.height + 2 * (n.screen.top - i)) / n.screen.width), e;
      };
    }();
    function D(e) {
      false !== n.enabled && (window.removeEventListener("keydown", D), s === i.NONE && (e.keyCode !== n.keys[i.ROTATE] || n.noRotate ? e.keyCode !== n.keys[i.ZOOM] || n.noZoom ? e.keyCode !== n.keys[i.PAN] || n.noPan || (s = i.PAN) : s = i.ZOOM : s = i.ROTATE));
    }
    function O() {
      false !== n.enabled && (s = i.NONE, window.addEventListener("keydown", D, false));
    }
    function I(e) {
      if (false !== n.enabled) {
        if (e.preventDefault(), e.stopPropagation(), o === i.NONE) switch (e.button) {
          case n.mouseButtons.LEFT:
            o = i.ROTATE;
            break;
          case n.mouseButtons.MIDDLE:
            o = i.ZOOM;
            break;
          case n.mouseButtons.RIGHT:
            o = i.PAN;
            break;
          default:
            o = i.NONE;
        }
        var t = s !== i.NONE ? s : o;
        t !== i.ROTATE || n.noRotate ? t !== i.ZOOM || n.noZoom ? t !== i.PAN || n.noPan || (g.copy(L(e.pageX, e.pageY)), v.copy(g)) : (d.copy(L(e.pageX, e.pageY)), p.copy(d)) : (c.copy(P(e.pageX, e.pageY)), l.copy(c)), document.addEventListener("mousemove", B, false), document.addEventListener("mouseup", F, false), n.dispatchEvent(_);
      }
    }
    function B(e) {
      if (false !== n.enabled) {
        e.preventDefault(), e.stopPropagation();
        var t = s !== i.NONE ? s : o;
        t !== i.ROTATE || n.noRotate ? t !== i.ZOOM || n.noZoom ? t !== i.PAN || n.noPan || v.copy(L(e.pageX, e.pageY)) : p.copy(L(e.pageX, e.pageY)) : (l.copy(c), c.copy(P(e.pageX, e.pageY)));
      }
    }
    function F(e) {
      false !== n.enabled && (e.preventDefault(), e.stopPropagation(), o = i.NONE, document.removeEventListener("mousemove", B), document.removeEventListener("mouseup", F), n.dispatchEvent(x));
    }
    function z(e) {
      if (false !== n.enabled && true !== n.noZoom) {
        switch (e.preventDefault(), e.stopPropagation(), e.deltaMode) {
          case 2:
            d.y -= 0.025 * e.deltaY;
            break;
          case 1:
            d.y -= 0.01 * e.deltaY;
            break;
          default:
            d.y -= 0.00025 * e.deltaY;
        }
        n.dispatchEvent(_), n.dispatchEvent(x);
      }
    }
    function N(e) {
      if (false !== n.enabled) {
        switch (e.preventDefault(), e.touches.length) {
          case 1:
            o = i.TOUCH_ROTATE, c.copy(P(e.touches[0].pageX, e.touches[0].pageY)), l.copy(c);
            break;
          default:
            o = i.TOUCH_ZOOM_PAN;
            var t = e.touches[0].pageX - e.touches[1].pageX, r = e.touches[0].pageY - e.touches[1].pageY;
            f = m = Math.sqrt(t * t + r * r);
            var s = (e.touches[0].pageX + e.touches[1].pageX) / 2, a = (e.touches[0].pageY + e.touches[1].pageY) / 2;
            g.copy(L(s, a)), v.copy(g);
        }
        n.dispatchEvent(_);
      }
    }
    function U(e) {
      if (false !== n.enabled) switch (e.preventDefault(), e.stopPropagation(), e.touches.length) {
        case 1:
          l.copy(c), c.copy(P(e.touches[0].pageX, e.touches[0].pageY));
          break;
        default:
          var t = e.touches[0].pageX - e.touches[1].pageX, i = e.touches[0].pageY - e.touches[1].pageY;
          f = Math.sqrt(t * t + i * i);
          var r = (e.touches[0].pageX + e.touches[1].pageX) / 2, o = (e.touches[0].pageY + e.touches[1].pageY) / 2;
          v.copy(L(r, o));
      }
    }
    function V(e) {
      if (false !== n.enabled) {
        switch (e.touches.length) {
          case 0:
            o = i.NONE;
            break;
          case 1:
            o = i.TOUCH_ROTATE, c.copy(P(e.touches[0].pageX, e.touches[0].pageY)), l.copy(c);
        }
        n.dispatchEvent(x);
      }
    }
    function G(e) {
      false !== n.enabled && e.preventDefault();
    }
    this.rotateCamera = (S = new THREE.Vector3, E = new THREE.Quaternion, q = new THREE.Vector3, T = new THREE.Vector3, A = new THREE.Vector3, M = new THREE.Vector3, function () {
      M.set(c.x - l.x, c.y - l.y, 0), (w = M.length()) ? (a.copy(n.object.position).sub(n.target), q.copy(a).normalize(), T.copy(n.object.up).normalize(), A.crossVectors(T, q).normalize(), T.setLength(c.y - l.y), A.setLength(c.x - l.x), M.copy(T.add(A)), S.crossVectors(M, a).normalize(), w *= n.rotateSpeed, E.setFromAxisAngle(S, w), a.applyQuaternion(E), n.object.up.applyQuaternion(E), h.copy(S), u = w) : !n.staticMoving && u && (u *= Math.sqrt(1 - n.dynamicDampingFactor), a.copy(n.object.position).sub(n.target), E.setFromAxisAngle(h, u), a.applyQuaternion(E), n.object.up.applyQuaternion(E)), l.copy(c);
    }), this.zoomCamera = function () {
      var e;
      o === i.TOUCH_ZOOM_PAN ? (e = m / f, m = f, a.multiplyScalar(e)) : (1 !== (e = 1 + (p.y - d.y) * n.zoomSpeed) && e > 0 && a.multiplyScalar(e), n.staticMoving ? d.copy(p) : d.y += (p.y - d.y) * this.dynamicDampingFactor);
    }, this.panCamera = (C = new THREE.Vector2, k = new THREE.Vector3, R = new THREE.Vector3, function () {
      C.copy(v).sub(g), C.lengthSq() && (C.multiplyScalar(a.length() * n.panSpeed), R.copy(a).cross(n.object.up).setLength(C.x), R.add(k.copy(n.object.up).setLength(C.y)), n.object.position.add(R), n.target.add(R), n.staticMoving ? g.copy(v) : g.add(C.subVectors(v, g).multiplyScalar(n.dynamicDampingFactor)));
    }), this.checkDistances = function () {
      n.noZoom && n.noPan || (a.lengthSq() > n.maxDistance * n.maxDistance && (n.object.position.addVectors(n.target, a.setLength(n.maxDistance)), d.copy(p)), a.lengthSq() < n.minDistance * n.minDistance && (n.object.position.addVectors(n.target, a.setLength(n.minDistance)), d.copy(p)));
    }, this.update = function () {
      a.subVectors(n.object.position, n.target), n.noRotate || n.rotateCamera(), n.noZoom || n.zoomCamera(), n.noPan || n.panCamera(), n.object.position.addVectors(n.target, a), n.checkDistances(), n.object.lookAt(n.target), r.distanceToSquared(n.object.position) > 0.000001 && (n.dispatchEvent(y), r.copy(n.object.position));
    }, this.reset = function () {
      o = i.NONE, s = i.NONE, n.target.copy(n.target0), n.object.position.copy(n.position0), n.object.up.copy(n.up0), a.subVectors(n.object.position, n.target), n.object.lookAt(n.target), n.dispatchEvent(y), r.copy(n.object.position);
    }, this.dispose = function () {
      this.domElement.removeEventListener("contextmenu", G, false), this.domElement.removeEventListener("mousedown", I, false), this.domElement.removeEventListener("wheel", z, false), this.domElement.removeEventListener("touchstart", N, false), this.domElement.removeEventListener("touchend", V, false), this.domElement.removeEventListener("touchmove", U, false), document.removeEventListener("mousemove", B, false), document.removeEventListener("mouseup", F, false), window.removeEventListener("keydown", D, false), window.removeEventListener("keyup", O, false);
    }, this.domElement.addEventListener("contextmenu", G, false), this.domElement.addEventListener("mousedown", I, false), this.domElement.addEventListener("wheel", z, false), this.domElement.addEventListener("touchstart", N, false), this.domElement.addEventListener("touchend", V, false), this.domElement.addEventListener("touchmove", U, false), window.addEventListener("keydown", D, false), window.addEventListener("keyup", O, false), this.handleResize(), this.update();
  }, THREE.TrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype), THREE.TrackballControls.prototype.constructor = THREE.TrackballControls;
}, function (e, t) {
  THREE.CopyShader = {uniforms: {tDiffuse: {value: null}, opacity: {value: 1}}, vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"), fragmentShader: ["uniform float opacity;", "uniform sampler2D tDiffuse;", "varying vec2 vUv;", "void main() {", "vec4 texel = texture2D( tDiffuse, vUv );", "gl_FragColor = opacity * texel;", "}"].join("\n")};
}, function (e, t) {
  THREE.FXAAShader = {uniforms: {tDiffuse: {value: null}, resolution: {value: new THREE.Vector2(0.0009765625, 0.001953125)}}, vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"), fragmentShader: ["precision highp float;", "", "uniform sampler2D tDiffuse;", "", "uniform vec2 resolution;", "", "varying vec2 vUv;", "", "// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)", "", "//----------------------------------------------------------------------------------", "// File:        es3-keplerFXAAassetsshaders/FXAA_DefaultES.frag", "// SDK Version: v3.00", "// Email:       gameworks@nvidia.com", "// Site:        http://developer.nvidia.com/", "//", "// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.", "//", "// Redistribution and use in source and binary forms, with or without", "// modification, are permitted provided that the following conditions", "// are met:", "//  * Redistributions of source code must retain the above copyright", "//    notice, this list of conditions and the following disclaimer.", "//  * Redistributions in binary form must reproduce the above copyright", "//    notice, this list of conditions and the following disclaimer in the", "//    documentation and/or other materials provided with the distribution.", "//  * Neither the name of NVIDIA CORPORATION nor the names of its", "//    contributors may be used to endorse or promote products derived", "//    from this software without specific prior written permission.", "//", "// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY", "// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE", "// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR", "// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR", "// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,", "// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,", "// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR", "// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY", "// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT", "// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE", "// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "//", "//----------------------------------------------------------------------------------", "", "#define FXAA_PC 1", "#define FXAA_GLSL_100 1", "#define FXAA_QUALITY_PRESET 12", "", "#define FXAA_GREEN_AS_LUMA 1", "", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_PC_CONSOLE", "    //", "    // The console algorithm for PC is included", "    // for developers targeting really low spec machines.", "    // Likely better to just run FXAA_PC, and use a really low preset.", "    //", "    #define FXAA_PC_CONSOLE 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_GLSL_120", "    #define FXAA_GLSL_120 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_GLSL_130", "    #define FXAA_GLSL_130 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_HLSL_3", "    #define FXAA_HLSL_3 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_HLSL_4", "    #define FXAA_HLSL_4 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_HLSL_5", "    #define FXAA_HLSL_5 0", "#endif", "/*==========================================================================*/", "#ifndef FXAA_GREEN_AS_LUMA", "    //", "    // For those using non-linear color,", "    // and either not able to get luma in alpha, or not wanting to,", "    // this enables FXAA to run using green as a proxy for luma.", "    // So with this enabled, no need to pack luma in alpha.", "    //", "    // This will turn off AA on anything which lacks some amount of green.", "    // Pure red and blue or combination of only R and B, will get no AA.", "    //", "    // Might want to lower the settings for both,", "    //    fxaaConsoleEdgeThresholdMin", "    //    fxaaQualityEdgeThresholdMin", "    // In order to insure AA does not get turned off on colors", "    // which contain a minor amount of green.", "    //", "    // 1 = On.", "    // 0 = Off.", "    //", "    #define FXAA_GREEN_AS_LUMA 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_EARLY_EXIT", "    //", "    // Controls algorithm's early exit path.", "    // On PS3 turning this ON adds 2 cycles to the shader.", "    // On 360 turning this OFF adds 10ths of a millisecond to the shader.", "    // Turning this off on console will result in a more blurry image.", "    // So this defaults to on.", "    //", "    // 1 = On.", "    // 0 = Off.", "    //", "    #define FXAA_EARLY_EXIT 1", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_DISCARD", "    //", "    // Only valid for PC OpenGL currently.", "    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.", "    //", "    // 1 = Use discard on pixels which don't need AA.", "    //     For APIs which enable concurrent TEX+ROP from same surface.", "    // 0 = Return unchanged color on pixels which don't need AA.", "    //", "    #define FXAA_DISCARD 0", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_FAST_PIXEL_OFFSET", "    //", "    // Used for GLSL 120 only.", "    //", "    // 1 = GL API supports fast pixel offsets", "    // 0 = do not use fast pixel offsets", "    //", "    #ifdef GL_EXT_gpu_shader4", "        #define FXAA_FAST_PIXEL_OFFSET 1", "    #endif", "    #ifdef GL_NV_gpu_shader5", "        #define FXAA_FAST_PIXEL_OFFSET 1", "    #endif", "    #ifdef GL_ARB_gpu_shader5", "        #define FXAA_FAST_PIXEL_OFFSET 1", "    #endif", "    #ifndef FXAA_FAST_PIXEL_OFFSET", "        #define FXAA_FAST_PIXEL_OFFSET 0", "    #endif", "#endif", "/*--------------------------------------------------------------------------*/", "#ifndef FXAA_GATHER4_ALPHA", "    //", "    // 1 = API supports gather4 on alpha channel.", "    // 0 = API does not support gather4 on alpha channel.", "    //", "    #if (FXAA_HLSL_5 == 1)", "        #define FXAA_GATHER4_ALPHA 1", "    #endif", "    #ifdef GL_ARB_gpu_shader5", "        #define FXAA_GATHER4_ALPHA 1", "    #endif", "    #ifdef GL_NV_gpu_shader5", "        #define FXAA_GATHER4_ALPHA 1", "    #endif", "    #ifndef FXAA_GATHER4_ALPHA", "        #define FXAA_GATHER4_ALPHA 0", "    #endif", "#endif", "", "", "/*============================================================================", "                        FXAA QUALITY - TUNING KNOBS", "------------------------------------------------------------------------------", "NOTE the other tuning knobs are now in the shader function inputs!", "============================================================================*/", "#ifndef FXAA_QUALITY_PRESET", "    //", "    // Choose the quality preset.", "    // This needs to be compiled into the shader as it effects code.", "    // Best option to include multiple presets is to", "    // in each shader define the preset, then include this file.", "    //", "    // OPTIONS", "    // -----------------------------------------------------------------------", "    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)", "    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)", "    // 39       - no dither, very expensive", "    //", "    // NOTES", "    // -----------------------------------------------------------------------", "    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)", "    // 13 = about same speed as FXAA 3.9 and better than 12", "    // 23 = closest to FXAA 3.9 visually and performance wise", "    //  _ = the lowest digit is directly related to performance", "    // _  = the highest digit is directly related to style", "    //", "    #define FXAA_QUALITY_PRESET 12", "#endif", "", "", "/*============================================================================", "", "                           FXAA QUALITY - PRESETS", "", "============================================================================*/", "", "/*============================================================================", "                     FXAA QUALITY - MEDIUM DITHER PRESETS", "============================================================================*/", "#if (FXAA_QUALITY_PRESET == 10)", "    #define FXAA_QUALITY_PS 3", "    #define FXAA_QUALITY_P0 1.5", "    #define FXAA_QUALITY_P1 3.0", "    #define FXAA_QUALITY_P2 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 11)", "    #define FXAA_QUALITY_PS 4", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 3.0", "    #define FXAA_QUALITY_P3 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 12)", "    #define FXAA_QUALITY_PS 5", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 4.0", "    #define FXAA_QUALITY_P4 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 13)", "    #define FXAA_QUALITY_PS 6", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 4.0", "    #define FXAA_QUALITY_P5 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 14)", "    #define FXAA_QUALITY_PS 7", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 4.0", "    #define FXAA_QUALITY_P6 12.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 15)", "    #define FXAA_QUALITY_PS 8", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 4.0", "    #define FXAA_QUALITY_P7 12.0", "#endif", "", "/*============================================================================", "                     FXAA QUALITY - LOW DITHER PRESETS", "============================================================================*/", "#if (FXAA_QUALITY_PRESET == 20)", "    #define FXAA_QUALITY_PS 3", "    #define FXAA_QUALITY_P0 1.5", "    #define FXAA_QUALITY_P1 2.0", "    #define FXAA_QUALITY_P2 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 21)", "    #define FXAA_QUALITY_PS 4", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 22)", "    #define FXAA_QUALITY_PS 5", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 23)", "    #define FXAA_QUALITY_PS 6", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 24)", "    #define FXAA_QUALITY_PS 7", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 3.0", "    #define FXAA_QUALITY_P6 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 25)", "    #define FXAA_QUALITY_PS 8", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 4.0", "    #define FXAA_QUALITY_P7 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 26)", "    #define FXAA_QUALITY_PS 9", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 4.0", "    #define FXAA_QUALITY_P8 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 27)", "    #define FXAA_QUALITY_PS 10", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 4.0", "    #define FXAA_QUALITY_P9 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 28)", "    #define FXAA_QUALITY_PS 11", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 2.0", "    #define FXAA_QUALITY_P9 4.0", "    #define FXAA_QUALITY_P10 8.0", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_QUALITY_PRESET == 29)", "    #define FXAA_QUALITY_PS 12", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.5", "    #define FXAA_QUALITY_P2 2.0", "    #define FXAA_QUALITY_P3 2.0", "    #define FXAA_QUALITY_P4 2.0", "    #define FXAA_QUALITY_P5 2.0", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 2.0", "    #define FXAA_QUALITY_P9 2.0", "    #define FXAA_QUALITY_P10 4.0", "    #define FXAA_QUALITY_P11 8.0", "#endif", "", "/*============================================================================", "                     FXAA QUALITY - EXTREME QUALITY", "============================================================================*/", "#if (FXAA_QUALITY_PRESET == 39)", "    #define FXAA_QUALITY_PS 12", "    #define FXAA_QUALITY_P0 1.0", "    #define FXAA_QUALITY_P1 1.0", "    #define FXAA_QUALITY_P2 1.0", "    #define FXAA_QUALITY_P3 1.0", "    #define FXAA_QUALITY_P4 1.0", "    #define FXAA_QUALITY_P5 1.5", "    #define FXAA_QUALITY_P6 2.0", "    #define FXAA_QUALITY_P7 2.0", "    #define FXAA_QUALITY_P8 2.0", "    #define FXAA_QUALITY_P9 2.0", "    #define FXAA_QUALITY_P10 4.0", "    #define FXAA_QUALITY_P11 8.0", "#endif", "", "", "", "/*============================================================================", "", "                                API PORTING", "", "============================================================================*/", "#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)", "    #define FxaaBool bool", "    #define FxaaDiscard discard", "    #define FxaaFloat float", "    #define FxaaFloat2 vec2", "    #define FxaaFloat3 vec3", "    #define FxaaFloat4 vec4", "    #define FxaaHalf float", "    #define FxaaHalf2 vec2", "    #define FxaaHalf3 vec3", "    #define FxaaHalf4 vec4", "    #define FxaaInt2 ivec2", "    #define FxaaSat(x) clamp(x, 0.0, 1.0)", "    #define FxaaTex sampler2D", "#else", "    #define FxaaBool bool", "    #define FxaaDiscard clip(-1)", "    #define FxaaFloat float", "    #define FxaaFloat2 float2", "    #define FxaaFloat3 float3", "    #define FxaaFloat4 float4", "    #define FxaaHalf half", "    #define FxaaHalf2 half2", "    #define FxaaHalf3 half3", "    #define FxaaHalf4 half4", "    #define FxaaSat(x) saturate(x)", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_GLSL_100 == 1)", "  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)", "  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_GLSL_120 == 1)", "    // Requires,", "    //  #version 120", "    // And at least,", "    //  #extension GL_EXT_gpu_shader4 : enable", "    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)", "    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)", "    #if (FXAA_FAST_PIXEL_OFFSET == 1)", "        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)", "    #else", "        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)", "    #endif", "    #if (FXAA_GATHER4_ALPHA == 1)", "        // use #extension GL_ARB_gpu_shader5 : enable", "        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)", "        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)", "        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)", "        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)", "    #endif", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_GLSL_130 == 1)", '    // Requires "#version 130" or better', "    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)", "    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)", "    #if (FXAA_GATHER4_ALPHA == 1)", "        // use #extension GL_ARB_gpu_shader5 : enable", "        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)", "        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)", "        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)", "        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)", "    #endif", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_HLSL_3 == 1)", "    #define FxaaInt2 float2", "    #define FxaaTex sampler2D", "    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))", "    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_HLSL_4 == 1)", "    #define FxaaInt2 int2", "    struct FxaaTex { SamplerState smpl; Texture2D tex; };", "    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)", "    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)", "#endif", "/*--------------------------------------------------------------------------*/", "#if (FXAA_HLSL_5 == 1)", "    #define FxaaInt2 int2", "    struct FxaaTex { SamplerState smpl; Texture2D tex; };", "    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)", "    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)", "    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)", "    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)", "    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)", "    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)", "#endif", "", "", "/*============================================================================", "                   GREEN AS LUMA OPTION SUPPORT FUNCTION", "============================================================================*/", "#if (FXAA_GREEN_AS_LUMA == 0)", "    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }", "#else", "    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }", "#endif", "", "", "", "", "/*============================================================================", "", "                             FXAA3 QUALITY - PC", "", "============================================================================*/", "#if (FXAA_PC == 1)", "/*--------------------------------------------------------------------------*/", "FxaaFloat4 FxaaPixelShader(", "    //", "    // Use noperspective interpolation here (turn off perspective interpolation).", "    // {xy} = center of pixel", "    FxaaFloat2 pos,", "    //", "    // Used only for FXAA Console, and not used on the 360 version.", "    // Use noperspective interpolation here (turn off perspective interpolation).", "    // {xy_} = upper left of pixel", "    // {_zw} = lower right of pixel", "    FxaaFloat4 fxaaConsolePosPos,", "    //", "    // Input color texture.", "    // {rgb_} = color in linear or perceptual color space", "    // if (FXAA_GREEN_AS_LUMA == 0)", "    //     {__a} = luma in perceptual color space (not linear)", "    FxaaTex tex,", "    //", "    // Only used on the optimized 360 version of FXAA Console.", '    // For everything but 360, just use the same input here as for "tex".', "    // For 360, same texture, just alias with a 2nd sampler.", "    // This sampler needs to have an exponent bias of -1.", "    FxaaTex fxaaConsole360TexExpBiasNegOne,", "    //", "    // Only used on the optimized 360 version of FXAA Console.", '    // For everything but 360, just use the same input here as for "tex".', "    // For 360, same texture, just alias with a 3nd sampler.", "    // This sampler needs to have an exponent bias of -2.", "    FxaaTex fxaaConsole360TexExpBiasNegTwo,", "    //", "    // Only used on FXAA Quality.", "    // This must be from a constant/uniform.", "    // {x_} = 1.0/screenWidthInPixels", "    // {_y} = 1.0/screenHeightInPixels", "    FxaaFloat2 fxaaQualityRcpFrame,", "    //", "    // Only used on FXAA Console.", "    // This must be from a constant/uniform.", "    // This effects sub-pixel AA quality and inversely sharpness.", "    //   Where N ranges between,", "    //     N = 0.50 (default)", "    //     N = 0.33 (sharper)", "    // {x__} = -N/screenWidthInPixels", "    // {_y_} = -N/screenHeightInPixels", "    // {_z_} =  N/screenWidthInPixels", "    // {__w} =  N/screenHeightInPixels", "    FxaaFloat4 fxaaConsoleRcpFrameOpt,", "    //", "    // Only used on FXAA Console.", "    // Not used on 360, but used on PS3 and PC.", "    // This must be from a constant/uniform.", "    // {x__} = -2.0/screenWidthInPixels", "    // {_y_} = -2.0/screenHeightInPixels", "    // {_z_} =  2.0/screenWidthInPixels", "    // {__w} =  2.0/screenHeightInPixels", "    FxaaFloat4 fxaaConsoleRcpFrameOpt2,", "    //", "    // Only used on FXAA Console.", "    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.", "    // This must be from a constant/uniform.", "    // {x__} =  8.0/screenWidthInPixels", "    // {_y_} =  8.0/screenHeightInPixels", "    // {_z_} = -4.0/screenWidthInPixels", "    // {__w} = -4.0/screenHeightInPixels", "    FxaaFloat4 fxaaConsole360RcpFrameOpt2,", "    //", "    // Only used on FXAA Quality.", "    // This used to be the FXAA_QUALITY_SUBPIX define.", "    // It is here now to allow easier tuning.", "    // Choose the amount of sub-pixel aliasing removal.", "    // This can effect sharpness.", "    //   1.00 - upper limit (softer)", "    //   0.75 - default amount of filtering", "    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)", "    //   0.25 - almost off", "    //   0.00 - completely off", "    FxaaFloat fxaaQualitySubpix,", "    //", "    // Only used on FXAA Quality.", "    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.", "    // It is here now to allow easier tuning.", "    // The minimum amount of local contrast required to apply algorithm.", "    //   0.333 - too little (faster)", "    //   0.250 - low quality", "    //   0.166 - default", "    //   0.125 - high quality", "    //   0.063 - overkill (slower)", "    FxaaFloat fxaaQualityEdgeThreshold,", "    //", "    // Only used on FXAA Quality.", "    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.", "    // It is here now to allow easier tuning.", "    // Trims the algorithm from processing darks.", "    //   0.0833 - upper limit (default, the start of visible unfiltered edges)", "    //   0.0625 - high quality (faster)", "    //   0.0312 - visible limit (slower)", "    // Special notes when using FXAA_GREEN_AS_LUMA,", "    //   Likely want to set this to zero.", "    //   As colors that are mostly not-green", "    //   will appear very dark in the green channel!", "    //   Tune by looking at mostly non-green content,", "    //   then start at zero and increase until aliasing is a problem.", "    FxaaFloat fxaaQualityEdgeThresholdMin,", "    //", "    // Only used on FXAA Console.", "    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.", "    // It is here now to allow easier tuning.", "    // This does not effect PS3, as this needs to be compiled in.", "    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.", "    //   Due to the PS3 being ALU bound,", "    //   there are only three safe values here: 2 and 4 and 8.", "    //   These options use the shaders ability to a free *|/ by 2|4|8.", "    // For all other platforms can be a non-power of two.", "    //   8.0 is sharper (default!!!)", "    //   4.0 is softer", "    //   2.0 is really soft (good only for vector graphics inputs)", "    FxaaFloat fxaaConsoleEdgeSharpness,", "    //", "    // Only used on FXAA Console.", "    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.", "    // It is here now to allow easier tuning.", "    // This does not effect PS3, as this needs to be compiled in.", "    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.", "    //   Due to the PS3 being ALU bound,", "    //   there are only two safe values here: 1/4 and 1/8.", "    //   These options use the shaders ability to a free *|/ by 2|4|8.", "    // The console setting has a different mapping than the quality setting.", "    // Other platforms can use other values.", "    //   0.125 leaves less aliasing, but is softer (default!!!)", "    //   0.25 leaves more aliasing, and is sharper", "    FxaaFloat fxaaConsoleEdgeThreshold,", "    //", "    // Only used on FXAA Console.", "    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.", "    // It is here now to allow easier tuning.", "    // Trims the algorithm from processing darks.", "    // The console setting has a different mapping than the quality setting.", "    // This only applies when FXAA_EARLY_EXIT is 1.", "    // This does not apply to PS3,", "    // PS3 was simplified to avoid more shader instructions.", "    //   0.06 - faster but more aliasing in darks", "    //   0.05 - default", "    //   0.04 - slower and less aliasing in darks", "    // Special notes when using FXAA_GREEN_AS_LUMA,", "    //   Likely want to set this to zero.", "    //   As colors that are mostly not-green", "    //   will appear very dark in the green channel!", "    //   Tune by looking at mostly non-green content,", "    //   then start at zero and increase until aliasing is a problem.", "    FxaaFloat fxaaConsoleEdgeThresholdMin,", "    //", "    // Extra constants for 360 FXAA Console only.", "    // Use zeros or anything else for other platforms.", "    // These must be in physical constant registers and NOT immediates.", "    // Immediates will result in compiler un-optimizing.", "    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)", "    FxaaFloat4 fxaaConsole360ConstDir", ") {", "/*--------------------------------------------------------------------------*/", "    FxaaFloat2 posM;", "    posM.x = pos.x;", "    posM.y = pos.y;", "    #if (FXAA_GATHER4_ALPHA == 1)", "        #if (FXAA_DISCARD == 0)", "            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);", "            #if (FXAA_GREEN_AS_LUMA == 0)", "                #define lumaM rgbyM.w", "            #else", "                #define lumaM rgbyM.y", "            #endif", "        #endif", "        #if (FXAA_GREEN_AS_LUMA == 0)", "            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);", "            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));", "        #else", "            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);", "            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));", "        #endif", "        #if (FXAA_DISCARD == 1)", "            #define lumaM luma4A.w", "        #endif", "        #define lumaE luma4A.z", "        #define lumaS luma4A.x", "        #define lumaSE luma4A.y", "        #define lumaNW luma4B.w", "        #define lumaN luma4B.z", "        #define lumaW luma4B.x", "    #else", "        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);", "        #if (FXAA_GREEN_AS_LUMA == 0)", "            #define lumaM rgbyM.w", "        #else", "            #define lumaM rgbyM.y", "        #endif", "        #if (FXAA_GLSL_100 == 1)", "          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));", "        #else", "          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));", "        #endif", "    #endif", "/*--------------------------------------------------------------------------*/", "    FxaaFloat maxSM = max(lumaS, lumaM);", "    FxaaFloat minSM = min(lumaS, lumaM);", "    FxaaFloat maxESM = max(lumaE, maxSM);", "    FxaaFloat minESM = min(lumaE, minSM);", "    FxaaFloat maxWN = max(lumaN, lumaW);", "    FxaaFloat minWN = min(lumaN, lumaW);", "    FxaaFloat rangeMax = max(maxWN, maxESM);", "    FxaaFloat rangeMin = min(minWN, minESM);", "    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;", "    FxaaFloat range = rangeMax - rangeMin;", "    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);", "    FxaaBool earlyExit = range < rangeMaxClamped;", "/*--------------------------------------------------------------------------*/", "    if(earlyExit)", "        #if (FXAA_DISCARD == 1)", "            FxaaDiscard;", "        #else", "            return rgbyM;", "        #endif", "/*--------------------------------------------------------------------------*/", "    #if (FXAA_GATHER4_ALPHA == 0)", "        #if (FXAA_GLSL_100 == 1)", "          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));", "        #else", "          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));", "          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));", "        #endif", "    #else", "        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));", "        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));", "    #endif", "/*--------------------------------------------------------------------------*/", "    FxaaFloat lumaNS = lumaN + lumaS;", "    FxaaFloat lumaWE = lumaW + lumaE;", "    FxaaFloat subpixRcpRange = 1.0/range;", "    FxaaFloat subpixNSWE = lumaNS + lumaWE;", "    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;", "    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat lumaNESE = lumaNE + lumaSE;", "    FxaaFloat lumaNWNE = lumaNW + lumaNE;", "    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;", "    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat lumaNWSW = lumaNW + lumaSW;", "    FxaaFloat lumaSWSE = lumaSW + lumaSE;", "    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);", "    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);", "    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;", "    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;", "    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;", "    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;", "    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;", "    FxaaBool horzSpan = edgeHorz >= edgeVert;", "    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;", "/*--------------------------------------------------------------------------*/", "    if(!horzSpan) lumaN = lumaW;", "    if(!horzSpan) lumaS = lumaE;", "    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;", "    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat gradientN = lumaN - lumaM;", "    FxaaFloat gradientS = lumaS - lumaM;", "    FxaaFloat lumaNN = lumaN + lumaM;", "    FxaaFloat lumaSS = lumaS + lumaM;", "    FxaaBool pairN = abs(gradientN) >= abs(gradientS);", "    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));", "    if(pairN) lengthSign = -lengthSign;", "    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);", "/*--------------------------------------------------------------------------*/", "    FxaaFloat2 posB;", "    posB.x = posM.x;", "    posB.y = posM.y;", "    FxaaFloat2 offNP;", "    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;", "    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;", "    if(!horzSpan) posB.x += lengthSign * 0.5;", "    if( horzSpan) posB.y += lengthSign * 0.5;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat2 posN;", "    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;", "    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;", "    FxaaFloat2 posP;", "    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;", "    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;", "    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;", "    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));", "    FxaaFloat subpixE = subpixC * subpixC;", "    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));", "/*--------------------------------------------------------------------------*/", "    if(!pairN) lumaNN = lumaSS;", "    FxaaFloat gradientScaled = gradient * 1.0/4.0;", "    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;", "    FxaaFloat subpixF = subpixD * subpixE;", "    FxaaBool lumaMLTZero = lumaMM < 0.0;", "/*--------------------------------------------------------------------------*/", "    lumaEndN -= lumaNN * 0.5;", "    lumaEndP -= lumaNN * 0.5;", "    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;", "    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;", "    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;", "    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;", "    FxaaBool doneNP = (!doneN) || (!doneP);", "    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;", "    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;", "/*--------------------------------------------------------------------------*/", "    if(doneNP) {", "        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "        doneN = abs(lumaEndN) >= gradientScaled;", "        doneP = abs(lumaEndP) >= gradientScaled;", "        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;", "        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;", "        doneNP = (!doneN) || (!doneP);", "        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;", "        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;", "/*--------------------------------------------------------------------------*/", "        #if (FXAA_QUALITY_PS > 3)", "        if(doneNP) {", "            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "            doneN = abs(lumaEndN) >= gradientScaled;", "            doneP = abs(lumaEndP) >= gradientScaled;", "            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;", "            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;", "            doneNP = (!doneN) || (!doneP);", "            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;", "            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;", "/*--------------------------------------------------------------------------*/", "            #if (FXAA_QUALITY_PS > 4)", "            if(doneNP) {", "                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                doneN = abs(lumaEndN) >= gradientScaled;", "                doneP = abs(lumaEndP) >= gradientScaled;", "                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;", "                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;", "                doneNP = (!doneN) || (!doneP);", "                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;", "                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;", "/*--------------------------------------------------------------------------*/", "                #if (FXAA_QUALITY_PS > 5)", "                if(doneNP) {", "                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                    doneN = abs(lumaEndN) >= gradientScaled;", "                    doneP = abs(lumaEndP) >= gradientScaled;", "                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;", "                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;", "                    doneNP = (!doneN) || (!doneP);", "                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;", "                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;", "/*--------------------------------------------------------------------------*/", "                    #if (FXAA_QUALITY_PS > 6)", "                    if(doneNP) {", "                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                        doneN = abs(lumaEndN) >= gradientScaled;", "                        doneP = abs(lumaEndP) >= gradientScaled;", "                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;", "                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;", "                        doneNP = (!doneN) || (!doneP);", "                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;", "                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;", "/*--------------------------------------------------------------------------*/", "                        #if (FXAA_QUALITY_PS > 7)", "                        if(doneNP) {", "                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                            doneN = abs(lumaEndN) >= gradientScaled;", "                            doneP = abs(lumaEndP) >= gradientScaled;", "                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;", "                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;", "                            doneNP = (!doneN) || (!doneP);", "                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;", "                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;", "/*--------------------------------------------------------------------------*/", "    #if (FXAA_QUALITY_PS > 8)", "    if(doneNP) {", "        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "        doneN = abs(lumaEndN) >= gradientScaled;", "        doneP = abs(lumaEndP) >= gradientScaled;", "        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;", "        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;", "        doneNP = (!doneN) || (!doneP);", "        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;", "        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;", "/*--------------------------------------------------------------------------*/", "        #if (FXAA_QUALITY_PS > 9)", "        if(doneNP) {", "            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "            doneN = abs(lumaEndN) >= gradientScaled;", "            doneP = abs(lumaEndP) >= gradientScaled;", "            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;", "            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;", "            doneNP = (!doneN) || (!doneP);", "            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;", "            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;", "/*--------------------------------------------------------------------------*/", "            #if (FXAA_QUALITY_PS > 10)", "            if(doneNP) {", "                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                doneN = abs(lumaEndN) >= gradientScaled;", "                doneP = abs(lumaEndP) >= gradientScaled;", "                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;", "                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;", "                doneNP = (!doneN) || (!doneP);", "                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;", "                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;", "/*--------------------------------------------------------------------------*/", "                #if (FXAA_QUALITY_PS > 11)", "                if(doneNP) {", "                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                    doneN = abs(lumaEndN) >= gradientScaled;", "                    doneP = abs(lumaEndP) >= gradientScaled;", "                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;", "                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;", "                    doneNP = (!doneN) || (!doneP);", "                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;", "                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;", "/*--------------------------------------------------------------------------*/", "                    #if (FXAA_QUALITY_PS > 12)", "                    if(doneNP) {", "                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));", "                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));", "                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;", "                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;", "                        doneN = abs(lumaEndN) >= gradientScaled;", "                        doneP = abs(lumaEndP) >= gradientScaled;", "                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;", "                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;", "                        doneNP = (!doneN) || (!doneP);", "                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;", "                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;", "/*--------------------------------------------------------------------------*/", "                    }", "                    #endif", "/*--------------------------------------------------------------------------*/", "                }", "                #endif", "/*--------------------------------------------------------------------------*/", "            }", "            #endif", "/*--------------------------------------------------------------------------*/", "        }", "        #endif", "/*--------------------------------------------------------------------------*/", "    }", "    #endif", "/*--------------------------------------------------------------------------*/", "                        }", "                        #endif", "/*--------------------------------------------------------------------------*/", "                    }", "                    #endif", "/*--------------------------------------------------------------------------*/", "                }", "                #endif", "/*--------------------------------------------------------------------------*/", "            }", "            #endif", "/*--------------------------------------------------------------------------*/", "        }", "        #endif", "/*--------------------------------------------------------------------------*/", "    }", "/*--------------------------------------------------------------------------*/", "    FxaaFloat dstN = posM.x - posN.x;", "    FxaaFloat dstP = posP.x - posM.x;", "    if(!horzSpan) dstN = posM.y - posN.y;", "    if(!horzSpan) dstP = posP.y - posM.y;", "/*--------------------------------------------------------------------------*/", "    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;", "    FxaaFloat spanLength = (dstP + dstN);", "    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;", "    FxaaFloat spanLengthRcp = 1.0/spanLength;", "/*--------------------------------------------------------------------------*/", "    FxaaBool directionN = dstN < dstP;", "    FxaaFloat dst = min(dstN, dstP);", "    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;", "    FxaaFloat subpixG = subpixF * subpixF;", "    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;", "    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;", "/*--------------------------------------------------------------------------*/", "    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;", "    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);", "    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;", "    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;", "    #if (FXAA_DISCARD == 1)", "        return FxaaTexTop(tex, posM);", "    #else", "        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);", "    #endif", "}", "/*==========================================================================*/", "#endif", "", "void main() {", "  gl_FragColor = FxaaPixelShader(", "    vUv,", "    vec4(0.0),", "    tDiffuse,", "    tDiffuse,", "    tDiffuse,", "    resolution,", "    vec4(0.0),", "    vec4(0.0),", "    vec4(0.0),", "    0.75,", "    0.166,", "    0.0833,", "    0.0,", "    0.0,", "    0.0,", "    vec4(0.0)", "  );", "", "  // TODO avoid querying texture twice for same texel", "  gl_FragColor.a = texture2D(tDiffuse, vUv).a;", "}"].join("\n")};
}, function (e, t) {
  var n, i, r;
  THREE.EffectComposer = function (e, t) {
    if (this.renderer = e, undefined === t) {
      var n = {minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, stencilBuffer: false}, i = e.getSize(new THREE.Vector2);
      this._pixelRatio = e.getPixelRatio(), this._width = i.width, this._height = i.height, (t = new THREE.WebGLRenderTarget(this._width * this._pixelRatio, this._height * this._pixelRatio, n)).texture.name = "EffectComposer.rt1";
    } else this._pixelRatio = 1, this._width = t.width, this._height = t.height;
    this.renderTarget1 = t, this.renderTarget2 = t.clone(), this.renderTarget2.texture.name = "EffectComposer.rt2", this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2, this.renderToScreen = true, this.passes = [], undefined === THREE.CopyShader && console.error("THREE.EffectComposer relies on THREE.CopyShader"), undefined === THREE.ShaderPass && console.error("THREE.EffectComposer relies on THREE.ShaderPass"), this.copyPass = new THREE.ShaderPass(THREE.CopyShader), this.clock = new THREE.Clock;
  }, Object.assign(THREE.EffectComposer.prototype, {swapBuffers: function () {
    var e = this.readBuffer;
    this.readBuffer = this.writeBuffer, this.writeBuffer = e;
  }, addPass: function (e) {
    this.passes.push(e), e.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);
  }, insertPass: function (e, t) {
    this.passes.splice(t, 0, e);
  }, isLastEnabledPass: function (e) {
    for (var t = e + 1; t < this.passes.length; t++) if (this.passes[t].enabled) return false;
    return true;
  }, render: function (e) {
    undefined === e && (e = this.clock.getDelta());
    var t, n, i = this.renderer.getRenderTarget(), r = false, o = this.passes.length;
    for (n = 0; n < o; n++) if (false !== (t = this.passes[n]).enabled) {
      if (t.renderToScreen = this.renderToScreen && this.isLastEnabledPass(n), t.render(this.renderer, this.writeBuffer, this.readBuffer, e, r), t.needsSwap) {
        if (r) {
          var s = this.renderer.getContext(), a = this.renderer.state.buffers.stencil;
          a.setFunc(s.NOTEQUAL, 1, 4294967295), this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, e), a.setFunc(s.EQUAL, 1, 4294967295);
        }
        this.swapBuffers();
      }
      undefined !== THREE.MaskPass && (t instanceof THREE.MaskPass ? r = true : t instanceof THREE.ClearMaskPass && (r = false));
    }
    this.renderer.setRenderTarget(i);
  }, reset: function (e) {
    if (undefined === e) {
      var t = this.renderer.getSize(new THREE.Vector2);
      this._pixelRatio = this.renderer.getPixelRatio(), this._width = t.width, this._height = t.height, (e = this.renderTarget1.clone()).setSize(this._width * this._pixelRatio, this._height * this._pixelRatio);
    }
    this.renderTarget1.dispose(), this.renderTarget2.dispose(), this.renderTarget1 = e, this.renderTarget2 = e.clone(), this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2;
  }, setSize: function (e, t) {
    this._width = e, this._height = t;
    var n = this._width * this._pixelRatio, i = this._height * this._pixelRatio;
    this.renderTarget1.setSize(n, i), this.renderTarget2.setSize(n, i);
    for (var r = 0; r < this.passes.length; r++) this.passes[r].setSize(n, i);
  }, setPixelRatio: function (e) {
    this._pixelRatio = e, this.setSize(this._width, this._height);
  }}), THREE.Pass = function () {
    this.enabled = true, this.needsSwap = true, this.clear = false, this.renderToScreen = false;
  }, Object.assign(THREE.Pass.prototype, {setSize: function () {}, render: function () {
    console.error("THREE.Pass: .render() must be implemented in derived pass.");
  }}), THREE.Pass.FullScreenQuad = (n = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1), i = new THREE.PlaneBufferGeometry(2, 2), r = function (e) {
    this._mesh = new THREE.Mesh(i, e);
  }, Object.defineProperty(r.prototype, "material", {get: function () {
    return this._mesh.material;
  }, set: function (e) {
    this._mesh.material = e;
  }}), Object.assign(r.prototype, {render: function (e) {
    e.render(this._mesh, n);
  }}), r);
}, function (e, t) {
  THREE.RenderPass = function (e, t, n, i, r) {
    THREE.Pass.call(this), this.scene = e, this.camera = t, this.overrideMaterial = n, this.clearColor = i, this.clearAlpha = undefined !== r ? r : 0, this.clear = true, this.clearDepth = false, this.needsSwap = false;
  }, THREE.RenderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {constructor: THREE.RenderPass, render: function (e, t, n) {
    var i, r, o = e.autoClear;
    e.autoClear = false, this.scene.overrideMaterial = this.overrideMaterial, this.clearColor && (i = e.getClearColor().getHex(), r = e.getClearAlpha(), e.setClearColor(this.clearColor, this.clearAlpha)), this.clearDepth && e.clearDepth(), e.setRenderTarget(this.renderToScreen ? null : n), this.clear && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), e.render(this.scene, this.camera), this.clearColor && e.setClearColor(i, r), this.scene.overrideMaterial = null, e.autoClear = o;
  }});
}, function (e, t) {
  THREE.ShaderPass = function (e, t) {
    THREE.Pass.call(this), this.textureID = undefined !== t ? t : "tDiffuse", e instanceof THREE.ShaderMaterial ? (this.uniforms = e.uniforms, this.material = e) : e && (this.uniforms = THREE.UniformsUtils.clone(e.uniforms), this.material = new THREE.ShaderMaterial({defines: Object.assign({}, e.defines), uniforms: this.uniforms, vertexShader: e.vertexShader, fragmentShader: e.fragmentShader})), this.fsQuad = new THREE.Pass.FullScreenQuad(this.material);
  }, THREE.ShaderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {constructor: THREE.ShaderPass, render: function (e, t, n) {
    this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = n.texture), this.fsQuad.material = this.material, this.renderToScreen ? (e.setRenderTarget(null), this.fsQuad.render(e)) : (e.setRenderTarget(t), this.clear && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), this.fsQuad.render(e));
  }});
}, function (e, t) {
  THREE.OutlinePass = function (e, t, n, i) {
    this.renderScene = t, this.renderCamera = n, this.selectedObjects = undefined !== i ? i : [], this.visibleEdgeColor = new THREE.Color(1, 1, 1), this.hiddenEdgeColor = new THREE.Color(0.1, 0.04, 0.02), this.edgeGlow = 0, this.usePatternTexture = false, this.edgeThickness = 1, this.edgeStrength = 3, this.downSampleRatio = 2, this.pulsePeriod = 0, THREE.Pass.call(this), this.resolution = undefined !== e ? new THREE.Vector2(e.x, e.y) : new THREE.Vector2(256, 256);
    var r = {minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat}, o = Math.round(this.resolution.x / this.downSampleRatio), s = Math.round(this.resolution.y / this.downSampleRatio);
    this.maskBufferMaterial = new THREE.MeshBasicMaterial({color: 16777215}), this.maskBufferMaterial.side = THREE.DoubleSide, this.renderTargetMaskBuffer = new THREE.WebGLRenderTarget(this.resolution.x, this.resolution.y, r), this.renderTargetMaskBuffer.texture.name = "OutlinePass.mask", this.renderTargetMaskBuffer.texture.generateMipmaps = false, this.depthMaterial = new THREE.MeshDepthMaterial, this.depthMaterial.side = THREE.DoubleSide, this.depthMaterial.depthPacking = THREE.RGBADepthPacking, this.depthMaterial.blending = THREE.NoBlending, this.prepareMaskMaterial = this.getPrepareMaskMaterial(), this.prepareMaskMaterial.side = THREE.DoubleSide, this.prepareMaskMaterial.fragmentShader = function (e, t) {
      var n = t.isPerspectiveCamera ? "perspective" : "orthographic";
      return e.replace(/DEPTH_TO_VIEW_Z/g, n + "DepthToViewZ");
    }(this.prepareMaskMaterial.fragmentShader, this.renderCamera), this.renderTargetDepthBuffer = new THREE.WebGLRenderTarget(this.resolution.x, this.resolution.y, r), this.renderTargetDepthBuffer.texture.name = "OutlinePass.depth", this.renderTargetDepthBuffer.texture.generateMipmaps = false, this.renderTargetMaskDownSampleBuffer = new THREE.WebGLRenderTarget(o, s, r), this.renderTargetMaskDownSampleBuffer.texture.name = "OutlinePass.depthDownSample", this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps = false, this.renderTargetBlurBuffer1 = new THREE.WebGLRenderTarget(o, s, r), this.renderTargetBlurBuffer1.texture.name = "OutlinePass.blur1", this.renderTargetBlurBuffer1.texture.generateMipmaps = false, this.renderTargetBlurBuffer2 = new THREE.WebGLRenderTarget(Math.round(o / 2), Math.round(s / 2), r), this.renderTargetBlurBuffer2.texture.name = "OutlinePass.blur2", this.renderTargetBlurBuffer2.texture.generateMipmaps = false, this.edgeDetectionMaterial = this.getEdgeDetectionMaterial(), this.renderTargetEdgeBuffer1 = new THREE.WebGLRenderTarget(o, s, r), this.renderTargetEdgeBuffer1.texture.name = "OutlinePass.edge1", this.renderTargetEdgeBuffer1.texture.generateMipmaps = false, this.renderTargetEdgeBuffer2 = new THREE.WebGLRenderTarget(Math.round(o / 2), Math.round(s / 2), r), this.renderTargetEdgeBuffer2.texture.name = "OutlinePass.edge2", this.renderTargetEdgeBuffer2.texture.generateMipmaps = false;
    this.separableBlurMaterial1 = this.getSeperableBlurMaterial(4), this.separableBlurMaterial1.uniforms.texSize.value = new THREE.Vector2(o, s), this.separableBlurMaterial1.uniforms.kernelRadius.value = 1, this.separableBlurMaterial2 = this.getSeperableBlurMaterial(4), this.separableBlurMaterial2.uniforms.texSize.value = new THREE.Vector2(Math.round(o / 2), Math.round(s / 2)), this.separableBlurMaterial2.uniforms.kernelRadius.value = 4, this.overlayMaterial = this.getOverlayMaterial(), undefined === THREE.CopyShader && console.error("THREE.OutlinePass relies on THREE.CopyShader");
    var a = THREE.CopyShader;
    this.copyUniforms = THREE.UniformsUtils.clone(a.uniforms), this.copyUniforms.opacity.value = 1, this.materialCopy = new THREE.ShaderMaterial({uniforms: this.copyUniforms, vertexShader: a.vertexShader, fragmentShader: a.fragmentShader, blending: THREE.NoBlending, depthTest: false, depthWrite: false, transparent: true}), this.enabled = true, this.needsSwap = false, this.oldClearColor = new THREE.Color, this.oldClearAlpha = 1, this.fsQuad = new THREE.Pass.FullScreenQuad(null), this.tempPulseColor1 = new THREE.Color, this.tempPulseColor2 = new THREE.Color, this.textureMatrix = new THREE.Matrix4;
  }, THREE.OutlinePass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {constructor: THREE.OutlinePass, dispose: function () {
    this.renderTargetMaskBuffer.dispose(), this.renderTargetDepthBuffer.dispose(), this.renderTargetMaskDownSampleBuffer.dispose(), this.renderTargetBlurBuffer1.dispose(), this.renderTargetBlurBuffer2.dispose(), this.renderTargetEdgeBuffer1.dispose(), this.renderTargetEdgeBuffer2.dispose();
  }, setSize: function (e, t) {
    this.renderTargetMaskBuffer.setSize(e, t);
    var n = Math.round(e / this.downSampleRatio), i = Math.round(t / this.downSampleRatio);
    this.renderTargetMaskDownSampleBuffer.setSize(n, i), this.renderTargetBlurBuffer1.setSize(n, i), this.renderTargetEdgeBuffer1.setSize(n, i), this.separableBlurMaterial1.uniforms.texSize.value = new THREE.Vector2(n, i), n = Math.round(n / 2), i = Math.round(i / 2), this.renderTargetBlurBuffer2.setSize(n, i), this.renderTargetEdgeBuffer2.setSize(n, i), this.separableBlurMaterial2.uniforms.texSize.value = new THREE.Vector2(n, i);
  }, changeVisibilityOfSelectedObjects: function (e) {
    function t(t) {
      t.isMesh && (e ? (t.visible = t.userData.oldVisible, delete t.userData.oldVisible) : (t.userData.oldVisible = t.visible, t.visible = e));
    }
    for (var n = 0; n < this.selectedObjects.length; n++) {
      this.selectedObjects[n].traverse(t);
    }
  }, changeVisibilityOfNonSelectedObjects: function (e) {
    var t = [];
    function n(e) {
      e.isMesh && t.push(e);
    }
    for (var i = 0; i < this.selectedObjects.length; i++) {
      this.selectedObjects[i].traverse(n);
    }
    this.renderScene.traverse(function (n) {
      if (n.isMesh || n.isLine || n.isSprite) {
        for (var i = false, r = 0; r < t.length; r++) {
          if (t[r].id === n.id) {
            i = true;
            break;
          }
        }
        if (!i) {
          var o = n.visible;
          e && !n.bVisible || (n.visible = e), n.bVisible = o;
        }
      }
    });
  }, updateTextureMatrix: function () {
    this.textureMatrix.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), this.textureMatrix.multiply(this.renderCamera.projectionMatrix), this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse);
  }, render: function (e, t, n, i, r) {
    if (this.selectedObjects.length > 0) {
      this.oldClearColor.copy(e.getClearColor()), this.oldClearAlpha = e.getClearAlpha();
      var o = e.autoClear;
      e.autoClear = false, r && e.state.buffers.stencil.setTest(false), e.setClearColor(16777215, 1), this.changeVisibilityOfSelectedObjects(false);
      var s = this.renderScene.background;
      if (this.renderScene.background = null, this.renderScene.overrideMaterial = this.depthMaterial, e.setRenderTarget(this.renderTargetDepthBuffer), e.clear(), e.render(this.renderScene, this.renderCamera), this.changeVisibilityOfSelectedObjects(true), this.updateTextureMatrix(), this.changeVisibilityOfNonSelectedObjects(false), this.renderScene.overrideMaterial = this.prepareMaskMaterial, this.prepareMaskMaterial.uniforms.cameraNearFar.value = new THREE.Vector2(this.renderCamera.near, this.renderCamera.far), this.prepareMaskMaterial.uniforms.depthTexture.value = this.renderTargetDepthBuffer.texture, this.prepareMaskMaterial.uniforms.textureMatrix.value = this.textureMatrix, e.setRenderTarget(this.renderTargetMaskBuffer), e.clear(), e.render(this.renderScene, this.renderCamera), this.renderScene.overrideMaterial = null, this.changeVisibilityOfNonSelectedObjects(true), this.renderScene.background = s, this.fsQuad.material = this.materialCopy, this.copyUniforms.tDiffuse.value = this.renderTargetMaskBuffer.texture, e.setRenderTarget(this.renderTargetMaskDownSampleBuffer), e.clear(), this.fsQuad.render(e), this.tempPulseColor1.copy(this.visibleEdgeColor), this.tempPulseColor2.copy(this.hiddenEdgeColor), this.pulsePeriod > 0) {
        var a = 0.625 + 0.75 * Math.cos(0.01 * performance.now() / this.pulsePeriod) / 2;
        this.tempPulseColor1.multiplyScalar(a), this.tempPulseColor2.multiplyScalar(a);
      }
      this.fsQuad.material = this.edgeDetectionMaterial, this.edgeDetectionMaterial.uniforms.maskTexture.value = this.renderTargetMaskDownSampleBuffer.texture, this.edgeDetectionMaterial.uniforms.texSize.value = new THREE.Vector2(this.renderTargetMaskDownSampleBuffer.width, this.renderTargetMaskDownSampleBuffer.height), this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value = this.tempPulseColor1, this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value = this.tempPulseColor2, e.setRenderTarget(this.renderTargetEdgeBuffer1), e.clear(), this.fsQuad.render(e), this.fsQuad.material = this.separableBlurMaterial1, this.separableBlurMaterial1.uniforms.colorTexture.value = this.renderTargetEdgeBuffer1.texture, this.separableBlurMaterial1.uniforms.direction.value = THREE.OutlinePass.BlurDirectionX, this.separableBlurMaterial1.uniforms.kernelRadius.value = this.edgeThickness, e.setRenderTarget(this.renderTargetBlurBuffer1), e.clear(), this.fsQuad.render(e), this.separableBlurMaterial1.uniforms.colorTexture.value = this.renderTargetBlurBuffer1.texture, this.separableBlurMaterial1.uniforms.direction.value = THREE.OutlinePass.BlurDirectionY, e.setRenderTarget(this.renderTargetEdgeBuffer1), e.clear(), this.fsQuad.render(e), this.fsQuad.material = this.separableBlurMaterial2, this.separableBlurMaterial2.uniforms.colorTexture.value = this.renderTargetEdgeBuffer1.texture, this.separableBlurMaterial2.uniforms.direction.value = THREE.OutlinePass.BlurDirectionX, e.setRenderTarget(this.renderTargetBlurBuffer2), e.clear(), this.fsQuad.render(e), this.separableBlurMaterial2.uniforms.colorTexture.value = this.renderTargetBlurBuffer2.texture, this.separableBlurMaterial2.uniforms.direction.value = THREE.OutlinePass.BlurDirectionY, e.setRenderTarget(this.renderTargetEdgeBuffer2), e.clear(), this.fsQuad.render(e), this.fsQuad.material = this.overlayMaterial, this.overlayMaterial.uniforms.maskTexture.value = this.renderTargetMaskBuffer.texture, this.overlayMaterial.uniforms.edgeTexture1.value = this.renderTargetEdgeBuffer1.texture, this.overlayMaterial.uniforms.edgeTexture2.value = this.renderTargetEdgeBuffer2.texture, this.overlayMaterial.uniforms.patternTexture.value = this.patternTexture, this.overlayMaterial.uniforms.edgeStrength.value = this.edgeStrength, this.overlayMaterial.uniforms.edgeGlow.value = this.edgeGlow, this.overlayMaterial.uniforms.usePatternTexture.value = this.usePatternTexture, r && e.state.buffers.stencil.setTest(true), e.setRenderTarget(n), this.fsQuad.render(e), e.setClearColor(this.oldClearColor, this.oldClearAlpha), e.autoClear = o;
    }
    this.renderToScreen && (this.fsQuad.material = this.materialCopy, this.copyUniforms.tDiffuse.value = n.texture, e.setRenderTarget(null), this.fsQuad.render(e));
  }, getPrepareMaskMaterial: function () {
    return new THREE.ShaderMaterial({uniforms: {depthTexture: {value: null}, cameraNearFar: {value: new THREE.Vector2(0.5, 0.5)}, textureMatrix: {value: new THREE.Matrix4}}, vertexShader: ["varying vec4 projTexCoord;", "varying vec4 vPosition;", "uniform mat4 textureMatrix;", "void main() {", "	vPosition = modelViewMatrix * vec4( position, 1.0 );", "	vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", "	projTexCoord = textureMatrix * worldPosition;", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"), fragmentShader: ["#include <packing>", "varying vec4 vPosition;", "varying vec4 projTexCoord;", "uniform sampler2D depthTexture;", "uniform vec2 cameraNearFar;", "void main() {", "	float depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));", "	float viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );", "	float depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;", "	gl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);", "}"].join("\n")});
  }, getEdgeDetectionMaterial: function () {
    return new THREE.ShaderMaterial({uniforms: {maskTexture: {value: null}, texSize: {value: new THREE.Vector2(0.5, 0.5)}, visibleEdgeColor: {value: new THREE.Vector3(1, 1, 1)}, hiddenEdgeColor: {value: new THREE.Vector3(1, 1, 1)}}, vertexShader: "varying vec2 vUv;\n				void main() {\n					vUv = uv;\n					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n				}", fragmentShader: "varying vec2 vUv;				uniform sampler2D maskTexture;				uniform vec2 texSize;				uniform vec3 visibleEdgeColor;				uniform vec3 hiddenEdgeColor;								void main() {\n					vec2 invSize = 1.0 / texSize;					vec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);					vec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);					vec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);					vec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);					vec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);					float diff1 = (c1.r - c2.r)*0.5;					float diff2 = (c3.r - c4.r)*0.5;					float d = length( vec2(diff1, diff2) );					float a1 = min(c1.g, c2.g);					float a2 = min(c3.g, c4.g);					float visibilityFactor = min(a1, a2);					vec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;					gl_FragColor = vec4(edgeColor, 1.0) * vec4(d);				}"});
  }, getSeperableBlurMaterial: function (e) {
    return new THREE.ShaderMaterial({defines: {MAX_RADIUS: e}, uniforms: {colorTexture: {value: null}, texSize: {value: new THREE.Vector2(0.5, 0.5)}, direction: {value: new THREE.Vector2(0.5, 0.5)}, kernelRadius: {value: 1}}, vertexShader: "varying vec2 vUv;\n				void main() {\n					vUv = uv;\n					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n				}", fragmentShader: "#include <common>				varying vec2 vUv;				uniform sampler2D colorTexture;				uniform vec2 texSize;				uniform vec2 direction;				uniform float kernelRadius;								float gaussianPdf(in float x, in float sigma) {					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;				}				void main() {					vec2 invSize = 1.0 / texSize;					float weightSum = gaussianPdf(0.0, kernelRadius);					vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;					vec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);					vec2 uvOffset = delta;					for( int i = 1; i <= MAX_RADIUS; i ++ ) {						float w = gaussianPdf(uvOffset.x, kernelRadius);						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;						diffuseSum += ((sample1 + sample2) * w);						weightSum += (2.0 * w);						uvOffset += delta;					}					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);				}"});
  }, getOverlayMaterial: function () {
    return new THREE.ShaderMaterial({uniforms: {maskTexture: {value: null}, edgeTexture1: {value: null}, edgeTexture2: {value: null}, patternTexture: {value: null}, edgeStrength: {value: 1}, edgeGlow: {value: 1}, usePatternTexture: {value: 0}}, vertexShader: "varying vec2 vUv;\n				void main() {\n					vUv = uv;\n					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n				}", fragmentShader: "varying vec2 vUv;				uniform sampler2D maskTexture;				uniform sampler2D edgeTexture1;				uniform sampler2D edgeTexture2;				uniform sampler2D patternTexture;				uniform float edgeStrength;				uniform float edgeGlow;				uniform bool usePatternTexture;								void main() {					vec4 edgeValue1 = texture2D(edgeTexture1, vUv);					vec4 edgeValue2 = texture2D(edgeTexture2, vUv);					vec4 maskColor = texture2D(maskTexture, vUv);					vec4 patternColor = texture2D(patternTexture, 6.0 * vUv);					float visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;					vec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;					vec4 finalColor = edgeStrength * maskColor.r * edgeValue;					if(usePatternTexture)						finalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);					gl_FragColor = finalColor;				}", blending: THREE.AdditiveBlending, depthTest: false, depthWrite: false, transparent: true});
  }}), THREE.OutlinePass.BlurDirectionX = new THREE.Vector2(1, 0), THREE.OutlinePass.BlurDirectionY = new THREE.Vector2(0, 1);
}, function (e, t, n) {
  "use strict";
  n.r(t);
  var i = {};
  n.r(i), n.d(i, "WireframeGeometry", function () {
    return Sa;
  }), n.d(i, "ParametricGeometry", function () {
    return Ea;
  }), n.d(i, "ParametricBufferGeometry", function () {
    return qa;
  }), n.d(i, "TetrahedronGeometry", function () {
    return Ma;
  }), n.d(i, "TetrahedronBufferGeometry", function () {
    return Ca;
  }), n.d(i, "OctahedronGeometry", function () {
    return ka;
  }), n.d(i, "OctahedronBufferGeometry", function () {
    return Ra;
  }), n.d(i, "IcosahedronGeometry", function () {
    return La;
  }), n.d(i, "IcosahedronBufferGeometry", function () {
    return Pa;
  }), n.d(i, "DodecahedronGeometry", function () {
    return Da;
  }), n.d(i, "DodecahedronBufferGeometry", function () {
    return Oa;
  }), n.d(i, "PolyhedronGeometry", function () {
    return Ta;
  }), n.d(i, "PolyhedronBufferGeometry", function () {
    return Aa;
  }), n.d(i, "TubeGeometry", function () {
    return Ia;
  }), n.d(i, "TubeBufferGeometry", function () {
    return Ba;
  }), n.d(i, "TorusKnotGeometry", function () {
    return Fa;
  }), n.d(i, "TorusKnotBufferGeometry", function () {
    return za;
  }), n.d(i, "TorusGeometry", function () {
    return Na;
  }), n.d(i, "TorusBufferGeometry", function () {
    return Ua;
  }), n.d(i, "TextGeometry", function () {
    return vl;
  }), n.d(i, "TextBufferGeometry", function () {
    return yl;
  }), n.d(i, "SphereGeometry", function () {
    return _l;
  }), n.d(i, "SphereBufferGeometry", function () {
    return xl;
  }), n.d(i, "RingGeometry", function () {
    return bl;
  }), n.d(i, "RingBufferGeometry", function () {
    return wl;
  }), n.d(i, "PlaneGeometry", function () {
    return Cr;
  }), n.d(i, "PlaneBufferGeometry", function () {
    return kr;
  }), n.d(i, "LatheGeometry", function () {
    return Sl;
  }), n.d(i, "LatheBufferGeometry", function () {
    return El;
  }), n.d(i, "ShapeGeometry", function () {
    return ql;
  }), n.d(i, "ShapeBufferGeometry", function () {
    return Tl;
  }), n.d(i, "ExtrudeGeometry", function () {
    return pl;
  }), n.d(i, "ExtrudeBufferGeometry", function () {
    return ml;
  }), n.d(i, "EdgesGeometry", function () {
    return Ml;
  }), n.d(i, "ConeGeometry", function () {
    return Rl;
  }), n.d(i, "ConeBufferGeometry", function () {
    return Ll;
  }), n.d(i, "CylinderGeometry", function () {
    return Cl;
  }), n.d(i, "CylinderBufferGeometry", function () {
    return kl;
  }), n.d(i, "CircleGeometry", function () {
    return Pl;
  }), n.d(i, "CircleBufferGeometry", function () {
    return Dl;
  }), n.d(i, "BoxGeometry", function () {
    return ir;
  }), n.d(i, "BoxBufferGeometry", function () {
    return rr;
  });
  var r = {};
  n.r(r), n.d(r, "ShadowMaterial", function () {
    return Ol;
  }), n.d(r, "SpriteMaterial", function () {
    return Rs;
  }), n.d(r, "RawShaderMaterial", function () {
    return Il;
  }), n.d(r, "ShaderMaterial", function () {
    return cr;
  }), n.d(r, "PointsMaterial", function () {
    return ua;
  }), n.d(r, "MeshPhysicalMaterial", function () {
    return Fl;
  }), n.d(r, "MeshStandardMaterial", function () {
    return Bl;
  }), n.d(r, "MeshPhongMaterial", function () {
    return zl;
  }), n.d(r, "MeshToonMaterial", function () {
    return Nl;
  }), n.d(r, "MeshNormalMaterial", function () {
    return Ul;
  }), n.d(r, "MeshLambertMaterial", function () {
    return Vl;
  }), n.d(r, "MeshDepthMaterial", function () {
    return hs;
  }), n.d(r, "MeshDistanceMaterial", function () {
    return us;
  }), n.d(r, "MeshBasicMaterial", function () {
    return ui;
  }), n.d(r, "MeshMatcapMaterial", function () {
    return Gl;
  }), n.d(r, "LineDashedMaterial", function () {
    return Hl;
  }), n.d(r, "LineBasicMaterial", function () {
    return ea;
  }), n.d(r, "Material", function () {
    return hi;
  });
  var o = {};
  n.r(o), n.d(o, "ArcCurve", function () {
    return xc;
  }), n.d(o, "CatmullRomCurve3", function () {
    return Tc;
  }), n.d(o, "CubicBezierCurve", function () {
    return kc;
  }), n.d(o, "CubicBezierCurve3", function () {
    return Rc;
  }), n.d(o, "EllipseCurve", function () {
    return _c;
  }), n.d(o, "LineCurve", function () {
    return Lc;
  }), n.d(o, "LineCurve3", function () {
    return Pc;
  }), n.d(o, "QuadraticBezierCurve", function () {
    return Dc;
  }), n.d(o, "QuadraticBezierCurve3", function () {
    return Oc;
  }), n.d(o, "SplineCurve", function () {
    return Ic;
  });
  class ValueUtils {
    static clearNotWhiteListedCharsInName(e) {
      return e.replace(/(<|>|&lt;|&gt;)/g, "").trim();
    }
    static clearNotWhiteListedCharsInChat(e) {
      return e.replace(/(<|>|&lt;|&gt;)/g, "").trim();
    }
    static smoothValue(e, t = 0, n = 12, i = 0.001) {
      const r = 1 === n ? e : t + (e - t) / n;
      return Math.abs(r) < i ? 0 : r;
    }
    static smoothAngle(e, t = 0, n = 12) {
      let i = ValueUtils.absAngle(e), r = ValueUtils.absAngle(t);
      return r - i > Math.PI && (i += 2 * Math.PI, r > 2 * Math.PI && (r -= 2 * Math.PI, i = e)), i - r > Math.PI && (i = -(2 * Math.PI - i), r < 0 && (r = 2 * Math.PI, i = e)), ValueUtils.smoothValue(i, r, n);
    }
    static mergeOptions(e = {}, t = {}) {
      for (const n in t) e[n] = t[n];
    }
    static isUpper(e) {
      return e === e.toUpperCase();
    }
    static getAvg(e) {
      let t = 0;
      for (let n = 0; n < e.length; n++) t += parseInt(e[n], 10);
      return t / e.length;
    }
    static getMax(e) {
      return Math.max.apply(null, e);
    }
    static getMin(e) {
      return Math.min.apply(null, e);
    }
    static objectUnFreeze(e) {
      let t;
      if (e instanceof Array) {
        t = [];
        const n = e => {
          t.push(e);
        };
        e.forEach(n);
      } else if (e instanceof String) t = String(e).toString(); else if ("object" == typeof e) {
        t = {};
        for (const n in e) t[n] = e[n];
      }
      return t;
    }
    static hashString(e) {
      let t, n = 0;
      if (0 === e.length) return n;
      for (let i = 0; i < e.length; i++) n = (n << 5) - n + (t = e.charCodeAt(i)), n |= 0;
      return n;
    }
    static isNumberChanged(e, t, n = ValueUtils.FACTOR) {
      return Math.abs(e - t) > n;
    }
    static isVector2Changed(e, t, n = ValueUtils.FACTOR) {
      return ValueUtils.isNumberChanged(e.x, t.x, n) || ValueUtils.isNumberChanged(e.y, t.y, n);
    }
    static isPoint2Changed(e, t, n = ValueUtils.FACTOR) {
      return ValueUtils.isNumberChanged(e.x, t.x, n) || ValueUtils.isNumberChanged(e.y, t.y, n);
    }
    static isVector3Changed(e, t, n = ValueUtils.FACTOR) {
      return ValueUtils.isNumberChanged(e.x, t.x, n) || ValueUtils.isNumberChanged(e.y, t.y, n) || ValueUtils.isNumberChanged(e.z, t.z, n);
    }
    static isVector4Changed(e, t, n = ValueUtils.FACTOR) {
      return ValueUtils.isNumberChanged(e.x, t.x, n) || ValueUtils.isNumberChanged(e.y, t.y, n) || ValueUtils.isNumberChanged(e.z, t.z, n) || ValueUtils.isNumberChanged(e.w, t.w, n);
    }
    static isEulerChanged(e, t, n = ValueUtils.FACTOR) {
      return ValueUtils.isNumberChanged(e.x, t.x, n) || ValueUtils.isNumberChanged(e.y, t.y, n) || ValueUtils.isNumberChanged(e.z, t.z, n);
    }
    static firstNonNull(...e) {
      for (const t in e) {
        const n = e[t];
        if (!this.isUndefinedOrNull(n)) return n;
      }
      return null;
    }
    static firstNonNullOr(e, ...t) {
      for (const e in t) {
        const n = t[e];
        if (!this.isUndefinedOrNull(n)) return n;
      }
      return e;
    }
    static limit(e, t, n) {
      return e = Math.max(t, e), Math.min(n, e);
    }
    static countObjectsKeys(...e) {
      let t = 0;
      for (const n in e) t += Object.keys(e[n]).length;
      return t;
    }
    static copyToClipboard(e) {
      let t, n;
      document.body.createTextRange ? ((t = document.body.createTextRange()).moveToElementText(e), t.select()) : window.getSelection && (n = window.getSelection(), (t = document.createRange()).selectNodeContents(e), n.removeAllRanges(), n.addRange(t)), document.execCommand("Copy");
    }
    static fallbackCopyTextToClipboard(e) {
      const t = document.createElement("textarea");
      t.value = e, document.body.appendChild(t), t.focus(), t.select();
      try {
        const e = document.execCommand("copy") ? "successful" : "unsuccessful";
        console.log("Fallback: Copying text command was " + e);
      } catch (e) {
        console.error("Fallback: Oops, unable to copy", e);
      }
      document.body.removeChild(t);
    }
    static copyTextToClipboard(e) {
      navigator.clipboard ? navigator.clipboard.writeText(e).then(() => console.log("Async: Copying to clipboard was successful!")).catch(e => console.error("Async: Could not copy text: ", e)) : ValueUtils.fallbackCopyTextToClipboard(e);
    }
    static cosAngle(e, t) {
      const n = e.length() * t.length();
      return 0 === n ? 0 : e.dot(t) / n;
    }
    static sinAngle(e, t) {
      return 1 - ValueUtils.cosAngle(e, t);
    }
    static toFixed(e, t) {
      return parseFloat(e.toFixed(t));
    }
    static getUpdatedDiff(e, t, n = {}) {
      try {
        for (const i in t) if (false !== t.hasOwnProperty(i)) if (null !== t[i]) {
          if ("Array" === t[i].constructor.name) {
            n[i] = t[i];
            continue;
          }
          if ("Object" === t[i].constructor.name) {
            n[i] = {}, undefined !== e[i] && null !== e[i] || "Object" === t[i].constructor.name && (e[i] = {});
            const r = ValueUtils.getUpdatedDiff(e[i], t[i], n[i]);
            r && false === ValueUtils.objectIsEmpty(r) && (n[i] = r), 0 === Object.keys(n[i]).length && delete n[i];
          } else null !== e && t[i] !== e[i] && (n[i] = t[i]);
        } else null !== e && t[i] !== e[i] && (n[i] = t[i]);
        return n;
      } catch (i) {
        console.error(i, {oldObject: e, newObject: t, updatedDiff: n});
      }
    }
    static fastMerge(e, t) {
      for (const n in t) false !== t.hasOwnProperty(n) && (null !== t[n] ? "Array" !== t[n].constructor.name && "Object" === t[n].constructor.name ? (undefined !== e[n] && null !== e[n] || (e[n] = {}), ValueUtils.fastMerge(e[n], t[n])) : e[n] = t[n] : delete e[n]);
    }
    static objectIsEmpty(e) {
      for (const t in e) if (e.hasOwnProperty(t)) return false;
      return true;
    }
    static humanToThreeJsAngle(e) {
      return ValueUtils.absAngle(e - Math.PI / 2);
    }
    static threeJsToHumanAngle(e) {
      return ValueUtils.absAngle(e + Math.PI / 2);
    }
    static absAngle(e) {
      const t = ValueUtils.normalizeAngle(e);
      return t < 0 ? 2 * Math.PI + t : t;
    }
    static absAngleVector3(e) {
      const t = e.clone();
      return t.x = ValueUtils.absAngle(e.x), t.y = ValueUtils.absAngle(e.y), t.z = ValueUtils.absAngle(e.z), t;
    }
    static normalizeAngle(e) {
      const t = 2 * Math.PI;
      return e < t || e > t ? e % t : e;
    }
    static absAngleDeg(e) {
      const t = ValueUtils.normalizeAngleDeg(e);
      return t < 0 ? 360 + t : t;
    }
    static normalizeAngleDeg(e) {
      return e % 360;
    }
    static getHumanityNumber(e = 0) {
      const t = {num: e, suffix: "", text: e.toString()};
      return e >= 1e9 ? (t.num = ValueUtils.numToFixed(e / 1e9), t.suffix = "B") : e >= 1e6 ? (t.num = ValueUtils.numToFixed(e / 1e6), t.suffix = "M") : e >= 1e3 ? (t.num = ValueUtils.numToFixed(e / 1e3), t.suffix = "K") : t.num = e, t.text = `${t.num}${t.suffix}`, t;
    }
    static formatMoney(e, t = 2, n = ".", i = ",") {
      const r = e < 0 ? "-" : "", o = String(parseInt(e = Math.abs(Number(e) || 0).toFixed(t), 10)), s = o.length > 3 ? o.length % 3 : 0;
      return r + (s ? o.substr(0, s) + i : "") + o.substr(s).replace(/(\d{3})(?=\d)/g, "$1" + i) + (t ? n + Math.abs(e - o).toFixed(t).slice(2) : "");
    }
    static declOfNum(e, t) {
      return t[e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2];
    }
    static getCamelCaseForCss(e) {
      const t = e.split("_"), n = t[t.length - 1];
      return n.charAt(0).toLowerCase() + n.slice(1);
    }
    static getValidClassName(e) {
      const t = e.split("_");
      return t[t.length - 1];
    }
    static radianToDegrees(e) {
      return 180 * e / Math.PI;
    }
    static degreesToRadian(e) {
      return e / 180 / Math.PI;
    }
    static isUndefinedOrNull(e) {
      return null == e;
    }
    static isNotUndefinedAndNotNull(e) {
      return false === ValueUtils.isUndefinedOrNull(e);
    }
    static isNumber(e) {
      return "number" == typeof e && false === isNaN(e) && isFinite(e);
    }
    static isBoolean(e) {
      return "boolean" == typeof e;
    }
    static isString(e) {
      return "string" == typeof e;
    }
    static numToFixed(e, t = 2) {
      return parseFloat(e.toFixed(t));
    }
  }
  ValueUtils.FACTOR = 0.01, ValueUtils.OBJECTS = {Object: true, Array: true};
  class DateUtils_DateUtils {
    static getDateTime(e) {
      const t = new Date(e), n = t.getMonth() + 1, i = t.getHours(), r = t.getMinutes(), o = n < 10 ? `0${n}` : n, s = i < 10 ? `0${i}` : i, a = r < 10 ? `0${r}` : r;
      return `${t.getDate()}.${o}.${t.getFullYear()} ${s}:${a}`;
    }
    static getTime(e = Date.now()) {
      const t = new Date(e), n = t.getHours(), i = t.getMinutes(), r = t.getSeconds();
      return `${n < 10 ? `0${n}` : n}:${i < 10 ? `0${i}` : i}:${r < 10 ? `0${r}` : r}`;
    }
    static getReadableTimeFromSeconds(e) {
      const t = Math.floor(e % 60), n = Math.floor(e / 60 % 60), i = Math.floor(e / 3600 % 24), r = Math.floor(e / 86400);
      let o = t.toString(), s = "00:", a = "", l = "";
      return t < 10 && (o = `0${t}`), n > 0 && (s = `${n}:`, n < 10 && (s = `0${s}`)), i > 0 && (a = `${i}:`, i < 10 && (a = `0${a}`)), r > 0 && (l = `${r} day `), `${l}${a}${s}${o}`;
    }
    static getMinOrHoursFromSeconds(e) {
      return Math.floor(e / 3600) > 0 ? DateUtils_DateUtils.getHoursFromSeconds(e) : DateUtils_DateUtils.getMinFromSeconds(e);
    }
    static getMinFromSeconds(e) {
      return `${Math.floor(e / 60)} min`;
    }
    static getHoursFromSeconds(e) {
      const t = Math.floor(e / 3600);
      return `${t} ${ValueUtils.declOfNum(t, ["hour", "hours", "hours"])}`;
    }
  }
  class StringUtils_StringUtils {
    static stringIsBoolean(e) {
      return "true" === e || "false" === e;
    }
    static stringToBoolean(e) {
      return "true" === e;
    }
    static isExistsExtension(e, t) {
      return !!e.includes("." + t);
    }
    static isExistsAnyExtension(e) {
      return /\w+\.\w+$/.test(e);
    }
    static getFileNameWithoutExt(e) {
      const t = e.split(".");
      return t.pop(), t.join(".");
    }
    static getExtension(e) {
      return e.split(".").pop();
    }
    static getLastSubStr(e, t) {
      return t.split(e).pop();
    }
    static replaceAll(e, t, n) {
      return e.replace(new RegExp(StringUtils_StringUtils.escapeRegExp(t), "g"), n);
    }
    static insertValues(e, t) {
      let n = e;
      for (const e in t) n = StringUtils_StringUtils.replaceAll(n, "${" + e + "}", t[e]);
      return n;
    }
    static escapeRegExp(e) {
      return e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
    }
    static copyToClipboard(e) {
      try {
        const t = document.createElement("textarea");
        return t.value = e, t.setAttribute("readonly", ""), t.style.position = "absolute", t.style.left = "-9999px", document.body.appendChild(t), t.select(), document.execCommand("copy"), document.body.removeChild(t), true;
      } catch (e) {}
      return false;
    }
    static mask(e, t) {
      let n = "";
      for (let i = 0; i < e.length; i++) n += t;
      return n;
    }
    static createHyperLinksFromPlainText(e, t = true, n = "_blank", i) {
      return e.replace(UrlUtils_UrlUtils.LINK_REGEX, (e, r, o) => {
        let s = e;
        t && (s = s.replace(/http[s]?\:\/\//g, ""));
        let a = "";
        return i && (a = `style="color: ${i.getHex()};"`), `<a href="${e.match(/http[s]?\:\/\//g) ? "" : "//"}${e}" target="${n}" ${a}>${s}</a>`;
      });
    }
    static parseDomain(e) {
      const t = (e = StringUtils_StringUtils.cleanProtocol(e)).indexOf("?"), n = e.indexOf("/");
      return ~t || ~n ? e.split(~n ? "/" : "?")[0] : e;
    }
    static cleanProtocol(e) {
      return e = StringUtils_StringUtils.replaceAll(e, "http://", ""), e = StringUtils_StringUtils.replaceAll(e, "https://", "");
    }
  }
  class UrlUtils_UrlUtils {
    static getParameter(e) {
      let t = null, n = [];
      const i = location.search.substr(1).split("&");
      for (let r = 0; r < i.length; r++) (n = i[r].split("="))[0] === e && (t = decodeURIComponent(n[1]));
      return t;
    }
    static hasParameter(e) {
      return new URL(location.href).searchParams.has(e);
    }
    static getProtocol() {
      return location.protocol.substr(0, location.protocol.length - 1);
    }
    static getHostFromAddress(e) {
      if (UrlUtils_UrlUtils.checkValidAddress(e)) return e.split(":")[0];
    }
    static getPortFromAddress(e) {
      if (UrlUtils_UrlUtils.checkValidAddress(e)) return parseInt(e.split(":")[1], 10);
    }
    static checkValidAddress(e) {
      if (!e.includes(":")) throw new Error("Address is invalid");
      return true;
    }
    static changeLastNumerallInPort(e, t) {
      return parseInt(e.toString().replace(/.$/, t.toString()), 10);
    }
    static downloadFile(e) {
      const t = document.createElement("a");
      t.href = e, t.target = "_blank", t.click();
    }
    static getCorrectlyPath(e, t) {
      return "/" === e[e.length - 1] && (e = e.slice(0, -1)), "/" !== t[0] && (t = "/" + t), e + t;
    }
    static getCorrectlyFileNamePath(e, t) {
      "/" === e[e.length - 1] && (e = e.slice(0, -1));
      let n = e;
      return e.length, n += `/${t}`;
    }
    static getResourceUrl(e, t, n, i = location.host) {
      let r = e;
      return false === UrlUtils_UrlUtils.isExistsProtocol(r) && ("/" === r[0] ? r = `//${i}${r}` : (false === r.includes(t) && (r = t + "/" + r), r = `//${i}${r}`), false === StringUtils_StringUtils.isExistsAnyExtension(r) && (r += `.${n}`)), r;
    }
    static isExistsProtocol(e) {
      return undefined !== e && (e.includes("http://") || e.includes("https://") || e.includes("//"));
    }
    static isExistsLink(e) {
      return !!e.match(UrlUtils_UrlUtils.LINK_REGEX);
    }
  }
  UrlUtils_UrlUtils.LINK_REGEX = /((?:(http|https|Http|Https|rtsp|Rtsp):\/\/(?:(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,\;\?\&\=]|(?:\%[a-fA-F0-9]{2})){1,64}(?:\:(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,\;\?\&\=]|(?:\%[a-fA-F0-9]{2})){1,25})?\@)?)?((?:(?:[a-zA-Z0-9][a-zA-Z0-9\-]{0,64}\.)+(?:(?:aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(?:biz|b[abdefghijmnorstvwyz])|(?:cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(?:edu|e[cegrstu])|f[ijkmor]|(?:gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(?:info|int|i[delmnoqrst])|(?:jobs|j[emop])|k[eghimnrwyz]|l[abcikrstuvy]|(?:mil|mobi|museum|m[acdghklmnopqrstuvwxyz])|(?:name|net|n[acefgilopruz])|(?:org|om)|(?:pro|p[aefghklmnrstwy])|qa|r[eouw]|s[abcdeghijklmnortuvyz]|(?:tel|travel|t[cdfghjklmnoprtvwz])|u[agkmsyz]|v[aceginu]|w[fs]|y[etu]|z[amw]))|(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[0-9])))(?:\:\d{1,5})?)(\/(?:(?:[a-zA-Z0-9\;\/\?\:\@\&\=\#\~\-\.\+\!\*\'\(\)\,\_])|(?:\%[a-fA-F0-9]{2}))*)?(?:\b|$)/gi;
  class Logger_Logger {
    static getArgsFromParams(e, t) {
      const n = [];
      for (let i = 0; i < e.length; i++) {
        const r = e[i];
        if ("string" == typeof r) {
          const e = Logger_Logger.parseHtmlToArgs(r, t);
          n[0] ? n[0] += " " + e.shift() : n[0] = e.shift(), n.push(...e);
        } else n.push(r);
      }
      return n;
    }
    static parseHtmlToArgs(e, t) {
      if (0 === e.length) return [e];
      if (0 === t.length) throw new Error("defaultStyle parameter can't be empty");
      const n = [""], i = [], r = [];
      let o = false, s = "", a = false;
      for (let l = 0; l < e.length; l++) {
        const c = e[l];
        if ("<" === c && (o = true, "/" === e[l + 1] && (a = true), a || (0 === r.length && n[n.length - 1].length ? (i.push(t), n.push("")) : r.length && n[n.length - 1].length && this.insertStylesFromHtmlTags(r, n, i, t))), o ? s += c : n[n.length - 1] += c, ">" === c) {
          if (a) {
            this.insertStylesFromHtmlTags(r, n, i, t);
            const e = s.replace("/", ""), o = r.indexOf(e);
            ~o && r.splice(o, 1);
          } else r.push(s);
          s = "", o = false, a = false;
        }
      }
      for ("" === n[n.length - 1] && n.length > 1 && n.pop(); n.length > i.length;) i.push(t);
      const l = i[i.length - 1];
      return t.length && 0 === r.length && l && false === l.includes(t) && i.push(t), 0 === n[n.length - 1].length && n.length > 1 && n.splice(n.length - 1, 1), !~"".indexOf("%c") && i.length > 0 && (n[0] = `%c${""}`), i.unshift(n.join("%c")), i;
    }
    static insertStylesFromHtmlTags(e, t, n, i) {
      const r = [i];
      for (let t = 0; t < e.length; t++) {
        const n = Logger_Logger.htmlStyles[e[t]];
        n && r.push(n.join(";"));
      }
      r.length && t[t.length - 1].length && (n.push(r.join(";")), t.push(""));
    }
    static log(...e) {
      Logger_Logger.styled(Logger_Logger.styles.log.join(";"), ...e);
    }
    static info(...e) {
      Logger_Logger.styled(Logger_Logger.styles.info.join(";"), ...e);
    }
    static warn(...e) {
      Logger_Logger.styled(Logger_Logger.styles.warn.join(";"), ...e);
    }
    static error(...e) {
      Logger_Logger.styled(Logger_Logger.styles.error.join(";"), ...e);
    }
    static debug(...e) {
      null !== UrlUtils_UrlUtils.getParameter("dev") && Logger_Logger.log(...e);
    }
    static styled(e, ...t) {
      console.log.call(console, ...Logger_Logger.getArgsFromParams(t, e));
    }
    static logTime(...e) {
      e.unshift(`[${DateUtils_DateUtils.getTime()}] `), console.log.call(console, ...e);
    }
  }
  Logger_Logger.commonStyles = ["color: initial"], Logger_Logger.styles = {log: [`${Logger_Logger.commonStyles.join(";")}`], dir: [`${Logger_Logger.commonStyles.join(";")}`], info: ["background-color: rgba(0, 0, 255, .1)", `${Logger_Logger.commonStyles.join(";")}`], warn: ["background-color: rgba(255, 255, 0, .2)", `${Logger_Logger.commonStyles.join(";")}`], error: ["background-color: rgba(255, 0, 0, .2)", `${Logger_Logger.commonStyles.join(";")}`]}, Logger_Logger.htmlStyles = {"<b>": ["font-weight: bold"], "<i>": ["font-style: italic"], "<s>": ["text-decoration: line-through"], "<u>": ["text-decoration: underline"]};
  n(46);
  function s() {}
  Object.assign(s.prototype, {addEventListener: function (e, t) {
    undefined === this._listeners && (this._listeners = {});
    var n = this._listeners;
    undefined === n[e] && (n[e] = []), -1 === n[e].indexOf(t) && n[e].push(t);
  }, hasEventListener: function (e, t) {
    if (undefined === this._listeners) return false;
    var n = this._listeners;
    return undefined !== n[e] && -1 !== n[e].indexOf(t);
  }, removeEventListener: function (e, t) {
    if (undefined !== this._listeners) {
      var n = this._listeners[e];
      if (undefined !== n) {
        var i = n.indexOf(t);
        -1 !== i && n.splice(i, 1);
      }
    }
  }, dispatchEvent: function (e) {
    if (undefined !== this._listeners) {
      var t = this._listeners[e.type];
      if (undefined !== t) {
        e.target = this;
        for (var n = t.slice(0), i = 0, r = n.length; i < r; i++) n[i].call(this, e);
      }
    }
  }});
  for (var a = 0, l = 1, c = 2, h = 0, u = 1, d = 2, p = 3, m = 0, f = 1, g = 2, v = 0, y = 1, _ = 2, x = 0, b = 1, w = 2, S = 3, E = 4, q = 5, T = 100, A = 101, M = 102, C = 103, k = 104, R = 200, L = 201, P = 202, D = 203, O = 204, I = 205, B = 206, F = 207, z = 208, N = 209, U = 210, V = 0, G = 1, H = 2, j = 3, $ = 4, W = 5, X = 6, Y = 7, J = 0, K = 1, Z = 2, Q = 0, ee = 1, te = 2, ne = 3, ie = 4, re = 5, oe = 301, se = 302, ae = 303, le = 304, ce = 305, he = 306, ue = 307, de = 1e3, pe = 1001, me = 1002, fe = 1003, ge = 1004, ve = 1005, ye = 1006, _e = 1007, xe = 1008, be = 1009, we = 1010, Se = 1011, Ee = 1012, qe = 1013, Te = 1014, Ae = 1015, Me = 1016, Ce = 1017, ke = 1018, Re = 1019, Le = 1020, Pe = 1021, De = 1022, Oe = 1023, Ie = 1024, Be = 1025, Fe = 1026, ze = 1027, Ne = 1028, Ue = 33776, Ve = 33777, Ge = 33778, He = 33779, je = 35840, $e = 35841, We = 35842, Xe = 35843, Ye = 36196, Je = 37808, Ke = 37809, Ze = 37810, Qe = 37811, et = 37812, tt = 37813, nt = 37814, it = 37815, rt = 37816, ot = 37817, st = 37818, at = 37819, lt = 37820, ct = 37821, ht = 2201, ut = 2400, dt = 0, pt = 1, mt = 2, ft = 3e3, gt = 3001, vt = 3007, yt = 3002, _t = 3003, xt = 3004, bt = 3005, wt = 3006, St = 3200, Et = 3201, qt = 0, Tt = 1, At = 7680, Mt = 519, Ct = [], kt = 0; kt < 256; kt++) Ct[kt] = (kt < 16 ? "0" : "") + kt.toString(16);
  var Rt = {DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function () {
    var e = 4294967295 * Math.random() | 0, t = 4294967295 * Math.random() | 0, n = 4294967295 * Math.random() | 0, i = 4294967295 * Math.random() | 0;
    return (Ct[255 & e] + Ct[e >> 8 & 255] + Ct[e >> 16 & 255] + Ct[e >> 24 & 255] + "-" + Ct[255 & t] + Ct[t >> 8 & 255] + "-" + Ct[t >> 16 & 15 | 64] + Ct[t >> 24 & 255] + "-" + Ct[63 & n | 128] + Ct[n >> 8 & 255] + "-" + Ct[n >> 16 & 255] + Ct[n >> 24 & 255] + Ct[255 & i] + Ct[i >> 8 & 255] + Ct[i >> 16 & 255] + Ct[i >> 24 & 255]).toUpperCase();
  }, clamp: function (e, t, n) {
    return Math.max(t, Math.min(n, e));
  }, euclideanModulo: function (e, t) {
    return (e % t + t) % t;
  }, mapLinear: function (e, t, n, i, r) {
    return i + (e - t) * (r - i) / (n - t);
  }, lerp: function (e, t, n) {
    return (1 - n) * e + n * t;
  }, smoothstep: function (e, t, n) {
    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e);
  }, smootherstep: function (e, t, n) {
    return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10);
  }, randInt: function (e, t) {
    return e + Math.floor(Math.random() * (t - e + 1));
  }, randFloat: function (e, t) {
    return e + Math.random() * (t - e);
  }, randFloatSpread: function (e) {
    return e * (0.5 - Math.random());
  }, degToRad: function (e) {
    return e * Rt.DEG2RAD;
  }, radToDeg: function (e) {
    return e * Rt.RAD2DEG;
  }, isPowerOfTwo: function (e) {
    return 0 == (e & e - 1) && 0 !== e;
  }, ceilPowerOfTwo: function (e) {
    return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2));
  }, floorPowerOfTwo: function (e) {
    return Math.pow(2, Math.floor(Math.log(e) / Math.LN2));
  }};
  function Lt(e, t) {
    this.x = e || 0, this.y = t || 0;
  }
  function Pt(e, t, n, i) {
    this._x = e || 0, this._y = t || 0, this._z = n || 0, this._w = undefined !== i ? i : 1;
  }
  Object.defineProperties(Lt.prototype, {width: {get: function () {
    return this.x;
  }, set: function (e) {
    this.x = e;
  }}, height: {get: function () {
    return this.y;
  }, set: function (e) {
    this.y = e;
  }}}), Object.assign(Lt.prototype, {isVector2: true, set: function (e, t) {
    return this.x = e, this.y = t, this;
  }, setScalar: function (e) {
    return this.x = e, this.y = e, this;
  }, setX: function (e) {
    return this.x = e, this;
  }, setY: function (e) {
    return this.y = e, this;
  }, setComponent: function (e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }, getComponent: function (e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }, clone: function () {
    return new this.constructor(this.x, this.y);
  }, copy: function (e) {
    return this.x = e.x, this.y = e.y, this;
  }, add: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);
  }, addScalar: function (e) {
    return this.x += e, this.y += e, this;
  }, addVectors: function (e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this;
  }, addScaledVector: function (e, t) {
    return this.x += e.x * t, this.y += e.y * t, this;
  }, sub: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);
  }, subScalar: function (e) {
    return this.x -= e, this.y -= e, this;
  }, subVectors: function (e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this;
  }, multiply: function (e) {
    return this.x *= e.x, this.y *= e.y, this;
  }, multiplyScalar: function (e) {
    return this.x *= e, this.y *= e, this;
  }, divide: function (e) {
    return this.x /= e.x, this.y /= e.y, this;
  }, divideScalar: function (e) {
    return this.multiplyScalar(1 / e);
  }, applyMatrix3: function (e) {
    var t = this.x, n = this.y, i = e.elements;
    return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
  }, min: function (e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
  }, max: function (e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
  }, clamp: function (e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
  }, clampScalar: function (e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
  }, clampLength: function (e, t) {
    var n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
  }, floor: function () {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
  }, ceil: function () {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
  }, round: function () {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
  }, roundToZero: function () {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
  }, negate: function () {
    return this.x = -this.x, this.y = -this.y, this;
  }, dot: function (e) {
    return this.x * e.x + this.y * e.y;
  }, cross: function (e) {
    return this.x * e.y - this.y * e.x;
  }, lengthSq: function () {
    return this.x * this.x + this.y * this.y;
  }, length: function () {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }, manhattanLength: function () {
    return Math.abs(this.x) + Math.abs(this.y);
  }, normalize: function () {
    return this.divideScalar(this.length() || 1);
  }, angle: function () {
    var e = Math.atan2(this.y, this.x);
    return e < 0 && (e += 2 * Math.PI), e;
  }, distanceTo: function (e) {
    return Math.sqrt(this.distanceToSquared(e));
  }, distanceToSquared: function (e) {
    var t = this.x - e.x, n = this.y - e.y;
    return t * t + n * n;
  }, manhattanDistanceTo: function (e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }, setLength: function (e) {
    return this.normalize().multiplyScalar(e);
  }, lerp: function (e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
  }, lerpVectors: function (e, t, n) {
    return this.subVectors(t, e).multiplyScalar(n).add(e);
  }, equals: function (e) {
    return e.x === this.x && e.y === this.y;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.x = e[t], this.y = e[t + 1], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e;
  }, fromBufferAttribute: function (e, t, n) {
    return undefined !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this;
  }, rotateAround: function (e, t) {
    var n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, o = this.y - e.y;
    return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this;
  }}), Object.assign(Pt, {slerp: function (e, t, n, i) {
    return n.copy(e).slerp(t, i);
  }, slerpFlat: function (e, t, n, i, r, o, s) {
    var a = n[i + 0], l = n[i + 1], c = n[i + 2], h = n[i + 3], u = r[o + 0], d = r[o + 1], p = r[o + 2], m = r[o + 3];
    if (h !== m || a !== u || l !== d || c !== p) {
      var f = 1 - s, g = a * u + l * d + c * p + h * m, v = g >= 0 ? 1 : -1, y = 1 - g * g;
      if (y > Number.EPSILON) {
        var _ = Math.sqrt(y), x = Math.atan2(_, g * v);
        f = Math.sin(f * x) / _, s = Math.sin(s * x) / _;
      }
      var b = s * v;
      if (a = a * f + u * b, l = l * f + d * b, c = c * f + p * b, h = h * f + m * b, f === 1 - s) {
        var w = 1 / Math.sqrt(a * a + l * l + c * c + h * h);
        a *= w, l *= w, c *= w, h *= w;
      }
    }
    e[t] = a, e[t + 1] = l, e[t + 2] = c, e[t + 3] = h;
  }}), Object.defineProperties(Pt.prototype, {x: {get: function () {
    return this._x;
  }, set: function (e) {
    this._x = e, this._onChangeCallback();
  }}, y: {get: function () {
    return this._y;
  }, set: function (e) {
    this._y = e, this._onChangeCallback();
  }}, z: {get: function () {
    return this._z;
  }, set: function (e) {
    this._z = e, this._onChangeCallback();
  }}, w: {get: function () {
    return this._w;
  }, set: function (e) {
    this._w = e, this._onChangeCallback();
  }}}), Object.assign(Pt.prototype, {isQuaternion: true, set: function (e, t, n, i) {
    return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
  }, clone: function () {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }, copy: function (e) {
    return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
  }, setFromEuler: function (e, t) {
    if (!e || !e.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
    var n = e._x, i = e._y, r = e._z, o = e.order, s = Math.cos, a = Math.sin, l = s(n / 2), c = s(i / 2), h = s(r / 2), u = a(n / 2), d = a(i / 2), p = a(r / 2);
    return "XYZ" === o ? (this._x = u * c * h + l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h - u * d * p) : "YXZ" === o ? (this._x = u * c * h + l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h + u * d * p) : "ZXY" === o ? (this._x = u * c * h - l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h - u * d * p) : "ZYX" === o ? (this._x = u * c * h - l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h + u * d * p) : "YZX" === o ? (this._x = u * c * h + l * d * p, this._y = l * d * h + u * c * p, this._z = l * c * p - u * d * h, this._w = l * c * h - u * d * p) : "XZY" === o && (this._x = u * c * h - l * d * p, this._y = l * d * h - u * c * p, this._z = l * c * p + u * d * h, this._w = l * c * h + u * d * p), false !== t && this._onChangeCallback(), this;
  }, setFromAxisAngle: function (e, t) {
    var n = t / 2, i = Math.sin(n);
    return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
  }, setFromRotationMatrix: function (e) {
    var t, n = e.elements, i = n[0], r = n[4], o = n[8], s = n[1], a = n[5], l = n[9], c = n[2], h = n[6], u = n[10], d = i + a + u;
    return d > 0 ? (t = 0.5 / Math.sqrt(d + 1), this._w = 0.25 / t, this._x = (h - l) * t, this._y = (o - c) * t, this._z = (s - r) * t) : i > a && i > u ? (t = 2 * Math.sqrt(1 + i - a - u), this._w = (h - l) / t, this._x = 0.25 * t, this._y = (r + s) / t, this._z = (o + c) / t) : a > u ? (t = 2 * Math.sqrt(1 + a - i - u), this._w = (o - c) / t, this._x = (r + s) / t, this._y = 0.25 * t, this._z = (l + h) / t) : (t = 2 * Math.sqrt(1 + u - i - a), this._w = (s - r) / t, this._x = (o + c) / t, this._y = (l + h) / t, this._z = 0.25 * t), this._onChangeCallback(), this;
  }, setFromUnitVectors: function (e, t) {
    var n = e.dot(t) + 1;
    return n < 0.000001 ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
  }, angleTo: function (e) {
    return 2 * Math.acos(Math.abs(Rt.clamp(this.dot(e), -1, 1)));
  }, rotateTowards: function (e, t) {
    var n = this.angleTo(e);
    if (0 === n) return this;
    var i = Math.min(1, t / n);
    return this.slerp(e, i), this;
  }, inverse: function () {
    return this.conjugate();
  }, conjugate: function () {
    return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
  }, dot: function (e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }, lengthSq: function () {
    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
  }, length: function () {
    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
  }, normalize: function () {
    var e = this.length();
    return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
  }, multiply: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
  }, premultiply: function (e) {
    return this.multiplyQuaternions(e, this);
  }, multiplyQuaternions: function (e, t) {
    var n = e._x, i = e._y, r = e._z, o = e._w, s = t._x, a = t._y, l = t._z, c = t._w;
    return this._x = n * c + o * s + i * l - r * a, this._y = i * c + o * a + r * s - n * l, this._z = r * c + o * l + n * a - i * s, this._w = o * c - n * s - i * a - r * l, this._onChangeCallback(), this;
  }, slerp: function (e, t) {
    if (0 === t) return this;
    if (1 === t) return this.copy(e);
    var n = this._x, i = this._y, r = this._z, o = this._w, s = o * e._w + n * e._x + i * e._y + r * e._z;
    if (s < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, s = -s) : this.copy(e), s >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
    var a = 1 - s * s;
    if (a <= Number.EPSILON) {
      var l = 1 - t;
      return this._w = l * o + t * this._w, this._x = l * n + t * this._x, this._y = l * i + t * this._y, this._z = l * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
    }
    var c = Math.sqrt(a), h = Math.atan2(c, s), u = Math.sin((1 - t) * h) / c, d = Math.sin(t * h) / c;
    return this._w = o * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
  }, equals: function (e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
  }, _onChange: function (e) {
    return this._onChangeCallback = e, this;
  }, _onChangeCallback: function () {}});
  var Dt = new It, Ot = new Pt;
  function It(e, t, n) {
    this.x = e || 0, this.y = t || 0, this.z = n || 0;
  }
  Object.assign(It.prototype, {isVector3: true, set: function (e, t, n) {
    return this.x = e, this.y = t, this.z = n, this;
  }, setScalar: function (e) {
    return this.x = e, this.y = e, this.z = e, this;
  }, setX: function (e) {
    return this.x = e, this;
  }, setY: function (e) {
    return this.y = e, this;
  }, setZ: function (e) {
    return this.z = e, this;
  }, setComponent: function (e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }, getComponent: function (e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }, clone: function () {
    return new this.constructor(this.x, this.y, this.z);
  }, copy: function (e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this;
  }, add: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);
  }, addScalar: function (e) {
    return this.x += e, this.y += e, this.z += e, this;
  }, addVectors: function (e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
  }, addScaledVector: function (e, t) {
    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
  }, sub: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);
  }, subScalar: function (e) {
    return this.x -= e, this.y -= e, this.z -= e, this;
  }, subVectors: function (e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
  }, multiply: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);
  }, multiplyScalar: function (e) {
    return this.x *= e, this.y *= e, this.z *= e, this;
  }, multiplyVectors: function (e, t) {
    return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
  }, applyEuler: function (e) {
    return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(Ot.setFromEuler(e));
  }, applyAxisAngle: function (e, t) {
    return this.applyQuaternion(Ot.setFromAxisAngle(e, t));
  }, applyMatrix3: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.elements;
    return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
  }, applyMatrix4: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.elements, o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
    return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this;
  }, applyQuaternion: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.x, o = e.y, s = e.z, a = e.w, l = a * t + o * i - s * n, c = a * n + s * t - r * i, h = a * i + r * n - o * t, u = -r * t - o * n - s * i;
    return this.x = l * a + u * -r + c * -s - h * -o, this.y = c * a + u * -o + h * -r - l * -s, this.z = h * a + u * -s + l * -o - c * -r, this;
  }, project: function (e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
  }, unproject: function (e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
  }, transformDirection: function (e) {
    var t = this.x, n = this.y, i = this.z, r = e.elements;
    return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
  }, divide: function (e) {
    return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
  }, divideScalar: function (e) {
    return this.multiplyScalar(1 / e);
  }, min: function (e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
  }, max: function (e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
  }, clamp: function (e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
  }, clampScalar: function (e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
  }, clampLength: function (e, t) {
    var n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
  }, floor: function () {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
  }, ceil: function () {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
  }, round: function () {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
  }, roundToZero: function () {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
  }, negate: function () {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
  }, dot: function (e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }, lengthSq: function () {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }, length: function () {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }, manhattanLength: function () {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }, normalize: function () {
    return this.divideScalar(this.length() || 1);
  }, setLength: function (e) {
    return this.normalize().multiplyScalar(e);
  }, lerp: function (e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
  }, lerpVectors: function (e, t, n) {
    return this.subVectors(t, e).multiplyScalar(n).add(e);
  }, cross: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e);
  }, crossVectors: function (e, t) {
    var n = e.x, i = e.y, r = e.z, o = t.x, s = t.y, a = t.z;
    return this.x = i * a - r * s, this.y = r * o - n * a, this.z = n * s - i * o, this;
  }, projectOnVector: function (e) {
    var t = e.dot(this) / e.lengthSq();
    return this.copy(e).multiplyScalar(t);
  }, projectOnPlane: function (e) {
    return Dt.copy(this).projectOnVector(e), this.sub(Dt);
  }, reflect: function (e) {
    return this.sub(Dt.copy(e).multiplyScalar(2 * this.dot(e)));
  }, angleTo: function (e) {
    var t = this.dot(e) / Math.sqrt(this.lengthSq() * e.lengthSq());
    return Math.acos(Rt.clamp(t, -1, 1));
  }, distanceTo: function (e) {
    return Math.sqrt(this.distanceToSquared(e));
  }, distanceToSquared: function (e) {
    var t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
    return t * t + n * n + i * i;
  }, manhattanDistanceTo: function (e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
  }, setFromSpherical: function (e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }, setFromSphericalCoords: function (e, t, n) {
    var i = Math.sin(t) * e;
    return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
  }, setFromCylindrical: function (e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }, setFromCylindricalCoords: function (e, t, n) {
    return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
  }, setFromMatrixPosition: function (e) {
    var t = e.elements;
    return this.x = t[12], this.y = t[13], this.z = t[14], this;
  }, setFromMatrixScale: function (e) {
    var t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
    return this.x = t, this.y = n, this.z = i, this;
  }, setFromMatrixColumn: function (e, t) {
    return this.fromArray(e.elements, 4 * t);
  }, equals: function (e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
  }, fromBufferAttribute: function (e, t, n) {
    return undefined !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
  }});
  var Bt, Ft = new It;
  function zt() {
    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
  }
  Object.assign(zt.prototype, {isMatrix3: true, set: function (e, t, n, i, r, o, s, a, l) {
    var c = this.elements;
    return c[0] = e, c[1] = i, c[2] = s, c[3] = t, c[4] = r, c[5] = a, c[6] = n, c[7] = o, c[8] = l, this;
  }, identity: function () {
    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
  }, clone: function () {
    return (new this.constructor).fromArray(this.elements);
  }, copy: function (e) {
    var t = this.elements, n = e.elements;
    return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
  }, setFromMatrix4: function (e) {
    var t = e.elements;
    return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
  }, applyToBufferAttribute: function (e) {
    for (var t = 0, n = e.count; t < n; t++) Ft.x = e.getX(t), Ft.y = e.getY(t), Ft.z = e.getZ(t), Ft.applyMatrix3(this), e.setXYZ(t, Ft.x, Ft.y, Ft.z);
    return e;
  }, multiply: function (e) {
    return this.multiplyMatrices(this, e);
  }, premultiply: function (e) {
    return this.multiplyMatrices(e, this);
  }, multiplyMatrices: function (e, t) {
    var n = e.elements, i = t.elements, r = this.elements, o = n[0], s = n[3], a = n[6], l = n[1], c = n[4], h = n[7], u = n[2], d = n[5], p = n[8], m = i[0], f = i[3], g = i[6], v = i[1], y = i[4], _ = i[7], x = i[2], b = i[5], w = i[8];
    return r[0] = o * m + s * v + a * x, r[3] = o * f + s * y + a * b, r[6] = o * g + s * _ + a * w, r[1] = l * m + c * v + h * x, r[4] = l * f + c * y + h * b, r[7] = l * g + c * _ + h * w, r[2] = u * m + d * v + p * x, r[5] = u * f + d * y + p * b, r[8] = u * g + d * _ + p * w, this;
  }, multiplyScalar: function (e) {
    var t = this.elements;
    return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
  }, determinant: function () {
    var e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], s = e[5], a = e[6], l = e[7], c = e[8];
    return t * o * c - t * s * l - n * r * c + n * s * a + i * r * l - i * o * a;
  }, getInverse: function (e, t) {
    e && e.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
    var n = e.elements, i = this.elements, r = n[0], o = n[1], s = n[2], a = n[3], l = n[4], c = n[5], h = n[6], u = n[7], d = n[8], p = d * l - c * u, m = c * h - d * a, f = u * a - l * h, g = r * p + o * m + s * f;
    if (0 === g) {
      var v = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
      if (true === t) throw new Error(v);
      return console.warn(v), this.identity();
    }
    var y = 1 / g;
    return i[0] = p * y, i[1] = (s * u - d * o) * y, i[2] = (c * o - s * l) * y, i[3] = m * y, i[4] = (d * r - s * h) * y, i[5] = (s * a - c * r) * y, i[6] = f * y, i[7] = (o * h - u * r) * y, i[8] = (l * r - o * a) * y, this;
  }, transpose: function () {
    var e, t = this.elements;
    return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
  }, getNormalMatrix: function (e) {
    return this.setFromMatrix4(e).getInverse(this).transpose();
  }, transposeIntoArray: function (e) {
    var t = this.elements;
    return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
  }, setUvTransform: function (e, t, n, i, r, o, s) {
    var a = Math.cos(r), l = Math.sin(r);
    this.set(n * a, n * l, -n * (a * o + l * s) + o + e, -i * l, i * a, -i * (-l * o + a * s) + s + t, 0, 0, 1);
  }, scale: function (e, t) {
    var n = this.elements;
    return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this;
  }, rotate: function (e) {
    var t = Math.cos(e), n = Math.sin(e), i = this.elements, r = i[0], o = i[3], s = i[6], a = i[1], l = i[4], c = i[7];
    return i[0] = t * r + n * a, i[3] = t * o + n * l, i[6] = t * s + n * c, i[1] = -n * r + t * a, i[4] = -n * o + t * l, i[7] = -n * s + t * c, this;
  }, translate: function (e, t) {
    var n = this.elements;
    return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this;
  }, equals: function (e) {
    for (var t = this.elements, n = e.elements, i = 0; i < 9; i++) if (t[i] !== n[i]) return false;
    return true;
  }, fromArray: function (e, t) {
    undefined === t && (t = 0);
    for (var n = 0; n < 9; n++) this.elements[n] = e[n + t];
    return this;
  }, toArray: function (e, t) {
    undefined === e && (e = []), undefined === t && (t = 0);
    var n = this.elements;
    return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
  }});
  var Nt = {getDataURL: function (e) {
    var t;
    if ("undefined" == typeof HTMLCanvasElement) return e.src;
    if (e instanceof HTMLCanvasElement) t = e; else {
      undefined === Bt && (Bt = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), Bt.width = e.width, Bt.height = e.height;
      var n = Bt.getContext("2d");
      e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = Bt;
    }
    return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", 0.6) : t.toDataURL("image/png");
  }}, Ut = 0;
  function Vt(e, t, n, i, r, o, s, a, l, c) {
    Object.defineProperty(this, "id", {value: Ut++}), this.uuid = Rt.generateUUID(), this.name = "", this.image = undefined !== e ? e : Vt.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = undefined !== t ? t : Vt.DEFAULT_MAPPING, this.wrapS = undefined !== n ? n : pe, this.wrapT = undefined !== i ? i : pe, this.magFilter = undefined !== r ? r : ye, this.minFilter = undefined !== o ? o : xe, this.anisotropy = undefined !== l ? l : 1, this.format = undefined !== s ? s : Oe, this.type = undefined !== a ? a : be, this.offset = new Lt(0, 0), this.repeat = new Lt(1, 1), this.center = new Lt(0, 0), this.rotation = 0, this.matrixAutoUpdate = true, this.matrix = new zt, this.generateMipmaps = true, this.premultiplyAlpha = false, this.flipY = true, this.unpackAlignment = 4, this.encoding = undefined !== c ? c : ft, this.version = 0, this.onUpdate = null;
  }
  function Gt(e, t, n, i) {
    this.x = e || 0, this.y = t || 0, this.z = n || 0, this.w = undefined !== i ? i : 1;
  }
  function Ht(e, t, n) {
    this.width = e, this.height = t, this.scissor = new Gt(0, 0, e, t), this.scissorTest = false, this.viewport = new Gt(0, 0, e, t), n = n || {}, this.texture = new Vt(undefined, undefined, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.image = {}, this.texture.image.width = e, this.texture.image.height = t, this.texture.generateMipmaps = undefined !== n.generateMipmaps && n.generateMipmaps, this.texture.minFilter = undefined !== n.minFilter ? n.minFilter : ye, this.depthBuffer = undefined === n.depthBuffer || n.depthBuffer, this.stencilBuffer = undefined === n.stencilBuffer || n.stencilBuffer, this.depthTexture = undefined !== n.depthTexture ? n.depthTexture : null;
  }
  function jt(e, t, n) {
    Ht.call(this, e, t, n), this.samples = 4;
  }
  Vt.DEFAULT_IMAGE = undefined, Vt.DEFAULT_MAPPING = 300, Vt.prototype = Object.assign(Object.create(s.prototype), {constructor: Vt, isTexture: true, updateMatrix: function () {
    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this;
  }, toJSON: function (e) {
    var t = undefined === e || "string" == typeof e;
    if (!t && undefined !== e.textures[this.uuid]) return e.textures[this.uuid];
    var n = {metadata: {version: 4.5, type: "Texture", generator: "Texture.toJSON"}, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, type: this.type, encoding: this.encoding, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY, premultiplyAlpha: this.premultiplyAlpha, unpackAlignment: this.unpackAlignment};
    if (undefined !== this.image) {
      var i = this.image;
      if (undefined === i.uuid && (i.uuid = Rt.generateUUID()), !t && undefined === e.images[i.uuid]) {
        var r;
        if (Array.isArray(i)) {
          r = [];
          for (var o = 0, s = i.length; o < s; o++) r.push(Nt.getDataURL(i[o]));
        } else r = Nt.getDataURL(i);
        e.images[i.uuid] = {uuid: i.uuid, url: r};
      }
      n.image = i.uuid;
    }
    return t || (e.textures[this.uuid] = n), n;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }, transformUv: function (e) {
    if (300 !== this.mapping) return e;
    if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS) {
      case de:
        e.x = e.x - Math.floor(e.x);
        break;
      case pe:
        e.x = e.x < 0 ? 0 : 1;
        break;
      case me:
        1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
    }
    if (e.y < 0 || e.y > 1) switch (this.wrapT) {
      case de:
        e.y = e.y - Math.floor(e.y);
        break;
      case pe:
        e.y = e.y < 0 ? 0 : 1;
        break;
      case me:
        1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
    }
    return this.flipY && (e.y = 1 - e.y), e;
  }}), Object.defineProperty(Vt.prototype, "needsUpdate", {set: function (e) {
    true === e && this.version++;
  }}), Object.defineProperties(Gt.prototype, {width: {get: function () {
    return this.z;
  }, set: function (e) {
    this.z = e;
  }}, height: {get: function () {
    return this.w;
  }, set: function (e) {
    this.w = e;
  }}}), Object.assign(Gt.prototype, {isVector4: true, set: function (e, t, n, i) {
    return this.x = e, this.y = t, this.z = n, this.w = i, this;
  }, setScalar: function (e) {
    return this.x = e, this.y = e, this.z = e, this.w = e, this;
  }, setX: function (e) {
    return this.x = e, this;
  }, setY: function (e) {
    return this.y = e, this;
  }, setZ: function (e) {
    return this.z = e, this;
  }, setW: function (e) {
    return this.w = e, this;
  }, setComponent: function (e, t) {
    switch (e) {
      case 0:
        this.x = t;
        break;
      case 1:
        this.y = t;
        break;
      case 2:
        this.z = t;
        break;
      case 3:
        this.w = t;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }, getComponent: function (e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }, clone: function () {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }, copy: function (e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this.w = undefined !== e.w ? e.w : 1, this;
  }, add: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);
  }, addScalar: function (e) {
    return this.x += e, this.y += e, this.z += e, this.w += e, this;
  }, addVectors: function (e, t) {
    return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
  }, addScaledVector: function (e, t) {
    return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
  }, sub: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);
  }, subScalar: function (e) {
    return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
  }, subVectors: function (e, t) {
    return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
  }, multiplyScalar: function (e) {
    return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
  }, applyMatrix4: function (e) {
    var t = this.x, n = this.y, i = this.z, r = this.w, o = e.elements;
    return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this;
  }, divideScalar: function (e) {
    return this.multiplyScalar(1 / e);
  }, setAxisAngleFromQuaternion: function (e) {
    this.w = 2 * Math.acos(e.w);
    var t = Math.sqrt(1 - e.w * e.w);
    return t < 0.0001 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
  }, setAxisAngleFromRotationMatrix: function (e) {
    var t, n, i, r, o = e.elements, s = o[0], a = o[4], l = o[8], c = o[1], h = o[5], u = o[9], d = o[2], p = o[6], m = o[10];
    if (Math.abs(a - c) < 0.01 && Math.abs(l - d) < 0.01 && Math.abs(u - p) < 0.01) {
      if (Math.abs(a + c) < 0.1 && Math.abs(l + d) < 0.1 && Math.abs(u + p) < 0.1 && Math.abs(s + h + m - 3) < 0.1) return this.set(1, 0, 0, 0), this;
      t = Math.PI;
      var f = (s + 1) / 2, g = (h + 1) / 2, v = (m + 1) / 2, y = (a + c) / 4, _ = (l + d) / 4, x = (u + p) / 4;
      return f > g && f > v ? f < 0.01 ? (n = 0, i = 0.707106781, r = 0.707106781) : (i = y / (n = Math.sqrt(f)), r = _ / n) : g > v ? g < 0.01 ? (n = 0.707106781, i = 0, r = 0.707106781) : (n = y / (i = Math.sqrt(g)), r = x / i) : v < 0.01 ? (n = 0.707106781, i = 0.707106781, r = 0) : (n = _ / (r = Math.sqrt(v)), i = x / r), this.set(n, i, r, t), this;
    }
    var b = Math.sqrt((p - u) * (p - u) + (l - d) * (l - d) + (c - a) * (c - a));
    return Math.abs(b) < 0.001 && (b = 1), this.x = (p - u) / b, this.y = (l - d) / b, this.z = (c - a) / b, this.w = Math.acos((s + h + m - 1) / 2), this;
  }, min: function (e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
  }, max: function (e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
  }, clamp: function (e, t) {
    return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
  }, clampScalar: function (e, t) {
    return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
  }, clampLength: function (e, t) {
    var n = this.length();
    return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
  }, floor: function () {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
  }, ceil: function () {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
  }, round: function () {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
  }, roundToZero: function () {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
  }, negate: function () {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
  }, dot: function (e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }, lengthSq: function () {
    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
  }, length: function () {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
  }, manhattanLength: function () {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
  }, normalize: function () {
    return this.divideScalar(this.length() || 1);
  }, setLength: function (e) {
    return this.normalize().multiplyScalar(e);
  }, lerp: function (e, t) {
    return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
  }, lerpVectors: function (e, t, n) {
    return this.subVectors(t, e).multiplyScalar(n).add(e);
  }, equals: function (e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
  }, fromBufferAttribute: function (e, t, n) {
    return undefined !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
  }}), Ht.prototype = Object.assign(Object.create(s.prototype), {constructor: Ht, isWebGLRenderTarget: true, setSize: function (e, t) {
    this.width === e && this.height === t || (this.width = e, this.height = t, this.texture.image.width = e, this.texture.image.height = t, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.width = e.width, this.height = e.height, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }}), jt.prototype = Object.assign(Object.create(Ht.prototype), {constructor: jt, isWebGLMultisampleRenderTarget: true, copy: function (e) {
    return Ht.prototype.copy.call(this, e), this.samples = e.samples, this;
  }});
  var $t = new It, Wt = new Qt, Xt = new It(0, 0, 0), Yt = new It(1, 1, 1), Jt = new It, Kt = new It, Zt = new It;
  function Qt() {
    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
  }
  Object.assign(Qt.prototype, {isMatrix4: true, set: function (e, t, n, i, r, o, s, a, l, c, h, u, d, p, m, f) {
    var g = this.elements;
    return g[0] = e, g[4] = t, g[8] = n, g[12] = i, g[1] = r, g[5] = o, g[9] = s, g[13] = a, g[2] = l, g[6] = c, g[10] = h, g[14] = u, g[3] = d, g[7] = p, g[11] = m, g[15] = f, this;
  }, identity: function () {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }, clone: function () {
    return (new Qt).fromArray(this.elements);
  }, copy: function (e) {
    var t = this.elements, n = e.elements;
    return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
  }, copyPosition: function (e) {
    var t = this.elements, n = e.elements;
    return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
  }, extractBasis: function (e, t, n) {
    return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
  }, makeBasis: function (e, t, n) {
    return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
  }, extractRotation: function (e) {
    var t = this.elements, n = e.elements, i = 1 / $t.setFromMatrixColumn(e, 0).length(), r = 1 / $t.setFromMatrixColumn(e, 1).length(), o = 1 / $t.setFromMatrixColumn(e, 2).length();
    return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
  }, makeRotationFromEuler: function (e) {
    e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
    var t = this.elements, n = e.x, i = e.y, r = e.z, o = Math.cos(n), s = Math.sin(n), a = Math.cos(i), l = Math.sin(i), c = Math.cos(r), h = Math.sin(r);
    if ("XYZ" === e.order) {
      var u = o * c, d = o * h, p = s * c, m = s * h;
      t[0] = a * c, t[4] = -a * h, t[8] = l, t[1] = d + p * l, t[5] = u - m * l, t[9] = -s * a, t[2] = m - u * l, t[6] = p + d * l, t[10] = o * a;
    } else if ("YXZ" === e.order) {
      var f = a * c, g = a * h, v = l * c, y = l * h;
      t[0] = f + y * s, t[4] = v * s - g, t[8] = o * l, t[1] = o * h, t[5] = o * c, t[9] = -s, t[2] = g * s - v, t[6] = y + f * s, t[10] = o * a;
    } else if ("ZXY" === e.order) {
      f = a * c, g = a * h, v = l * c, y = l * h;
      t[0] = f - y * s, t[4] = -o * h, t[8] = v + g * s, t[1] = g + v * s, t[5] = o * c, t[9] = y - f * s, t[2] = -o * l, t[6] = s, t[10] = o * a;
    } else if ("ZYX" === e.order) {
      u = o * c, d = o * h, p = s * c, m = s * h;
      t[0] = a * c, t[4] = p * l - d, t[8] = u * l + m, t[1] = a * h, t[5] = m * l + u, t[9] = d * l - p, t[2] = -l, t[6] = s * a, t[10] = o * a;
    } else if ("YZX" === e.order) {
      var _ = o * a, x = o * l, b = s * a, w = s * l;
      t[0] = a * c, t[4] = w - _ * h, t[8] = b * h + x, t[1] = h, t[5] = o * c, t[9] = -s * c, t[2] = -l * c, t[6] = x * h + b, t[10] = _ - w * h;
    } else if ("XZY" === e.order) {
      _ = o * a, x = o * l, b = s * a, w = s * l;
      t[0] = a * c, t[4] = -h, t[8] = l * c, t[1] = _ * h + w, t[5] = o * c, t[9] = x * h - b, t[2] = b * h - x, t[6] = s * c, t[10] = w * h + _;
    }
    return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
  }, makeRotationFromQuaternion: function (e) {
    return this.compose(Xt, e, Yt);
  }, lookAt: function (e, t, n) {
    var i = this.elements;
    return Zt.subVectors(e, t), 0 === Zt.lengthSq() && (Zt.z = 1), Zt.normalize(), Jt.crossVectors(n, Zt), 0 === Jt.lengthSq() && (1 === Math.abs(n.z) ? Zt.x += 0.0001 : Zt.z += 0.0001, Zt.normalize(), Jt.crossVectors(n, Zt)), Jt.normalize(), Kt.crossVectors(Zt, Jt), i[0] = Jt.x, i[4] = Kt.x, i[8] = Zt.x, i[1] = Jt.y, i[5] = Kt.y, i[9] = Zt.y, i[2] = Jt.z, i[6] = Kt.z, i[10] = Zt.z, this;
  }, multiply: function (e, t) {
    return undefined !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
  }, premultiply: function (e) {
    return this.multiplyMatrices(e, this);
  }, multiplyMatrices: function (e, t) {
    var n = e.elements, i = t.elements, r = this.elements, o = n[0], s = n[4], a = n[8], l = n[12], c = n[1], h = n[5], u = n[9], d = n[13], p = n[2], m = n[6], f = n[10], g = n[14], v = n[3], y = n[7], _ = n[11], x = n[15], b = i[0], w = i[4], S = i[8], E = i[12], q = i[1], T = i[5], A = i[9], M = i[13], C = i[2], k = i[6], R = i[10], L = i[14], P = i[3], D = i[7], O = i[11], I = i[15];
    return r[0] = o * b + s * q + a * C + l * P, r[4] = o * w + s * T + a * k + l * D, r[8] = o * S + s * A + a * R + l * O, r[12] = o * E + s * M + a * L + l * I, r[1] = c * b + h * q + u * C + d * P, r[5] = c * w + h * T + u * k + d * D, r[9] = c * S + h * A + u * R + d * O, r[13] = c * E + h * M + u * L + d * I, r[2] = p * b + m * q + f * C + g * P, r[6] = p * w + m * T + f * k + g * D, r[10] = p * S + m * A + f * R + g * O, r[14] = p * E + m * M + f * L + g * I, r[3] = v * b + y * q + _ * C + x * P, r[7] = v * w + y * T + _ * k + x * D, r[11] = v * S + y * A + _ * R + x * O, r[15] = v * E + y * M + _ * L + x * I, this;
  }, multiplyScalar: function (e) {
    var t = this.elements;
    return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
  }, applyToBufferAttribute: function (e) {
    for (var t = 0, n = e.count; t < n; t++) $t.x = e.getX(t), $t.y = e.getY(t), $t.z = e.getZ(t), $t.applyMatrix4(this), e.setXYZ(t, $t.x, $t.y, $t.z);
    return e;
  }, determinant: function () {
    var e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], o = e[1], s = e[5], a = e[9], l = e[13], c = e[2], h = e[6], u = e[10], d = e[14];
    return e[3] * (+r * a * h - i * l * h - r * s * u + n * l * u + i * s * d - n * a * d) + e[7] * (+t * a * d - t * l * u + r * o * u - i * o * d + i * l * c - r * a * c) + e[11] * (+t * l * h - t * s * d - r * o * h + n * o * d + r * s * c - n * l * c) + e[15] * (-i * s * c - t * a * h + t * s * u + i * o * h - n * o * u + n * a * c);
  }, transpose: function () {
    var e, t = this.elements;
    return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this;
  }, setPosition: function (e, t, n) {
    var i = this.elements;
    return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
  }, getInverse: function (e, t) {
    var n = this.elements, i = e.elements, r = i[0], o = i[1], s = i[2], a = i[3], l = i[4], c = i[5], h = i[6], u = i[7], d = i[8], p = i[9], m = i[10], f = i[11], g = i[12], v = i[13], y = i[14], _ = i[15], x = p * y * u - v * m * u + v * h * f - c * y * f - p * h * _ + c * m * _, b = g * m * u - d * y * u - g * h * f + l * y * f + d * h * _ - l * m * _, w = d * v * u - g * p * u + g * c * f - l * v * f - d * c * _ + l * p * _, S = g * p * h - d * v * h - g * c * m + l * v * m + d * c * y - l * p * y, E = r * x + o * b + s * w + a * S;
    if (0 === E) {
      var q = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
      if (true === t) throw new Error(q);
      return console.warn(q), this.identity();
    }
    var T = 1 / E;
    return n[0] = x * T, n[1] = (v * m * a - p * y * a - v * s * f + o * y * f + p * s * _ - o * m * _) * T, n[2] = (c * y * a - v * h * a + v * s * u - o * y * u - c * s * _ + o * h * _) * T, n[3] = (p * h * a - c * m * a - p * s * u + o * m * u + c * s * f - o * h * f) * T, n[4] = b * T, n[5] = (d * y * a - g * m * a + g * s * f - r * y * f - d * s * _ + r * m * _) * T, n[6] = (g * h * a - l * y * a - g * s * u + r * y * u + l * s * _ - r * h * _) * T, n[7] = (l * m * a - d * h * a + d * s * u - r * m * u - l * s * f + r * h * f) * T, n[8] = w * T, n[9] = (g * p * a - d * v * a - g * o * f + r * v * f + d * o * _ - r * p * _) * T, n[10] = (l * v * a - g * c * a + g * o * u - r * v * u - l * o * _ + r * c * _) * T, n[11] = (d * c * a - l * p * a - d * o * u + r * p * u + l * o * f - r * c * f) * T, n[12] = S * T, n[13] = (d * v * s - g * p * s + g * o * m - r * v * m - d * o * y + r * p * y) * T, n[14] = (g * c * s - l * v * s - g * o * h + r * v * h + l * o * y - r * c * y) * T, n[15] = (l * p * s - d * c * s + d * o * h - r * p * h - l * o * m + r * c * m) * T, this;
  }, scale: function (e) {
    var t = this.elements, n = e.x, i = e.y, r = e.z;
    return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
  }, getMaxScaleOnAxis: function () {
    var e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(t, n, i));
  }, makeTranslation: function (e, t, n) {
    return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
  }, makeRotationX: function (e) {
    var t = Math.cos(e), n = Math.sin(e);
    return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
  }, makeRotationY: function (e) {
    var t = Math.cos(e), n = Math.sin(e);
    return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
  }, makeRotationZ: function (e) {
    var t = Math.cos(e), n = Math.sin(e);
    return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }, makeRotationAxis: function (e, t) {
    var n = Math.cos(t), i = Math.sin(t), r = 1 - n, o = e.x, s = e.y, a = e.z, l = r * o, c = r * s;
    return this.set(l * o + n, l * s - i * a, l * a + i * s, 0, l * s + i * a, c * s + n, c * a - i * o, 0, l * a - i * s, c * a + i * o, r * a * a + n, 0, 0, 0, 0, 1), this;
  }, makeScale: function (e, t, n) {
    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
  }, makeShear: function (e, t, n) {
    return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1), this;
  }, compose: function (e, t, n) {
    var i = this.elements, r = t._x, o = t._y, s = t._z, a = t._w, l = r + r, c = o + o, h = s + s, u = r * l, d = r * c, p = r * h, m = o * c, f = o * h, g = s * h, v = a * l, y = a * c, _ = a * h, x = n.x, b = n.y, w = n.z;
    return i[0] = (1 - (m + g)) * x, i[1] = (d + _) * x, i[2] = (p - y) * x, i[3] = 0, i[4] = (d - _) * b, i[5] = (1 - (u + g)) * b, i[6] = (f + v) * b, i[7] = 0, i[8] = (p + y) * w, i[9] = (f - v) * w, i[10] = (1 - (u + m)) * w, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
  }, decompose: function (e, t, n) {
    var i = this.elements, r = $t.set(i[0], i[1], i[2]).length(), o = $t.set(i[4], i[5], i[6]).length(), s = $t.set(i[8], i[9], i[10]).length();
    this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], Wt.copy(this);
    var a = 1 / r, l = 1 / o, c = 1 / s;
    return Wt.elements[0] *= a, Wt.elements[1] *= a, Wt.elements[2] *= a, Wt.elements[4] *= l, Wt.elements[5] *= l, Wt.elements[6] *= l, Wt.elements[8] *= c, Wt.elements[9] *= c, Wt.elements[10] *= c, t.setFromRotationMatrix(Wt), n.x = r, n.y = o, n.z = s, this;
  }, makePerspective: function (e, t, n, i, r, o) {
    undefined === o && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
    var s = this.elements, a = 2 * r / (t - e), l = 2 * r / (n - i), c = (t + e) / (t - e), h = (n + i) / (n - i), u = -(o + r) / (o - r), d = -2 * o * r / (o - r);
    return s[0] = a, s[4] = 0, s[8] = c, s[12] = 0, s[1] = 0, s[5] = l, s[9] = h, s[13] = 0, s[2] = 0, s[6] = 0, s[10] = u, s[14] = d, s[3] = 0, s[7] = 0, s[11] = -1, s[15] = 0, this;
  }, makeOrthographic: function (e, t, n, i, r, o) {
    var s = this.elements, a = 1 / (t - e), l = 1 / (n - i), c = 1 / (o - r), h = (t + e) * a, u = (n + i) * l, d = (o + r) * c;
    return s[0] = 2 * a, s[4] = 0, s[8] = 0, s[12] = -h, s[1] = 0, s[5] = 2 * l, s[9] = 0, s[13] = -u, s[2] = 0, s[6] = 0, s[10] = -2 * c, s[14] = -d, s[3] = 0, s[7] = 0, s[11] = 0, s[15] = 1, this;
  }, equals: function (e) {
    for (var t = this.elements, n = e.elements, i = 0; i < 16; i++) if (t[i] !== n[i]) return false;
    return true;
  }, fromArray: function (e, t) {
    undefined === t && (t = 0);
    for (var n = 0; n < 16; n++) this.elements[n] = e[n + t];
    return this;
  }, toArray: function (e, t) {
    undefined === e && (e = []), undefined === t && (t = 0);
    var n = this.elements;
    return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
  }});
  var en = new Qt, tn = new Pt;
  function nn(e, t, n, i) {
    this._x = e || 0, this._y = t || 0, this._z = n || 0, this._order = i || nn.DefaultOrder;
  }
  function rn() {
    this.mask = 1;
  }
  nn.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], nn.DefaultOrder = "XYZ", Object.defineProperties(nn.prototype, {x: {get: function () {
    return this._x;
  }, set: function (e) {
    this._x = e, this._onChangeCallback();
  }}, y: {get: function () {
    return this._y;
  }, set: function (e) {
    this._y = e, this._onChangeCallback();
  }}, z: {get: function () {
    return this._z;
  }, set: function (e) {
    this._z = e, this._onChangeCallback();
  }}, order: {get: function () {
    return this._order;
  }, set: function (e) {
    this._order = e, this._onChangeCallback();
  }}}), Object.assign(nn.prototype, {isEuler: true, set: function (e, t, n, i) {
    return this._x = e, this._y = t, this._z = n, this._order = i || this._order, this._onChangeCallback(), this;
  }, clone: function () {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }, copy: function (e) {
    return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
  }, setFromRotationMatrix: function (e, t, n) {
    var i = Rt.clamp, r = e.elements, o = r[0], s = r[4], a = r[8], l = r[1], c = r[5], h = r[9], u = r[2], d = r[6], p = r[10];
    return "XYZ" === (t = t || this._order) ? (this._y = Math.asin(i(a, -1, 1)), Math.abs(a) < 0.9999999 ? (this._x = Math.atan2(-h, p), this._z = Math.atan2(-s, o)) : (this._x = Math.atan2(d, c), this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-i(h, -1, 1)), Math.abs(h) < 0.9999999 ? (this._y = Math.atan2(a, p), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, o), this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(i(d, -1, 1)), Math.abs(d) < 0.9999999 ? (this._y = Math.atan2(-u, p), this._z = Math.atan2(-s, c)) : (this._y = 0, this._z = Math.atan2(l, o))) : "ZYX" === t ? (this._y = Math.asin(-i(u, -1, 1)), Math.abs(u) < 0.9999999 ? (this._x = Math.atan2(d, p), this._z = Math.atan2(l, o)) : (this._x = 0, this._z = Math.atan2(-s, c))) : "YZX" === t ? (this._z = Math.asin(i(l, -1, 1)), Math.abs(l) < 0.9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-u, o)) : (this._x = 0, this._y = Math.atan2(a, p))) : "XZY" === t ? (this._z = Math.asin(-i(s, -1, 1)), Math.abs(s) < 0.9999999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(a, o)) : (this._x = Math.atan2(-h, p), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t), this._order = t, false !== n && this._onChangeCallback(), this;
  }, setFromQuaternion: function (e, t, n) {
    return en.makeRotationFromQuaternion(e), this.setFromRotationMatrix(en, t, n);
  }, setFromVector3: function (e, t) {
    return this.set(e.x, e.y, e.z, t || this._order);
  }, reorder: function (e) {
    return tn.setFromEuler(this), this.setFromQuaternion(tn, e);
  }, equals: function (e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
  }, fromArray: function (e) {
    return this._x = e[0], this._y = e[1], this._z = e[2], undefined !== e[3] && (this._order = e[3]), this._onChangeCallback(), this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
  }, toVector3: function (e) {
    return e ? e.set(this._x, this._y, this._z) : new It(this._x, this._y, this._z);
  }, _onChange: function (e) {
    return this._onChangeCallback = e, this;
  }, _onChangeCallback: function () {}}), Object.assign(rn.prototype, {set: function (e) {
    this.mask = 1 << e | 0;
  }, enable: function (e) {
    this.mask |= 1 << e | 0;
  }, enableAll: function () {
    this.mask = -1;
  }, toggle: function (e) {
    this.mask ^= 1 << e | 0;
  }, disable: function (e) {
    this.mask &= ~(1 << e | 0);
  }, disableAll: function () {
    this.mask = 0;
  }, test: function (e) {
    return 0 != (this.mask & e.mask);
  }});
  var on = 0, sn = new It, an = new Pt, ln = new Qt, cn = new It, hn = new It, un = new It, dn = new Pt, pn = new It(1, 0, 0), mn = new It(0, 1, 0), fn = new It(0, 0, 1), gn = {type: "added"}, vn = {type: "removed"};
  function yn() {
    Object.defineProperty(this, "id", {value: on++}), this.uuid = Rt.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = yn.DefaultUp.clone();
    var e = new It, t = new nn, n = new Pt, i = new It(1, 1, 1);
    t._onChange(function () {
      n.setFromEuler(t, false);
    }), n._onChange(function () {
      t.setFromQuaternion(n, undefined, false);
    }), Object.defineProperties(this, {position: {configurable: true, enumerable: true, value: e}, rotation: {configurable: true, enumerable: true, value: t}, quaternion: {configurable: true, enumerable: true, value: n}, scale: {configurable: true, enumerable: true, value: i}, modelViewMatrix: {value: new Qt}, normalMatrix: {value: new zt}}), this.matrix = new Qt, this.matrixWorld = new Qt, this.matrixAutoUpdate = yn.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = false, this.layers = new rn, this.visible = true, this.castShadow = false, this.receiveShadow = false, this.frustumCulled = true, this.renderOrder = 0, this.userData = {};
  }
  function _n() {
    yn.call(this), this.type = "Scene", this.background = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = true, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {detail: this}));
  }
  yn.DefaultUp = new It(0, 1, 0), yn.DefaultMatrixAutoUpdate = true, yn.prototype = Object.assign(Object.create(s.prototype), {constructor: yn, isObject3D: true, onBeforeRender: function () {}, onAfterRender: function () {}, applyMatrix: function (e) {
    this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
  }, applyQuaternion: function (e) {
    return this.quaternion.premultiply(e), this;
  }, setRotationFromAxisAngle: function (e, t) {
    this.quaternion.setFromAxisAngle(e, t);
  }, setRotationFromEuler: function (e) {
    this.quaternion.setFromEuler(e, true);
  }, setRotationFromMatrix: function (e) {
    this.quaternion.setFromRotationMatrix(e);
  }, setRotationFromQuaternion: function (e) {
    this.quaternion.copy(e);
  }, rotateOnAxis: function (e, t) {
    return an.setFromAxisAngle(e, t), this.quaternion.multiply(an), this;
  }, rotateOnWorldAxis: function (e, t) {
    return an.setFromAxisAngle(e, t), this.quaternion.premultiply(an), this;
  }, rotateX: function (e) {
    return this.rotateOnAxis(pn, e);
  }, rotateY: function (e) {
    return this.rotateOnAxis(mn, e);
  }, rotateZ: function (e) {
    return this.rotateOnAxis(fn, e);
  }, translateOnAxis: function (e, t) {
    return sn.copy(e).applyQuaternion(this.quaternion), this.position.add(sn.multiplyScalar(t)), this;
  }, translateX: function (e) {
    return this.translateOnAxis(pn, e);
  }, translateY: function (e) {
    return this.translateOnAxis(mn, e);
  }, translateZ: function (e) {
    return this.translateOnAxis(fn, e);
  }, localToWorld: function (e) {
    return e.applyMatrix4(this.matrixWorld);
  }, worldToLocal: function (e) {
    return e.applyMatrix4(ln.getInverse(this.matrixWorld));
  }, lookAt: function (e, t, n) {
    e.isVector3 ? cn.copy(e) : cn.set(e, t, n);
    var i = this.parent;
    this.updateWorldMatrix(true, false), hn.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? ln.lookAt(hn, cn, this.up) : ln.lookAt(cn, hn, this.up), this.quaternion.setFromRotationMatrix(ln), i && (ln.extractRotation(i.matrixWorld), an.setFromRotationMatrix(ln), this.quaternion.premultiply(an.inverse()));
  }, add: function (e) {
    if (arguments.length > 1) {
      for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
      return this;
    }
    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(gn)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
  }, remove: function (e) {
    if (arguments.length > 1) {
      for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
      return this;
    }
    var n = this.children.indexOf(e);
    return -1 !== n && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(vn)), this;
  }, attach: function (e) {
    return this.updateWorldMatrix(true, false), ln.getInverse(this.matrixWorld), null !== e.parent && (e.parent.updateWorldMatrix(true, false), ln.multiply(e.parent.matrixWorld)), e.applyMatrix(ln), e.updateWorldMatrix(false, false), this.add(e), this;
  }, getObjectById: function (e) {
    return this.getObjectByProperty("id", e);
  }, getObjectByName: function (e) {
    return this.getObjectByProperty("name", e);
  }, getObjectByProperty: function (e, t) {
    if (this[e] === t) return this;
    for (var n = 0, i = this.children.length; n < i; n++) {
      var r = this.children[n].getObjectByProperty(e, t);
      if (undefined !== r) return r;
    }
  }, getWorldPosition: function (e) {
    return undefined === e && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), e = new It), this.updateMatrixWorld(true), e.setFromMatrixPosition(this.matrixWorld);
  }, getWorldQuaternion: function (e) {
    return undefined === e && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), e = new Pt), this.updateMatrixWorld(true), this.matrixWorld.decompose(hn, e, un), e;
  }, getWorldScale: function (e) {
    return undefined === e && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), e = new It), this.updateMatrixWorld(true), this.matrixWorld.decompose(hn, dn, e), e;
  }, getWorldDirection: function (e) {
    undefined === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), e = new It), this.updateMatrixWorld(true);
    var t = this.matrixWorld.elements;
    return e.set(t[8], t[9], t[10]).normalize();
  }, raycast: function () {}, traverse: function (e) {
    e(this);
    for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].traverse(e);
  }, traverseVisible: function (e) {
    if (false !== this.visible) {
      e(this);
      for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].traverseVisible(e);
    }
  }, traverseAncestors: function (e) {
    var t = this.parent;
    null !== t && (e(t), t.traverseAncestors(e));
  }, updateMatrix: function () {
    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = true;
  }, updateMatrixWorld: function (e) {
    this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = false, e = true);
    for (var t = this.children, n = 0, i = t.length; n < i; n++) t[n].updateMatrixWorld(e);
  }, updateWorldMatrix: function (e, t) {
    var n = this.parent;
    if (true === e && null !== n && n.updateWorldMatrix(true, false), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), true === t) for (var i = this.children, r = 0, o = i.length; r < o; r++) i[r].updateWorldMatrix(false, true);
  }, toJSON: function (e) {
    var t = undefined === e || "string" == typeof e, n = {};
    t && (e = {geometries: {}, materials: {}, textures: {}, images: {}, shapes: {}}, n.metadata = {version: 4.5, type: "Object", generator: "Object3D.toJSON"});
    var i = {};
    function r(t, n) {
      return undefined === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid;
    }
    if (i.uuid = this.uuid, i.type = this.type, "" !== this.name && (i.name = this.name), true === this.castShadow && (i.castShadow = true), true === this.receiveShadow && (i.receiveShadow = true), false === this.visible && (i.visible = false), false === this.frustumCulled && (i.frustumCulled = false), 0 !== this.renderOrder && (i.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), false === this.matrixAutoUpdate && (i.matrixAutoUpdate = false), this.isMesh && this.drawMode !== dt && (i.drawMode = this.drawMode), this.isMesh || this.isLine || this.isPoints) {
      i.geometry = (undefined === e.geometries[this.geometry.uuid] && (e.geometries[this.geometry.uuid] = this.geometry.toJSON(e)), this.geometry.uuid);
      var o = this.geometry.parameters;
      if (undefined !== o && undefined !== o.shapes) {
        var s = o.shapes;
        if (Array.isArray(s)) for (var a = 0, l = s.length; a < l; a++) {
          var c = s[a];
          undefined === e.shapes[c.uuid] && (e.shapes[c.uuid] = c.toJSON(e)), c.uuid;
        } else undefined === e.shapes[s.uuid] && (e.shapes[s.uuid] = s.toJSON(e)), s.uuid;
      }
    }
    if (undefined !== this.material) if (Array.isArray(this.material)) {
      var h = [];
      for (a = 0, l = this.material.length; a < l; a++) h.push((undefined === e.materials[this.material[a].uuid] && (e.materials[this.material[a].uuid] = this.material[a].toJSON(e)), this.material[a].uuid));
      i.material = h;
    } else i.material = (undefined === e.materials[this.material.uuid] && (e.materials[this.material.uuid] = this.material.toJSON(e)), this.material.uuid);
    if (this.children.length > 0) {
      i.children = [];
      for (a = 0; a < this.children.length; a++) i.children.push(this.children[a].toJSON(e).object);
    }
    if (t) {
      var u = f(e.geometries), d = f(e.materials), p = f(e.textures), m = f(e.images);
      s = f(e.shapes);
      u.length > 0 && (n.geometries = u), d.length > 0 && (n.materials = d), p.length > 0 && (n.textures = p), m.length > 0 && (n.images = m), s.length > 0 && (n.shapes = s);
    }
    return n.object = i, n;
    function f(e) {
      var t = [];
      for (var n in e) {
        var i = e[n];
        delete i.metadata, t.push(i);
      }
      return t;
    }
  }, clone: function (e) {
    return (new this.constructor).copy(this, e);
  }, copy: function (e, t) {
    if (undefined === t && (t = true), this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), true === t) for (var n = 0; n < e.children.length; n++) {
      var i = e.children[n];
      this.add(i.clone());
    }
    return this;
  }}), _n.prototype = Object.assign(Object.create(yn.prototype), {constructor: _n, isScene: true, copy: function (e, t) {
    return yn.prototype.copy.call(this, e, t), null !== e.background && (this.background = e.background.clone()), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
  }, toJSON: function (e) {
    var t = yn.prototype.toJSON.call(this, e);
    return null !== this.background && (t.object.background = this.background.toJSON(e)), null !== this.fog && (t.object.fog = this.fog.toJSON()), t;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }});
  var xn = [new It, new It, new It, new It, new It, new It, new It, new It], bn = new It, wn = new It, Sn = new It, En = new It, qn = new It, Tn = new It, An = new It, Mn = new It, Cn = new It, kn = new It, Rn = new It;
  function Ln(e, t) {
    this.min = undefined !== e ? e : new It(Infinity, Infinity, Infinity), this.max = undefined !== t ? t : new It(-Infinity, -Infinity, -Infinity);
  }
  function Pn(e, t, n, i, r) {
    var o, s;
    for (o = 0, s = e.length - 3; o <= s; o += 3) {
      Rn.fromArray(e, o);
      var a = r.x * Math.abs(Rn.x) + r.y * Math.abs(Rn.y) + r.z * Math.abs(Rn.z), l = t.dot(Rn), c = n.dot(Rn), h = i.dot(Rn);
      if (Math.max(-Math.max(l, c, h), Math.min(l, c, h)) > a) return false;
    }
    return true;
  }
  Object.assign(Ln.prototype, {isBox3: true, set: function (e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }, setFromArray: function (e) {
    for (var t = Infinity, n = Infinity, i = Infinity, r = -Infinity, o = -Infinity, s = -Infinity, a = 0, l = e.length; a < l; a += 3) {
      var c = e[a], h = e[a + 1], u = e[a + 2];
      c < t && (t = c), h < n && (n = h), u < i && (i = u), c > r && (r = c), h > o && (o = h), u > s && (s = u);
    }
    return this.min.set(t, n, i), this.max.set(r, o, s), this;
  }, setFromBufferAttribute: function (e) {
    for (var t = Infinity, n = Infinity, i = Infinity, r = -Infinity, o = -Infinity, s = -Infinity, a = 0, l = e.count; a < l; a++) {
      var c = e.getX(a), h = e.getY(a), u = e.getZ(a);
      c < t && (t = c), h < n && (n = h), u < i && (i = u), c > r && (r = c), h > o && (o = h), u > s && (s = u);
    }
    return this.min.set(t, n, i), this.max.set(r, o, s), this;
  }, setFromPoints: function (e) {
    this.makeEmpty();
    for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
    return this;
  }, setFromCenterAndSize: function (e, t) {
    var n = bn.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
  }, setFromObject: function (e) {
    return this.makeEmpty(), this.expandByObject(e);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }, makeEmpty: function () {
    return this.min.x = this.min.y = this.min.z = Infinity, this.max.x = this.max.y = this.max.z = -Infinity, this;
  }, isEmpty: function () {
    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
  }, getCenter: function (e) {
    return undefined === e && (console.warn("THREE.Box3: .getCenter() target is now required"), e = new It), this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }, getSize: function (e) {
    return undefined === e && (console.warn("THREE.Box3: .getSize() target is now required"), e = new It), this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }, expandByPoint: function (e) {
    return this.min.min(e), this.max.max(e), this;
  }, expandByVector: function (e) {
    return this.min.sub(e), this.max.add(e), this;
  }, expandByScalar: function (e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }, expandByObject: function (e) {
    var t, n;
    e.updateWorldMatrix(false, false);
    var i = e.geometry;
    if (undefined !== i) if (i.isGeometry) {
      var r = i.vertices;
      for (t = 0, n = r.length; t < n; t++) bn.copy(r[t]), bn.applyMatrix4(e.matrixWorld), this.expandByPoint(bn);
    } else if (i.isBufferGeometry) {
      var o = i.attributes.position;
      if (undefined !== o) for (t = 0, n = o.count; t < n; t++) bn.fromBufferAttribute(o, t).applyMatrix4(e.matrixWorld), this.expandByPoint(bn);
    }
    var s = e.children;
    for (t = 0, n = s.length; t < n; t++) this.expandByObject(s[t]);
    return this;
  }, containsPoint: function (e) {
    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
  }, containsBox: function (e) {
    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
  }, getParameter: function (e, t) {
    return undefined === t && (console.warn("THREE.Box3: .getParameter() target is now required"), t = new It), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
  }, intersectsBox: function (e) {
    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
  }, intersectsSphere: function (e) {
    return this.clampPoint(e.center, bn), bn.distanceToSquared(e.center) <= e.radius * e.radius;
  }, intersectsPlane: function (e) {
    var t, n;
    return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
  }, intersectsTriangle: function (e) {
    if (this.isEmpty()) return false;
    this.getCenter(Mn), Cn.subVectors(this.max, Mn), wn.subVectors(e.a, Mn), Sn.subVectors(e.b, Mn), En.subVectors(e.c, Mn), qn.subVectors(Sn, wn), Tn.subVectors(En, Sn), An.subVectors(wn, En);
    var t = [0, -qn.z, qn.y, 0, -Tn.z, Tn.y, 0, -An.z, An.y, qn.z, 0, -qn.x, Tn.z, 0, -Tn.x, An.z, 0, -An.x, -qn.y, qn.x, 0, -Tn.y, Tn.x, 0, -An.y, An.x, 0];
    return !!Pn(t, wn, Sn, En, Cn) && (!!Pn(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], wn, Sn, En, Cn) && (kn.crossVectors(qn, Tn), Pn(t = [kn.x, kn.y, kn.z], wn, Sn, En, Cn)));
  }, clampPoint: function (e, t) {
    return undefined === t && (console.warn("THREE.Box3: .clampPoint() target is now required"), t = new It), t.copy(e).clamp(this.min, this.max);
  }, distanceToPoint: function (e) {
    return bn.copy(e).clamp(this.min, this.max).sub(e).length();
  }, getBoundingSphere: function (e) {
    return undefined === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"), this.getCenter(e.center), e.radius = 0.5 * this.getSize(bn).length(), e;
  }, intersect: function (e) {
    return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
  }, union: function (e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }, applyMatrix4: function (e) {
    return this.isEmpty() ? this : (xn[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), xn[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), xn[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), xn[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), xn[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), xn[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), xn[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), xn[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(xn), this);
  }, translate: function (e) {
    return this.min.add(e), this.max.add(e), this;
  }, equals: function (e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }});
  var Dn = new Ln;
  function On(e, t) {
    this.center = undefined !== e ? e : new It, this.radius = undefined !== t ? t : 0;
  }
  Object.assign(On.prototype, {set: function (e, t) {
    return this.center.copy(e), this.radius = t, this;
  }, setFromPoints: function (e, t) {
    var n = this.center;
    undefined !== t ? n.copy(t) : Dn.setFromPoints(e).getCenter(n);
    for (var i = 0, r = 0, o = e.length; r < o; r++) i = Math.max(i, n.distanceToSquared(e[r]));
    return this.radius = Math.sqrt(i), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.center.copy(e.center), this.radius = e.radius, this;
  }, empty: function () {
    return this.radius <= 0;
  }, containsPoint: function (e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }, distanceToPoint: function (e) {
    return e.distanceTo(this.center) - this.radius;
  }, intersectsSphere: function (e) {
    var t = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= t * t;
  }, intersectsBox: function (e) {
    return e.intersectsSphere(this);
  }, intersectsPlane: function (e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }, clampPoint: function (e, t) {
    var n = this.center.distanceToSquared(e);
    return undefined === t && (console.warn("THREE.Sphere: .clampPoint() target is now required"), t = new It), t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
  }, getBoundingBox: function (e) {
    return undefined === e && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), e = new Ln), e.set(this.center, this.center), e.expandByScalar(this.radius), e;
  }, applyMatrix4: function (e) {
    return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
  }, translate: function (e) {
    return this.center.add(e), this;
  }, equals: function (e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }});
  var In = new It, Bn = new It, Fn = new It, zn = new It, Nn = new It, Un = new It, Vn = new It;
  function Gn(e, t) {
    this.origin = undefined !== e ? e : new It, this.direction = undefined !== t ? t : new It;
  }
  Object.assign(Gn.prototype, {set: function (e, t) {
    return this.origin.copy(e), this.direction.copy(t), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
  }, at: function (e, t) {
    return undefined === t && (console.warn("THREE.Ray: .at() target is now required"), t = new It), t.copy(this.direction).multiplyScalar(e).add(this.origin);
  }, lookAt: function (e) {
    return this.direction.copy(e).sub(this.origin).normalize(), this;
  }, recast: function (e) {
    return this.origin.copy(this.at(e, In)), this;
  }, closestPointToPoint: function (e, t) {
    undefined === t && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), t = new It), t.subVectors(e, this.origin);
    var n = t.dot(this.direction);
    return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin);
  }, distanceToPoint: function (e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }, distanceSqToPoint: function (e) {
    var t = In.subVectors(e, this.origin).dot(this.direction);
    return t < 0 ? this.origin.distanceToSquared(e) : (In.copy(this.direction).multiplyScalar(t).add(this.origin), In.distanceToSquared(e));
  }, distanceSqToSegment: function (e, t, n, i) {
    Bn.copy(e).add(t).multiplyScalar(0.5), Fn.copy(t).sub(e).normalize(), zn.copy(this.origin).sub(Bn);
    var r, o, s, a, l = 0.5 * e.distanceTo(t), c = -this.direction.dot(Fn), h = zn.dot(this.direction), u = -zn.dot(Fn), d = zn.lengthSq(), p = Math.abs(1 - c * c);
    if (p > 0) if (o = c * h - u, a = l * p, (r = c * u - h) >= 0) if (o >= -a) if (o <= a) {
      var m = 1 / p;
      s = (r *= m) * (r + c * (o *= m) + 2 * h) + o * (c * r + o + 2 * u) + d;
    } else o = l, s = -(r = Math.max(0, -(c * o + h))) * r + o * (o + 2 * u) + d; else o = -l, s = -(r = Math.max(0, -(c * o + h))) * r + o * (o + 2 * u) + d; else o <= -a ? s = -(r = Math.max(0, -(-c * l + h))) * r + (o = r > 0 ? -l : Math.min(Math.max(-l, -u), l)) * (o + 2 * u) + d : o <= a ? (r = 0, s = (o = Math.min(Math.max(-l, -u), l)) * (o + 2 * u) + d) : s = -(r = Math.max(0, -(c * l + h))) * r + (o = r > 0 ? l : Math.min(Math.max(-l, -u), l)) * (o + 2 * u) + d; else o = c > 0 ? -l : l, s = -(r = Math.max(0, -(c * o + h))) * r + o * (o + 2 * u) + d;
    return n && n.copy(this.direction).multiplyScalar(r).add(this.origin), i && i.copy(Fn).multiplyScalar(o).add(Bn), s;
  }, intersectSphere: function (e, t) {
    In.subVectors(e.center, this.origin);
    var n = In.dot(this.direction), i = In.dot(In) - n * n, r = e.radius * e.radius;
    if (i > r) return null;
    var o = Math.sqrt(r - i), s = n - o, a = n + o;
    return s < 0 && a < 0 ? null : s < 0 ? this.at(a, t) : this.at(s, t);
  }, intersectsSphere: function (e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }, distanceToPlane: function (e) {
    var t = e.normal.dot(this.direction);
    if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
    var n = -(this.origin.dot(e.normal) + e.constant) / t;
    return n >= 0 ? n : null;
  }, intersectPlane: function (e, t) {
    var n = this.distanceToPlane(e);
    return null === n ? null : this.at(n, t);
  }, intersectsPlane: function (e) {
    var t = e.distanceToPoint(this.origin);
    return 0 === t || e.normal.dot(this.direction) * t < 0;
  }, intersectBox: function (e, t) {
    var n, i, r, o, s, a, l = 1 / this.direction.x, c = 1 / this.direction.y, h = 1 / this.direction.z, u = this.origin;
    return l >= 0 ? (n = (e.min.x - u.x) * l, i = (e.max.x - u.x) * l) : (n = (e.max.x - u.x) * l, i = (e.min.x - u.x) * l), c >= 0 ? (r = (e.min.y - u.y) * c, o = (e.max.y - u.y) * c) : (r = (e.max.y - u.y) * c, o = (e.min.y - u.y) * c), n > o || r > i ? null : ((r > n || n != n) && (n = r), (o < i || i != i) && (i = o), h >= 0 ? (s = (e.min.z - u.z) * h, a = (e.max.z - u.z) * h) : (s = (e.max.z - u.z) * h, a = (e.min.z - u.z) * h), n > a || s > i ? null : ((s > n || n != n) && (n = s), (a < i || i != i) && (i = a), i < 0 ? null : this.at(n >= 0 ? n : i, t)));
  }, intersectsBox: function (e) {
    return null !== this.intersectBox(e, In);
  }, intersectTriangle: function (e, t, n, i, r) {
    Nn.subVectors(t, e), Un.subVectors(n, e), Vn.crossVectors(Nn, Un);
    var o, s = this.direction.dot(Vn);
    if (s > 0) {
      if (i) return null;
      o = 1;
    } else {
      if (!(s < 0)) return null;
      o = -1, s = -s;
    }
    zn.subVectors(this.origin, e);
    var a = o * this.direction.dot(Un.crossVectors(zn, Un));
    if (a < 0) return null;
    var l = o * this.direction.dot(Nn.cross(zn));
    if (l < 0) return null;
    if (a + l > s) return null;
    var c = -o * zn.dot(Vn);
    return c < 0 ? null : this.at(c / s, r);
  }, applyMatrix4: function (e) {
    return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
  }, equals: function (e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }});
  var Hn = new It, jn = new It, $n = new It, Wn = new It, Xn = new It, Yn = new It, Jn = new It, Kn = new It, Zn = new It, Qn = new It;
  function ei(e, t, n) {
    this.a = undefined !== e ? e : new It, this.b = undefined !== t ? t : new It, this.c = undefined !== n ? n : new It;
  }
  Object.assign(ei, {getNormal: function (e, t, n, i) {
    undefined === i && (console.warn("THREE.Triangle: .getNormal() target is now required"), i = new It), i.subVectors(n, t), Hn.subVectors(e, t), i.cross(Hn);
    var r = i.lengthSq();
    return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
  }, getBarycoord: function (e, t, n, i, r) {
    Hn.subVectors(i, t), jn.subVectors(n, t), $n.subVectors(e, t);
    var o = Hn.dot(Hn), s = Hn.dot(jn), a = Hn.dot($n), l = jn.dot(jn), c = jn.dot($n), h = o * l - s * s;
    if (undefined === r && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), r = new It), 0 === h) return r.set(-2, -1, -1);
    var u = 1 / h, d = (l * a - s * c) * u, p = (o * c - s * a) * u;
    return r.set(1 - d - p, p, d);
  }, containsPoint: function (e, t, n, i) {
    return ei.getBarycoord(e, t, n, i, Wn), Wn.x >= 0 && Wn.y >= 0 && Wn.x + Wn.y <= 1;
  }, getUV: function (e, t, n, i, r, o, s, a) {
    return this.getBarycoord(e, t, n, i, Wn), a.set(0, 0), a.addScaledVector(r, Wn.x), a.addScaledVector(o, Wn.y), a.addScaledVector(s, Wn.z), a;
  }, isFrontFacing: function (e, t, n, i) {
    return Hn.subVectors(n, t), jn.subVectors(e, t), Hn.cross(jn).dot(i) < 0;
  }}), Object.assign(ei.prototype, {set: function (e, t, n) {
    return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
  }, setFromPointsAndIndices: function (e, t, n, i) {
    return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
  }, getArea: function () {
    return Hn.subVectors(this.c, this.b), jn.subVectors(this.a, this.b), 0.5 * Hn.cross(jn).length();
  }, getMidpoint: function (e) {
    return undefined === e && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), e = new It), e.addVectors(this.a, this.b).add(this.c).multiplyScalar(0.3333333333333333);
  }, getNormal: function (e) {
    return ei.getNormal(this.a, this.b, this.c, e);
  }, getPlane: function (e) {
    return undefined === e && (console.warn("THREE.Triangle: .getPlane() target is now required"), e = new It), e.setFromCoplanarPoints(this.a, this.b, this.c);
  }, getBarycoord: function (e, t) {
    return ei.getBarycoord(e, this.a, this.b, this.c, t);
  }, getUV: function (e, t, n, i, r) {
    return ei.getUV(e, this.a, this.b, this.c, t, n, i, r);
  }, containsPoint: function (e) {
    return ei.containsPoint(e, this.a, this.b, this.c);
  }, isFrontFacing: function (e) {
    return ei.isFrontFacing(this.a, this.b, this.c, e);
  }, intersectsBox: function (e) {
    return e.intersectsTriangle(this);
  }, closestPointToPoint: function (e, t) {
    undefined === t && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), t = new It);
    var n, i, r = this.a, o = this.b, s = this.c;
    Xn.subVectors(o, r), Yn.subVectors(s, r), Kn.subVectors(e, r);
    var a = Xn.dot(Kn), l = Yn.dot(Kn);
    if (a <= 0 && l <= 0) return t.copy(r);
    Zn.subVectors(e, o);
    var c = Xn.dot(Zn), h = Yn.dot(Zn);
    if (c >= 0 && h <= c) return t.copy(o);
    var u = a * h - c * l;
    if (u <= 0 && a >= 0 && c <= 0) return n = a / (a - c), t.copy(r).addScaledVector(Xn, n);
    Qn.subVectors(e, s);
    var d = Xn.dot(Qn), p = Yn.dot(Qn);
    if (p >= 0 && d <= p) return t.copy(s);
    var m = d * l - a * p;
    if (m <= 0 && l >= 0 && p <= 0) return i = l / (l - p), t.copy(r).addScaledVector(Yn, i);
    var f = c * p - d * h;
    if (f <= 0 && h - c >= 0 && d - p >= 0) return Jn.subVectors(s, o), i = (h - c) / (h - c + (d - p)), t.copy(o).addScaledVector(Jn, i);
    var g = 1 / (f + m + u);
    return n = m * g, i = u * g, t.copy(r).addScaledVector(Xn, n).addScaledVector(Yn, i);
  }, equals: function (e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }});
  var ti = {aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074}, ni = {h: 0, s: 0, l: 0}, ii = {h: 0, s: 0, l: 0};
  function ri(e, t, n) {
    return undefined === t && undefined === n ? this.set(e) : this.setRGB(e, t, n);
  }
  function oi(e, t, n) {
    return n < 0 && (n += 1), n > 1 && (n -= 1), n < 0.16666666666666666 ? e + 6 * (t - e) * n : n < 0.5 ? t : n < 0.6666666666666666 ? e + 6 * (t - e) * (0.6666666666666666 - n) : e;
  }
  function si(e) {
    return e < 0.04045 ? 0.0773993808 * e : Math.pow(0.9478672986 * e + 0.0521327014, 2.4);
  }
  function ai(e) {
    return e < 0.0031308 ? 12.92 * e : 1.055 * Math.pow(e, 0.41666) - 0.055;
  }
  function li(e, t, n, i, r, o) {
    this.a = e, this.b = t, this.c = n, this.normal = i && i.isVector3 ? i : new It, this.vertexNormals = Array.isArray(i) ? i : [], this.color = r && r.isColor ? r : new ri, this.vertexColors = Array.isArray(r) ? r : [], this.materialIndex = undefined !== o ? o : 0;
  }
  Object.assign(ri.prototype, {isColor: true, r: 1, g: 1, b: 1, set: function (e) {
    return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e), this;
  }, setScalar: function (e) {
    return this.r = e, this.g = e, this.b = e, this;
  }, setHex: function (e) {
    return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this;
  }, setRGB: function (e, t, n) {
    return this.r = e, this.g = t, this.b = n, this;
  }, setHSL: function (e, t, n) {
    if (e = Rt.euclideanModulo(e, 1), t = Rt.clamp(t, 0, 1), n = Rt.clamp(n, 0, 1), 0 === t) this.r = this.g = this.b = n; else {
      var i = n <= 0.5 ? n * (1 + t) : n + t - n * t, r = 2 * n - i;
      this.r = (e + 0.3333333333333333 < 0 && (e + 0.3333333333333333 += 1), e + 0.3333333333333333 > 1 && (e + 0.3333333333333333 -= 1), e + 0.3333333333333333 < 0.16666666666666666 ? r + 6 * (i - r) * (e + 0.3333333333333333) : e + 0.3333333333333333 < 0.5 ? i : e + 0.3333333333333333 < 0.6666666666666666 ? r + 6 * (i - r) * (0.6666666666666666 - (e + 0.3333333333333333)) : r), this.g = (e < 0 && (e += 1), e > 1 && (e -= 1), e < 0.16666666666666666 ? r + 6 * (i - r) * e : e < 0.5 ? i : e < 0.6666666666666666 ? r + 6 * (i - r) * (0.6666666666666666 - e) : r), this.b = (e - 0.3333333333333333 < 0 && (e - 0.3333333333333333 += 1), e - 0.3333333333333333 > 1 && (e - 0.3333333333333333 -= 1), e - 0.3333333333333333 < 0.16666666666666666 ? r + 6 * (i - r) * (e - 0.3333333333333333) : e - 0.3333333333333333 < 0.5 ? i : e - 0.3333333333333333 < 0.6666666666666666 ? r + 6 * (i - r) * (0.6666666666666666 - (e - 0.3333333333333333)) : r);
    }
    return this;
  }, setStyle: function (e) {
    function t(t) {
      undefined !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
    }
    var n;
    if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
      var i, r = n[1], o = n[2];
      switch (r) {
        case "rgb":
        case "rgba":
          if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[5]), this;
          if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[5]), this;
          break;
        case "hsl":
        case "hsla":
          if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) {
            var s = parseFloat(i[1]) / 360, a = parseInt(i[2], 10) / 100, l = parseInt(i[3], 10) / 100;
            return t(i[5]), this.setHSL(s, a, l);
          }
      }
    } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
      var c, h = (c = n[1]).length;
      if (3 === h) return this.r = parseInt(c.charAt(0) + c.charAt(0), 16) / 255, this.g = parseInt(c.charAt(1) + c.charAt(1), 16) / 255, this.b = parseInt(c.charAt(2) + c.charAt(2), 16) / 255, this;
      if (6 === h) return this.r = parseInt(c.charAt(0) + c.charAt(1), 16) / 255, this.g = parseInt(c.charAt(2) + c.charAt(3), 16) / 255, this.b = parseInt(c.charAt(4) + c.charAt(5), 16) / 255, this;
    }
    e && e.length > 0 && (undefined !== (c = ti[e]) ? this.setHex(c) : console.warn("THREE.Color: Unknown color " + e));
    return this;
  }, clone: function () {
    return new this.constructor(this.r, this.g, this.b);
  }, copy: function (e) {
    return this.r = e.r, this.g = e.g, this.b = e.b, this;
  }, copyGammaToLinear: function (e, t) {
    return undefined === t && (t = 2), this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this;
  }, copyLinearToGamma: function (e, t) {
    undefined === t && (t = 2);
    var n = t > 0 ? 1 / t : 1;
    return this.r = Math.pow(e.r, n), this.g = Math.pow(e.g, n), this.b = Math.pow(e.b, n), this;
  }, convertGammaToLinear: function (e) {
    return this.copyGammaToLinear(this, e), this;
  }, convertLinearToGamma: function (e) {
    return this.copyLinearToGamma(this, e), this;
  }, copySRGBToLinear: function (e) {
    return this.r = si(e.r), this.g = si(e.g), this.b = si(e.b), this;
  }, copyLinearToSRGB: function (e) {
    return this.r = ai(e.r), this.g = ai(e.g), this.b = ai(e.b), this;
  }, convertSRGBToLinear: function () {
    return this.copySRGBToLinear(this), this;
  }, convertLinearToSRGB: function () {
    return this.copyLinearToSRGB(this), this;
  }, getHex: function () {
    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;
  }, getHexString: function () {
    return ("000000" + this.getHex().toString(16)).slice(-6);
  }, getHSL: function (e) {
    undefined === e && (console.warn("THREE.Color: .getHSL() target is now required"), e = {h: 0, s: 0, l: 0});
    var t, n, i = this.r, r = this.g, o = this.b, s = Math.max(i, r, o), a = Math.min(i, r, o), l = (a + s) / 2;
    if (a === s) t = 0, n = 0; else {
      var c = s - a;
      switch (n = l <= 0.5 ? c / (s + a) : c / (2 - s - a), s) {
        case i:
          t = (r - o) / c + (r < o ? 6 : 0);
          break;
        case r:
          t = (o - i) / c + 2;
          break;
        case o:
          t = (i - r) / c + 4;
      }
      t /= 6;
    }
    return e.h = t, e.s = n, e.l = l, e;
  }, getStyle: function () {
    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")";
  }, offsetHSL: function (e, t, n) {
    return this.getHSL(ni), ni.h += e, ni.s += t, ni.l += n, this.setHSL(ni.h, ni.s, ni.l), this;
  }, add: function (e) {
    return this.r += e.r, this.g += e.g, this.b += e.b, this;
  }, addColors: function (e, t) {
    return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
  }, addScalar: function (e) {
    return this.r += e, this.g += e, this.b += e, this;
  }, sub: function (e) {
    return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
  }, multiply: function (e) {
    return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
  }, multiplyScalar: function (e) {
    return this.r *= e, this.g *= e, this.b *= e, this;
  }, lerp: function (e, t) {
    return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
  }, lerpHSL: function (e, t) {
    this.getHSL(ni), e.getHSL(ii);
    var n = Rt.lerp(ni.h, ii.h, t), i = Rt.lerp(ni.s, ii.s, t), r = Rt.lerp(ni.l, ii.l, t);
    return this.setHSL(n, i, r), this;
  }, equals: function (e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }, fromArray: function (e, t) {
    return undefined === t && (t = 0), this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
  }, toArray: function (e, t) {
    return undefined === e && (e = []), undefined === t && (t = 0), e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
  }, toJSON: function () {
    return this.getHex();
  }}), Object.assign(li.prototype, {clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    this.a = e.a, this.b = e.b, this.c = e.c, this.normal.copy(e.normal), this.color.copy(e.color), this.materialIndex = e.materialIndex;
    for (var t = 0, n = e.vertexNormals.length; t < n; t++) this.vertexNormals[t] = e.vertexNormals[t].clone();
    for (t = 0, n = e.vertexColors.length; t < n; t++) this.vertexColors[t] = e.vertexColors[t].clone();
    return this;
  }});
  var ci = 0;
  function hi() {
    Object.defineProperty(this, "id", {value: ci++}), this.uuid = Rt.generateUUID(), this.name = "", this.type = "Material", this.fog = true, this.lights = true, this.blending = b, this.side = m, this.flatShading = false, this.vertexTangents = false, this.vertexColors = v, this.opacity = 1, this.transparent = false, this.blendSrc = O, this.blendDst = I, this.blendEquation = T, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = j, this.depthTest = true, this.depthWrite = true, this.stencilFunc = Mt, this.stencilRef = 0, this.stencilMask = 255, this.stencilFail = At, this.stencilZFail = At, this.stencilZPass = At, this.stencilWrite = false, this.clippingPlanes = null, this.clipIntersection = false, this.clipShadows = false, this.shadowSide = null, this.colorWrite = true, this.precision = null, this.polygonOffset = false, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = false, this.alphaTest = 0, this.premultipliedAlpha = false, this.visible = true, this.toneMapped = true, this.userData = {}, this.needsUpdate = true;
  }
  function ui(e) {
    hi.call(this), this.type = "MeshBasicMaterial", this.color = new ri(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = J, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.lights = false, this.setValues(e);
  }
  function di(e, t, n) {
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    this.name = "", this.array = e, this.itemSize = t, this.count = undefined !== e ? e.length / t : 0, this.normalized = true === n, this.dynamic = false, this.updateRange = {offset: 0, count: -1}, this.version = 0;
  }
  function pi(e, t, n) {
    di.call(this, new Int8Array(e), t, n);
  }
  function mi(e, t, n) {
    di.call(this, new Uint8Array(e), t, n);
  }
  function fi(e, t, n) {
    di.call(this, new Uint8ClampedArray(e), t, n);
  }
  function gi(e, t, n) {
    di.call(this, new Int16Array(e), t, n);
  }
  function vi(e, t, n) {
    di.call(this, new Uint16Array(e), t, n);
  }
  function yi(e, t, n) {
    di.call(this, new Int32Array(e), t, n);
  }
  function _i(e, t, n) {
    di.call(this, new Uint32Array(e), t, n);
  }
  function xi(e, t, n) {
    di.call(this, new Float32Array(e), t, n);
  }
  function bi(e, t, n) {
    di.call(this, new Float64Array(e), t, n);
  }
  function wi() {
    this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = false, this.normalsNeedUpdate = false, this.colorsNeedUpdate = false, this.uvsNeedUpdate = false, this.groupsNeedUpdate = false;
  }
  function Si(e) {
    if (0 === e.length) return -Infinity;
    for (var t = e[0], n = 1, i = e.length; n < i; ++n) e[n] > t && (t = e[n]);
    return t;
  }
  hi.prototype = Object.assign(Object.create(s.prototype), {constructor: hi, isMaterial: true, onBeforeCompile: function () {}, setValues: function (e) {
    if (undefined !== e) for (var t in e) {
      var n = e[t];
      if (undefined !== n) if ("shading" !== t) {
        var i = this[t];
        undefined !== i ? i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.");
      } else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === n; else console.warn("THREE.Material: '" + t + "' parameter is undefined.");
    }
  }, toJSON: function (e) {
    var t = undefined === e || "string" == typeof e;
    t && (e = {textures: {}, images: {}});
    var n = {metadata: {version: 4.5, type: "Material", generator: "Material.toJSON"}};
    function i(e) {
      var t = [];
      for (var n in e) {
        var i = e[n];
        delete i.metadata, t.push(i);
      }
      return t;
    }
    if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), undefined !== this.roughness && (n.roughness = this.roughness), undefined !== this.metalness && (n.metalness = this.metalness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), undefined !== this.shininess && (n.shininess = this.shininess), undefined !== this.clearcoat && (n.clearcoat = this.clearcoat), undefined !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, n.reflectivity = this.reflectivity, n.refractionRatio = this.refractionRatio, undefined !== this.combine && (n.combine = this.combine), undefined !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), undefined !== this.size && (n.size = this.size), undefined !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== b && (n.blending = this.blending), true === this.flatShading && (n.flatShading = this.flatShading), this.side !== m && (n.side = this.side), this.vertexColors !== v && (n.vertexColors = this.vertexColors), this.opacity < 1 && (n.opacity = this.opacity), true === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.stencilWrite = this.stencilWrite, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilMask = this.stencilMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), true === this.polygonOffset && (n.polygonOffset = true), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), undefined !== this.dashSize && (n.dashSize = this.dashSize), undefined !== this.gapSize && (n.gapSize = this.gapSize), undefined !== this.scale && (n.scale = this.scale), true === this.dithering && (n.dithering = true), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), true === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), true === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), true === this.morphTargets && (n.morphTargets = true), true === this.morphNormals && (n.morphNormals = true), true === this.skinning && (n.skinning = true), false === this.visible && (n.visible = false), false === this.toneMapped && (n.toneMapped = false), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), t) {
      var r = i(e.textures), o = i(e.images);
      r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
    }
    return n;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    this.name = e.name, this.fog = e.fog, this.lights = e.lights, this.blending = e.blending, this.side = e.side, this.flatShading = e.flatShading, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWrite = e.stencilWrite, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilMask = e.stencilMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this.clipShadows = e.clipShadows, this.clipIntersection = e.clipIntersection;
    var t = e.clippingPlanes, n = null;
    if (null !== t) {
      var i = t.length;
      n = new Array(i);
      for (var r = 0; r !== i; ++r) n[r] = t[r].clone();
    }
    return this.clippingPlanes = n, this.shadowSide = e.shadowSide, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }}), ui.prototype = Object.create(hi.prototype), ui.prototype.constructor = ui, ui.prototype.isMeshBasicMaterial = true, ui.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this;
  }, Object.defineProperty(di.prototype, "needsUpdate", {set: function (e) {
    true === e && this.version++;
  }}), Object.assign(di.prototype, {isBufferAttribute: true, onUploadCallback: function () {}, setArray: function (e) {
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    return this.count = undefined !== e ? e.length / this.itemSize : 0, this.array = e, this;
  }, setDynamic: function (e) {
    return this.dynamic = e, this;
  }, copy: function (e) {
    return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.dynamic = e.dynamic, this;
  }, copyAt: function (e, t, n) {
    e *= this.itemSize, n *= t.itemSize;
    for (var i = 0, r = this.itemSize; i < r; i++) this.array[e + i] = t.array[n + i];
    return this;
  }, copyArray: function (e) {
    return this.array.set(e), this;
  }, copyColorsArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new ri), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b;
    }
    return this;
  }, copyVector2sArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new Lt), t[n++] = o.x, t[n++] = o.y;
    }
    return this;
  }, copyVector3sArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new It), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z;
    }
    return this;
  }, copyVector4sArray: function (e) {
    for (var t = this.array, n = 0, i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      undefined === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new Gt), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w;
    }
    return this;
  }, set: function (e, t) {
    return undefined === t && (t = 0), this.array.set(e, t), this;
  }, getX: function (e) {
    return this.array[e * this.itemSize];
  }, setX: function (e, t) {
    return this.array[e * this.itemSize] = t, this;
  }, getY: function (e) {
    return this.array[e * this.itemSize + 1];
  }, setY: function (e, t) {
    return this.array[e * this.itemSize + 1] = t, this;
  }, getZ: function (e) {
    return this.array[e * this.itemSize + 2];
  }, setZ: function (e, t) {
    return this.array[e * this.itemSize + 2] = t, this;
  }, getW: function (e) {
    return this.array[e * this.itemSize + 3];
  }, setW: function (e, t) {
    return this.array[e * this.itemSize + 3] = t, this;
  }, setXY: function (e, t, n) {
    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this;
  }, setXYZ: function (e, t, n, i) {
    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
  }, setXYZW: function (e, t, n, i, r) {
    return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
  }, onUpload: function (e) {
    return this.onUploadCallback = e, this;
  }, clone: function () {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }, toJSON: function () {
    return {itemSize: this.itemSize, type: this.array.constructor.name, array: Array.prototype.slice.call(this.array), normalized: this.normalized};
  }}), pi.prototype = Object.create(di.prototype), pi.prototype.constructor = pi, mi.prototype = Object.create(di.prototype), mi.prototype.constructor = mi, fi.prototype = Object.create(di.prototype), fi.prototype.constructor = fi, gi.prototype = Object.create(di.prototype), gi.prototype.constructor = gi, vi.prototype = Object.create(di.prototype), vi.prototype.constructor = vi, yi.prototype = Object.create(di.prototype), yi.prototype.constructor = yi, _i.prototype = Object.create(di.prototype), _i.prototype.constructor = _i, xi.prototype = Object.create(di.prototype), xi.prototype.constructor = xi, bi.prototype = Object.create(di.prototype), bi.prototype.constructor = bi, Object.assign(wi.prototype, {computeGroups: function (e) {
    for (var t, n = [], i = undefined, r = e.faces, o = 0; o < r.length; o++) {
      var s = r[o];
      s.materialIndex !== i && (i = s.materialIndex, undefined !== t && (t.count = 3 * o - t.start, n.push(t)), t = {start: 3 * o, materialIndex: i});
    }
    undefined !== t && (t.count = 3 * o - t.start, n.push(t)), this.groups = n;
  }, fromGeometry: function (e) {
    var t, n = e.faces, i = e.vertices, r = e.faceVertexUvs, o = r[0] && r[0].length > 0, s = r[1] && r[1].length > 0, a = e.morphTargets, l = a.length;
    if (l > 0) {
      t = [];
      for (var c = 0; c < l; c++) t[c] = {name: a[c].name, data: []};
      this.morphTargets.position = t;
    }
    var h, u = e.morphNormals, d = u.length;
    if (d > 0) {
      h = [];
      for (c = 0; c < d; c++) h[c] = {name: u[c].name, data: []};
      this.morphTargets.normal = h;
    }
    var p = e.skinIndices, m = e.skinWeights, f = p.length === i.length, g = m.length === i.length;
    i.length > 0 && 0 === n.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
    for (c = 0; c < n.length; c++) {
      var v = n[c];
      this.vertices.push(i[v.a], i[v.b], i[v.c]);
      var y = v.vertexNormals;
      if (3 === y.length) this.normals.push(y[0], y[1], y[2]); else {
        var _ = v.normal;
        this.normals.push(_, _, _);
      }
      var x, b = v.vertexColors;
      if (3 === b.length) this.colors.push(b[0], b[1], b[2]); else {
        var w = v.color;
        this.colors.push(w, w, w);
      }
      if (true === o) undefined !== (x = r[0][c]) ? this.uvs.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", c), this.uvs.push(new Lt, new Lt, new Lt));
      if (true === s) undefined !== (x = r[1][c]) ? this.uvs2.push(x[0], x[1], x[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", c), this.uvs2.push(new Lt, new Lt, new Lt));
      for (var S = 0; S < l; S++) {
        var E = a[S].vertices;
        t[S].data.push(E[v.a], E[v.b], E[v.c]);
      }
      for (S = 0; S < d; S++) {
        var q = u[S].vertexNormals[c];
        h[S].data.push(q.a, q.b, q.c);
      }
      f && this.skinIndices.push(p[v.a], p[v.b], p[v.c]), g && this.skinWeights.push(m[v.a], m[v.b], m[v.c]);
    }
    return this.computeGroups(e), this.verticesNeedUpdate = e.verticesNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this;
  }});
  var Ei = 1, qi = new Qt, Ti = new yn, Ai = new It, Mi = new Ln, Ci = new Ln, ki = new It;
  function Ri() {
    Object.defineProperty(this, "id", {value: Ei += 2}), this.uuid = Rt.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {start: 0, count: Infinity}, this.userData = {};
  }
  Ri.prototype = Object.assign(Object.create(s.prototype), {constructor: Ri, isBufferGeometry: true, getIndex: function () {
    return this.index;
  }, setIndex: function (e) {
    Array.isArray(e) ? this.index = new (Si(e) > 65535 ? _i : vi)(e, 1) : this.index = e;
  }, addAttribute: function (e, t) {
    return t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(t), this) : (this.attributes[e] = t, this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(e, new di(arguments[1], arguments[2])));
  }, getAttribute: function (e) {
    return this.attributes[e];
  }, removeAttribute: function (e) {
    return delete this.attributes[e], this;
  }, addGroup: function (e, t, n) {
    this.groups.push({start: e, count: t, materialIndex: undefined !== n ? n : 0});
  }, clearGroups: function () {
    this.groups = [];
  }, setDrawRange: function (e, t) {
    this.drawRange.start = e, this.drawRange.count = t;
  }, applyMatrix: function (e) {
    var t = this.attributes.position;
    undefined !== t && (e.applyToBufferAttribute(t), t.needsUpdate = true);
    var n = this.attributes.normal;
    undefined !== n && ((new zt).getNormalMatrix(e).applyToBufferAttribute(n), n.needsUpdate = true);
    var i = this.attributes.tangent;
    undefined !== i && ((new zt).getNormalMatrix(e).applyToBufferAttribute(i), i.needsUpdate = true);
    return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this;
  }, rotateX: function (e) {
    return qi.makeRotationX(e), this.applyMatrix(qi), this;
  }, rotateY: function (e) {
    return qi.makeRotationY(e), this.applyMatrix(qi), this;
  }, rotateZ: function (e) {
    return qi.makeRotationZ(e), this.applyMatrix(qi), this;
  }, translate: function (e, t, n) {
    return qi.makeTranslation(e, t, n), this.applyMatrix(qi), this;
  }, scale: function (e, t, n) {
    return qi.makeScale(e, t, n), this.applyMatrix(qi), this;
  }, lookAt: function (e) {
    return Ti.lookAt(e), Ti.updateMatrix(), this.applyMatrix(Ti.matrix), this;
  }, center: function () {
    return this.computeBoundingBox(), this.boundingBox.getCenter(Ai).negate(), this.translate(Ai.x, Ai.y, Ai.z), this;
  }, setFromObject: function (e) {
    var t = e.geometry;
    if (e.isPoints || e.isLine) {
      var n = new xi(3 * t.vertices.length, 3), i = new xi(3 * t.colors.length, 3);
      if (this.addAttribute("position", n.copyVector3sArray(t.vertices)), this.addAttribute("color", i.copyColorsArray(t.colors)), t.lineDistances && t.lineDistances.length === t.vertices.length) {
        var r = new xi(t.lineDistances.length, 1);
        this.addAttribute("lineDistance", r.copyArray(t.lineDistances));
      }
      null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone());
    } else e.isMesh && t && t.isGeometry && this.fromGeometry(t);
    return this;
  }, setFromPoints: function (e) {
    for (var t = [], n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      t.push(r.x, r.y, r.z || 0);
    }
    return this.addAttribute("position", new xi(t, 3)), this;
  }, updateFromObject: function (e) {
    var t, n = e.geometry;
    if (e.isMesh) {
      var i = n.__directGeometry;
      if (true === n.elementsNeedUpdate && (i = undefined, n.elementsNeedUpdate = false), undefined === i) return this.fromGeometry(n);
      i.verticesNeedUpdate = n.verticesNeedUpdate, i.normalsNeedUpdate = n.normalsNeedUpdate, i.colorsNeedUpdate = n.colorsNeedUpdate, i.uvsNeedUpdate = n.uvsNeedUpdate, i.groupsNeedUpdate = n.groupsNeedUpdate, n.verticesNeedUpdate = false, n.normalsNeedUpdate = false, n.colorsNeedUpdate = false, n.uvsNeedUpdate = false, n.groupsNeedUpdate = false, n = i;
    }
    return true === n.verticesNeedUpdate && (undefined !== (t = this.attributes.position) && (t.copyVector3sArray(n.vertices), t.needsUpdate = true), n.verticesNeedUpdate = false), true === n.normalsNeedUpdate && (undefined !== (t = this.attributes.normal) && (t.copyVector3sArray(n.normals), t.needsUpdate = true), n.normalsNeedUpdate = false), true === n.colorsNeedUpdate && (undefined !== (t = this.attributes.color) && (t.copyColorsArray(n.colors), t.needsUpdate = true), n.colorsNeedUpdate = false), n.uvsNeedUpdate && (undefined !== (t = this.attributes.uv) && (t.copyVector2sArray(n.uvs), t.needsUpdate = true), n.uvsNeedUpdate = false), n.lineDistancesNeedUpdate && (undefined !== (t = this.attributes.lineDistance) && (t.copyArray(n.lineDistances), t.needsUpdate = true), n.lineDistancesNeedUpdate = false), n.groupsNeedUpdate && (n.computeGroups(e.geometry), this.groups = n.groups, n.groupsNeedUpdate = false), this;
  }, fromGeometry: function (e) {
    return e.__directGeometry = (new wi).fromGeometry(e), this.fromDirectGeometry(e.__directGeometry);
  }, fromDirectGeometry: function (e) {
    var t = new Float32Array(3 * e.vertices.length);
    if (this.addAttribute("position", new di(t, 3).copyVector3sArray(e.vertices)), e.normals.length > 0) {
      var n = new Float32Array(3 * e.normals.length);
      this.addAttribute("normal", new di(n, 3).copyVector3sArray(e.normals));
    }
    if (e.colors.length > 0) {
      var i = new Float32Array(3 * e.colors.length);
      this.addAttribute("color", new di(i, 3).copyColorsArray(e.colors));
    }
    if (e.uvs.length > 0) {
      var r = new Float32Array(2 * e.uvs.length);
      this.addAttribute("uv", new di(r, 2).copyVector2sArray(e.uvs));
    }
    if (e.uvs2.length > 0) {
      var o = new Float32Array(2 * e.uvs2.length);
      this.addAttribute("uv2", new di(o, 2).copyVector2sArray(e.uvs2));
    }
    for (var s in this.groups = e.groups, e.morphTargets) {
      for (var a = [], l = e.morphTargets[s], c = 0, h = l.length; c < h; c++) {
        var u = l[c], d = new xi(3 * u.data.length, 3);
        d.name = u.name, a.push(d.copyVector3sArray(u.data));
      }
      this.morphAttributes[s] = a;
    }
    if (e.skinIndices.length > 0) {
      var p = new xi(4 * e.skinIndices.length, 4);
      this.addAttribute("skinIndex", p.copyVector4sArray(e.skinIndices));
    }
    if (e.skinWeights.length > 0) {
      var m = new xi(4 * e.skinWeights.length, 4);
      this.addAttribute("skinWeight", m.copyVector4sArray(e.skinWeights));
    }
    return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this;
  }, computeBoundingBox: function () {
    null === this.boundingBox && (this.boundingBox = new Ln);
    var e = this.attributes.position, t = this.morphAttributes.position;
    if (undefined !== e) {
      if (this.boundingBox.setFromBufferAttribute(e), t) for (var n = 0, i = t.length; n < i; n++) {
        var r = t[n];
        Mi.setFromBufferAttribute(r), this.boundingBox.expandByPoint(Mi.min), this.boundingBox.expandByPoint(Mi.max);
      }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
  }, computeBoundingSphere: function () {
    null === this.boundingSphere && (this.boundingSphere = new On);
    var e = this.attributes.position, t = this.morphAttributes.position;
    if (e) {
      var n = this.boundingSphere.center;
      if (Mi.setFromBufferAttribute(e), t) for (var i = 0, r = t.length; i < r; i++) {
        var o = t[i];
        Ci.setFromBufferAttribute(o), Mi.expandByPoint(Ci.min), Mi.expandByPoint(Ci.max);
      }
      Mi.getCenter(n);
      var s = 0;
      for (i = 0, r = e.count; i < r; i++) ki.fromBufferAttribute(e, i), s = Math.max(s, n.distanceToSquared(ki));
      if (t) for (i = 0, r = t.length; i < r; i++) for (var a = 0, l = (o = t[i]).count; a < l; a++) ki.fromBufferAttribute(o, a), s = Math.max(s, n.distanceToSquared(ki));
      this.boundingSphere.radius = Math.sqrt(s), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
    }
  }, computeFaceNormals: function () {}, computeVertexNormals: function () {
    var e = this.index, t = this.attributes;
    if (t.position) {
      var n = t.position.array;
      if (undefined === t.normal) this.addAttribute("normal", new di(new Float32Array(n.length), 3)); else for (var i = t.normal.array, r = 0, o = i.length; r < o; r++) i[r] = 0;
      var s, a, l, c = t.normal.array, h = new It, u = new It, d = new It, p = new It, m = new It;
      if (e) {
        var f = e.array;
        for (r = 0, o = e.count; r < o; r += 3) s = 3 * f[r + 0], a = 3 * f[r + 1], l = 3 * f[r + 2], h.fromArray(n, s), u.fromArray(n, a), d.fromArray(n, l), p.subVectors(d, u), m.subVectors(h, u), p.cross(m), c[s] += p.x, c[s + 1] += p.y, c[s + 2] += p.z, c[a] += p.x, c[a + 1] += p.y, c[a + 2] += p.z, c[l] += p.x, c[l + 1] += p.y, c[l + 2] += p.z;
      } else for (r = 0, o = n.length; r < o; r += 9) h.fromArray(n, r), u.fromArray(n, r + 3), d.fromArray(n, r + 6), p.subVectors(d, u), m.subVectors(h, u), p.cross(m), c[r] = p.x, c[r + 1] = p.y, c[r + 2] = p.z, c[r + 3] = p.x, c[r + 4] = p.y, c[r + 5] = p.z, c[r + 6] = p.x, c[r + 7] = p.y, c[r + 8] = p.z;
      this.normalizeNormals(), t.normal.needsUpdate = true;
    }
  }, merge: function (e, t) {
    if (e && e.isBufferGeometry) {
      undefined === t && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
      var n = this.attributes;
      for (var i in n) if (undefined !== e.attributes[i]) for (var r = n[i].array, o = e.attributes[i], s = o.array, a = o.itemSize * t, l = Math.min(s.length, r.length - a), c = 0, h = a; c < l; c++, h++) r[h] = s[c];
      return this;
    }
    console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
  }, normalizeNormals: function () {
    for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++) ki.x = e.getX(t), ki.y = e.getY(t), ki.z = e.getZ(t), ki.normalize(), e.setXYZ(t, ki.x, ki.y, ki.z);
  }, toNonIndexed: function () {
    function e(e, t) {
      for (var n = e.array, i = e.itemSize, r = new n.constructor(t.length * i), o = 0, s = 0, a = 0, l = t.length; a < l; a++) {
        o = t[a] * i;
        for (var c = 0; c < i; c++) r[s++] = n[o++];
      }
      return new di(r, i);
    }
    if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
    var t = new Ri, n = this.index.array, i = this.attributes;
    for (var r in i) {
      var o = e(i[r], n);
      t.addAttribute(r, o);
    }
    var s = this.morphAttributes;
    for (r in s) {
      for (var a = [], l = s[r], c = 0, h = l.length; c < h; c++) {
        o = e(l[c], n);
        a.push(o);
      }
      t.morphAttributes[r] = a;
    }
    for (var u = this.groups, d = (c = 0, u.length); c < d; c++) {
      var p = u[c];
      t.addGroup(p.start, p.count, p.materialIndex);
    }
    return t;
  }, toJSON: function () {
    var e = {metadata: {version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON"}};
    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), undefined !== this.parameters) {
      var t = this.parameters;
      for (var n in t) undefined !== t[n] && (e[n] = t[n]);
      return e;
    }
    e.data = {attributes: {}};
    var i = this.index;
    null !== i && (e.data.index = {type: i.array.constructor.name, array: Array.prototype.slice.call(i.array)});
    var r = this.attributes;
    for (var n in r) {
      var o = (d = r[n]).toJSON();
      "" !== d.name && (o.name = d.name), e.data.attributes[n] = o;
    }
    var s = {}, a = false;
    for (var n in this.morphAttributes) {
      for (var l = this.morphAttributes[n], c = [], h = 0, u = l.length; h < u; h++) {
        var d;
        o = (d = l[h]).toJSON();
        "" !== d.name && (o.name = d.name), c.push(o);
      }
      c.length > 0 && (s[n] = c, a = true);
    }
    a && (e.data.morphAttributes = s);
    var p = this.groups;
    p.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(p)));
    var m = this.boundingSphere;
    return null !== m && (e.data.boundingSphere = {center: m.center.toArray(), radius: m.radius}), e;
  }, clone: function () {
    return (new Ri).copy(this);
  }, copy: function (e) {
    var t, n, i;
    this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
    var r = e.index;
    null !== r && this.setIndex(r.clone());
    var o = e.attributes;
    for (t in o) {
      var s = o[t];
      this.addAttribute(t, s.clone());
    }
    var a = e.morphAttributes;
    for (t in a) {
      var l = [], c = a[t];
      for (n = 0, i = c.length; n < i; n++) l.push(c[n].clone());
      this.morphAttributes[t] = l;
    }
    var h = e.groups;
    for (n = 0, i = h.length; n < i; n++) {
      var u = h[n];
      this.addGroup(u.start, u.count, u.materialIndex);
    }
    var d = e.boundingBox;
    null !== d && (this.boundingBox = d.clone());
    var p = e.boundingSphere;
    return null !== p && (this.boundingSphere = p.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }});
  var Li = new Qt, Pi = new Gn, Di = new On, Oi = new It, Ii = new It, Bi = new It, Fi = new It, zi = new It, Ni = new It, Ui = new It, Vi = new It, Gi = new It, Hi = new Lt, ji = new Lt, $i = new Lt, Wi = new It, Xi = new It;
  function Yi(e, t) {
    yn.call(this), this.type = "Mesh", this.geometry = undefined !== e ? e : new Ri, this.material = undefined !== t ? t : new ui({color: 16777215 * Math.random()}), this.drawMode = dt, this.updateMorphTargets();
  }
  function Ji(e, t, n, i, r, o, s, a) {
    if (null === (t.side === f ? i.intersectTriangle(s, o, r, true, a) : i.intersectTriangle(r, o, s, t.side !== g, a))) return null;
    Xi.copy(a), Xi.applyMatrix4(e.matrixWorld);
    var l = n.ray.origin.distanceTo(Xi);
    return l < n.near || l > n.far ? null : {distance: l, point: Xi.clone(), object: e};
  }
  function Ki(e, t, n, i, r, o, s, a, l, c, h) {
    Oi.fromBufferAttribute(r, l), Ii.fromBufferAttribute(r, c), Bi.fromBufferAttribute(r, h);
    var u = e.morphTargetInfluences;
    if (t.morphTargets && o && u) {
      Ui.set(0, 0, 0), Vi.set(0, 0, 0), Gi.set(0, 0, 0);
      for (var d = 0, p = o.length; d < p; d++) {
        var m = u[d], f = o[d];
        0 !== m && (Fi.fromBufferAttribute(f, l), zi.fromBufferAttribute(f, c), Ni.fromBufferAttribute(f, h), Ui.addScaledVector(Fi.sub(Oi), m), Vi.addScaledVector(zi.sub(Ii), m), Gi.addScaledVector(Ni.sub(Bi), m));
      }
      Oi.add(Ui), Ii.add(Vi), Bi.add(Gi);
    }
    var g = Ji(e, t, n, i, Oi, Ii, Bi, Wi);
    if (g) {
      s && (Hi.fromBufferAttribute(s, l), ji.fromBufferAttribute(s, c), $i.fromBufferAttribute(s, h), g.uv = ei.getUV(Wi, Oi, Ii, Bi, Hi, ji, $i, new Lt)), a && (Hi.fromBufferAttribute(a, l), ji.fromBufferAttribute(a, c), $i.fromBufferAttribute(a, h), g.uv2 = ei.getUV(Wi, Oi, Ii, Bi, Hi, ji, $i, new Lt));
      var v = new li(l, c, h);
      ei.getNormal(Oi, Ii, Bi, v.normal), g.face = v;
    }
    return g;
  }
  Yi.prototype = Object.assign(Object.create(yn.prototype), {constructor: Yi, isMesh: true, setDrawMode: function (e) {
    this.drawMode = e;
  }, copy: function (e) {
    return yn.prototype.copy.call(this, e), this.drawMode = e.drawMode, undefined !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), undefined !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this;
  }, updateMorphTargets: function () {
    var e, t, n, i = this.geometry;
    if (i.isBufferGeometry) {
      var r = i.morphAttributes, o = Object.keys(r);
      if (o.length > 0) {
        var s = r[o[0]];
        if (undefined !== s) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = s.length; e < t; e++) n = s[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e;
      }
    } else {
      var a = i.morphTargets;
      undefined !== a && a.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
  }, raycast: function (e, t) {
    var n, i = this.geometry, r = this.material, o = this.matrixWorld;
    if (undefined !== r && (null === i.boundingSphere && i.computeBoundingSphere(), Di.copy(i.boundingSphere), Di.applyMatrix4(o), false !== e.ray.intersectsSphere(Di) && (Li.getInverse(o), Pi.copy(e.ray).applyMatrix4(Li), null === i.boundingBox || false !== Pi.intersectsBox(i.boundingBox)))) if (i.isBufferGeometry) {
      var s, a, l, c, h, u, d, p, m, f = i.index, g = i.attributes.position, v = i.morphAttributes.position, y = i.attributes.uv, _ = i.attributes.uv2, x = i.groups, b = i.drawRange;
      if (null !== f) if (Array.isArray(r)) for (c = 0, u = x.length; c < u; c++) for (m = r[(p = x[c]).materialIndex], h = Math.max(p.start, b.start), d = Math.min(p.start + p.count, b.start + b.count); h < d; h += 3) s = f.getX(h), a = f.getX(h + 1), l = f.getX(h + 2), (n = Ki(this, m, e, Pi, g, v, y, _, s, a, l)) && (n.faceIndex = Math.floor(h / 3), n.face.materialIndex = p.materialIndex, t.push(n)); else for (c = Math.max(0, b.start), u = Math.min(f.count, b.start + b.count); c < u; c += 3) s = f.getX(c), a = f.getX(c + 1), l = f.getX(c + 2), (n = Ki(this, r, e, Pi, g, v, y, _, s, a, l)) && (n.faceIndex = Math.floor(c / 3), t.push(n)); else if (undefined !== g) if (Array.isArray(r)) for (c = 0, u = x.length; c < u; c++) for (m = r[(p = x[c]).materialIndex], h = Math.max(p.start, b.start), d = Math.min(p.start + p.count, b.start + b.count); h < d; h += 3) (n = Ki(this, m, e, Pi, g, v, y, _, s = h, a = h + 1, l = h + 2)) && (n.faceIndex = Math.floor(h / 3), n.face.materialIndex = p.materialIndex, t.push(n)); else for (c = Math.max(0, b.start), u = Math.min(g.count, b.start + b.count); c < u; c += 3) (n = Ki(this, r, e, Pi, g, v, y, _, s = c, a = c + 1, l = c + 2)) && (n.faceIndex = Math.floor(c / 3), t.push(n));
    } else if (i.isGeometry) {
      var w, S, E, q, T = Array.isArray(r), A = i.vertices, M = i.faces, C = i.faceVertexUvs[0];
      C.length > 0 && (q = C);
      for (var k = 0, R = M.length; k < R; k++) {
        var L = M[k], P = T ? r[L.materialIndex] : r;
        if (undefined !== P && (w = A[L.a], S = A[L.b], E = A[L.c], n = Ji(this, P, e, Pi, w, S, E, Wi))) {
          if (q && q[k]) {
            var D = q[k];
            Hi.copy(D[0]), ji.copy(D[1]), $i.copy(D[2]), n.uv = ei.getUV(Wi, w, S, E, Hi, ji, $i, new Lt);
          }
          n.face = L, n.faceIndex = k, t.push(n);
        }
      }
    }
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }});
  var Zi = 0, Qi = new Qt, er = new yn, tr = new It;
  function nr() {
    Object.defineProperty(this, "id", {value: Zi += 2}), this.uuid = Rt.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = false, this.verticesNeedUpdate = false, this.uvsNeedUpdate = false, this.normalsNeedUpdate = false, this.colorsNeedUpdate = false, this.lineDistancesNeedUpdate = false, this.groupsNeedUpdate = false;
  }
  function ir(e, t, n, i, r, o) {
    nr.call(this), this.type = "BoxGeometry", this.parameters = {width: e, height: t, depth: n, widthSegments: i, heightSegments: r, depthSegments: o}, this.fromBufferGeometry(new rr(e, t, n, i, r, o)), this.mergeVertices();
  }
  function rr(e, t, n, i, r, o) {
    Ri.call(this), this.type = "BoxBufferGeometry", this.parameters = {width: e, height: t, depth: n, widthSegments: i, heightSegments: r, depthSegments: o};
    var s = this;
    e = e || 1, t = t || 1, n = n || 1, i = Math.floor(i) || 1, r = Math.floor(r) || 1, o = Math.floor(o) || 1;
    var a = [], l = [], c = [], h = [], u = 0, d = 0;
    function p(e, t, n, i, r, o, p, m, f, g, v) {
      var y, _, x = o / f, b = p / g, w = o / 2, S = p / 2, E = m / 2, q = f + 1, T = g + 1, A = 0, M = 0, C = new It;
      for (_ = 0; _ < T; _++) {
        var k = _ * b - S;
        for (y = 0; y < q; y++) {
          var R = y * x - w;
          C[e] = R * i, C[t] = k * r, C[n] = E, l.push(C.x, C.y, C.z), C[e] = 0, C[t] = 0, C[n] = m > 0 ? 1 : -1, c.push(C.x, C.y, C.z), h.push(y / f), h.push(1 - _ / g), A += 1;
        }
      }
      for (_ = 0; _ < g; _++) for (y = 0; y < f; y++) {
        var L = u + y + q * _, P = u + y + q * (_ + 1), D = u + (y + 1) + q * (_ + 1), O = u + (y + 1) + q * _;
        a.push(L, P, O), a.push(P, D, O), M += 6;
      }
      s.addGroup(d, M, v), d += M, u += A;
    }
    p("z", "y", "x", -1, -1, n, t, e, o, r, 0), p("z", "y", "x", 1, -1, n, t, -e, o, r, 1), p("x", "z", "y", 1, 1, e, n, t, i, o, 2), p("x", "z", "y", 1, -1, e, n, -t, i, o, 3), p("x", "y", "z", 1, -1, e, t, n, i, r, 4), p("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(a), this.addAttribute("position", new xi(l, 3)), this.addAttribute("normal", new xi(c, 3)), this.addAttribute("uv", new xi(h, 2));
  }
  function or(e) {
    var t = {};
    for (var n in e) for (var i in t[n] = {}, e[n]) {
      var r = e[n][i];
      r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? t[n][i] = r.clone() : Array.isArray(r) ? t[n][i] = r.slice() : t[n][i] = r;
    }
    return t;
  }
  function sr(e) {
    for (var t = {}, n = 0; n < e.length; n++) {
      var i = or(e[n]);
      for (var r in i) t[r] = i[r];
    }
    return t;
  }
  nr.prototype = Object.assign(Object.create(s.prototype), {constructor: nr, isGeometry: true, applyMatrix: function (e) {
    for (var t = (new zt).getNormalMatrix(e), n = 0, i = this.vertices.length; n < i; n++) {
      this.vertices[n].applyMatrix4(e);
    }
    for (n = 0, i = this.faces.length; n < i; n++) {
      var r = this.faces[n];
      r.normal.applyMatrix3(t).normalize();
      for (var o = 0, s = r.vertexNormals.length; o < s; o++) r.vertexNormals[o].applyMatrix3(t).normalize();
    }
    return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = true, this.normalsNeedUpdate = true, this;
  }, rotateX: function (e) {
    return Qi.makeRotationX(e), this.applyMatrix(Qi), this;
  }, rotateY: function (e) {
    return Qi.makeRotationY(e), this.applyMatrix(Qi), this;
  }, rotateZ: function (e) {
    return Qi.makeRotationZ(e), this.applyMatrix(Qi), this;
  }, translate: function (e, t, n) {
    return Qi.makeTranslation(e, t, n), this.applyMatrix(Qi), this;
  }, scale: function (e, t, n) {
    return Qi.makeScale(e, t, n), this.applyMatrix(Qi), this;
  }, lookAt: function (e) {
    return er.lookAt(e), er.updateMatrix(), this.applyMatrix(er.matrix), this;
  }, fromBufferGeometry: function (e) {
    var t = this, n = null !== e.index ? e.index.array : undefined, i = e.attributes, r = i.position.array, o = undefined !== i.normal ? i.normal.array : undefined, s = undefined !== i.color ? i.color.array : undefined, a = undefined !== i.uv ? i.uv.array : undefined, l = undefined !== i.uv2 ? i.uv2.array : undefined;
    undefined !== l && (this.faceVertexUvs[1] = []);
    for (var c = 0; c < r.length; c += 3) t.vertices.push((new It).fromArray(r, c)), undefined !== s && t.colors.push((new ri).fromArray(s, c));
    function h(e, n, i, r) {
      var c = undefined === s ? [] : [t.colors[e].clone(), t.colors[n].clone(), t.colors[i].clone()], h = new li(e, n, i, undefined === o ? [] : [(new It).fromArray(o, 3 * e), (new It).fromArray(o, 3 * n), (new It).fromArray(o, 3 * i)], c, r);
      t.faces.push(h), undefined !== a && t.faceVertexUvs[0].push([(new Lt).fromArray(a, 2 * e), (new Lt).fromArray(a, 2 * n), (new Lt).fromArray(a, 2 * i)]), undefined !== l && t.faceVertexUvs[1].push([(new Lt).fromArray(l, 2 * e), (new Lt).fromArray(l, 2 * n), (new Lt).fromArray(l, 2 * i)]);
    }
    var u = e.groups;
    if (u.length > 0) for (c = 0; c < u.length; c++) for (var d = u[c], p = d.start, m = p, f = p + d.count; m < f; m += 3) undefined !== n ? h(n[m], n[m + 1], n[m + 2], d.materialIndex) : h(m, m + 1, m + 2, d.materialIndex); else if (undefined !== n) for (c = 0; c < n.length; c += 3) h(n[c], n[c + 1], n[c + 2]); else for (c = 0; c < r.length / 3; c += 3) h(c, c + 1, c + 2);
    return this.computeFaceNormals(), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), this;
  }, center: function () {
    return this.computeBoundingBox(), this.boundingBox.getCenter(tr).negate(), this.translate(tr.x, tr.y, tr.z), this;
  }, normalize: function () {
    this.computeBoundingSphere();
    var e = this.boundingSphere.center, t = this.boundingSphere.radius, n = 0 === t ? 1 : 1 / t, i = new Qt;
    return i.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1), this.applyMatrix(i), this;
  }, computeFaceNormals: function () {
    for (var e = new It, t = new It, n = 0, i = this.faces.length; n < i; n++) {
      var r = this.faces[n], o = this.vertices[r.a], s = this.vertices[r.b], a = this.vertices[r.c];
      e.subVectors(a, s), t.subVectors(o, s), e.cross(t), e.normalize(), r.normal.copy(e);
    }
  }, computeVertexNormals: function (e) {
    var t, n, i, r, o, s;
    for (undefined === e && (e = true), s = new Array(this.vertices.length), t = 0, n = this.vertices.length; t < n; t++) s[t] = new It;
    if (e) {
      var a, l, c, h = new It, u = new It;
      for (i = 0, r = this.faces.length; i < r; i++) o = this.faces[i], a = this.vertices[o.a], l = this.vertices[o.b], c = this.vertices[o.c], h.subVectors(c, l), u.subVectors(a, l), h.cross(u), s[o.a].add(h), s[o.b].add(h), s[o.c].add(h);
    } else for (this.computeFaceNormals(), i = 0, r = this.faces.length; i < r; i++) s[(o = this.faces[i]).a].add(o.normal), s[o.b].add(o.normal), s[o.c].add(o.normal);
    for (t = 0, n = this.vertices.length; t < n; t++) s[t].normalize();
    for (i = 0, r = this.faces.length; i < r; i++) {
      var d = (o = this.faces[i]).vertexNormals;
      3 === d.length ? (d[0].copy(s[o.a]), d[1].copy(s[o.b]), d[2].copy(s[o.c])) : (d[0] = s[o.a].clone(), d[1] = s[o.b].clone(), d[2] = s[o.c].clone());
    }
    this.faces.length > 0 && (this.normalsNeedUpdate = true);
  }, computeFlatVertexNormals: function () {
    var e, t, n;
    for (this.computeFaceNormals(), e = 0, t = this.faces.length; e < t; e++) {
      var i = (n = this.faces[e]).vertexNormals;
      3 === i.length ? (i[0].copy(n.normal), i[1].copy(n.normal), i[2].copy(n.normal)) : (i[0] = n.normal.clone(), i[1] = n.normal.clone(), i[2] = n.normal.clone());
    }
    this.faces.length > 0 && (this.normalsNeedUpdate = true);
  }, computeMorphNormals: function () {
    var e, t, n, i, r;
    for (n = 0, i = this.faces.length; n < i; n++) for ((r = this.faces[n]).__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(), r.__originalVertexNormals || (r.__originalVertexNormals = []), e = 0, t = r.vertexNormals.length; e < t; e++) r.__originalVertexNormals[e] ? r.__originalVertexNormals[e].copy(r.vertexNormals[e]) : r.__originalVertexNormals[e] = r.vertexNormals[e].clone();
    var o = new nr;
    for (o.faces = this.faces, e = 0, t = this.morphTargets.length; e < t; e++) {
      if (!this.morphNormals[e]) {
        this.morphNormals[e] = {}, this.morphNormals[e].faceNormals = [], this.morphNormals[e].vertexNormals = [];
        var s = this.morphNormals[e].faceNormals, a = this.morphNormals[e].vertexNormals;
        for (n = 0, i = this.faces.length; n < i; n++) l = new It, c = {a: new It, b: new It, c: new It}, s.push(l), a.push(c);
      }
      var l, c, h = this.morphNormals[e];
      for (o.vertices = this.morphTargets[e].vertices, o.computeFaceNormals(), o.computeVertexNormals(), n = 0, i = this.faces.length; n < i; n++) r = this.faces[n], l = h.faceNormals[n], c = h.vertexNormals[n], l.copy(r.normal), c.a.copy(r.vertexNormals[0]), c.b.copy(r.vertexNormals[1]), c.c.copy(r.vertexNormals[2]);
    }
    for (n = 0, i = this.faces.length; n < i; n++) (r = this.faces[n]).normal = r.__originalFaceNormal, r.vertexNormals = r.__originalVertexNormals;
  }, computeBoundingBox: function () {
    null === this.boundingBox && (this.boundingBox = new Ln), this.boundingBox.setFromPoints(this.vertices);
  }, computeBoundingSphere: function () {
    null === this.boundingSphere && (this.boundingSphere = new On), this.boundingSphere.setFromPoints(this.vertices);
  }, merge: function (e, t, n) {
    if (e && e.isGeometry) {
      var i, r = this.vertices.length, o = this.vertices, s = e.vertices, a = this.faces, l = e.faces, c = this.colors, h = e.colors;
      undefined === n && (n = 0), undefined !== t && (i = (new zt).getNormalMatrix(t));
      for (var u = 0, d = s.length; u < d; u++) {
        var p = s[u].clone();
        undefined !== t && p.applyMatrix4(t), o.push(p);
      }
      for (u = 0, d = h.length; u < d; u++) c.push(h[u].clone());
      for (u = 0, d = l.length; u < d; u++) {
        var m, f, g, v = l[u], y = v.vertexNormals, _ = v.vertexColors;
        (m = new li(v.a + r, v.b + r, v.c + r)).normal.copy(v.normal), undefined !== i && m.normal.applyMatrix3(i).normalize();
        for (var x = 0, b = y.length; x < b; x++) f = y[x].clone(), undefined !== i && f.applyMatrix3(i).normalize(), m.vertexNormals.push(f);
        m.color.copy(v.color);
        for (x = 0, b = _.length; x < b; x++) g = _[x], m.vertexColors.push(g.clone());
        m.materialIndex = v.materialIndex + n, a.push(m);
      }
      for (u = 0, d = e.faceVertexUvs.length; u < d; u++) {
        var w = e.faceVertexUvs[u];
        undefined === this.faceVertexUvs[u] && (this.faceVertexUvs[u] = []);
        for (x = 0, b = w.length; x < b; x++) {
          for (var S = w[x], E = [], q = 0, T = S.length; q < T; q++) E.push(S[q].clone());
          this.faceVertexUvs[u].push(E);
        }
      }
    } else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e);
  }, mergeMesh: function (e) {
    e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(), this.merge(e.geometry, e.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e);
  }, mergeVertices: function () {
    var e, t, n, i, r, o, s, a, l = {}, c = [], h = [], u = Math.pow(10, 4);
    for (n = 0, i = this.vertices.length; n < i; n++) e = this.vertices[n], undefined === l[t = Math.round(e.x * u) + "_" + Math.round(e.y * u) + "_" + Math.round(e.z * u)] ? (l[t] = n, c.push(this.vertices[n]), h[n] = c.length - 1) : h[n] = h[l[t]];
    var d = [];
    for (n = 0, i = this.faces.length; n < i; n++) {
      (r = this.faces[n]).a = h[r.a], r.b = h[r.b], r.c = h[r.c], o = [r.a, r.b, r.c];
      for (var p = 0; p < 3; p++) if (o[p] === o[(p + 1) % 3]) {
        d.push(n);
        break;
      }
    }
    for (n = d.length - 1; n >= 0; n--) {
      var m = d[n];
      for (this.faces.splice(m, 1), s = 0, a = this.faceVertexUvs.length; s < a; s++) this.faceVertexUvs[s].splice(m, 1);
    }
    var f = this.vertices.length - c.length;
    return this.vertices = c, f;
  }, setFromPoints: function (e) {
    this.vertices = [];
    for (var t = 0, n = e.length; t < n; t++) {
      var i = e[t];
      this.vertices.push(new It(i.x, i.y, i.z || 0));
    }
    return this;
  }, sortFacesByMaterialIndex: function () {
    for (var e = this.faces, t = e.length, n = 0; n < t; n++) e[n]._id = n;
    e.sort(function (e, t) {
      return e.materialIndex - t.materialIndex;
    });
    var i, r, o = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
    o && o.length === t && (i = []), s && s.length === t && (r = []);
    for (n = 0; n < t; n++) {
      var a = e[n]._id;
      i && i.push(o[a]), r && r.push(s[a]);
    }
    i && (this.faceVertexUvs[0] = i), r && (this.faceVertexUvs[1] = r);
  }, toJSON: function () {
    var e = {metadata: {version: 4.5, type: "Geometry", generator: "Geometry.toJSON"}};
    if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), undefined !== this.parameters) {
      var t = this.parameters;
      for (var n in t) undefined !== t[n] && (e[n] = t[n]);
      return e;
    }
    for (var i = [], r = 0; r < this.vertices.length; r++) {
      var o = this.vertices[r];
      i.push(o.x, o.y, o.z);
    }
    var s = [], a = [], l = {}, c = [], h = {}, u = [], d = {};
    for (r = 0; r < this.faces.length; r++) {
      var p = this.faces[r], m = undefined !== this.faceVertexUvs[0][r], f = p.normal.length() > 0, g = p.vertexNormals.length > 0, v = 1 !== p.color.r || 1 !== p.color.g || 1 !== p.color.b, y = p.vertexColors.length > 0, _ = 0;
      if (_ = S(_, 0, 0), _ = S(_, 1, true), _ = S(_, 2, false), _ = S(_, 3, m), _ = S(_, 4, f), _ = S(_, 5, g), _ = S(_, 6, v), _ = S(_, 7, y), s.push(_), s.push(p.a, p.b, p.c), s.push(p.materialIndex), m) {
        var x = this.faceVertexUvs[0][r];
        s.push(T(x[0]), T(x[1]), T(x[2]));
      }
      if (f && s.push(E(p.normal)), g) {
        var b = p.vertexNormals;
        s.push(E(b[0]), E(b[1]), E(b[2]));
      }
      if (v && s.push(q(p.color)), y) {
        var w = p.vertexColors;
        s.push(q(w[0]), q(w[1]), q(w[2]));
      }
    }
    function S(e, t, n) {
      return n ? e | 1 << t : e & ~(1 << t);
    }
    function E(e) {
      var t = e.x.toString() + e.y.toString() + e.z.toString();
      return undefined !== l[t] ? l[t] : (l[t] = a.length / 3, a.push(e.x, e.y, e.z), l[t]);
    }
    function q(e) {
      var t = e.r.toString() + e.g.toString() + e.b.toString();
      return undefined !== h[t] ? h[t] : (h[t] = c.length, c.push(e.getHex()), h[t]);
    }
    function T(e) {
      var t = e.x.toString() + e.y.toString();
      return undefined !== d[t] ? d[t] : (d[t] = u.length / 2, u.push(e.x, e.y), d[t]);
    }
    return e.data = {}, e.data.vertices = i, e.data.normals = a, c.length > 0 && (e.data.colors = c), u.length > 0 && (e.data.uvs = [u]), e.data.faces = s, e;
  }, clone: function () {
    return (new nr).copy(this);
  }, copy: function (e) {
    var t, n, i, r, o, s;
    this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
    var a = e.vertices;
    for (t = 0, n = a.length; t < n; t++) this.vertices.push(a[t].clone());
    var l = e.colors;
    for (t = 0, n = l.length; t < n; t++) this.colors.push(l[t].clone());
    var c = e.faces;
    for (t = 0, n = c.length; t < n; t++) this.faces.push(c[t].clone());
    for (t = 0, n = e.faceVertexUvs.length; t < n; t++) {
      var h = e.faceVertexUvs[t];
      for (undefined === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []), i = 0, r = h.length; i < r; i++) {
        var u = h[i], d = [];
        for (o = 0, s = u.length; o < s; o++) {
          var p = u[o];
          d.push(p.clone());
        }
        this.faceVertexUvs[t].push(d);
      }
    }
    var m = e.morphTargets;
    for (t = 0, n = m.length; t < n; t++) {
      var f = {};
      if (f.name = m[t].name, undefined !== m[t].vertices) for (f.vertices = [], i = 0, r = m[t].vertices.length; i < r; i++) f.vertices.push(m[t].vertices[i].clone());
      if (undefined !== m[t].normals) for (f.normals = [], i = 0, r = m[t].normals.length; i < r; i++) f.normals.push(m[t].normals[i].clone());
      this.morphTargets.push(f);
    }
    var g = e.morphNormals;
    for (t = 0, n = g.length; t < n; t++) {
      var v = {};
      if (undefined !== g[t].vertexNormals) for (v.vertexNormals = [], i = 0, r = g[t].vertexNormals.length; i < r; i++) {
        var y = g[t].vertexNormals[i], _ = {};
        _.a = y.a.clone(), _.b = y.b.clone(), _.c = y.c.clone(), v.vertexNormals.push(_);
      }
      if (undefined !== g[t].faceNormals) for (v.faceNormals = [], i = 0, r = g[t].faceNormals.length; i < r; i++) v.faceNormals.push(g[t].faceNormals[i].clone());
      this.morphNormals.push(v);
    }
    var x = e.skinWeights;
    for (t = 0, n = x.length; t < n; t++) this.skinWeights.push(x[t].clone());
    var b = e.skinIndices;
    for (t = 0, n = b.length; t < n; t++) this.skinIndices.push(b[t].clone());
    var w = e.lineDistances;
    for (t = 0, n = w.length; t < n; t++) this.lineDistances.push(w[t]);
    var S = e.boundingBox;
    null !== S && (this.boundingBox = S.clone());
    var E = e.boundingSphere;
    return null !== E && (this.boundingSphere = E.clone()), this.elementsNeedUpdate = e.elementsNeedUpdate, this.verticesNeedUpdate = e.verticesNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, this;
  }, dispose: function () {
    this.dispatchEvent({type: "dispose"});
  }}), ir.prototype = Object.create(nr.prototype), ir.prototype.constructor = ir, rr.prototype = Object.create(Ri.prototype), rr.prototype.constructor = rr;
  var ar = "\nvoid main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n", lr = "\nvoid main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n";
  function cr(e) {
    hi.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = ar, this.fragmentShader = lr, this.linewidth = 1, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.clipping = false, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.extensions = {derivatives: false, fragDepth: false, drawBuffers: false, shaderTextureLOD: false}, this.defaultAttributeValues = {color: [1, 1, 1], uv: [0, 0], uv2: [0, 0]}, this.index0AttributeName = undefined, this.uniformsNeedUpdate = false, undefined !== e && (undefined !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
  }
  function hr() {
    yn.call(this), this.type = "Camera", this.matrixWorldInverse = new Qt, this.projectionMatrix = new Qt, this.projectionMatrixInverse = new Qt;
  }
  function ur(e, t, n, i) {
    hr.call(this), this.type = "PerspectiveCamera", this.fov = undefined !== e ? e : 50, this.zoom = 1, this.near = undefined !== n ? n : 0.1, this.far = undefined !== i ? i : 2e3, this.focus = 10, this.aspect = undefined !== t ? t : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
  }
  cr.prototype = Object.create(hi.prototype), cr.prototype.constructor = cr, cr.prototype.isShaderMaterial = true, cr.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = or(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this.extensions = e.extensions, this;
  }, cr.prototype.toJSON = function (e) {
    var t = hi.prototype.toJSON.call(this, e);
    for (var n in t.uniforms = {}, this.uniforms) {
      var i = this.uniforms[n].value;
      i && i.isTexture ? t.uniforms[n] = {type: "t", value: i.toJSON(e).uuid} : i && i.isColor ? t.uniforms[n] = {type: "c", value: i.getHex()} : i && i.isVector2 ? t.uniforms[n] = {type: "v2", value: i.toArray()} : i && i.isVector3 ? t.uniforms[n] = {type: "v3", value: i.toArray()} : i && i.isVector4 ? t.uniforms[n] = {type: "v4", value: i.toArray()} : i && i.isMatrix3 ? t.uniforms[n] = {type: "m3", value: i.toArray()} : i && i.isMatrix4 ? t.uniforms[n] = {type: "m4", value: i.toArray()} : t.uniforms[n] = {value: i};
    }
    Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
    var r = {};
    for (var o in this.extensions) true === this.extensions[o] && (r[o] = true);
    return Object.keys(r).length > 0 && (t.extensions = r), t;
  }, hr.prototype = Object.assign(Object.create(yn.prototype), {constructor: hr, isCamera: true, copy: function (e, t) {
    return yn.prototype.copy.call(this, e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
  }, getWorldDirection: function (e) {
    undefined === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), e = new It), this.updateMatrixWorld(true);
    var t = this.matrixWorld.elements;
    return e.set(-t[8], -t[9], -t[10]).normalize();
  }, updateMatrixWorld: function (e) {
    yn.prototype.updateMatrixWorld.call(this, e), this.matrixWorldInverse.getInverse(this.matrixWorld);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }}), ur.prototype = Object.assign(Object.create(hr.prototype), {constructor: ur, isPerspectiveCamera: true, copy: function (e, t) {
    return hr.prototype.copy.call(this, e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = null === e.view ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
  }, setFocalLength: function (e) {
    var t = 0.5 * this.getFilmHeight() / e;
    this.fov = 2 * Rt.RAD2DEG * Math.atan(t), this.updateProjectionMatrix();
  }, getFocalLength: function () {
    var e = Math.tan(0.5 * Rt.DEG2RAD * this.fov);
    return 0.5 * this.getFilmHeight() / e;
  }, getEffectiveFOV: function () {
    return 2 * Rt.RAD2DEG * Math.atan(Math.tan(0.5 * Rt.DEG2RAD * this.fov) / this.zoom);
  }, getFilmWidth: function () {
    return this.filmGauge * Math.min(this.aspect, 1);
  }, getFilmHeight: function () {
    return this.filmGauge / Math.max(this.aspect, 1);
  }, setViewOffset: function (e, t, n, i, r, o) {
    this.aspect = e / t, null === this.view && (this.view = {enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1}), this.view.enabled = true, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
  }, clearViewOffset: function () {
    null !== this.view && (this.view.enabled = false), this.updateProjectionMatrix();
  }, updateProjectionMatrix: function () {
    var e = this.near, t = e * Math.tan(0.5 * Rt.DEG2RAD * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -0.5 * i, o = this.view;
    if (null !== this.view && this.view.enabled) {
      var s = o.fullWidth, a = o.fullHeight;
      r += o.offsetX * i / s, t -= o.offsetY * n / a, i *= o.width / s, n *= o.height / a;
    }
    var l = this.filmOffset;
    0 !== l && (r += e * l / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix);
  }, toJSON: function (e) {
    var t = yn.prototype.toJSON.call(this, e);
    return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
  }});
  var dr = 90, pr = 1;
  function mr(e, t, n, i) {
    yn.call(this), this.type = "CubeCamera";
    var r = new ur(dr, pr, e, t);
    r.up.set(0, -1, 0), r.lookAt(new It(1, 0, 0)), this.add(r);
    var o = new ur(dr, pr, e, t);
    o.up.set(0, -1, 0), o.lookAt(new It(-1, 0, 0)), this.add(o);
    var s = new ur(dr, pr, e, t);
    s.up.set(0, 0, 1), s.lookAt(new It(0, 1, 0)), this.add(s);
    var a = new ur(dr, pr, e, t);
    a.up.set(0, 0, -1), a.lookAt(new It(0, -1, 0)), this.add(a);
    var l = new ur(dr, pr, e, t);
    l.up.set(0, -1, 0), l.lookAt(new It(0, 0, 1)), this.add(l);
    var c = new ur(dr, pr, e, t);
    c.up.set(0, -1, 0), c.lookAt(new It(0, 0, -1)), this.add(c), i = i || {format: De, magFilter: ye, minFilter: ye}, this.renderTarget = new fr(n, n, i), this.renderTarget.texture.name = "CubeCamera", this.update = function (e, t) {
      null === this.parent && this.updateMatrixWorld();
      var n = e.getRenderTarget(), i = this.renderTarget, h = i.texture.generateMipmaps;
      i.texture.generateMipmaps = false, e.setRenderTarget(i, 0), e.render(t, r), e.setRenderTarget(i, 1), e.render(t, o), e.setRenderTarget(i, 2), e.render(t, s), e.setRenderTarget(i, 3), e.render(t, a), e.setRenderTarget(i, 4), e.render(t, l), i.texture.generateMipmaps = h, e.setRenderTarget(i, 5), e.render(t, c), e.setRenderTarget(n);
    }, this.clear = function (e, t, n, i) {
      for (var r = e.getRenderTarget(), o = this.renderTarget, s = 0; s < 6; s++) e.setRenderTarget(o, s), e.clear(t, n, i);
      e.setRenderTarget(r);
    };
  }
  function fr(e, t, n) {
    Ht.call(this, e, t, n);
  }
  function gr(e, t, n, i, r, o, s, a, l, c, h, u) {
    Vt.call(this, null, o, s, a, l, c, i, r, h, u), this.image = {data: e, width: t, height: n}, this.magFilter = undefined !== l ? l : fe, this.minFilter = undefined !== c ? c : fe, this.generateMipmaps = false, this.flipY = false, this.unpackAlignment = 1;
  }
  mr.prototype = Object.create(yn.prototype), mr.prototype.constructor = mr, fr.prototype = Object.create(Ht.prototype), fr.prototype.constructor = fr, fr.prototype.isWebGLRenderTargetCube = true, fr.prototype.fromEquirectangularTexture = function (e, t) {
    this.texture.type = t.type, this.texture.format = t.format, this.texture.encoding = t.encoding;
    var n = new _n, i = {uniforms: {tEquirect: {value: null}}, vertexShader: ["varying vec3 vWorldDirection;", "vec3 transformDirection( in vec3 dir, in mat4 matrix ) {", "	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );", "}", "void main() {", "	vWorldDirection = transformDirection( position, modelMatrix );", "	#include <begin_vertex>", "	#include <project_vertex>", "}"].join("\n"), fragmentShader: ["uniform sampler2D tEquirect;", "varying vec3 vWorldDirection;", "#define RECIPROCAL_PI 0.31830988618", "#define RECIPROCAL_PI2 0.15915494", "void main() {", "	vec3 direction = normalize( vWorldDirection );", "	vec2 sampleUV;", "	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;", "	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "	gl_FragColor = texture2D( tEquirect, sampleUV );", "}"].join("\n")}, r = new cr({type: "CubemapFromEquirect", uniforms: or(i.uniforms), vertexShader: i.vertexShader, fragmentShader: i.fragmentShader, side: f, blending: x});
    r.uniforms.tEquirect.value = t;
    var o = new Yi(new rr(5, 5, 5), r);
    n.add(o);
    var s = new mr(1, 10, 1);
    return s.renderTarget = this, s.renderTarget.texture.name = "CubeCameraTexture", s.update(e, n), o.geometry.dispose(), o.material.dispose(), this;
  }, gr.prototype = Object.create(Vt.prototype), gr.prototype.constructor = gr, gr.prototype.isDataTexture = true;
  var vr = new It, yr = new It, _r = new zt;
  function xr(e, t) {
    this.normal = undefined !== e ? e : new It(1, 0, 0), this.constant = undefined !== t ? t : 0;
  }
  Object.assign(xr.prototype, {isPlane: true, set: function (e, t) {
    return this.normal.copy(e), this.constant = t, this;
  }, setComponents: function (e, t, n, i) {
    return this.normal.set(e, t, n), this.constant = i, this;
  }, setFromNormalAndCoplanarPoint: function (e, t) {
    return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
  }, setFromCoplanarPoints: function (e, t, n) {
    var i = vr.subVectors(n, t).cross(yr.subVectors(e, t)).normalize();
    return this.setFromNormalAndCoplanarPoint(i, e), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.normal.copy(e.normal), this.constant = e.constant, this;
  }, normalize: function () {
    var e = 1 / this.normal.length();
    return this.normal.multiplyScalar(e), this.constant *= e, this;
  }, negate: function () {
    return this.constant *= -1, this.normal.negate(), this;
  }, distanceToPoint: function (e) {
    return this.normal.dot(e) + this.constant;
  }, distanceToSphere: function (e) {
    return this.distanceToPoint(e.center) - e.radius;
  }, projectPoint: function (e, t) {
    return undefined === t && (console.warn("THREE.Plane: .projectPoint() target is now required"), t = new It), t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
  }, intersectLine: function (e, t) {
    undefined === t && (console.warn("THREE.Plane: .intersectLine() target is now required"), t = new It);
    var n = e.delta(vr), i = this.normal.dot(n);
    if (0 === i) return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : undefined;
    var r = -(e.start.dot(this.normal) + this.constant) / i;
    return r < 0 || r > 1 ? undefined : t.copy(n).multiplyScalar(r).add(e.start);
  }, intersectsLine: function (e) {
    var t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
    return t < 0 && n > 0 || n < 0 && t > 0;
  }, intersectsBox: function (e) {
    return e.intersectsPlane(this);
  }, intersectsSphere: function (e) {
    return e.intersectsPlane(this);
  }, coplanarPoint: function (e) {
    return undefined === e && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), e = new It), e.copy(this.normal).multiplyScalar(-this.constant);
  }, applyMatrix4: function (e, t) {
    var n = t || _r.getNormalMatrix(e), i = this.coplanarPoint(vr).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
    return this.constant = -i.dot(r), this;
  }, translate: function (e) {
    return this.constant -= e.dot(this.normal), this;
  }, equals: function (e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }});
  var br = new On, wr = new It;
  function Sr(e, t, n, i, r, o) {
    this.planes = [undefined !== e ? e : new xr, undefined !== t ? t : new xr, undefined !== n ? n : new xr, undefined !== i ? i : new xr, undefined !== r ? r : new xr, undefined !== o ? o : new xr];
  }
  Object.assign(Sr.prototype, {set: function (e, t, n, i, r, o) {
    var s = this.planes;
    return s[0].copy(e), s[1].copy(t), s[2].copy(n), s[3].copy(i), s[4].copy(r), s[5].copy(o), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
    return this;
  }, setFromMatrix: function (e) {
    var t = this.planes, n = e.elements, i = n[0], r = n[1], o = n[2], s = n[3], a = n[4], l = n[5], c = n[6], h = n[7], u = n[8], d = n[9], p = n[10], m = n[11], f = n[12], g = n[13], v = n[14], y = n[15];
    return t[0].setComponents(s - i, h - a, m - u, y - f).normalize(), t[1].setComponents(s + i, h + a, m + u, y + f).normalize(), t[2].setComponents(s + r, h + l, m + d, y + g).normalize(), t[3].setComponents(s - r, h - l, m - d, y - g).normalize(), t[4].setComponents(s - o, h - c, m - p, y - v).normalize(), t[5].setComponents(s + o, h + c, m + p, y + v).normalize(), this;
  }, intersectsObject: function (e) {
    var t = e.geometry;
    return null === t.boundingSphere && t.computeBoundingSphere(), br.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(br);
  }, intersectsSprite: function (e) {
    return br.center.set(0, 0, 0), br.radius = 0.7071067811865476, br.applyMatrix4(e.matrixWorld), this.intersectsSphere(br);
  }, intersectsSphere: function (e) {
    for (var t = this.planes, n = e.center, i = -e.radius, r = 0; r < 6; r++) {
      if (t[r].distanceToPoint(n) < i) return false;
    }
    return true;
  }, intersectsBox: function (e) {
    for (var t = this.planes, n = 0; n < 6; n++) {
      var i = t[n];
      if (wr.x = i.normal.x > 0 ? e.max.x : e.min.x, wr.y = i.normal.y > 0 ? e.max.y : e.min.y, wr.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(wr) < 0) return false;
    }
    return true;
  }, containsPoint: function (e) {
    for (var t = this.planes, n = 0; n < 6; n++) if (t[n].distanceToPoint(e) < 0) return false;
    return true;
  }});
  var Er = {alphamap_fragment: "\n#ifdef USE_ALPHAMAP\n\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n", alphamap_pars_fragment: "\n#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n", alphatest_fragment: "\n#ifdef ALPHATEST\n\n	if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n", aomap_fragment: "\n#ifdef USE_AOMAP\n\n	// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n	#endif\n\n#endif\n", aomap_pars_fragment: "\n#ifdef USE_AOMAP\n\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n\n#endif\n", begin_vertex: "\nvec3 transformed = vec3( position );\n", beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n	vec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n", bsdfs: '\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via \'environmentBRDF\' from "Physically Based Shading on Mobile"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n	vec4 r = roughness * c0 + c1;\n\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n	return vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n	// based upon Frostbite 3 Moving to Physically-based Rendering\n	// page 32, equation 26: E[window1]\n	// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n	// this is intended to be used on spot and point lights who are represented as luminous intensity\n	// but who must be converted to luminous irradiance for surface lighting calculation\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n	if( cutoffDistance > 0.0 ) {\n\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n	}\n\n	return distanceFalloff;\n\n#else\n\n	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n	}\n\n	return 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n	return RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n	// Original approximation by Christophe Schlick \'94\n	// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n	// Optimized variant (presented by Epic at SIGGRAPH \'13)\n	// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n	// See F_Schlick\n	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n	return Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n	// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n	// also see #12151\n\n	float a2 = pow2( alpha );\n\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n	return 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n	float a2 = pow2( alpha );\n\n	// dotNL and dotNV are explicitly swapped. This is not a mistake.\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n	return 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n	float a2 = pow2( alpha );\n\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n	return RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n	float alpha = pow2( roughness ); // UE4\'s roughness\n\n	vec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n	float dotNL = saturate( dot( normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n	vec3 F = F_Schlick( specularColor, dotLH );\n\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n	float D = D_GGX( alpha, dotNH );\n\n	return F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n	const float LUT_SIZE  = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n	float dotNV = saturate( dot( N, V ) );\n\n	// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n	uv = uv * LUT_SCALE + LUT_BIAS;\n\n	return uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n	// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n	// An approximation of the form factor of a horizon-clipped rectangle.\n\n	float l = length( f );\n\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n	float x = dot( v1, v2 );\n\n	float y = abs( x );\n\n	// rational polynomial approximation to theta / sin( theta ) / 2PI\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n	return cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n	// bail if point is on back side of plane of light\n	// assumes ccw winding order of light vertices\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n	// construct orthonormal basis around N\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n	// compute transform\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n	// transform rect\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n	// project rect onto sphere\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n\n	// calculate vector form factor\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n	// adjust for horizon clipping\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n	// alternate method of adjusting for horizon clipping (see referece)\n	// refactoring required\n	float len = length( vectorFormFactor );\n	float z = vectorFormFactor.z / len;\n\n	const float LUT_SIZE  = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n	// tabulated horizon-clipped sphere, apparently...\n	vec2 uv = vec2( z * 0.5 + 0.5, len );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n\n	float scale = texture2D( ltc_2, uv ).w;\n\n	float result = len * scale;\n*/\n\n	return vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n	float dotNV = saturate( dot( normal, viewDir ) );\n\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n	return specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera\'s "Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	vec3 FssEss = F * brdf.x + brdf.y;\n\n	float Ess = brdf.x + brdf.y;\n	float Ems = 1.0 - Ess;\n\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n	// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n	return 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n	//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n	//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n	vec3 F = F_Schlick( specularColor, dotLH );\n\n	float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n	float D = D_BlinnPhong( shininess, dotNH );\n\n	return F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n	// Estevez and Kulla 2017, "Production Friendly Microfacet Sheen BRDF"\n	float invAlpha  = 1.0 / roughness;\n	float cos2h = NoH * NoH;\n	float sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n	// Neubelt and Pettineo 2013, "Crafting a Next-gen Material Pipeline for The Order: 1886"\n	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n	vec3 N = geometry.normal;\n	vec3 V = geometry.viewDir;\n\n	vec3 H = normalize( V + L );\n	float dotNH = saturate( dot( N, H ) );\n\n	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n', bumpmap_pars_fragment: "\n#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n	// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n	// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n	// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif\n", clipping_planes_fragment: "\n#if NUM_CLIPPING_PLANES > 0\n\n	vec4 plane;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n		plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\n	}\n\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n		bool clipped = true;\n\n		#pragma unroll_loop\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\n		}\n\n		if ( clipped ) discard;\n\n	#endif\n\n#endif\n", clipping_planes_pars_fragment: "\n#if NUM_CLIPPING_PLANES > 0\n\n	#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n		varying vec3 vViewPosition;\n	#endif\n\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n", clipping_planes_pars_vertex: "\n#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n	varying vec3 vViewPosition;\n#endif\n", clipping_planes_vertex: "\n#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n", color_fragment: "\n#ifdef USE_COLOR\n\n	diffuseColor.rgb *= vColor;\n\n#endif\n", color_pars_fragment: "\n#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n", color_pars_vertex: "\n#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n", color_vertex: "\n#ifdef USE_COLOR\n\n	vColor.xyz = color.xyz;\n\n#endif\n", common: "\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\n\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\n\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n	float distance = dot( planeNormal, point - pointOnPlane );\n\n	return - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n	mat3 tmp;\n\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n	return tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n	return dot( weights, color.rgb );\n\n}\n", cube_uv_reflection_fragment: "\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_textureSize (1024.0)\n\nint getFaceFromDirection(vec3 direction) {\n	vec3 absDirection = abs(direction);\n	int face = -1;\n	if( absDirection.x > absDirection.z ) {\n		if(absDirection.x > absDirection.y )\n			face = direction.x > 0.0 ? 0 : 3;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	else {\n		if(absDirection.z > absDirection.y )\n			face = direction.z > 0.0 ? 2 : 5;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\n\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n	float dxRoughness = dFdx(roughness);\n	float dyRoughness = dFdy(roughness);\n	vec3 dx = dFdx( vec * scale * dxRoughness );\n	vec3 dy = dFdy( vec * scale * dyRoughness );\n	float d = max( dot( dx, dx ), dot( dy, dy ) );\n	// Clamp the value to the max mip level counts. hard coded to 6 mips\n	d = clamp(d, 1.0, cubeUV_rangeClamp);\n	float mipLevel = 0.5 * log2(d);\n	return vec2(floor(mipLevel), fract(mipLevel));\n}\n\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\n\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n	float a = 16.0 * cubeUV_rcpTextureSize;\n\n	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n	// float powScale = exp2(roughnessLevel + mipLevel);\n	float powScale = exp2_packed.x * exp2_packed.y;\n	// float scale =  1.0 / exp2(roughnessLevel + 2.0 + mipLevel);\n	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n	// float mipOffset = 0.75*(1.0 - 1.0/exp2(mipLevel))/exp2(roughnessLevel);\n	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\n	bool bRes = mipLevel == 0.0;\n	scale =  bRes && (scale < a) ? a : scale;\n\n	vec3 r;\n	vec2 offset;\n	int face = getFaceFromDirection(direction);\n\n	float rcpPowScale = 1.0 / powScale;\n\n	if( face == 0) {\n		r = vec3(direction.x, -direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 1) {\n		r = vec3(direction.y, direction.x, direction.z);\n		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 2) {\n		r = vec3(direction.z, direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 3) {\n		r = vec3(direction.x, direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	else if( face == 4) {\n		r = vec3(direction.y, direction.x, -direction.z);\n		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	else {\n		r = vec3(direction.z, -direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	r = normalize(r);\n	float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n	vec2 base = offset + vec2( texelOffset );\n	return base + s * ( scale - 2.0 * texelOffset );\n}\n\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\n\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n	float roughnessVal = roughness* cubeUV_maxLods3;\n	float r1 = floor(roughnessVal);\n	float r2 = r1 + 1.0;\n	float t = fract(roughnessVal);\n	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n	float s = mipInfo.y;\n	float level0 = mipInfo.x;\n	float level1 = level0 + 1.0;\n	level1 = level1 > 5.0 ? 5.0 : level1;\n\n	// round to nearest mipmap if we are not interpolating.\n	level0 += min( floor( s + 0.5 ), 5.0 );\n\n	// Tri linear interpolation.\n	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\n	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\n	vec4 result = mix(color10, color20, t);\n\n	return vec4(result.rgb, 1.0);\n}\n\n#endif\n", defaultnormal_vertex: "\nvec3 transformedNormal = normalMatrix * objectNormal;\n\n#ifdef FLIP_SIDED\n\n	transformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n	vec3 transformedTangent = normalMatrix * objectTangent;\n\n	#ifdef FLIP_SIDED\n\n		transformedTangent = - transformedTangent;\n\n	#endif\n\n#endif\n", displacementmap_pars_vertex: "\n#ifdef USE_DISPLACEMENTMAP\n\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n\n#endif\n", displacementmap_vertex: "\n#ifdef USE_DISPLACEMENTMAP\n\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n", emissivemap_fragment: "\n#ifdef USE_EMISSIVEMAP\n\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n	totalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n", emissivemap_pars_fragment: "\n#ifdef USE_EMISSIVEMAP\n\n	uniform sampler2D emissiveMap;\n\n#endif\n", encodings_fragment: "\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n", encodings_pars_fragment: "\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = min( floor( D ) / 255.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}\n", envmap_fragment: "\n#ifdef USE_ENVMAP\n\n	#ifdef ENV_WORLDPOS\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// Transforming Normal Vectors with the Inverse Transformation\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n\n		vec2 sampleUV;\n\n		reflectVec = normalize( reflectVec );\n\n		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n		vec4 envColor = texture2D( envMap, sampleUV );\n\n	#elif defined( ENVMAP_TYPE_SPHERE )\n\n		reflectVec = normalize( reflectVec );\n\n		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\n	#else\n\n		vec4 envColor = vec4( 0.0 );\n\n	#endif\n\n	envColor = envMapTexelToLinear( envColor );\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n", envmap_common_pars_fragment: "\n#ifdef USE_ENVMAP\n\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif\n", envmap_pars_fragment: "\n#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		#define ENV_WORLDPOS\n\n	#endif\n\n	#ifdef ENV_WORLDPOS\n\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n\n#endif\n", envmap_pars_vertex: "\n#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n		#define ENV_WORLDPOS\n\n	#endif\n\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n\n	#else\n\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n\n	#endif\n\n#endif\n", envmap_physical_pars_fragment: "\n#if defined( USE_ENVMAP )\n\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n\n	vec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n		#ifdef ENVMAP_TYPE_CUBE\n\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n			// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n			// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n			#ifdef TEXTURE_LOD_EXT\n\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n			#else\n\n				// force the bias high to get the last LOD level as it is the most blurred.\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n			#endif\n\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\n		#else\n\n			vec4 envMapColor = vec4( 0.0 );\n\n		#endif\n\n		return PI * envMapColor.rgb * envMapIntensity;\n\n	}\n\n	// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n		float maxMIPLevelScalar = float( maxMIPLevel );\n\n		float sigma = PI * roughness * roughness / ( 1.0 + roughness );\n		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n		// clamp to allowable LOD ranges.\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n	}\n\n	vec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n		  vec3 reflectVec = reflect( -viewDir, normal );\n\n		  // Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n		#else\n\n		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n		#endif\n\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n		#ifdef ENVMAP_TYPE_CUBE\n\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n			#ifdef TEXTURE_LOD_EXT\n\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n			#else\n\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n			#endif\n\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n\n			vec2 sampleUV;\n			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n			#ifdef TEXTURE_LOD_EXT\n\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n			#else\n\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n			#endif\n\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n		#elif defined( ENVMAP_TYPE_SPHERE )\n\n			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n			#ifdef TEXTURE_LOD_EXT\n\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n			#else\n\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n			#endif\n\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n		#endif\n\n		return envMapColor.rgb * envMapIntensity;\n\n	}\n\n#endif\n", envmap_vertex: "\n#ifdef USE_ENVMAP\n\n	#ifdef ENV_WORLDPOS\n\n		vWorldPosition = worldPosition.xyz;\n\n	#else\n\n		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vReflect = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#endif\n\n#endif\n", fog_vertex: "\n#ifdef USE_FOG\n\n	fogDepth = -mvPosition.z;\n\n#endif\n", fog_pars_vertex: "\n#ifdef USE_FOG\n\n	varying float fogDepth;\n\n#endif\n", fog_fragment: "\n#ifdef USE_FOG\n\n	#ifdef FOG_EXP2\n\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n	#endif\n\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n", fog_pars_fragment: "\n#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n	varying float fogDepth;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n\n	#endif\n\n#endif\n", gradientmap_pars_fragment: "\n#ifdef TOON\n\n	uniform sampler2D gradientMap;\n\n	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n		// dotNL will be from -1.0 to 1.0\n		float dotNL = dot( normal, lightDirection );\n		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n		#ifdef USE_GRADIENTMAP\n\n			return texture2D( gradientMap, coord ).rgb;\n\n		#else\n\n			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n		#endif\n\n\n	}\n\n#endif\n", lightmap_fragment: "\n#ifdef USE_LIGHTMAP\n\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n", lightmap_pars_fragment: "\n#ifdef USE_LIGHTMAP\n\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n\n#endif\n", lights_lambert_vertex: "\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if NUM_POINT_LIGHTS > 0\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n		#endif\n\n	}\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n		#endif\n	}\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n		// TODO (abelnation): implement\n\n	}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n		#endif\n\n	}\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n		#ifdef DOUBLE_SIDED\n\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n		#endif\n\n	}\n\n#endif\n", lights_pars_begin: "\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n	// normal is assumed to have unit length\n\n	float x = normal.x, y = normal.y, z = normal.z;\n\n	// band 0\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n\n	// band 1\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n	// band 2\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n	return result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n	return irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n	vec3 irradiance = ambientLightColor;\n\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n		irradiance *= PI;\n\n	#endif\n\n	return irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n\n	}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n		float shadowCameraNear;\n		float shadowCameraFar;\n	};\n\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n	// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n\n		float lightDistance = length( lVector );\n\n		directLight.color = pointLight.color;\n		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n		directLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n	}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n	// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n\n		if ( angleCos > spotLight.coneCos ) {\n\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n\n		} else {\n\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n\n		}\n	}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n\n	// Pre-computed values of LinearTransformedCosine approximation of BRDF\n	// BRDF approximation Texture is 64x64\n	uniform sampler2D ltc_1; // RGBA Float\n	uniform sampler2D ltc_2; // RGBA Float\n\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n			irradiance *= PI;\n\n		#endif\n\n		return irradiance;\n\n	}\n\n#endif\n", lights_phong_fragment: "\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n", lights_phong_pars_fragment: "\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n	#ifdef TOON\n\n		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n	#else\n\n		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n		vec3 irradiance = dotNL * directLight.color;\n\n	#endif\n\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n		irradiance *= PI; // punctual light\n\n	#endif\n\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )	(0)\n", lights_physical_fragment: "\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n\n#ifdef REFLECTIVITY\n\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\n#else\n\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n	material.clearcoat = saturate( clearcoat ); // Burley clearcoat model\n	material.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\n\n#endif\n#ifdef USE_SHEEN\n\n	material.sheenColor = sheen;\n\n#endif\n", lights_physical_pars_fragment: "\nstruct PhysicalMaterial {\n\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n\n#ifdef CLEARCOAT\n	float clearcoat;\n	float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	vec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.specularRoughness;\n\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n\n		// LTC Fresnel Approximation by Stephen Hill\n		// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n	}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n	vec3 irradiance = dotNL * directLight.color;\n\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n		irradiance *= PI; // punctual light\n\n	#endif\n\n	#ifdef CLEARCOAT\n\n		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n		vec3 ccIrradiance = ccDotNL * directLight.color;\n\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n			ccIrradiance *= PI; // punctual light\n\n		#endif\n\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n	#else\n\n		float clearcoatDHR = 0.0;\n\n	#endif\n\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n			material.specularRoughness,\n			directLight.direction,\n			geometry,\n			material.sheenColor\n		);\n	#else\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n	#endif\n\n	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n	#ifdef CLEARCOAT\n\n		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n		float ccDotNL = ccDotNV;\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n	#else\n\n		float clearcoatDHR = 0.0;\n\n	#endif\n\n	float clearcoatInv = 1.0 - clearcoatDHR;\n\n	// Both indirect specular and diffuse light accumulate here\n	// if energy preservation enabled, and PMREM provided.\n\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n	reflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n", lights_fragment_begin: "\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n	geometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n	PointLight pointLight;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n		pointLight = pointLights[ i ];\n\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n		#endif\n\n		RE_Direct( directLight, geometry, material, reflectedLight );\n\n	}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n	SpotLight spotLight;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n		spotLight = spotLights[ i ];\n\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n\n		RE_Direct( directLight, geometry, material, reflectedLight );\n\n	}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n	DirectionalLight directionalLight;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n		directionalLight = directionalLights[ i ];\n\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n\n		RE_Direct( directLight, geometry, material, reflectedLight );\n\n	}\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n	RectAreaLight rectAreaLight;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n	}\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n	vec3 iblIrradiance = vec3( 0.0 );\n\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n	irradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n	#if ( NUM_HEMI_LIGHTS > 0 )\n\n		#pragma unroll_loop\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n		}\n\n	#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n", lights_fragment_maps: "\n#if defined( RE_IndirectDiffuse )\n\n	#ifdef USE_LIGHTMAP\n\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n			lightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n		#endif\n\n		irradiance += lightMapIrradiance;\n\n	#endif\n\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n		iblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n	#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n	radiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n	#ifdef CLEARCOAT\n\n		clearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n	#endif\n\n#endif\n", lights_fragment_end: "\n#if defined( RE_IndirectDiffuse )\n\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n", logdepthbuf_fragment: "\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n", logdepthbuf_pars_fragment: "\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n\n#endif\n", logdepthbuf_pars_vertex: "\n#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#else\n\n		uniform float logDepthBufFC;\n\n	#endif\n\n#endif\n", logdepthbuf_vertex: "\n#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n	#else\n\n		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n		gl_Position.z *= gl_Position.w;\n\n	#endif\n\n#endif\n", map_fragment: "\n#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n\n#endif\n", map_pars_fragment: "\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif\n", map_particle_fragment: "\n#ifdef USE_MAP\n\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n", map_particle_pars_fragment: "\n#ifdef USE_MAP\n\n	uniform mat3 uvTransform;\n	uniform sampler2D map;\n\n#endif\n", metalnessmap_fragment: "\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n	// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n	metalnessFactor *= texelMetalness.b;\n\n#endif\n", metalnessmap_pars_fragment: "\n#ifdef USE_METALNESSMAP\n\n	uniform sampler2D metalnessMap;\n\n#endif\n", morphnormal_vertex: "\n#ifdef USE_MORPHNORMALS\n\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n", morphtarget_pars_vertex: "\n#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif\n", morphtarget_vertex: "\n#ifdef USE_MORPHTARGETS\n\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n#endif\n", normal_fragment_begin: "\n#ifdef FLAT_SHADED\n\n	// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n	vec3 normal = normalize( vNormal );\n\n	#ifdef DOUBLE_SIDED\n\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n	#endif\n\n	#ifdef USE_TANGENT\n\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n\n		#ifdef DOUBLE_SIDED\n\n			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n		#endif\n\n	#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n", normal_fragment_maps: "\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n	#ifdef FLIP_SIDED\n\n		normal = - normal;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n	#endif\n\n	normal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n	#ifdef USE_TANGENT\n\n		mat3 vTBN = mat3( tangent, bitangent, normal );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		normal = normalize( vTBN * mapN );\n\n	#else\n\n		normal = perturbNormal2Arb( -vViewPosition, normal, normalScale, normalMap );\n\n	#endif\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n", normalmap_pars_fragment: "\n#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n	uniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n	// Per-Pixel Tangent Space Normal Mapping\n	// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 normalScale, in sampler2D normalMap ) {\n\n		// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		float scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\n		mapN.xy *= normalScale;\n\n		#ifdef DOUBLE_SIDED\n\n			// Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\n			// http://hacksoflife.blogspot.com/2009/11/per-pixel-tangent-space-normal-mapping.html?showComment=1522254677437#c5087545147696715943\n			vec3 NfromST = cross( S, T );\n			if( dot( NfromST, N ) > 0.0 ) {\n\n				S *= -1.0;\n				T *= -1.0;\n\n			}\n\n		#else\n\n			mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n		#endif\n\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n", clearcoat_normal_fragment_begin: "\n#ifdef CLEARCOAT\n\n	vec3 clearcoatNormal = geometryNormal;\n\n#endif\n", clearcoat_normal_fragment_maps: "\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n	#ifdef USE_TANGENT\n\n		mat3 vTBN = mat3( tangent, bitangent, clearcoatNormal );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = clearcoatNormalScale * mapN.xy;\n		clearcoatNormal = normalize( vTBN * mapN );\n\n	#else\n\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatNormalScale, clearcoatNormalMap );\n\n	#endif\n\n#endif\n", clearcoat_normalmap_pars_fragment: "\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n\n#endif\n", packing: "\nvec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8; // tidy overflow\n	return r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\n\nvec4 encodeHalfRGBA ( vec2 v ) {\n	vec4 encoded = vec4( 0.0 );\n	const vec2 offset = vec2( 1.0 / 255.0, 0.0 );\n\n	encoded.xy = vec2( v.x, fract( v.x * 255.0 ) );\n	encoded.xy = encoded.xy - ( encoded.yy * offset );\n\n	encoded.zw = vec2( v.y, fract( v.y * 255.0 ) );\n	encoded.zw = encoded.zw - ( encoded.ww * offset );\n\n	return encoded;\n}\n\nvec2 decodeHalfRGBA( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n", premultiplied_alpha_fragment: "\n#ifdef PREMULTIPLIED_ALPHA\n\n	// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n	gl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n", project_vertex: "\nvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\ngl_Position = projectionMatrix * mvPosition;\n", dithering_fragment: "\n#ifdef DITHERING\n\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n", dithering_pars_fragment: "\n#ifdef DITHERING\n\n	// based on https://www.shadertoy.com/view/MslGR8\n	vec3 dithering( vec3 color ) {\n		//Calculate grid position\n		float grid_position = rand( gl_FragCoord.xy );\n\n		//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n		//modify shift acording to grid position.\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n		//shift the color by dither_shift\n		return color + dither_shift_RGB;\n	}\n\n#endif\n", roughnessmap_fragment: "\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n	// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n	roughnessFactor *= texelRoughness.g;\n\n#endif\n", roughnessmap_pars_fragment: "\n#ifdef USE_ROUGHNESSMAP\n\n	uniform sampler2D roughnessMap;\n\n#endif\n", shadowmap_pars_fragment: "\n#ifdef USE_SHADOWMAP\n\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n	#endif\n\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n	#endif\n\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n	#endif\n\n	/*\n	#if NUM_RECT_AREA_LIGHTS > 0\n\n		// TODO (abelnation): create uniforms for area light shadows\n\n	#endif\n	*/\n\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n	}\n\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n		return decodeHalfRGBA( texture2D( shadow, uv ) );\n\n	}\n\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n		float occlusion = 1.0;\n\n		vec2 distribution = texture2DDistribution( shadow, uv );\n\n		float hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n		if (hard_shadow != 1.0 ) {\n\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n		}\n		return occlusion;\n\n	}\n\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n		const vec2 offset = vec2( 0.0, 1.0 );\n\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n		vec2 f = fract( uv * size + 0.5 );\n\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n\n		return c;\n\n	}\n\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n		float shadow = 1.0;\n\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n\n		// if ( something && something ) breaks ATI OpenGL shader compiler\n		// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n		#if defined( SHADOWMAP_TYPE_PCF )\n\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n\n			shadow = (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n\n		#elif defined( SHADOWMAP_TYPE_VSM )\n\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n		#else // no percentage-closer filtering:\n\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n		#endif\n\n		}\n\n		return shadow;\n\n	}\n\n	// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n	// vector suitable for 2D texture mapping. This code uses the following layout for the\n	// 2D texture:\n	//\n	// xzXZ\n	//  y Y\n	//\n	// Y - Positive y direction\n	// y - Negative y direction\n	// X - Positive x direction\n	// x - Negative x direction\n	// Z - Positive z direction\n	// z - Negative z direction\n	//\n	// Source and test bed:\n	// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n		// Number of texels to avoid at the edge of each square\n\n		vec3 absV = abs( v );\n\n		// Intersect unit cube\n\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n\n		// Apply scale to avoid seams\n\n		// two texels less per square (one texel will do for NEAREST)\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n		// Unwrap\n\n		// space: -1 ... 1 range for each square\n		//\n		// #X##		dim    := ( 4 , 2 )\n		//  # #		center := ( 1 , 1 )\n\n		vec2 planar = v.xy;\n\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n\n		if ( absV.z >= almostOne ) {\n\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n\n		} else if ( absV.x >= almostOne ) {\n\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n\n		} else if ( absV.y >= almostOne ) {\n\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n\n		}\n\n		// Transform to UV space\n\n		// scale := 0.5 / dim\n		// translate := ( center + 0.5 ) / dim\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n	}\n\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n		// for point lights, the uniform @vShadowCoord is re-purposed to hold\n		// the vector from the light to the world-space position of the fragment.\n		vec3 lightToPosition = shadowCoord.xyz;\n\n		// dp = normalized distance from light to fragment position\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n		dp += shadowBias;\n\n		// bd3D = base direction 3D\n		vec3 bd3D = normalize( lightToPosition );\n\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n\n		#else // no percentage-closer filtering\n\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n		#endif\n\n	}\n\n#endif\n", shadowmap_pars_vertex: "\n#ifdef USE_SHADOWMAP\n\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n	#endif\n\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n	#endif\n\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n	#endif\n\n	/*\n	#if NUM_RECT_AREA_LIGHTS > 0\n\n		// TODO (abelnation): uniforms for area light shadows\n\n	#endif\n	*/\n\n#endif\n", shadowmap_vertex: "\n#ifdef USE_SHADOWMAP\n\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n	}\n\n	#endif\n\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n	}\n\n	#endif\n\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n	}\n\n	#endif\n\n	/*\n	#if NUM_RECT_AREA_LIGHTS > 0\n\n		// TODO (abelnation): update vAreaShadowCoord with area light info\n\n	#endif\n	*/\n\n#endif\n", shadowmask_pars_fragment: "\nfloat getShadowMask() {\n\n	float shadow = 1.0;\n\n	#ifdef USE_SHADOWMAP\n\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n\n	DirectionalLight directionalLight;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n	}\n\n	#endif\n\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n	SpotLight spotLight;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n	}\n\n	#endif\n\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n\n	PointLight pointLight;\n\n	#pragma unroll_loop\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n	}\n\n	#endif\n\n	/*\n	#if NUM_RECT_AREA_LIGHTS > 0\n\n		// TODO (abelnation): update shadow for Area light\n\n	#endif\n	*/\n\n	#endif\n\n	return shadow;\n\n}\n", skinbase_vertex: "\n#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n", skinning_pars_vertex: "\n#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n", skinning_vertex: "\n#ifdef USE_SKINNING\n\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n", skinnormal_vertex: "\n#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n	#ifdef USE_TANGENT\n\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n	#endif\n\n#endif\n", specularmap_fragment: "\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif\n", specularmap_pars_fragment: "\n#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif\n", tonemapping_fragment: "\n#if defined( TONE_MAPPING )\n\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n", tonemapping_pars_fragment: "\n#ifndef saturate\n	#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n	return toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\n	// John Hable's filmic operator from Uncharted 2 video game\n	color *= toneMappingExposure;\n	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n	// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n	color *= toneMappingExposure;\n	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n\n}\n", uv_pars_fragment: "\n#ifdef USE_UV\n\n	varying vec2 vUv;\n\n#endif\n", uv_pars_vertex: "\n#ifdef USE_UV\n\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n\n#endif\n", uv_vertex: "\n#ifdef USE_UV\n\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n", uv2_pars_fragment: "\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n	varying vec2 vUv2;\n\n#endif\n", uv2_pars_vertex: "\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n\n#endif\n", uv2_vertex: "\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n	vUv2 = uv2;\n\n#endif\n", worldpos_vertex: "\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n#endif\n", background_frag: "\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n	vec4 texColor = texture2D( t2D, vUv );\n\n	gl_FragColor = mapTexelToLinear( texColor );\n\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n\n}\n", background_vert: "\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n", cube_frag: "\nuniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\nvoid main() {\n\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\n	gl_FragColor = mapTexelToLinear( texColor );\n	gl_FragColor.a *= opacity;\n\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n\n}\n", cube_vert: "\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n	vWorldDirection = transformDirection( position, modelMatrix );\n\n	#include <begin_vertex>\n	#include <project_vertex>\n\n	gl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n", depth_frag: "\n#if DEPTH_PACKING == 3200\n\n	uniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec4 diffuseColor = vec4( 1.0 );\n\n	#if DEPTH_PACKING == 3200\n\n		diffuseColor.a = opacity;\n\n	#endif\n\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n\n	#include <logdepthbuf_fragment>\n\n	#if DEPTH_PACKING == 3200\n\n		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\n	#elif DEPTH_PACKING == 3201\n\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\n	#endif\n\n}\n", depth_vert: "\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n\n	#include <skinbase_vertex>\n\n	#ifdef USE_DISPLACEMENTMAP\n\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n\n	#endif\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n\n}\n", distanceRGBA_frag: "\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n	#include <clipping_planes_fragment>\n\n	vec4 diffuseColor = vec4( 1.0 );\n\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist ); // clamp to [ 0, 1 ]\n\n	gl_FragColor = packDepthToRGBA( dist );\n\n}\n", distanceRGBA_vert: "\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n\n	#include <skinbase_vertex>\n\n	#ifdef USE_DISPLACEMENTMAP\n\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n\n	#endif\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n\n	vWorldPosition = worldPosition.xyz;\n\n}\n", equirect_frag: "\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n	vec3 direction = normalize( vWorldDirection );\n\n	vec2 sampleUV;\n\n	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n\n	gl_FragColor = mapTexelToLinear( texColor );\n\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n\n}\n", equirect_vert: "\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n	vWorldDirection = transformDirection( position, modelMatrix );\n\n	#include <begin_vertex>\n	#include <project_vertex>\n\n}\n", linedashed_frag: "\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n		discard;\n\n	}\n\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n\n	outgoingLight = diffuseColor.rgb; // simple shader\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n\n}\n", linedashed_vert: "\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <color_vertex>\n\n	vLineDistance = scale * lineDistance;\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n\n}\n", meshbasic_frag: "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec4 diffuseColor = vec4( diffuse, opacity );\n\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n	// accumulation (baked indirect lighting only)\n	#ifdef USE_LIGHTMAP\n\n		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n	#else\n\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n\n	#endif\n\n	// modulation\n	#include <aomap_fragment>\n\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n	#include <envmap_fragment>\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n\n}\n", meshbasic_vert: "\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n\n	#ifdef USE_ENVMAP\n\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n\n	#endif\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n\n}\n", meshlambert_frag: "\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n\n	// accumulation\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\n	#ifdef DOUBLE_SIDED\n\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n	#else\n\n		reflectedLight.indirectDiffuse += vIndirectFront;\n\n	#endif\n\n	#include <lightmap_fragment>\n\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n	#ifdef DOUBLE_SIDED\n\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n	#else\n\n		reflectedLight.directDiffuse = vLightFront;\n\n	#endif\n\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n	// modulation\n	#include <aomap_fragment>\n\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n	#include <envmap_fragment>\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}\n", meshlambert_vert: "\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}\n", meshmatcap_frag: "\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec4 diffuseColor = vec4( diffuse, opacity );\n\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n	#ifdef USE_MATCAP\n\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n\n	#else\n\n		vec4 matcapColor = vec4( 1.0 );\n\n	#endif\n\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n\n}\n", meshmatcap_vert: "\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n\n	#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n		vNormal = normalize( transformedNormal );\n\n	#endif\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n\n	vViewPosition = - mvPosition.xyz;\n\n}\n", meshphong_frag: "\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n\n	// accumulation\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n\n	// modulation\n	#include <aomap_fragment>\n\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n	#include <envmap_fragment>\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n\n}\n", meshphong_vert: "\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n	vNormal = normalize( transformedNormal );\n\n#endif\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n\n	vViewPosition = - mvPosition.xyz;\n\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n\n}\n", meshphysical_frag: "\n#define STANDARD\n\n#ifdef PHYSICAL\n	#define REFLECTIVITY\n	#define CLEARCOAT\n	#define TRANSPARENCY\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSPARENCY\n	uniform float transparency;\n#endif\n\n#ifdef REFLECTIVITY\n	uniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n	uniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n	#ifdef USE_TANGENT\n\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n\n	#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n\n	// accumulation\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n\n	// modulation\n	#include <aomap_fragment>\n\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n	// this is a stub for the transparency model\n	#ifdef TRANSPARENCY\n		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n	#endif\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n\n}\n", meshphysical_vert: "\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n	#ifdef USE_TANGENT\n\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n\n	#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n	vNormal = normalize( transformedNormal );\n\n	#ifdef USE_TANGENT\n\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n	#endif\n\n#endif\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n\n	vViewPosition = - mvPosition.xyz;\n\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n\n}\n", normal_frag: "\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n	varying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n	#ifdef USE_TANGENT\n\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n\n	#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n", normal_vert: "\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n	varying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n	#ifdef USE_TANGENT\n\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n\n	#endif\n\n#endif\n\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n	vNormal = normalize( transformedNormal );\n\n	#ifdef USE_TANGENT\n\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n	#endif\n\n#endif\n\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n	vViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n", points_frag: "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n\n	outgoingLight = diffuseColor.rgb;\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n\n}\n", points_vert: "\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n\n	gl_PointSize = size;\n\n	#ifdef USE_SIZEATTENUATION\n\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n	#endif\n\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n\n}\n", shadow_frag: "\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n	#include <fog_fragment>\n\n}\n", shadow_vert: "\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n\n}\n", sprite_frag: "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n	#include <clipping_planes_fragment>\n\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphatest_fragment>\n\n	outgoingLight = diffuseColor.rgb;\n\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n\n}\n", sprite_vert: "\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n	#include <uv_vertex>\n\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n	#ifndef USE_SIZEATTENUATION\n\n		bool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\n		if ( isPerspective ) scale *= - mvPosition.z;\n\n	#endif\n\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n	mvPosition.xy += rotatedPosition;\n\n	gl_Position = projectionMatrix * mvPosition;\n\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n\n}\n"}, qr = {common: {diffuse: {value: new ri(15658734)}, opacity: {value: 1}, map: {value: null}, uvTransform: {value: new zt}, alphaMap: {value: null}}, specularmap: {specularMap: {value: null}}, envmap: {envMap: {value: null}, flipEnvMap: {value: -1}, reflectivity: {value: 1}, refractionRatio: {value: 0.98}, maxMipLevel: {value: 0}}, aomap: {aoMap: {value: null}, aoMapIntensity: {value: 1}}, lightmap: {lightMap: {value: null}, lightMapIntensity: {value: 1}}, emissivemap: {emissiveMap: {value: null}}, bumpmap: {bumpMap: {value: null}, bumpScale: {value: 1}}, normalmap: {normalMap: {value: null}, normalScale: {value: new Lt(1, 1)}}, displacementmap: {displacementMap: {value: null}, displacementScale: {value: 1}, displacementBias: {value: 0}}, roughnessmap: {roughnessMap: {value: null}}, metalnessmap: {metalnessMap: {value: null}}, gradientmap: {gradientMap: {value: null}}, fog: {fogDensity: {value: 0.00025}, fogNear: {value: 1}, fogFar: {value: 2e3}, fogColor: {value: new ri(16777215)}}, lights: {ambientLightColor: {value: []}, lightProbe: {value: []}, directionalLights: {value: [], properties: {direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}}}, directionalShadowMap: {value: []}, directionalShadowMatrix: {value: []}, spotLights: {value: [], properties: {color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}}}, spotShadowMap: {value: []}, spotShadowMatrix: {value: []}, pointLights: {value: [], properties: {color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {}}}, pointShadowMap: {value: []}, pointShadowMatrix: {value: []}, hemisphereLights: {value: [], properties: {direction: {}, skyColor: {}, groundColor: {}}}, rectAreaLights: {value: [], properties: {color: {}, position: {}, width: {}, height: {}}}}, points: {diffuse: {value: new ri(15658734)}, opacity: {value: 1}, size: {value: 1}, scale: {value: 1}, map: {value: null}, uvTransform: {value: new zt}}, sprite: {diffuse: {value: new ri(15658734)}, opacity: {value: 1}, center: {value: new Lt(0.5, 0.5)}, rotation: {value: 0}, map: {value: null}, uvTransform: {value: new zt}}}, Tr = {basic: {uniforms: sr([qr.common, qr.specularmap, qr.envmap, qr.aomap, qr.lightmap, qr.fog]), vertexShader: Er.meshbasic_vert, fragmentShader: Er.meshbasic_frag}, lambert: {uniforms: sr([qr.common, qr.specularmap, qr.envmap, qr.aomap, qr.lightmap, qr.emissivemap, qr.fog, qr.lights, {emissive: {value: new ri(0)}}]), vertexShader: Er.meshlambert_vert, fragmentShader: Er.meshlambert_frag}, phong: {uniforms: sr([qr.common, qr.specularmap, qr.envmap, qr.aomap, qr.lightmap, qr.emissivemap, qr.bumpmap, qr.normalmap, qr.displacementmap, qr.gradientmap, qr.fog, qr.lights, {emissive: {value: new ri(0)}, specular: {value: new ri(1118481)}, shininess: {value: 30}}]), vertexShader: Er.meshphong_vert, fragmentShader: Er.meshphong_frag}, standard: {uniforms: sr([qr.common, qr.envmap, qr.aomap, qr.lightmap, qr.emissivemap, qr.bumpmap, qr.normalmap, qr.displacementmap, qr.roughnessmap, qr.metalnessmap, qr.fog, qr.lights, {emissive: {value: new ri(0)}, roughness: {value: 0.5}, metalness: {value: 0.5}, envMapIntensity: {value: 1}}]), vertexShader: Er.meshphysical_vert, fragmentShader: Er.meshphysical_frag}, matcap: {uniforms: sr([qr.common, qr.bumpmap, qr.normalmap, qr.displacementmap, qr.fog, {matcap: {value: null}}]), vertexShader: Er.meshmatcap_vert, fragmentShader: Er.meshmatcap_frag}, points: {uniforms: sr([qr.points, qr.fog]), vertexShader: Er.points_vert, fragmentShader: Er.points_frag}, dashed: {uniforms: sr([qr.common, qr.fog, {scale: {value: 1}, dashSize: {value: 1}, totalSize: {value: 2}}]), vertexShader: Er.linedashed_vert, fragmentShader: Er.linedashed_frag}, depth: {uniforms: sr([qr.common, qr.displacementmap]), vertexShader: Er.depth_vert, fragmentShader: Er.depth_frag}, normal: {uniforms: sr([qr.common, qr.bumpmap, qr.normalmap, qr.displacementmap, {opacity: {value: 1}}]), vertexShader: Er.normal_vert, fragmentShader: Er.normal_frag}, sprite: {uniforms: sr([qr.sprite, qr.fog]), vertexShader: Er.sprite_vert, fragmentShader: Er.sprite_frag}, background: {uniforms: {uvTransform: {value: new zt}, t2D: {value: null}}, vertexShader: Er.background_vert, fragmentShader: Er.background_frag}, cube: {uniforms: {tCube: {value: null}, tFlip: {value: -1}, opacity: {value: 1}}, vertexShader: Er.cube_vert, fragmentShader: Er.cube_frag}, equirect: {uniforms: {tEquirect: {value: null}}, vertexShader: Er.equirect_vert, fragmentShader: Er.equirect_frag}, distanceRGBA: {uniforms: sr([qr.common, qr.displacementmap, {referencePosition: {value: new It}, nearDistance: {value: 1}, farDistance: {value: 1e3}}]), vertexShader: Er.distanceRGBA_vert, fragmentShader: Er.distanceRGBA_frag}, shadow: {uniforms: sr([qr.lights, qr.fog, {color: {value: new ri(0)}, opacity: {value: 1}}]), vertexShader: Er.shadow_vert, fragmentShader: Er.shadow_frag}};
  function Ar() {
    var e = null, t = false, n = null;
    function i(r, o) {
      false !== t && (n(r, o), e.requestAnimationFrame(i));
    }
    return {start: function () {
      true !== t && null !== n && (e.requestAnimationFrame(i), t = true);
    }, stop: function () {
      t = false;
    }, setAnimationLoop: function (e) {
      n = e;
    }, setContext: function (t) {
      e = t;
    }};
  }
  function Mr(e) {
    var t = new WeakMap;
    return {get: function (e) {
      return e.isInterleavedBufferAttribute && (e = e.data), t.get(e);
    }, remove: function (n) {
      n.isInterleavedBufferAttribute && (n = n.data);
      var i = t.get(n);
      i && (e.deleteBuffer(i.buffer), t.delete(n));
    }, update: function (n, i) {
      n.isInterleavedBufferAttribute && (n = n.data);
      var r = t.get(n);
      undefined === r ? t.set(n, function (t, n) {
        var i = t.array, r = t.dynamic ? e.DYNAMIC_DRAW : e.STATIC_DRAW, o = e.createBuffer();
        e.bindBuffer(n, o), e.bufferData(n, i, r), t.onUploadCallback();
        var s = e.FLOAT;
        return i instanceof Float32Array ? s = e.FLOAT : i instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : i instanceof Uint16Array ? s = e.UNSIGNED_SHORT : i instanceof Int16Array ? s = e.SHORT : i instanceof Uint32Array ? s = e.UNSIGNED_INT : i instanceof Int32Array ? s = e.INT : i instanceof Int8Array ? s = e.BYTE : i instanceof Uint8Array && (s = e.UNSIGNED_BYTE), {buffer: o, type: s, bytesPerElement: i.BYTES_PER_ELEMENT, version: t.version};
      }(n, i)) : r.version < n.version && (!function (t, n, i) {
        var r = n.array, o = n.updateRange;
        e.bindBuffer(i, t), false === n.dynamic ? e.bufferData(i, r, e.STATIC_DRAW) : -1 === o.count ? e.bufferSubData(i, 0, r) : 0 === o.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (e.bufferSubData(i, o.offset * r.BYTES_PER_ELEMENT, r.subarray(o.offset, o.offset + o.count)), o.count = -1);
      }(r.buffer, n, i), r.version = n.version);
    }};
  }
  function Cr(e, t, n, i) {
    nr.call(this), this.type = "PlaneGeometry", this.parameters = {width: e, height: t, widthSegments: n, heightSegments: i}, this.fromBufferGeometry(new kr(e, t, n, i)), this.mergeVertices();
  }
  function kr(e, t, n, i) {
    Ri.call(this), this.type = "PlaneBufferGeometry", this.parameters = {width: e, height: t, widthSegments: n, heightSegments: i};
    var r, o, s = (e = e || 1) / 2, a = (t = t || 1) / 2, l = Math.floor(n) || 1, c = Math.floor(i) || 1, h = l + 1, u = c + 1, d = e / l, p = t / c, m = [], f = [], g = [], v = [];
    for (o = 0; o < u; o++) {
      var y = o * p - a;
      for (r = 0; r < h; r++) {
        var _ = r * d - s;
        f.push(_, -y, 0), g.push(0, 0, 1), v.push(r / l), v.push(1 - o / c);
      }
    }
    for (o = 0; o < c; o++) for (r = 0; r < l; r++) {
      var x = r + h * o, b = r + h * (o + 1), w = r + 1 + h * (o + 1), S = r + 1 + h * o;
      m.push(x, b, S), m.push(b, w, S);
    }
    this.setIndex(m), this.addAttribute("position", new xi(f, 3)), this.addAttribute("normal", new xi(g, 3)), this.addAttribute("uv", new xi(v, 2));
  }
  function Rr(e, t, n, i) {
    var r, o, s = new ri(0), a = 0, l = null, c = 0;
    function h(e, n) {
      t.buffers.color.setClear(e.r, e.g, e.b, n, i);
    }
    return {getClearColor: function () {
      return s;
    }, setClearColor: function (e, t) {
      s.set(e), h(s, a = undefined !== t ? t : 1);
    }, getClearAlpha: function () {
      return a;
    }, setClearAlpha: function (e) {
      h(s, a = e);
    }, render: function (t, i, u, d) {
      var p = i.background, g = e.vr, v = g.getSession && g.getSession();
      if (v && "additive" === v.environmentBlendMode && (p = null), null === p ? (h(s, a), l = null, c = 0) : p && p.isColor && (h(p, 1), d = true, l = null, c = 0), (e.autoClear || d) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), p && (p.isCubeTexture || p.isWebGLRenderTargetCube)) {
        undefined === o && ((o = new Yi(new rr(1, 1, 1), new cr({type: "BackgroundCubeMaterial", uniforms: or(Tr.cube.uniforms), vertexShader: Tr.cube.vertexShader, fragmentShader: Tr.cube.fragmentShader, side: f, depthTest: false, depthWrite: false, fog: false}))).geometry.removeAttribute("normal"), o.geometry.removeAttribute("uv"), o.onBeforeRender = function (e, t, n) {
          this.matrixWorld.copyPosition(n.matrixWorld);
        }, Object.defineProperty(o.material, "map", {get: function () {
          return this.uniforms.tCube.value;
        }}), n.update(o));
        var y = p.isWebGLRenderTargetCube ? p.texture : p;
        o.material.uniforms.tCube.value = y, o.material.uniforms.tFlip.value = p.isWebGLRenderTargetCube ? 1 : -1, l === p && c === y.version || (o.material.needsUpdate = true, l = p, c = y.version), t.unshift(o, o.geometry, o.material, 0, 0, null);
      } else p && p.isTexture && (undefined === r && ((r = new Yi(new kr(2, 2), new cr({type: "BackgroundMaterial", uniforms: or(Tr.background.uniforms), vertexShader: Tr.background.vertexShader, fragmentShader: Tr.background.fragmentShader, side: m, depthTest: false, depthWrite: false, fog: false}))).geometry.removeAttribute("normal"), Object.defineProperty(r.material, "map", {get: function () {
        return this.uniforms.t2D.value;
      }}), n.update(r)), r.material.uniforms.t2D.value = p, true === p.matrixAutoUpdate && p.updateMatrix(), r.material.uniforms.uvTransform.value.copy(p.matrix), l === p && c === p.version || (r.material.needsUpdate = true, l = p, c = p.version), t.unshift(r, r.geometry, r.material, 0, 0, null));
    }};
  }
  function Lr(e, t, n, i) {
    var r;
    this.setMode = function (e) {
      r = e;
    }, this.render = function (t, i) {
      e.drawArrays(r, t, i), n.update(i, r);
    }, this.renderInstances = function (o, s, a) {
      var l, c;
      if (i.isWebGL2) l = e, c = "drawArraysInstanced"; else if (c = "drawArraysInstancedANGLE", null === (l = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      l[c](r, s, a, o.maxInstancedCount), n.update(a, r, o.maxInstancedCount);
    };
  }
  function Pr(e, t, n) {
    var i;
    function r(t) {
      if ("highp" === t) {
        if (e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0) return "highp";
        t = "mediump";
      }
      return "mediump" === t && e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp";
    }
    var o = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext, s = undefined !== n.precision ? n.precision : "highp", a = r(s);
    a !== s && (console.warn("THREE.WebGLRenderer:", s, "not supported, using", a, "instead."), s = a);
    var l = true === n.logarithmicDepthBuffer, c = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS), h = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS), u = e.getParameter(e.MAX_TEXTURE_SIZE), d = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE), p = e.getParameter(e.MAX_VERTEX_ATTRIBS), m = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS), f = e.getParameter(e.MAX_VARYING_VECTORS), g = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS), v = h > 0, y = o || !!t.get("OES_texture_float");
    return {isWebGL2: o, getMaxAnisotropy: function () {
      if (undefined !== i) return i;
      var n = t.get("EXT_texture_filter_anisotropic");
      return i = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;
    }, getMaxPrecision: r, precision: s, logarithmicDepthBuffer: l, maxTextures: c, maxVertexTextures: h, maxTextureSize: u, maxCubemapSize: d, maxAttributes: p, maxVertexUniforms: m, maxVaryings: f, maxFragmentUniforms: g, vertexTextures: v, floatFragmentTextures: y, floatVertexTextures: v && y, maxSamples: o ? e.getParameter(e.MAX_SAMPLES) : 0};
  }
  function Dr() {
    var e = this, t = null, n = 0, i = false, r = false, o = new xr, s = new zt, a = {value: null, needsUpdate: false};
    function l() {
      a.value !== t && (a.value = t, a.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function c(t, n, i, r) {
      var l = null !== t ? t.length : 0, c = null;
      if (0 !== l) {
        if (c = a.value, true !== r || null === c) {
          var h = i + 4 * l, u = n.matrixWorldInverse;
          s.getNormalMatrix(u), (null === c || c.length < h) && (c = new Float32Array(h));
          for (var d = 0, p = i; d !== l; ++d, p += 4) o.copy(t[d]).applyMatrix4(u, s), o.normal.toArray(c, p), c[p + 3] = o.constant;
        }
        a.value = c, a.needsUpdate = true;
      }
      return e.numPlanes = l, c;
    }
    this.uniform = a, this.numPlanes = 0, this.numIntersection = 0, this.init = function (e, r, o) {
      var s = 0 !== e.length || r || 0 !== n || i;
      return i = r, t = c(e, o, 0), n = e.length, s;
    }, this.beginShadows = function () {
      r = true, c(null);
    }, this.endShadows = function () {
      r = false, l();
    }, this.setState = function (e, o, s, h, u, d) {
      if (!i || null === e || 0 === e.length || r && !s) r ? c(null) : l(); else {
        var p = r ? 0 : n, m = 4 * p, f = u.clippingState || null;
        a.value = f, f = c(e, h, m, d);
        for (var g = 0; g !== m; ++g) f[g] = t[g];
        u.clippingState = f, this.numIntersection = o ? this.numPlanes : 0, this.numPlanes += p;
      }
    };
  }
  function Or(e) {
    var t = {};
    return {get: function (n) {
      if (undefined !== t[n]) return t[n];
      var i;
      switch (n) {
        case "WEBGL_depth_texture":
          i = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
          break;
        case "EXT_texture_filter_anisotropic":
          i = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
          break;
        case "WEBGL_compressed_texture_s3tc":
          i = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
          break;
        case "WEBGL_compressed_texture_pvrtc":
          i = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
          break;
        default:
          i = e.getExtension(n);
      }
      return null === i && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), t[n] = i, i;
    }};
  }
  function Ir(e, t, n) {
    var i = new WeakMap, r = new WeakMap;
    function o(e) {
      var s = e.target, a = i.get(s);
      for (var l in null !== a.index && t.remove(a.index), a.attributes) t.remove(a.attributes[l]);
      s.removeEventListener("dispose", o), i.delete(s);
      var c = r.get(a);
      c && (t.remove(c), r.delete(a)), n.memory.geometries--;
    }
    function s(n) {
      var i = [], o = n.index, s = n.attributes.position, a = 0;
      if (null !== o) {
        var l = o.array;
        a = o.version;
        for (var c = 0, h = l.length; c < h; c += 3) {
          var u = l[c + 0], d = l[c + 1], p = l[c + 2];
          i.push(u, d, d, p, p, u);
        }
      } else {
        l = s.array;
        a = s.version;
        for (c = 0, h = l.length / 3 - 1; c < h; c += 3) {
          u = c + 0, d = c + 1, p = c + 2;
          i.push(u, d, d, p, p, u);
        }
      }
      var m = new (Si(i) > 65535 ? _i : vi)(i, 1);
      m.version = a, t.update(m, e.ELEMENT_ARRAY_BUFFER);
      var f = r.get(n);
      f && t.remove(f), r.set(n, m);
    }
    return {get: function (e, t) {
      var r = i.get(t);
      return r || (t.addEventListener("dispose", o), t.isBufferGeometry ? r = t : t.isGeometry && (undefined === t._bufferGeometry && (t._bufferGeometry = (new Ri).setFromObject(e)), r = t._bufferGeometry), i.set(t, r), n.memory.geometries++, r);
    }, update: function (n) {
      var i = n.index, r = n.attributes;
      for (var o in null !== i && t.update(i, e.ELEMENT_ARRAY_BUFFER), r) t.update(r[o], e.ARRAY_BUFFER);
      var s = n.morphAttributes;
      for (var o in s) for (var a = s[o], l = 0, c = a.length; l < c; l++) t.update(a[l], e.ARRAY_BUFFER);
    }, getWireframeAttribute: function (e) {
      var t = r.get(e);
      if (t) {
        var n = e.index;
        null !== n && t.version < n.version && s(e);
      } else s(e);
      return r.get(e);
    }};
  }
  function Br(e, t, n, i) {
    var r, o, s;
    this.setMode = function (e) {
      r = e;
    }, this.setIndex = function (e) {
      o = e.type, s = e.bytesPerElement;
    }, this.render = function (t, i) {
      e.drawElements(r, i, o, t * s), n.update(i, r);
    }, this.renderInstances = function (a, l, c) {
      var h, u;
      if (i.isWebGL2) h = e, u = "drawElementsInstanced"; else if (u = "drawElementsInstancedANGLE", null === (h = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      h[u](r, c, o, l * s, a.maxInstancedCount), n.update(c, r, a.maxInstancedCount);
    };
  }
  function Fr(e) {
    var t = {frame: 0, calls: 0, triangles: 0, points: 0, lines: 0};
    return {memory: {geometries: 0, textures: 0}, render: t, programs: null, autoReset: true, reset: function () {
      t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }, update: function (n, i, r) {
      switch (r = r || 1, t.calls++, i) {
        case e.TRIANGLES:
          t.triangles += r * (n / 3);
          break;
        case e.TRIANGLE_STRIP:
        case e.TRIANGLE_FAN:
          t.triangles += r * (n - 2);
          break;
        case e.LINES:
          t.lines += r * (n / 2);
          break;
        case e.LINE_STRIP:
          t.lines += r * (n - 1);
          break;
        case e.LINE_LOOP:
          t.lines += r * n;
          break;
        case e.POINTS:
          t.points += r * n;
          break;
        default:
          console.error("THREE.WebGLInfo: Unknown draw mode:", i);
      }
    }};
  }
  function zr(e, t) {
    return Math.abs(t[1]) - Math.abs(e[1]);
  }
  function Nr(e) {
    var t = {}, n = new Float32Array(8);
    return {update: function (i, r, o, s) {
      var a = i.morphTargetInfluences, l = a.length, c = t[r.id];
      if (undefined === c) {
        c = [];
        for (var h = 0; h < l; h++) c[h] = [h, 0];
        t[r.id] = c;
      }
      var u = o.morphTargets && r.morphAttributes.position, d = o.morphNormals && r.morphAttributes.normal;
      for (h = 0; h < l; h++) {
        0 !== (p = c[h])[1] && (u && r.removeAttribute("morphTarget" + h), d && r.removeAttribute("morphNormal" + h));
      }
      for (h = 0; h < l; h++) {
        (p = c[h])[0] = h, p[1] = a[h];
      }
      for (c.sort(zr), h = 0; h < 8; h++) {
        var p;
        if (p = c[h]) {
          var m = p[0], f = p[1];
          if (f) {
            u && r.addAttribute("morphTarget" + h, u[m]), d && r.addAttribute("morphNormal" + h, d[m]), n[h] = f;
            continue;
          }
        }
        n[h] = 0;
      }
      s.getUniforms().setValue(e, "morphTargetInfluences", n);
    }};
  }
  function Ur(e, t) {
    var n = {};
    return {update: function (i) {
      var r = t.render.frame, o = i.geometry, s = e.get(i, o);
      return n[s.id] !== r && (o.isGeometry && s.updateFromObject(i), e.update(s), n[s.id] = r), s;
    }, dispose: function () {
      n = {};
    }};
  }
  function Vr(e, t, n, i, r, o, s, a, l, c) {
    e = undefined !== e ? e : [], t = undefined !== t ? t : oe, s = undefined !== s ? s : De, Vt.call(this, e, t, n, i, r, o, s, a, l, c), this.flipY = false;
  }
  function Gr(e, t, n, i) {
    Vt.call(this, null), this.image = {data: e, width: t, height: n, depth: i}, this.magFilter = fe, this.minFilter = fe, this.wrapR = pe, this.generateMipmaps = false, this.flipY = false;
  }
  function Hr(e, t, n, i) {
    Vt.call(this, null), this.image = {data: e, width: t, height: n, depth: i}, this.magFilter = fe, this.minFilter = fe, this.wrapR = pe, this.generateMipmaps = false, this.flipY = false;
  }
  Tr.physical = {uniforms: sr([Tr.standard.uniforms, {transparency: {value: 0}, clearcoat: {value: 0}, clearcoatRoughness: {value: 0}, sheen: {value: new ri(0)}, clearcoatNormalScale: {value: new Lt(1, 1)}, clearcoatNormalMap: {value: null}}]), vertexShader: Er.meshphysical_vert, fragmentShader: Er.meshphysical_frag}, Cr.prototype = Object.create(nr.prototype), Cr.prototype.constructor = Cr, kr.prototype = Object.create(Ri.prototype), kr.prototype.constructor = kr, Vr.prototype = Object.create(Vt.prototype), Vr.prototype.constructor = Vr, Vr.prototype.isCubeTexture = true, Object.defineProperty(Vr.prototype, "images", {get: function () {
    return this.image;
  }, set: function (e) {
    this.image = e;
  }}), Gr.prototype = Object.create(Vt.prototype), Gr.prototype.constructor = Gr, Gr.prototype.isDataTexture2DArray = true, Hr.prototype = Object.create(Vt.prototype), Hr.prototype.constructor = Hr, Hr.prototype.isDataTexture3D = true;
  var jr = new Vt, $r = new Gr, Wr = new Hr, Xr = new Vr, Yr = [], Jr = [], Kr = new Float32Array(16), Zr = new Float32Array(9), Qr = new Float32Array(4);
  function eo(e, t, n) {
    var i = e[0];
    if (i <= 0 || i > 0) return e;
    var r = t * n, o = Yr[r];
    if (undefined === o && (o = new Float32Array(r), Yr[r] = o), 0 !== t) {
      i.toArray(o, 0);
      for (var s = 1, a = 0; s !== t; ++s) a += n, e[s].toArray(o, a);
    }
    return o;
  }
  function to(e, t) {
    if (e.length !== t.length) return false;
    for (var n = 0, i = e.length; n < i; n++) if (e[n] !== t[n]) return false;
    return true;
  }
  function no(e, t) {
    for (var n = 0, i = t.length; n < i; n++) e[n] = t[n];
  }
  function io(e, t) {
    var n = Jr[t];
    undefined === n && (n = new Int32Array(t), Jr[t] = n);
    for (var i = 0; i !== t; ++i) n[i] = e.allocateTextureUnit();
    return n;
  }
  function ro(e, t) {
    var n = this.cache;
    n[0] !== t && (e.uniform1f(this.addr, t), n[0] = t);
  }
  function oo(e, t) {
    var n = this.cache;
    if (undefined !== t.x) n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y), n[0] = t.x, n[1] = t.y); else {
      if (to(n, t)) return;
      e.uniform2fv(this.addr, t), no(n, t);
    }
  }
  function so(e, t) {
    var n = this.cache;
    if (undefined !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z), n[0] = t.x, n[1] = t.y, n[2] = t.z); else if (undefined !== t.r) n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b), n[0] = t.r, n[1] = t.g, n[2] = t.b); else {
      if (to(n, t)) return;
      e.uniform3fv(this.addr, t), no(n, t);
    }
  }
  function ao(e, t) {
    var n = this.cache;
    if (undefined !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w), n[0] = t.x, n[1] = t.y, n[2] = t.z, n[3] = t.w); else {
      if (to(n, t)) return;
      e.uniform4fv(this.addr, t), no(n, t);
    }
  }
  function lo(e, t) {
    var n = this.cache, i = t.elements;
    if (undefined === i) {
      if (to(n, t)) return;
      e.uniformMatrix2fv(this.addr, false, t), no(n, t);
    } else {
      if (to(n, i)) return;
      Qr.set(i), e.uniformMatrix2fv(this.addr, false, Qr), no(n, i);
    }
  }
  function co(e, t) {
    var n = this.cache, i = t.elements;
    if (undefined === i) {
      if (to(n, t)) return;
      e.uniformMatrix3fv(this.addr, false, t), no(n, t);
    } else {
      if (to(n, i)) return;
      Zr.set(i), e.uniformMatrix3fv(this.addr, false, Zr), no(n, i);
    }
  }
  function ho(e, t) {
    var n = this.cache, i = t.elements;
    if (undefined === i) {
      if (to(n, t)) return;
      e.uniformMatrix4fv(this.addr, false, t), no(n, t);
    } else {
      if (to(n, i)) return;
      Kr.set(i), e.uniformMatrix4fv(this.addr, false, Kr), no(n, i);
    }
  }
  function uo(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.safeSetTexture2D(t || jr, r);
  }
  function po(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.setTexture2DArray(t || $r, r);
  }
  function mo(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.setTexture3D(t || Wr, r);
  }
  function fo(e, t, n) {
    var i = this.cache, r = n.allocateTextureUnit();
    i[0] !== r && (e.uniform1i(this.addr, r), i[0] = r), n.safeSetTextureCube(t || Xr, r);
  }
  function go(e, t) {
    var n = this.cache;
    n[0] !== t && (e.uniform1i(this.addr, t), n[0] = t);
  }
  function vo(e, t) {
    var n = this.cache;
    to(n, t) || (e.uniform2iv(this.addr, t), no(n, t));
  }
  function yo(e, t) {
    var n = this.cache;
    to(n, t) || (e.uniform3iv(this.addr, t), no(n, t));
  }
  function _o(e, t) {
    var n = this.cache;
    to(n, t) || (e.uniform4iv(this.addr, t), no(n, t));
  }
  function xo(e, t) {
    e.uniform1fv(this.addr, t);
  }
  function bo(e, t) {
    e.uniform1iv(this.addr, t);
  }
  function wo(e, t) {
    e.uniform2iv(this.addr, t);
  }
  function So(e, t) {
    e.uniform3iv(this.addr, t);
  }
  function Eo(e, t) {
    e.uniform4iv(this.addr, t);
  }
  function qo(e, t) {
    var n = eo(t, this.size, 2);
    e.uniform2fv(this.addr, n);
  }
  function To(e, t) {
    var n = eo(t, this.size, 3);
    e.uniform3fv(this.addr, n);
  }
  function Ao(e, t) {
    var n = eo(t, this.size, 4);
    e.uniform4fv(this.addr, n);
  }
  function Mo(e, t) {
    var n = eo(t, this.size, 4);
    e.uniformMatrix2fv(this.addr, false, n);
  }
  function Co(e, t) {
    var n = eo(t, this.size, 9);
    e.uniformMatrix3fv(this.addr, false, n);
  }
  function ko(e, t) {
    var n = eo(t, this.size, 16);
    e.uniformMatrix4fv(this.addr, false, n);
  }
  function Ro(e, t, n) {
    var i = t.length, r = io(n, i);
    e.uniform1iv(this.addr, r);
    for (var o = 0; o !== i; ++o) n.safeSetTexture2D(t[o] || jr, r[o]);
  }
  function Lo(e, t, n) {
    var i = t.length, r = io(n, i);
    e.uniform1iv(this.addr, r);
    for (var o = 0; o !== i; ++o) n.safeSetTextureCube(t[o] || Xr, r[o]);
  }
  function Po(e, t, n) {
    this.id = e, this.addr = n, this.cache = [], this.setValue = function (e) {
      switch (e) {
        case 5126:
          return ro;
        case 35664:
          return oo;
        case 35665:
          return so;
        case 35666:
          return ao;
        case 35674:
          return lo;
        case 35675:
          return co;
        case 35676:
          return ho;
        case 35678:
        case 36198:
          return uo;
        case 35679:
          return mo;
        case 35680:
          return fo;
        case 36289:
          return po;
        case 5124:
        case 35670:
          return go;
        case 35667:
        case 35671:
          return vo;
        case 35668:
        case 35672:
          return yo;
        case 35669:
        case 35673:
          return _o;
      }
    }(t.type);
  }
  function Do(e, t, n) {
    this.id = e, this.addr = n, this.cache = [], this.size = t.size, this.setValue = function (e) {
      switch (e) {
        case 5126:
          return xo;
        case 35664:
          return qo;
        case 35665:
          return To;
        case 35666:
          return Ao;
        case 35674:
          return Mo;
        case 35675:
          return Co;
        case 35676:
          return ko;
        case 35678:
          return Ro;
        case 35680:
          return Lo;
        case 5124:
        case 35670:
          return bo;
        case 35667:
        case 35671:
          return wo;
        case 35668:
        case 35672:
          return So;
        case 35669:
        case 35673:
          return Eo;
      }
    }(t.type);
  }
  function Oo(e) {
    this.id = e, this.seq = [], this.map = {};
  }
  Do.prototype.updateCache = function (e) {
    var t = this.cache;
    e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)), no(t, e);
  }, Oo.prototype.setValue = function (e, t, n) {
    for (var i = this.seq, r = 0, o = i.length; r !== o; ++r) {
      var s = i[r];
      s.setValue(e, t[s.id], n);
    }
  };
  var Io = /([\w\d_]+)(\])?(\[|\.)?/g;
  function Bo(e, t) {
    e.seq.push(t), e.map[t.id] = t;
  }
  function Fo(e, t, n) {
    var i = e.name, r = i.length;
    for (Io.lastIndex = 0;;) {
      var o = Io.exec(i), s = Io.lastIndex, a = o[1], l = "]" === o[2], c = o[3];
      if (l && (a |= 0), undefined === c || "[" === c && s + 2 === r) {
        Bo(n, undefined === c ? new Po(a, e, t) : new Do(a, e, t));
        break;
      }
      var h = n.map[a];
      undefined === h && Bo(n, h = new Oo(a)), n = h;
    }
  }
  function zo(e, t) {
    this.seq = [], this.map = {};
    for (var n = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), i = 0; i < n; ++i) {
      var r = e.getActiveUniform(t, i);
      Fo(r, e.getUniformLocation(t, r.name), this);
    }
  }
  function No(e, t, n) {
    var i = e.createShader(t);
    return e.shaderSource(i, n), e.compileShader(i), i;
  }
  zo.prototype.setValue = function (e, t, n, i) {
    var r = this.map[t];
    undefined !== r && r.setValue(e, n, i);
  }, zo.prototype.setOptional = function (e, t, n) {
    var i = t[n];
    undefined !== i && this.setValue(e, n, i);
  }, zo.upload = function (e, t, n, i) {
    for (var r = 0, o = t.length; r !== o; ++r) {
      var s = t[r], a = n[s.id];
      false !== a.needsUpdate && s.setValue(e, a.value, i);
    }
  }, zo.seqWithValue = function (e, t) {
    for (var n = [], i = 0, r = e.length; i !== r; ++i) {
      var o = e[i];
      o.id in t && n.push(o);
    }
    return n;
  };
  var Uo = 0;
  function Vo(e) {
    switch (e) {
      case ft:
        return ["Linear", "( value )"];
      case gt:
        return ["sRGB", "( value )"];
      case yt:
        return ["RGBE", "( value )"];
      case xt:
        return ["RGBM", "( value, 7.0 )"];
      case bt:
        return ["RGBM", "( value, 16.0 )"];
      case wt:
        return ["RGBD", "( value, 256.0 )"];
      case vt:
        return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
      case _t:
        return ["LogLuv", "( value )"];
      default:
        throw new Error("unsupported encoding: " + e);
    }
  }
  function Go(e, t, n) {
    var i = e.getShaderParameter(t, e.COMPILE_STATUS), r = e.getShaderInfoLog(t).trim();
    return i && "" === r ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + r + function (e) {
      for (var t = e.split("\n"), n = 0; n < t.length; n++) t[n] = n + 1 + ": " + t[n];
      return t.join("\n");
    }(e.getShaderSource(t));
  }
  function Ho(e, t) {
    var n = Vo(t);
    return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }";
  }
  function jo(e, t) {
    var n;
    switch (t) {
      case ee:
        n = "Linear";
        break;
      case te:
        n = "Reinhard";
        break;
      case ne:
        n = "Uncharted2";
        break;
      case ie:
        n = "OptimizedCineon";
        break;
      case re:
        n = "ACESFilmic";
        break;
      default:
        throw new Error("unsupported toneMapping: " + t);
    }
    return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }";
  }
  function $o(e) {
    return "" !== e;
  }
  function Wo(e, t) {
    return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows);
  }
  function Xo(e, t) {
    return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection);
  }
  function Yo(e) {
    return e.replace(/^[ \t]*#include +<([\w\d./]+)>/gm, function (e, t) {
      var n = Er[t];
      if (undefined === n) throw new Error("Can not resolve #include <" + t + ">");
      return Yo(n);
    });
  }
  function Jo(e) {
    return e.replace(/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function (e, t, n, i) {
      for (var r = "", o = parseInt(t); o < parseInt(n); o++) r += i.replace(/\[ i \]/g, "[ " + o + " ]").replace(/UNROLLED_LOOP_INDEX/g, o);
      return r;
    });
  }
  function Ko(e, t, n, i, r, o, s) {
    var a = e.getContext(), l = i.defines, c = r.vertexShader, h = r.fragmentShader, m = "SHADOWMAP_TYPE_BASIC";
    o.shadowMapType === u ? m = "SHADOWMAP_TYPE_PCF" : o.shadowMapType === d ? m = "SHADOWMAP_TYPE_PCF_SOFT" : o.shadowMapType === p && (m = "SHADOWMAP_TYPE_VSM");
    var f = "ENVMAP_TYPE_CUBE", g = "ENVMAP_MODE_REFLECTION", v = "ENVMAP_BLENDING_MULTIPLY";
    if (o.envMap) {
      switch (i.envMap.mapping) {
        case oe:
        case se:
          f = "ENVMAP_TYPE_CUBE";
          break;
        case he:
        case ue:
          f = "ENVMAP_TYPE_CUBE_UV";
          break;
        case ae:
        case le:
          f = "ENVMAP_TYPE_EQUIREC";
          break;
        case ce:
          f = "ENVMAP_TYPE_SPHERE";
      }
      switch (i.envMap.mapping) {
        case se:
        case le:
          g = "ENVMAP_MODE_REFRACTION";
      }
      switch (i.combine) {
        case J:
          v = "ENVMAP_BLENDING_MULTIPLY";
          break;
        case K:
          v = "ENVMAP_BLENDING_MIX";
          break;
        case Z:
          v = "ENVMAP_BLENDING_ADD";
      }
    }
    var y, _, x, b, w, S = e.gammaFactor > 0 ? e.gammaFactor : 1, E = s.isWebGL2 ? "" : function (e, t, n) {
      return [(e = e || {}).derivatives || t.envMapCubeUV || t.bumpMap || t.tangentSpaceNormalMap || t.clearcoatNormalMap || t.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (e.fragDepth || t.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", e.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (e.shaderTextureLOD || t.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter($o).join("\n");
    }(i.extensions, o, t), q = function (e) {
      var t = [];
      for (var n in e) {
        var i = e[n];
        false !== i && t.push("#define " + n + " " + i);
      }
      return t.join("\n");
    }(l), T = a.createProgram();
    if (i.isRawShaderMaterial ? ((y = [q].filter($o).join("\n")).length > 0 && (y += "\n"), (_ = [E, q].filter($o).join("\n")).length > 0 && (_ += "\n")) : (y = ["precision " + o.precision + " float;", "precision " + o.precision + " int;", "highp" === o.precision ? "#define HIGH_PRECISION" : "", "#define SHADER_NAME " + r.name, q, o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + S, "#define MAX_BONES " + o.maxBones, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp2 ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + g : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.normalMap && o.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", o.normalMap && o.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", o.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", o.displacementMap && o.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.vertexTangents ? "#define USE_TANGENT" : "", o.vertexColors ? "#define USE_COLOR" : "", o.vertexUvs ? "#define USE_UV" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.skinning ? "#define USE_SKINNING" : "", o.useVertexTexture ? "#define BONE_TEXTURE" : "", o.morphTargets ? "#define USE_MORPHTARGETS" : "", o.morphNormals && false === o.flatShading ? "#define USE_MORPHNORMALS" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + m : "", o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && (s.isWebGL2 || t.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "	attribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", "\n"].filter($o).join("\n"), _ = [E, "precision " + o.precision + " float;", "precision " + o.precision + " int;", "highp" === o.precision ? "#define HIGH_PRECISION" : "", "#define SHADER_NAME " + r.name, q, o.alphaTest ? "#define ALPHATEST " + o.alphaTest + (o.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + S, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp2 ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.matcap ? "#define USE_MATCAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + f : "", o.envMap ? "#define " + g : "", o.envMap ? "#define " + v : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.normalMap && o.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", o.normalMap && o.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", o.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.sheen ? "#define USE_SHEEN" : "", o.vertexTangents ? "#define USE_TANGENT" : "", o.vertexColors ? "#define USE_COLOR" : "", o.vertexUvs ? "#define USE_UV" : "", o.gradientMap ? "#define USE_GRADIENTMAP" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + m : "", o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", o.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && (s.isWebGL2 || t.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", (i.extensions && i.extensions.shaderTextureLOD || o.envMap) && (s.isWebGL2 || t.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", o.toneMapping !== Q ? "#define TONE_MAPPING" : "", o.toneMapping !== Q ? Er.tonemapping_pars_fragment : "", o.toneMapping !== Q ? jo("toneMapping", o.toneMapping) : "", o.dithering ? "#define DITHERING" : "", o.outputEncoding || o.mapEncoding || o.matcapEncoding || o.envMapEncoding || o.emissiveMapEncoding ? Er.encodings_pars_fragment : "", o.mapEncoding ? Ho("mapTexelToLinear", o.mapEncoding) : "", o.matcapEncoding ? Ho("matcapTexelToLinear", o.matcapEncoding) : "", o.envMapEncoding ? Ho("envMapTexelToLinear", o.envMapEncoding) : "", o.emissiveMapEncoding ? Ho("emissiveMapTexelToLinear", o.emissiveMapEncoding) : "", o.outputEncoding ? (x = "linearToOutputTexel", b = o.outputEncoding, w = Vo(b), "vec4 " + x + "( vec4 value ) { return LinearTo" + w[0] + w[1] + "; }") : "", o.depthPacking ? "#define DEPTH_PACKING " + i.depthPacking : "", "\n"].filter($o).join("\n")), c = (c = (c = Yo(c)).replace(/NUM_DIR_LIGHTS/g, o.numDirLights).replace(/NUM_SPOT_LIGHTS/g, o.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, o.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, o.numPointLights).replace(/NUM_HEMI_LIGHTS/g, o.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, o.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, o.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, o.numPointLightShadows)).replace(/NUM_CLIPPING_PLANES/g, o.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, o.numClippingPlanes - o.numClipIntersection), h = (h = (h = Yo(h)).replace(/NUM_DIR_LIGHTS/g, o.numDirLights).replace(/NUM_SPOT_LIGHTS/g, o.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, o.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, o.numPointLights).replace(/NUM_HEMI_LIGHTS/g, o.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, o.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, o.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, o.numPointLightShadows)).replace(/NUM_CLIPPING_PLANES/g, o.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, o.numClippingPlanes - o.numClipIntersection), c = Jo(c), h = Jo(h), s.isWebGL2 && !i.isRawShaderMaterial) {
      var A = false, M = /^\s*#version\s+300\s+es\s*\n/;
      i.isShaderMaterial && null !== c.match(M) && null !== h.match(M) && (A = true, c = c.replace(M, ""), h = h.replace(M, "")), y = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + y, _ = ["#version 300 es\n", "#define varying in", A ? "" : "out highp vec4 pc_fragColor;", A ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + _;
    }
    var C, k, R = y + c, L = _ + h, P = No(a, a.VERTEX_SHADER, R), D = No(a, a.FRAGMENT_SHADER, L);
    if (a.attachShader(T, P), a.attachShader(T, D), undefined !== i.index0AttributeName ? a.bindAttribLocation(T, 0, i.index0AttributeName) : true === o.morphTargets && a.bindAttribLocation(T, 0, "position"), a.linkProgram(T), e.debug.checkShaderErrors) {
      var O = a.getProgramInfoLog(T).trim(), I = a.getShaderInfoLog(P).trim(), B = a.getShaderInfoLog(D).trim(), F = true, z = true;
      if (false === a.getProgramParameter(T, a.LINK_STATUS)) {
        F = false;
        var N = Go(a, P, "vertex"), U = Go(a, D, "fragment");
        console.error("THREE.WebGLProgram: shader error: ", a.getError(), "gl.VALIDATE_STATUS", a.getProgramParameter(T, a.VALIDATE_STATUS), "gl.getProgramInfoLog", O, N, U);
      } else "" !== O ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", O) : "" !== I && "" !== B || (z = false);
      z && (this.diagnostics = {runnable: F, material: i, programLog: O, vertexShader: {log: I, prefix: y}, fragmentShader: {log: B, prefix: _}});
    }
    return a.deleteShader(P), a.deleteShader(D), this.getUniforms = function () {
      return undefined === C && (C = new zo(a, T)), C;
    }, this.getAttributes = function () {
      return undefined === k && (k = function (e, t) {
        for (var n = {}, i = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), r = 0; r < i; r++) {
          var o = e.getActiveAttrib(t, r).name;
          n[o] = e.getAttribLocation(t, o);
        }
        return n;
      }(a, T)), k;
    }, this.destroy = function () {
      a.deleteProgram(T), this.program = undefined;
    }, this.name = r.name, this.id = Uo++, this.code = n, this.usedTimes = 1, this.program = T, this.vertexShader = P, this.fragmentShader = D, this;
  }
  function Zo(e, t, n) {
    var i = [], r = {MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "phong", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", MeshMatcapMaterial: "matcap", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite"}, o = ["precision", "supportsVertexTextures", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen"];
    function s(e, t) {
      var n;
      return e ? e.isTexture ? n = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), n = e.texture.encoding) : n = ft, n === ft && t && (n = vt), n;
    }
    this.getParameters = function (t, i, o, a, l, c, h) {
      var u = r[t.type], d = h.isSkinnedMesh ? function (e) {
        var t = e.skeleton.bones;
        if (n.floatVertexTextures) return 1024;
        var i = n.maxVertexUniforms, r = Math.floor((i - 20) / 4), o = Math.min(r, t.length);
        return o < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + o + "."), 0) : o;
      }(h) : 0, p = n.precision;
      null !== t.precision && (p = n.getMaxPrecision(t.precision)) !== t.precision && console.warn("THREE.WebGLProgram.getParameters:", t.precision, "not supported, using", p, "instead.");
      var m = e.getRenderTarget();
      return {shaderID: u, precision: p, supportsVertexTextures: n.vertexTextures, outputEncoding: s(m ? m.texture : null, e.gammaOutput), map: !!t.map, mapEncoding: s(t.map, e.gammaInput), matcap: !!t.matcap, matcapEncoding: s(t.matcap, e.gammaInput), envMap: !!t.envMap, envMapMode: t.envMap && t.envMap.mapping, envMapEncoding: s(t.envMap, e.gammaInput), envMapCubeUV: !!t.envMap && (t.envMap.mapping === he || t.envMap.mapping === ue), lightMap: !!t.lightMap, aoMap: !!t.aoMap, emissiveMap: !!t.emissiveMap, emissiveMapEncoding: s(t.emissiveMap, e.gammaInput), bumpMap: !!t.bumpMap, normalMap: !!t.normalMap, objectSpaceNormalMap: t.normalMapType === Tt, tangentSpaceNormalMap: t.normalMapType === qt, clearcoatNormalMap: !!t.clearcoatNormalMap, displacementMap: !!t.displacementMap, roughnessMap: !!t.roughnessMap, metalnessMap: !!t.metalnessMap, specularMap: !!t.specularMap, alphaMap: !!t.alphaMap, gradientMap: !!t.gradientMap, sheen: !!t.sheen, combine: t.combine, vertexTangents: t.normalMap && t.vertexTangents, vertexColors: t.vertexColors, vertexUvs: !!(t.map || t.bumpMap || t.normalMap || t.specularMap || t.alphaMap || t.emissiveMap || t.roughnessMap || t.metalnessMap || t.clearcoatNormalMap), fog: !!a, useFog: t.fog, fogExp2: a && a.isFogExp2, flatShading: t.flatShading, sizeAttenuation: t.sizeAttenuation, logarithmicDepthBuffer: n.logarithmicDepthBuffer, skinning: t.skinning && d > 0, maxBones: d, useVertexTexture: n.floatVertexTextures, morphTargets: t.morphTargets, morphNormals: t.morphNormals, maxMorphTargets: e.maxMorphTargets, maxMorphNormals: e.maxMorphNormals, numDirLights: i.directional.length, numPointLights: i.point.length, numSpotLights: i.spot.length, numRectAreaLights: i.rectArea.length, numHemiLights: i.hemi.length, numDirLightShadows: i.directionalShadowMap.length, numPointLightShadows: i.pointShadowMap.length, numSpotLightShadows: i.spotShadowMap.length, numClippingPlanes: l, numClipIntersection: c, dithering: t.dithering, shadowMapEnabled: e.shadowMap.enabled && h.receiveShadow && o.length > 0, shadowMapType: e.shadowMap.type, toneMapping: t.toneMapped ? e.toneMapping : Q, physicallyCorrectLights: e.physicallyCorrectLights, premultipliedAlpha: t.premultipliedAlpha, alphaTest: t.alphaTest, doubleSided: t.side === g, flipSided: t.side === f, depthPacking: undefined !== t.depthPacking && t.depthPacking};
    }, this.getProgramCode = function (t, n) {
      var i = [];
      if (n.shaderID ? i.push(n.shaderID) : (i.push(t.fragmentShader), i.push(t.vertexShader)), undefined !== t.defines) for (var r in t.defines) i.push(r), i.push(t.defines[r]);
      for (var s = 0; s < o.length; s++) i.push(n[o[s]]);
      return i.push(t.onBeforeCompile.toString()), i.push(e.gammaOutput), i.push(e.gammaFactor), i.join();
    }, this.acquireProgram = function (r, o, s, a) {
      for (var l, c = 0, h = i.length; c < h; c++) {
        var u = i[c];
        if (u.code === a) {
          ++(l = u).usedTimes;
          break;
        }
      }
      return undefined === l && (l = new Ko(e, t, a, r, o, s, n), i.push(l)), l;
    }, this.releaseProgram = function (e) {
      if (0 == --e.usedTimes) {
        var t = i.indexOf(e);
        i[t] = i[i.length - 1], i.pop(), e.destroy();
      }
    }, this.programs = i;
  }
  function Qo() {
    var e = new WeakMap;
    return {get: function (t) {
      var n = e.get(t);
      return undefined === n && (n = {}, e.set(t, n)), n;
    }, remove: function (t) {
      e.delete(t);
    }, update: function (t, n, i) {
      e.get(t)[n] = i;
    }, dispose: function () {
      e = new WeakMap;
    }};
  }
  function es(e, t) {
    return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id;
  }
  function ts(e, t) {
    return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id;
  }
  function ns() {
    var e = [], t = 0, n = [], i = [], r = {id: -1};
    function o(n, i, o, s, a, l) {
      var c = e[t];
      return undefined === c ? (c = {id: n.id, object: n, geometry: i, material: o, program: o.program || r, groupOrder: s, renderOrder: n.renderOrder, z: a, group: l}, e[t] = c) : (c.id = n.id, c.object = n, c.geometry = i, c.material = o, c.program = o.program || r, c.groupOrder = s, c.renderOrder = n.renderOrder, c.z = a, c.group = l), t++, c;
    }
    return {opaque: n, transparent: i, init: function () {
      t = 0, n.length = 0, i.length = 0;
    }, push: function (e, t, r, s, a, l) {
      var c = o(e, t, r, s, a, l);
      (true === r.transparent ? i : n).push(c);
    }, unshift: function (e, t, r, s, a, l) {
      var c = o(e, t, r, s, a, l);
      (true === r.transparent ? i : n).unshift(c);
    }, sort: function () {
      n.length > 1 && n.sort(es), i.length > 1 && i.sort(ts);
    }};
  }
  function is() {
    var e = new WeakMap;
    function t(n) {
      var i = n.target;
      i.removeEventListener("dispose", t), e.delete(i);
    }
    return {get: function (n, i) {
      var r, o = e.get(n);
      return undefined === o ? (r = new ns, e.set(n, new WeakMap), e.get(n).set(i, r), n.addEventListener("dispose", t)) : undefined === (r = o.get(i)) && (r = new ns, o.set(i, r)), r;
    }, dispose: function () {
      e = new WeakMap;
    }};
  }
  function rs() {
    var e = {};
    return {get: function (t) {
      if (undefined !== e[t.id]) return e[t.id];
      var n;
      switch (t.type) {
        case "DirectionalLight":
          n = {direction: new It, color: new ri, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Lt};
          break;
        case "SpotLight":
          n = {position: new It, direction: new It, color: new ri, distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Lt};
          break;
        case "PointLight":
          n = {position: new It, color: new ri, distance: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Lt, shadowCameraNear: 1, shadowCameraFar: 1e3};
          break;
        case "HemisphereLight":
          n = {direction: new It, skyColor: new ri, groundColor: new ri};
          break;
        case "RectAreaLight":
          n = {color: new ri, position: new It, halfWidth: new It, halfHeight: new It};
      }
      return e[t.id] = n, n;
    }};
  }
  var os = 0;
  function ss(e, t) {
    return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0);
  }
  function as() {
    for (var e = new rs, t = {version: 0, hash: {directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1}, ambient: [0, 0, 0], probe: [], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [], numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1}, n = 0; n < 9; n++) t.probe.push(new It);
    var i = new It, r = new Qt, o = new Qt;
    return {setup: function (n, s, a) {
      for (var l = 0, c = 0, h = 0, u = 0; u < 9; u++) t.probe[u].set(0, 0, 0);
      var d = 0, p = 0, m = 0, f = 0, g = 0, v = 0, y = 0, _ = 0, x = a.matrixWorldInverse;
      n.sort(ss), u = 0;
      for (var b = n.length; u < b; u++) {
        var w = n[u], S = w.color, E = w.intensity, q = w.distance, T = w.shadow && w.shadow.map ? w.shadow.map.texture : null;
        if (w.isAmbientLight) l += S.r * E, c += S.g * E, h += S.b * E; else if (w.isLightProbe) for (var A = 0; A < 9; A++) t.probe[A].addScaledVector(w.sh.coefficients[A], E); else if (w.isDirectionalLight) {
          if ((C = e.get(w)).color.copy(w.color).multiplyScalar(w.intensity), C.direction.setFromMatrixPosition(w.matrixWorld), i.setFromMatrixPosition(w.target.matrixWorld), C.direction.sub(i), C.direction.transformDirection(x), C.shadow = w.castShadow, w.castShadow) {
            var M = w.shadow;
            C.shadowBias = M.bias, C.shadowRadius = M.radius, C.shadowMapSize = M.mapSize, t.directionalShadowMap[d] = T, t.directionalShadowMatrix[d] = w.shadow.matrix, v++;
          }
          t.directional[d] = C, d++;
        } else if (w.isSpotLight) {
          if ((C = e.get(w)).position.setFromMatrixPosition(w.matrixWorld), C.position.applyMatrix4(x), C.color.copy(S).multiplyScalar(E), C.distance = q, C.direction.setFromMatrixPosition(w.matrixWorld), i.setFromMatrixPosition(w.target.matrixWorld), C.direction.sub(i), C.direction.transformDirection(x), C.coneCos = Math.cos(w.angle), C.penumbraCos = Math.cos(w.angle * (1 - w.penumbra)), C.decay = w.decay, C.shadow = w.castShadow, w.castShadow) {
            M = w.shadow;
            C.shadowBias = M.bias, C.shadowRadius = M.radius, C.shadowMapSize = M.mapSize, t.spotShadowMap[m] = T, t.spotShadowMatrix[m] = w.shadow.matrix, _++;
          }
          t.spot[m] = C, m++;
        } else if (w.isRectAreaLight) {
          (C = e.get(w)).color.copy(S).multiplyScalar(E), C.position.setFromMatrixPosition(w.matrixWorld), C.position.applyMatrix4(x), o.identity(), r.copy(w.matrixWorld), r.premultiply(x), o.extractRotation(r), C.halfWidth.set(0.5 * w.width, 0, 0), C.halfHeight.set(0, 0.5 * w.height, 0), C.halfWidth.applyMatrix4(o), C.halfHeight.applyMatrix4(o), t.rectArea[f] = C, f++;
        } else if (w.isPointLight) {
          if ((C = e.get(w)).position.setFromMatrixPosition(w.matrixWorld), C.position.applyMatrix4(x), C.color.copy(w.color).multiplyScalar(w.intensity), C.distance = w.distance, C.decay = w.decay, C.shadow = w.castShadow, w.castShadow) {
            M = w.shadow;
            C.shadowBias = M.bias, C.shadowRadius = M.radius, C.shadowMapSize = M.mapSize, C.shadowCameraNear = M.camera.near, C.shadowCameraFar = M.camera.far, t.pointShadowMap[p] = T, t.pointShadowMatrix[p] = w.shadow.matrix, y++;
          }
          t.point[p] = C, p++;
        } else if (w.isHemisphereLight) {
          var C;
          (C = e.get(w)).direction.setFromMatrixPosition(w.matrixWorld), C.direction.transformDirection(x), C.direction.normalize(), C.skyColor.copy(w.color).multiplyScalar(E), C.groundColor.copy(w.groundColor).multiplyScalar(E), t.hemi[g] = C, g++;
        }
      }
      t.ambient[0] = l, t.ambient[1] = c, t.ambient[2] = h;
      var k = t.hash;
      k.directionalLength === d && k.pointLength === p && k.spotLength === m && k.rectAreaLength === f && k.hemiLength === g && k.numDirectionalShadows === v && k.numPointShadows === y && k.numSpotShadows === _ || (t.directional.length = d, t.spot.length = m, t.rectArea.length = f, t.point.length = p, t.hemi.length = g, t.directionalShadowMap.length = v, t.pointShadowMap.length = y, t.spotShadowMap.length = _, t.directionalShadowMatrix.length = v, t.pointShadowMatrix.length = y, t.spotShadowMatrix.length = _, k.directionalLength = d, k.pointLength = p, k.spotLength = m, k.rectAreaLength = f, k.hemiLength = g, k.numDirectionalShadows = v, k.numPointShadows = y, k.numSpotShadows = _, t.version = os++);
    }, state: t};
  }
  function ls() {
    var e = new as, t = [], n = [];
    return {init: function () {
      t.length = 0, n.length = 0;
    }, state: {lightsArray: t, shadowsArray: n, lights: e}, setupLights: function (i) {
      e.setup(t, n, i);
    }, pushLight: function (e) {
      t.push(e);
    }, pushShadow: function (e) {
      n.push(e);
    }};
  }
  function cs() {
    var e = new WeakMap;
    function t(n) {
      var i = n.target;
      i.removeEventListener("dispose", t), e.delete(i);
    }
    return {get: function (n, i) {
      var r;
      return false === e.has(n) ? (r = new ls, e.set(n, new WeakMap), e.get(n).set(i, r), n.addEventListener("dispose", t)) : false === e.get(n).has(i) ? (r = new ls, e.get(n).set(i, r)) : r = e.get(n).get(i), r;
    }, dispose: function () {
      e = new WeakMap;
    }};
  }
  function hs(e) {
    hi.call(this), this.type = "MeshDepthMaterial", this.depthPacking = St, this.skinning = false, this.morphTargets = false, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.setValues(e);
  }
  function us(e) {
    hi.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new It, this.nearDistance = 1, this.farDistance = 1e3, this.skinning = false, this.morphTargets = false, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = false, this.lights = false, this.setValues(e);
  }
  hs.prototype = Object.create(hi.prototype), hs.prototype.constructor = hs, hs.prototype.isMeshDepthMaterial = true, hs.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.depthPacking = e.depthPacking, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
  }, us.prototype = Object.create(hi.prototype), us.prototype.constructor = us, us.prototype.isMeshDistanceMaterial = true, us.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
  };
  var ds = "\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n  float mean = 0.0;\n  float squared_mean = 0.0;\n  \n	// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n    #ifdef HORIZONAL_PASS\n\n      vec2 distribution = decodeHalfRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n    #else\n\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n\n    #endif\n\n  }\n\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n  float std_dev = pow( squared_mean - mean * mean, 0.5 );\n\n  gl_FragColor = encodeHalfRGBA( vec2( mean, std_dev ) );\n\n}\n", ps = "\n\nvoid main() {\n\n	gl_Position = vec4( position, 1.0 );\n\n}\n\n";
  function ms(e, t, n) {
    var i = new Sr, r = new Lt, o = new Lt, s = new Gt, a = 1, l = 2, c = 1 + (a | l), h = new Array(c), d = new Array(c), v = {}, y = {0: f, 1: m, 2: g}, _ = new cr({defines: {SAMPLE_RATE: 0.25, HALF_SAMPLE_RATE: 0.125}, uniforms: {shadow_pass: {value: null}, resolution: {value: new Lt}, radius: {value: 4}}, vertexShader: ps, fragmentShader: ds}), b = _.clone();
    b.defines.HORIZONAL_PASS = 1;
    var w = new Ri;
    w.addAttribute("position", new di(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));
    for (var S = new Yi(w, _), E = 0; E !== c; ++E) {
      var q = 0 != (E & a), T = 0 != (E & l), A = new hs({depthPacking: Et, morphTargets: q, skinning: T});
      h[E] = A;
      var M = new us({morphTargets: q, skinning: T});
      d[E] = M;
    }
    var C = this;
    function k(n, i) {
      var r = t.update(S);
      _.uniforms.shadow_pass.value = n.map.texture, _.uniforms.resolution.value = n.mapSize, _.uniforms.radius.value = n.radius, e.setRenderTarget(n.mapPass), e.clear(), e.renderBufferDirect(i, null, r, _, S, null), b.uniforms.shadow_pass.value = n.mapPass.texture, b.uniforms.resolution.value = n.mapSize, b.uniforms.radius.value = n.radius, e.setRenderTarget(n.map), e.clear(), e.renderBufferDirect(i, null, r, b, S, null);
    }
    function R(t, n, i, r, o, s) {
      var c = t.geometry, u = null, m = h, f = t.customDepthMaterial;
      if (i.isPointLight && (m = d, f = t.customDistanceMaterial), f) u = f; else {
        var g = false;
        n.morphTargets && (c && c.isBufferGeometry ? g = c.morphAttributes && c.morphAttributes.position && c.morphAttributes.position.length > 0 : c && c.isGeometry && (g = c.morphTargets && c.morphTargets.length > 0)), t.isSkinnedMesh && false === n.skinning && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t);
        var _ = t.isSkinnedMesh && n.skinning, x = 0;
        g && (x |= a), _ && (x |= l), u = m[x];
      }
      if (e.localClippingEnabled && true === n.clipShadows && 0 !== n.clippingPlanes.length) {
        var b = u.uuid, w = n.uuid, S = v[b];
        undefined === S && (S = {}, v[b] = S);
        var E = S[w];
        undefined === E && (E = u.clone(), S[w] = E), u = E;
      }
      return u.visible = n.visible, u.wireframe = n.wireframe, u.side = s === p ? null != n.shadowSide ? n.shadowSide : n.side : null != n.shadowSide ? n.shadowSide : y[n.side], u.clipShadows = n.clipShadows, u.clippingPlanes = n.clippingPlanes, u.clipIntersection = n.clipIntersection, u.wireframeLinewidth = n.wireframeLinewidth, u.linewidth = n.linewidth, i.isPointLight && u.isMeshDistanceMaterial && (u.referencePosition.setFromMatrixPosition(i.matrixWorld), u.nearDistance = r, u.farDistance = o), u;
    }
    function L(n, r, o, s, a) {
      if (false !== n.visible) {
        if (n.layers.test(r.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && a === p) && (!n.frustumCulled || i.intersectsObject(n))) {
          n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, n.matrixWorld);
          var l = t.update(n), c = n.material;
          if (Array.isArray(c)) for (var h = l.groups, u = 0, d = h.length; u < d; u++) {
            var m = h[u], f = c[m.materialIndex];
            if (f && f.visible) {
              var g = R(n, f, s, o.near, o.far, a);
              e.renderBufferDirect(o, null, l, g, n, m);
            }
          } else if (c.visible) {
            g = R(n, c, s, o.near, o.far, a);
            e.renderBufferDirect(o, null, l, g, n, null);
          }
        }
        for (var v = n.children, y = 0, _ = v.length; y < _; y++) L(v[y], r, o, s, a);
      }
    }
    this.enabled = false, this.autoUpdate = true, this.needsUpdate = false, this.type = u, this.render = function (t, a, l) {
      if (false !== C.enabled && (false !== C.autoUpdate || false !== C.needsUpdate) && 0 !== t.length) {
        var c = e.getRenderTarget(), h = e.getActiveCubeFace(), u = e.getActiveMipmapLevel(), d = e.state;
        d.setBlending(x), d.buffers.color.setClear(1, 1, 1, 1), d.buffers.depth.setTest(true), d.setScissorTest(false);
        for (var m = 0, f = t.length; m < f; m++) {
          var g = t[m], v = g.shadow;
          if (undefined !== v) {
            r.copy(v.mapSize);
            var y = v.getFrameExtents();
            if (r.multiply(y), o.copy(v.mapSize), (r.x > n || r.y > n) && (console.warn("THREE.WebGLShadowMap:", g, "has shadow exceeding max texture size, reducing"), r.x > n && (o.x = Math.floor(n / y.x), r.x = o.x * y.x, v.mapSize.x = o.x), r.y > n && (o.y = Math.floor(n / y.y), r.y = o.y * y.y, v.mapSize.y = o.y)), null === v.map && !v.isPointLightShadow && this.type === p) {
              var _ = {minFilter: ye, magFilter: ye, format: Oe};
              v.map = new Ht(r.x, r.y, _), v.map.texture.name = g.name + ".shadowMap", v.mapPass = new Ht(r.x, r.y, _), v.camera.updateProjectionMatrix();
            }
            if (null === v.map) {
              _ = {minFilter: fe, magFilter: fe, format: Oe};
              v.map = new Ht(r.x, r.y, _), v.map.texture.name = g.name + ".shadowMap", v.camera.updateProjectionMatrix();
            }
            e.setRenderTarget(v.map), e.clear();
            for (var b = v.getViewportCount(), w = 0; w < b; w++) {
              var S = v.getViewport(w);
              s.set(o.x * S.x, o.y * S.y, o.x * S.z, o.y * S.w), d.viewport(s), v.updateMatrices(g, l, w), i = v.getFrustum(), L(a, l, v.camera, g, this.type);
            }
            v.isPointLightShadow || this.type !== p || k(v, l);
          } else console.warn("THREE.WebGLShadowMap:", g, "has no shadow.");
        }
        C.needsUpdate = false, e.setRenderTarget(c, h, u);
      }
    };
  }
  function fs(e, t, n, i) {
    var r = new function () {
      var t = false, n = new Gt, i = null, r = new Gt(0, 0, 0, 0);
      return {setMask: function (n) {
        i === n || t || (e.colorMask(n, n, n, n), i = n);
      }, setLocked: function (e) {
        t = e;
      }, setClear: function (t, i, o, s, a) {
        true === a && (t *= s, i *= s, o *= s), n.set(t, i, o, s), false === r.equals(n) && (e.clearColor(t, i, o, s), r.copy(n));
      }, reset: function () {
        t = false, i = null, r.set(-1, 0, 0, 0);
      }};
    }, o = new function () {
      var t = false, n = null, i = null, r = null;
      return {setTest: function (t) {
        t ? oe(e.DEPTH_TEST) : se(e.DEPTH_TEST);
      }, setMask: function (i) {
        n === i || t || (e.depthMask(i), n = i);
      }, setFunc: function (t) {
        if (i !== t) {
          if (t) switch (t) {
            case V:
              e.depthFunc(e.NEVER);
              break;
            case G:
              e.depthFunc(e.ALWAYS);
              break;
            case H:
              e.depthFunc(e.LESS);
              break;
            case j:
              e.depthFunc(e.LEQUAL);
              break;
            case $:
              e.depthFunc(e.EQUAL);
              break;
            case W:
              e.depthFunc(e.GEQUAL);
              break;
            case X:
              e.depthFunc(e.GREATER);
              break;
            case Y:
              e.depthFunc(e.NOTEQUAL);
              break;
            default:
              e.depthFunc(e.LEQUAL);
          } else e.depthFunc(e.LEQUAL);
          i = t;
        }
      }, setLocked: function (e) {
        t = e;
      }, setClear: function (t) {
        r !== t && (e.clearDepth(t), r = t);
      }, reset: function () {
        t = false, n = null, i = null, r = null;
      }};
    }, s = new function () {
      var t = false, n = null, i = null, r = null, o = null, s = null, a = null, l = null, c = null;
      return {setTest: function (n) {
        t || (n ? oe(e.STENCIL_TEST) : se(e.STENCIL_TEST));
      }, setMask: function (i) {
        n === i || t || (e.stencilMask(i), n = i);
      }, setFunc: function (t, n, s) {
        i === t && r === n && o === s || (e.stencilFunc(t, n, s), i = t, r = n, o = s);
      }, setOp: function (t, n, i) {
        s === t && a === n && l === i || (e.stencilOp(t, n, i), s = t, a = n, l = i);
      }, setLocked: function (e) {
        t = e;
      }, setClear: function (t) {
        c !== t && (e.clearStencil(t), c = t);
      }, reset: function () {
        t = false, n = null, i = null, r = null, o = null, s = null, a = null, l = null, c = null;
      }};
    }, h = e.getParameter(e.MAX_VERTEX_ATTRIBS), u = new Uint8Array(h), d = new Uint8Array(h), p = new Uint8Array(h), m = {}, v = null, y = null, _ = null, A = null, M = null, C = null, k = null, R = null, L = null, P = null, D = false, O = null, I = null, B = null, F = null, z = null, N = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS), U = false, J = 0, K = e.getParameter(e.VERSION);
    -1 !== K.indexOf("WebGL") ? (J = parseFloat(/^WebGL\ ([0-9])/.exec(K)[1]), U = J >= 1) : -1 !== K.indexOf("OpenGL ES") && (J = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(K)[1]), U = J >= 2);
    var Z = null, Q = {}, ee = new Gt, te = new Gt;
    function ne(t, n, i) {
      var r = new Uint8Array(4), o = e.createTexture();
      e.bindTexture(t, o), e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST), e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
      for (var s = 0; s < i; s++) e.texImage2D(n + s, 0, e.RGBA, 1, 1, 0, e.RGBA, e.UNSIGNED_BYTE, r);
      return o;
    }
    var ie = {};
    function re(n, r) {
      (u[n] = 1, 0 === d[n] && (e.enableVertexAttribArray(n), d[n] = 1), p[n] !== r) && ((i.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[i.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, r), p[n] = r);
    }
    function oe(t) {
      true !== m[t] && (e.enable(t), m[t] = true);
    }
    function se(t) {
      false !== m[t] && (e.disable(t), m[t] = false);
    }
    function ae(t, i, r, o, s, a, l, c) {
      if (t !== x) {
        if (_ || (oe(e.BLEND), _ = true), t === q) s = s || i, a = a || r, l = l || o, i === M && s === R || (e.blendEquationSeparate(n.convert(i), n.convert(s)), M = i, R = s), r === C && o === k && a === L && l === P || (e.blendFuncSeparate(n.convert(r), n.convert(o), n.convert(a), n.convert(l)), C = r, k = o, L = a, P = l), A = t, D = null; else if (t !== A || c !== D) {
          if (M === T && R === T || (e.blendEquation(e.FUNC_ADD), M = T, R = T), c) switch (t) {
            case b:
              e.blendFuncSeparate(e.ONE, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA);
              break;
            case w:
              e.blendFunc(e.ONE, e.ONE);
              break;
            case S:
              e.blendFuncSeparate(e.ZERO, e.ZERO, e.ONE_MINUS_SRC_COLOR, e.ONE_MINUS_SRC_ALPHA);
              break;
            case E:
              e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ZERO, e.SRC_ALPHA);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", t);
          } else switch (t) {
            case b:
              e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA);
              break;
            case w:
              e.blendFunc(e.SRC_ALPHA, e.ONE);
              break;
            case S:
              e.blendFunc(e.ZERO, e.ONE_MINUS_SRC_COLOR);
              break;
            case E:
              e.blendFunc(e.ZERO, e.SRC_COLOR);
              break;
            default:
              console.error("THREE.WebGLState: Invalid blending: ", t);
          }
          C = null, k = null, L = null, P = null, A = t, D = c;
        }
      } else _ && (se(e.BLEND), _ = false);
    }
    function le(t) {
      O !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), O = t);
    }
    function ce(t) {
      t !== a ? (oe(e.CULL_FACE), t !== I && (t === l ? e.cullFace(e.BACK) : t === c ? e.cullFace(e.FRONT) : e.cullFace(e.FRONT_AND_BACK))) : se(e.CULL_FACE), I = t;
    }
    function he(t, n, i) {
      t ? (oe(e.POLYGON_OFFSET_FILL), F === n && z === i || (e.polygonOffset(n, i), F = n, z = i)) : se(e.POLYGON_OFFSET_FILL);
    }
    function ue(t) {
      undefined === t && (t = e.TEXTURE0 + N - 1), Z !== t && (e.activeTexture(t), Z = t);
    }
    return ie[e.TEXTURE_2D] = ne(e.TEXTURE_2D, e.TEXTURE_2D, 1), ie[e.TEXTURE_CUBE_MAP] = ne(e.TEXTURE_CUBE_MAP, e.TEXTURE_CUBE_MAP_POSITIVE_X, 6), r.setClear(0, 0, 0, 1), o.setClear(1), s.setClear(0), oe(e.DEPTH_TEST), o.setFunc(j), le(false), ce(l), oe(e.CULL_FACE), ae(x), {buffers: {color: r, depth: o, stencil: s}, initAttributes: function () {
      for (var e = 0, t = u.length; e < t; e++) u[e] = 0;
    }, enableAttribute: function (e) {
      re(e, 0);
    }, enableAttributeAndDivisor: re, disableUnusedAttributes: function () {
      for (var t = 0, n = d.length; t !== n; ++t) d[t] !== u[t] && (e.disableVertexAttribArray(t), d[t] = 0);
    }, enable: oe, disable: se, getCompressedTextureFormats: function () {
      if (null === v && (v = [], t.get("WEBGL_compressed_texture_pvrtc") || t.get("WEBGL_compressed_texture_s3tc") || t.get("WEBGL_compressed_texture_etc1") || t.get("WEBGL_compressed_texture_astc"))) for (var n = e.getParameter(e.COMPRESSED_TEXTURE_FORMATS), i = 0; i < n.length; i++) v.push(n[i]);
      return v;
    }, useProgram: function (t) {
      return y !== t && (e.useProgram(t), y = t, true);
    }, setBlending: ae, setMaterial: function (t, n) {
      t.side === g ? se(e.CULL_FACE) : oe(e.CULL_FACE);
      var i = t.side === f;
      n && (i = !i), le(i), t.blending === b && false === t.transparent ? ae(x) : ae(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha), o.setFunc(t.depthFunc), o.setTest(t.depthTest), o.setMask(t.depthWrite), r.setMask(t.colorWrite);
      var a = t.stencilWrite;
      s.setTest(a), a && (s.setFunc(t.stencilFunc, t.stencilRef, t.stencilMask), s.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)), he(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits);
    }, setFlipSided: le, setCullFace: ce, setLineWidth: function (t) {
      t !== B && (U && e.lineWidth(t), B = t);
    }, setPolygonOffset: he, setScissorTest: function (t) {
      t ? oe(e.SCISSOR_TEST) : se(e.SCISSOR_TEST);
    }, activeTexture: ue, bindTexture: function (t, n) {
      null === Z && ue();
      var i = Q[Z];
      undefined === i && (i = {type: undefined, texture: undefined}, Q[Z] = i), i.type === t && i.texture === n || (e.bindTexture(t, n || ie[t]), i.type = t, i.texture = n);
    }, compressedTexImage2D: function () {
      try {
        e.compressedTexImage2D.apply(e, arguments);
      } catch (e) {
        console.error("THREE.WebGLState:", e);
      }
    }, texImage2D: function () {
      try {
        e.texImage2D.apply(e, arguments);
      } catch (e) {
        console.error("THREE.WebGLState:", e);
      }
    }, texImage3D: function () {
      try {
        e.texImage3D.apply(e, arguments);
      } catch (e) {
        console.error("THREE.WebGLState:", e);
      }
    }, scissor: function (t) {
      false === ee.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), ee.copy(t));
    }, viewport: function (t) {
      false === te.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), te.copy(t));
    }, reset: function () {
      for (var t = 0; t < d.length; t++) 1 === d[t] && (e.disableVertexAttribArray(t), d[t] = 0);
      m = {}, v = null, Z = null, Q = {}, y = null, A = null, O = null, I = null, r.reset(), o.reset(), s.reset();
    }};
  }
  function gs(e, t, n, i, r, o, s) {
    var a, l = new WeakMap, c = "undefined" != typeof OffscreenCanvas;
    function h(e, t) {
      return c ? new OffscreenCanvas(e, t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
    }
    function u(e, t, n, i) {
      var r = 1;
      if ((e.width > i || e.height > i) && (r = i / Math.max(e.width, e.height)), r < 1 || true === t) {
        if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap) {
          var o = t ? Rt.floorPowerOfTwo : Math.floor, s = o(r * e.width), l = o(r * e.height);
          undefined === a && (a = h(s, l));
          var c = n ? h(s, l) : a;
          return c.width = s, c.height = l, c.getContext("2d").drawImage(e, 0, 0, s, l), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + s + "x" + l + ")."), c;
        }
        return "data" in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."), e;
      }
      return e;
    }
    function d(e) {
      return Rt.isPowerOfTwo(e.width) && Rt.isPowerOfTwo(e.height);
    }
    function p(e, t) {
      return e.generateMipmaps && t && e.minFilter !== fe && e.minFilter !== ye;
    }
    function m(t, n, r, o) {
      e.generateMipmap(t), i.get(n).__maxMipLevel = Math.log(Math.max(r, o)) * Math.LOG2E;
    }
    function f(n, i) {
      if (!r.isWebGL2) return n;
      var o = n;
      return n === e.RED && (i === e.FLOAT && (o = e.R32F), i === e.HALF_FLOAT && (o = e.R16F), i === e.UNSIGNED_BYTE && (o = e.R8)), n === e.RGB && (i === e.FLOAT && (o = e.RGB32F), i === e.HALF_FLOAT && (o = e.RGB16F), i === e.UNSIGNED_BYTE && (o = e.RGB8)), n === e.RGBA && (i === e.FLOAT && (o = e.RGBA32F), i === e.HALF_FLOAT && (o = e.RGBA16F), i === e.UNSIGNED_BYTE && (o = e.RGBA8)), o === e.R16F || o === e.R32F || o === e.RGBA16F || o === e.RGBA32F ? t.get("EXT_color_buffer_float") : o !== e.RGB16F && o !== e.RGB32F || console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."), o;
    }
    function g(t) {
      return t === fe || t === ge || t === ve ? e.NEAREST : e.LINEAR;
    }
    function v(t) {
      var n = t.target;
      n.removeEventListener("dispose", v), function (t) {
        var n = i.get(t);
        if (undefined === n.__webglInit) return;
        e.deleteTexture(n.__webglTexture), i.remove(t);
      }(n), n.isVideoTexture && l.delete(n), s.memory.textures--;
    }
    function y(t) {
      var n = t.target;
      n.removeEventListener("dispose", y), function (t) {
        var n = i.get(t), r = i.get(t.texture);
        if (!t) return;
        undefined !== r.__webglTexture && e.deleteTexture(r.__webglTexture);
        t.depthTexture && t.depthTexture.dispose();
        if (t.isWebGLRenderTargetCube) for (var o = 0; o < 6; o++) e.deleteFramebuffer(n.__webglFramebuffer[o]), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[o]); else e.deleteFramebuffer(n.__webglFramebuffer), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer);
        i.remove(t.texture), i.remove(t);
      }(n), s.memory.textures--;
    }
    var _ = 0;
    function x(t, r) {
      var o = i.get(t);
      if (t.isVideoTexture && function (e) {
        var t = s.render.frame;
        l.get(e) !== t && (l.set(e, t), e.update());
      }(t), t.version > 0 && o.__version !== t.version) {
        var a = t.image;
        if (undefined === a) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined"); else {
          if (false !== a.complete) return void q(o, t, r);
          console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
        }
      }
      n.activeTexture(e.TEXTURE0 + r), n.bindTexture(e.TEXTURE_2D, o.__webglTexture);
    }
    function b(t, s) {
      if (6 === t.image.length) {
        var a = i.get(t);
        if (t.version > 0 && a.__version !== t.version) {
          E(a, t), n.activeTexture(e.TEXTURE0 + s), n.bindTexture(e.TEXTURE_CUBE_MAP, a.__webglTexture), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY);
          for (var l = t && t.isCompressedTexture, c = t.image[0] && t.image[0].isDataTexture, h = [], g = 0; g < 6; g++) h[g] = l || c ? c ? t.image[g].image : t.image[g] : u(t.image[g], false, true, r.maxCubemapSize);
          var v, y = h[0], _ = Rt.isPowerOfTwo(y.width) && Rt.isPowerOfTwo(y.height) || r.isWebGL2, x = o.convert(t.format), b = o.convert(t.type), w = f(x, b);
          if (S(e.TEXTURE_CUBE_MAP, t, _), l) {
            for (g = 0; g < 6; g++) {
              v = h[g].mipmaps;
              for (var q = 0; q < v.length; q++) {
                var T = v[q];
                t.format !== Oe && t.format !== De ? n.getCompressedTextureFormats().indexOf(x) > -1 ? n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, q, w, T.width, T.height, 0, T.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, q, w, T.width, T.height, 0, x, b, T.data);
              }
            }
            a.__maxMipLevel = v.length - 1;
          } else {
            v = t.mipmaps;
            for (g = 0; g < 6; g++) if (c) {
              n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, w, h[g].width, h[g].height, 0, x, b, h[g].data);
              for (q = 0; q < v.length; q++) {
                var A = (T = v[q]).image[g].image;
                n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, q + 1, w, A.width, A.height, 0, x, b, A.data);
              }
            } else {
              n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, 0, w, x, b, h[g]);
              for (q = 0; q < v.length; q++) {
                T = v[q];
                n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + g, q + 1, w, x, b, T.image[g]);
              }
            }
            a.__maxMipLevel = v.length;
          }
          t.generateMipmaps && _ && t.minFilter !== fe && t.minFilter !== ye && m(e.TEXTURE_CUBE_MAP, t, y.width, y.height), a.__version = t.version, t.onUpdate && t.onUpdate(t);
        } else n.activeTexture(e.TEXTURE0 + s), n.bindTexture(e.TEXTURE_CUBE_MAP, a.__webglTexture);
      }
    }
    function w(t, r) {
      n.activeTexture(e.TEXTURE0 + r), n.bindTexture(e.TEXTURE_CUBE_MAP, i.get(t).__webglTexture);
    }
    function S(n, s, a) {
      var l;
      if (a ? (e.texParameteri(n, e.TEXTURE_WRAP_S, o.convert(s.wrapS)), e.texParameteri(n, e.TEXTURE_WRAP_T, o.convert(s.wrapT)), n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY || e.texParameteri(n, e.TEXTURE_WRAP_R, o.convert(s.wrapR)), e.texParameteri(n, e.TEXTURE_MAG_FILTER, o.convert(s.magFilter)), e.texParameteri(n, e.TEXTURE_MIN_FILTER, o.convert(s.minFilter))) : (e.texParameteri(n, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(n, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY || e.texParameteri(n, e.TEXTURE_WRAP_R, e.CLAMP_TO_EDGE), s.wrapS === pe && s.wrapT === pe || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), e.texParameteri(n, e.TEXTURE_MAG_FILTER, g(s.magFilter)), e.texParameteri(n, e.TEXTURE_MIN_FILTER, g(s.minFilter)), s.minFilter !== fe && s.minFilter !== ye && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), l = t.get("EXT_texture_filter_anisotropic")) {
        if (s.type === Ae && null === t.get("OES_texture_float_linear")) return;
        if (s.type === Me && null === (r.isWebGL2 || t.get("OES_texture_half_float_linear"))) return;
        (s.anisotropy > 1 || i.get(s).__currentAnisotropy) && (e.texParameterf(n, l.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(s.anisotropy, r.getMaxAnisotropy())), i.get(s).__currentAnisotropy = s.anisotropy);
      }
    }
    function E(t, n) {
      undefined === t.__webglInit && (t.__webglInit = true, n.addEventListener("dispose", v), t.__webglTexture = e.createTexture(), s.memory.textures++);
    }
    function q(t, i, s) {
      var a = e.TEXTURE_2D;
      i.isDataTexture2DArray && (a = e.TEXTURE_2D_ARRAY), i.isDataTexture3D && (a = e.TEXTURE_3D), E(t, i), n.activeTexture(e.TEXTURE0 + s), n.bindTexture(a, t.__webglTexture), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, i.flipY), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, i.premultiplyAlpha), e.pixelStorei(e.UNPACK_ALIGNMENT, i.unpackAlignment);
      var l = function (e) {
        return !r.isWebGL2 && (e.wrapS !== pe || e.wrapT !== pe || e.minFilter !== fe && e.minFilter !== ye);
      }(i) && false === (Rt.isPowerOfTwo(i.image.width) && Rt.isPowerOfTwo(i.image.height)), c = u(i.image, l, false, r.maxTextureSize), h = Rt.isPowerOfTwo(c.width) && Rt.isPowerOfTwo(c.height) || r.isWebGL2, g = o.convert(i.format), v = o.convert(i.type), y = f(g, v);
      S(a, i, h);
      var _, x = i.mipmaps;
      if (i.isDepthTexture) {
        if (y = e.DEPTH_COMPONENT, i.type === Ae) {
          if (!r.isWebGL2) throw new Error("Float Depth Texture only supported in WebGL2.0");
          y = e.DEPTH_COMPONENT32F;
        } else r.isWebGL2 && (y = e.DEPTH_COMPONENT16);
        i.format === Fe && y === e.DEPTH_COMPONENT && i.type !== Ee && i.type !== Te && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), i.type = Ee, v = o.convert(i.type)), i.format === ze && (y = e.DEPTH_STENCIL, i.type !== Le && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), i.type = Le, v = o.convert(i.type))), n.texImage2D(e.TEXTURE_2D, 0, y, c.width, c.height, 0, g, v, null);
      } else if (i.isDataTexture) if (x.length > 0 && h) {
        for (var b = 0, w = x.length; b < w; b++) _ = x[b], n.texImage2D(e.TEXTURE_2D, b, y, _.width, _.height, 0, g, v, _.data);
        i.generateMipmaps = false, t.__maxMipLevel = x.length - 1;
      } else n.texImage2D(e.TEXTURE_2D, 0, y, c.width, c.height, 0, g, v, c.data), t.__maxMipLevel = 0; else if (i.isCompressedTexture) {
        for (b = 0, w = x.length; b < w; b++) _ = x[b], i.format !== Oe && i.format !== De ? n.getCompressedTextureFormats().indexOf(g) > -1 ? n.compressedTexImage2D(e.TEXTURE_2D, b, y, _.width, _.height, 0, _.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(e.TEXTURE_2D, b, y, _.width, _.height, 0, g, v, _.data);
        t.__maxMipLevel = x.length - 1;
      } else if (i.isDataTexture2DArray) n.texImage3D(e.TEXTURE_2D_ARRAY, 0, y, c.width, c.height, c.depth, 0, g, v, c.data), t.__maxMipLevel = 0; else if (i.isDataTexture3D) n.texImage3D(e.TEXTURE_3D, 0, y, c.width, c.height, c.depth, 0, g, v, c.data), t.__maxMipLevel = 0; else if (x.length > 0 && h) {
        for (b = 0, w = x.length; b < w; b++) _ = x[b], n.texImage2D(e.TEXTURE_2D, b, y, g, v, _);
        i.generateMipmaps = false, t.__maxMipLevel = x.length - 1;
      } else n.texImage2D(e.TEXTURE_2D, 0, y, g, v, c), t.__maxMipLevel = 0;
      i.generateMipmaps && h && i.minFilter !== fe && i.minFilter !== ye && m(e.TEXTURE_2D, i, c.width, c.height), t.__version = i.version, i.onUpdate && i.onUpdate(i);
    }
    function T(t, r, s, a) {
      var l = o.convert(r.texture.format), c = o.convert(r.texture.type), h = f(l, c);
      n.texImage2D(a, 0, h, r.width, r.height, 0, l, c, null), e.bindFramebuffer(e.FRAMEBUFFER, t), e.framebufferTexture2D(e.FRAMEBUFFER, s, a, i.get(r.texture).__webglTexture, 0), e.bindFramebuffer(e.FRAMEBUFFER, null);
    }
    function A(t, n, i) {
      if (e.bindRenderbuffer(e.RENDERBUFFER, t), n.depthBuffer && !n.stencilBuffer) {
        if (i) {
          var r = C(n);
          e.renderbufferStorageMultisample(e.RENDERBUFFER, r, e.DEPTH_COMPONENT16, n.width, n.height);
        } else e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, n.width, n.height);
        e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t);
      } else if (n.depthBuffer && n.stencilBuffer) {
        if (i) {
          r = C(n);
          e.renderbufferStorageMultisample(e.RENDERBUFFER, r, e.DEPTH24_STENCIL8, n.width, n.height);
        } else e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_STENCIL, n.width, n.height);
        e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.RENDERBUFFER, t);
      } else {
        var s = f(o.convert(n.texture.format), o.convert(n.texture.type));
        if (i) {
          r = C(n);
          e.renderbufferStorageMultisample(e.RENDERBUFFER, r, s, n.width, n.height);
        } else e.renderbufferStorage(e.RENDERBUFFER, s, n.width, n.height);
      }
      e.bindRenderbuffer(e.RENDERBUFFER, null);
    }
    function M(t) {
      var n = i.get(t), r = true === t.isWebGLRenderTargetCube;
      if (t.depthTexture) {
        if (r) throw new Error("target.depthTexture not supported in Cube render targets");
        !function (t, n) {
          if (n && n.isWebGLRenderTargetCube) throw new Error("Depth Texture with cube render targets is not supported");
          if (e.bindFramebuffer(e.FRAMEBUFFER, t), !n.depthTexture || !n.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
          i.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width, n.depthTexture.image.height = n.height, n.depthTexture.needsUpdate = true), x(n.depthTexture, 0);
          var r = i.get(n.depthTexture).__webglTexture;
          if (n.depthTexture.format === Fe) e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.TEXTURE_2D, r, 0); else {
            if (n.depthTexture.format !== ze) throw new Error("Unknown depthTexture format");
            e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.TEXTURE_2D, r, 0);
          }
        }(n.__webglFramebuffer, t);
      } else if (r) {
        n.__webglDepthbuffer = [];
        for (var o = 0; o < 6; o++) e.bindFramebuffer(e.FRAMEBUFFER, n.__webglFramebuffer[o]), n.__webglDepthbuffer[o] = e.createRenderbuffer(), A(n.__webglDepthbuffer[o], t);
      } else e.bindFramebuffer(e.FRAMEBUFFER, n.__webglFramebuffer), n.__webglDepthbuffer = e.createRenderbuffer(), A(n.__webglDepthbuffer, t);
      e.bindFramebuffer(e.FRAMEBUFFER, null);
    }
    function C(e) {
      return r.isWebGL2 && e.isWebGLMultisampleRenderTarget ? Math.min(r.maxSamples, e.samples) : 0;
    }
    var k = false, R = false;
    this.allocateTextureUnit = function () {
      var e = _;
      return e >= r.maxTextures && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + r.maxTextures), _ += 1, e;
    }, this.resetTextureUnits = function () {
      _ = 0;
    }, this.setTexture2D = x, this.setTexture2DArray = function (t, r) {
      var o = i.get(t);
      t.version > 0 && o.__version !== t.version ? q(o, t, r) : (n.activeTexture(e.TEXTURE0 + r), n.bindTexture(e.TEXTURE_2D_ARRAY, o.__webglTexture));
    }, this.setTexture3D = function (t, r) {
      var o = i.get(t);
      t.version > 0 && o.__version !== t.version ? q(o, t, r) : (n.activeTexture(e.TEXTURE0 + r), n.bindTexture(e.TEXTURE_3D, o.__webglTexture));
    }, this.setTextureCube = b, this.setTextureCubeDynamic = w, this.setupRenderTarget = function (t) {
      var a = i.get(t), l = i.get(t.texture);
      t.addEventListener("dispose", y), l.__webglTexture = e.createTexture(), s.memory.textures++;
      var c = true === t.isWebGLRenderTargetCube, h = true === t.isWebGLMultisampleRenderTarget, u = Rt.isPowerOfTwo(t.width) && Rt.isPowerOfTwo(t.height) || r.isWebGL2;
      if (c) {
        a.__webglFramebuffer = [];
        for (var g = 0; g < 6; g++) a.__webglFramebuffer[g] = e.createFramebuffer();
      } else if (a.__webglFramebuffer = e.createFramebuffer(), h) if (r.isWebGL2) {
        a.__webglMultisampledFramebuffer = e.createFramebuffer(), a.__webglColorRenderbuffer = e.createRenderbuffer(), e.bindRenderbuffer(e.RENDERBUFFER, a.__webglColorRenderbuffer);
        var v = f(o.convert(t.texture.format), o.convert(t.texture.type)), _ = C(t);
        e.renderbufferStorageMultisample(e.RENDERBUFFER, _, v, t.width, t.height), e.bindFramebuffer(e.FRAMEBUFFER, a.__webglMultisampledFramebuffer), e.framebufferRenderbuffer(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.RENDERBUFFER, a.__webglColorRenderbuffer), e.bindRenderbuffer(e.RENDERBUFFER, null), t.depthBuffer && (a.__webglDepthRenderbuffer = e.createRenderbuffer(), A(a.__webglDepthRenderbuffer, t, true)), e.bindFramebuffer(e.FRAMEBUFFER, null);
      } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
      if (c) {
        n.bindTexture(e.TEXTURE_CUBE_MAP, l.__webglTexture), S(e.TEXTURE_CUBE_MAP, t.texture, u);
        for (g = 0; g < 6; g++) T(a.__webglFramebuffer[g], t, e.COLOR_ATTACHMENT0, e.TEXTURE_CUBE_MAP_POSITIVE_X + g);
        t.texture.generateMipmaps && u && t.texture.minFilter !== fe && t.texture.minFilter !== ye && m(e.TEXTURE_CUBE_MAP, t.texture, t.width, t.height), n.bindTexture(e.TEXTURE_CUBE_MAP, null);
      } else n.bindTexture(e.TEXTURE_2D, l.__webglTexture), S(e.TEXTURE_2D, t.texture, u), T(a.__webglFramebuffer, t, e.COLOR_ATTACHMENT0, e.TEXTURE_2D), t.texture.generateMipmaps && u && t.texture.minFilter !== fe && t.texture.minFilter !== ye && m(e.TEXTURE_2D, t.texture, t.width, t.height), n.bindTexture(e.TEXTURE_2D, null);
      t.depthBuffer && M(t);
    }, this.updateRenderTargetMipmap = function (t) {
      var o = t.texture;
      if (o.generateMipmaps && (Rt.isPowerOfTwo(t.width) && Rt.isPowerOfTwo(t.height) || r.isWebGL2) && o.minFilter !== fe && o.minFilter !== ye) {
        var s = t.isWebGLRenderTargetCube ? e.TEXTURE_CUBE_MAP : e.TEXTURE_2D, a = i.get(o).__webglTexture;
        n.bindTexture(s, a), m(s, o, t.width, t.height), n.bindTexture(s, null);
      }
    }, this.updateMultisampleRenderTarget = function (t) {
      if (t.isWebGLMultisampleRenderTarget) if (r.isWebGL2) {
        var n = i.get(t);
        e.bindFramebuffer(e.READ_FRAMEBUFFER, n.__webglMultisampledFramebuffer), e.bindFramebuffer(e.DRAW_FRAMEBUFFER, n.__webglFramebuffer);
        var o = t.width, s = t.height, a = e.COLOR_BUFFER_BIT;
        t.depthBuffer && (a |= e.DEPTH_BUFFER_BIT), t.stencilBuffer && (a |= e.STENCIL_BUFFER_BIT), e.blitFramebuffer(0, 0, o, s, 0, 0, o, s, a, e.NEAREST);
      } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
    }, this.safeSetTexture2D = function (e, t) {
      e && e.isWebGLRenderTarget && (false === k && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), k = true), e = e.texture), x(e, t);
    }, this.safeSetTextureCube = function (e, t) {
      e && e.isWebGLRenderTargetCube && (false === R && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), R = true), e = e.texture), e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? b(e, t) : w(e, t);
    };
  }
  function vs(e, t, n) {
    return {convert: function (i) {
      var r;
      if (i === de) return e.REPEAT;
      if (i === pe) return e.CLAMP_TO_EDGE;
      if (i === me) return e.MIRRORED_REPEAT;
      if (i === fe) return e.NEAREST;
      if (i === ge) return e.NEAREST_MIPMAP_NEAREST;
      if (i === ve) return e.NEAREST_MIPMAP_LINEAR;
      if (i === ye) return e.LINEAR;
      if (i === _e) return e.LINEAR_MIPMAP_NEAREST;
      if (i === xe) return e.LINEAR_MIPMAP_LINEAR;
      if (i === be) return e.UNSIGNED_BYTE;
      if (i === Ce) return e.UNSIGNED_SHORT_4_4_4_4;
      if (i === ke) return e.UNSIGNED_SHORT_5_5_5_1;
      if (i === Re) return e.UNSIGNED_SHORT_5_6_5;
      if (i === we) return e.BYTE;
      if (i === Se) return e.SHORT;
      if (i === Ee) return e.UNSIGNED_SHORT;
      if (i === qe) return e.INT;
      if (i === Te) return e.UNSIGNED_INT;
      if (i === Ae) return e.FLOAT;
      if (i === Me) {
        if (n.isWebGL2) return e.HALF_FLOAT;
        if (null !== (r = t.get("OES_texture_half_float"))) return r.HALF_FLOAT_OES;
      }
      if (i === Pe) return e.ALPHA;
      if (i === De) return e.RGB;
      if (i === Oe) return e.RGBA;
      if (i === Ie) return e.LUMINANCE;
      if (i === Be) return e.LUMINANCE_ALPHA;
      if (i === Fe) return e.DEPTH_COMPONENT;
      if (i === ze) return e.DEPTH_STENCIL;
      if (i === Ne) return e.RED;
      if (i === T) return e.FUNC_ADD;
      if (i === A) return e.FUNC_SUBTRACT;
      if (i === M) return e.FUNC_REVERSE_SUBTRACT;
      if (i === R) return e.ZERO;
      if (i === L) return e.ONE;
      if (i === P) return e.SRC_COLOR;
      if (i === D) return e.ONE_MINUS_SRC_COLOR;
      if (i === O) return e.SRC_ALPHA;
      if (i === I) return e.ONE_MINUS_SRC_ALPHA;
      if (i === B) return e.DST_ALPHA;
      if (i === F) return e.ONE_MINUS_DST_ALPHA;
      if (i === z) return e.DST_COLOR;
      if (i === N) return e.ONE_MINUS_DST_COLOR;
      if (i === U) return e.SRC_ALPHA_SATURATE;
      if ((i === Ue || i === Ve || i === Ge || i === He) && null !== (r = t.get("WEBGL_compressed_texture_s3tc"))) {
        if (i === Ue) return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
        if (i === Ve) return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
        if (i === Ge) return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
        if (i === He) return r.COMPRESSED_RGBA_S3TC_DXT5_EXT;
      }
      if ((i === je || i === $e || i === We || i === Xe) && null !== (r = t.get("WEBGL_compressed_texture_pvrtc"))) {
        if (i === je) return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
        if (i === $e) return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
        if (i === We) return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
        if (i === Xe) return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
      }
      if (i === Ye && null !== (r = t.get("WEBGL_compressed_texture_etc1"))) return r.COMPRESSED_RGB_ETC1_WEBGL;
      if ((i === Je || i === Ke || i === Ze || i === Qe || i === et || i === tt || i === nt || i === it || i === rt || i === ot || i === st || i === at || i === lt || i === ct) && null !== (r = t.get("WEBGL_compressed_texture_astc"))) return i;
      if (i === C || i === k) {
        if (n.isWebGL2) {
          if (i === C) return e.MIN;
          if (i === k) return e.MAX;
        }
        if (null !== (r = t.get("EXT_blend_minmax"))) {
          if (i === C) return r.MIN_EXT;
          if (i === k) return r.MAX_EXT;
        }
      }
      if (i === Le) {
        if (n.isWebGL2) return e.UNSIGNED_INT_24_8;
        if (null !== (r = t.get("WEBGL_depth_texture"))) return r.UNSIGNED_INT_24_8_WEBGL;
      }
      return 0;
    }};
  }
  function ys() {
    yn.call(this), this.type = "Group";
  }
  function _s(e) {
    ur.call(this), this.cameras = e || [];
  }
  ys.prototype = Object.assign(Object.create(yn.prototype), {constructor: ys, isGroup: true}), _s.prototype = Object.assign(Object.create(ur.prototype), {constructor: _s, isArrayCamera: true});
  var xs, bs = new It, ws = new It;
  function Ss(e, t, n) {
    bs.setFromMatrixPosition(t.matrixWorld), ws.setFromMatrixPosition(n.matrixWorld);
    var i = bs.distanceTo(ws), r = t.projectionMatrix.elements, o = n.projectionMatrix.elements, s = r[14] / (r[10] - 1), a = r[14] / (r[10] + 1), l = (r[9] + 1) / r[5], c = (r[9] - 1) / r[5], h = (r[8] - 1) / r[0], u = (o[8] + 1) / o[0], d = s * h, p = s * u, m = i / (-h + u), f = m * -h;
    t.matrixWorld.decompose(e.position, e.quaternion, e.scale), e.translateX(f), e.translateZ(m), e.matrixWorld.compose(e.position, e.quaternion, e.scale), e.matrixWorldInverse.getInverse(e.matrixWorld);
    var g = s + m, v = a + m, y = d - f, _ = p + (i - f), x = l * a / v * g, b = c * a / v * g;
    e.projectionMatrix.makePerspective(y, _, x, b, g, v);
  }
  function Es(e) {
    var t, n, i = this, r = null, o = null, s = null, a = [], l = new Qt, c = new Qt, h = 1, u = "local-floor";
    "undefined" != typeof window && "VRFrameData" in window && (o = new window.VRFrameData, window.addEventListener("vrdisplaypresentchange", b, false));
    var d = new Qt, p = new Pt, m = new It, f = new ur;
    f.viewport = new Gt, f.layers.enable(1);
    var g = new ur;
    g.viewport = new Gt, g.layers.enable(2);
    var v = new _s([f, g]);
    function y() {
      return null !== r && true === r.isPresenting;
    }
    v.layers.enable(1), v.layers.enable(2);
    var _, x = new Lt;
    function b() {
      if (null !== r && true === r.isPresenting) {
        var o = r.getEyeParameters("left");
        t = 2 * o.renderWidth * h, n = o.renderHeight * h, _ = e.getPixelRatio(), e.getSize(x), e.setDrawingBufferSize(t, n, 1), f.viewport.set(0, 0, t / 2, n), g.viewport.set(t / 2, 0, t / 2, n), q.start(), i.dispatchEvent({type: "sessionstart"});
      } else i.enabled && e.setDrawingBufferSize(x.width, x.height, _), q.stop(), i.dispatchEvent({type: "sessionend"});
    }
    var w = [];
    function S(e) {
      for (var t = navigator.getGamepads && navigator.getGamepads(), n = 0, i = 0, r = t.length; n < r; n++) {
        var o = t[n];
        if (o && ("Daydream Controller" === o.id || "Gear VR Controller" === o.id || "Oculus Go Controller" === o.id || "OpenVR Gamepad" === o.id || o.id.startsWith("Oculus Touch") || o.id.startsWith("HTC Vive Focus") || o.id.startsWith("Spatial Controller"))) {
          if (i === e) return o;
          i++;
        }
      }
    }
    function E(e, i) {
      null !== i && 4 === i.length && e.set(i[0] * t, i[1] * n, i[2] * t, i[3] * n);
    }
    this.enabled = false, this.getController = function (e) {
      var t = a[e];
      return undefined === t && ((t = new ys).matrixAutoUpdate = false, t.visible = false, a[e] = t), t;
    }, this.getDevice = function () {
      return r;
    }, this.setDevice = function (e) {
      undefined !== e && (r = e), q.setContext(e);
    }, this.setFramebufferScaleFactor = function (e) {
      h = e;
    }, this.setReferenceSpaceType = function (e) {
      u = e;
    }, this.setPoseTarget = function (e) {
      undefined !== e && (s = e);
    }, this.getCamera = function (e) {
      var t = "local-floor" === u ? 1.6 : 0;
      if (false === (null !== r && true === r.isPresenting)) return e.position.set(0, t, 0), e.rotation.set(0, 0, 0), e;
      if (r.depthNear = e.near, r.depthFar = e.far, r.getFrameData(o), "local-floor" === u) {
        var n = r.stageParameters;
        n ? l.fromArray(n.sittingToStandingTransform) : l.makeTranslation(0, t, 0);
      }
      var i = o.pose, h = null !== s ? s : e;
      h.matrix.copy(l), h.matrix.decompose(h.position, h.quaternion, h.scale), null !== i.orientation && (p.fromArray(i.orientation), h.quaternion.multiply(p)), null !== i.position && (p.setFromRotationMatrix(l), m.fromArray(i.position), m.applyQuaternion(p), h.position.add(m)), h.updateMatrixWorld(), f.near = e.near, g.near = e.near, f.far = e.far, g.far = e.far, f.matrixWorldInverse.fromArray(o.leftViewMatrix), g.matrixWorldInverse.fromArray(o.rightViewMatrix), c.getInverse(l), "local-floor" === u && (f.matrixWorldInverse.multiply(c), g.matrixWorldInverse.multiply(c));
      var _ = h.parent;
      null !== _ && (d.getInverse(_.matrixWorld), f.matrixWorldInverse.multiply(d), g.matrixWorldInverse.multiply(d)), f.matrixWorld.getInverse(f.matrixWorldInverse), g.matrixWorld.getInverse(g.matrixWorldInverse), f.projectionMatrix.fromArray(o.leftProjectionMatrix), g.projectionMatrix.fromArray(o.rightProjectionMatrix), Ss(v, f, g);
      var x = r.getLayers();
      if (x.length) {
        var b = x[0];
        E(f.viewport, b.leftBounds), E(g.viewport, b.rightBounds);
      }
      return function () {
        for (var e = 0; e < a.length; e++) {
          var t = a[e], n = S(e);
          if (undefined !== n && undefined !== n.pose) {
            if (null === n.pose) return;
            var i = n.pose;
            false === i.hasPosition && t.position.set(0.2, -0.6, -0.05), null !== i.position && t.position.fromArray(i.position), null !== i.orientation && t.quaternion.fromArray(i.orientation), t.matrix.compose(t.position, t.quaternion, t.scale), t.matrix.premultiply(l), t.matrix.decompose(t.position, t.quaternion, t.scale), t.matrixWorldNeedsUpdate = true, t.visible = true;
            var r = "Daydream Controller" === n.id ? 0 : 1;
            undefined === w[e] && (w[e] = false), w[e] !== n.buttons[r].pressed && (w[e] = n.buttons[r].pressed, true === w[e] ? t.dispatchEvent({type: "selectstart"}) : (t.dispatchEvent({type: "selectend"}), t.dispatchEvent({type: "select"})));
          } else t.visible = false;
        }
      }(), v;
    }, this.getStandingMatrix = function () {
      return l;
    }, this.isPresenting = y;
    var q = new Ar;
    this.setAnimationLoop = function (e) {
      q.setAnimationLoop(e), null !== r && true === r.isPresenting && q.start();
    }, this.submitFrame = function () {
      null !== r && true === r.isPresenting && r.submitFrame();
    }, this.dispose = function () {
      "undefined" != typeof window && window.removeEventListener("vrdisplaypresentchange", b);
    }, this.setFrameOfReferenceType = function () {
      console.warn("THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.");
    };
  }
  function qs(e, t) {
    var n = this, i = null, r = null, o = "local-floor", s = null, a = [], l = [];
    function c() {
      return null !== i && null !== r;
    }
    var h = new ur;
    h.layers.enable(1), h.viewport = new Gt;
    var u = new ur;
    u.layers.enable(2), u.viewport = new Gt;
    var d = new _s([h, u]);
    function p(e) {
      for (var t = 0; t < a.length; t++) l[t] === e.inputSource && a[t].dispatchEvent({type: e.type});
    }
    function m() {
      e.setFramebuffer(null), e.setRenderTarget(e.getRenderTarget()), y.stop(), n.dispatchEvent({type: "sessionend"});
    }
    function f(e) {
      r = e, y.setContext(i), y.start(), n.dispatchEvent({type: "sessionstart"});
    }
    function g(e, t) {
      null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix), e.matrixWorldInverse.getInverse(e.matrixWorld);
    }
    d.layers.enable(1), d.layers.enable(2), this.enabled = false, this.getController = function (e) {
      var t = a[e];
      return undefined === t && ((t = new ys).matrixAutoUpdate = false, t.visible = false, a[e] = t), t;
    }, this.setFramebufferScaleFactor = function (e) {
      e;
    }, this.setReferenceSpaceType = function (e) {
      o = e;
    }, this.getSession = function () {
      return i;
    }, this.setSession = function (e) {
      null !== (i = e) && (i.addEventListener("select", p), i.addEventListener("selectstart", p), i.addEventListener("selectend", p), i.addEventListener("end", m), i.updateRenderState({baseLayer: new XRWebGLLayer(i, t)}), i.requestReferenceSpace(o).then(f), l = i.inputSources, i.addEventListener("inputsourceschange", function () {
        l = i.inputSources, console.log(l);
        for (var e = 0; e < a.length; e++) {
          a[e].userData.inputSource = l[e];
        }
      }));
    }, this.getCamera = function (e) {
      if (null !== i && null !== r) {
        var t = e.parent, n = d.cameras;
        g(d, t);
        for (var i = 0; i < n.length; i++) g(n[i], t);
        e.matrixWorld.copy(d.matrixWorld);
        for (var r = e.children, o = (i = 0, r.length); i < o; i++) r[i].updateMatrixWorld(true);
        return Ss(d, h, u), d;
      }
      return e;
    }, this.isPresenting = c;
    var v = null;
    var y = new Ar;
    y.setAnimationLoop(function (t, n) {
      if (null !== (s = n.getViewerPose(r))) {
        var o = s.views, c = i.renderState.baseLayer;
        e.setFramebuffer(c.framebuffer);
        for (var h = 0; h < o.length; h++) {
          var u = o[h], p = c.getViewport(u), m = u.transform.inverse.matrix, f = d.cameras[h];
          f.matrix.fromArray(m).getInverse(f.matrix), f.projectionMatrix.fromArray(u.projectionMatrix), f.viewport.set(p.x, p.y, p.width, p.height), 0 === h && d.matrix.copy(f.matrix);
        }
      }
      for (h = 0; h < a.length; h++) {
        var g = a[h], y = l[h];
        if (y) {
          var _ = n.getPose(y.targetRaySpace, r);
          if (null !== _) {
            g.matrix.fromArray(_.transform.matrix), g.matrix.decompose(g.position, g.rotation, g.scale), g.visible = true;
            continue;
          }
        }
        g.visible = false;
      }
      v && v(t);
    }), this.setAnimationLoop = function (e) {
      v = e;
    }, this.dispose = function () {}, this.getStandingMatrix = function () {
      return console.warn("THREE.WebXRManager: getStandingMatrix() is no longer needed."), new Qt;
    }, this.getDevice = function () {
      console.warn("THREE.WebXRManager: getDevice() has been deprecated.");
    }, this.setDevice = function () {
      console.warn("THREE.WebXRManager: setDevice() has been deprecated.");
    }, this.setFrameOfReferenceType = function () {
      console.warn("THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.");
    }, this.submitFrame = function () {};
  }
  function Ts(e) {
    var t = undefined !== (e = e || {}).canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), n = undefined !== e.context ? e.context : null, i = undefined !== e.alpha && e.alpha, r = undefined === e.depth || e.depth, o = undefined === e.stencil || e.stencil, s = undefined !== e.antialias && e.antialias, a = undefined === e.premultipliedAlpha || e.premultipliedAlpha, l = undefined !== e.preserveDrawingBuffer && e.preserveDrawingBuffer, c = undefined !== e.powerPreference ? e.powerPreference : "default", h = undefined !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat, u = null, d = null;
    this.domElement = t, this.debug = {checkShaderErrors: true}, this.autoClear = true, this.autoClearColor = true, this.autoClearDepth = true, this.autoClearStencil = true, this.sortObjects = true, this.clippingPlanes = [], this.localClippingEnabled = false, this.gammaFactor = 2, this.gammaInput = false, this.gammaOutput = false, this.physicallyCorrectLights = false, this.toneMapping = ee, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
    var p, m, g, v, y, _, x, b, w, S, E, q, T, A, M, C, k, R, L = this, P = false, D = null, O = 0, I = 0, B = null, F = null, z = -1, N = {geometry: null, program: null, wireframe: false}, U = null, V = null, G = new Gt, H = new Gt, j = null, $ = t.width, W = t.height, X = 1, Y = new Gt(0, 0, $, W), J = new Gt(0, 0, $, W), K = false, Z = new Sr, Q = new Dr, te = false, ne = false, ie = new Qt, re = new It;
    function oe() {
      return null === B ? X : 1;
    }
    try {
      var se = {alpha: i, depth: r, stencil: o, antialias: s, premultipliedAlpha: a, preserveDrawingBuffer: l, powerPreference: c, failIfMajorPerformanceCaveat: h, xrCompatible: true};
      if (t.addEventListener("webglcontextlost", he, false), t.addEventListener("webglcontextrestored", ue, false), null === (p = n || t.getContext("webgl", se) || t.getContext("experimental-webgl", se))) throw null !== t.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
      undefined === p.getShaderPrecisionFormat && (p.getShaderPrecisionFormat = function () {
        return {rangeMin: 1, rangeMax: 1, precision: 1};
      });
    } catch (e) {
      throw console.error("THREE.WebGLRenderer: " + e.message), e;
    }
    function ae() {
      m = new Or(p), (g = new Pr(p, m, e)).isWebGL2 || (m.get("WEBGL_depth_texture"), m.get("OES_texture_float"), m.get("OES_texture_half_float"), m.get("OES_texture_half_float_linear"), m.get("OES_standard_derivatives"), m.get("OES_element_index_uint"), m.get("ANGLE_instanced_arrays")), m.get("OES_texture_float_linear"), R = new vs(p, m, g), (v = new fs(p, m, R, g)).scissor(H.copy(J).multiplyScalar(X).floor()), v.viewport(G.copy(Y).multiplyScalar(X).floor()), y = new Fr(p), _ = new Qo, x = new gs(p, m, v, _, g, R, y), b = new Mr(p), w = new Ir(p, b, y), S = new Ur(w, y), M = new Nr(p), E = new Zo(L, m, g), q = new is, T = new cs, A = new Rr(L, v, S, a), C = new Lr(p, m, y, g), k = new Br(p, m, y, g), y.programs = E.programs, L.capabilities = g, L.extensions = m, L.properties = _, L.renderLists = q, L.state = v, L.info = y;
    }
    ae();
    var le = "undefined" != typeof navigator && "xr" in navigator && "supportsSession" in navigator.xr ? new qs(L, p) : new Es(L);
    this.vr = le;
    var ce = new ms(L, S, g.maxTextureSize);
    function he(e) {
      e.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), P = true;
    }
    function ue() {
      console.log("THREE.WebGLRenderer: Context Restored."), P = false, ae();
    }
    function de(e) {
      var t = e.target;
      t.removeEventListener("dispose", de), function (e) {
        pe(e), _.remove(e);
      }(t);
    }
    function pe(e) {
      var t = _.get(e).program;
      e.program = undefined, undefined !== t && E.releaseProgram(t);
    }
    this.shadowMap = ce, this.getContext = function () {
      return p;
    }, this.getContextAttributes = function () {
      return p.getContextAttributes();
    }, this.forceContextLoss = function () {
      var e = m.get("WEBGL_lose_context");
      e && e.loseContext();
    }, this.forceContextRestore = function () {
      var e = m.get("WEBGL_lose_context");
      e && e.restoreContext();
    }, this.getPixelRatio = function () {
      return X;
    }, this.setPixelRatio = function (e) {
      undefined !== e && (X = e, this.setSize($, W, false));
    }, this.getSize = function (e) {
      return undefined === e && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"), e = new Lt), e.set($, W);
    }, this.setSize = function (e, n, i) {
      le.isPresenting() ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : ($ = e, W = n, t.width = Math.floor(e * X), t.height = Math.floor(n * X), false !== i && (t.style.width = e + "px", t.style.height = n + "px"), this.setViewport(0, 0, e, n));
    }, this.getDrawingBufferSize = function (e) {
      return undefined === e && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"), e = new Lt), e.set($ * X, W * X).floor();
    }, this.setDrawingBufferSize = function (e, n, i) {
      $ = e, W = n, X = i, t.width = Math.floor(e * i), t.height = Math.floor(n * i), this.setViewport(0, 0, e, n);
    }, this.getCurrentViewport = function (e) {
      return undefined === e && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"), e = new Gt), e.copy(G);
    }, this.getViewport = function (e) {
      return e.copy(Y);
    }, this.setViewport = function (e, t, n, i) {
      e.isVector4 ? Y.set(e.x, e.y, e.z, e.w) : Y.set(e, t, n, i), v.viewport(G.copy(Y).multiplyScalar(X).floor());
    }, this.getScissor = function (e) {
      return e.copy(J);
    }, this.setScissor = function (e, t, n, i) {
      e.isVector4 ? J.set(e.x, e.y, e.z, e.w) : J.set(e, t, n, i), v.scissor(H.copy(J).multiplyScalar(X).floor());
    }, this.getScissorTest = function () {
      return K;
    }, this.setScissorTest = function (e) {
      v.setScissorTest(K = e);
    }, this.getClearColor = function () {
      return A.getClearColor();
    }, this.setClearColor = function () {
      A.setClearColor.apply(A, arguments);
    }, this.getClearAlpha = function () {
      return A.getClearAlpha();
    }, this.setClearAlpha = function () {
      A.setClearAlpha.apply(A, arguments);
    }, this.clear = function (e, t, n) {
      var i = 0;
      (undefined === e || e) && (i |= p.COLOR_BUFFER_BIT), (undefined === t || t) && (i |= p.DEPTH_BUFFER_BIT), (undefined === n || n) && (i |= p.STENCIL_BUFFER_BIT), p.clear(i);
    }, this.clearColor = function () {
      this.clear(true, false, false);
    }, this.clearDepth = function () {
      this.clear(false, true, false);
    }, this.clearStencil = function () {
      this.clear(false, false, true);
    }, this.dispose = function () {
      t.removeEventListener("webglcontextlost", he, false), t.removeEventListener("webglcontextrestored", ue, false), q.dispose(), T.dispose(), _.dispose(), S.dispose(), le.dispose(), fe.stop();
    }, this.renderBufferImmediate = function (e, t) {
      v.initAttributes();
      var n = _.get(e);
      e.hasPositions && !n.position && (n.position = p.createBuffer()), e.hasNormals && !n.normal && (n.normal = p.createBuffer()), e.hasUvs && !n.uv && (n.uv = p.createBuffer()), e.hasColors && !n.color && (n.color = p.createBuffer());
      var i = t.getAttributes();
      e.hasPositions && (p.bindBuffer(p.ARRAY_BUFFER, n.position), p.bufferData(p.ARRAY_BUFFER, e.positionArray, p.DYNAMIC_DRAW), v.enableAttribute(i.position), p.vertexAttribPointer(i.position, 3, p.FLOAT, false, 0, 0)), e.hasNormals && (p.bindBuffer(p.ARRAY_BUFFER, n.normal), p.bufferData(p.ARRAY_BUFFER, e.normalArray, p.DYNAMIC_DRAW), v.enableAttribute(i.normal), p.vertexAttribPointer(i.normal, 3, p.FLOAT, false, 0, 0)), e.hasUvs && (p.bindBuffer(p.ARRAY_BUFFER, n.uv), p.bufferData(p.ARRAY_BUFFER, e.uvArray, p.DYNAMIC_DRAW), v.enableAttribute(i.uv), p.vertexAttribPointer(i.uv, 2, p.FLOAT, false, 0, 0)), e.hasColors && (p.bindBuffer(p.ARRAY_BUFFER, n.color), p.bufferData(p.ARRAY_BUFFER, e.colorArray, p.DYNAMIC_DRAW), v.enableAttribute(i.color), p.vertexAttribPointer(i.color, 3, p.FLOAT, false, 0, 0)), v.disableUnusedAttributes(), p.drawArrays(p.TRIANGLES, 0, e.count), e.count = 0;
    }, this.renderBufferDirect = function (e, t, n, i, r, o) {
      var s = r.isMesh && r.matrixWorld.determinant() < 0;
      v.setMaterial(i, s);
      var a = xe(e, t, i, r), l = false;
      N.geometry === n.id && N.program === a.id && N.wireframe === (true === i.wireframe) || (N.geometry = n.id, N.program = a.id, N.wireframe = true === i.wireframe, l = true), r.morphTargetInfluences && (M.update(r, n, i, a), l = true);
      var c, h = n.index, u = n.attributes.position, d = 1;
      true === i.wireframe && (h = w.getWireframeAttribute(n), d = 2);
      var f = C;
      null !== h && (c = b.get(h), (f = k).setIndex(c)), l && (!function (e, t, n) {
        if (n && n.isInstancedBufferGeometry && !g.isWebGL2 && null === m.get("ANGLE_instanced_arrays")) return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
        v.initAttributes();
        var i = n.attributes, r = t.getAttributes(), o = e.defaultAttributeValues;
        for (var s in r) {
          var a = r[s];
          if (a >= 0) {
            var l = i[s];
            if (undefined !== l) {
              var c = l.normalized, h = l.itemSize, u = b.get(l);
              if (undefined === u) continue;
              var d = u.buffer, f = u.type, y = u.bytesPerElement;
              if (l.isInterleavedBufferAttribute) {
                var _ = l.data, x = _.stride, w = l.offset;
                _ && _.isInstancedInterleavedBuffer ? (v.enableAttributeAndDivisor(a, _.meshPerAttribute), undefined === n.maxInstancedCount && (n.maxInstancedCount = _.meshPerAttribute * _.count)) : v.enableAttribute(a), p.bindBuffer(p.ARRAY_BUFFER, d), p.vertexAttribPointer(a, h, f, c, x * y, w * y);
              } else l.isInstancedBufferAttribute ? (v.enableAttributeAndDivisor(a, l.meshPerAttribute), undefined === n.maxInstancedCount && (n.maxInstancedCount = l.meshPerAttribute * l.count)) : v.enableAttribute(a), p.bindBuffer(p.ARRAY_BUFFER, d), p.vertexAttribPointer(a, h, f, c, 0, 0);
            } else if (undefined !== o) {
              var S = o[s];
              if (undefined !== S) switch (S.length) {
                case 2:
                  p.vertexAttrib2fv(a, S);
                  break;
                case 3:
                  p.vertexAttrib3fv(a, S);
                  break;
                case 4:
                  p.vertexAttrib4fv(a, S);
                  break;
                default:
                  p.vertexAttrib1fv(a, S);
              }
            }
          }
        }
        v.disableUnusedAttributes();
      }(i, a, n), null !== h && p.bindBuffer(p.ELEMENT_ARRAY_BUFFER, c.buffer));
      var y = Infinity;
      null !== h ? y = h.count : undefined !== u && (y = u.count);
      var _ = n.drawRange.start * d, x = n.drawRange.count * d, S = null !== o ? o.start * d : 0, E = null !== o ? o.count * d : Infinity, q = Math.max(_, S), T = Math.min(y, _ + x, S + E) - 1, A = Math.max(0, T - q + 1);
      if (0 !== A) {
        if (r.isMesh) if (true === i.wireframe) v.setLineWidth(i.wireframeLinewidth * oe()), f.setMode(p.LINES); else switch (r.drawMode) {
          case dt:
            f.setMode(p.TRIANGLES);
            break;
          case pt:
            f.setMode(p.TRIANGLE_STRIP);
            break;
          case mt:
            f.setMode(p.TRIANGLE_FAN);
        } else if (r.isLine) {
          var R = i.linewidth;
          undefined === R && (R = 1), v.setLineWidth(R * oe()), r.isLineSegments ? f.setMode(p.LINES) : r.isLineLoop ? f.setMode(p.LINE_LOOP) : f.setMode(p.LINE_STRIP);
        } else r.isPoints ? f.setMode(p.POINTS) : r.isSprite && f.setMode(p.TRIANGLES);
        n && n.isInstancedBufferGeometry ? n.maxInstancedCount > 0 && f.renderInstances(n, q, A) : f.render(q, A);
      }
    }, this.compile = function (e, t) {
      (d = T.get(e, t)).init(), e.traverse(function (e) {
        e.isLight && (d.pushLight(e), e.castShadow && d.pushShadow(e));
      }), d.setupLights(t), e.traverse(function (t) {
        if (t.material) if (Array.isArray(t.material)) for (var n = 0; n < t.material.length; n++) _e(t.material[n], e.fog, t); else _e(t.material, e.fog, t);
      });
    };
    var me = null;
    var fe = new Ar;
    function ge(e, t, n, i) {
      if (false !== e.visible) {
        if (e.layers.test(t.layers)) if (e.isGroup) n = e.renderOrder; else if (e.isLOD) true === e.autoUpdate && e.update(t); else if (e.isLight) d.pushLight(e), e.castShadow && d.pushShadow(e); else if (e.isSprite) {
          if (!e.frustumCulled || Z.intersectsSprite(e)) {
            i && re.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ie);
            var r = S.update(e);
            (o = e.material).visible && u.push(e, r, o, n, re.z, null);
          }
        } else if (e.isImmediateRenderObject) i && re.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ie), u.push(e, null, e.material, n, re.z, null); else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.update(), !e.frustumCulled || Z.intersectsObject(e))) {
          i && re.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ie);
          r = S.update(e);
          var o = e.material;
          if (Array.isArray(o)) for (var s = r.groups, a = 0, l = s.length; a < l; a++) {
            var c = s[a], h = o[c.materialIndex];
            h && h.visible && u.push(e, r, h, n, re.z, c);
          } else o.visible && u.push(e, r, o, n, re.z, null);
        }
        var p = e.children;
        for (a = 0, l = p.length; a < l; a++) ge(p[a], t, n, i);
      }
    }
    function ve(e, t, n, i) {
      for (var r = 0, o = e.length; r < o; r++) {
        var s = e[r], a = s.object, l = s.geometry, c = undefined === i ? s.material : i, h = s.group;
        if (n.isArrayCamera) {
          V = n;
          for (var u = n.cameras, p = 0, m = u.length; p < m; p++) {
            var f = u[p];
            a.layers.test(f.layers) && (v.viewport(G.copy(f.viewport)), d.setupLights(f), ye(a, t, f, l, c, h));
          }
        } else V = null, ye(a, t, n, l, c, h);
      }
    }
    function ye(e, t, n, i, r, o) {
      if (e.onBeforeRender(L, t, n, i, r, o), d = T.get(t, V || n), e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject) {
        v.setMaterial(r);
        var s = xe(n, t.fog, r, e);
        N.geometry = null, N.program = null, N.wireframe = false, function (e, t) {
          e.render(function (e) {
            L.renderBufferImmediate(e, t);
          });
        }(e, s);
      } else L.renderBufferDirect(n, t.fog, i, r, e, o);
      e.onAfterRender(L, t, n, i, r, o), d = T.get(t, V || n);
    }
    function _e(e, t, n) {
      var i = _.get(e), r = d.state.lights, o = d.state.shadowsArray, s = r.state.version, a = E.getParameters(e, r.state, o, t, Q.numPlanes, Q.numIntersection, n), l = E.getProgramCode(e, a), c = i.program, h = true;
      if (undefined === c) e.addEventListener("dispose", de); else if (c.code !== l) pe(e); else if (i.lightsStateVersion !== s) i.lightsStateVersion = s, h = false; else {
        if (undefined !== a.shaderID) return;
        h = false;
      }
      if (h) {
        if (a.shaderID) {
          var u = Tr[a.shaderID];
          i.shader = {name: e.type, uniforms: or(u.uniforms), vertexShader: u.vertexShader, fragmentShader: u.fragmentShader};
        } else i.shader = {name: e.type, uniforms: e.uniforms, vertexShader: e.vertexShader, fragmentShader: e.fragmentShader};
        e.onBeforeCompile(i.shader, L), l = E.getProgramCode(e, a), c = E.acquireProgram(e, i.shader, a, l), i.program = c, e.program = c;
      }
      var p = c.getAttributes();
      if (e.morphTargets) {
        e.numSupportedMorphTargets = 0;
        for (var m = 0; m < L.maxMorphTargets; m++) p["morphTarget" + m] >= 0 && e.numSupportedMorphTargets++;
      }
      if (e.morphNormals) {
        e.numSupportedMorphNormals = 0;
        for (m = 0; m < L.maxMorphNormals; m++) p["morphNormal" + m] >= 0 && e.numSupportedMorphNormals++;
      }
      var f = i.shader.uniforms;
      (e.isShaderMaterial || e.isRawShaderMaterial) && true !== e.clipping || (i.numClippingPlanes = Q.numPlanes, i.numIntersection = Q.numIntersection, f.clippingPlanes = Q.uniform), i.fog = t, i.lightsStateVersion = s, e.lights && (f.ambientLightColor.value = r.state.ambient, f.lightProbe.value = r.state.probe, f.directionalLights.value = r.state.directional, f.spotLights.value = r.state.spot, f.rectAreaLights.value = r.state.rectArea, f.pointLights.value = r.state.point, f.hemisphereLights.value = r.state.hemi, f.directionalShadowMap.value = r.state.directionalShadowMap, f.directionalShadowMatrix.value = r.state.directionalShadowMatrix, f.spotShadowMap.value = r.state.spotShadowMap, f.spotShadowMatrix.value = r.state.spotShadowMatrix, f.pointShadowMap.value = r.state.pointShadowMap, f.pointShadowMatrix.value = r.state.pointShadowMatrix);
      var g = i.program.getUniforms(), v = zo.seqWithValue(g.seq, f);
      i.uniformsList = v;
    }
    function xe(e, t, n, i) {
      x.resetTextureUnits();
      var r = _.get(n), o = d.state.lights;
      if (te && (ne || e !== U)) {
        var s = e === U && n.id === z;
        Q.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, e, r, s);
      }
      false === n.needsUpdate && (undefined === r.program ? n.needsUpdate = true : n.fog && r.fog !== t ? n.needsUpdate = true : n.lights && r.lightsStateVersion !== o.state.version ? n.needsUpdate = true : undefined === r.numClippingPlanes || r.numClippingPlanes === Q.numPlanes && r.numIntersection === Q.numIntersection || (n.needsUpdate = true)), n.needsUpdate && (_e(n, t, i), n.needsUpdate = false);
      var a, l, c = false, h = false, u = false, m = r.program, y = m.getUniforms(), b = r.shader.uniforms;
      if (v.useProgram(m.program) && (c = true, h = true, u = true), n.id !== z && (z = n.id, h = true), c || U !== e) {
        if (y.setValue(p, "projectionMatrix", e.projectionMatrix), g.logarithmicDepthBuffer && y.setValue(p, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)), U !== e && (U = e, h = true, u = true), n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshStandardMaterial || n.envMap) {
          var w = y.map.cameraPosition;
          undefined !== w && w.setValue(p, re.setFromMatrixPosition(e.matrixWorld));
        }
        (n.isMeshPhongMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && y.setValue(p, "viewMatrix", e.matrixWorldInverse);
      }
      if (n.skinning) {
        y.setOptional(p, i, "bindMatrix"), y.setOptional(p, i, "bindMatrixInverse");
        var S = i.skeleton;
        if (S) {
          var E = S.bones;
          if (g.floatVertexTextures) {
            if (undefined === S.boneTexture) {
              var q = Math.sqrt(4 * E.length);
              q = Rt.ceilPowerOfTwo(q), q = Math.max(q, 4);
              var T = new Float32Array(q * q * 4);
              T.set(S.boneMatrices);
              var A = new gr(T, q, q, Oe, Ae);
              A.needsUpdate = true, S.boneMatrices = T, S.boneTexture = A, S.boneTextureSize = q;
            }
            y.setValue(p, "boneTexture", S.boneTexture, x), y.setValue(p, "boneTextureSize", S.boneTextureSize);
          } else y.setOptional(p, S, "boneMatrices");
        }
      }
      return h && (y.setValue(p, "toneMappingExposure", L.toneMappingExposure), y.setValue(p, "toneMappingWhitePoint", L.toneMappingWhitePoint), n.lights && (l = u, (a = b).ambientLightColor.needsUpdate = l, a.lightProbe.needsUpdate = l, a.directionalLights.needsUpdate = l, a.pointLights.needsUpdate = l, a.spotLights.needsUpdate = l, a.rectAreaLights.needsUpdate = l, a.hemisphereLights.needsUpdate = l), t && n.fog && function (e, t) {
        e.fogColor.value.copy(t.color), t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density);
      }(b, t), n.isMeshBasicMaterial ? we(b, n) : n.isMeshLambertMaterial ? (we(b, n), function (e, t) {
        t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
      }(b, n)) : n.isMeshPhongMaterial ? (we(b, n), n.isMeshToonMaterial ? function (e, t) {
        Se(e, t), t.gradientMap && (e.gradientMap.value = t.gradientMap);
      }(b, n) : Se(b, n)) : n.isMeshStandardMaterial ? (we(b, n), n.isMeshPhysicalMaterial ? function (e, t) {
        Ee(e, t), e.reflectivity.value = t.reflectivity, e.clearcoat.value = t.clearcoat, e.clearcoatRoughness.value = t.clearcoatRoughness, t.sheen && e.sheen.value.copy(t.sheen);
        t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale), e.clearcoatNormalMap.value = t.clearcoatNormalMap, t.side === f && e.clearcoatNormalScale.value.negate());
        e.transparency.value = t.transparency;
      }(b, n) : Ee(b, n)) : n.isMeshMatcapMaterial ? (we(b, n), function (e, t) {
        t.matcap && (e.matcap.value = t.matcap);
        t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === f && (e.bumpScale.value *= -1));
        t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === f && e.normalScale.value.negate());
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
      }(b, n)) : n.isMeshDepthMaterial ? (we(b, n), function (e, t) {
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
      }(b, n)) : n.isMeshDistanceMaterial ? (we(b, n), function (e, t) {
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
        e.referencePosition.value.copy(t.referencePosition), e.nearDistance.value = t.nearDistance, e.farDistance.value = t.farDistance;
      }(b, n)) : n.isMeshNormalMaterial ? (we(b, n), function (e, t) {
        t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === f && (e.bumpScale.value *= -1));
        t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === f && e.normalScale.value.negate());
        t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
      }(b, n)) : n.isLineBasicMaterial ? (function (e, t) {
        e.diffuse.value.copy(t.color), e.opacity.value = t.opacity;
      }(b, n), n.isLineDashedMaterial && function (e, t) {
        e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale;
      }(b, n)) : n.isPointsMaterial ? function (e, t) {
        e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.size.value = t.size * X, e.scale.value = 0.5 * W, e.map.value = t.map, null !== t.map && (true === t.map.matrixAutoUpdate && t.map.updateMatrix(), e.uvTransform.value.copy(t.map.matrix));
      }(b, n) : n.isSpriteMaterial ? function (e, t) {
        e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.rotation.value = t.rotation, e.map.value = t.map, null !== t.map && (true === t.map.matrixAutoUpdate && t.map.updateMatrix(), e.uvTransform.value.copy(t.map.matrix));
      }(b, n) : n.isShadowMaterial && (b.color.value.copy(n.color), b.opacity.value = n.opacity), undefined !== b.ltc_1 && (b.ltc_1.value = qr.LTC_1), undefined !== b.ltc_2 && (b.ltc_2.value = qr.LTC_2), zo.upload(p, r.uniformsList, b, x)), n.isShaderMaterial && true === n.uniformsNeedUpdate && (zo.upload(p, r.uniformsList, b, x), n.uniformsNeedUpdate = false), n.isSpriteMaterial && y.setValue(p, "center", i.center), y.setValue(p, "modelViewMatrix", i.modelViewMatrix), y.setValue(p, "normalMatrix", i.normalMatrix), y.setValue(p, "modelMatrix", i.matrixWorld), m;
    }
    function we(e, t) {
      var n;
      e.opacity.value = t.opacity, t.color && e.diffuse.value.copy(t.color), t.emissive && e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity), t.map && (e.map.value = t.map), t.alphaMap && (e.alphaMap.value = t.alphaMap), t.specularMap && (e.specularMap.value = t.specularMap), t.envMap && (e.envMap.value = t.envMap, e.flipEnvMap.value = t.envMap.isCubeTexture ? -1 : 1, e.reflectivity.value = t.reflectivity, e.refractionRatio.value = t.refractionRatio, e.maxMipLevel.value = _.get(t.envMap).__maxMipLevel), t.lightMap && (e.lightMap.value = t.lightMap, e.lightMapIntensity.value = t.lightMapIntensity), t.aoMap && (e.aoMap.value = t.aoMap, e.aoMapIntensity.value = t.aoMapIntensity), t.map ? n = t.map : t.specularMap ? n = t.specularMap : t.displacementMap ? n = t.displacementMap : t.normalMap ? n = t.normalMap : t.bumpMap ? n = t.bumpMap : t.roughnessMap ? n = t.roughnessMap : t.metalnessMap ? n = t.metalnessMap : t.alphaMap ? n = t.alphaMap : t.emissiveMap && (n = t.emissiveMap), undefined !== n && (n.isWebGLRenderTarget && (n = n.texture), true === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix));
    }
    function Se(e, t) {
      e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 0.0001), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === f && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === f && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
    }
    function Ee(e, t) {
      e.roughness.value = t.roughness, e.metalness.value = t.metalness, t.roughnessMap && (e.roughnessMap.value = t.roughnessMap), t.metalnessMap && (e.metalnessMap.value = t.metalnessMap), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === f && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === f && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias), t.envMap && (e.envMapIntensity.value = t.envMapIntensity);
    }
    fe.setAnimationLoop(function (e) {
      le.isPresenting() || me && me(e);
    }), "undefined" != typeof window && fe.setContext(window), this.setAnimationLoop = function (e) {
      me = e, le.setAnimationLoop(e), fe.start();
    }, this.render = function (e, t) {
      var n, i;
      if (undefined !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."), n = arguments[2]), undefined !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."), i = arguments[3]), t && t.isCamera) {
        if (!P) {
          N.geometry = null, N.program = null, N.wireframe = false, z = -1, U = null, true === e.autoUpdate && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), le.enabled && (t = le.getCamera(t)), (d = T.get(e, t)).init(), e.onBeforeRender(L, e, t, n || B), ie.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), Z.setFromMatrix(ie), ne = this.localClippingEnabled, te = Q.init(this.clippingPlanes, ne, t), (u = q.get(e, t)).init(), ge(e, t, 0, L.sortObjects), true === L.sortObjects && u.sort(), te && Q.beginShadows();
          var r = d.state.shadowsArray;
          ce.render(r, e, t), d.setupLights(t), te && Q.endShadows(), this.info.autoReset && this.info.reset(), undefined !== n && this.setRenderTarget(n), A.render(u, e, t, i);
          var o = u.opaque, s = u.transparent;
          if (e.overrideMaterial) {
            var a = e.overrideMaterial;
            o.length && ve(o, e, t, a), s.length && ve(s, e, t, a);
          } else o.length && ve(o, e, t), s.length && ve(s, e, t);
          e.onAfterRender(L, e, t), null !== B && (x.updateRenderTargetMipmap(B), x.updateMultisampleRenderTarget(B)), v.buffers.depth.setTest(true), v.buffers.depth.setMask(true), v.buffers.color.setMask(true), v.setPolygonOffset(false), le.enabled && le.submitFrame(), u = null, d = null;
        }
      } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
    }, this.setFramebuffer = function (e) {
      D !== e && p.bindFramebuffer(p.FRAMEBUFFER, e), D = e;
    }, this.getActiveCubeFace = function () {
      return O;
    }, this.getActiveMipmapLevel = function () {
      return I;
    }, this.getRenderTarget = function () {
      return B;
    }, this.setRenderTarget = function (e, t, n) {
      B = e, O = t, I = n, e && undefined === _.get(e).__webglFramebuffer && x.setupRenderTarget(e);
      var i = D, r = false;
      if (e) {
        var o = _.get(e).__webglFramebuffer;
        e.isWebGLRenderTargetCube ? (i = o[t || 0], r = true) : i = e.isWebGLMultisampleRenderTarget ? _.get(e).__webglMultisampledFramebuffer : o, G.copy(e.viewport), H.copy(e.scissor), j = e.scissorTest;
      } else G.copy(Y).multiplyScalar(X).floor(), H.copy(J).multiplyScalar(X).floor(), j = K;
      if (F !== i && (p.bindFramebuffer(p.FRAMEBUFFER, i), F = i), v.viewport(G), v.scissor(H), v.setScissorTest(j), r) {
        var s = _.get(e.texture);
        p.framebufferTexture2D(p.FRAMEBUFFER, p.COLOR_ATTACHMENT0, p.TEXTURE_CUBE_MAP_POSITIVE_X + (t || 0), s.__webglTexture, n || 0);
      }
    }, this.readRenderTargetPixels = function (e, t, n, i, r, o, s) {
      if (e && e.isWebGLRenderTarget) {
        var a = _.get(e).__webglFramebuffer;
        if (e.isWebGLRenderTargetCube && undefined !== s && (a = a[s]), a) {
          var l = false;
          a !== F && (p.bindFramebuffer(p.FRAMEBUFFER, a), l = true);
          try {
            var c = e.texture, h = c.format, u = c.type;
            if (h !== Oe && R.convert(h) !== p.getParameter(p.IMPLEMENTATION_COLOR_READ_FORMAT)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
            if (!(u === be || R.convert(u) === p.getParameter(p.IMPLEMENTATION_COLOR_READ_TYPE) || u === Ae && (g.isWebGL2 || m.get("OES_texture_float") || m.get("WEBGL_color_buffer_float")) || u === Me && (g.isWebGL2 ? m.get("EXT_color_buffer_float") : m.get("EXT_color_buffer_half_float")))) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
            p.checkFramebufferStatus(p.FRAMEBUFFER) === p.FRAMEBUFFER_COMPLETE ? t >= 0 && t <= e.width - i && n >= 0 && n <= e.height - r && p.readPixels(t, n, i, r, R.convert(h), R.convert(u), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
          } finally {
            l && p.bindFramebuffer(p.FRAMEBUFFER, F);
          }
        }
      } else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
    }, this.copyFramebufferToTexture = function (e, t, n) {
      var i = t.image.width, r = t.image.height, o = R.convert(t.format);
      x.setTexture2D(t, 0), p.copyTexImage2D(p.TEXTURE_2D, n || 0, o, e.x, e.y, i, r, 0);
    }, this.copyTextureToTexture = function (e, t, n, i) {
      var r = t.image.width, o = t.image.height, s = R.convert(n.format), a = R.convert(n.type);
      x.setTexture2D(n, 0), t.isDataTexture ? p.texSubImage2D(p.TEXTURE_2D, i || 0, e.x, e.y, r, o, s, a, t.image.data) : p.texSubImage2D(p.TEXTURE_2D, i || 0, e.x, e.y, s, a, t.image);
    }, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {detail: this}));
  }
  function As(e, t) {
    this.name = "", this.color = new ri(e), this.density = undefined !== t ? t : 0.00025;
  }
  function Ms(e, t, n) {
    this.name = "", this.color = new ri(e), this.near = undefined !== t ? t : 1, this.far = undefined !== n ? n : 1e3;
  }
  function Cs(e, t) {
    this.array = e, this.stride = t, this.count = undefined !== e ? e.length / t : 0, this.dynamic = false, this.updateRange = {offset: 0, count: -1}, this.version = 0;
  }
  function ks(e, t, n, i) {
    this.data = e, this.itemSize = t, this.offset = n, this.normalized = true === i;
  }
  function Rs(e) {
    hi.call(this), this.type = "SpriteMaterial", this.color = new ri(16777215), this.map = null, this.rotation = 0, this.sizeAttenuation = true, this.lights = false, this.transparent = true, this.setValues(e);
  }
  Object.assign(Es.prototype, s.prototype), Object.assign(qs.prototype, s.prototype), Object.assign(As.prototype, {isFogExp2: true, clone: function () {
    return new As(this.color, this.density);
  }, toJSON: function () {
    return {type: "FogExp2", color: this.color.getHex(), density: this.density};
  }}), Object.assign(Ms.prototype, {isFog: true, clone: function () {
    return new Ms(this.color, this.near, this.far);
  }, toJSON: function () {
    return {type: "Fog", color: this.color.getHex(), near: this.near, far: this.far};
  }}), Object.defineProperty(Cs.prototype, "needsUpdate", {set: function (e) {
    true === e && this.version++;
  }}), Object.assign(Cs.prototype, {isInterleavedBuffer: true, onUploadCallback: function () {}, setArray: function (e) {
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    return this.count = undefined !== e ? e.length / this.stride : 0, this.array = e, this;
  }, setDynamic: function (e) {
    return this.dynamic = e, this;
  }, copy: function (e) {
    return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.dynamic = e.dynamic, this;
  }, copyAt: function (e, t, n) {
    e *= this.stride, n *= t.stride;
    for (var i = 0, r = this.stride; i < r; i++) this.array[e + i] = t.array[n + i];
    return this;
  }, set: function (e, t) {
    return undefined === t && (t = 0), this.array.set(e, t), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, onUpload: function (e) {
    return this.onUploadCallback = e, this;
  }}), Object.defineProperties(ks.prototype, {count: {get: function () {
    return this.data.count;
  }}, array: {get: function () {
    return this.data.array;
  }}}), Object.assign(ks.prototype, {isInterleavedBufferAttribute: true, setX: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset] = t, this;
  }, setY: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset + 1] = t, this;
  }, setZ: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset + 2] = t, this;
  }, setW: function (e, t) {
    return this.data.array[e * this.data.stride + this.offset + 3] = t, this;
  }, getX: function (e) {
    return this.data.array[e * this.data.stride + this.offset];
  }, getY: function (e) {
    return this.data.array[e * this.data.stride + this.offset + 1];
  }, getZ: function (e) {
    return this.data.array[e * this.data.stride + this.offset + 2];
  }, getW: function (e) {
    return this.data.array[e * this.data.stride + this.offset + 3];
  }, setXY: function (e, t, n) {
    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
  }, setXYZ: function (e, t, n, i) {
    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
  }, setXYZW: function (e, t, n, i, r) {
    return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
  }}), Rs.prototype = Object.create(hi.prototype), Rs.prototype.constructor = Rs, Rs.prototype.isSpriteMaterial = true, Rs.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this;
  };
  var Ls = new It, Ps = new It, Ds = new It, Os = new Lt, Is = new Lt, Bs = new Qt, Fs = new It, zs = new It, Ns = new It, Us = new Lt, Vs = new Lt, Gs = new Lt;
  function Hs(e) {
    if (yn.call(this), this.type = "Sprite", undefined === xs) {
      xs = new Ri;
      var t = new Cs(new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]), 5);
      xs.setIndex([0, 1, 2, 0, 2, 3]), xs.addAttribute("position", new ks(t, 3, 0, false)), xs.addAttribute("uv", new ks(t, 2, 3, false));
    }
    this.geometry = xs, this.material = undefined !== e ? e : new Rs, this.center = new Lt(0.5, 0.5);
  }
  function js(e, t, n, i, r, o) {
    Os.subVectors(e, n).addScalar(0.5).multiply(i), undefined !== r ? (Is.x = o * Os.x - r * Os.y, Is.y = r * Os.x + o * Os.y) : Is.copy(Os), e.copy(t), e.x += Is.x, e.y += Is.y, e.applyMatrix4(Bs);
  }
  Hs.prototype = Object.assign(Object.create(yn.prototype), {constructor: Hs, isSprite: true, raycast: function (e, t) {
    null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), Ps.setFromMatrixScale(this.matrixWorld), Bs.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), Ds.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && false === this.material.sizeAttenuation && Ps.multiplyScalar(-Ds.z);
    var n, i, r = this.material.rotation;
    0 !== r && (i = Math.cos(r), n = Math.sin(r));
    var o = this.center;
    js(Fs.set(-0.5, -0.5, 0), Ds, o, Ps, n, i), js(zs.set(0.5, -0.5, 0), Ds, o, Ps, n, i), js(Ns.set(0.5, 0.5, 0), Ds, o, Ps, n, i), Us.set(0, 0), Vs.set(1, 0), Gs.set(1, 1);
    var s = e.ray.intersectTriangle(Fs, zs, Ns, false, Ls);
    if (null !== s || (js(zs.set(-0.5, 0.5, 0), Ds, o, Ps, n, i), Vs.set(0, 1), null !== (s = e.ray.intersectTriangle(Fs, Ns, zs, false, Ls)))) {
      var a = e.ray.origin.distanceTo(Ls);
      a < e.near || a > e.far || t.push({distance: a, point: Ls.clone(), uv: ei.getUV(Ls, Fs, zs, Ns, Us, Vs, Gs, new Lt), face: null, object: this});
    }
  }, clone: function () {
    return new this.constructor(this.material).copy(this);
  }, copy: function (e) {
    return yn.prototype.copy.call(this, e), undefined !== e.center && this.center.copy(e.center), this;
  }});
  var $s = new It, Ws = new It;
  function Xs() {
    yn.call(this), this.type = "LOD", Object.defineProperties(this, {levels: {enumerable: true, value: []}}), this.autoUpdate = true;
  }
  function Ys(e, t) {
    e && e.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."), Yi.call(this, e, t), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new Qt, this.bindMatrixInverse = new Qt;
  }
  Xs.prototype = Object.assign(Object.create(yn.prototype), {constructor: Xs, isLOD: true, copy: function (e) {
    yn.prototype.copy.call(this, e, false);
    for (var t = e.levels, n = 0, i = t.length; n < i; n++) {
      var r = t[n];
      this.addLevel(r.object.clone(), r.distance);
    }
    return this;
  }, addLevel: function (e, t) {
    undefined === t && (t = 0), t = Math.abs(t);
    for (var n = this.levels, i = 0; i < n.length && !(t < n[i].distance); i++) ;
    return n.splice(i, 0, {distance: t, object: e}), this.add(e), this;
  }, getObjectForDistance: function (e) {
    for (var t = this.levels, n = 1, i = t.length; n < i && !(e < t[n].distance); n++) ;
    return t[n - 1].object;
  }, raycast: function (e, t) {
    $s.setFromMatrixPosition(this.matrixWorld);
    var n = e.ray.origin.distanceTo($s);
    this.getObjectForDistance(n).raycast(e, t);
  }, update: function (e) {
    var t = this.levels;
    if (t.length > 1) {
      $s.setFromMatrixPosition(e.matrixWorld), Ws.setFromMatrixPosition(this.matrixWorld);
      var n = $s.distanceTo(Ws);
      t[0].object.visible = true;
      for (var i = 1, r = t.length; i < r && n >= t[i].distance; i++) t[i - 1].object.visible = false, t[i].object.visible = true;
      for (; i < r; i++) t[i].object.visible = false;
    }
  }, toJSON: function (e) {
    var t = yn.prototype.toJSON.call(this, e);
    t.object.levels = [];
    for (var n = this.levels, i = 0, r = n.length; i < r; i++) {
      var o = n[i];
      t.object.levels.push({object: o.object.uuid, distance: o.distance});
    }
    return t;
  }}), Ys.prototype = Object.assign(Object.create(Yi.prototype), {constructor: Ys, isSkinnedMesh: true, bind: function (e, t) {
    this.skeleton = e, undefined === t && (this.updateMatrixWorld(true), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.getInverse(t);
  }, pose: function () {
    this.skeleton.pose();
  }, normalizeSkinWeights: function () {
    for (var e = new Gt, t = this.geometry.attributes.skinWeight, n = 0, i = t.count; n < i; n++) {
      e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
      var r = 1 / e.manhattanLength();
      r !== Infinity ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
    }
  }, updateMatrixWorld: function (e) {
    Yi.prototype.updateMatrixWorld.call(this, e), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }});
  var Js = new Qt, Ks = new Qt;
  function Zs(e, t) {
    if (e = e || [], this.bones = e.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), undefined === t) this.calculateInverses(); else if (this.bones.length === t.length) this.boneInverses = t.slice(0); else {
      console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
      for (var n = 0, i = this.bones.length; n < i; n++) this.boneInverses.push(new Qt);
    }
  }
  function Qs() {
    yn.call(this), this.type = "Bone";
  }
  function ea(e) {
    hi.call(this), this.type = "LineBasicMaterial", this.color = new ri(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.lights = false, this.setValues(e);
  }
  Object.assign(Zs.prototype, {calculateInverses: function () {
    this.boneInverses = [];
    for (var e = 0, t = this.bones.length; e < t; e++) {
      var n = new Qt;
      this.bones[e] && n.getInverse(this.bones[e].matrixWorld), this.boneInverses.push(n);
    }
  }, pose: function () {
    var e, t, n;
    for (t = 0, n = this.bones.length; t < n; t++) (e = this.bones[t]) && e.matrixWorld.getInverse(this.boneInverses[t]);
    for (t = 0, n = this.bones.length; t < n; t++) (e = this.bones[t]) && (e.parent && e.parent.isBone ? (e.matrix.getInverse(e.parent.matrixWorld), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale));
  }, update: function () {
    for (var e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture, r = 0, o = e.length; r < o; r++) {
      var s = e[r] ? e[r].matrixWorld : Ks;
      Js.multiplyMatrices(s, t[r]), Js.toArray(n, 16 * r);
    }
    undefined !== i && (i.needsUpdate = true);
  }, clone: function () {
    return new Zs(this.bones, this.boneInverses);
  }, getBoneByName: function (e) {
    for (var t = 0, n = this.bones.length; t < n; t++) {
      var i = this.bones[t];
      if (i.name === e) return i;
    }
  }}), Qs.prototype = Object.assign(Object.create(yn.prototype), {constructor: Qs, isBone: true}), ea.prototype = Object.create(hi.prototype), ea.prototype.constructor = ea, ea.prototype.isLineBasicMaterial = true, ea.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;
  };
  var ta = new It, na = new It, ia = new Qt, ra = new Gn, oa = new On;
  function sa(e, t, n) {
    1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), yn.call(this), this.type = "Line", this.geometry = undefined !== e ? e : new Ri, this.material = undefined !== t ? t : new ea({color: 16777215 * Math.random()});
  }
  sa.prototype = Object.assign(Object.create(yn.prototype), {constructor: sa, isLine: true, computeLineDistances: function () {
    var e = this.geometry;
    if (e.isBufferGeometry) if (null === e.index) {
      for (var t = e.attributes.position, n = [0], i = 1, r = t.count; i < r; i++) ta.fromBufferAttribute(t, i - 1), na.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += ta.distanceTo(na);
      e.addAttribute("lineDistance", new xi(n, 1));
    } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."); else if (e.isGeometry) {
      var o = e.vertices;
      (n = e.lineDistances)[0] = 0;
      for (i = 1, r = o.length; i < r; i++) n[i] = n[i - 1], n[i] += o[i - 1].distanceTo(o[i]);
    }
    return this;
  }, raycast: function (e, t) {
    var n = e.linePrecision, i = this.geometry, r = this.matrixWorld;
    if (null === i.boundingSphere && i.computeBoundingSphere(), oa.copy(i.boundingSphere), oa.applyMatrix4(r), oa.radius += n, false !== e.ray.intersectsSphere(oa)) {
      ia.getInverse(r), ra.copy(e.ray).applyMatrix4(ia);
      var o = n / ((this.scale.x + this.scale.y + this.scale.z) / 3), s = o * o, a = new It, l = new It, c = new It, h = new It, u = this && this.isLineSegments ? 2 : 1;
      if (i.isBufferGeometry) {
        var d = i.index, p = i.attributes.position.array;
        if (null !== d) for (var m = d.array, f = 0, g = m.length - 1; f < g; f += u) {
          var v = m[f], y = m[f + 1];
          if (a.fromArray(p, 3 * v), l.fromArray(p, 3 * y), !(ra.distanceSqToSegment(a, l, h, c) > s)) h.applyMatrix4(this.matrixWorld), (b = e.ray.origin.distanceTo(h)) < e.near || b > e.far || t.push({distance: b, point: c.clone().applyMatrix4(this.matrixWorld), index: f, face: null, faceIndex: null, object: this});
        } else for (f = 0, g = p.length / 3 - 1; f < g; f += u) {
          if (a.fromArray(p, 3 * f), l.fromArray(p, 3 * f + 3), !(ra.distanceSqToSegment(a, l, h, c) > s)) h.applyMatrix4(this.matrixWorld), (b = e.ray.origin.distanceTo(h)) < e.near || b > e.far || t.push({distance: b, point: c.clone().applyMatrix4(this.matrixWorld), index: f, face: null, faceIndex: null, object: this});
        }
      } else if (i.isGeometry) {
        var _ = i.vertices, x = _.length;
        for (f = 0; f < x - 1; f += u) {
          var b;
          if (!(ra.distanceSqToSegment(_[f], _[f + 1], h, c) > s)) h.applyMatrix4(this.matrixWorld), (b = e.ray.origin.distanceTo(h)) < e.near || b > e.far || t.push({distance: b, point: c.clone().applyMatrix4(this.matrixWorld), index: f, face: null, faceIndex: null, object: this});
        }
      }
    }
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }});
  var aa = new It, la = new It;
  function ca(e, t) {
    sa.call(this, e, t), this.type = "LineSegments";
  }
  function ha(e, t) {
    sa.call(this, e, t), this.type = "LineLoop";
  }
  function ua(e) {
    hi.call(this), this.type = "PointsMaterial", this.color = new ri(16777215), this.map = null, this.size = 1, this.sizeAttenuation = true, this.morphTargets = false, this.lights = false, this.setValues(e);
  }
  ca.prototype = Object.assign(Object.create(sa.prototype), {constructor: ca, isLineSegments: true, computeLineDistances: function () {
    var e = this.geometry;
    if (e.isBufferGeometry) if (null === e.index) {
      for (var t = e.attributes.position, n = [], i = 0, r = t.count; i < r; i += 2) aa.fromBufferAttribute(t, i), la.fromBufferAttribute(t, i + 1), n[i] = 0 === i ? 0 : n[i - 1], n[i + 1] = n[i] + aa.distanceTo(la);
      e.addAttribute("lineDistance", new xi(n, 1));
    } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry."); else if (e.isGeometry) {
      var o = e.vertices;
      for (n = e.lineDistances, i = 0, r = o.length; i < r; i += 2) aa.copy(o[i]), la.copy(o[i + 1]), n[i] = 0 === i ? 0 : n[i - 1], n[i + 1] = n[i] + aa.distanceTo(la);
    }
    return this;
  }}), ha.prototype = Object.assign(Object.create(sa.prototype), {constructor: ha, isLineLoop: true}), ua.prototype = Object.create(hi.prototype), ua.prototype.constructor = ua, ua.prototype.isPointsMaterial = true, ua.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.morphTargets = e.morphTargets, this;
  };
  var da = new Qt, pa = new Gn, ma = new On, fa = new It;
  function va(e, t) {
    yn.call(this), this.type = "Points", this.geometry = undefined !== e ? e : new Ri, this.material = undefined !== t ? t : new ua({color: 16777215 * Math.random()}), this.updateMorphTargets();
  }
  function ya(e, t, n, i, r, o, s) {
    var a = pa.distanceSqToPoint(e);
    if (a < n) {
      var l = new It;
      pa.closestPointToPoint(e, l), l.applyMatrix4(i);
      var c = r.ray.origin.distanceTo(l);
      if (c < r.near || c > r.far) return;
      o.push({distance: c, distanceToRay: Math.sqrt(a), point: l, index: t, face: null, object: s});
    }
  }
  function _a(e, t, n, i, r, o, s, a, l) {
    Vt.call(this, e, t, n, i, r, o, s, a, l), this.format = undefined !== s ? s : De, this.minFilter = undefined !== o ? o : ye, this.magFilter = undefined !== r ? r : ye, this.generateMipmaps = false;
  }
  function xa(e, t, n, i, r, o, s, a, l, c, h, u) {
    Vt.call(this, null, o, s, a, l, c, i, r, h, u), this.image = {width: t, height: n}, this.mipmaps = e, this.flipY = false, this.generateMipmaps = false;
  }
  function ba(e, t, n, i, r, o, s, a, l) {
    Vt.call(this, e, t, n, i, r, o, s, a, l), this.needsUpdate = true;
  }
  function wa(e, t, n, i, r, o, s, a, l, c) {
    if ((c = undefined !== c ? c : Fe) !== Fe && c !== ze) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
    undefined === n && c === Fe && (n = Ee), undefined === n && c === ze && (n = Le), Vt.call(this, null, i, r, o, s, a, c, n, l), this.image = {width: e, height: t}, this.magFilter = undefined !== s ? s : fe, this.minFilter = undefined !== a ? a : fe, this.flipY = false, this.generateMipmaps = false;
  }
  function Sa(e) {
    Ri.call(this), this.type = "WireframeGeometry";
    var t, n, i, r, o, s, a, l, c, h, u = [], d = [0, 0], p = {}, m = ["a", "b", "c"];
    if (e && e.isGeometry) {
      var f = e.faces;
      for (t = 0, i = f.length; t < i; t++) {
        var g = f[t];
        for (n = 0; n < 3; n++) a = g[m[n]], l = g[m[(n + 1) % 3]], d[0] = Math.min(a, l), d[1] = Math.max(a, l), undefined === p[c = "0,0"] && (p[c] = {index1: 0, index2: 0});
      }
      for (c in p) s = p[c], h = e.vertices[s.index1], u.push(h.x, h.y, h.z), h = e.vertices[s.index2], u.push(h.x, h.y, h.z);
    } else if (e && e.isBufferGeometry) {
      var v, y, _, x, b, w, S;
      if (h = new It, null !== e.index) {
        for (v = e.attributes.position, y = e.index, 0 === (_ = e.groups).length && (_ = [{start: 0, count: y.count, materialIndex: 0}]), r = 0, o = _.length; r < o; ++r) for (t = b = (x = _[r]).start, i = b + x.count; t < i; t += 3) for (n = 0; n < 3; n++) a = y.getX(t + n), l = y.getX(t + (n + 1) % 3), d[0] = Math.min(a, l), d[1] = Math.max(a, l), undefined === p[c = "0,0"] && (p[c] = {index1: 0, index2: 0});
        for (c in p) s = p[c], h.fromBufferAttribute(v, s.index1), u.push(h.x, h.y, h.z), h.fromBufferAttribute(v, s.index2), u.push(h.x, h.y, h.z);
      } else for (t = 0, i = (v = e.attributes.position).count / 3; t < i; t++) for (n = 0; n < 3; n++) w = 3 * t + n, h.fromBufferAttribute(v, w), u.push(h.x, h.y, h.z), S = 3 * t + (n + 1) % 3, h.fromBufferAttribute(v, S), u.push(h.x, h.y, h.z);
    }
    this.addAttribute("position", new xi(u, 3));
  }
  function Ea(e, t, n) {
    nr.call(this), this.type = "ParametricGeometry", this.parameters = {func: e, slices: t, stacks: n}, this.fromBufferGeometry(new qa(e, t, n)), this.mergeVertices();
  }
  function qa(e, t, n) {
    Ri.call(this), this.type = "ParametricBufferGeometry", this.parameters = {func: e, slices: t, stacks: n};
    var i, r, o = [], s = [], a = [], l = [], c = new It, h = new It, u = new It, d = new It, p = new It;
    e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
    var m = t + 1;
    for (i = 0; i <= n; i++) {
      var f = i / n;
      for (r = 0; r <= t; r++) {
        var g = r / t;
        e(g, f, h), s.push(h.x, h.y, h.z), g - 0.00001 >= 0 ? (e(g - 0.00001, f, u), d.subVectors(h, u)) : (e(g + 0.00001, f, u), d.subVectors(u, h)), f - 0.00001 >= 0 ? (e(g, f - 0.00001, u), p.subVectors(h, u)) : (e(g, f + 0.00001, u), p.subVectors(u, h)), c.crossVectors(d, p).normalize(), a.push(c.x, c.y, c.z), l.push(g, f);
      }
    }
    for (i = 0; i < n; i++) for (r = 0; r < t; r++) {
      var v = i * m + r, y = i * m + r + 1, _ = (i + 1) * m + r + 1, x = (i + 1) * m + r;
      o.push(v, y, x), o.push(y, _, x);
    }
    this.setIndex(o), this.addAttribute("position", new xi(s, 3)), this.addAttribute("normal", new xi(a, 3)), this.addAttribute("uv", new xi(l, 2));
  }
  function Ta(e, t, n, i) {
    nr.call(this), this.type = "PolyhedronGeometry", this.parameters = {vertices: e, indices: t, radius: n, detail: i}, this.fromBufferGeometry(new Aa(e, t, n, i)), this.mergeVertices();
  }
  function Aa(e, t, n, i) {
    Ri.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = {vertices: e, indices: t, radius: n, detail: i}, n = n || 1;
    var r = [], o = [];
    function s(e, t, n, i) {
      var r, o, s = Math.pow(2, i), l = [];
      for (r = 0; r <= s; r++) {
        l[r] = [];
        var c = e.clone().lerp(n, r / s), h = t.clone().lerp(n, r / s), u = s - r;
        for (o = 0; o <= u; o++) l[r][o] = 0 === o && r === s ? c : c.clone().lerp(h, o / u);
      }
      for (r = 0; r < s; r++) for (o = 0; o < 2 * (s - r) - 1; o++) {
        var d = Math.floor(o / 2);
        o % 2 == 0 ? (a(l[r][d + 1]), a(l[r + 1][d]), a(l[r][d])) : (a(l[r][d + 1]), a(l[r + 1][d + 1]), a(l[r + 1][d]));
      }
    }
    function a(e) {
      r.push(e.x, e.y, e.z);
    }
    function l(t, n) {
      var i = 3 * t;
      n.x = e[i + 0], n.y = e[i + 1], n.z = e[i + 2];
    }
    function c(e, t, n, i) {
      i < 0 && 1 === e.x && (o[t] = e.x - 1), 0 === n.x && 0 === n.z && (o[t] = i / 2 / Math.PI + 0.5);
    }
    function h(e) {
      return Math.atan2(e.z, -e.x);
    }
    !function (e) {
      for (var n = new It, i = new It, r = new It, o = 0; o < t.length; o += 3) l(t[o + 0], n), l(t[o + 1], i), l(t[o + 2], r), s(n, i, r, e);
    }(i = i || 0), function (e) {
      for (var t = new It, n = 0; n < r.length; n += 3) t.x = r[n + 0], t.y = r[n + 1], t.z = r[n + 2], t.normalize().multiplyScalar(e), r[n + 0] = t.x, r[n + 1] = t.y, r[n + 2] = t.z;
    }(n), function () {
      for (var e = new It, t = 0; t < r.length; t += 3) {
        e.x = r[t + 0], e.y = r[t + 1], e.z = r[t + 2];
        var n = Math.atan2(e.z, -e.x) / 2 / Math.PI + 0.5, i = (s = e, Math.atan2(-s.y, Math.sqrt(s.x * s.x + s.z * s.z)) / Math.PI + 0.5);
        o.push(n, 1 - i);
      }
      var s;
      (function () {
        for (var e = new It, t = new It, n = new It, i = new It, s = new Lt, a = new Lt, l = new Lt, u = 0, d = 0; u < r.length; u += 9, d += 6) {
          e.set(r[u + 0], r[u + 1], r[u + 2]), t.set(r[u + 3], r[u + 4], r[u + 5]), n.set(r[u + 6], r[u + 7], r[u + 8]), s.set(o[d + 0], o[d + 1]), a.set(o[d + 2], o[d + 3]), l.set(o[d + 4], o[d + 5]), i.copy(e).add(t).add(n).divideScalar(3);
          var p = Math.atan2(i.z, -i.x);
          c(s, d + 0, e, p), c(a, d + 2, t, p), c(l, d + 4, n, p);
        }
      }(), function () {
        for (var e = 0; e < o.length; e += 6) {
          var t = o[e + 0], n = o[e + 2], i = o[e + 4], r = Math.max(t, n, i), s = Math.min(t, n, i);
          r > 0.9 && s < 0.1 && (t < 0.2 && (o[e + 0] += 1), n < 0.2 && (o[e + 2] += 1), i < 0.2 && (o[e + 4] += 1));
        }
      }());
    }(), this.addAttribute("position", new xi(r, 3)), this.addAttribute("normal", new xi(r.slice(), 3)), this.addAttribute("uv", new xi(o, 2)), 0 === i ? this.computeVertexNormals() : this.normalizeNormals();
  }
  function Ma(e, t) {
    nr.call(this), this.type = "TetrahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new Ca(e, t)), this.mergeVertices();
  }
  function Ca(e, t) {
    Aa.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t), this.type = "TetrahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function ka(e, t) {
    nr.call(this), this.type = "OctahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new Ra(e, t)), this.mergeVertices();
  }
  function Ra(e, t) {
    Aa.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t), this.type = "OctahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function La(e, t) {
    nr.call(this), this.type = "IcosahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new Pa(e, t)), this.mergeVertices();
  }
  function Pa(e, t) {
    var n = (1 + Math.sqrt(5)) / 2, i = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1];
    Aa.call(this, i, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t), this.type = "IcosahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function Da(e, t) {
    nr.call(this), this.type = "DodecahedronGeometry", this.parameters = {radius: e, detail: t}, this.fromBufferGeometry(new Oa(e, t)), this.mergeVertices();
  }
  function Oa(e, t) {
    var n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, -i, -n, 0, -i, n, 0, i, -n, 0, i, n, 0, -n, 0, -i, n, 0, -i, -n, 0, i, n, 0, i];
    Aa.call(this, r, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], e, t), this.type = "DodecahedronBufferGeometry", this.parameters = {radius: e, detail: t};
  }
  function Ia(e, t, n, i, r, o) {
    nr.call(this), this.type = "TubeGeometry", this.parameters = {path: e, tubularSegments: t, radius: n, radialSegments: i, closed: r}, undefined !== o && console.warn("THREE.TubeGeometry: taper has been removed.");
    var s = new Ba(e, t, n, i, r);
    this.tangents = s.tangents, this.normals = s.normals, this.binormals = s.binormals, this.fromBufferGeometry(s), this.mergeVertices();
  }
  function Ba(e, t, n, i, r) {
    Ri.call(this), this.type = "TubeBufferGeometry", this.parameters = {path: e, tubularSegments: t, radius: n, radialSegments: i, closed: r}, t = t || 64, n = n || 1, i = i || 8, r = r || false;
    var o = e.computeFrenetFrames(t, r);
    this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
    var s, a, l = new It, c = new It, h = new Lt, u = new It, d = [], p = [], m = [], f = [];
    function g(r) {
      u = e.getPointAt(r / t, u);
      var s = o.normals[r], h = o.binormals[r];
      for (a = 0; a <= i; a++) {
        var m = a / i * Math.PI * 2, f = Math.sin(m), g = -Math.cos(m);
        c.x = g * s.x + f * h.x, c.y = g * s.y + f * h.y, c.z = g * s.z + f * h.z, c.normalize(), p.push(c.x, c.y, c.z), l.x = u.x + n * c.x, l.y = u.y + n * c.y, l.z = u.z + n * c.z, d.push(l.x, l.y, l.z);
      }
    }
    !function () {
      for (s = 0; s < t; s++) g(s);
      g(false === r ? t : 0), function () {
        for (s = 0; s <= t; s++) for (a = 0; a <= i; a++) h.x = s / t, h.y = a / i, m.push(h.x, h.y);
      }(), function () {
        for (a = 1; a <= t; a++) for (s = 1; s <= i; s++) {
          var e = (i + 1) * (a - 1) + (s - 1), n = (i + 1) * a + (s - 1), r = (i + 1) * a + s, o = (i + 1) * (a - 1) + s;
          f.push(e, n, o), f.push(n, r, o);
        }
      }();
    }(), this.setIndex(f), this.addAttribute("position", new xi(d, 3)), this.addAttribute("normal", new xi(p, 3)), this.addAttribute("uv", new xi(m, 2));
  }
  function Fa(e, t, n, i, r, o, s) {
    nr.call(this), this.type = "TorusKnotGeometry", this.parameters = {radius: e, tube: t, tubularSegments: n, radialSegments: i, p: r, q: o}, undefined !== s && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new za(e, t, n, i, r, o)), this.mergeVertices();
  }
  function za(e, t, n, i, r, o) {
    Ri.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = {radius: e, tube: t, tubularSegments: n, radialSegments: i, p: r, q: o}, e = e || 1, t = t || 0.4, n = Math.floor(n) || 64, i = Math.floor(i) || 8, r = r || 2, o = o || 3;
    var s, a, l = [], c = [], h = [], u = [], d = new It, p = new It, m = new It, f = new It, g = new It, v = new It, y = new It;
    for (s = 0; s <= n; ++s) {
      var _ = s / n * r * Math.PI * 2;
      for (A(_, r, o, e, m), A(_ + 0.01, r, o, e, f), v.subVectors(f, m), y.addVectors(f, m), g.crossVectors(v, y), y.crossVectors(g, v), g.normalize(), y.normalize(), a = 0; a <= i; ++a) {
        var x = a / i * Math.PI * 2, b = -t * Math.cos(x), w = t * Math.sin(x);
        d.x = m.x + (b * y.x + w * g.x), d.y = m.y + (b * y.y + w * g.y), d.z = m.z + (b * y.z + w * g.z), c.push(d.x, d.y, d.z), p.subVectors(d, m).normalize(), h.push(p.x, p.y, p.z), u.push(s / n), u.push(a / i);
      }
    }
    for (a = 1; a <= n; a++) for (s = 1; s <= i; s++) {
      var S = (i + 1) * (a - 1) + (s - 1), E = (i + 1) * a + (s - 1), q = (i + 1) * a + s, T = (i + 1) * (a - 1) + s;
      l.push(S, E, T), l.push(E, q, T);
    }
    function A(e, t, n, i, r) {
      var o = Math.cos(e), s = Math.sin(e), a = n / t * e, l = Math.cos(a);
      r.x = i * (2 + l) * 0.5 * o, r.y = i * (2 + l) * s * 0.5, r.z = i * Math.sin(a) * 0.5;
    }
    this.setIndex(l), this.addAttribute("position", new xi(c, 3)), this.addAttribute("normal", new xi(h, 3)), this.addAttribute("uv", new xi(u, 2));
  }
  function Na(e, t, n, i, r) {
    nr.call(this), this.type = "TorusGeometry", this.parameters = {radius: e, tube: t, radialSegments: n, tubularSegments: i, arc: r}, this.fromBufferGeometry(new Ua(e, t, n, i, r)), this.mergeVertices();
  }
  function Ua(e, t, n, i, r) {
    Ri.call(this), this.type = "TorusBufferGeometry", this.parameters = {radius: e, tube: t, radialSegments: n, tubularSegments: i, arc: r}, e = e || 1, t = t || 0.4, n = Math.floor(n) || 8, i = Math.floor(i) || 6, r = r || 2 * Math.PI;
    var o, s, a = [], l = [], c = [], h = [], u = new It, d = new It, p = new It;
    for (o = 0; o <= n; o++) for (s = 0; s <= i; s++) {
      var m = s / i * r, f = o / n * Math.PI * 2;
      d.x = (e + t * Math.cos(f)) * Math.cos(m), d.y = (e + t * Math.cos(f)) * Math.sin(m), d.z = t * Math.sin(f), l.push(d.x, d.y, d.z), u.x = e * Math.cos(m), u.y = e * Math.sin(m), p.subVectors(d, u).normalize(), c.push(p.x, p.y, p.z), h.push(s / i), h.push(o / n);
    }
    for (o = 1; o <= n; o++) for (s = 1; s <= i; s++) {
      var g = (i + 1) * o + s - 1, v = (i + 1) * (o - 1) + s - 1, y = (i + 1) * (o - 1) + s, _ = (i + 1) * o + s;
      a.push(g, v, _), a.push(v, y, _);
    }
    this.setIndex(a), this.addAttribute("position", new xi(l, 3)), this.addAttribute("normal", new xi(c, 3)), this.addAttribute("uv", new xi(h, 2));
  }
  va.prototype = Object.assign(Object.create(yn.prototype), {constructor: va, isPoints: true, raycast: function (e, t) {
    var n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold;
    if (null === n.boundingSphere && n.computeBoundingSphere(), ma.copy(n.boundingSphere), ma.applyMatrix4(i), ma.radius += r, false !== e.ray.intersectsSphere(ma)) {
      da.getInverse(i), pa.copy(e.ray).applyMatrix4(da);
      var o = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), s = o * o;
      if (n.isBufferGeometry) {
        var a = n.index, l = n.attributes.position.array;
        if (null !== a) for (var c = a.array, h = 0, u = c.length; h < u; h++) {
          var d = c[h];
          fa.fromArray(l, 3 * d), ya(fa, d, s, i, e, t, this);
        } else {
          h = 0;
          for (var p = l.length / 3; h < p; h++) fa.fromArray(l, 3 * h), ya(fa, h, s, i, e, t, this);
        }
      } else {
        var m = n.vertices;
        for (h = 0, p = m.length; h < p; h++) ya(m[h], h, s, i, e, t, this);
      }
    }
  }, updateMorphTargets: function () {
    var e, t, n, i = this.geometry;
    if (i.isBufferGeometry) {
      var r = i.morphAttributes, o = Object.keys(r);
      if (o.length > 0) {
        var s = r[o[0]];
        if (undefined !== s) for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = s.length; e < t; e++) n = s[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e;
      }
    } else {
      var a = i.morphTargets;
      undefined !== a && a.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
  }, clone: function () {
    return new this.constructor(this.geometry, this.material).copy(this);
  }}), _a.prototype = Object.assign(Object.create(Vt.prototype), {constructor: _a, isVideoTexture: true, update: function () {
    var e = this.image;
    e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = true);
  }}), xa.prototype = Object.create(Vt.prototype), xa.prototype.constructor = xa, xa.prototype.isCompressedTexture = true, ba.prototype = Object.create(Vt.prototype), ba.prototype.constructor = ba, ba.prototype.isCanvasTexture = true, wa.prototype = Object.create(Vt.prototype), wa.prototype.constructor = wa, wa.prototype.isDepthTexture = true, Sa.prototype = Object.create(Ri.prototype), Sa.prototype.constructor = Sa, Ea.prototype = Object.create(nr.prototype), Ea.prototype.constructor = Ea, qa.prototype = Object.create(Ri.prototype), qa.prototype.constructor = qa, Ta.prototype = Object.create(nr.prototype), Ta.prototype.constructor = Ta, Aa.prototype = Object.create(Ri.prototype), Aa.prototype.constructor = Aa, Ma.prototype = Object.create(nr.prototype), Ma.prototype.constructor = Ma, Ca.prototype = Object.create(Aa.prototype), Ca.prototype.constructor = Ca, ka.prototype = Object.create(nr.prototype), ka.prototype.constructor = ka, Ra.prototype = Object.create(Aa.prototype), Ra.prototype.constructor = Ra, La.prototype = Object.create(nr.prototype), La.prototype.constructor = La, Pa.prototype = Object.create(Aa.prototype), Pa.prototype.constructor = Pa, Da.prototype = Object.create(nr.prototype), Da.prototype.constructor = Da, Oa.prototype = Object.create(Aa.prototype), Oa.prototype.constructor = Oa, Ia.prototype = Object.create(nr.prototype), Ia.prototype.constructor = Ia, Ba.prototype = Object.create(Ri.prototype), Ba.prototype.constructor = Ba, Ba.prototype.toJSON = function () {
    var e = Ri.prototype.toJSON.call(this);
    return e.path = this.parameters.path.toJSON(), e;
  }, Fa.prototype = Object.create(nr.prototype), Fa.prototype.constructor = Fa, za.prototype = Object.create(Ri.prototype), za.prototype.constructor = za, Na.prototype = Object.create(nr.prototype), Na.prototype.constructor = Na, Ua.prototype = Object.create(Ri.prototype), Ua.prototype.constructor = Ua;
  var Va = function (e, t, n) {
    n = n || 2;
    var i, r, o, s, a, l, c, h = t && t.length, u = h ? t[0] * n : e.length, d = Ga(e, 0, u, n, true), p = [];
    if (!d || d.next === d.prev) return p;
    if (h && (d = function (e, t, n, i) {
      var r, o, s, a, l, c = [];
      for (r = 0, o = t.length; r < o; r++) s = t[r] * i, a = r < o - 1 ? t[r + 1] * i : e.length, (l = Ga(e, s, a, i, false)) === l.next && (l.steiner = true), c.push(Qa(l));
      for (c.sort(Ja), r = 0; r < c.length; r++) Ka(c[r], n), n = Ha(n, n.next);
      return n;
    }(e, t, d, n)), e.length > 80 * n) {
      i = o = e[0], r = s = e[1];
      for (var m = n; m < u; m += n) (a = e[m]) < i && (i = a), (l = e[m + 1]) < r && (r = l), a > o && (o = a), l > s && (s = l);
      c = 0 !== (c = Math.max(o - i, s - r)) ? 1 / c : 0;
    }
    return ja(d, p, n, i, r, c), p;
  };
  function Ga(e, t, n, i, r) {
    var o, s;
    if (r === function (e, t, n, i) {
      for (var r = 0, o = t, s = n - i; o < n; o += i) r += (e[s] - e[o]) * (e[o + 1] + e[s + 1]), s = o;
      return r;
    }(e, t, n, i) > 0) for (o = t; o < n; o += i) s = al(o, e[o], e[o + 1], s); else for (o = n - i; o >= t; o -= i) s = al(o, e[o], e[o + 1], s);
    return s && (s.x === s.next.x && s.y === s.next.y) && (ll(s), s = s.next), s;
  }
  function Ha(e, t) {
    if (!e) return e;
    t || (t = e);
    var n, i = e;
    do {
      if (n = false, i.steiner || !(i.x === i.next.x && i.y === i.next.y) && 0 !== (i.y - i.prev.y) * (i.next.x - i.x) - (i.x - i.prev.x) * (i.next.y - i.y)) i = i.next; else {
        if (ll(i), (i = t = i.prev) === i.next) break;
        n = true;
      }
    } while (n || i !== t);
    return t;
  }
  function ja(e, t, n, i, r, o, s) {
    if (e) {
      !s && o && function (e, t, n, i) {
        var r = e;
        do {
          null === r.z && (r.z = (r.x = 1431655765 & ((r.x = 858993459 & ((r.x = 252645135 & ((r.x = 16711935 & ((r.x = 32767 * (r.x - t) * i) | r.x << 8)) | r.x << 4)) | r.x << 2)) | r.x << 1)) | (r.y = 1431655765 & ((r.y = 858993459 & ((r.y = 252645135 & ((r.y = 16711935 & ((r.y = 32767 * (r.y - n) * i) | r.y << 8)) | r.y << 4)) | r.y << 2)) | r.y << 1)) << 1), r.prevZ = r.prev, r.nextZ = r.next, r = r.next;
        } while (r !== e);
        r.prevZ.nextZ = null, r.prevZ = null, function (e) {
          var t, n, i, r, o, s, a, l, c = 1;
          do {
            for (n = e, e = null, o = null, s = 0; n;) {
              for (s++, i = n, a = 0, t = 0; t < c && (a++, i = i.nextZ); t++) ;
              for (l = c; a > 0 || l > 0 && i;) 0 !== a && (0 === l || !i || n.z <= i.z) ? (r = n, n = n.nextZ, a--) : (r = i, i = i.nextZ, l--), o ? o.nextZ = r : e = r, r.prevZ = o, o = r;
              n = i;
            }
            o.nextZ = null, c *= 2;
          } while (s > 1);
        }(r);
      }(e, i, r, o);
      for (var a, l, c = e; e.prev !== e.next;) if (a = e.prev, l = e.next, o ? Wa(e, i, r, o) : $a(e)) t.push(a.i / n), t.push(e.i / n), t.push(l.i / n), ll(e), e = l.next, c = l.next; else if ((e = l) === c) {
        s ? 1 === s ? ja(e = Xa(e, t, n), t, n, i, r, o, 2) : 2 === s && Ya(e, t, n, i, r, o) : ja(Ha(e), t, n, i, r, o, 1);
        break;
      }
    }
  }
  function $a(e) {
    var t = e.prev, n = e, i = e.next;
    if ((n.y - t.y) * (i.x - n.x) - (n.x - t.x) * (i.y - n.y) >= 0) return false;
    for (var r = e.next.next; r !== e.prev;) {
      if ((i.x - r.x) * (t.y - r.y) - (t.x - r.x) * (i.y - r.y) >= 0 && (t.x - r.x) * (n.y - r.y) - (n.x - r.x) * (t.y - r.y) >= 0 && (n.x - r.x) * (i.y - r.y) - (i.x - r.x) * (n.y - r.y) >= 0 && (r.y - r.prev.y) * (r.next.x - r.x) - (r.x - r.prev.x) * (r.next.y - r.y) >= 0) return false;
      r = r.next;
    }
    return true;
  }
  function Wa(e, t, n, i) {
    var r = e.prev, o = e, s = e.next;
    if ((o.y - r.y) * (s.x - o.x) - (o.x - r.x) * (s.y - o.y) >= 0) return false;
    for (var a = r.x < o.x ? r.x < s.x ? r.x : s.x : o.x < s.x ? o.x : s.x, l = r.y < o.y ? r.y < s.y ? r.y : s.y : o.y < s.y ? o.y : s.y, c = r.x > o.x ? r.x > s.x ? r.x : s.x : o.x > s.x ? o.x : s.x, h = r.y > o.y ? r.y > s.y ? r.y : s.y : o.y > s.y ? o.y : s.y, u = (a = 1431655765 & ((a = 858993459 & ((a = 252645135 & ((a = 16711935 & ((a = 32767 * (a - t) * i) | a << 8)) | a << 4)) | a << 2)) | a << 1)) | (l = 1431655765 & ((l = 858993459 & ((l = 252645135 & ((l = 16711935 & ((l = 32767 * (l - n) * i) | l << 8)) | l << 4)) | l << 2)) | l << 1)) << 1, d = (c = 1431655765 & ((c = 858993459 & ((c = 252645135 & ((c = 16711935 & ((c = 32767 * (c - t) * i) | c << 8)) | c << 4)) | c << 2)) | c << 1)) | (h = 1431655765 & ((h = 858993459 & ((h = 252645135 & ((h = 16711935 & ((h = 32767 * (h - n) * i) | h << 8)) | h << 4)) | h << 2)) | h << 1)) << 1, p = e.prevZ, m = e.nextZ; p && p.z >= u && m && m.z <= d;) {
      if (p !== e.prev && p !== e.next && ((s.x - p.x) * (r.y - p.y) - (r.x - p.x) * (s.y - p.y) >= 0 && (r.x - p.x) * (o.y - p.y) - (o.x - p.x) * (r.y - p.y) >= 0 && (o.x - p.x) * (s.y - p.y) - (s.x - p.x) * (o.y - p.y) >= 0) && (p.y - p.prev.y) * (p.next.x - p.x) - (p.x - p.prev.x) * (p.next.y - p.y) >= 0) return false;
      if (p = p.prevZ, m !== e.prev && m !== e.next && ((s.x - m.x) * (r.y - m.y) - (r.x - m.x) * (s.y - m.y) >= 0 && (r.x - m.x) * (o.y - m.y) - (o.x - m.x) * (r.y - m.y) >= 0 && (o.x - m.x) * (s.y - m.y) - (s.x - m.x) * (o.y - m.y) >= 0) && (m.y - m.prev.y) * (m.next.x - m.x) - (m.x - m.prev.x) * (m.next.y - m.y) >= 0) return false;
      m = m.nextZ;
    }
    for (; p && p.z >= u;) {
      if (p !== e.prev && p !== e.next && ((s.x - p.x) * (r.y - p.y) - (r.x - p.x) * (s.y - p.y) >= 0 && (r.x - p.x) * (o.y - p.y) - (o.x - p.x) * (r.y - p.y) >= 0 && (o.x - p.x) * (s.y - p.y) - (s.x - p.x) * (o.y - p.y) >= 0) && (p.y - p.prev.y) * (p.next.x - p.x) - (p.x - p.prev.x) * (p.next.y - p.y) >= 0) return false;
      p = p.prevZ;
    }
    for (; m && m.z <= d;) {
      if (m !== e.prev && m !== e.next && ((s.x - m.x) * (r.y - m.y) - (r.x - m.x) * (s.y - m.y) >= 0 && (r.x - m.x) * (o.y - m.y) - (o.x - m.x) * (r.y - m.y) >= 0 && (o.x - m.x) * (s.y - m.y) - (s.x - m.x) * (o.y - m.y) >= 0) && (m.y - m.prev.y) * (m.next.x - m.x) - (m.x - m.prev.x) * (m.next.y - m.y) >= 0) return false;
      m = m.nextZ;
    }
    return true;
  }
  function Xa(e, t, n) {
    var i = e;
    do {
      var r = i.prev, o = i.next.next;
      !(r.x === o.x && r.y === o.y) && (!!(r.x === i.next.x && r.y === i.next.y && (i.x === o.x && i.y === o.y) || r.x === o.x && r.y === o.y && (i.next.x === i.x && i.next.y === i.y)) || (i.y - r.y) * (i.next.x - i.x) - (i.x - r.x) * (i.next.y - i.y) > 0 != (i.y - r.y) * (o.x - i.x) - (i.x - r.x) * (o.y - i.y) > 0 && (o.y - i.next.y) * (r.x - o.x) - (o.x - i.next.x) * (r.y - o.y) > 0 != (o.y - i.next.y) * (i.x - o.x) - (o.x - i.next.x) * (i.y - o.y) > 0) && ol(r, o) && ol(o, r) && (t.push(r.i / n), t.push(i.i / n), t.push(o.i / n), ll(i), ll(i.next), i = e = o), i = i.next;
    } while (i !== e);
    return i;
  }
  function Ya(e, t, n, i, r, o) {
    var s = e;
    do {
      for (var a = s.next.next; a !== s.prev;) {
        if (s.i !== a.i && tl(s, a)) {
          var l = sl(s, a);
          return s = Ha(s, s.next), l = Ha(l, l.next), ja(s, t, n, i, r, o), void ja(l, t, n, i, r, o);
        }
        a = a.next;
      }
      s = s.next;
    } while (s !== e);
  }
  function Ja(e, t) {
    return e.x - t.x;
  }
  function Ka(e, t) {
    if (t = function (e, t) {
      var n, i = t, r = e.x, o = e.y, s = -Infinity;
      do {
        if (o <= i.y && o >= i.next.y && i.next.y !== i.y) {
          var a = i.x + (o - i.y) * (i.next.x - i.x) / (i.next.y - i.y);
          if (a <= r && a > s) {
            if (s = a, a === r) {
              if (o === i.y) return i;
              if (o === i.next.y) return i.next;
            }
            n = i.x < i.next.x ? i : i.next;
          }
        }
        i = i.next;
      } while (i !== t);
      if (!n) return null;
      if (r === s) return n.prev;
      var l, c = n, h = n.x, u = n.y, d = Infinity;
      i = n.next;
      for (; i !== c;) r >= i.x && i.x >= h && r !== i.x && (((o < u ? s : r) - i.x) * (o - i.y) - ((o < u ? r : s) - i.x) * (o - i.y) >= 0 && ((o < u ? r : s) - i.x) * (u - i.y) - (h - i.x) * (o - i.y) >= 0 && (h - i.x) * (o - i.y) - ((o < u ? s : r) - i.x) * (u - i.y) >= 0) && ((l = Math.abs(o - i.y) / (r - i.x)) < d || l === d && i.x > n.x) && ol(i, e) && (n = i, d = l), i = i.next;
      return n;
    }(e, t)) {
      var n = sl(t, e);
      Ha(n, n.next);
    }
  }
  function Za(e, t, n, i, r) {
    return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * r) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - i) * r) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1;
  }
  function Qa(e) {
    var t = e, n = e;
    do {
      (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t), t = t.next;
    } while (t !== e);
    return n;
  }
  function el(e, t, n, i, r, o, s, a) {
    return (r - s) * (t - a) - (e - s) * (o - a) >= 0 && (e - s) * (i - a) - (n - s) * (t - a) >= 0 && (n - s) * (o - a) - (r - s) * (i - a) >= 0;
  }
  function tl(e, t) {
    return e.next.i !== t.i && e.prev.i !== t.i && !function (e, t) {
      var n = e;
      do {
        if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && (!!(n.x === e.x && n.y === e.y && (n.next.x === t.x && n.next.y === t.y) || n.x === t.x && n.y === t.y && (e.x === n.next.x && e.y === n.next.y)) || (n.next.y - n.y) * (e.x - n.next.x) - (n.next.x - n.x) * (e.y - n.next.y) > 0 != (n.next.y - n.y) * (t.x - n.next.x) - (n.next.x - n.x) * (t.y - n.next.y) > 0 && (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y) > 0 != (t.y - e.y) * (n.next.x - t.x) - (t.x - e.x) * (n.next.y - t.y) > 0)) return true;
        n = n.next;
      } while (n !== e);
      return false;
    }(e, t) && ol(e, t) && ol(t, e) && function (e, t) {
      var n = e, i = false, r = (e.x + t.x) / 2, o = (e.y + t.y) / 2;
      do {
        n.y > o != n.next.y > o && n.next.y !== n.y && r < (n.next.x - n.x) * (o - n.y) / (n.next.y - n.y) + n.x && (i = !i), n = n.next;
      } while (n !== e);
      return i;
    }(e, t);
  }
  function nl(e, t, n) {
    return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y);
  }
  function il(e, t) {
    return e.x === t.x && e.y === t.y;
  }
  function rl(e, t, n, i) {
    return !!(e.x === n.x && e.y === n.y && (t.x === i.x && t.y === i.y) || e.x === i.x && e.y === i.y && (n.x === t.x && n.y === t.y)) || (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y) > 0 != (t.y - e.y) * (i.x - t.x) - (t.x - e.x) * (i.y - t.y) > 0 && (i.y - n.y) * (e.x - i.x) - (i.x - n.x) * (e.y - i.y) > 0 != (i.y - n.y) * (t.x - i.x) - (i.x - n.x) * (t.y - i.y) > 0;
  }
  function ol(e, t) {
    return (e.y - e.prev.y) * (e.next.x - e.x) - (e.x - e.prev.x) * (e.next.y - e.y) < 0 ? (t.y - e.y) * (e.next.x - t.x) - (t.x - e.x) * (e.next.y - t.y) >= 0 && (e.prev.y - e.y) * (t.x - e.prev.x) - (e.prev.x - e.x) * (t.y - e.prev.y) >= 0 : (t.y - e.y) * (e.prev.x - t.x) - (t.x - e.x) * (e.prev.y - t.y) < 0 || (e.next.y - e.y) * (t.x - e.next.x) - (e.next.x - e.x) * (t.y - e.next.y) < 0;
  }
  function sl(e, t) {
    var n = new cl(e.i, e.x, e.y), i = new cl(t.i, t.x, t.y), r = e.next, o = t.prev;
    return e.next = t, t.prev = e, n.next = r, r.prev = n, i.next = n, n.prev = i, o.next = i, i.prev = o, i;
  }
  function al(e, t, n, i) {
    var r = new cl(e, t, n);
    return i ? (r.next = i.next, r.prev = i, i.next.prev = r, i.next = r) : (r.prev = r, r.next = r), r;
  }
  function ll(e) {
    e.next.prev = e.prev, e.prev.next = e.next, e.prevZ && (e.prevZ.nextZ = e.nextZ), e.nextZ && (e.nextZ.prevZ = e.prevZ);
  }
  function cl(e, t, n) {
    this.i = e, this.x = t, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = false;
  }
  var hl = {area: function (e) {
    for (var t = e.length, n = 0, i = t - 1, r = 0; r < t; i = r++) n += e[i].x * e[r].y - e[r].x * e[i].y;
    return 0.5 * n;
  }, isClockWise: function (e) {
    return hl.area(e) < 0;
  }, triangulateShape: function (e, t) {
    var n = [], i = [], r = [];
    ul(e), dl(n, e);
    var o = e.length;
    t.forEach(ul);
    for (var s = 0; s < t.length; s++) i.push(o), o += t[s].length, dl(n, t[s]);
    var a = Va(n, i);
    for (s = 0; s < a.length; s += 3) r.push(a.slice(s, s + 3));
    return r;
  }};
  function ul(e) {
    var t = e.length;
    t > 2 && e[t - 1].equals(e[0]) && e.pop();
  }
  function dl(e, t) {
    for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y);
  }
  function pl(e, t) {
    nr.call(this), this.type = "ExtrudeGeometry", this.parameters = {shapes: e, options: t}, this.fromBufferGeometry(new ml(e, t)), this.mergeVertices();
  }
  function ml(e, t) {
    Ri.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = {shapes: e, options: t}, e = Array.isArray(e) ? e : [e];
    for (var n = this, i = [], r = [], o = 0, s = e.length; o < s; o++) {
      a(e[o]);
    }
    function a(e) {
      var o = [], s = undefined !== t.curveSegments ? t.curveSegments : 12, a = undefined !== t.steps ? t.steps : 1, l = undefined !== t.depth ? t.depth : 100, c = undefined === t.bevelEnabled || t.bevelEnabled, h = undefined !== t.bevelThickness ? t.bevelThickness : 6, u = undefined !== t.bevelSize ? t.bevelSize : h - 2, d = undefined !== t.bevelOffset ? t.bevelOffset : 0, p = undefined !== t.bevelSegments ? t.bevelSegments : 3, m = t.extrudePath, f = undefined !== t.UVGenerator ? t.UVGenerator : fl;
      undefined !== t.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), l = t.amount);
      var g, v, y, _, x, b, w, S, E = false;
      m && (g = m.getSpacedPoints(a), E = true, c = false, v = m.computeFrenetFrames(a, false), y = new It, _ = new It, x = new It), c || (p = 0, h = 0, u = 0, d = 0);
      var q = e.extractPoints(s), T = q.shape, A = q.holes;
      if (!hl.isClockWise(T)) for (T = T.reverse(), w = 0, S = A.length; w < S; w++) b = A[w], hl.isClockWise(b) && (A[w] = b.reverse());
      var M = hl.triangulateShape(T, A), C = T;
      for (w = 0, S = A.length; w < S; w++) b = A[w], T = T.concat(b);
      function k(e, t, n) {
        return t || console.error("THREE.ExtrudeGeometry: vec does not exist"), t.clone().multiplyScalar(n).add(e);
      }
      var R, L, P, D, O, I, B = T.length, F = M.length;
      function z(e, t, n) {
        var i, r, o, s = e.x - t.x, a = e.y - t.y, l = n.x - e.x, c = n.y - e.y, h = s * s + a * a, u = s * c - a * l;
        if (Math.abs(u) > Number.EPSILON) {
          var d = Math.sqrt(h), p = Math.sqrt(l * l + c * c), m = t.x - a / d, f = t.y + s / d, g = ((n.x - c / p - m) * c - (n.y + l / p - f) * l) / (s * c - a * l), v = (i = m + s * g - e.x) * i + (r = f + a * g - e.y) * r;
          if (v <= 2) return new Lt(i, r);
          o = Math.sqrt(v / 2);
        } else {
          var y = false;
          s > Number.EPSILON ? l > Number.EPSILON && (y = true) : s < -Number.EPSILON ? l < -Number.EPSILON && (y = true) : Math.sign(a) === Math.sign(c) && (y = true), y ? (i = -a, r = s, o = Math.sqrt(h)) : (i = s, r = a, o = Math.sqrt(h / 2));
        }
        return new Lt(i / o, r / o);
      }
      for (var N = [], U = 0, V = C.length, G = V - 1, H = U + 1; U < V; U++, G++, H++) G === V && (G = 0), H === V && (H = 0), N[U] = z(C[U], C[G], C[H]);
      var j, $, W = [], X = N.concat();
      for (w = 0, S = A.length; w < S; w++) {
        for (b = A[w], j = [], U = 0, G = (V = b.length) - 1, H = U + 1; U < V; U++, G++, H++) G === V && (G = 0), H === V && (H = 0), j[U] = z(b[U], b[G], b[H]);
        W.push(j), X = X.concat(j);
      }
      for (R = 0; R < p; R++) {
        for (P = R / p, D = h * Math.cos(P * Math.PI / 2), L = u * Math.sin(P * Math.PI / 2) + d, U = 0, V = C.length; U < V; U++) J((O = (N[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), N[U].clone().multiplyScalar(L).add(C[U]))).x, O.y, -D);
        for (w = 0, S = A.length; w < S; w++) for (b = A[w], j = W[w], U = 0, V = b.length; U < V; U++) J((O = (j[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), j[U].clone().multiplyScalar(L).add(b[U]))).x, O.y, -D);
      }
      for (L = u + d, U = 0; U < B; U++) O = c ? (X[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), X[U].clone().multiplyScalar(L).add(T[U])) : T[U], E ? (_.copy(v.normals[0]).multiplyScalar(O.x), y.copy(v.binormals[0]).multiplyScalar(O.y), x.copy(g[0]).add(_).add(y), J(x.x, x.y, x.z)) : J(O.x, O.y, 0);
      for ($ = 1; $ <= a; $++) for (U = 0; U < B; U++) O = c ? (X[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), X[U].clone().multiplyScalar(L).add(T[U])) : T[U], E ? (_.copy(v.normals[$]).multiplyScalar(O.x), y.copy(v.binormals[$]).multiplyScalar(O.y), x.copy(g[$]).add(_).add(y), J(x.x, x.y, x.z)) : J(O.x, O.y, l / a * $);
      for (R = p - 1; R >= 0; R--) {
        for (P = R / p, D = h * Math.cos(P * Math.PI / 2), L = u * Math.sin(P * Math.PI / 2) + d, U = 0, V = C.length; U < V; U++) J((O = (N[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), N[U].clone().multiplyScalar(L).add(C[U]))).x, O.y, l + D);
        for (w = 0, S = A.length; w < S; w++) for (b = A[w], j = W[w], U = 0, V = b.length; U < V; U++) O = (j[U] || console.error("THREE.ExtrudeGeometry: vec does not exist"), j[U].clone().multiplyScalar(L).add(b[U])), E ? J(O.x, O.y + g[a - 1].y, g[a - 1].x + D) : J(O.x, O.y, l + D);
      }
      function Y(e, t) {
        var n, i;
        for (U = e.length; --U >= 0;) {
          n = U, (i = U - 1) < 0 && (i = e.length - 1);
          var r = 0, o = a + 2 * p;
          for (r = 0; r < o; r++) {
            var s = B * r, l = B * (r + 1);
            Z(t + n + s, t + i + s, t + i + l, t + n + l);
          }
        }
      }
      function J(e, t, n) {
        o.push(e), o.push(t), o.push(n);
      }
      function K(e, t, r) {
        Q(e), Q(t), Q(r);
        var o = i.length / 3, s = f.generateTopUV(n, i, o - 3, o - 2, o - 1);
        ee(s[0]), ee(s[1]), ee(s[2]);
      }
      function Z(e, t, r, o) {
        Q(e), Q(t), Q(o), Q(t), Q(r), Q(o);
        var s = i.length / 3, a = f.generateSideWallUV(n, i, s - 6, s - 3, s - 2, s - 1);
        ee(a[0]), ee(a[1]), ee(a[3]), ee(a[1]), ee(a[2]), ee(a[3]);
      }
      function Q(e) {
        i.push(o[3 * e + 0]), i.push(o[3 * e + 1]), i.push(o[3 * e + 2]);
      }
      function ee(e) {
        r.push(e.x), r.push(e.y);
      }
      !function () {
        var e = i.length / 3;
        if (c) {
          var t = 0, r = B * t;
          for (U = 0; U < F; U++) K((I = M[U])[2] + r, I[1] + r, I[0] + r);
          for (r = B * (t = a + 2 * p), U = 0; U < F; U++) K((I = M[U])[0] + r, I[1] + r, I[2] + r);
        } else {
          for (U = 0; U < F; U++) K((I = M[U])[2], I[1], I[0]);
          for (U = 0; U < F; U++) K((I = M[U])[0] + B * a, I[1] + B * a, I[2] + B * a);
        }
        n.addGroup(e, i.length / 3 - e, 0);
      }(), function () {
        var e = i.length / 3, t = 0;
        for (Y(C, t), t += C.length, w = 0, S = A.length; w < S; w++) Y(b = A[w], t), t += b.length;
        n.addGroup(e, i.length / 3 - e, 1);
      }();
    }
    this.addAttribute("position", new xi(i, 3)), this.addAttribute("uv", new xi(r, 2)), this.computeVertexNormals();
  }
  pl.prototype = Object.create(nr.prototype), pl.prototype.constructor = pl, pl.prototype.toJSON = function () {
    var e = nr.prototype.toJSON.call(this);
    return gl(this.parameters.shapes, this.parameters.options, e);
  }, ml.prototype = Object.create(Ri.prototype), ml.prototype.constructor = ml, ml.prototype.toJSON = function () {
    var e = Ri.prototype.toJSON.call(this);
    return gl(this.parameters.shapes, this.parameters.options, e);
  };
  var fl = {generateTopUV: function (e, t, n, i, r) {
    var o = t[3 * n], s = t[3 * n + 1], a = t[3 * i], l = t[3 * i + 1], c = t[3 * r], h = t[3 * r + 1];
    return [new Lt(o, s), new Lt(a, l), new Lt(c, h)];
  }, generateSideWallUV: function (e, t, n, i, r, o) {
    var s = t[3 * n], a = t[3 * n + 1], l = t[3 * n + 2], c = t[3 * i], h = t[3 * i + 1], u = t[3 * i + 2], d = t[3 * r], p = t[3 * r + 1], m = t[3 * r + 2], f = t[3 * o], g = t[3 * o + 1], v = t[3 * o + 2];
    return Math.abs(a - h) < 0.01 ? [new Lt(s, 1 - l), new Lt(c, 1 - u), new Lt(d, 1 - m), new Lt(f, 1 - v)] : [new Lt(a, 1 - l), new Lt(h, 1 - u), new Lt(p, 1 - m), new Lt(g, 1 - v)];
  }};
  function gl(e, t, n) {
    if (n.shapes = [], Array.isArray(e)) for (var i = 0, r = e.length; i < r; i++) {
      var o = e[i];
      n.shapes.push(o.uuid);
    } else n.shapes.push(e.uuid);
    return undefined !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()), n;
  }
  function vl(e, t) {
    nr.call(this), this.type = "TextGeometry", this.parameters = {text: e, parameters: t}, this.fromBufferGeometry(new yl(e, t)), this.mergeVertices();
  }
  function yl(e, t) {
    var n = (t = t || {}).font;
    if (!n || !n.isFont) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new nr;
    var i = n.generateShapes(e, t.size);
    t.depth = undefined !== t.height ? t.height : 50, undefined === t.bevelThickness && (t.bevelThickness = 10), undefined === t.bevelSize && (t.bevelSize = 8), undefined === t.bevelEnabled && (t.bevelEnabled = false), ml.call(this, i, t), this.type = "TextBufferGeometry";
  }
  function _l(e, t, n, i, r, o, s) {
    nr.call(this), this.type = "SphereGeometry", this.parameters = {radius: e, widthSegments: t, heightSegments: n, phiStart: i, phiLength: r, thetaStart: o, thetaLength: s}, this.fromBufferGeometry(new xl(e, t, n, i, r, o, s)), this.mergeVertices();
  }
  function xl(e, t, n, i, r, o, s) {
    Ri.call(this), this.type = "SphereBufferGeometry", this.parameters = {radius: e, widthSegments: t, heightSegments: n, phiStart: i, phiLength: r, thetaStart: o, thetaLength: s}, e = e || 1, t = Math.max(3, Math.floor(t) || 8), n = Math.max(2, Math.floor(n) || 6), i = undefined !== i ? i : 0, r = undefined !== r ? r : 2 * Math.PI, o = undefined !== o ? o : 0, s = undefined !== s ? s : Math.PI;
    var a, l, c = Math.min(o + s, Math.PI), h = 0, u = [], d = new It, p = new It, m = [], f = [], g = [], v = [];
    for (l = 0; l <= n; l++) {
      var y = [], _ = l / n, x = 0;
      for (0 == l && 0 == o ? x = 0.5 / t : l == n && c == Math.PI && (x = -0.5 / t), a = 0; a <= t; a++) {
        var b = a / t;
        d.x = -e * Math.cos(i + b * r) * Math.sin(o + _ * s), d.y = e * Math.cos(o + _ * s), d.z = e * Math.sin(i + b * r) * Math.sin(o + _ * s), f.push(d.x, d.y, d.z), p.copy(d).normalize(), g.push(p.x, p.y, p.z), v.push(b + x, 1 - _), y.push(h++);
      }
      u.push(y);
    }
    for (l = 0; l < n; l++) for (a = 0; a < t; a++) {
      var w = u[l][a + 1], S = u[l][a], E = u[l + 1][a], q = u[l + 1][a + 1];
      (0 !== l || o > 0) && m.push(w, S, q), (l !== n - 1 || c < Math.PI) && m.push(S, E, q);
    }
    this.setIndex(m), this.addAttribute("position", new xi(f, 3)), this.addAttribute("normal", new xi(g, 3)), this.addAttribute("uv", new xi(v, 2));
  }
  function bl(e, t, n, i, r, o) {
    nr.call(this), this.type = "RingGeometry", this.parameters = {innerRadius: e, outerRadius: t, thetaSegments: n, phiSegments: i, thetaStart: r, thetaLength: o}, this.fromBufferGeometry(new wl(e, t, n, i, r, o)), this.mergeVertices();
  }
  function wl(e, t, n, i, r, o) {
    Ri.call(this), this.type = "RingBufferGeometry", this.parameters = {innerRadius: e, outerRadius: t, thetaSegments: n, phiSegments: i, thetaStart: r, thetaLength: o}, e = e || 0.5, t = t || 1, r = undefined !== r ? r : 0, o = undefined !== o ? o : 2 * Math.PI, n = undefined !== n ? Math.max(3, n) : 8;
    var s, a, l, c = [], h = [], u = [], d = [], p = e, m = (t - e) / (i = undefined !== i ? Math.max(1, i) : 1), f = new It, g = new Lt;
    for (a = 0; a <= i; a++) {
      for (l = 0; l <= n; l++) s = r + l / n * o, f.x = p * Math.cos(s), f.y = p * Math.sin(s), h.push(f.x, f.y, f.z), u.push(0, 0, 1), g.x = (f.x / t + 1) / 2, g.y = (f.y / t + 1) / 2, d.push(g.x, g.y);
      p += m;
    }
    for (a = 0; a < i; a++) {
      var v = a * (n + 1);
      for (l = 0; l < n; l++) {
        var y = s = l + v, _ = s + n + 1, x = s + n + 2, b = s + 1;
        c.push(y, _, b), c.push(_, x, b);
      }
    }
    this.setIndex(c), this.addAttribute("position", new xi(h, 3)), this.addAttribute("normal", new xi(u, 3)), this.addAttribute("uv", new xi(d, 2));
  }
  function Sl(e, t, n, i) {
    nr.call(this), this.type = "LatheGeometry", this.parameters = {points: e, segments: t, phiStart: n, phiLength: i}, this.fromBufferGeometry(new El(e, t, n, i)), this.mergeVertices();
  }
  function El(e, t, n, i) {
    Ri.call(this), this.type = "LatheBufferGeometry", this.parameters = {points: e, segments: t, phiStart: n, phiLength: i}, t = Math.floor(t) || 12, n = n || 0, i = i || 2 * Math.PI, i = Rt.clamp(i, 0, 2 * Math.PI);
    var r, o, s, a = [], l = [], c = [], h = 1 / t, u = new It, d = new Lt;
    for (o = 0; o <= t; o++) {
      var p = n + o * h * i, m = Math.sin(p), f = Math.cos(p);
      for (s = 0; s <= e.length - 1; s++) u.x = e[s].x * m, u.y = e[s].y, u.z = e[s].x * f, l.push(u.x, u.y, u.z), d.x = o / t, d.y = s / (e.length - 1), c.push(d.x, d.y);
    }
    for (o = 0; o < t; o++) for (s = 0; s < e.length - 1; s++) {
      var g = r = s + o * e.length, v = r + e.length, y = r + e.length + 1, _ = r + 1;
      a.push(g, v, _), a.push(v, y, _);
    }
    if (this.setIndex(a), this.addAttribute("position", new xi(l, 3)), this.addAttribute("uv", new xi(c, 2)), this.computeVertexNormals(), i === 2 * Math.PI) {
      var x = this.attributes.normal.array, b = new It, w = new It, S = new It;
      for (r = t * e.length * 3, o = 0, s = 0; o < e.length; o++, s += 3) b.x = x[s + 0], b.y = x[s + 1], b.z = x[s + 2], w.x = x[r + s + 0], w.y = x[r + s + 1], w.z = x[r + s + 2], S.addVectors(b, w).normalize(), x[s + 0] = x[r + s + 0] = S.x, x[s + 1] = x[r + s + 1] = S.y, x[s + 2] = x[r + s + 2] = S.z;
    }
  }
  function ql(e, t) {
    nr.call(this), this.type = "ShapeGeometry", "object" == typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), t = t.curveSegments), this.parameters = {shapes: e, curveSegments: t}, this.fromBufferGeometry(new Tl(e, t)), this.mergeVertices();
  }
  function Tl(e, t) {
    Ri.call(this), this.type = "ShapeBufferGeometry", this.parameters = {shapes: e, curveSegments: t}, t = t || 12;
    var n = [], i = [], r = [], o = [], s = 0, a = 0;
    if (false === Array.isArray(e)) c(e); else for (var l = 0; l < e.length; l++) c(e[l]), this.addGroup(s, a, l), s += a, a = 0;
    function c(e) {
      var s, l, c, h = i.length / 3, u = e.extractPoints(t), d = u.shape, p = u.holes;
      for (false === hl.isClockWise(d) && (d = d.reverse()), s = 0, l = p.length; s < l; s++) c = p[s], true === hl.isClockWise(c) && (p[s] = c.reverse());
      var m = hl.triangulateShape(d, p);
      for (s = 0, l = p.length; s < l; s++) c = p[s], d = d.concat(c);
      for (s = 0, l = d.length; s < l; s++) {
        var f = d[s];
        i.push(f.x, f.y, 0), r.push(0, 0, 1), o.push(f.x, f.y);
      }
      for (s = 0, l = m.length; s < l; s++) {
        var g = m[s], v = g[0] + h, y = g[1] + h, _ = g[2] + h;
        n.push(v, y, _), a += 3;
      }
    }
    this.setIndex(n), this.addAttribute("position", new xi(i, 3)), this.addAttribute("normal", new xi(r, 3)), this.addAttribute("uv", new xi(o, 2));
  }
  function Al(e, t) {
    if (t.shapes = [], Array.isArray(e)) for (var n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      t.shapes.push(r.uuid);
    } else t.shapes.push(e.uuid);
    return t;
  }
  function Ml(e, t) {
    Ri.call(this), this.type = "EdgesGeometry", this.parameters = {thresholdAngle: t}, t = undefined !== t ? t : 1;
    var n, i, r, o, s = [], a = Math.cos(Rt.DEG2RAD * t), l = [0, 0], c = {}, h = ["a", "b", "c"];
    e.isBufferGeometry ? (o = new nr).fromBufferGeometry(e) : o = e.clone(), o.mergeVertices(), o.computeFaceNormals();
    for (var u = o.vertices, d = o.faces, p = 0, m = d.length; p < m; p++) for (var f = d[p], g = 0; g < 3; g++) n = f[h[g]], i = f[h[(g + 1) % 3]], l[0] = Math.min(n, i), l[1] = Math.max(n, i), undefined === c[r = "0,0"] ? c[r] = {index1: 0, index2: 0, face1: p, face2: undefined} : c[r].face2 = p;
    for (r in c) {
      var v = c[r];
      if (undefined === v.face2 || d[v.face1].normal.dot(d[v.face2].normal) <= a) {
        var y = u[v.index1];
        s.push(y.x, y.y, y.z), y = u[v.index2], s.push(y.x, y.y, y.z);
      }
    }
    this.addAttribute("position", new xi(s, 3));
  }
  function Cl(e, t, n, i, r, o, s, a) {
    nr.call(this), this.type = "CylinderGeometry", this.parameters = {radiusTop: e, radiusBottom: t, height: n, radialSegments: i, heightSegments: r, openEnded: o, thetaStart: s, thetaLength: a}, this.fromBufferGeometry(new kl(e, t, n, i, r, o, s, a)), this.mergeVertices();
  }
  function kl(e, t, n, i, r, o, s, a) {
    Ri.call(this), this.type = "CylinderBufferGeometry", this.parameters = {radiusTop: e, radiusBottom: t, height: n, radialSegments: i, heightSegments: r, openEnded: o, thetaStart: s, thetaLength: a};
    var l = this;
    e = undefined !== e ? e : 1, t = undefined !== t ? t : 1, n = n || 1, i = Math.floor(i) || 8, r = Math.floor(r) || 1, o = undefined !== o && o, s = undefined !== s ? s : 0, a = undefined !== a ? a : 2 * Math.PI;
    var c = [], h = [], u = [], d = [], p = 0, m = [], f = n / 2, g = 0;
    function v(n) {
      var r, o, m, v = new Lt, y = new It, _ = 0, x = true === n ? e : t, b = true === n ? 1 : -1;
      for (o = p, r = 1; r <= i; r++) h.push(0, f * b, 0), u.push(0, b, 0), d.push(0.5, 0.5), p++;
      for (m = p, r = 0; r <= i; r++) {
        var w = r / i * a + s, S = Math.cos(w), E = Math.sin(w);
        y.x = x * E, y.y = f * b, y.z = x * S, h.push(y.x, y.y, y.z), u.push(0, b, 0), v.x = 0.5 * S + 0.5, v.y = 0.5 * E * b + 0.5, d.push(v.x, v.y), p++;
      }
      for (r = 0; r < i; r++) {
        var q = o + r, T = m + r;
        true === n ? c.push(T, T + 1, q) : c.push(T + 1, T, q), _ += 3;
      }
      l.addGroup(g, _, true === n ? 1 : 2), g += _;
    }
    !function () {
      var o, v, y = new It, _ = new It, x = 0, b = (t - e) / n;
      for (v = 0; v <= r; v++) {
        var w = [], S = v / r, E = S * (t - e) + e;
        for (o = 0; o <= i; o++) {
          var q = o / i, T = q * a + s, A = Math.sin(T), M = Math.cos(T);
          _.x = E * A, _.y = -S * n + f, _.z = E * M, h.push(_.x, _.y, _.z), y.set(A, b, M).normalize(), u.push(y.x, y.y, y.z), d.push(q, 1 - S), w.push(p++);
        }
        m.push(w);
      }
      for (o = 0; o < i; o++) for (v = 0; v < r; v++) {
        var C = m[v][o], k = m[v + 1][o], R = m[v + 1][o + 1], L = m[v][o + 1];
        c.push(C, k, L), c.push(k, R, L), x += 6;
      }
      l.addGroup(g, x, 0), g += x;
    }(), false === o && (e > 0 && v(true), t > 0 && v(false)), this.setIndex(c), this.addAttribute("position", new xi(h, 3)), this.addAttribute("normal", new xi(u, 3)), this.addAttribute("uv", new xi(d, 2));
  }
  function Rl(e, t, n, i, r, o, s) {
    Cl.call(this, 0, e, t, n, i, r, o, s), this.type = "ConeGeometry", this.parameters = {radius: e, height: t, radialSegments: n, heightSegments: i, openEnded: r, thetaStart: o, thetaLength: s};
  }
  function Ll(e, t, n, i, r, o, s) {
    kl.call(this, 0, e, t, n, i, r, o, s), this.type = "ConeBufferGeometry", this.parameters = {radius: e, height: t, radialSegments: n, heightSegments: i, openEnded: r, thetaStart: o, thetaLength: s};
  }
  function Pl(e, t, n, i) {
    nr.call(this), this.type = "CircleGeometry", this.parameters = {radius: e, segments: t, thetaStart: n, thetaLength: i}, this.fromBufferGeometry(new Dl(e, t, n, i)), this.mergeVertices();
  }
  function Dl(e, t, n, i) {
    Ri.call(this), this.type = "CircleBufferGeometry", this.parameters = {radius: e, segments: t, thetaStart: n, thetaLength: i}, e = e || 1, t = undefined !== t ? Math.max(3, t) : 8, n = undefined !== n ? n : 0, i = undefined !== i ? i : 2 * Math.PI;
    var r, o, s = [], a = [], l = [], c = [], h = new It, u = new Lt;
    for (a.push(0, 0, 0), l.push(0, 0, 1), c.push(0.5, 0.5), o = 0, r = 3; o <= t; o++, r += 3) {
      var d = n + o / t * i;
      h.x = e * Math.cos(d), h.y = e * Math.sin(d), a.push(h.x, h.y, h.z), l.push(0, 0, 1), u.x = (a[r] / e + 1) / 2, u.y = (a[r + 1] / e + 1) / 2, c.push(u.x, u.y);
    }
    for (r = 1; r <= t; r++) s.push(r, r + 1, 0);
    this.setIndex(s), this.addAttribute("position", new xi(a, 3)), this.addAttribute("normal", new xi(l, 3)), this.addAttribute("uv", new xi(c, 2));
  }
  function Ol(e) {
    hi.call(this), this.type = "ShadowMaterial", this.color = new ri(0), this.transparent = true, this.setValues(e);
  }
  function Il(e) {
    cr.call(this, e), this.type = "RawShaderMaterial";
  }
  function Bl(e) {
    hi.call(this), this.defines = {STANDARD: ""}, this.type = "MeshStandardMaterial", this.color = new ri(16777215), this.roughness = 0.5, this.metalness = 0.5, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ri(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = qt, this.normalScale = new Lt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function Fl(e) {
    Bl.call(this), this.defines = {STANDARD: "", PHYSICAL: ""}, this.type = "MeshPhysicalMaterial", this.reflectivity = 0.5, this.clearcoat = 0, this.clearcoatRoughness = 0, this.sheen = null, this.clearcoatNormalScale = new Lt(1, 1), this.clearcoatNormalMap = null, this.transparency = 0, this.setValues(e);
  }
  function zl(e) {
    hi.call(this), this.type = "MeshPhongMaterial", this.color = new ri(16777215), this.specular = new ri(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ri(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = qt, this.normalScale = new Lt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = J, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function Nl(e) {
    zl.call(this), this.defines = {TOON: ""}, this.type = "MeshToonMaterial", this.gradientMap = null, this.setValues(e);
  }
  function Ul(e) {
    hi.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = qt, this.normalScale = new Lt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function Vl(e) {
    hi.call(this), this.type = "MeshLambertMaterial", this.color = new ri(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ri(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = J, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.setValues(e);
  }
  function Gl(e) {
    hi.call(this), this.defines = {MATCAP: ""}, this.type = "MeshMatcapMaterial", this.color = new ri(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = qt, this.normalScale = new Lt(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.skinning = false, this.morphTargets = false, this.morphNormals = false, this.lights = false, this.setValues(e);
  }
  function Hl(e) {
    ea.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
  }
  vl.prototype = Object.create(nr.prototype), vl.prototype.constructor = vl, yl.prototype = Object.create(ml.prototype), yl.prototype.constructor = yl, _l.prototype = Object.create(nr.prototype), _l.prototype.constructor = _l, xl.prototype = Object.create(Ri.prototype), xl.prototype.constructor = xl, bl.prototype = Object.create(nr.prototype), bl.prototype.constructor = bl, wl.prototype = Object.create(Ri.prototype), wl.prototype.constructor = wl, Sl.prototype = Object.create(nr.prototype), Sl.prototype.constructor = Sl, El.prototype = Object.create(Ri.prototype), El.prototype.constructor = El, ql.prototype = Object.create(nr.prototype), ql.prototype.constructor = ql, ql.prototype.toJSON = function () {
    var e = nr.prototype.toJSON.call(this);
    return Al(this.parameters.shapes, e);
  }, Tl.prototype = Object.create(Ri.prototype), Tl.prototype.constructor = Tl, Tl.prototype.toJSON = function () {
    var e = Ri.prototype.toJSON.call(this);
    return Al(this.parameters.shapes, e);
  }, Ml.prototype = Object.create(Ri.prototype), Ml.prototype.constructor = Ml, Cl.prototype = Object.create(nr.prototype), Cl.prototype.constructor = Cl, kl.prototype = Object.create(Ri.prototype), kl.prototype.constructor = kl, Rl.prototype = Object.create(Cl.prototype), Rl.prototype.constructor = Rl, Ll.prototype = Object.create(kl.prototype), Ll.prototype.constructor = Ll, Pl.prototype = Object.create(nr.prototype), Pl.prototype.constructor = Pl, Dl.prototype = Object.create(Ri.prototype), Dl.prototype.constructor = Dl, Ol.prototype = Object.create(hi.prototype), Ol.prototype.constructor = Ol, Ol.prototype.isShadowMaterial = true, Ol.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.color.copy(e.color), this;
  }, Il.prototype = Object.create(cr.prototype), Il.prototype.constructor = Il, Il.prototype.isRawShaderMaterial = true, Bl.prototype = Object.create(hi.prototype), Bl.prototype.constructor = Bl, Bl.prototype.isMeshStandardMaterial = true, Bl.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.defines = {STANDARD: ""}, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, Fl.prototype = Object.create(Bl.prototype), Fl.prototype.constructor = Fl, Fl.prototype.isMeshPhysicalMaterial = true, Fl.prototype.copy = function (e) {
    return Bl.prototype.copy.call(this, e), this.defines = {STANDARD: "", PHYSICAL: ""}, this.reflectivity = e.reflectivity, this.clearcoat = e.clearcoat, this.clearcoatRoughness = e.clearcoatRoughness, e.sheen ? this.sheen = (this.sheen || new ri).copy(e.sheen) : this.sheen = null, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.transparency = e.transparency, this;
  }, zl.prototype = Object.create(hi.prototype), zl.prototype.constructor = zl, zl.prototype.isMeshPhongMaterial = true, zl.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, Nl.prototype = Object.create(zl.prototype), Nl.prototype.constructor = Nl, Nl.prototype.isMeshToonMaterial = true, Nl.prototype.copy = function (e) {
    return zl.prototype.copy.call(this, e), this.gradientMap = e.gradientMap, this;
  }, Ul.prototype = Object.create(hi.prototype), Ul.prototype.constructor = Ul, Ul.prototype.isMeshNormalMaterial = true, Ul.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, Vl.prototype = Object.create(hi.prototype), Vl.prototype.constructor = Vl, Vl.prototype.isMeshLambertMaterial = true, Vl.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, Gl.prototype = Object.create(hi.prototype), Gl.prototype.constructor = Gl, Gl.prototype.isMeshMatcapMaterial = true, Gl.prototype.copy = function (e) {
    return hi.prototype.copy.call(this, e), this.defines = {MATCAP: ""}, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this;
  }, Hl.prototype = Object.create(ea.prototype), Hl.prototype.constructor = Hl, Hl.prototype.isLineDashedMaterial = true, Hl.prototype.copy = function (e) {
    return ea.prototype.copy.call(this, e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
  };
  var jl = {arraySlice: function (e, t, n) {
    return jl.isTypedArray(e) ? new e.constructor(e.subarray(t, undefined !== n ? n : e.length)) : e.slice(t, n);
  }, convertArray: function (e, t, n) {
    return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e);
  }, isTypedArray: function (e) {
    return ArrayBuffer.isView(e) && !(e instanceof DataView);
  }, getKeyframeOrder: function (e) {
    for (var t = e.length, n = new Array(t), i = 0; i !== t; ++i) n[i] = i;
    return n.sort(function (t, n) {
      return e[t] - e[n];
    }), n;
  }, sortedArray: function (e, t, n) {
    for (var i = e.length, r = new e.constructor(i), o = 0, s = 0; s !== i; ++o) for (var a = n[o] * t, l = 0; l !== t; ++l) r[s++] = e[a + l];
    return r;
  }, flattenJSON: function (e, t, n, i) {
    for (var r = 1, o = e[0]; undefined !== o && undefined === o[i];) o = e[r++];
    if (undefined !== o) {
      var s = o[i];
      if (undefined !== s) if (Array.isArray(s)) do {
        undefined !== (s = o[i]) && (t.push(o.time), n.push.apply(n, s)), o = e[r++];
      } while (undefined !== o); else if (undefined !== s.toArray) do {
        undefined !== (s = o[i]) && (t.push(o.time), s.toArray(n, n.length)), o = e[r++];
      } while (undefined !== o); else do {
        undefined !== (s = o[i]) && (t.push(o.time), n.push(s)), o = e[r++];
      } while (undefined !== o);
    }
  }};
  function $l(e, t, n, i) {
    this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = undefined !== i ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n;
  }
  function Wl(e, t, n, i) {
    $l.call(this, e, t, n, i), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0;
  }
  function Xl(e, t, n, i) {
    $l.call(this, e, t, n, i);
  }
  function Yl(e, t, n, i) {
    $l.call(this, e, t, n, i);
  }
  function Jl(e, t, n, i) {
    if (undefined === e) throw new Error("THREE.KeyframeTrack: track name is undefined");
    if (undefined === t || 0 === t.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
    this.name = e, this.times = jl.convertArray(t, this.TimeBufferType), this.values = jl.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
  }
  function Kl(e, t, n) {
    Jl.call(this, e, t, n);
  }
  function Zl(e, t, n, i) {
    Jl.call(this, e, t, n, i);
  }
  function Ql(e, t, n, i) {
    Jl.call(this, e, t, n, i);
  }
  function ec(e, t, n, i) {
    $l.call(this, e, t, n, i);
  }
  function tc(e, t, n, i) {
    Jl.call(this, e, t, n, i);
  }
  function nc(e, t, n, i) {
    Jl.call(this, e, t, n, i);
  }
  function ic(e, t, n, i) {
    Jl.call(this, e, t, n, i);
  }
  function rc(e, t, n) {
    this.name = e, this.tracks = n, this.duration = undefined !== t ? t : -1, this.uuid = Rt.generateUUID(), this.duration < 0 && this.resetDuration();
  }
  function oc(e) {
    if (undefined === e.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    var t = function (e) {
      switch (e.toLowerCase()) {
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
          return Ql;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
          return ic;
        case "color":
          return Zl;
        case "quaternion":
          return tc;
        case "bool":
        case "boolean":
          return Kl;
        case "string":
          return nc;
      }
      throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e);
    }(e.type);
    if (undefined === e.times) {
      var n = [], i = [];
      jl.flattenJSON(e.keys, n, i, "value"), e.times = n, e.values = i;
    }
    return undefined !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation);
  }
  Object.assign($l.prototype, {evaluate: function (e) {
    var t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
    e: {
      t: {
        var o;
        n: {
          i: if (!(e < i)) {
            for (var s = n + 2;;) {
              if (undefined === i) {
                if (e < r) break i;
                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, r);
              }
              if (n === s) break;
              if (r = i, e < (i = t[++n])) break t;
            }
            o = t.length;
            break n;
          }
          if (e >= r) break e;
          var a = t[1];
          e < a && (n = 2, r = a);
          for (s = n - 2;;) {
            if (undefined === r) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
            if (n === s) break;
            if (i = r, e >= (r = t[--n - 1])) break t;
          }
          o = n, n = 0;
        }
        for (; n < o;) {
          var l = n + o >>> 1;
          e < t[l] ? o = l : n = l + 1;
        }
        if (i = t[n], undefined === (r = t[n - 1])) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
        if (undefined === i) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, e);
      }
      this._cachedIndex = n, this.intervalChanged_(n, r, i);
    }
    return this.interpolate_(n, r, e, i);
  }, settings: null, DefaultSettings_: {}, getSettings_: function () {
    return this.settings || this.DefaultSettings_;
  }, copySampleValue_: function (e) {
    for (var t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i, o = 0; o !== i; ++o) t[o] = n[r + o];
    return t;
  }, interpolate_: function () {
    throw new Error("call to abstract method");
  }, intervalChanged_: function () {}}), Object.assign($l.prototype, {beforeStart_: $l.prototype.copySampleValue_, afterEnd_: $l.prototype.copySampleValue_}), Wl.prototype = Object.assign(Object.create($l.prototype), {constructor: Wl, DefaultSettings_: {endingStart: ut, endingEnd: ut}, intervalChanged_: function (e, t, n) {
    var i = this.parameterPositions, r = e - 2, o = e + 1, s = i[r], a = i[o];
    if (undefined === s) switch (this.getSettings_().endingStart) {
      case 2401:
        r = e, s = 2 * t - n;
        break;
      case 2402:
        s = t + i[r = i.length - 2] - i[r + 1];
        break;
      default:
        r = e, s = n;
    }
    if (undefined === a) switch (this.getSettings_().endingEnd) {
      case 2401:
        o = e, a = 2 * n - t;
        break;
      case 2402:
        o = 1, a = n + i[1] - i[0];
        break;
      default:
        o = e - 1, a = t;
    }
    var l = 0.5 * (n - t), c = this.valueSize;
    this._weightPrev = l / (t - s), this._weightNext = l / (a - n), this._offsetPrev = r * c, this._offsetNext = o * c;
  }, interpolate_: function (e, t, n, i) {
    for (var r = this.resultBuffer, o = this.sampleValues, s = this.valueSize, a = e * s, l = a - s, c = this._offsetPrev, h = this._offsetNext, u = this._weightPrev, d = this._weightNext, p = (n - t) / (i - t), m = p * p, f = m * p, g = -u * f + 2 * u * m - u * p, v = (1 + u) * f + (-1.5 - 2 * u) * m + (-0.5 + u) * p + 1, y = (-1 - d) * f + (1.5 + d) * m + 0.5 * p, _ = d * f - d * m, x = 0; x !== s; ++x) r[x] = g * o[c + x] + v * o[l + x] + y * o[a + x] + _ * o[h + x];
    return r;
  }}), Xl.prototype = Object.assign(Object.create($l.prototype), {constructor: Xl, interpolate_: function (e, t, n, i) {
    for (var r = this.resultBuffer, o = this.sampleValues, s = this.valueSize, a = e * s, l = a - s, c = (n - t) / (i - t), h = 1 - c, u = 0; u !== s; ++u) r[u] = o[l + u] * h + o[a + u] * c;
    return r;
  }}), Yl.prototype = Object.assign(Object.create($l.prototype), {constructor: Yl, interpolate_: function (e) {
    return this.copySampleValue_(e - 1);
  }}), Object.assign(Jl, {toJSON: function (e) {
    var t, n = e.constructor;
    if (undefined !== n.toJSON) t = n.toJSON(e); else {
      t = {name: e.name, times: jl.convertArray(e.times, Array), values: jl.convertArray(e.values, Array)};
      var i = e.getInterpolation();
      i !== e.DefaultInterpolation && (t.interpolation = i);
    }
    return t.type = e.ValueTypeName, t;
  }}), Object.assign(Jl.prototype, {constructor: Jl, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: 2301, InterpolantFactoryMethodDiscrete: function (e) {
    return new Yl(this.times, this.values, this.getValueSize(), e);
  }, InterpolantFactoryMethodLinear: function (e) {
    return new Xl(this.times, this.values, this.getValueSize(), e);
  }, InterpolantFactoryMethodSmooth: function (e) {
    return new Wl(this.times, this.values, this.getValueSize(), e);
  }, setInterpolation: function (e) {
    var t;
    switch (e) {
      case 2300:
        t = this.InterpolantFactoryMethodDiscrete;
        break;
      case 2301:
        t = this.InterpolantFactoryMethodLinear;
        break;
      case 2302:
        t = this.InterpolantFactoryMethodSmooth;
    }
    if (undefined === t) {
      var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
      if (undefined === this.createInterpolant) {
        if (e === this.DefaultInterpolation) throw new Error(n);
        this.setInterpolation(this.DefaultInterpolation);
      }
      return console.warn("THREE.KeyframeTrack:", n), this;
    }
    return this.createInterpolant = t, this;
  }, getInterpolation: function () {
    switch (this.createInterpolant) {
      case this.InterpolantFactoryMethodDiscrete:
        return 2300;
      case this.InterpolantFactoryMethodLinear:
        return 2301;
      case this.InterpolantFactoryMethodSmooth:
        return 2302;
    }
  }, getValueSize: function () {
    return this.values.length / this.times.length;
  }, shift: function (e) {
    if (0 !== e) for (var t = this.times, n = 0, i = t.length; n !== i; ++n) t[n] += e;
    return this;
  }, scale: function (e) {
    if (1 !== e) for (var t = this.times, n = 0, i = t.length; n !== i; ++n) t[n] *= e;
    return this;
  }, trim: function (e, t) {
    for (var n = this.times, i = n.length, r = 0, o = i - 1; r !== i && n[r] < e;) ++r;
    for (; -1 !== o && n[o] > t;) --o;
    if (++o, 0 !== r || o !== i) {
      r >= o && (r = (o = Math.max(o, 1)) - 1);
      var s = this.getValueSize();
      this.times = jl.arraySlice(n, r, o), this.values = jl.arraySlice(this.values, r * s, o * s);
    }
    return this;
  }, validate: function () {
    var e = true, t = this.getValueSize();
    t - Math.floor(t) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = false);
    var n = this.times, i = this.values, r = n.length;
    0 === r && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = false);
    for (var o = null, s = 0; s !== r; s++) {
      var a = n[s];
      if ("number" == typeof a && isNaN(a)) {
        console.error("THREE.KeyframeTrack: Time is not a valid number.", this, s, a), e = false;
        break;
      }
      if (null !== o && o > a) {
        console.error("THREE.KeyframeTrack: Out of order keys.", this, s, a, o), e = false;
        break;
      }
      o = a;
    }
    if (undefined !== i && jl.isTypedArray(i)) {
      s = 0;
      for (var l = i.length; s !== l; ++s) {
        var c = i[s];
        if (isNaN(c)) {
          console.error("THREE.KeyframeTrack: Value is not a valid number.", this, s, c), e = false;
          break;
        }
      }
    }
    return e;
  }, optimize: function () {
    for (var e = this.times, t = this.values, n = this.getValueSize(), i = 2302 === this.getInterpolation(), r = 1, o = e.length - 1, s = 1; s < o; ++s) {
      var a = false, l = e[s];
      if (l !== e[s + 1] && (1 !== s || l !== l[0])) if (i) a = true; else for (var c = s * n, h = c - n, u = c + n, d = 0; d !== n; ++d) {
        var p = t[c + d];
        if (p !== t[h + d] || p !== t[u + d]) {
          a = true;
          break;
        }
      }
      if (a) {
        if (s !== r) {
          e[r] = e[s];
          var m = s * n, f = r * n;
          for (d = 0; d !== n; ++d) t[f + d] = t[m + d];
        }
        ++r;
      }
    }
    if (o > 0) {
      e[r] = e[o];
      for (m = o * n, f = r * n, d = 0; d !== n; ++d) t[f + d] = t[m + d];
      ++r;
    }
    return r !== e.length && (this.times = jl.arraySlice(e, 0, r), this.values = jl.arraySlice(t, 0, r * n)), this;
  }, clone: function () {
    var e = jl.arraySlice(this.times, 0), t = jl.arraySlice(this.values, 0), n = new (0, this.constructor)(this.name, e, t);
    return n.createInterpolant = this.createInterpolant, n;
  }}), Kl.prototype = Object.assign(Object.create(Jl.prototype), {constructor: Kl, ValueTypeName: "bool", ValueBufferType: Array, DefaultInterpolation: 2300, InterpolantFactoryMethodLinear: undefined, InterpolantFactoryMethodSmooth: undefined}), Zl.prototype = Object.assign(Object.create(Jl.prototype), {constructor: Zl, ValueTypeName: "color"}), Ql.prototype = Object.assign(Object.create(Jl.prototype), {constructor: Ql, ValueTypeName: "number"}), ec.prototype = Object.assign(Object.create($l.prototype), {constructor: ec, interpolate_: function (e, t, n, i) {
    for (var r = this.resultBuffer, o = this.sampleValues, s = this.valueSize, a = e * s, l = (n - t) / (i - t), c = a + s; a !== c; a += 4) Pt.slerpFlat(r, 0, o, a - s, o, a, l);
    return r;
  }}), tc.prototype = Object.assign(Object.create(Jl.prototype), {constructor: tc, ValueTypeName: "quaternion", DefaultInterpolation: 2301, InterpolantFactoryMethodLinear: function (e) {
    return new ec(this.times, this.values, this.getValueSize(), e);
  }, InterpolantFactoryMethodSmooth: undefined}), nc.prototype = Object.assign(Object.create(Jl.prototype), {constructor: nc, ValueTypeName: "string", ValueBufferType: Array, DefaultInterpolation: 2300, InterpolantFactoryMethodLinear: undefined, InterpolantFactoryMethodSmooth: undefined}), ic.prototype = Object.assign(Object.create(Jl.prototype), {constructor: ic, ValueTypeName: "vector"}), Object.assign(rc, {parse: function (e) {
    for (var t = [], n = e.tracks, i = 1 / (e.fps || 1), r = 0, o = n.length; r !== o; ++r) t.push(oc(n[r]).scale(i));
    return new rc(e.name, e.duration, t);
  }, toJSON: function (e) {
    for (var t = [], n = e.tracks, i = {name: e.name, duration: e.duration, tracks: t, uuid: e.uuid}, r = 0, o = n.length; r !== o; ++r) t.push(Jl.toJSON(n[r]));
    return i;
  }, CreateFromMorphTargetSequence: function (e, t, n, i) {
    for (var r = t.length, o = [], s = 0; s < r; s++) {
      var a = [], l = [];
      a.push((s + r - 1) % r, s, (s + 1) % r), l.push(0, 1, 0);
      var c = jl.getKeyframeOrder(a);
      a = jl.sortedArray(a, 1, c), l = jl.sortedArray(l, 1, c), i || 0 !== a[0] || (a.push(r), l.push(l[0])), o.push(new Ql(".morphTargetInfluences[" + t[s].name + "]", a, l).scale(1 / n));
    }
    return new rc(e, -1, o);
  }, findByName: function (e, t) {
    var n = e;
    if (!Array.isArray(e)) {
      var i = e;
      n = i.geometry && i.geometry.animations || i.animations;
    }
    for (var r = 0; r < n.length; r++) if (n[r].name === t) return n[r];
    return null;
  }, CreateClipsFromMorphTargetSequences: function (e, t, n) {
    for (var i = {}, r = /^([\w-]*?)([\d]+)$/, o = 0, s = e.length; o < s; o++) {
      var a = e[o], l = a.name.match(r);
      if (l && l.length > 1) {
        var c = i[u = l[1]];
        c || (i[u] = c = []), c.push(a);
      }
    }
    var h = [];
    for (var u in i) h.push(rc.CreateFromMorphTargetSequence(u, i[u], t, n));
    return h;
  }, parseAnimation: function (e, t) {
    if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
    for (var n = function (e, t, n, i, r) {
      if (0 !== n.length) {
        var o = [], s = [];
        jl.flattenJSON(n, o, s, i), 0 !== o.length && r.push(new e(t, o, s));
      }
    }, i = [], r = e.name || "default", o = e.length || -1, s = e.fps || 30, a = e.hierarchy || [], l = 0; l < a.length; l++) {
      var c = a[l].keys;
      if (c && 0 !== c.length) if (c[0].morphTargets) {
        for (var h = {}, u = 0; u < c.length; u++) if (c[u].morphTargets) for (var d = 0; d < c[u].morphTargets.length; d++) h[c[u].morphTargets[d]] = -1;
        for (var p in h) {
          var m = [], f = [];
          for (d = 0; d !== c[u].morphTargets.length; ++d) {
            var g = c[u];
            m.push(g.time), f.push(g.morphTarget === p ? 1 : 0);
          }
          i.push(new Ql(".morphTargetInfluence[" + p + "]", m, f));
        }
        o = h.length * (s || 1);
      } else {
        var v = ".bones[" + t[l].name + "]";
        n(ic, v + ".position", c, "pos", i), n(tc, v + ".quaternion", c, "rot", i), n(ic, v + ".scale", c, "scl", i);
      }
    }
    return 0 === i.length ? null : new rc(r, o, i);
  }}), Object.assign(rc.prototype, {resetDuration: function () {
    for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
      var i = this.tracks[t];
      e = Math.max(e, i.times[i.times.length - 1]);
    }
    return this.duration = e, this;
  }, trim: function () {
    for (var e = 0; e < this.tracks.length; e++) this.tracks[e].trim(0, this.duration);
    return this;
  }, validate: function () {
    for (var e = true, t = 0; t < this.tracks.length; t++) e = e && this.tracks[t].validate();
    return e;
  }, optimize: function () {
    for (var e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
    return this;
  }, clone: function () {
    for (var e = [], t = 0; t < this.tracks.length; t++) e.push(this.tracks[t].clone());
    return new rc(this.name, this.duration, e);
  }});
  var sc = {enabled: false, files: {}, add: function (e, t) {
    false !== this.enabled && (this.files[e] = t);
  }, get: function (e) {
    if (false !== this.enabled) return this.files[e];
  }, remove: function (e) {
    delete this.files[e];
  }, clear: function () {
    this.files = {};
  }};
  function ac(e, t, n) {
    var i = this, r = false, o = 0, s = 0, a = undefined;
    this.onStart = undefined, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function (e) {
      s++, false === r && undefined !== i.onStart && i.onStart(e, o, s), r = true;
    }, this.itemEnd = function (e) {
      o++, undefined !== i.onProgress && i.onProgress(e, o, s), o === s && (r = false, undefined !== i.onLoad && i.onLoad());
    }, this.itemError = function (e) {
      undefined !== i.onError && i.onError(e);
    }, this.resolveURL = function (e) {
      return a ? a(e) : e;
    }, this.setURLModifier = function (e) {
      return a = e, this;
    };
  }
  var lc = new ac;
  function cc(e) {
    this.manager = undefined !== e ? e : lc, this.crossOrigin = "anonymous", this.path = "", this.resourcePath = "";
  }
  Object.assign(cc.prototype, {load: function () {}, parse: function () {}, setCrossOrigin: function (e) {
    return this.crossOrigin = e, this;
  }, setPath: function (e) {
    return this.path = e, this;
  }, setResourcePath: function (e) {
    return this.resourcePath = e, this;
  }}), cc.Handlers = {handlers: [], add: function (e, t) {
    this.handlers.push(e, t);
  }, get: function (e) {
    for (var t = this.handlers, n = 0, i = t.length; n < i; n += 2) {
      var r = t[n], o = t[n + 1];
      if (r.test(e)) return o;
    }
    return null;
  }};
  var hc = {};
  function uc(e) {
    cc.call(this, e);
  }
  function dc(e) {
    cc.call(this, e);
  }
  function pc(e) {
    cc.call(this, e), this._parser = null;
  }
  function mc(e) {
    cc.call(this, e), this._parser = null;
  }
  function fc(e) {
    cc.call(this, e);
  }
  function gc(e) {
    cc.call(this, e);
  }
  function vc(e) {
    cc.call(this, e);
  }
  function yc() {
    this.type = "Curve", this.arcLengthDivisions = 200;
  }
  function _c(e, t, n, i, r, o, s, a) {
    yc.call(this), this.type = "EllipseCurve", this.aX = e || 0, this.aY = t || 0, this.xRadius = n || 1, this.yRadius = i || 1, this.aStartAngle = r || 0, this.aEndAngle = o || 2 * Math.PI, this.aClockwise = s || false, this.aRotation = a || 0;
  }
  function xc(e, t, n, i, r, o) {
    _c.call(this, e, t, n, n, i, r, o), this.type = "ArcCurve";
  }
  function bc() {
    var e = 0, t = 0, n = 0, i = 0;
    function r(r, o, s, a) {
      e = r, t = s, n = -3 * r + 3 * o - 2 * s - a, i = 2 * r - 2 * o + s + a;
    }
    return {initCatmullRom: function (e, t, n, i, o) {
      r(t, n, o * (n - e), o * (i - t));
    }, initNonuniformCatmullRom: function (e, t, n, i, o, s, a) {
      var l = (t - e) / o - (n - e) / (o + s) + (n - t) / s, c = (n - t) / s - (i - t) / (s + a) + (i - n) / a;
      r(t, n, l *= s, c *= s);
    }, calc: function (r) {
      var o = r * r;
      return e + t * r + n * o + i * (o * r);
    }};
  }
  uc.prototype = Object.assign(Object.create(cc.prototype), {constructor: uc, load: function (e, t, n, i) {
    undefined === e && (e = ""), undefined !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
    var r = this, o = sc.get(e);
    if (undefined !== o) return r.manager.itemStart(e), setTimeout(function () {
      t && t(o), r.manager.itemEnd(e);
    }, 0), o;
    if (undefined === hc[e]) {
      var s = e.match(/^data:(.*?)(;base64)?,(.*)$/);
      if (s) {
        var a = s[1], l = !!s[2], c = s[3];
        c = decodeURIComponent(c), l && (c = atob(c));
        try {
          var h, u = (this.responseType || "").toLowerCase();
          switch (u) {
            case "arraybuffer":
            case "blob":
              for (var d = new Uint8Array(c.length), p = 0; p < c.length; p++) d[p] = c.charCodeAt(p);
              h = "blob" === u ? new Blob([d.buffer], {type: a}) : d.buffer;
              break;
            case "document":
              var m = new DOMParser;
              h = m.parseFromString(c, a);
              break;
            case "json":
              h = JSON.parse(c);
              break;
            default:
              h = c;
          }
          setTimeout(function () {
            t && t(h), r.manager.itemEnd(e);
          }, 0);
        } catch (t) {
          setTimeout(function () {
            i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
          }, 0);
        }
      } else {
        hc[e] = [], hc[e].push({onLoad: t, onProgress: n, onError: i});
        var f = new XMLHttpRequest;
        for (var g in f.open("GET", e, true), f.addEventListener("load", function (t) {
          var n = this.response;
          sc.add(e, n);
          var i = hc[e];
          if (delete hc[e], 200 === this.status || 0 === this.status) {
            0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received.");
            for (var o = 0, s = i.length; o < s; o++) {
              (a = i[o]).onLoad && a.onLoad(n);
            }
            r.manager.itemEnd(e);
          } else {
            for (o = 0, s = i.length; o < s; o++) {
              var a;
              (a = i[o]).onError && a.onError(t);
            }
            r.manager.itemError(e), r.manager.itemEnd(e);
          }
        }, false), f.addEventListener("progress", function (t) {
          for (var n = hc[e], i = 0, r = n.length; i < r; i++) {
            var o = n[i];
            o.onProgress && o.onProgress(t);
          }
        }, false), f.addEventListener("error", function (t) {
          var n = hc[e];
          delete hc[e];
          for (var i = 0, o = n.length; i < o; i++) {
            var s = n[i];
            s.onError && s.onError(t);
          }
          r.manager.itemError(e), r.manager.itemEnd(e);
        }, false), f.addEventListener("abort", function (t) {
          var n = hc[e];
          delete hc[e];
          for (var i = 0, o = n.length; i < o; i++) {
            var s = n[i];
            s.onError && s.onError(t);
          }
          r.manager.itemError(e), r.manager.itemEnd(e);
        }, false), undefined !== this.responseType && (f.responseType = this.responseType), undefined !== this.withCredentials && (f.withCredentials = this.withCredentials), f.overrideMimeType && f.overrideMimeType(undefined !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) f.setRequestHeader(g, this.requestHeader[g]);
        f.send(null);
      }
      return r.manager.itemStart(e), f;
    }
    hc[e].push({onLoad: t, onProgress: n, onError: i});
  }, setResponseType: function (e) {
    return this.responseType = e, this;
  }, setWithCredentials: function (e) {
    return this.withCredentials = e, this;
  }, setMimeType: function (e) {
    return this.mimeType = e, this;
  }, setRequestHeader: function (e) {
    return this.requestHeader = e, this;
  }}), dc.prototype = Object.assign(Object.create(cc.prototype), {constructor: dc, load: function (e, t, n, i) {
    var r = this, o = new uc(r.manager);
    o.setPath(r.path), o.load(e, function (e) {
      t(r.parse(JSON.parse(e)));
    }, n, i);
  }, parse: function (e) {
    for (var t = [], n = 0; n < e.length; n++) {
      var i = rc.parse(e[n]);
      t.push(i);
    }
    return t;
  }}), pc.prototype = Object.assign(Object.create(cc.prototype), {constructor: pc, load: function (e, t, n, i) {
    var r = this, o = [], s = new xa;
    s.image = o;
    var a = new uc(this.manager);
    function l(l) {
      a.load(e[l], function (e) {
        var n = r._parser(e, true);
        o[l] = {width: n.width, height: n.height, format: n.format, mipmaps: n.mipmaps}, 6 === (c += 1) && (1 === n.mipmapCount && (s.minFilter = ye), s.format = n.format, s.needsUpdate = true, t && t(s));
      }, n, i);
    }
    if (a.setPath(this.path), a.setResponseType("arraybuffer"), Array.isArray(e)) for (var c = 0, h = 0, u = e.length; h < u; ++h) l(h); else a.load(e, function (e) {
      var n = r._parser(e, true);
      if (n.isCubemap) for (var i = n.mipmaps.length / n.mipmapCount, a = 0; a < i; a++) {
        o[a] = {mipmaps: []};
        for (var l = 0; l < n.mipmapCount; l++) o[a].mipmaps.push(n.mipmaps[a * n.mipmapCount + l]), o[a].format = n.format, o[a].width = n.width, o[a].height = n.height;
      } else s.image.width = n.width, s.image.height = n.height, s.mipmaps = n.mipmaps;
      1 === n.mipmapCount && (s.minFilter = ye), s.format = n.format, s.needsUpdate = true, t && t(s);
    }, n, i);
    return s;
  }}), mc.prototype = Object.assign(Object.create(cc.prototype), {constructor: mc, load: function (e, t, n, i) {
    var r = this, o = new gr, s = new uc(this.manager);
    return s.setResponseType("arraybuffer"), s.setPath(this.path), s.load(e, function (e) {
      var n = r._parser(e);
      n && (undefined !== n.image ? o.image = n.image : undefined !== n.data && (o.image.width = n.width, o.image.height = n.height, o.image.data = n.data), o.wrapS = undefined !== n.wrapS ? n.wrapS : pe, o.wrapT = undefined !== n.wrapT ? n.wrapT : pe, o.magFilter = undefined !== n.magFilter ? n.magFilter : ye, o.minFilter = undefined !== n.minFilter ? n.minFilter : xe, o.anisotropy = undefined !== n.anisotropy ? n.anisotropy : 1, undefined !== n.format && (o.format = n.format), undefined !== n.type && (o.type = n.type), undefined !== n.mipmaps && (o.mipmaps = n.mipmaps), 1 === n.mipmapCount && (o.minFilter = ye), o.needsUpdate = true, t && t(o, n));
    }, n, i), o;
  }}), fc.prototype = Object.assign(Object.create(cc.prototype), {constructor: fc, load: function (e, t, n, i) {
    undefined !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
    var r = this, o = sc.get(e);
    if (undefined !== o) return r.manager.itemStart(e), setTimeout(function () {
      t && t(o), r.manager.itemEnd(e);
    }, 0), o;
    var s = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
    function a() {
      s.removeEventListener("load", a, false), s.removeEventListener("error", l, false), sc.add(e, this), t && t(this), r.manager.itemEnd(e);
    }
    function l(t) {
      s.removeEventListener("load", a, false), s.removeEventListener("error", l, false), i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
    }
    return s.addEventListener("load", a, false), s.addEventListener("error", l, false), "data:" !== e.substr(0, 5) && undefined !== this.crossOrigin && (s.crossOrigin = this.crossOrigin), r.manager.itemStart(e), s.src = e, s;
  }}), gc.prototype = Object.assign(Object.create(cc.prototype), {constructor: gc, load: function (e, t, n, i) {
    var r = new Vr, o = new fc(this.manager);
    o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
    var s = 0;
    function a(n) {
      o.load(e[n], function (e) {
        r.images[n] = e, 6 === ++s && (r.needsUpdate = true, t && t(r));
      }, undefined, i);
    }
    for (var l = 0; l < e.length; ++l) a(l);
    return r;
  }}), vc.prototype = Object.assign(Object.create(cc.prototype), {constructor: vc, load: function (e, t, n, i) {
    var r = new Vt, o = new fc(this.manager);
    return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function (n) {
      r.image = n;
      var i = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
      r.format = i ? De : Oe, r.needsUpdate = true, undefined !== t && t(r);
    }, n, i), r;
  }}), Object.assign(yc.prototype, {getPoint: function () {
    return console.warn("THREE.Curve: .getPoint() not implemented."), null;
  }, getPointAt: function (e, t) {
    var n = this.getUtoTmapping(e);
    return this.getPoint(n, t);
  }, getPoints: function (e) {
    undefined === e && (e = 5);
    for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
    return t;
  }, getSpacedPoints: function (e) {
    undefined === e && (e = 5);
    for (var t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
    return t;
  }, getLength: function () {
    var e = this.getLengths();
    return e[e.length - 1];
  }, getLengths: function (e) {
    if (undefined === e && (e = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
    this.needsUpdate = false;
    var t, n, i = [], r = this.getPoint(0), o = 0;
    for (i.push(0), n = 1; n <= e; n++) o += (t = this.getPoint(n / e)).distanceTo(r), i.push(o), r = t;
    return this.cacheArcLengths = i, i;
  }, updateArcLengths: function () {
    this.needsUpdate = true, this.getLengths();
  }, getUtoTmapping: function (e, t) {
    var n, i = this.getLengths(), r = 0, o = i.length;
    n = t || e * i[o - 1];
    for (var s, a = 0, l = o - 1; a <= l;) if ((s = i[r = Math.floor(a + (l - a) / 2)] - n) < 0) a = r + 1; else {
      if (!(s > 0)) {
        l = r;
        break;
      }
      l = r - 1;
    }
    if (i[r = l] === n) return r / (o - 1);
    var c = i[r];
    return (r + (n - c) / (i[r + 1] - c)) / (o - 1);
  }, getTangent: function (e) {
    var t = e - 0.0001, n = e + 0.0001;
    t < 0 && (t = 0), n > 1 && (n = 1);
    var i = this.getPoint(t);
    return this.getPoint(n).clone().sub(i).normalize();
  }, getTangentAt: function (e) {
    var t = this.getUtoTmapping(e);
    return this.getTangent(t);
  }, computeFrenetFrames: function (e, t) {
    var n, i, r, o = new It, s = [], a = [], l = [], c = new It, h = new Qt;
    for (n = 0; n <= e; n++) i = n / e, s[n] = this.getTangentAt(i), s[n].normalize();
    a[0] = new It, l[0] = new It;
    var u = Number.MAX_VALUE, d = Math.abs(s[0].x), p = Math.abs(s[0].y), m = Math.abs(s[0].z);
    for (d <= u && (u = d, o.set(1, 0, 0)), p <= u && (u = p, o.set(0, 1, 0)), m <= u && o.set(0, 0, 1), c.crossVectors(s[0], o).normalize(), a[0].crossVectors(s[0], c), l[0].crossVectors(s[0], a[0]), n = 1; n <= e; n++) a[n] = a[n - 1].clone(), l[n] = l[n - 1].clone(), c.crossVectors(s[n - 1], s[n]), c.length() > Number.EPSILON && (c.normalize(), r = Math.acos(Rt.clamp(s[n - 1].dot(s[n]), -1, 1)), a[n].applyMatrix4(h.makeRotationAxis(c, r))), l[n].crossVectors(s[n], a[n]);
    if (true === t) for (r = Math.acos(Rt.clamp(a[0].dot(a[e]), -1, 1)), r /= e, s[0].dot(c.crossVectors(a[0], a[e])) > 0 && (r = -r), n = 1; n <= e; n++) a[n].applyMatrix4(h.makeRotationAxis(s[n], r * n)), l[n].crossVectors(s[n], a[n]);
    return {tangents: s, normals: a, binormals: l};
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.arcLengthDivisions = e.arcLengthDivisions, this;
  }, toJSON: function () {
    var e = {metadata: {version: 4.5, type: "Curve", generator: "Curve.toJSON"}};
    return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
  }, fromJSON: function (e) {
    return this.arcLengthDivisions = e.arcLengthDivisions, this;
  }}), _c.prototype = Object.create(yc.prototype), _c.prototype.constructor = _c, _c.prototype.isEllipseCurve = true, _c.prototype.getPoint = function (e, t) {
    for (var n = t || new Lt, i = 2 * Math.PI, r = this.aEndAngle - this.aStartAngle, o = Math.abs(r) < Number.EPSILON; r < 0;) r += i;
    for (; r > i;) r -= i;
    r < Number.EPSILON && (r = o ? 0 : i), true !== this.aClockwise || o || (r === i ? r = -i : r -= i);
    var s = this.aStartAngle + e * r, a = this.aX + this.xRadius * Math.cos(s), l = this.aY + this.yRadius * Math.sin(s);
    if (0 !== this.aRotation) {
      var c = Math.cos(this.aRotation), h = Math.sin(this.aRotation), u = a - this.aX, d = l - this.aY;
      a = u * c - d * h + this.aX, l = u * h + d * c + this.aY;
    }
    return n.set(a, l);
  }, _c.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
  }, _c.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
  }, _c.prototype.fromJSON = function (e) {
    return yc.prototype.fromJSON.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
  }, xc.prototype = Object.create(_c.prototype), xc.prototype.constructor = xc, xc.prototype.isArcCurve = true;
  var wc = new It, Sc = new bc, Ec = new bc, qc = new bc;
  function Tc(e, t, n, i) {
    yc.call(this), this.type = "CatmullRomCurve3", this.points = e || [], this.closed = t || false, this.curveType = n || "centripetal", this.tension = i || 0.5;
  }
  function Ac(e, t, n, i, r) {
    var o = 0.5 * (i - t), s = 0.5 * (r - n), a = e * e;
    return (2 * n - 2 * i + o + s) * (e * a) + (-3 * n + 3 * i - 2 * o - s) * a + o * e + n;
  }
  function Mc(e, t, n, i) {
    return function (e, t) {
      var n = 1 - e;
      return n * n * t;
    }(e, t) + function (e, t) {
      return 2 * (1 - e) * e * t;
    }(e, n) + function (e, t) {
      return e * e * t;
    }(e, i);
  }
  function Cc(e, t, n, i, r) {
    return function (e, t) {
      var n = 1 - e;
      return n * n * n * t;
    }(e, t) + function (e, t) {
      var n = 1 - e;
      return 3 * n * n * e * t;
    }(e, n) + function (e, t) {
      return 3 * (1 - e) * e * e * t;
    }(e, i) + function (e, t) {
      return e * e * e * t;
    }(e, r);
  }
  function kc(e, t, n, i) {
    yc.call(this), this.type = "CubicBezierCurve", this.v0 = e || new Lt, this.v1 = t || new Lt, this.v2 = n || new Lt, this.v3 = i || new Lt;
  }
  function Rc(e, t, n, i) {
    yc.call(this), this.type = "CubicBezierCurve3", this.v0 = e || new It, this.v1 = t || new It, this.v2 = n || new It, this.v3 = i || new It;
  }
  function Lc(e, t) {
    yc.call(this), this.type = "LineCurve", this.v1 = e || new Lt, this.v2 = t || new Lt;
  }
  function Pc(e, t) {
    yc.call(this), this.type = "LineCurve3", this.v1 = e || new It, this.v2 = t || new It;
  }
  function Dc(e, t, n) {
    yc.call(this), this.type = "QuadraticBezierCurve", this.v0 = e || new Lt, this.v1 = t || new Lt, this.v2 = n || new Lt;
  }
  function Oc(e, t, n) {
    yc.call(this), this.type = "QuadraticBezierCurve3", this.v0 = e || new It, this.v1 = t || new It, this.v2 = n || new It;
  }
  function Ic(e) {
    yc.call(this), this.type = "SplineCurve", this.points = e || [];
  }
  function Bc() {
    yc.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = false;
  }
  function Fc(e) {
    Bc.call(this), this.type = "Path", this.currentPoint = new Lt, e && this.setFromPoints(e);
  }
  function zc(e) {
    Fc.call(this, e), this.uuid = Rt.generateUUID(), this.type = "Shape", this.holes = [];
  }
  function Nc(e, t) {
    yn.call(this), this.type = "Light", this.color = new ri(e), this.intensity = undefined !== t ? t : 1, this.receiveShadow = undefined;
  }
  function Uc(e, t, n) {
    Nc.call(this, e, n), this.type = "HemisphereLight", this.castShadow = undefined, this.position.copy(yn.DefaultUp), this.updateMatrix(), this.groundColor = new ri(t);
  }
  function Vc(e) {
    this.camera = e, this.bias = 0, this.radius = 1, this.mapSize = new Lt(512, 512), this.map = null, this.mapPass = null, this.matrix = new Qt, this._frustum = new Sr, this._frameExtents = new Lt(1, 1), this._viewportCount = 1, this._viewports = [new Gt(0, 0, 1, 1)];
  }
  function Gc() {
    Vc.call(this, new ur(50, 1, 0.5, 500));
  }
  function Hc(e, t, n, i, r, o) {
    Nc.call(this, e, t), this.type = "SpotLight", this.position.copy(yn.DefaultUp), this.updateMatrix(), this.target = new yn, Object.defineProperty(this, "power", {get: function () {
      return this.intensity * Math.PI;
    }, set: function (e) {
      this.intensity = e / Math.PI;
    }}), this.distance = undefined !== n ? n : 0, this.angle = undefined !== i ? i : Math.PI / 3, this.penumbra = undefined !== r ? r : 0, this.decay = undefined !== o ? o : 1, this.shadow = new Gc;
  }
  function jc() {
    Vc.call(this, new ur(90, 1, 0.5, 500)), this._frameExtents = new Lt(4, 2), this._viewportCount = 6, this._viewports = [new Gt(2, 1, 1, 1), new Gt(0, 1, 1, 1), new Gt(3, 1, 1, 1), new Gt(1, 1, 1, 1), new Gt(3, 0, 1, 1), new Gt(1, 0, 1, 1)], this._cubeDirections = [new It(1, 0, 0), new It(-1, 0, 0), new It(0, 0, 1), new It(0, 0, -1), new It(0, 1, 0), new It(0, -1, 0)], this._cubeUps = [new It(0, 1, 0), new It(0, 1, 0), new It(0, 1, 0), new It(0, 1, 0), new It(0, 0, 1), new It(0, 0, -1)];
  }
  function $c(e, t, n, i) {
    Nc.call(this, e, t), this.type = "PointLight", Object.defineProperty(this, "power", {get: function () {
      return 4 * this.intensity * Math.PI;
    }, set: function (e) {
      this.intensity = e / (4 * Math.PI);
    }}), this.distance = undefined !== n ? n : 0, this.decay = undefined !== i ? i : 1, this.shadow = new jc;
  }
  function Wc(e, t, n, i, r, o) {
    hr.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = undefined !== e ? e : -1, this.right = undefined !== t ? t : 1, this.top = undefined !== n ? n : 1, this.bottom = undefined !== i ? i : -1, this.near = undefined !== r ? r : 0.1, this.far = undefined !== o ? o : 2e3, this.updateProjectionMatrix();
  }
  function Xc() {
    Vc.call(this, new Wc(-5, 5, 5, -5, 0.5, 500));
  }
  function Yc(e, t) {
    Nc.call(this, e, t), this.type = "DirectionalLight", this.position.copy(yn.DefaultUp), this.updateMatrix(), this.target = new yn, this.shadow = new Xc;
  }
  function Jc(e, t) {
    Nc.call(this, e, t), this.type = "AmbientLight", this.castShadow = undefined;
  }
  function Kc(e, t, n, i) {
    Nc.call(this, e, t), this.type = "RectAreaLight", this.width = undefined !== n ? n : 10, this.height = undefined !== i ? i : 10;
  }
  function Zc(e) {
    cc.call(this, e), this.textures = {};
  }
  Tc.prototype = Object.create(yc.prototype), Tc.prototype.constructor = Tc, Tc.prototype.isCatmullRomCurve3 = true, Tc.prototype.getPoint = function (e, t) {
    var n, i, r, o, s = t || new It, a = this.points, l = a.length, c = (l - (this.closed ? 0 : 1)) * e, h = Math.floor(c), u = c - h;
    if (this.closed ? h += h > 0 ? 0 : (Math.floor(Math.abs(h) / l) + 1) * l : 0 === u && h === l - 1 && (h = l - 2, u = 1), this.closed || h > 0 ? n = a[(h - 1) % l] : (wc.subVectors(a[0], a[1]).add(a[0]), n = wc), i = a[h % l], r = a[(h + 1) % l], this.closed || h + 2 < l ? o = a[(h + 2) % l] : (wc.subVectors(a[l - 1], a[l - 2]).add(a[l - 1]), o = wc), "centripetal" === this.curveType || "chordal" === this.curveType) {
      var d = "chordal" === this.curveType ? 0.5 : 0.25, p = Math.pow(n.distanceToSquared(i), d), m = Math.pow(i.distanceToSquared(r), d), f = Math.pow(r.distanceToSquared(o), d);
      m < 0.0001 && (m = 1), p < 0.0001 && (p = m), f < 0.0001 && (f = m), Sc.initNonuniformCatmullRom(n.x, i.x, r.x, o.x, p, m, f), Ec.initNonuniformCatmullRom(n.y, i.y, r.y, o.y, p, m, f), qc.initNonuniformCatmullRom(n.z, i.z, r.z, o.z, p, m, f);
    } else "catmullrom" === this.curveType && (Sc.initCatmullRom(n.x, i.x, r.x, o.x, this.tension), Ec.initCatmullRom(n.y, i.y, r.y, o.y, this.tension), qc.initCatmullRom(n.z, i.z, r.z, o.z, this.tension));
    return s.set(Sc.calc(u), Ec.calc(u), qc.calc(u)), s;
  }, Tc.prototype.copy = function (e) {
    yc.prototype.copy.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push(i.clone());
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
  }, Tc.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    e.points = [];
    for (var t = 0, n = this.points.length; t < n; t++) {
      var i = this.points[t];
      e.points.push(i.toArray());
    }
    return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
  }, Tc.prototype.fromJSON = function (e) {
    yc.prototype.fromJSON.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push((new It).fromArray(i));
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
  }, kc.prototype = Object.create(yc.prototype), kc.prototype.constructor = kc, kc.prototype.isCubicBezierCurve = true, kc.prototype.getPoint = function (e, t) {
    var n = t || new Lt, i = this.v0, r = this.v1, o = this.v2, s = this.v3;
    return n.set(Cc(e, i.x, r.x, o.x, s.x), Cc(e, i.y, r.y, o.y, s.y)), n;
  }, kc.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
  }, kc.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
  }, kc.prototype.fromJSON = function (e) {
    return yc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
  }, Rc.prototype = Object.create(yc.prototype), Rc.prototype.constructor = Rc, Rc.prototype.isCubicBezierCurve3 = true, Rc.prototype.getPoint = function (e, t) {
    var n = t || new It, i = this.v0, r = this.v1, o = this.v2, s = this.v3;
    return n.set(Cc(e, i.x, r.x, o.x, s.x), Cc(e, i.y, r.y, o.y, s.y), Cc(e, i.z, r.z, o.z, s.z)), n;
  }, Rc.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
  }, Rc.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
  }, Rc.prototype.fromJSON = function (e) {
    return yc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
  }, Lc.prototype = Object.create(yc.prototype), Lc.prototype.constructor = Lc, Lc.prototype.isLineCurve = true, Lc.prototype.getPoint = function (e, t) {
    var n = t || new Lt;
    return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
  }, Lc.prototype.getPointAt = function (e, t) {
    return this.getPoint(e, t);
  }, Lc.prototype.getTangent = function () {
    return this.v2.clone().sub(this.v1).normalize();
  }, Lc.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, Lc.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, Lc.prototype.fromJSON = function (e) {
    return yc.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, Pc.prototype = Object.create(yc.prototype), Pc.prototype.constructor = Pc, Pc.prototype.isLineCurve3 = true, Pc.prototype.getPoint = function (e, t) {
    var n = t || new It;
    return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
  }, Pc.prototype.getPointAt = function (e, t) {
    return this.getPoint(e, t);
  }, Pc.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, Pc.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, Pc.prototype.fromJSON = function (e) {
    return yc.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, Dc.prototype = Object.create(yc.prototype), Dc.prototype.constructor = Dc, Dc.prototype.isQuadraticBezierCurve = true, Dc.prototype.getPoint = function (e, t) {
    var n = t || new Lt, i = this.v0, r = this.v1, o = this.v2;
    return n.set(Mc(e, i.x, r.x, o.x), Mc(e, i.y, r.y, o.y)), n;
  }, Dc.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, Dc.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, Dc.prototype.fromJSON = function (e) {
    return yc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, Oc.prototype = Object.create(yc.prototype), Oc.prototype.constructor = Oc, Oc.prototype.isQuadraticBezierCurve3 = true, Oc.prototype.getPoint = function (e, t) {
    var n = t || new It, i = this.v0, r = this.v1, o = this.v2;
    return n.set(Mc(e, i.x, r.x, o.x), Mc(e, i.y, r.y, o.y), Mc(e, i.z, r.z, o.z)), n;
  }, Oc.prototype.copy = function (e) {
    return yc.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
  }, Oc.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
  }, Oc.prototype.fromJSON = function (e) {
    return yc.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
  }, Ic.prototype = Object.create(yc.prototype), Ic.prototype.constructor = Ic, Ic.prototype.isSplineCurve = true, Ic.prototype.getPoint = function (e, t) {
    var n = t || new Lt, i = this.points, r = (i.length - 1) * e, o = Math.floor(r), s = r - o, a = i[0 === o ? o : o - 1], l = i[o], c = i[o > i.length - 2 ? i.length - 1 : o + 1], h = i[o > i.length - 3 ? i.length - 1 : o + 2];
    return n.set(Ac(s, a.x, l.x, c.x, h.x), Ac(s, a.y, l.y, c.y, h.y)), n;
  }, Ic.prototype.copy = function (e) {
    yc.prototype.copy.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push(i.clone());
    }
    return this;
  }, Ic.prototype.toJSON = function () {
    var e = yc.prototype.toJSON.call(this);
    e.points = [];
    for (var t = 0, n = this.points.length; t < n; t++) {
      var i = this.points[t];
      e.points.push(i.toArray());
    }
    return e;
  }, Ic.prototype.fromJSON = function (e) {
    yc.prototype.fromJSON.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++) {
      var i = e.points[t];
      this.points.push((new Lt).fromArray(i));
    }
    return this;
  }, Bc.prototype = Object.assign(Object.create(yc.prototype), {constructor: Bc, add: function (e) {
    this.curves.push(e);
  }, closePath: function () {
    var e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
    e.equals(t) || this.curves.push(new Lc(t, e));
  }, getPoint: function (e) {
    for (var t = e * this.getLength(), n = this.getCurveLengths(), i = 0; i < n.length;) {
      if (n[i] >= t) {
        var r = n[i] - t, o = this.curves[i], s = o.getLength(), a = 0 === s ? 0 : 1 - r / s;
        return o.getPointAt(a);
      }
      i++;
    }
    return null;
  }, getLength: function () {
    var e = this.getCurveLengths();
    return e[e.length - 1];
  }, updateArcLengths: function () {
    this.needsUpdate = true, this.cacheLengths = null, this.getCurveLengths();
  }, getCurveLengths: function () {
    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
    for (var e = [], t = 0, n = 0, i = this.curves.length; n < i; n++) t += this.curves[n].getLength(), e.push(t);
    return this.cacheLengths = e, e;
  }, getSpacedPoints: function (e) {
    undefined === e && (e = 40);
    for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
    return this.autoClose && t.push(t[0]), t;
  }, getPoints: function (e) {
    e = e || 12;
    for (var t, n = [], i = 0, r = this.curves; i < r.length; i++) for (var o = r[i], s = o && o.isEllipseCurve ? 2 * e : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, a = o.getPoints(s), l = 0; l < a.length; l++) {
      var c = a[l];
      t && t.equals(c) || (n.push(c), t = c);
    }
    return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n;
  }, copy: function (e) {
    yc.prototype.copy.call(this, e), this.curves = [];
    for (var t = 0, n = e.curves.length; t < n; t++) {
      var i = e.curves[t];
      this.curves.push(i.clone());
    }
    return this.autoClose = e.autoClose, this;
  }, toJSON: function () {
    var e = yc.prototype.toJSON.call(this);
    e.autoClose = this.autoClose, e.curves = [];
    for (var t = 0, n = this.curves.length; t < n; t++) {
      var i = this.curves[t];
      e.curves.push(i.toJSON());
    }
    return e;
  }, fromJSON: function (e) {
    yc.prototype.fromJSON.call(this, e), this.autoClose = e.autoClose, this.curves = [];
    for (var t = 0, n = e.curves.length; t < n; t++) {
      var i = e.curves[t];
      this.curves.push((new o[i.type]).fromJSON(i));
    }
    return this;
  }}), Fc.prototype = Object.assign(Object.create(Bc.prototype), {constructor: Fc, setFromPoints: function (e) {
    this.moveTo(e[0].x, e[0].y);
    for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
  }, moveTo: function (e, t) {
    this.currentPoint.set(e, t);
  }, lineTo: function (e, t) {
    var n = new Lc(this.currentPoint.clone(), new Lt(e, t));
    this.curves.push(n), this.currentPoint.set(e, t);
  }, quadraticCurveTo: function (e, t, n, i) {
    var r = new Dc(this.currentPoint.clone(), new Lt(e, t), new Lt(n, i));
    this.curves.push(r), this.currentPoint.set(n, i);
  }, bezierCurveTo: function (e, t, n, i, r, o) {
    var s = new kc(this.currentPoint.clone(), new Lt(e, t), new Lt(n, i), new Lt(r, o));
    this.curves.push(s), this.currentPoint.set(r, o);
  }, splineThru: function (e) {
    var t = new Ic([this.currentPoint.clone()].concat(e));
    this.curves.push(t), this.currentPoint.copy(e[e.length - 1]);
  }, arc: function (e, t, n, i, r, o) {
    var s = this.currentPoint.x, a = this.currentPoint.y;
    this.absarc(e + s, t + a, n, i, r, o);
  }, absarc: function (e, t, n, i, r, o) {
    this.absellipse(e, t, n, n, i, r, o);
  }, ellipse: function (e, t, n, i, r, o, s, a) {
    var l = this.currentPoint.x, c = this.currentPoint.y;
    this.absellipse(e + l, t + c, n, i, r, o, s, a);
  }, absellipse: function (e, t, n, i, r, o, s, a) {
    var l = new _c(e, t, n, i, r, o, s, a);
    if (this.curves.length > 0) {
      var c = l.getPoint(0);
      c.equals(this.currentPoint) || this.lineTo(c.x, c.y);
    }
    this.curves.push(l);
    var h = l.getPoint(1);
    this.currentPoint.copy(h);
  }, copy: function (e) {
    return Bc.prototype.copy.call(this, e), this.currentPoint.copy(e.currentPoint), this;
  }, toJSON: function () {
    var e = Bc.prototype.toJSON.call(this);
    return e.currentPoint = this.currentPoint.toArray(), e;
  }, fromJSON: function (e) {
    return Bc.prototype.fromJSON.call(this, e), this.currentPoint.fromArray(e.currentPoint), this;
  }}), zc.prototype = Object.assign(Object.create(Fc.prototype), {constructor: zc, getPointsHoles: function (e) {
    for (var t = [], n = 0, i = this.holes.length; n < i; n++) t[n] = this.holes[n].getPoints(e);
    return t;
  }, extractPoints: function (e) {
    return {shape: this.getPoints(e), holes: this.getPointsHoles(e)};
  }, copy: function (e) {
    Fc.prototype.copy.call(this, e), this.holes = [];
    for (var t = 0, n = e.holes.length; t < n; t++) {
      var i = e.holes[t];
      this.holes.push(i.clone());
    }
    return this;
  }, toJSON: function () {
    var e = Fc.prototype.toJSON.call(this);
    e.uuid = this.uuid, e.holes = [];
    for (var t = 0, n = this.holes.length; t < n; t++) {
      var i = this.holes[t];
      e.holes.push(i.toJSON());
    }
    return e;
  }, fromJSON: function (e) {
    Fc.prototype.fromJSON.call(this, e), this.uuid = e.uuid, this.holes = [];
    for (var t = 0, n = e.holes.length; t < n; t++) {
      var i = e.holes[t];
      this.holes.push((new Fc).fromJSON(i));
    }
    return this;
  }}), Nc.prototype = Object.assign(Object.create(yn.prototype), {constructor: Nc, isLight: true, copy: function (e) {
    return yn.prototype.copy.call(this, e), this.color.copy(e.color), this.intensity = e.intensity, this;
  }, toJSON: function (e) {
    var t = yn.prototype.toJSON.call(this, e);
    return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, undefined !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), undefined !== this.distance && (t.object.distance = this.distance), undefined !== this.angle && (t.object.angle = this.angle), undefined !== this.decay && (t.object.decay = this.decay), undefined !== this.penumbra && (t.object.penumbra = this.penumbra), undefined !== this.shadow && (t.object.shadow = this.shadow.toJSON()), t;
  }}), Uc.prototype = Object.assign(Object.create(Nc.prototype), {constructor: Uc, isHemisphereLight: true, copy: function (e) {
    return Nc.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;
  }}), Object.assign(Vc.prototype, {_projScreenMatrix: new Qt, _lightPositionWorld: new It, _lookTarget: new It, getViewportCount: function () {
    return this._viewportCount;
  }, getFrustum: function () {
    return this._frustum;
  }, updateMatrices: function (e) {
    var t = this.camera, n = this.matrix, i = this._projScreenMatrix, r = this._lookTarget, o = this._lightPositionWorld;
    o.setFromMatrixPosition(e.matrixWorld), t.position.copy(o), r.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(r), t.updateMatrixWorld(), i.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromMatrix(i), n.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse);
  }, getViewport: function (e) {
    return this._viewports[e];
  }, getFrameExtents: function () {
    return this._frameExtents;
  }, copy: function (e) {
    return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, toJSON: function () {
    var e = {};
    return 0 !== this.bias && (e.bias = this.bias), 1 !== this.radius && (e.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(false).object, delete e.camera.matrix, e;
  }}), Gc.prototype = Object.assign(Object.create(Vc.prototype), {constructor: Gc, isSpotLightShadow: true, updateMatrices: function (e, t, n) {
    var i = this.camera, r = 2 * Rt.RAD2DEG * e.angle, o = this.mapSize.width / this.mapSize.height, s = e.distance || i.far;
    r === i.fov && o === i.aspect && s === i.far || (i.fov = r, i.aspect = o, i.far = s, i.updateProjectionMatrix()), Vc.prototype.updateMatrices.call(this, e, t, n);
  }}), Hc.prototype = Object.assign(Object.create(Nc.prototype), {constructor: Hc, isSpotLight: true, copy: function (e) {
    return Nc.prototype.copy.call(this, e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
  }}), jc.prototype = Object.assign(Object.create(Vc.prototype), {constructor: jc, isPointLightShadow: true, updateMatrices: function (e, t, n) {
    var i = this.camera, r = this.matrix, o = this._lightPositionWorld, s = this._lookTarget, a = this._projScreenMatrix;
    o.setFromMatrixPosition(e.matrixWorld), i.position.copy(o), s.copy(i.position), s.add(this._cubeDirections[n]), i.up.copy(this._cubeUps[n]), i.lookAt(s), i.updateMatrixWorld(), r.makeTranslation(-o.x, -o.y, -o.z), a.multiplyMatrices(i.projectionMatrix, i.matrixWorldInverse), this._frustum.setFromMatrix(a);
  }}), $c.prototype = Object.assign(Object.create(Nc.prototype), {constructor: $c, isPointLight: true, copy: function (e) {
    return Nc.prototype.copy.call(this, e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
  }}), Wc.prototype = Object.assign(Object.create(hr.prototype), {constructor: Wc, isOrthographicCamera: true, copy: function (e, t) {
    return hr.prototype.copy.call(this, e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = null === e.view ? null : Object.assign({}, e.view), this;
  }, setViewOffset: function (e, t, n, i, r, o) {
    null === this.view && (this.view = {enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1}), this.view.enabled = true, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
  }, clearViewOffset: function () {
    null !== this.view && (this.view.enabled = false), this.updateProjectionMatrix();
  }, updateProjectionMatrix: function () {
    var e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, o = n + e, s = i + t, a = i - t;
    if (null !== this.view && this.view.enabled) {
      var l = this.zoom / (this.view.width / this.view.fullWidth), c = this.zoom / (this.view.height / this.view.fullHeight), h = (this.right - this.left) / this.view.width, u = (this.top - this.bottom) / this.view.height;
      o = (r += h * (this.view.offsetX / l)) + h * (this.view.width / l), a = (s -= u * (this.view.offsetY / c)) - u * (this.view.height / c);
    }
    this.projectionMatrix.makeOrthographic(r, o, s, a, this.near, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix);
  }, toJSON: function (e) {
    var t = yn.prototype.toJSON.call(this, e);
    return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign({}, this.view)), t;
  }}), Xc.prototype = Object.assign(Object.create(Vc.prototype), {constructor: Xc, isDirectionalLightShadow: true, updateMatrices: function (e, t, n) {
    Vc.prototype.updateMatrices.call(this, e, t, n);
  }}), Yc.prototype = Object.assign(Object.create(Nc.prototype), {constructor: Yc, isDirectionalLight: true, copy: function (e) {
    return Nc.prototype.copy.call(this, e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
  }}), Jc.prototype = Object.assign(Object.create(Nc.prototype), {constructor: Jc, isAmbientLight: true}), Kc.prototype = Object.assign(Object.create(Nc.prototype), {constructor: Kc, isRectAreaLight: true, copy: function (e) {
    return Nc.prototype.copy.call(this, e), this.width = e.width, this.height = e.height, this;
  }, toJSON: function (e) {
    var t = Nc.prototype.toJSON.call(this, e);
    return t.object.width = this.width, t.object.height = this.height, t;
  }}), Zc.prototype = Object.assign(Object.create(cc.prototype), {constructor: Zc, load: function (e, t, n, i) {
    var r = this, o = new uc(r.manager);
    o.setPath(r.path), o.load(e, function (e) {
      t(r.parse(JSON.parse(e)));
    }, n, i);
  }, parse: function (e) {
    var t = this.textures;
    function n(e) {
      return undefined === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e), t[e];
    }
    var i = new r[e.type];
    if (undefined !== e.uuid && (i.uuid = e.uuid), undefined !== e.name && (i.name = e.name), undefined !== e.color && i.color.setHex(e.color), undefined !== e.roughness && (i.roughness = e.roughness), undefined !== e.metalness && (i.metalness = e.metalness), undefined !== e.emissive && i.emissive.setHex(e.emissive), undefined !== e.specular && i.specular.setHex(e.specular), undefined !== e.shininess && (i.shininess = e.shininess), undefined !== e.clearcoat && (i.clearcoat = e.clearcoat), undefined !== e.clearcoatRoughness && (i.clearcoatRoughness = e.clearcoatRoughness), undefined !== e.vertexColors && (i.vertexColors = e.vertexColors), undefined !== e.fog && (i.fog = e.fog), undefined !== e.flatShading && (i.flatShading = e.flatShading), undefined !== e.blending && (i.blending = e.blending), undefined !== e.combine && (i.combine = e.combine), undefined !== e.side && (i.side = e.side), undefined !== e.opacity && (i.opacity = e.opacity), undefined !== e.transparent && (i.transparent = e.transparent), undefined !== e.alphaTest && (i.alphaTest = e.alphaTest), undefined !== e.depthTest && (i.depthTest = e.depthTest), undefined !== e.depthWrite && (i.depthWrite = e.depthWrite), undefined !== e.colorWrite && (i.colorWrite = e.colorWrite), undefined !== e.wireframe && (i.wireframe = e.wireframe), undefined !== e.wireframeLinewidth && (i.wireframeLinewidth = e.wireframeLinewidth), undefined !== e.wireframeLinecap && (i.wireframeLinecap = e.wireframeLinecap), undefined !== e.wireframeLinejoin && (i.wireframeLinejoin = e.wireframeLinejoin), undefined !== e.rotation && (i.rotation = e.rotation), 1 !== e.linewidth && (i.linewidth = e.linewidth), undefined !== e.dashSize && (i.dashSize = e.dashSize), undefined !== e.gapSize && (i.gapSize = e.gapSize), undefined !== e.scale && (i.scale = e.scale), undefined !== e.polygonOffset && (i.polygonOffset = e.polygonOffset), undefined !== e.polygonOffsetFactor && (i.polygonOffsetFactor = e.polygonOffsetFactor), undefined !== e.polygonOffsetUnits && (i.polygonOffsetUnits = e.polygonOffsetUnits), undefined !== e.skinning && (i.skinning = e.skinning), undefined !== e.morphTargets && (i.morphTargets = e.morphTargets), undefined !== e.morphNormals && (i.morphNormals = e.morphNormals), undefined !== e.dithering && (i.dithering = e.dithering), undefined !== e.visible && (i.visible = e.visible), undefined !== e.toneMapped && (i.toneMapped = e.toneMapped), undefined !== e.userData && (i.userData = e.userData), undefined !== e.uniforms) for (var o in e.uniforms) {
      var s = e.uniforms[o];
      switch (i.uniforms[o] = {}, s.type) {
        case "t":
          i.uniforms[o].value = (undefined === t[s.value] && console.warn("THREE.MaterialLoader: Undefined texture", s.value), t[s.value]);
          break;
        case "c":
          i.uniforms[o].value = (new ri).setHex(s.value);
          break;
        case "v2":
          i.uniforms[o].value = (new Lt).fromArray(s.value);
          break;
        case "v3":
          i.uniforms[o].value = (new It).fromArray(s.value);
          break;
        case "v4":
          i.uniforms[o].value = (new Gt).fromArray(s.value);
          break;
        case "m3":
          i.uniforms[o].value = (new zt).fromArray(s.value);
        case "m4":
          i.uniforms[o].value = (new Qt).fromArray(s.value);
          break;
        default:
          i.uniforms[o].value = s.value;
      }
    }
    if (undefined !== e.defines && (i.defines = e.defines), undefined !== e.vertexShader && (i.vertexShader = e.vertexShader), undefined !== e.fragmentShader && (i.fragmentShader = e.fragmentShader), undefined !== e.extensions) for (var a in e.extensions) i.extensions[a] = e.extensions[a];
    if (undefined !== e.shading && (i.flatShading = 1 === e.shading), undefined !== e.size && (i.size = e.size), undefined !== e.sizeAttenuation && (i.sizeAttenuation = e.sizeAttenuation), undefined !== e.map && (i.map = (undefined === t[e.map] && console.warn("THREE.MaterialLoader: Undefined texture", e.map), t[e.map])), undefined !== e.matcap && (i.matcap = (undefined === t[e.matcap] && console.warn("THREE.MaterialLoader: Undefined texture", e.matcap), t[e.matcap])), undefined !== e.alphaMap && (i.alphaMap = (undefined === t[e.alphaMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.alphaMap), t[e.alphaMap]), i.transparent = true), undefined !== e.bumpMap && (i.bumpMap = (undefined === t[e.bumpMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.bumpMap), t[e.bumpMap])), undefined !== e.bumpScale && (i.bumpScale = e.bumpScale), undefined !== e.normalMap && (i.normalMap = (undefined === t[e.normalMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.normalMap), t[e.normalMap])), undefined !== e.normalMapType && (i.normalMapType = e.normalMapType), undefined !== e.normalScale) {
      var l = e.normalScale;
      false === Array.isArray(l) && (l = [l, l]), i.normalScale = (new Lt).fromArray(l);
    }
    return undefined !== e.displacementMap && (i.displacementMap = (undefined === t[e.displacementMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.displacementMap), t[e.displacementMap])), undefined !== e.displacementScale && (i.displacementScale = e.displacementScale), undefined !== e.displacementBias && (i.displacementBias = e.displacementBias), undefined !== e.roughnessMap && (i.roughnessMap = (undefined === t[e.roughnessMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.roughnessMap), t[e.roughnessMap])), undefined !== e.metalnessMap && (i.metalnessMap = (undefined === t[e.metalnessMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.metalnessMap), t[e.metalnessMap])), undefined !== e.emissiveMap && (i.emissiveMap = (undefined === t[e.emissiveMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.emissiveMap), t[e.emissiveMap])), undefined !== e.emissiveIntensity && (i.emissiveIntensity = e.emissiveIntensity), undefined !== e.specularMap && (i.specularMap = (undefined === t[e.specularMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.specularMap), t[e.specularMap])), undefined !== e.envMap && (i.envMap = (undefined === t[e.envMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.envMap), t[e.envMap])), undefined !== e.envMapIntensity && (i.envMapIntensity = e.envMapIntensity), undefined !== e.reflectivity && (i.reflectivity = e.reflectivity), undefined !== e.refractionRatio && (i.refractionRatio = e.refractionRatio), undefined !== e.lightMap && (i.lightMap = (undefined === t[e.lightMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.lightMap), t[e.lightMap])), undefined !== e.lightMapIntensity && (i.lightMapIntensity = e.lightMapIntensity), undefined !== e.aoMap && (i.aoMap = (undefined === t[e.aoMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.aoMap), t[e.aoMap])), undefined !== e.aoMapIntensity && (i.aoMapIntensity = e.aoMapIntensity), undefined !== e.gradientMap && (i.gradientMap = (undefined === t[e.gradientMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.gradientMap), t[e.gradientMap])), undefined !== e.clearcoatNormalMap && (i.clearcoatNormalMap = (undefined === t[e.clearcoatNormalMap] && console.warn("THREE.MaterialLoader: Undefined texture", e.clearcoatNormalMap), t[e.clearcoatNormalMap])), undefined !== e.clearcoatNormalScale && (i.clearcoatNormalScale = (new Lt).fromArray(e.clearcoatNormalScale)), i;
  }, setTextures: function (e) {
    return this.textures = e, this;
  }});
  var Qc = function (e) {
    var t = e.lastIndexOf("/");
    return -1 === t ? "./" : e.substr(0, t + 1);
  };
  function eh() {
    Ri.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = undefined;
  }
  function th(e, t, n, i) {
    "number" == typeof n && (i = n, n = false, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")), di.call(this, e, t, n), this.meshPerAttribute = i || 1;
  }
  function nh(e) {
    cc.call(this, e);
  }
  eh.prototype = Object.assign(Object.create(Ri.prototype), {constructor: eh, isInstancedBufferGeometry: true, copy: function (e) {
    return Ri.prototype.copy.call(this, e), this.maxInstancedCount = e.maxInstancedCount, this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, toJSON: function () {
    var e = Ri.prototype.toJSON.call(this);
    return e.maxInstancedCount = this.maxInstancedCount, e.isInstancedBufferGeometry = true, e;
  }}), th.prototype = Object.assign(Object.create(di.prototype), {constructor: th, isInstancedBufferAttribute: true, copy: function (e) {
    return di.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this;
  }, toJSON: function () {
    var e = di.prototype.toJSON.call(this);
    return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = true, e;
  }}), nh.prototype = Object.assign(Object.create(cc.prototype), {constructor: nh, load: function (e, t, n, i) {
    var r = this, o = new uc(r.manager);
    o.setPath(r.path), o.load(e, function (e) {
      t(r.parse(JSON.parse(e)));
    }, n, i);
  }, parse: function (e) {
    var t = e.isInstancedBufferGeometry ? new eh : new Ri, n = e.data.index;
    if (undefined !== n) {
      var i = new ih[n.type](n.array);
      t.setIndex(new di(i, 1));
    }
    var r = e.data.attributes;
    for (var o in r) {
      var s = r[o], a = (i = new ih[s.type](s.array), new (s.isInstancedBufferAttribute ? th : di)(i, s.itemSize, s.normalized));
      undefined !== s.name && (a.name = s.name), t.addAttribute(o, a);
    }
    var l = e.data.morphAttributes;
    if (l) for (var o in l) {
      for (var c = l[o], h = [], u = 0, d = c.length; u < d; u++) {
        s = c[u], a = new di(i = new ih[s.type](s.array), s.itemSize, s.normalized);
        undefined !== s.name && (a.name = s.name), h.push(a);
      }
      t.morphAttributes[o] = h;
    }
    var p = e.data.groups || e.data.drawcalls || e.data.offsets;
    if (undefined !== p) {
      u = 0;
      for (var m = p.length; u !== m; ++u) {
        var f = p[u];
        t.addGroup(f.start, f.count, f.materialIndex);
      }
    }
    var g = e.data.boundingSphere;
    if (undefined !== g) {
      var v = new It;
      undefined !== g.center && v.fromArray(g.center), t.boundingSphere = new On(v, g.radius);
    }
    return e.name && (t.name = e.name), e.userData && (t.userData = e.userData), t;
  }});
  var ih = {Int8Array: Int8Array, Uint8Array: Uint8Array, Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array, Int16Array: Int16Array, Uint16Array: Uint16Array, Int32Array: Int32Array, Uint32Array: Uint32Array, Float32Array: Float32Array, Float64Array: Float64Array};
  function rh(e) {
    cc.call(this, e);
  }
  rh.prototype = Object.assign(Object.create(cc.prototype), {constructor: rh, load: function (e, t, n, i) {
    var r = this, o = "" === this.path ? Qc(e) : this.path;
    this.resourcePath = this.resourcePath || o;
    var s = new uc(r.manager);
    s.setPath(this.path), s.load(e, function (n) {
      var o = null;
      try {
        o = JSON.parse(n);
      } catch (t) {
        return undefined !== i && i(t), void console.error("THREE:ObjectLoader: Can't parse " + e + ".", t.message);
      }
      var s = o.metadata;
      undefined !== s && undefined !== s.type && "geometry" !== s.type.toLowerCase() ? r.parse(o, t) : console.error("THREE.ObjectLoader: Can't load " + e);
    }, n, i);
  }, parse: function (e, t) {
    var n = this.parseShape(e.shapes), i = this.parseGeometries(e.geometries, n), r = this.parseImages(e.images, function () {
      undefined !== t && t(a);
    }), o = this.parseTextures(e.textures, r), s = this.parseMaterials(e.materials, o), a = this.parseObject(e.object, i, s);
    return e.animations && (a.animations = this.parseAnimations(e.animations)), undefined !== e.images && 0 !== e.images.length || undefined !== t && t(a), a;
  }, parseShape: function (e) {
    var t = {};
    if (undefined !== e) for (var n = 0, i = e.length; n < i; n++) {
      var r = (new zc).fromJSON(e[n]);
      t[r.uuid] = r;
    }
    return t;
  }, parseGeometries: function (e, t) {
    var n = {};
    if (undefined !== e) for (var r = new nh, s = 0, a = e.length; s < a; s++) {
      var l, c = e[s];
      switch (c.type) {
        case "PlaneGeometry":
        case "PlaneBufferGeometry":
          l = new i[c.type](c.width, c.height, c.widthSegments, c.heightSegments);
          break;
        case "BoxGeometry":
        case "BoxBufferGeometry":
        case "CubeGeometry":
          l = new i[c.type](c.width, c.height, c.depth, c.widthSegments, c.heightSegments, c.depthSegments);
          break;
        case "CircleGeometry":
        case "CircleBufferGeometry":
          l = new i[c.type](c.radius, c.segments, c.thetaStart, c.thetaLength);
          break;
        case "CylinderGeometry":
        case "CylinderBufferGeometry":
          l = new i[c.type](c.radiusTop, c.radiusBottom, c.height, c.radialSegments, c.heightSegments, c.openEnded, c.thetaStart, c.thetaLength);
          break;
        case "ConeGeometry":
        case "ConeBufferGeometry":
          l = new i[c.type](c.radius, c.height, c.radialSegments, c.heightSegments, c.openEnded, c.thetaStart, c.thetaLength);
          break;
        case "SphereGeometry":
        case "SphereBufferGeometry":
          l = new i[c.type](c.radius, c.widthSegments, c.heightSegments, c.phiStart, c.phiLength, c.thetaStart, c.thetaLength);
          break;
        case "DodecahedronGeometry":
        case "DodecahedronBufferGeometry":
        case "IcosahedronGeometry":
        case "IcosahedronBufferGeometry":
        case "OctahedronGeometry":
        case "OctahedronBufferGeometry":
        case "TetrahedronGeometry":
        case "TetrahedronBufferGeometry":
          l = new i[c.type](c.radius, c.detail);
          break;
        case "RingGeometry":
        case "RingBufferGeometry":
          l = new i[c.type](c.innerRadius, c.outerRadius, c.thetaSegments, c.phiSegments, c.thetaStart, c.thetaLength);
          break;
        case "TorusGeometry":
        case "TorusBufferGeometry":
          l = new i[c.type](c.radius, c.tube, c.radialSegments, c.tubularSegments, c.arc);
          break;
        case "TorusKnotGeometry":
        case "TorusKnotBufferGeometry":
          l = new i[c.type](c.radius, c.tube, c.tubularSegments, c.radialSegments, c.p, c.q);
          break;
        case "TubeGeometry":
        case "TubeBufferGeometry":
          l = new i[c.type]((new o[c.path.type]).fromJSON(c.path), c.tubularSegments, c.radius, c.radialSegments, c.closed);
          break;
        case "LatheGeometry":
        case "LatheBufferGeometry":
          l = new i[c.type](c.points, c.segments, c.phiStart, c.phiLength);
          break;
        case "PolyhedronGeometry":
        case "PolyhedronBufferGeometry":
          l = new i[c.type](c.vertices, c.indices, c.radius, c.details);
          break;
        case "ShapeGeometry":
        case "ShapeBufferGeometry":
          for (var h = [], u = 0, d = c.shapes.length; u < d; u++) {
            var p = t[c.shapes[u]];
            h.push(p);
          }
          l = new i[c.type](h, c.curveSegments);
          break;
        case "ExtrudeGeometry":
        case "ExtrudeBufferGeometry":
          for (h = [], u = 0, d = c.shapes.length; u < d; u++) {
            p = t[c.shapes[u]];
            h.push(p);
          }
          var m = c.options.extrudePath;
          undefined !== m && (c.options.extrudePath = (new o[m.type]).fromJSON(m)), l = new i[c.type](h, c.options);
          break;
        case "BufferGeometry":
        case "InstancedBufferGeometry":
          l = r.parse(c);
          break;
        case "Geometry":
          if ("THREE" in window && "LegacyJSONLoader" in THREE) l = (new THREE.LegacyJSONLoader).parse(c, this.resourcePath).geometry; else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');
          break;
        default:
          console.warn('THREE.ObjectLoader: Unsupported geometry type "' + c.type + '"');
          continue;
      }
      l.uuid = c.uuid, undefined !== c.name && (l.name = c.name), true === l.isBufferGeometry && undefined !== c.userData && (l.userData = c.userData), n[c.uuid] = l;
    }
    return n;
  }, parseMaterials: function (e, t) {
    var n = {}, i = {};
    if (undefined !== e) {
      var r = new Zc;
      r.setTextures(t);
      for (var o = 0, s = e.length; o < s; o++) {
        var a = e[o];
        if ("MultiMaterial" === a.type) {
          for (var l = [], c = 0; c < a.materials.length; c++) {
            var h = a.materials[c];
            undefined === n[h.uuid] && (n[h.uuid] = r.parse(h)), l.push(n[h.uuid]);
          }
          i[a.uuid] = l;
        } else undefined === n[a.uuid] && (n[a.uuid] = r.parse(a)), i[a.uuid] = n[a.uuid];
      }
    }
    return i;
  }, parseAnimations: function (e) {
    for (var t = [], n = 0; n < e.length; n++) {
      var i = e[n], r = rc.parse(i);
      undefined !== i.uuid && (r.uuid = i.uuid), t.push(r);
    }
    return t;
  }, parseImages: function (e, t) {
    var n = this, i = {};
    function r(e) {
      return n.manager.itemStart(e), o.load(e, function () {
        n.manager.itemEnd(e);
      }, undefined, function () {
        n.manager.itemError(e), n.manager.itemEnd(e);
      });
    }
    if (undefined !== e && e.length > 0) {
      var o = new fc(new ac(t));
      o.setCrossOrigin(this.crossOrigin);
      for (var s = 0, a = e.length; s < a; s++) {
        var l = e[s], c = l.url;
        if (Array.isArray(c)) {
          i[l.uuid] = [];
          for (var h = 0, u = c.length; h < u; h++) {
            var d = c[h], p = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(d) ? d : n.resourcePath + d;
            i[l.uuid].push(r(p));
          }
        } else {
          p = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url) ? l.url : n.resourcePath + l.url;
          i[l.uuid] = r(p);
        }
      }
    }
    return i;
  }, parseTextures: function (e, t) {
    function n(e, t) {
      return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e), t[e]);
    }
    var i = {};
    if (undefined !== e) for (var r = 0, o = e.length; r < o; r++) {
      var s, a = e[r];
      undefined === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), undefined === t[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image), (s = Array.isArray(t[a.image]) ? new Vr(t[a.image]) : new Vt(t[a.image])).needsUpdate = true, s.uuid = a.uuid, undefined !== a.name && (s.name = a.name), undefined !== a.mapping && (s.mapping = n(a.mapping, sh)), undefined !== a.offset && s.offset.fromArray(a.offset), undefined !== a.repeat && s.repeat.fromArray(a.repeat), undefined !== a.center && s.center.fromArray(a.center), undefined !== a.rotation && (s.rotation = a.rotation), undefined !== a.wrap && (s.wrapS = n(a.wrap[0], ah), s.wrapT = n(a.wrap[1], ah)), undefined !== a.format && (s.format = a.format), undefined !== a.type && (s.type = a.type), undefined !== a.encoding && (s.encoding = a.encoding), undefined !== a.minFilter && (s.minFilter = n(a.minFilter, lh)), undefined !== a.magFilter && (s.magFilter = n(a.magFilter, lh)), undefined !== a.anisotropy && (s.anisotropy = a.anisotropy), undefined !== a.flipY && (s.flipY = a.flipY), undefined !== a.premultiplyAlpha && (s.premultiplyAlpha = a.premultiplyAlpha), undefined !== a.unpackAlignment && (s.unpackAlignment = a.unpackAlignment), i[a.uuid] = s;
    }
    return i;
  }, parseObject: function (e, t, n) {
    var i;
    function r(e) {
      return undefined === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e), t[e];
    }
    function o(e) {
      if (undefined !== e) {
        if (Array.isArray(e)) {
          for (var t = [], i = 0, r = e.length; i < r; i++) {
            var o = e[i];
            undefined === n[o] && console.warn("THREE.ObjectLoader: Undefined material", o), t.push(n[o]);
          }
          return t;
        }
        return undefined === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e), n[e];
      }
    }
    switch (e.type) {
      case "Scene":
        i = new _n, undefined !== e.background && Number.isInteger(e.background) && (i.background = new ri(e.background)), undefined !== e.fog && ("Fog" === e.fog.type ? i.fog = new Ms(e.fog.color, e.fog.near, e.fog.far) : "FogExp2" === e.fog.type && (i.fog = new As(e.fog.color, e.fog.density)));
        break;
      case "PerspectiveCamera":
        i = new ur(e.fov, e.aspect, e.near, e.far), undefined !== e.focus && (i.focus = e.focus), undefined !== e.zoom && (i.zoom = e.zoom), undefined !== e.filmGauge && (i.filmGauge = e.filmGauge), undefined !== e.filmOffset && (i.filmOffset = e.filmOffset), undefined !== e.view && (i.view = Object.assign({}, e.view));
        break;
      case "OrthographicCamera":
        i = new Wc(e.left, e.right, e.top, e.bottom, e.near, e.far), undefined !== e.zoom && (i.zoom = e.zoom), undefined !== e.view && (i.view = Object.assign({}, e.view));
        break;
      case "AmbientLight":
        i = new Jc(e.color, e.intensity);
        break;
      case "DirectionalLight":
        i = new Yc(e.color, e.intensity);
        break;
      case "PointLight":
        i = new $c(e.color, e.intensity, e.distance, e.decay);
        break;
      case "RectAreaLight":
        i = new Kc(e.color, e.intensity, e.width, e.height);
        break;
      case "SpotLight":
        i = new Hc(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
        break;
      case "HemisphereLight":
        i = new Uc(e.color, e.groundColor, e.intensity);
        break;
      case "SkinnedMesh":
        console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
      case "Mesh":
        var s = (undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), a = o(e.material);
        i = s.bones && s.bones.length > 0 ? new Ys(s, a) : new Yi(s, a), undefined !== e.drawMode && i.setDrawMode(e.drawMode);
        break;
      case "LOD":
        i = new Xs;
        break;
      case "Line":
        i = new sa((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material), e.mode);
        break;
      case "LineLoop":
        i = new ha((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material));
        break;
      case "LineSegments":
        i = new ca((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material));
        break;
      case "PointCloud":
      case "Points":
        i = new va((undefined === t[e.geometry] && console.warn("THREE.ObjectLoader: Undefined geometry", e.geometry), t[e.geometry]), o(e.material));
        break;
      case "Sprite":
        i = new Hs(o(e.material));
        break;
      case "Group":
        i = new ys;
        break;
      default:
        i = new yn;
    }
    if (i.uuid = e.uuid, undefined !== e.name && (i.name = e.name), undefined !== e.matrix ? (i.matrix.fromArray(e.matrix), undefined !== e.matrixAutoUpdate && (i.matrixAutoUpdate = e.matrixAutoUpdate), i.matrixAutoUpdate && i.matrix.decompose(i.position, i.quaternion, i.scale)) : (undefined !== e.position && i.position.fromArray(e.position), undefined !== e.rotation && i.rotation.fromArray(e.rotation), undefined !== e.quaternion && i.quaternion.fromArray(e.quaternion), undefined !== e.scale && i.scale.fromArray(e.scale)), undefined !== e.castShadow && (i.castShadow = e.castShadow), undefined !== e.receiveShadow && (i.receiveShadow = e.receiveShadow), e.shadow && (undefined !== e.shadow.bias && (i.shadow.bias = e.shadow.bias), undefined !== e.shadow.radius && (i.shadow.radius = e.shadow.radius), undefined !== e.shadow.mapSize && i.shadow.mapSize.fromArray(e.shadow.mapSize), undefined !== e.shadow.camera && (i.shadow.camera = this.parseObject(e.shadow.camera))), undefined !== e.visible && (i.visible = e.visible), undefined !== e.frustumCulled && (i.frustumCulled = e.frustumCulled), undefined !== e.renderOrder && (i.renderOrder = e.renderOrder), undefined !== e.userData && (i.userData = e.userData), undefined !== e.layers && (i.layers.mask = e.layers), undefined !== e.children) for (var l = e.children, c = 0; c < l.length; c++) i.add(this.parseObject(l[c], t, n));
    if ("LOD" === e.type) for (var h = e.levels, u = 0; u < h.length; u++) {
      var d = h[u], p = i.getObjectByProperty("uuid", d.object);
      undefined !== p && i.addLevel(p, d.distance);
    }
    return i;
  }});
  var oh, sh = {UVMapping: 300, CubeReflectionMapping: oe, CubeRefractionMapping: se, EquirectangularReflectionMapping: ae, EquirectangularRefractionMapping: le, SphericalReflectionMapping: ce, CubeUVReflectionMapping: he, CubeUVRefractionMapping: ue}, ah = {RepeatWrapping: de, ClampToEdgeWrapping: pe, MirroredRepeatWrapping: me}, lh = {NearestFilter: fe, NearestMipmapNearestFilter: ge, NearestMipmapLinearFilter: ve, LinearFilter: ye, LinearMipmapNearestFilter: _e, LinearMipmapLinearFilter: xe};
  function ch(e) {
    "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), cc.call(this, e), this.options = undefined;
  }
  function hh() {
    this.type = "ShapePath", this.color = new ri, this.subPaths = [], this.currentPath = null;
  }
  function uh(e) {
    this.type = "Font", this.data = e;
  }
  function dh(e, t, n, i, r) {
    var o = r.glyphs[e] || r.glyphs["?"];
    if (o) {
      var s, a, l, c, h, u, d, p, m = new hh;
      if (o.o) for (var f = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), g = 0, v = f.length; g < v;) {
        switch (f[g++]) {
          case "m":
            s = f[g++] * t + n, a = f[g++] * t + i, m.moveTo(s, a);
            break;
          case "l":
            s = f[g++] * t + n, a = f[g++] * t + i, m.lineTo(s, a);
            break;
          case "q":
            l = f[g++] * t + n, c = f[g++] * t + i, h = f[g++] * t + n, u = f[g++] * t + i, m.quadraticCurveTo(h, u, l, c);
            break;
          case "b":
            l = f[g++] * t + n, c = f[g++] * t + i, h = f[g++] * t + n, u = f[g++] * t + i, d = f[g++] * t + n, p = f[g++] * t + i, m.bezierCurveTo(h, u, d, p, l, c);
        }
      }
      return {offsetX: o.ha * t, path: m};
    }
    console.error('THREE.Font: character "' + e + '" does not exists in font family ' + r.familyName + ".");
  }
  function ph(e) {
    cc.call(this, e);
  }
  ch.prototype = Object.assign(Object.create(cc.prototype), {constructor: ch, setOptions: function (e) {
    return this.options = e, this;
  }, load: function (e, t, n, i) {
    undefined === e && (e = ""), undefined !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
    var r = this, o = sc.get(e);
    if (undefined !== o) return r.manager.itemStart(e), setTimeout(function () {
      t && t(o), r.manager.itemEnd(e);
    }, 0), o;
    fetch(e).then(function (e) {
      return e.blob();
    }).then(function (e) {
      return undefined === r.options ? createImageBitmap(e) : createImageBitmap(e, r.options);
    }).then(function (n) {
      sc.add(e, n), t && t(n), r.manager.itemEnd(e);
    }).catch(function (t) {
      i && i(t), r.manager.itemError(e), r.manager.itemEnd(e);
    }), r.manager.itemStart(e);
  }}), Object.assign(hh.prototype, {moveTo: function (e, t) {
    this.currentPath = new Fc, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t);
  }, lineTo: function (e, t) {
    this.currentPath.lineTo(e, t);
  }, quadraticCurveTo: function (e, t, n, i) {
    this.currentPath.quadraticCurveTo(e, t, n, i);
  }, bezierCurveTo: function (e, t, n, i, r, o) {
    this.currentPath.bezierCurveTo(e, t, n, i, r, o);
  }, splineThru: function (e) {
    this.currentPath.splineThru(e);
  }, toShapes: function (e, t) {
    function n(e) {
      for (var t = [], n = 0, i = e.length; n < i; n++) {
        var r = e[n], o = new zc;
        o.curves = r.curves, t.push(o);
      }
      return t;
    }
    function i(e, t) {
      for (var n = t.length, i = false, r = n - 1, o = 0; o < n; r = o++) {
        var s = t[r], a = t[o], l = a.x - s.x, c = a.y - s.y;
        if (Math.abs(c) > Number.EPSILON) {
          if (c < 0 && (s = t[o], l = -l, a = t[r], c = -c), e.y < s.y || e.y > a.y) continue;
          if (e.y === s.y) {
            if (e.x === s.x) return true;
          } else {
            var h = c * (e.x - s.x) - l * (e.y - s.y);
            if (0 === h) return true;
            if (h < 0) continue;
            i = !i;
          }
        } else {
          if (e.y !== s.y) continue;
          if (a.x <= e.x && e.x <= s.x || s.x <= e.x && e.x <= a.x) return true;
        }
      }
      return i;
    }
    var r = hl.isClockWise, o = this.subPaths;
    if (0 === o.length) return [];
    if (true === t) return n(o);
    var s, a, l, c = [];
    if (1 === o.length) return a = o[0], (l = new zc).curves = a.curves, c.push(l), c;
    var h = !r(o[0].getPoints());
    h = e ? !h : h;
    var u, d, p = [], m = [], f = [], g = 0;
    m[g] = undefined, f[g] = [];
    for (var v = 0, y = o.length; v < y; v++) s = r(u = (a = o[v]).getPoints()), (s = e ? !s : s) ? (!h && m[g] && g++, m[g] = {s: new zc, p: u}, m[g].s.curves = a.curves, h && g++, f[g] = []) : f[g].push({h: a, p: u[0]});
    if (!m[0]) return n(o);
    if (m.length > 1) {
      for (var _ = false, x = [], b = 0, w = m.length; b < w; b++) p[b] = [];
      for (b = 0, w = m.length; b < w; b++) for (var S = f[b], E = 0; E < S.length; E++) {
        for (var q = S[E], T = true, A = 0; A < m.length; A++) i(q.p, m[A].p) && (b !== A && x.push({froms: b, tos: A, hole: E}), T ? (T = false, p[A].push(q)) : _ = true);
        T && p[b].push(q);
      }
      x.length > 0 && (_ || (f = p));
    }
    v = 0;
    for (var M = m.length; v < M; v++) {
      l = m[v].s, c.push(l);
      for (var C = 0, k = (d = f[v]).length; C < k; C++) l.holes.push(d[C].h);
    }
    return c;
  }}), Object.assign(uh.prototype, {isFont: true, generateShapes: function (e, t) {
    undefined === t && (t = 100);
    for (var n = [], i = function (e, t, n) {
      for (var i = Array.from ? Array.from(e) : String(e).split(""), r = t / n.resolution, o = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * r, s = [], a = 0, l = 0, c = 0; c < i.length; c++) {
        var h = i[c];
        if ("\n" === h) a = 0, l -= o; else {
          var u = dh(h, r, a, l, n);
          a += u.offsetX, s.push(u.path);
        }
      }
      return s;
    }(e, t, this.data), r = 0, o = i.length; r < o; r++) Array.prototype.push.apply(n, i[r].toShapes());
    return n;
  }}), ph.prototype = Object.assign(Object.create(cc.prototype), {constructor: ph, load: function (e, t, n, i) {
    var r = this, o = new uc(this.manager);
    o.setPath(this.path), o.load(e, function (e) {
      var n;
      try {
        n = JSON.parse(e);
      } catch (t) {
        console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), n = JSON.parse(e.substring(65, e.length - 2));
      }
      var i = r.parse(n);
      t && t(i);
    }, n, i);
  }, parse: function (e) {
    return new uh(e);
  }});
  var mh = {getContext: function () {
    return undefined === oh && (oh = new (window.AudioContext || window.webkitAudioContext)), oh;
  }, setContext: function (e) {
    oh = e;
  }};
  function fh(e) {
    cc.call(this, e);
  }
  function gh() {
    this.coefficients = [];
    for (var e = 0; e < 9; e++) this.coefficients.push(new It);
  }
  function vh(e, t) {
    Nc.call(this, undefined, t), this.sh = undefined !== e ? e : new gh;
  }
  function yh(e, t, n) {
    vh.call(this, undefined, n);
    var i = (new ri).set(e), r = (new ri).set(t), o = new It(i.r, i.g, i.b), s = new It(r.r, r.g, r.b), a = Math.sqrt(Math.PI), l = a * Math.sqrt(0.75);
    this.sh.coefficients[0].copy(o).add(s).multiplyScalar(a), this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(l);
  }
  function _h(e, t) {
    vh.call(this, undefined, t);
    var n = (new ri).set(e);
    this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));
  }
  fh.prototype = Object.assign(Object.create(cc.prototype), {constructor: fh, load: function (e, t, n, i) {
    var r = new uc(this.manager);
    r.setResponseType("arraybuffer"), r.setPath(this.path), r.load(e, function (e) {
      var n = e.slice(0);
      mh.getContext().decodeAudioData(n, function (e) {
        t(e);
      });
    }, n, i);
  }}), Object.assign(gh.prototype, {isSphericalHarmonics3: true, set: function (e) {
    for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
    return this;
  }, zero: function () {
    for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
    return this;
  }, getAt: function (e, t) {
    var n = e.x, i = e.y, r = e.z, o = this.coefficients;
    return t.copy(o[0]).multiplyScalar(0.282095), t.addScale(o[1], 0.488603 * i), t.addScale(o[2], 0.488603 * r), t.addScale(o[3], 0.488603 * n), t.addScale(o[4], n * i * 1.092548), t.addScale(o[5], i * r * 1.092548), t.addScale(o[6], 0.315392 * (3 * r * r - 1)), t.addScale(o[7], n * r * 1.092548), t.addScale(o[8], 0.546274 * (n * n - i * i)), t;
  }, getIrradianceAt: function (e, t) {
    var n = e.x, i = e.y, r = e.z, o = this.coefficients;
    return t.copy(o[0]).multiplyScalar(0.886227), t.addScale(o[1], 1.023328 * i), t.addScale(o[2], 1.023328 * r), t.addScale(o[3], 1.023328 * n), t.addScale(o[4], 0.858086 * n * i), t.addScale(o[5], 0.858086 * i * r), t.addScale(o[6], 0.743125 * r * r - 0.247708), t.addScale(o[7], 0.858086 * n * r), t.addScale(o[8], 0.429043 * (n * n - i * i)), t;
  }, add: function (e) {
    for (var t = 0; t < 9; t++) this.coefficients[t].add(e.coefficients[t]);
    return this;
  }, scale: function (e) {
    for (var t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
    return this;
  }, lerp: function (e, t) {
    for (var n = 0; n < 9; n++) this.coefficients[n].lerp(e.coefficients[n], t);
    return this;
  }, equals: function (e) {
    for (var t = 0; t < 9; t++) if (!this.coefficients[t].equals(e.coefficients[t])) return false;
    return true;
  }, copy: function (e) {
    return this.set(e.coefficients);
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, fromArray: function (e, t) {
    undefined === t && (t = 0);
    for (var n = this.coefficients, i = 0; i < 9; i++) n[i].fromArray(e, t + 3 * i);
    return this;
  }, toArray: function (e, t) {
    undefined === e && (e = []), undefined === t && (t = 0);
    for (var n = this.coefficients, i = 0; i < 9; i++) n[i].toArray(e, t + 3 * i);
    return e;
  }}), Object.assign(gh, {getBasisAt: function (e, t) {
    var n = e.x, i = e.y, r = e.z;
    t[0] = 0.282095, t[1] = 0.488603 * i, t[2] = 0.488603 * r, t[3] = 0.488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = 0.315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = 0.546274 * (n * n - i * i);
  }}), vh.prototype = Object.assign(Object.create(Nc.prototype), {constructor: vh, isLightProbe: true, copy: function (e) {
    return Nc.prototype.copy.call(this, e), this.sh.copy(e.sh), this.intensity = e.intensity, this;
  }, toJSON: function (e) {
    return Nc.prototype.toJSON.call(this, e);
  }}), yh.prototype = Object.assign(Object.create(vh.prototype), {constructor: yh, isHemisphereLightProbe: true, copy: function (e) {
    return vh.prototype.copy.call(this, e), this;
  }, toJSON: function (e) {
    return vh.prototype.toJSON.call(this, e);
  }}), _h.prototype = Object.assign(Object.create(vh.prototype), {constructor: _h, isAmbientLightProbe: true, copy: function (e) {
    return vh.prototype.copy.call(this, e), this;
  }, toJSON: function (e) {
    return vh.prototype.toJSON.call(this, e);
  }});
  var xh = new Qt, bh = new Qt;
  function wh(e) {
    this.autoStart = undefined === e || e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = false;
  }
  Object.assign(function () {
    this.type = "StereoCamera", this.aspect = 1, this.eyeSep = 0.064, this.cameraL = new ur, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = false, this.cameraR = new ur, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = false, this._cache = {focus: null, fov: null, aspect: null, near: null, far: null, zoom: null, eyeSep: null};
  }.prototype, {update: function (e) {
    var t = this._cache;
    if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
      t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep;
      var n, i, r = e.projectionMatrix.clone(), o = t.eyeSep / 2, s = o * t.near / t.focus, a = t.near * Math.tan(Rt.DEG2RAD * t.fov * 0.5) / t.zoom;
      bh.elements[12] = -o, xh.elements[12] = o, n = -a * t.aspect + s, i = a * t.aspect + s, r.elements[0] = 2 * t.near / (i - n), r.elements[8] = (i + n) / (i - n), this.cameraL.projectionMatrix.copy(r), n = -a * t.aspect - s, i = a * t.aspect - s, r.elements[0] = 2 * t.near / (i - n), r.elements[8] = (i + n) / (i - n), this.cameraR.projectionMatrix.copy(r);
    }
    this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(bh), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(xh);
  }}), Object.assign(wh.prototype, {start: function () {
    this.startTime = ("undefined" == typeof performance ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = true;
  }, stop: function () {
    this.getElapsedTime(), this.running = false, this.autoStart = false;
  }, getElapsedTime: function () {
    return this.getDelta(), this.elapsedTime;
  }, getDelta: function () {
    var e = 0;
    if (this.autoStart && !this.running) return this.start(), 0;
    if (this.running) {
      var t = ("undefined" == typeof performance ? Date : performance).now();
      e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
    }
    return e;
  }});
  var Sh = new It, Eh = new Pt, qh = new It, Th = new It;
  function Ah() {
    yn.call(this), this.type = "AudioListener", this.context = mh.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new wh;
  }
  function Mh(e) {
    yn.call(this), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = false, this.buffer = null, this.detune = 0, this.loop = false, this.startTime = 0, this.offset = 0, this.duration = undefined, this.playbackRate = 1, this.isPlaying = false, this.hasPlaybackControl = true, this.sourceType = "empty", this.filters = [];
  }
  Ah.prototype = Object.assign(Object.create(yn.prototype), {constructor: Ah, getInput: function () {
    return this.gain;
  }, removeFilter: function () {
    return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
  }, getFilter: function () {
    return this.filter;
  }, setFilter: function (e) {
    return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
  }, getMasterVolume: function () {
    return this.gain.gain.value;
  }, setMasterVolume: function (e) {
    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this;
  }, updateMatrixWorld: function (e) {
    yn.prototype.updateMatrixWorld.call(this, e);
    var t = this.context.listener, n = this.up;
    if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Sh, Eh, qh), Th.set(0, 0, -1).applyQuaternion(Eh), t.positionX) {
      var i = this.context.currentTime + this.timeDelta;
      t.positionX.linearRampToValueAtTime(Sh.x, i), t.positionY.linearRampToValueAtTime(Sh.y, i), t.positionZ.linearRampToValueAtTime(Sh.z, i), t.forwardX.linearRampToValueAtTime(Th.x, i), t.forwardY.linearRampToValueAtTime(Th.y, i), t.forwardZ.linearRampToValueAtTime(Th.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
    } else t.setPosition(Sh.x, Sh.y, Sh.z), t.setOrientation(Th.x, Th.y, Th.z, n.x, n.y, n.z);
  }}), Mh.prototype = Object.assign(Object.create(yn.prototype), {constructor: Mh, getOutput: function () {
    return this.gain;
  }, setNodeSource: function (e) {
    return this.hasPlaybackControl = false, this.sourceType = "audioNode", this.source = e, this.connect(), this;
  }, setMediaElementSource: function (e) {
    return this.hasPlaybackControl = false, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
  }, setBuffer: function (e) {
    return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
  }, play: function () {
    if (true !== this.isPlaying) {
      if (false !== this.hasPlaybackControl) {
        var e = this.context.createBufferSource();
        return e.buffer = this.buffer, e.loop = this.loop, e.onended = this.onEnded.bind(this), this.startTime = this.context.currentTime, e.start(this.startTime, this.offset, this.duration), this.isPlaying = true, this.source = e, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
      }
      console.warn("THREE.Audio: this Audio has no playback control.");
    } else console.warn("THREE.Audio: Audio is already playing.");
  }, pause: function () {
    if (false !== this.hasPlaybackControl) return true === this.isPlaying && (this.source.stop(), this.source.onended = null, this.offset += (this.context.currentTime - this.startTime) * this.playbackRate, this.isPlaying = false), this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, stop: function () {
    if (false !== this.hasPlaybackControl) return this.source.stop(), this.source.onended = null, this.offset = 0, this.isPlaying = false, this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, connect: function () {
    if (this.filters.length > 0) {
      this.source.connect(this.filters[0]);
      for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].connect(this.filters[e]);
      this.filters[this.filters.length - 1].connect(this.getOutput());
    } else this.source.connect(this.getOutput());
    return this;
  }, disconnect: function () {
    if (this.filters.length > 0) {
      this.source.disconnect(this.filters[0]);
      for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].disconnect(this.filters[e]);
      this.filters[this.filters.length - 1].disconnect(this.getOutput());
    } else this.source.disconnect(this.getOutput());
    return this;
  }, getFilters: function () {
    return this.filters;
  }, setFilters: function (e) {
    return e || (e = []), true === this.isPlaying ? (this.disconnect(), this.filters = e, this.connect()) : this.filters = e, this;
  }, setDetune: function (e) {
    if (this.detune = e, undefined !== this.source.detune) return true === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01), this;
  }, getDetune: function () {
    return this.detune;
  }, getFilter: function () {
    return this.getFilters()[0];
  }, setFilter: function (e) {
    return this.setFilters(e ? [e] : []);
  }, setPlaybackRate: function (e) {
    if (false !== this.hasPlaybackControl) return this.playbackRate = e, true === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01), this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, getPlaybackRate: function () {
    return this.playbackRate;
  }, onEnded: function () {
    this.isPlaying = false;
  }, getLoop: function () {
    return false === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), false) : this.loop;
  }, setLoop: function (e) {
    if (false !== this.hasPlaybackControl) return this.loop = e, true === this.isPlaying && (this.source.loop = this.loop), this;
    console.warn("THREE.Audio: this Audio has no playback control.");
  }, getVolume: function () {
    return this.gain.gain.value;
  }, setVolume: function (e) {
    return this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01), this;
  }});
  var Ch = new It, kh = new Pt, Rh = new It, Lh = new It;
  function Ph(e) {
    Mh.call(this, e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
  }
  function Dh(e, t) {
    this.analyser = e.context.createAnalyser(), this.analyser.fftSize = undefined !== t ? t : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
  }
  function Oh(e, t, n) {
    this.binding = e, this.valueSize = n;
    var i, r = Float64Array;
    switch (t) {
      case "quaternion":
        i = this._slerp;
        break;
      case "string":
      case "bool":
        r = Array, i = this._select;
        break;
      default:
        i = this._lerp;
    }
    this.buffer = new r(4 * n), this._mixBufferRegion = i, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0;
  }
  Ph.prototype = Object.assign(Object.create(Mh.prototype), {constructor: Ph, getOutput: function () {
    return this.panner;
  }, getRefDistance: function () {
    return this.panner.refDistance;
  }, setRefDistance: function (e) {
    return this.panner.refDistance = e, this;
  }, getRolloffFactor: function () {
    return this.panner.rolloffFactor;
  }, setRolloffFactor: function (e) {
    return this.panner.rolloffFactor = e, this;
  }, getDistanceModel: function () {
    return this.panner.distanceModel;
  }, setDistanceModel: function (e) {
    return this.panner.distanceModel = e, this;
  }, getMaxDistance: function () {
    return this.panner.maxDistance;
  }, setMaxDistance: function (e) {
    return this.panner.maxDistance = e, this;
  }, setDirectionalCone: function (e, t, n) {
    return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
  }, updateMatrixWorld: function (e) {
    if (yn.prototype.updateMatrixWorld.call(this, e), true !== this.hasPlaybackControl || false !== this.isPlaying) {
      this.matrixWorld.decompose(Ch, kh, Rh), Lh.set(0, 0, 1).applyQuaternion(kh);
      var t = this.panner;
      if (t.positionX) {
        var n = this.context.currentTime + this.listener.timeDelta;
        t.positionX.linearRampToValueAtTime(Ch.x, n), t.positionY.linearRampToValueAtTime(Ch.y, n), t.positionZ.linearRampToValueAtTime(Ch.z, n), t.orientationX.linearRampToValueAtTime(Lh.x, n), t.orientationY.linearRampToValueAtTime(Lh.y, n), t.orientationZ.linearRampToValueAtTime(Lh.z, n);
      } else t.setPosition(Ch.x, Ch.y, Ch.z), t.setOrientation(Lh.x, Lh.y, Lh.z);
    }
  }}), Object.assign(Dh.prototype, {getFrequencyData: function () {
    return this.analyser.getByteFrequencyData(this.data), this.data;
  }, getAverageFrequency: function () {
    for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++) e += t[n];
    return e / t.length;
  }}), Object.assign(Oh.prototype, {accumulate: function (e, t) {
    var n = this.buffer, i = this.valueSize, r = e * i + i, o = this.cumulativeWeight;
    if (0 === o) {
      for (var s = 0; s !== i; ++s) n[r + s] = n[s];
      o = t;
    } else {
      var a = t / (o += t);
      this._mixBufferRegion(n, r, 0, a, i);
    }
    this.cumulativeWeight = o;
  }, apply: function (e) {
    var t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, o = this.binding;
    if (this.cumulativeWeight = 0, r < 1) {
      var s = 3 * t;
      this._mixBufferRegion(n, i, s, 1 - r, t);
    }
    for (var a = t, l = t + t; a !== l; ++a) if (n[a] !== n[a + t]) {
      o.setValue(n, i);
      break;
    }
  }, saveOriginalState: function () {
    var e = this.binding, t = this.buffer, n = this.valueSize, i = 3 * n;
    e.getValue(t, i);
    for (var r = n, o = i; r !== o; ++r) t[r] = t[i + r % n];
    this.cumulativeWeight = 0;
  }, restoreOriginalState: function () {
    var e = 3 * this.valueSize;
    this.binding.setValue(this.buffer, e);
  }, _select: function (e, t, n, i, r) {
    if (i >= 0.5) for (var o = 0; o !== r; ++o) e[t + o] = e[n + o];
  }, _slerp: function (e, t, n, i) {
    Pt.slerpFlat(e, t, e, t, e, n, i);
  }, _lerp: function (e, t, n, i, r) {
    for (var o = 1 - i, s = 0; s !== r; ++s) {
      var a = t + s;
      e[a] = e[a] * o + e[n + s] * i;
    }
  }});
  var Ih = new RegExp("[\\[\\]\\.:\\/]", "g"), Bh = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]", Fh = /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]"), zh = /(WCOD+)?/.source.replace("WCOD", Bh), Nh = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", "[^\\[\\]\\.:\\/]"), Uh = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]"), Vh = new RegExp("^" + Fh + zh + Nh + Uh + "$"), Gh = ["material", "materials", "bones"];
  function Hh(e, t, n) {
    var i = n || jh.parseTrackName(t);
    this._targetGroup = e, this._bindings = e.subscribe_(t, i);
  }
  function jh(e, t, n) {
    this.path = t, this.parsedPath = n || jh.parseTrackName(t), this.node = jh.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e;
  }
  function $h(e, t, n) {
    this._mixer = e, this._clip = t, this._localRoot = n || null;
    for (var i = t.tracks, r = i.length, o = new Array(r), s = {endingStart: ut, endingEnd: ut}, a = 0; a !== r; ++a) {
      var l = i[a].createInterpolant(null);
      o[a] = l, l.settings = s;
    }
    this._interpolantSettings = s, this._interpolants = o, this._propertyBindings = new Array(r), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = ht, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = Infinity, this.paused = false, this.enabled = true, this.clampWhenFinished = false, this.zeroSlopeAtStart = true, this.zeroSlopeAtEnd = true;
  }
  function Wh(e) {
    this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
  }
  function Xh(e) {
    "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e;
  }
  function Yh(e, t, n) {
    Cs.call(this, e, t), this.meshPerAttribute = n || 1;
  }
  function Jh(e, t, n, i) {
    this.ray = new Gn(e, t), this.near = n || 0, this.far = i || Infinity, this.camera = null, this.params = {Mesh: {}, Line: {}, LOD: {}, Points: {threshold: 1}, Sprite: {}}, Object.defineProperties(this.params, {PointCloud: {get: function () {
      return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points;
    }}});
  }
  function Kh(e, t) {
    return e.distance - t.distance;
  }
  function Zh(e, t, n, i) {
    if (false !== e.visible && (e.raycast(t, n), true === i)) for (var r = e.children, o = 0, s = r.length; o < s; o++) Zh(r[o], t, n, true);
  }
  Object.assign(Hh.prototype, {getValue: function (e, t) {
    this.bind();
    var n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
    undefined !== i && i.getValue(e, t);
  }, setValue: function (e, t) {
    for (var n = this._bindings, i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i) n[i].setValue(e, t);
  }, bind: function () {
    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].bind();
  }, unbind: function () {
    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].unbind();
  }}), Object.assign(jh, {Composite: Hh, create: function (e, t, n) {
    return e && e.isAnimationObjectGroup ? new jh.Composite(e, t, n) : new jh(e, t, n);
  }, sanitizeNodeName: function (e) {
    return e.replace(/\s/g, "_").replace(Ih, "");
  }, parseTrackName: function (e) {
    var t = Vh.exec(e);
    if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
    var n = {nodeName: t[2], objectName: t[3], objectIndex: t[4], propertyName: t[5], propertyIndex: t[6]}, i = n.nodeName && n.nodeName.lastIndexOf(".");
    if (undefined !== i && -1 !== i) {
      var r = n.nodeName.substring(i + 1);
      -1 !== Gh.indexOf(r) && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
    }
    if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
    return n;
  }, findNode: function (e, t) {
    if (!t || "" === t || "root" === t || "." === t || -1 === t || t === e.name || t === e.uuid) return e;
    if (e.skeleton) {
      var n = e.skeleton.getBoneByName(t);
      if (undefined !== n) return n;
    }
    if (e.children) {
      var i = function (e) {
        for (var n = 0; n < e.length; n++) {
          var r = e[n];
          if (r.name === t || r.uuid === t) return r;
          var o = i(r.children);
          if (o) return o;
        }
        return null;
      }, r = i(e.children);
      if (r) return r;
    }
    return null;
  }}), Object.assign(jh.prototype, {_getValue_unavailable: function () {}, _setValue_unavailable: function () {}, BindingType: {Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3}, Versioning: {None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2}, GetterByBindingType: [function (e, t) {
    e[t] = this.node[this.propertyName];
  }, function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) e[t++] = n[i];
  }, function (e, t) {
    e[t] = this.resolvedProperty[this.propertyIndex];
  }, function (e, t) {
    this.resolvedProperty.toArray(e, t);
  }], SetterByBindingTypeAndVersioning: [[function (e, t) {
    this.targetObject[this.propertyName] = e[t];
  }, function (e, t) {
    this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = true;
  }, function (e, t) {
    this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = true;
  }], [function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) n[i] = e[t++];
  }, function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) n[i] = e[t++];
    this.targetObject.needsUpdate = true;
  }, function (e, t) {
    for (var n = this.resolvedProperty, i = 0, r = n.length; i !== r; ++i) n[i] = e[t++];
    this.targetObject.matrixWorldNeedsUpdate = true;
  }], [function (e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t];
  }, function (e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = true;
  }, function (e, t) {
    this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = true;
  }], [function (e, t) {
    this.resolvedProperty.fromArray(e, t);
  }, function (e, t) {
    this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = true;
  }, function (e, t) {
    this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = true;
  }]], getValue: function (e, t) {
    this.bind(), this.getValue(e, t);
  }, setValue: function (e, t) {
    this.bind(), this.setValue(e, t);
  }, bind: function () {
    var e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
    if (e || (e = jh.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, e) {
      if (n) {
        var o = t.objectIndex;
        switch (n) {
          case "materials":
            if (!e.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
            if (!e.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
            e = e.material.materials;
            break;
          case "bones":
            if (!e.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
            e = e.skeleton.bones;
            for (var s = 0; s < e.length; s++) if (e[s].name === o) {
              o = s;
              break;
            }
            break;
          default:
            if (undefined === e[n]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
            e = e[n];
        }
        if (undefined !== o) {
          if (undefined === e[o]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
          e = e[o];
        }
      }
      var a = e[i];
      if (undefined !== a) {
        var l = this.Versioning.None;
        this.targetObject = e, undefined !== e.needsUpdate ? l = this.Versioning.NeedsUpdate : undefined !== e.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate);
        var c = this.BindingType.Direct;
        if (undefined !== r) {
          if ("morphTargetInfluences" === i) {
            if (!e.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
            if (e.geometry.isBufferGeometry) {
              if (!e.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
              for (s = 0; s < this.node.geometry.morphAttributes.position.length; s++) if (e.geometry.morphAttributes.position[s].name === r) {
                r = s;
                break;
              }
            } else {
              if (!e.geometry.morphTargets) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
              for (s = 0; s < this.node.geometry.morphTargets.length; s++) if (e.geometry.morphTargets[s].name === r) {
                r = s;
                break;
              }
            }
          }
          c = this.BindingType.ArrayElement, this.resolvedProperty = a, this.propertyIndex = r;
        } else undefined !== a.fromArray && undefined !== a.toArray ? (c = this.BindingType.HasFromToArray, this.resolvedProperty = a) : Array.isArray(a) ? (c = this.BindingType.EntireArray, this.resolvedProperty = a) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[c], this.setValue = this.SetterByBindingTypeAndVersioning[c][l];
      } else {
        var h = t.nodeName;
        console.error("THREE.PropertyBinding: Trying to update property for track: " + h + "." + i + " but it wasn't found.", e);
      }
    } else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
  }, unbind: function () {
    this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
  }}), Object.assign(jh.prototype, {_getValue_unbound: jh.prototype.getValue, _setValue_unbound: jh.prototype.setValue}), Object.assign(function () {
    this.uuid = Rt.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
    var e = {};
    this._indicesByUUID = e;
    for (var t = 0, n = arguments.length; t !== n; ++t) e[arguments[t].uuid] = t;
    this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
    var i = this;
    this.stats = {objects: {get total() {
      return i._objects.length;
    }, get inUse() {
      return this.total - i.nCachedObjects_;
    }}, get bindingsPerObject() {
      return i._bindings.length;
    }};
  }.prototype, {isAnimationObjectGroup: true, add: function () {
    for (var e = this._objects, t = e.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._paths, o = this._parsedPaths, s = this._bindings, a = s.length, l = undefined, c = 0, h = arguments.length; c !== h; ++c) {
      var u = arguments[c], d = u.uuid, p = i[d];
      if (undefined === p) {
        p = t++, i[d] = p, e.push(u);
        for (var m = 0, f = a; m !== f; ++m) s[m].push(new jh(u, r[m], o[m]));
      } else if (p < n) {
        l = e[p];
        var g = --n, v = e[g];
        i[v.uuid] = p, e[p] = v, i[d] = g, e[g] = u;
        for (m = 0, f = a; m !== f; ++m) {
          var y = s[m], _ = y[g], x = y[p];
          y[p] = _, undefined === x && (x = new jh(u, r[m], o[m])), y[g] = x;
        }
      } else e[p] !== l && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
    }
    this.nCachedObjects_ = n;
  }, remove: function () {
    for (var e = this._objects, t = this.nCachedObjects_, n = this._indicesByUUID, i = this._bindings, r = i.length, o = 0, s = arguments.length; o !== s; ++o) {
      var a = arguments[o], l = a.uuid, c = n[l];
      if (undefined !== c && c >= t) {
        var h = t++, u = e[h];
        n[u.uuid] = c, e[c] = u, n[l] = h, e[h] = a;
        for (var d = 0, p = r; d !== p; ++d) {
          var m = i[d], f = m[h], g = m[c];
          m[c] = f, m[h] = g;
        }
      }
    }
    this.nCachedObjects_ = t;
  }, uncache: function () {
    for (var e = this._objects, t = e.length, n = this.nCachedObjects_, i = this._indicesByUUID, r = this._bindings, o = r.length, s = 0, a = arguments.length; s !== a; ++s) {
      var l = arguments[s], c = l.uuid, h = i[c];
      if (undefined !== h) if (delete i[c], h < n) {
        var u = --n, d = e[u], p = e[y = --t];
        i[d.uuid] = h, e[h] = d, i[p.uuid] = u, e[u] = p, e.pop();
        for (var m = 0, f = o; m !== f; ++m) {
          var g = (_ = r[m])[u], v = _[y];
          _[h] = g, _[u] = v, _.pop();
        }
      } else {
        var y;
        i[(p = e[y = --t]).uuid] = h, e[h] = p, e.pop();
        for (m = 0, f = o; m !== f; ++m) {
          var _;
          (_ = r[m])[h] = _[y], _.pop();
        }
      }
    }
    this.nCachedObjects_ = n;
  }, subscribe_: function (e, t) {
    var n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
    if (undefined !== i) return r[i];
    var o = this._paths, s = this._parsedPaths, a = this._objects, l = a.length, c = this.nCachedObjects_, h = new Array(l);
    i = r.length, n[e] = i, o.push(e), s.push(t), r.push(h);
    for (var u = c, d = a.length; u !== d; ++u) {
      var p = a[u];
      h[u] = new jh(p, e, t);
    }
    return h;
  }, unsubscribe_: function (e) {
    var t = this._bindingsIndicesByPath, n = t[e];
    if (undefined !== n) {
      var i = this._paths, r = this._parsedPaths, o = this._bindings, s = o.length - 1, a = o[s];
      t[e[s]] = n, o[n] = a, o.pop(), r[n] = r[s], r.pop(), i[n] = i[s], i.pop();
    }
  }}), Object.assign($h.prototype, {play: function () {
    return this._mixer._activateAction(this), this;
  }, stop: function () {
    return this._mixer._deactivateAction(this), this.reset();
  }, reset: function () {
    return this.paused = false, this.enabled = true, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
  }, isRunning: function () {
    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this);
  }, isScheduled: function () {
    return this._mixer._isActiveAction(this);
  }, startAt: function (e) {
    return this._startTime = e, this;
  }, setLoop: function (e, t) {
    return this.loop = e, this.repetitions = t, this;
  }, setEffectiveWeight: function (e) {
    return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
  }, getEffectiveWeight: function () {
    return this._effectiveWeight;
  }, fadeIn: function (e) {
    return this._scheduleFading(e, 0, 1);
  }, fadeOut: function (e) {
    return this._scheduleFading(e, 1, 0);
  }, crossFadeFrom: function (e, t, n) {
    if (e.fadeOut(t), this.fadeIn(t), n) {
      var i = this._clip.duration, r = e._clip.duration, o = r / i, s = i / r;
      e.warp(1, o, t), this.warp(s, 1, t);
    }
    return this;
  }, crossFadeTo: function (e, t, n) {
    return e.crossFadeFrom(this, t, n);
  }, stopFading: function () {
    var e = this._weightInterpolant;
    return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
  }, setEffectiveTimeScale: function (e) {
    return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
  }, getEffectiveTimeScale: function () {
    return this._effectiveTimeScale;
  }, setDuration: function (e) {
    return this.timeScale = this._clip.duration / e, this.stopWarping();
  }, syncWith: function (e) {
    return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
  }, halt: function (e) {
    return this.warp(this._effectiveTimeScale, 0, e);
  }, warp: function (e, t, n) {
    var i = this._mixer, r = i.time, o = this._timeScaleInterpolant, s = this.timeScale;
    null === o && (o = i._lendControlInterpolant(), this._timeScaleInterpolant = o);
    var a = o.parameterPositions, l = o.sampleValues;
    return a[0] = r, a[1] = r + n, l[0] = e / s, l[1] = t / s, this;
  }, stopWarping: function () {
    var e = this._timeScaleInterpolant;
    return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
  }, getMixer: function () {
    return this._mixer;
  }, getClip: function () {
    return this._clip;
  }, getRoot: function () {
    return this._localRoot || this._mixer._root;
  }, _update: function (e, t, n, i) {
    if (this.enabled) {
      var r = this._startTime;
      if (null !== r) {
        var o = (e - r) * n;
        if (o < 0 || 0 === n) return;
        this._startTime = null, t = n * o;
      }
      t *= this._updateTimeScale(e);
      var s = this._updateTime(t), a = this._updateWeight(e);
      if (a > 0) for (var l = this._interpolants, c = this._propertyBindings, h = 0, u = l.length; h !== u; ++h) l[h].evaluate(s), c[h].accumulate(i, a);
    } else this._updateWeight(e);
  }, _updateWeight: function (e) {
    var t = 0;
    if (this.enabled) {
      t = this.weight;
      var n = this._weightInterpolant;
      if (null !== n) {
        var i = n.evaluate(e)[0];
        t *= i, e > n.parameterPositions[1] && (this.stopFading(), 0 === i && (this.enabled = false));
      }
    }
    return this._effectiveWeight = t, t;
  }, _updateTimeScale: function (e) {
    var t = 0;
    if (!this.paused) {
      t = this.timeScale;
      var n = this._timeScaleInterpolant;
      if (null !== n) t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = true : this.timeScale = t);
    }
    return this._effectiveTimeScale = t, t;
  }, _updateTime: function (e) {
    var t = this.time + e, n = this._clip.duration, i = this.loop, r = this._loopCount, o = 2202 === i;
    if (0 === e) return -1 === r ? t : o && 1 == (1 & r) ? n - t : t;
    if (2200 === i) {
      -1 === r && (this._loopCount = 0, this._setEndings(true, true, false));
      e: {
        if (t >= n) t = n; else {
          if (!(t < 0)) {
            this.time = t;
            break e;
          }
          t = 0;
        }
        this.clampWhenFinished ? this.paused = true : this.enabled = false, this.time = t, this._mixer.dispatchEvent({type: "finished", action: this, direction: e < 0 ? -1 : 1});
      }
    } else {
      if (-1 === r && (e >= 0 ? (r = 0, this._setEndings(true, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, true, o)), t >= n || t < 0) {
        var s = Math.floor(t / n);
        t -= n * s, r += Math.abs(s);
        var a = this.repetitions - r;
        if (a <= 0) this.clampWhenFinished ? this.paused = true : this.enabled = false, t = e > 0 ? n : 0, this.time = t, this._mixer.dispatchEvent({type: "finished", action: this, direction: e > 0 ? 1 : -1}); else {
          if (1 === a) {
            var l = e < 0;
            this._setEndings(l, !l, o);
          } else this._setEndings(false, false, o);
          this._loopCount = r, this.time = t, this._mixer.dispatchEvent({type: "loop", action: this, loopDelta: s});
        }
      } else this.time = t;
      if (o && 1 == (1 & r)) return n - t;
    }
    return t;
  }, _setEndings: function (e, t, n) {
    var i = this._interpolantSettings;
    n ? (i.endingStart = 2401, i.endingEnd = 2401) : (i.endingStart = e ? this.zeroSlopeAtStart ? 2401 : ut : 2402, i.endingEnd = t ? this.zeroSlopeAtEnd ? 2401 : ut : 2402);
  }, _scheduleFading: function (e, t, n) {
    var i = this._mixer, r = i.time, o = this._weightInterpolant;
    null === o && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
    var s = o.parameterPositions, a = o.sampleValues;
    return s[0] = r, a[0] = t, s[1] = r + e, a[1] = n, this;
  }}), Wh.prototype = Object.assign(Object.create(s.prototype), {constructor: Wh, _bindAction: function (e, t) {
    var n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, o = e._propertyBindings, s = e._interpolants, a = n.uuid, l = this._bindingsByRootAndName, c = l[a];
    undefined === c && (c = {}, l[a] = c);
    for (var h = 0; h !== r; ++h) {
      var u = i[h], d = u.name, p = c[d];
      if (undefined !== p) o[h] = p; else {
        if (undefined !== (p = o[h])) {
          null === p._cacheIndex && (++p.referenceCount, this._addInactiveBinding(p, a, d));
          continue;
        }
        var m = t && t._propertyBindings[h].binding.parsedPath;
        ++(p = new Oh(jh.create(n, d, m), u.ValueTypeName, u.getValueSize())).referenceCount, this._addInactiveBinding(p, a, d), o[h] = p;
      }
      s[h].resultBuffer = p.buffer;
    }
  }, _activateAction: function (e) {
    if (!this._isActiveAction(e)) {
      if (null === e._cacheIndex) {
        var t = (e._localRoot || this._root).uuid, n = e._clip.uuid, i = this._actionsByClip[n];
        this._bindAction(e, i && i.knownActions[0]), this._addInactiveAction(e, n, t);
      }
      for (var r = e._propertyBindings, o = 0, s = r.length; o !== s; ++o) {
        var a = r[o];
        0 == a.useCount++ && (this._lendBinding(a), a.saveOriginalState());
      }
      this._lendAction(e);
    }
  }, _deactivateAction: function (e) {
    if (this._isActiveAction(e)) {
      for (var t = e._propertyBindings, n = 0, i = t.length; n !== i; ++n) {
        var r = t[n];
        0 == --r.useCount && (r.restoreOriginalState(), this._takeBackBinding(r));
      }
      this._takeBackAction(e);
    }
  }, _initMemoryManager: function () {
    this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
    var e = this;
    this.stats = {actions: {get total() {
      return e._actions.length;
    }, get inUse() {
      return e._nActiveActions;
    }}, bindings: {get total() {
      return e._bindings.length;
    }, get inUse() {
      return e._nActiveBindings;
    }}, controlInterpolants: {get total() {
      return e._controlInterpolants.length;
    }, get inUse() {
      return e._nActiveControlInterpolants;
    }}};
  }, _isActiveAction: function (e) {
    var t = e._cacheIndex;
    return null !== t && t < this._nActiveActions;
  }, _addInactiveAction: function (e, t, n) {
    var i = this._actions, r = this._actionsByClip, o = r[t];
    if (undefined === o) o = {knownActions: [e], actionByRoot: {}}, e._byClipCacheIndex = 0, r[t] = o; else {
      var s = o.knownActions;
      e._byClipCacheIndex = s.length, s.push(e);
    }
    e._cacheIndex = i.length, i.push(e), o.actionByRoot[n] = e;
  }, _removeInactiveAction: function (e) {
    var t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
    n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
    var r = e._clip.uuid, o = this._actionsByClip, s = o[r], a = s.knownActions, l = a[a.length - 1], c = e._byClipCacheIndex;
    l._byClipCacheIndex = c, a[c] = l, a.pop(), e._byClipCacheIndex = null, delete s.actionByRoot[(e._localRoot || this._root).uuid], 0 === a.length && delete o[r], this._removeInactiveBindingsForAction(e);
  }, _removeInactiveBindingsForAction: function (e) {
    for (var t = e._propertyBindings, n = 0, i = t.length; n !== i; ++n) {
      var r = t[n];
      0 == --r.referenceCount && this._removeInactiveBinding(r);
    }
  }, _lendAction: function (e) {
    var t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _takeBackAction: function (e) {
    var t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _addInactiveBinding: function (e, t, n) {
    var i = this._bindingsByRootAndName, r = i[t], o = this._bindings;
    undefined === r && (r = {}, i[t] = r), r[n] = e, e._cacheIndex = o.length, o.push(e);
  }, _removeInactiveBinding: function (e) {
    var t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, o = this._bindingsByRootAndName, s = o[i], a = t[t.length - 1], l = e._cacheIndex;
    a._cacheIndex = l, t[l] = a, t.pop(), delete s[r], 0 === Object.keys(s).length && delete o[i];
  }, _lendBinding: function (e) {
    var t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _takeBackBinding: function (e) {
    var t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
    e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
  }, _lendControlInterpolant: function () {
    var e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
    return undefined === n && ((n = new Xl(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = t, e[t] = n), n;
  }, _takeBackControlInterpolant: function (e) {
    var t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
    e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
  }, _controlInterpolantsResultBuffer: new Float32Array(1), clipAction: function (e, t) {
    var n = t || this._root, i = n.uuid, r = "string" == typeof e ? rc.findByName(n, e) : e, o = null !== r ? r.uuid : e, s = this._actionsByClip[o], a = null;
    if (undefined !== s) {
      var l = s.actionByRoot[i];
      if (undefined !== l) return l;
      a = s.knownActions[0], null === r && (r = a._clip);
    }
    if (null === r) return null;
    var c = new $h(this, r, t);
    return this._bindAction(c, a), this._addInactiveAction(c, o, i), c;
  }, existingAction: function (e, t) {
    var n = t || this._root, i = n.uuid, r = "string" == typeof e ? rc.findByName(n, e) : e, o = r ? r.uuid : e, s = this._actionsByClip[o];
    return undefined !== s && s.actionByRoot[i] || null;
  }, stopAllAction: function () {
    var e = this._actions, t = this._nActiveActions, n = this._bindings, i = this._nActiveBindings;
    this._nActiveActions = 0, this._nActiveBindings = 0;
    for (var r = 0; r !== t; ++r) e[r].reset();
    for (r = 0; r !== i; ++r) n[r].useCount = 0;
    return this;
  }, update: function (e) {
    e *= this.timeScale;
    for (var t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1, s = 0; s !== n; ++s) {
      t[s]._update(i, e, r, o);
    }
    var a = this._bindings, l = this._nActiveBindings;
    for (s = 0; s !== l; ++s) a[s].apply(o);
    return this;
  }, getRoot: function () {
    return this._root;
  }, uncacheClip: function (e) {
    var t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
    if (undefined !== r) {
      for (var o = r.knownActions, s = 0, a = o.length; s !== a; ++s) {
        var l = o[s];
        this._deactivateAction(l);
        var c = l._cacheIndex, h = t[t.length - 1];
        l._cacheIndex = null, l._byClipCacheIndex = null, h._cacheIndex = c, t[c] = h, t.pop(), this._removeInactiveBindingsForAction(l);
      }
      delete i[n];
    }
  }, uncacheRoot: function (e) {
    var t = e.uuid, n = this._actionsByClip;
    for (var i in n) {
      var r = n[i].actionByRoot[t];
      undefined !== r && (this._deactivateAction(r), this._removeInactiveAction(r));
    }
    var o = this._bindingsByRootAndName[t];
    if (undefined !== o) for (var s in o) {
      var a = o[s];
      a.restoreOriginalState(), this._removeInactiveBinding(a);
    }
  }, uncacheAction: function (e, t) {
    var n = this.existingAction(e, t);
    null !== n && (this._deactivateAction(n), this._removeInactiveAction(n));
  }}), Xh.prototype.clone = function () {
    return new Xh(undefined === this.value.clone ? this.value : this.value.clone());
  }, Yh.prototype = Object.assign(Object.create(Cs.prototype), {constructor: Yh, isInstancedInterleavedBuffer: true, copy: function (e) {
    return Cs.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this;
  }}), Object.assign(Jh.prototype, {linePrecision: 1, set: function (e, t) {
    this.ray.set(e, t);
  }, setFromCamera: function (e, t) {
    t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, 0.5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type.");
  }, intersectObject: function (e, t, n) {
    var i = n || [];
    return Zh(e, this, i, t), i.sort(Kh), i;
  }, intersectObjects: function (e, t, n) {
    var i = n || [];
    if (false === Array.isArray(e)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), i;
    for (var r = 0, o = e.length; r < o; r++) Zh(e[r], this, i, t);
    return i.sort(Kh), i;
  }}), Object.assign(function (e, t, n) {
    return this.radius = undefined !== e ? e : 1, this.phi = undefined !== t ? t : 0, this.theta = undefined !== n ? n : 0, this;
  }.prototype, {set: function (e, t, n) {
    return this.radius = e, this.phi = t, this.theta = n, this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
  }, makeSafe: function () {
    return this.phi = Math.max(0.000001, Math.min(Math.PI - 0.000001, this.phi)), this;
  }, setFromVector3: function (e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }, setFromCartesianCoords: function (e, t, n) {
    return this.radius = Math.sqrt(e * e + t * t + n * n), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(Rt.clamp(t / this.radius, -1, 1))), this;
  }}), Object.assign(function (e, t, n) {
    return this.radius = undefined !== e ? e : 1, this.theta = undefined !== t ? t : 0, this.y = undefined !== n ? n : 0, this;
  }.prototype, {set: function (e, t, n) {
    return this.radius = e, this.theta = t, this.y = n, this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
  }, setFromVector3: function (e) {
    return this.setFromCartesianCoords(e.x, e.y, e.z);
  }, setFromCartesianCoords: function (e, t, n) {
    return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
  }});
  var Qh = new Lt;
  function eu(e, t) {
    this.min = undefined !== e ? e : new Lt(Infinity, Infinity), this.max = undefined !== t ? t : new Lt(-Infinity, -Infinity);
  }
  Object.assign(eu.prototype, {set: function (e, t) {
    return this.min.copy(e), this.max.copy(t), this;
  }, setFromPoints: function (e) {
    this.makeEmpty();
    for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
    return this;
  }, setFromCenterAndSize: function (e, t) {
    var n = Qh.copy(t).multiplyScalar(0.5);
    return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }, makeEmpty: function () {
    return this.min.x = this.min.y = Infinity, this.max.x = this.max.y = -Infinity, this;
  }, isEmpty: function () {
    return this.max.x < this.min.x || this.max.y < this.min.y;
  }, getCenter: function (e) {
    return undefined === e && (console.warn("THREE.Box2: .getCenter() target is now required"), e = new Lt), this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }, getSize: function (e) {
    return undefined === e && (console.warn("THREE.Box2: .getSize() target is now required"), e = new Lt), this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
  }, expandByPoint: function (e) {
    return this.min.min(e), this.max.max(e), this;
  }, expandByVector: function (e) {
    return this.min.sub(e), this.max.add(e), this;
  }, expandByScalar: function (e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }, containsPoint: function (e) {
    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
  }, containsBox: function (e) {
    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
  }, getParameter: function (e, t) {
    return undefined === t && (console.warn("THREE.Box2: .getParameter() target is now required"), t = new Lt), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
  }, intersectsBox: function (e) {
    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
  }, clampPoint: function (e, t) {
    return undefined === t && (console.warn("THREE.Box2: .clampPoint() target is now required"), t = new Lt), t.copy(e).clamp(this.min, this.max);
  }, distanceToPoint: function (e) {
    return Qh.copy(e).clamp(this.min, this.max).sub(e).length();
  }, intersect: function (e) {
    return this.min.max(e.min), this.max.min(e.max), this;
  }, union: function (e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }, translate: function (e) {
    return this.min.add(e), this.max.add(e), this;
  }, equals: function (e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }});
  var tu = new It, nu = new It;
  function iu(e, t) {
    this.start = undefined !== e ? e : new It, this.end = undefined !== t ? t : new It;
  }
  function ru(e) {
    yn.call(this), this.material = e, this.render = function () {};
  }
  Object.assign(iu.prototype, {set: function (e, t) {
    return this.start.copy(e), this.end.copy(t), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }, copy: function (e) {
    return this.start.copy(e.start), this.end.copy(e.end), this;
  }, getCenter: function (e) {
    return undefined === e && (console.warn("THREE.Line3: .getCenter() target is now required"), e = new It), e.addVectors(this.start, this.end).multiplyScalar(0.5);
  }, delta: function (e) {
    return undefined === e && (console.warn("THREE.Line3: .delta() target is now required"), e = new It), e.subVectors(this.end, this.start);
  }, distanceSq: function () {
    return this.start.distanceToSquared(this.end);
  }, distance: function () {
    return this.start.distanceTo(this.end);
  }, at: function (e, t) {
    return undefined === t && (console.warn("THREE.Line3: .at() target is now required"), t = new It), this.delta(t).multiplyScalar(e).add(this.start);
  }, closestPointToPointParameter: function (e, t) {
    tu.subVectors(e, this.start), nu.subVectors(this.end, this.start);
    var n = nu.dot(nu), i = nu.dot(tu) / n;
    return t && (i = Rt.clamp(i, 0, 1)), i;
  }, closestPointToPoint: function (e, t, n) {
    var i = this.closestPointToPointParameter(e, t);
    return undefined === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), n = new It), this.delta(n).multiplyScalar(i).add(this.start);
  }, applyMatrix4: function (e) {
    return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
  }, equals: function (e) {
    return e.start.equals(this.start) && e.end.equals(this.end);
  }}), ru.prototype = Object.create(yn.prototype), ru.prototype.constructor = ru, ru.prototype.isImmediateRenderObject = true;
  var ou = new It, su = new It, au = new zt, lu = ["a", "b", "c"];
  function cu(e, t, n, i) {
    this.object = e, this.size = undefined !== t ? t : 1;
    var r = undefined !== n ? n : 16711680, o = undefined !== i ? i : 1, s = 0, a = this.object.geometry;
    a && a.isGeometry ? s = 3 * a.faces.length : a && a.isBufferGeometry && (s = a.attributes.normal.count);
    var l = new Ri, c = new xi(2 * s * 3, 3);
    l.addAttribute("position", c), ca.call(this, l, new ea({color: r, linewidth: o})), this.matrixAutoUpdate = false, this.update();
  }
  cu.prototype = Object.create(ca.prototype), cu.prototype.constructor = cu, cu.prototype.update = function () {
    this.object.updateMatrixWorld(true), au.getNormalMatrix(this.object.matrixWorld);
    var e = this.object.matrixWorld, t = this.geometry.attributes.position, n = this.object.geometry;
    if (n && n.isGeometry) for (var i = n.vertices, r = n.faces, o = 0, s = 0, a = r.length; s < a; s++) for (var l = r[s], c = 0, h = l.vertexNormals.length; c < h; c++) {
      var u = i[l[lu[c]]], d = l.vertexNormals[c];
      ou.copy(u).applyMatrix4(e), su.copy(d).applyMatrix3(au).normalize().multiplyScalar(this.size).add(ou), t.setXYZ(o, ou.x, ou.y, ou.z), o += 1, t.setXYZ(o, su.x, su.y, su.z), o += 1;
    } else if (n && n.isBufferGeometry) {
      var p = n.attributes.position, m = n.attributes.normal;
      for (o = 0, c = 0, h = p.count; c < h; c++) ou.set(p.getX(c), p.getY(c), p.getZ(c)).applyMatrix4(e), su.set(m.getX(c), m.getY(c), m.getZ(c)), su.applyMatrix3(au).normalize().multiplyScalar(this.size).add(ou), t.setXYZ(o, ou.x, ou.y, ou.z), o += 1, t.setXYZ(o, su.x, su.y, su.z), o += 1;
    }
    t.needsUpdate = true;
  };
  var hu = new It;
  function uu(e, t) {
    yn.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.color = t;
    for (var n = new Ri, i = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], r = 0, o = 1; r < 32; r++, o++) {
      var s = r / 32 * Math.PI * 2, a = o / 32 * Math.PI * 2;
      i.push(Math.cos(s), Math.sin(s), 1, Math.cos(a), Math.sin(a), 1);
    }
    n.addAttribute("position", new xi(i, 3));
    var l = new ea({fog: false});
    this.cone = new ca(n, l), this.add(this.cone), this.update();
  }
  uu.prototype = Object.create(yn.prototype), uu.prototype.constructor = uu, uu.prototype.dispose = function () {
    this.cone.geometry.dispose(), this.cone.material.dispose();
  }, uu.prototype.update = function () {
    this.light.updateMatrixWorld();
    var e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
    this.cone.scale.set(t, t, e), hu.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(hu), undefined !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
  };
  var du = new It, pu = new Qt, mu = new Qt;
  function fu(e) {
    for (var t = function e(t) {
      var n = [];
      t && t.isBone && n.push(t);
      for (var i = 0; i < t.children.length; i++) n.push.apply(n, e(t.children[i]));
      return n;
    }(e), n = new Ri, i = [], r = [], o = new ri(0, 0, 1), s = new ri(0, 1, 0), a = 0; a < t.length; a++) {
      var l = t[a];
      l.parent && l.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(o.r, o.g, o.b), r.push(s.r, s.g, s.b));
    }
    n.addAttribute("position", new xi(i, 3)), n.addAttribute("color", new xi(r, 3));
    var c = new ea({vertexColors: _, depthTest: false, depthWrite: false, transparent: true});
    ca.call(this, n, c), this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = false;
  }
  function gu(e, t, n) {
    this.light = e, this.light.updateMatrixWorld(), this.color = n;
    var i = new xl(t, 4, 2), r = new ui({wireframe: true, fog: false});
    Yi.call(this, i, r), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = false, this.update();
  }
  function vu(e, t) {
    this.type = "RectAreaLightHelper", this.light = e, this.color = t;
    var n = new Ri;
    n.addAttribute("position", new xi([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0], 3)), n.computeBoundingSphere();
    var i = new ea({fog: false});
    sa.call(this, n, i);
    var r = new Ri;
    r.addAttribute("position", new xi([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0], 3)), r.computeBoundingSphere(), this.add(new Yi(r, new ui({side: f, fog: false}))), this.update();
  }
  fu.prototype = Object.create(ca.prototype), fu.prototype.constructor = fu, fu.prototype.updateMatrixWorld = function (e) {
    var t = this.bones, n = this.geometry, i = n.getAttribute("position");
    mu.getInverse(this.root.matrixWorld);
    for (var r = 0, o = 0; r < t.length; r++) {
      var s = t[r];
      s.parent && s.parent.isBone && (pu.multiplyMatrices(mu, s.matrixWorld), du.setFromMatrixPosition(pu), i.setXYZ(o, du.x, du.y, du.z), pu.multiplyMatrices(mu, s.parent.matrixWorld), du.setFromMatrixPosition(pu), i.setXYZ(o + 1, du.x, du.y, du.z), o += 2);
    }
    n.getAttribute("position").needsUpdate = true, yn.prototype.updateMatrixWorld.call(this, e);
  }, gu.prototype = Object.create(Yi.prototype), gu.prototype.constructor = gu, gu.prototype.dispose = function () {
    this.geometry.dispose(), this.material.dispose();
  }, gu.prototype.update = function () {
    undefined !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
  }, vu.prototype = Object.create(sa.prototype), vu.prototype.constructor = vu, vu.prototype.update = function () {
    if (this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1), undefined !== this.color) this.material.color.set(this.color), this.children[0].material.color.set(this.color); else {
      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
      var e = this.material.color, t = Math.max(e.r, e.g, e.b);
      t > 1 && e.multiplyScalar(1 / t), this.children[0].material.color.copy(this.material.color);
    }
  }, vu.prototype.dispose = function () {
    this.geometry.dispose(), this.material.dispose(), this.children[0].geometry.dispose(), this.children[0].material.dispose();
  };
  var yu = new It, _u = new ri, xu = new ri;
  function bu(e, t, n) {
    yn.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.color = n;
    var i = new Ra(t);
    i.rotateY(0.5 * Math.PI), this.material = new ui({wireframe: true, fog: false}), undefined === this.color && (this.material.vertexColors = _);
    var r = i.getAttribute("position"), o = new Float32Array(3 * r.count);
    i.addAttribute("color", new di(o, 3)), this.add(new Yi(i, this.material)), this.update();
  }
  function wu(e, t) {
    this.lightProbe = e, this.size = t;
    var n = {GAMMA_OUTPUT: ""}, i = new cr({defines: n, uniforms: {sh: {value: this.lightProbe.sh.coefficients}, intensity: {value: this.lightProbe.intensity}}, vertexShader: ["varying vec3 vNormal;", "void main() {", "	vNormal = normalize( normalMatrix * normal );", "	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"), fragmentShader: ["#define RECIPROCAL_PI 0.318309886", "vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {", "	// matrix is assumed to be orthogonal", "	return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );", "}", "vec3 linearToOutput( in vec3 a ) {", "	#ifdef GAMMA_OUTPUT", "		return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );", "	#else", "		return a;", "	#endif", "}", "// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf", "vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {", "	// normal is assumed to have unit length", "	float x = normal.x, y = normal.y, z = normal.z;", "	// band 0", "	vec3 result = shCoefficients[ 0 ] * 0.886227;", "	// band 1", "	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;", "	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;", "	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;", "	// band 2", "	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;", "	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;", "	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );", "	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;", "	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );", "	return result;", "}", "uniform vec3 sh[ 9 ]; // sh coefficients", "uniform float intensity; // light probe intensity", "varying vec3 vNormal;", "void main() {", "	vec3 normal = normalize( vNormal );", "	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );", "	vec3 irradiance = shGetIrradianceAt( worldNormal, sh );", "	vec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;", "	outgoingLight = linearToOutput( outgoingLight );", "	gl_FragColor = vec4( outgoingLight, 1.0 );", "}"].join("\n")}), r = new xl(1, 32, 16);
    Yi.call(this, r, i), this.onBeforeRender();
  }
  function Su(e, t, n, i) {
    e = e || 10, t = t || 10, n = new ri(undefined !== n ? n : 4473924), i = new ri(undefined !== i ? i : 8947848);
    for (var r = t / 2, o = e / t, s = e / 2, a = [], l = [], c = 0, h = 0, u = -s; c <= t; c++, u += o) {
      a.push(-s, 0, u, s, 0, u), a.push(u, 0, -s, u, 0, s);
      var d = c === r ? n : i;
      d.toArray(l, h), h += 3, d.toArray(l, h), h += 3, d.toArray(l, h), h += 3, d.toArray(l, h), h += 3;
    }
    var p = new Ri;
    p.addAttribute("position", new xi(a, 3)), p.addAttribute("color", new xi(l, 3));
    var m = new ea({vertexColors: _});
    ca.call(this, p, m);
  }
  function Eu(e, t, n, i, r, o) {
    e = e || 10, t = t || 16, n = n || 8, i = i || 64, r = new ri(undefined !== r ? r : 4473924), o = new ri(undefined !== o ? o : 8947848);
    var s, a, l, c, h, u, d, p = [], m = [];
    for (c = 0; c <= t; c++) l = c / t * (2 * Math.PI), s = Math.sin(l) * e, a = Math.cos(l) * e, p.push(0, 0, 0), p.push(s, 0, a), d = 1 & c ? r : o, m.push(d.r, d.g, d.b), m.push(d.r, d.g, d.b);
    for (c = 0; c <= n; c++) for (d = 1 & c ? r : o, u = e - e / n * c, h = 0; h < i; h++) l = h / i * (2 * Math.PI), s = Math.sin(l) * u, a = Math.cos(l) * u, p.push(s, 0, a), m.push(d.r, d.g, d.b), l = (h + 1) / i * (2 * Math.PI), s = Math.sin(l) * u, a = Math.cos(l) * u, p.push(s, 0, a), m.push(d.r, d.g, d.b);
    var f = new Ri;
    f.addAttribute("position", new xi(p, 3)), f.addAttribute("color", new xi(m, 3));
    var g = new ea({vertexColors: _});
    ca.call(this, f, g);
  }
  function qu(e, t, n, i) {
    this.audio = e, this.range = t || 1, this.divisionsInnerAngle = n || 16, this.divisionsOuterAngle = i || 2;
    var r = new Ri, o = this.divisionsInnerAngle + 2 * this.divisionsOuterAngle, s = new Float32Array(3 * (3 * o + 3));
    r.addAttribute("position", new di(s, 3));
    var a = new ea({color: 65280}), l = new ea({color: 16776960});
    sa.call(this, r, [l, a]), this.update();
  }
  bu.prototype = Object.create(yn.prototype), bu.prototype.constructor = bu, bu.prototype.dispose = function () {
    this.children[0].geometry.dispose(), this.children[0].material.dispose();
  }, bu.prototype.update = function () {
    var e = this.children[0];
    if (undefined !== this.color) this.material.color.set(this.color); else {
      var t = e.geometry.getAttribute("color");
      _u.copy(this.light.color), xu.copy(this.light.groundColor);
      for (var n = 0, i = t.count; n < i; n++) {
        var r = n < i / 2 ? _u : xu;
        t.setXYZ(n, r.r, r.g, r.b);
      }
      t.needsUpdate = true;
    }
    e.lookAt(yu.setFromMatrixPosition(this.light.matrixWorld).negate());
  }, wu.prototype = Object.create(Yi.prototype), wu.prototype.constructor = wu, wu.prototype.dispose = function () {
    this.geometry.dispose(), this.material.dispose();
  }, wu.prototype.onBeforeRender = function () {
    this.position.copy(this.lightProbe.position), this.scale.set(1, 1, 1).multiplyScalar(this.size), this.material.uniforms.intensity.value = this.lightProbe.intensity;
  }, Su.prototype = Object.assign(Object.create(ca.prototype), {constructor: Su, copy: function (e) {
    return ca.prototype.copy.call(this, e), this.geometry.copy(e.geometry), this.material.copy(e.material), this;
  }, clone: function () {
    return (new this.constructor).copy(this);
  }}), Eu.prototype = Object.create(ca.prototype), Eu.prototype.constructor = Eu, qu.prototype = Object.create(sa.prototype), qu.prototype.constructor = qu, qu.prototype.update = function () {
    var e, t, n = this.audio, i = this.range, r = this.divisionsInnerAngle, o = this.divisionsOuterAngle, s = Rt.degToRad(n.panner.coneInnerAngle), a = Rt.degToRad(n.panner.coneOuterAngle), l = s / 2, c = a / 2, h = 0, u = 0, d = this.geometry, p = d.attributes.position;
    function m(n, r, o, s) {
      var a = (r - n) / o;
      for (p.setXYZ(h, 0, 0, 0), u++, e = n; e < r; e += a) t = h + u, p.setXYZ(t, Math.sin(e) * i, 0, Math.cos(e) * i), p.setXYZ(t + 1, Math.sin(Math.min(e + a, r)) * i, 0, Math.cos(Math.min(e + a, r)) * i), p.setXYZ(t + 2, 0, 0, 0), u += 3;
      d.addGroup(h, u, s), h += u, u = 0;
    }
    d.clearGroups(), m(-c, -l, o, 0), m(-l, l, r, 1), m(l, c, o, 0), p.needsUpdate = true, s === a && (this.material[0].visible = false);
  }, qu.prototype.dispose = function () {
    this.geometry.dispose(), this.material[0].dispose(), this.material[1].dispose();
  };
  var Tu = new It, Au = new It, Mu = new zt;
  function Cu(e, t, n, i) {
    this.object = e, this.size = undefined !== t ? t : 1;
    var r = undefined !== n ? n : 16776960, o = undefined !== i ? i : 1, s = 0, a = this.object.geometry;
    a && a.isGeometry ? s = a.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
    var l = new Ri, c = new xi(2 * s * 3, 3);
    l.addAttribute("position", c), ca.call(this, l, new ea({color: r, linewidth: o})), this.matrixAutoUpdate = false, this.update();
  }
  Cu.prototype = Object.create(ca.prototype), Cu.prototype.constructor = Cu, Cu.prototype.update = function () {
    this.object.updateMatrixWorld(true), Mu.getNormalMatrix(this.object.matrixWorld);
    for (var e = this.object.matrixWorld, t = this.geometry.attributes.position, n = this.object.geometry, i = n.vertices, r = n.faces, o = 0, s = 0, a = r.length; s < a; s++) {
      var l = r[s], c = l.normal;
      Tu.copy(i[l.a]).add(i[l.b]).add(i[l.c]).divideScalar(3).applyMatrix4(e), Au.copy(c).applyMatrix3(Mu).normalize().multiplyScalar(this.size).add(Tu), t.setXYZ(o, Tu.x, Tu.y, Tu.z), o += 1, t.setXYZ(o, Au.x, Au.y, Au.z), o += 1;
    }
    t.needsUpdate = true;
  };
  var ku = new It, Ru = new It, Lu = new It;
  function Pu(e, t, n) {
    yn.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.color = n, undefined === t && (t = 1);
    var i = new Ri;
    i.addAttribute("position", new xi([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3));
    var r = new ea({fog: false});
    this.lightPlane = new sa(i, r), this.add(this.lightPlane), (i = new Ri).addAttribute("position", new xi([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new sa(i, r), this.add(this.targetLine), this.update();
  }
  Pu.prototype = Object.create(yn.prototype), Pu.prototype.constructor = Pu, Pu.prototype.dispose = function () {
    this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
  }, Pu.prototype.update = function () {
    ku.setFromMatrixPosition(this.light.matrixWorld), Ru.setFromMatrixPosition(this.light.target.matrixWorld), Lu.subVectors(Ru, ku), this.lightPlane.lookAt(Ru), undefined !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(Ru), this.targetLine.scale.z = Lu.length();
  };
  var Du = new It, Ou = new hr;
  function Iu(e) {
    var t = new Ri, n = new ea({color: 16777215, vertexColors: y}), i = [], r = [], o = {}, s = new ri(16755200), a = new ri(16711680), l = new ri(43775), c = new ri(16777215), h = new ri(3355443);
    function u(e, t, n) {
      d(e, n), d(t, n);
    }
    function d(e, t) {
      i.push(0, 0, 0), r.push(t.r, t.g, t.b), undefined === o[e] && (o[e] = []), o[e].push(i.length / 3 - 1);
    }
    u("n1", "n2", s), u("n2", "n4", s), u("n4", "n3", s), u("n3", "n1", s), u("f1", "f2", s), u("f2", "f4", s), u("f4", "f3", s), u("f3", "f1", s), u("n1", "f1", s), u("n2", "f2", s), u("n3", "f3", s), u("n4", "f4", s), u("p", "n1", a), u("p", "n2", a), u("p", "n3", a), u("p", "n4", a), u("u1", "u2", l), u("u2", "u3", l), u("u3", "u1", l), u("c", "t", c), u("p", "c", h), u("cn1", "cn2", h), u("cn3", "cn4", h), u("cf1", "cf2", h), u("cf3", "cf4", h), t.addAttribute("position", new xi(i, 3)), t.addAttribute("color", new xi(r, 3)), ca.call(this, t, n), this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = false, this.pointMap = o, this.update();
  }
  function Bu(e, t, n, i, r, o, s) {
    Du.set(r, o, s).unproject(i);
    var a = t[e];
    if (undefined !== a) for (var l = n.getAttribute("position"), c = 0, h = a.length; c < h; c++) l.setXYZ(a[c], Du.x, Du.y, Du.z);
  }
  Iu.prototype = Object.create(ca.prototype), Iu.prototype.constructor = Iu, Iu.prototype.update = function () {
    var e = this.geometry, t = this.pointMap;
    Ou.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), Bu("c", t, e, Ou, 0, 0, -1), Bu("t", t, e, Ou, 0, 0, 1), Bu("n1", t, e, Ou, -1, -1, -1), Bu("n2", t, e, Ou, 1, -1, -1), Bu("n3", t, e, Ou, -1, 1, -1), Bu("n4", t, e, Ou, 1, 1, -1), Bu("f1", t, e, Ou, -1, -1, 1), Bu("f2", t, e, Ou, 1, -1, 1), Bu("f3", t, e, Ou, -1, 1, 1), Bu("f4", t, e, Ou, 1, 1, 1), Bu("u1", t, e, Ou, 0.7, 1.1, -1), Bu("u2", t, e, Ou, -0.7, 1.1, -1), Bu("u3", t, e, Ou, 0, 2, -1), Bu("cf1", t, e, Ou, -1, 0, 1), Bu("cf2", t, e, Ou, 1, 0, 1), Bu("cf3", t, e, Ou, 0, -1, 1), Bu("cf4", t, e, Ou, 0, 1, 1), Bu("cn1", t, e, Ou, -1, 0, -1), Bu("cn2", t, e, Ou, 1, 0, -1), Bu("cn3", t, e, Ou, 0, -1, -1), Bu("cn4", t, e, Ou, 0, 1, -1), e.getAttribute("position").needsUpdate = true;
  };
  var Fu = new Ln;
  function zu(e, t) {
    this.object = e, undefined === t && (t = 16776960);
    var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), i = new Float32Array(24), r = new Ri;
    r.setIndex(new di(n, 1)), r.addAttribute("position", new di(i, 3)), ca.call(this, r, new ea({color: t})), this.matrixAutoUpdate = false, this.update();
  }
  function Nu(e, t) {
    this.type = "Box3Helper", this.box = e, t = t || 16776960;
    var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), i = new Ri;
    i.setIndex(new di(n, 1)), i.addAttribute("position", new xi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), ca.call(this, i, new ea({color: t})), this.geometry.computeBoundingSphere();
  }
  function Uu(e, t, n) {
    this.type = "PlaneHelper", this.plane = e, this.size = undefined === t ? 1 : t;
    var i = undefined !== n ? n : 16776960, r = new Ri;
    r.addAttribute("position", new xi([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), r.computeBoundingSphere(), sa.call(this, r, new ea({color: i}));
    var o = new Ri;
    o.addAttribute("position", new xi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), o.computeBoundingSphere(), this.add(new Yi(o, new ui({color: i, opacity: 0.2, transparent: true, depthWrite: false})));
  }
  zu.prototype = Object.create(ca.prototype), zu.prototype.constructor = zu, zu.prototype.update = function (e) {
    if (undefined !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."), undefined !== this.object && Fu.setFromObject(this.object), !Fu.isEmpty()) {
      var t = Fu.min, n = Fu.max, i = this.geometry.attributes.position, r = i.array;
      r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = true, this.geometry.computeBoundingSphere();
    }
  }, zu.prototype.setFromObject = function (e) {
    return this.object = e, this.update(), this;
  }, zu.prototype.copy = function (e) {
    return ca.prototype.copy.call(this, e), this.object = e.object, this;
  }, zu.prototype.clone = function () {
    return (new this.constructor).copy(this);
  }, Nu.prototype = Object.create(ca.prototype), Nu.prototype.constructor = Nu, Nu.prototype.updateMatrixWorld = function (e) {
    var t = this.box;
    t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(0.5), yn.prototype.updateMatrixWorld.call(this, e));
  }, Uu.prototype = Object.create(sa.prototype), Uu.prototype.constructor = Uu, Uu.prototype.updateMatrixWorld = function (e) {
    var t = -this.plane.constant;
    Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(0.5 * this.size, 0.5 * this.size, t), this.children[0].material.side = t < 0 ? f : m, this.lookAt(this.plane.normal), yn.prototype.updateMatrixWorld.call(this, e);
  };
  var Vu, Gu, Hu = new It;
  function ju(e, t, n, i, r, o) {
    yn.call(this), undefined === e && (e = new It(0, 0, 1)), undefined === t && (t = new It(0, 0, 0)), undefined === n && (n = 1), undefined === i && (i = 16776960), undefined === r && (r = 0.2 * n), undefined === o && (o = 0.2 * r), undefined === Vu && ((Vu = new Ri).addAttribute("position", new xi([0, 0, 0, 0, 1, 0], 3)), (Gu = new kl(0, 0.5, 1, 5, 1)).translate(0, -0.5, 0)), this.position.copy(t), this.line = new sa(Vu, new ea({color: i})), this.line.matrixAutoUpdate = false, this.add(this.line), this.cone = new Yi(Gu, new ui({color: i})), this.cone.matrixAutoUpdate = false, this.add(this.cone), this.setDirection(e), this.setLength(n, r, o);
  }
  function $u(e) {
    var t = [0, 0, 0, e = e || 1, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e], n = new Ri;
    n.addAttribute("position", new xi(t, 3)), n.addAttribute("color", new xi([1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1], 3));
    var i = new ea({vertexColors: _});
    ca.call(this, n, i);
  }
  ju.prototype = Object.create(yn.prototype), ju.prototype.constructor = ju, ju.prototype.setDirection = function (e) {
    if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1); else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0); else {
      Hu.set(e.z, 0, -e.x).normalize();
      var t = Math.acos(e.y);
      this.quaternion.setFromAxisAngle(Hu, t);
    }
  }, ju.prototype.setLength = function (e, t, n) {
    undefined === t && (t = 0.2 * e), undefined === n && (n = 0.2 * t), this.line.scale.set(1, Math.max(0, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
  }, ju.prototype.setColor = function (e) {
    this.line.material.color.set(e), this.cone.material.color.set(e);
  }, ju.prototype.copy = function (e) {
    return yn.prototype.copy.call(this, e, false), this.line.copy(e.line), this.cone.copy(e.cone), this;
  }, ju.prototype.clone = function () {
    return (new this.constructor).copy(this);
  }, $u.prototype = Object.create(ca.prototype), $u.prototype.constructor = $u;
  function Wu(e) {
    console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), Tc.call(this, e), this.type = "catmullrom";
  }
  yc.create = function (e, t) {
    return console.log("THREE.Curve.create() has been deprecated"), e.prototype = Object.create(yc.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e;
  }, Object.assign(Bc.prototype, {createPointsGeometry: function (e) {
    console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
    var t = this.getPoints(e);
    return this.createGeometry(t);
  }, createSpacedPointsGeometry: function (e) {
    console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
    var t = this.getSpacedPoints(e);
    return this.createGeometry(t);
  }, createGeometry: function (e) {
    console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
    for (var t = new nr, n = 0, i = e.length; n < i; n++) {
      var r = e[n];
      t.vertices.push(new It(r.x, r.y, r.z || 0));
    }
    return t;
  }}), Object.assign(Fc.prototype, {fromPoints: function (e) {
    console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(e);
  }}), Object.create(Tc.prototype), Object.create(Tc.prototype), Wu.prototype = Object.create(Tc.prototype), Object.assign(Wu.prototype, {initFromArray: function () {
    console.error("THREE.Spline: .initFromArray() has been removed.");
  }, getControlPointsArray: function () {
    console.error("THREE.Spline: .getControlPointsArray() has been removed.");
  }, reparametrizeByArcLength: function () {
    console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.");
  }}), Su.prototype.setColors = function () {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
  }, fu.prototype.update = function () {
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
  }, Object.assign(cc.prototype, {extractUrlBase: function (e) {
    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Qc(e);
  }}), Object.assign(rh.prototype, {setTexturePath: function (e) {
    return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e);
  }}), Object.assign(eu.prototype, {center: function (e) {
    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(e);
  }, empty: function () {
    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
  }, isIntersectionBox: function (e) {
    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e);
  }, size: function (e) {
    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(e);
  }}), Object.assign(Ln.prototype, {center: function (e) {
    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(e);
  }, empty: function () {
    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
  }, isIntersectionBox: function (e) {
    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e);
  }, isIntersectionSphere: function (e) {
    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e);
  }, size: function (e) {
    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(e);
  }}), iu.prototype.center = function (e) {
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(e);
  }, Object.assign(Rt, {random16: function () {
    return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random();
  }, nearestPowerOfTwo: function (e) {
    return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), Rt.floorPowerOfTwo(e);
  }, nextPowerOfTwo: function (e) {
    return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), Rt.ceilPowerOfTwo(e);
  }}), Object.assign(zt.prototype, {flattenToArrayOffset: function (e, t) {
    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t);
  }, multiplyVector3: function (e) {
    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this);
  }, multiplyVector3Array: function () {
    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
  }, applyToBuffer: function (e) {
    return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(e);
  }, applyToVector3Array: function () {
    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
  }}), Object.assign(Qt.prototype, {extractPosition: function (e) {
    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e);
  }, flattenToArrayOffset: function (e, t) {
    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t);
  }, getPosition: function () {
    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), (new It).setFromMatrixColumn(this, 3);
  }, setRotationFromQuaternion: function (e) {
    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(e);
  }, multiplyToArray: function () {
    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
  }, multiplyVector3: function (e) {
    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this);
  }, multiplyVector4: function (e) {
    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this);
  }, multiplyVector3Array: function () {
    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
  }, rotateAxis: function (e) {
    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this);
  }, crossVector: function (e) {
    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this);
  }, translate: function () {
    console.error("THREE.Matrix4: .translate() has been removed.");
  }, rotateX: function () {
    console.error("THREE.Matrix4: .rotateX() has been removed.");
  }, rotateY: function () {
    console.error("THREE.Matrix4: .rotateY() has been removed.");
  }, rotateZ: function () {
    console.error("THREE.Matrix4: .rotateZ() has been removed.");
  }, rotateByAxis: function () {
    console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
  }, applyToBuffer: function (e) {
    return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(e);
  }, applyToVector3Array: function () {
    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
  }, makeFrustum: function (e, t, n, i, r, o) {
    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(e, t, i, n, r, o);
  }}), xr.prototype.isIntersectionLine = function (e) {
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(e);
  }, Pt.prototype.multiplyVector3 = function (e) {
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this);
  }, Object.assign(Gn.prototype, {isIntersectionBox: function (e) {
    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e);
  }, isIntersectionPlane: function (e) {
    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(e);
  }, isIntersectionSphere: function (e) {
    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e);
  }}), Object.assign(ei.prototype, {area: function () {
    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
  }, barycoordFromPoint: function (e, t) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(e, t);
  }, midpoint: function (e) {
    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(e);
  }, normal: function (e) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(e);
  }, plane: function (e) {
    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(e);
  }}), Object.assign(ei, {barycoordFromPoint: function (e, t, n, i, r) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), ei.getBarycoord(e, t, n, i, r);
  }, normal: function (e, t, n, i) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), ei.getNormal(e, t, n, i);
  }}), Object.assign(zc.prototype, {extractAllPoints: function (e) {
    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(e);
  }, extrude: function (e) {
    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new pl(this, e);
  }, makeGeometry: function (e) {
    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new ql(this, e);
  }}), Object.assign(Lt.prototype, {fromAttribute: function (e, t, n) {
    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n);
  }, distanceToManhattan: function (e) {
    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e);
  }, lengthManhattan: function () {
    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
  }}), Object.assign(It.prototype, {setEulerFromRotationMatrix: function () {
    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
  }, setEulerFromQuaternion: function () {
    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
  }, getPositionFromMatrix: function (e) {
    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(e);
  }, getScaleFromMatrix: function (e) {
    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(e);
  }, getColumnFromMatrix: function (e, t) {
    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(t, e);
  }, applyProjection: function (e) {
    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(e);
  }, fromAttribute: function (e, t, n) {
    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n);
  }, distanceToManhattan: function (e) {
    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e);
  }, lengthManhattan: function () {
    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
  }}), Object.assign(Gt.prototype, {fromAttribute: function (e, t, n) {
    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n);
  }, lengthManhattan: function () {
    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
  }}), Object.assign(nr.prototype, {computeTangents: function () {
    console.error("THREE.Geometry: .computeTangents() has been removed.");
  }, computeLineDistances: function () {
    console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.");
  }}), Object.assign(yn.prototype, {getChildByName: function (e) {
    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e);
  }, renderDepth: function () {
    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
  }, translate: function (e, t) {
    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(t, e);
  }, getWorldRotation: function () {
    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
  }}), Object.defineProperties(yn.prototype, {eulerOrder: {get: function () {
    return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
  }, set: function (e) {
    console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = e;
  }}, useQuaternion: {get: function () {
    console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
  }, set: function () {
    console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
  }}}), Object.defineProperties(Xs.prototype, {objects: {get: function () {
    return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels;
  }}}), Object.defineProperty(Zs.prototype, "useVertexTexture", {get: function () {
    console.warn("THREE.Skeleton: useVertexTexture has been removed.");
  }, set: function () {
    console.warn("THREE.Skeleton: useVertexTexture has been removed.");
  }}), Ys.prototype.initBones = function () {
    console.error("THREE.SkinnedMesh: initBones() has been removed.");
  }, Object.defineProperty(yc.prototype, "__arcLengthDivisions", {get: function () {
    return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions;
  }, set: function (e) {
    console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = e;
  }}), ur.prototype.setLens = function (e, t) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), undefined !== t && (this.filmGauge = t), this.setFocalLength(e);
  }, Object.defineProperties(Nc.prototype, {onlyShadow: {set: function () {
    console.warn("THREE.Light: .onlyShadow has been removed.");
  }}, shadowCameraFov: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = e;
  }}, shadowCameraLeft: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = e;
  }}, shadowCameraRight: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = e;
  }}, shadowCameraTop: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = e;
  }}, shadowCameraBottom: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = e;
  }}, shadowCameraNear: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = e;
  }}, shadowCameraFar: {set: function (e) {
    console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = e;
  }}, shadowCameraVisible: {set: function () {
    console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
  }}, shadowBias: {set: function (e) {
    console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = e;
  }}, shadowDarkness: {set: function () {
    console.warn("THREE.Light: .shadowDarkness has been removed.");
  }}, shadowMapWidth: {set: function (e) {
    console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = e;
  }}, shadowMapHeight: {set: function (e) {
    console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = e;
  }}}), Object.defineProperties(di.prototype, {length: {get: function () {
    return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
  }}, copyIndicesArray: function () {
    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
  }}), Object.assign(Ri.prototype, {addIndex: function (e) {
    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(e);
  }, addDrawCall: function (e, t, n) {
    undefined !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(e, t);
  }, clearDrawCalls: function () {
    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
  }, computeTangents: function () {
    console.warn("THREE.BufferGeometry: .computeTangents() has been removed.");
  }, computeOffsets: function () {
    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
  }}), Object.defineProperties(Ri.prototype, {drawcalls: {get: function () {
    return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
  }}, offsets: {get: function () {
    return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
  }}}), Object.assign(ml.prototype, {getArrays: function () {
    console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.");
  }, addShapeList: function () {
    console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.");
  }, addShape: function () {
    console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.");
  }}), Object.defineProperties(Xh.prototype, {dynamic: {set: function () {
    console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.");
  }}, onUpdate: {value: function () {
    return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
  }}}), Object.defineProperties(hi.prototype, {wrapAround: {get: function () {
    console.warn("THREE.Material: .wrapAround has been removed.");
  }, set: function () {
    console.warn("THREE.Material: .wrapAround has been removed.");
  }}, overdraw: {get: function () {
    console.warn("THREE.Material: .overdraw has been removed.");
  }, set: function () {
    console.warn("THREE.Material: .overdraw has been removed.");
  }}, wrapRGB: {get: function () {
    return console.warn("THREE.Material: .wrapRGB has been removed."), new ri;
  }}, shading: {get: function () {
    console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
  }, set: function (e) {
    console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === e;
  }}}), Object.defineProperties(zl.prototype, {metal: {get: function () {
    return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), false;
  }, set: function () {
    console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead");
  }}}), Object.defineProperties(cr.prototype, {derivatives: {get: function () {
    return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
  }, set: function (e) {
    console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = e;
  }}}), Object.assign(Ts.prototype, {clearTarget: function (e, t, n, i) {
    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(e), this.clear(t, n, i);
  }, animate: function (e) {
    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(e);
  }, getCurrentRenderTarget: function () {
    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
  }, getMaxAnisotropy: function () {
    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
  }, getPrecision: function () {
    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
  }, resetGLState: function () {
    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
  }, supportsFloatTextures: function () {
    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
  }, supportsHalfFloatTextures: function () {
    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
  }, supportsStandardDerivatives: function () {
    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
  }, supportsCompressedTextureS3TC: function () {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
  }, supportsCompressedTexturePVRTC: function () {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
  }, supportsBlendMinMax: function () {
    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
  }, supportsVertexTextures: function () {
    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
  }, supportsInstancedArrays: function () {
    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
  }, enableScissorTest: function (e) {
    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(e);
  }, initMaterial: function () {
    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
  }, addPrePlugin: function () {
    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
  }, addPostPlugin: function () {
    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
  }, updateShadowMap: function () {
    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
  }, setFaceCulling: function () {
    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
  }, allocTextureUnit: function () {
    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
  }, setTexture: function () {
    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
  }, setTexture2D: function () {
    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
  }, setTextureCube: function () {
    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
  }, getActiveMipMapLevel: function () {
    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
  }}), Object.defineProperties(Ts.prototype, {shadowMapEnabled: {get: function () {
    return this.shadowMap.enabled;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = e;
  }}, shadowMapType: {get: function () {
    return this.shadowMap.type;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = e;
  }}, shadowMapCullFace: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
  }}, context: {get: function () {
    return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
  }}}), Object.defineProperties(ms.prototype, {cullFace: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
  }}, renderReverseSided: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
  }}, renderSingleSided: {get: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
  }, set: function () {
    console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
  }}}), Object.defineProperties(fr.prototype, {activeCubeFace: {set: function () {
    console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().");
  }}, activeMipMapLevel: {set: function () {
    console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().");
  }}}), Object.defineProperties(Ht.prototype, {wrapS: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = e;
  }}, wrapT: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = e;
  }}, magFilter: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = e;
  }}, minFilter: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = e;
  }}, anisotropy: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = e;
  }}, offset: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = e;
  }}, repeat: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = e;
  }}, format: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = e;
  }}, type: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = e;
  }}, generateMipmaps: {get: function () {
    return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
  }, set: function (e) {
    console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = e;
  }}}), Object.defineProperties(Es.prototype, {standing: {set: function () {
    console.warn("THREE.WebVRManager: .standing has been removed.");
  }}, userHeight: {set: function () {
    console.warn("THREE.WebVRManager: .userHeight has been removed.");
  }}}), Mh.prototype.load = function (e) {
    console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
    var t = this;
    return (new fh).load(e, function (e) {
      t.setBuffer(e);
    }), this;
  }, Dh.prototype.getData = function () {
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
  }, mr.prototype.updateCubeMap = function (e, t) {
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(e, t);
  };
  Nt.crossOrigin = undefined, Nt.loadTexture = function (e, t, n, i) {
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    var r = new vc;
    r.setCrossOrigin(this.crossOrigin);
    var o = r.load(e, n, undefined, i);
    return t && (o.mapping = t), o;
  }, Nt.loadTextureCube = function (e, t, n, i) {
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    var r = new gc;
    r.setCrossOrigin(this.crossOrigin);
    var o = r.load(e, n, undefined, i);
    return t && (o.mapping = t), o;
  }, Nt.loadCompressedTexture = function () {
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
  }, Nt.loadCompressedTextureCube = function () {
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
  };
  class utils_Color_Color {
    constructor(e = 255, t = 255, n = 255) {
      this.setScalarRGB(e, t, n);
    }
    setScalarR(e) {
      return this._r = Math.round(e) || 0, this;
    }
    setScalarG(e) {
      return this._g = Math.round(e) || 0, this;
    }
    setScalarB(e) {
      return this._b = Math.round(e) || 0, this;
    }
    set r (e) {
      this.setScalarR(e);
    }
    set g (e) {
      this.setScalarG(e);
    }
    set b (e) {
      this.setScalarB(e);
    }
    get r() {
      return this._r;
    }
    get g() {
      return this._g;
    }
    get b() {
      return this._b;
    }
    setScalarRGB(e, t, n) {
      return this.setScalarR(e).setScalarG(t).setScalarB(n);
    }
    setScalar(e) {
      return this.setScalarR(e >> 16 & 255).setScalarG(e >> 8 & 255).setScalarB(255 & e);
    }
    getScalar() {
      return parseInt(`0x${utils_Color_Color.partOfRgbToHex(this.r)}${utils_Color_Color.partOfRgbToHex(this.g)}${utils_Color_Color.partOfRgbToHex(this.b)}}`, 16);
    }
    static partOfRgbToHex(e) {
      let t = Number(e).toString(16);
      return t.length < 2 && (t = "0" + t), t;
    }
    setHex(e) {
      e = e.replace("#", "");
      const t = parseInt(e, 16);
      return this.setScalarRGB(t >> 16 & 255, t >> 8 & 255, 255 & t);
    }
    getHex() {
      return `#${utils_Color_Color.partOfRgbToHex(this.r)}${utils_Color_Color.partOfRgbToHex(this.g)}${utils_Color_Color.partOfRgbToHex(this.b)}`;
    }
    setArray(e) {
      return this.setScalarRGB(e[0], e[1], e[2]);
    }
    addScalarR(e) {
      return this.setScalarR(this.r + e);
    }
    addScalarG(e) {
      return this.setScalarG(this.g + e);
    }
    addScalarB(e) {
      return this.setScalarB(this.b + e);
    }
    addScalar(e) {
      return this.addScalarR(e).addScalarG(e).addScalarB(e);
    }
    addR(e) {
      return this.addScalarR(e.r);
    }
    addG(e) {
      return this.addScalarG(e.g);
    }
    addB(e) {
      return this.addScalarB(e.b);
    }
    add(e) {
      return this.addR(e).addG(e).addB(e);
    }
    subtractScalarR(e) {
      return this.setScalarR(this.r - e);
    }
    subtractScalarG(e) {
      return this.setScalarG(this.g - e);
    }
    subtractScalarB(e) {
      return this.setScalarB(this.b - e);
    }
    subtractScalar(e) {
      return this.subtractScalarR(e).subtractScalarG(e).subtractScalarB(e);
    }
    subtractR(e) {
      return this.subtractScalarR(e.r);
    }
    subtractG(e) {
      return this.subtractScalarG(e.g);
    }
    subtractB(e) {
      return this.subtractScalarB(e.b);
    }
    subtract(e) {
      return this.subtractR(e).subtractG(e).subtractB(e);
    }
    multiplyScalarR(e) {
      return this.setScalarR(this.r * e);
    }
    multiplyScalarG(e) {
      return this.setScalarG(this.g * e);
    }
    multiplyScalarB(e) {
      return this.setScalarB(this.b * e);
    }
    multiplyScalar(e) {
      return this.multiplyScalarR(e).multiplyScalarG(e).multiplyScalarB(e);
    }
    multiplyR(e) {
      return this.multiplyScalarR(e.r);
    }
    multiplyG(e) {
      return this.multiplyScalarG(e.g);
    }
    multiplyB(e) {
      return this.multiplyScalarB(e.b);
    }
    multiply(e) {
      return this.multiplyR(e).multiplyG(e).multiplyB(e);
    }
    divideScalarR(e) {
      return this.setScalarR(this.r / e);
    }
    divideScalarG(e) {
      return this.setScalarG(this.g / e);
    }
    divideScalarB(e) {
      return this.setScalarB(this.b / e);
    }
    divideScalar(e) {
      return this.divideScalarR(e).divideScalarG(e).divideScalarB(e);
    }
    divideR(e) {
      return this.divideScalarR(e.r);
    }
    divideG(e) {
      return this.divideScalarG(e.g);
    }
    divideB(e) {
      return this.divideScalarB(e.b);
    }
    divide(e) {
      return this.divideR(e).divideG(e).divideB(e);
    }
    copy(e) {
      return this.setScalarRGB(e.r, e.g, e.b);
    }
    clone() {
      return new utils_Color_Color(this.r, this.g, this.b);
    }
    isEqualScalar(e) {
      return this.r === e && this.g === e && this.b === e;
    }
    isEqualTo(e) {
      return this.r === e.r && this.g === e.g && this.b === e.b;
    }
    toGrayScale() {
      const e = 0.58 * this.r + 0.17 * this.g + 0.8 * this.b;
      return this.setScalarR(e).setScalarG(e).setScalarB(e);
    }
    toThreeColor() {
      return new ri(this.r / 255, this.g / 255, this.b / 255);
    }
    static fromThreeColor(e) {
      return new utils_Color_Color(e.r, e.g, e.b).multiplyScalar(255);
    }
    static fromScalar(e) {
      return (new utils_Color_Color).setScalar(e);
    }
    static fromHex(e) {
      return (new utils_Color_Color).setHex(e);
    }
    static fromArray(e) {
      return (new utils_Color_Color).setArray(e);
    }
  }
  utils_Color_Color.WHITE = utils_Color_Color.fromScalar(16777215), utils_Color_Color.RED = utils_Color_Color.fromScalar(16711680), utils_Color_Color.GREEN = utils_Color_Color.fromScalar(65280), utils_Color_Color.BLUE = utils_Color_Color.fromScalar(255), utils_Color_Color.AQUA = utils_Color_Color.fromScalar(5636095), utils_Color_Color.BLACK = utils_Color_Color.fromScalar(0);
  class Box2dUtils {
    static toBox2DValue(e) {
      return e / Box2dUtils.POSITION_SCALE;
    }
    static fromBox2DValue(e) {
      return e * Box2dUtils.POSITION_SCALE;
    }
    static getThreeRotationFromBox2d(e) {
      return e;
    }
    static getBox2dRotationFromThree(e) {
      return e;
    }
  }
  Box2dUtils.POSITION_SCALE = 64;
  var Xu, Yu = n(13);
  class AbstractVector2_AbstractVector2 {
    constructor(e = 0, t = 0) {
      this._x = 0, this._y = 0, this.x = e, this.y = t;
    }
    enableEvents() {
      this.events = new Events_Events;
    }
    setScalarX(e) {
      let t = false;
      return this._x !== e && (t = true), this._x = e || 0, t && this.events && this.events.emit("change", {axis: "x"}), this;
    }
    setScalarY(e) {
      let t = false;
      return this._y !== e && (t = true), this._y = e || 0, t && this.events && this.events.emit("change", {axis: "y"}), this;
    }
    setScalar(e) {
      return this.setScalarX(e).setScalarY(e);
    }
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    setX(e) {
      return this.setScalarX(e.x);
    }
    setY(e) {
      return this.setScalarY(e.y);
    }
    setXY(e) {
      return this.setScalarX(e.x).setScalarY(e.y);
    }
    setScalarXY(e, t) {
      return this.setScalarX(e).setScalarY(t);
    }
    set(e) {
      return this.setX(e).setY(e);
    }
    copy(e) {
      return this.set(e);
    }
    get x() {
      return this._x;
    }
    get y() {
      return this._y;
    }
    addScalarX(e) {
      return this.setScalarX(this.x + e);
    }
    addScalarY(e) {
      return this.setScalarY(this.y + e);
    }
    addScalar(e) {
      return this.addScalarX(e).addScalarY(e);
    }
    addX(e) {
      return this.addScalarX(e.x);
    }
    addY(e) {
      return this.addScalarY(e.y);
    }
    add(e) {
      return this.addX(e).addY(e);
    }
    smoothlyAddScalarX(e, t) {
      return this.setScalarX(ValueUtils.smoothValue(e, this.x, t));
    }
    smoothlyAddScalarY(e, t) {
      return this.setScalarY(ValueUtils.smoothValue(e, this.y, t));
    }
    smoothlyAddScalar(e, t) {
      return this.smoothlyAddScalarX(e, t).smoothlyAddScalarY(e, t);
    }
    smoothlyAddX(e, t) {
      return this.smoothlyAddScalarX(e.x, t);
    }
    smoothlyAddY(e, t) {
      return this.smoothlyAddScalarY(e.y, t);
    }
    smoothlyAdd(e, t = 12) {
      return this.smoothlyAddX(e, t).smoothlyAddY(e, t);
    }
    subtractScalarX(e) {
      return this.setScalarX(this.x - e);
    }
    subtractScalarY(e) {
      return this.setScalarY(this.y - e);
    }
    subtractScalar(e) {
      return this.subtractScalarX(e).subtractScalarY(e);
    }
    subtractX(e) {
      return this.subtractScalarX(e.x);
    }
    subtractY(e) {
      return this.subtractScalarY(e.y);
    }
    subtract(e) {
      return this.subtractX(e).subtractY(e);
    }
    multiplyScalarX(e) {
      return this.setScalarX(this.x * e);
    }
    multiplyScalarY(e) {
      return this.setScalarY(this.y * e);
    }
    multiplyScalar(e) {
      return this.multiplyScalarX(e).multiplyScalarY(e);
    }
    multiplyX(e) {
      return this.multiplyScalarX(e.x);
    }
    multiplyY(e) {
      return this.multiplyScalarY(e.y);
    }
    multiply(e) {
      return this.multiplyX(e).multiplyY(e);
    }
    divideScalarX(e) {
      return this.setScalarX(this.x / e);
    }
    divideScalarY(e) {
      return this.setScalarY(this.y / e);
    }
    divideScalar(e) {
      return this.divideScalarX(e).divideScalarY(e);
    }
    divideX(e) {
      return this.divideScalarX(e.x);
    }
    divideY(e) {
      return this.divideScalarY(e.y);
    }
    divide(e) {
      return this.divideX(e).divideY(e);
    }
    invertX() {
      return this.multiplyScalarX(-1);
    }
    invertY() {
      return this.multiplyScalarY(-1);
    }
    invert() {
      return this.invertX().invertY();
    }
    normalize() {
      const e = this.length();
      return 0 !== e && this.divide(vector_Vector2_Vector2.fromScalar(e)), this;
    }
    length() {
      return Math.sqrt(this.lengthSq());
    }
    lengthSq() {
      return this.x * this.x + this.y * this.y;
    }
    ceilX() {
      return this.setScalarX(Math.ceil(this.x));
    }
    ceilY() {
      return this.setScalarY(Math.ceil(this.y));
    }
    ceil() {
      return this.ceilX().ceilY();
    }
    floorX() {
      return this.setScalarX(Math.floor(this.x));
    }
    floorY() {
      return this.setScalarY(Math.floor(this.y));
    }
    floor() {
      return this.floorX().floorY();
    }
    roundX() {
      return this.setScalarX(Math.round(this.x));
    }
    roundY() {
      return this.setScalarY(Math.round(this.y));
    }
    round() {
      return this.roundX().roundY();
    }
    toFixedScalarX(e = 8) {
      return this.setScalarX(parseFloat(this.x.toFixed(e)));
    }
    toFixedScalarY(e = 8) {
      return this.setScalarY(parseFloat(this.y.toFixed(e)));
    }
    toFixedScalar(e = 8) {
      return this.toFixedScalarX(e).toFixedScalarY(e);
    }
    toFixedX(e) {
      return this.toFixedScalarX(e.x);
    }
    toFixedY(e) {
      return this.toFixedScalarY(e.y);
    }
    toFixed(e) {
      return this.toFixedX(e).toFixedY(e);
    }
    minX(e) {
      return this.setScalarX(Math.max(this.x, e));
    }
    minY(e) {
      return this.setScalarY(Math.max(this.y, e));
    }
    min(e) {
      return this.minX(e).minY(e);
    }
    getMin() {
      return Math.min(this.x, this.y);
    }
    maxX(e) {
      return this.setScalarX(Math.min(this.x, e));
    }
    maxY(e) {
      return this.setScalarY(Math.min(this.y, e));
    }
    max(e) {
      return this.maxX(e).maxY(e);
    }
    getMax() {
      return Math.max(this.x, this.y);
    }
    maxLimit(e) {
      return this.length() > e ? this.normalize().multiplyScalar(e) : this;
    }
    dot(e) {
      return this.x * e.x + this.y * e.y;
    }
    isEqualScalar(e) {
      return this.x === e && this.y === e;
    }
    isZero() {
      return this.isEqualScalar(0);
    }
    isEqualTo(e) {
      return this.x === e.x && this.y === e.y;
    }
    applyFromObject(e) {
      return false === ValueUtils.isUndefinedOrNull(e.x) && this.setScalarX(e.x), false === ValueUtils.isUndefinedOrNull(e.y) && this.setScalarY(e.y), false === ValueUtils.isUndefinedOrNull(e._x) && this.setScalarX(e._x), false === ValueUtils.isUndefinedOrNull(e._y) && this.setScalarY(e._y), this;
    }
    toString() {
      return `x: ${this.x}, y: ${this.y}`;
    }
    toArray() {
      return [this.x, this.y];
    }
    toObject() {
      return {x: this.x, y: this.y};
    }
    toBox2dVec() {
      return new Yu.Common.Math.b2Vec2(Box2dUtils.toBox2DValue(this.x), Box2dUtils.toBox2DValue(this.y));
    }
    toThreeVector3(e = 0) {
      return new It(this.x, this.y, e);
    }
    toThreeVector2() {
      return new Lt(this.x, this.y);
    }
  }
  class vector_Vector3_Vector3 extends AbstractVector2_AbstractVector2 {
    constructor(e = 0, t = 0, n = 0) {
      super(e, t), this._z = 0, this.z = n;
    }
    setScalarZ(e) {
      let t = false;
      return this._z !== e && (t = true), this._z = e || 0, t && this.events && this.events.emit("change", {axis: "z"}), this;
    }
    setScalar(e) {
      return this.setScalarXYZ(e, e, e);
    }
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    set z (e) {
      this.setScalarZ(e);
    }
    setScalarXYZ(e, t, n) {
      return this.setScalarX(e).setScalarY(t).setScalarZ(n);
    }
    set(e) {
      return this.setX(e).setY(e).setZ(e);
    }
    copy(e) {
      return this.set(e);
    }
    setZ(e) {
      return this.setScalarZ(e.z);
    }
    get x() {
      return super.x;
    }
    get y() {
      return super.y;
    }
    get z() {
      return this._z;
    }
    addScalarZ(e) {
      return this.setScalarZ(this.z + e);
    }
    addScalar(e) {
      return this.addScalarX(e).addScalarY(e).addScalarZ(e);
    }
    addZ(e) {
      return this.addScalarZ(e.z);
    }
    add(e) {
      return this.addX(e).addY(e).addZ(e);
    }
    smoothlyAddScalarZ(e, t) {
      return this.setScalarZ(ValueUtils.smoothValue(e, this.z, t));
    }
    smoothlyAddScalar(e, t) {
      return this.smoothlyAddScalarX(e, t).smoothlyAddScalarY(e, t).smoothlyAddScalarZ(e, t);
    }
    smoothlyAddZ(e, t) {
      return this.smoothlyAddScalarZ(e.z, t);
    }
    smoothlyAdd(e, t = 12) {
      return this.smoothlyAddX(e, t).smoothlyAddY(e, t).smoothlyAddZ(e, t);
    }
    subtractScalarZ(e) {
      return this.setScalarZ(this.z - e);
    }
    subtractScalar(e) {
      return this.subtractScalarX(e).subtractScalarY(e).subtractScalarZ(e);
    }
    subtractZ(e) {
      return this.subtractScalarZ(e.z);
    }
    subtract(e) {
      return this.subtractX(e).subtractY(e).subtractZ(e);
    }
    multiplyScalarZ(e) {
      return this.setScalarZ(this.z * e);
    }
    multiplyScalar(e) {
      return this.multiplyScalarX(e).multiplyScalarY(e).multiplyScalarZ(e);
    }
    multiplyZ(e) {
      return this.multiplyScalarZ(e.z);
    }
    multiply(e) {
      return this.multiplyX(e).multiplyY(e).multiplyZ(e);
    }
    divideScalarZ(e) {
      return this.setScalarZ(this.z / e);
    }
    divideScalar(e) {
      return this.divideScalarX(e).divideScalarY(e).divideScalarZ(e);
    }
    divideZ(e) {
      return this.divideScalarZ(e.z);
    }
    divide(e) {
      return this.divideX(e).divideY(e).divideZ(e);
    }
    to(e) {
      return e.clone().subtract(this);
    }
    invertZ() {
      return this.multiplyScalarZ(-1);
    }
    invert() {
      return this.invertX().invertY().invertZ();
    }
    lengthSq() {
      return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
      return Math.sqrt(this.lengthSq());
    }
    normalize() {
      let e = this.length();
      return 0 !== e && this.divide(new vector_Vector3_Vector3(e, e, e)), this;
    }
    ceilZ() {
      return this.setScalarZ(Math.ceil(this.z));
    }
    ceil() {
      return this.ceilX().ceilY().ceilZ();
    }
    floorZ() {
      return this.setScalarZ(Math.floor(this.z));
    }
    floor() {
      return this.floorX().floorY().floorZ();
    }
    roundZ() {
      return this.setScalarZ(Math.round(this.z));
    }
    round() {
      return this.roundX().roundY().roundZ();
    }
    toFixedScalarZ(e = 8) {
      return this.setScalarZ(parseFloat(this.z.toFixed(e)));
    }
    toFixedScalar(e = 8) {
      return this.toFixedScalarX(e).toFixedScalarY(e).toFixedScalarZ(e);
    }
    toFixedZ(e) {
      return this.toFixedScalarZ(e.z);
    }
    toFixed(e) {
      return this.toFixedX(e).toFixedY(e).toFixedZ(e);
    }
    minZ(e) {
      return this.setScalarZ(Math.max(this.z, e));
    }
    min(e) {
      return this.minX(e).minY(e).minZ(e);
    }
    getMin() {
      return Math.min(this.x, this.y, this.z);
    }
    maxZ(e) {
      return this.setScalarZ(Math.min(this.z, e));
    }
    max(e) {
      return this.maxX(e).maxY(e).maxZ(e);
    }
    getMax() {
      return Math.max(this.x, this.y, this.z);
    }
    clone() {
      return new vector_Vector3_Vector3(this.x, this.y, this.z);
    }
    dot(e) {
      return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    isEqualScalar(e) {
      return this.x === e && this.y === e && this.z === e;
    }
    isZero() {
      return this.isEqualScalar(0);
    }
    isEqualTo(e) {
      return this.x === e.x && this.y === e.y && this.z === e.z;
    }
    applyFromObject(e) {
      return super.applyFromObject(e), false === ValueUtils.isUndefinedOrNull(e.z) && this.setScalarZ(e.z), false === ValueUtils.isUndefinedOrNull(e._z) && this.setScalarZ(e._z), this;
    }
    static random(e = 0, t = 1) {
      return new vector_Vector3_Vector3(Math.floor(Randomize_Randomize.getRandomFloat(e, t)), Math.floor(Randomize_Randomize.getRandomFloat(e, t)), Math.floor(Randomize_Randomize.getRandomFloat(e, t)));
    }
    randomSubVector() {
      return this.clone().normalize().multiplyScalar(Randomize_Randomize.getRandomFloat(0, this.length()));
    }
    toString() {
      return `x: ${this.x}, y: ${this.y}, z: ${this.z}`;
    }
    toArray() {
      return [this.x, this.y, this.z];
    }
    toObject() {
      return {x: this.x, y: this.y, z: this.z};
    }
    toThreeEuler() {
      return new nn(this.x, this.y, this.z);
    }
    toThreeQuaternion() {
      return (new Pt).setFromEuler(this.toThreeEuler());
    }
    toThreeVector3() {
      return new It(this.x, this.y, this.z);
    }
    toVector2() {
      return new vector_Vector2_Vector2(this.x, this.y);
    }
    static fromThreeVector3(e) {
      return new vector_Vector3_Vector3(e.x, e.y, e.z);
    }
    static fromVector2(e) {
      return new vector_Vector3_Vector3(e.x, e.y);
    }
    static fromThreeVector2(e) {
      return new vector_Vector3_Vector3(e.x, e.y);
    }
    static fromThreeEuler(e) {
      return new vector_Vector3_Vector3(e.x, e.y, e.z);
    }
    static fromThreeQuaternion(e) {
      return vector_Vector3_Vector3.fromThreeEuler((new nn).setFromQuaternion(e));
    }
    static fromArray(e) {
      return new vector_Vector3_Vector3(e[0] || 0, e[1] || 0, e[2] || 0);
    }
    static fromObject(e) {
      return undefined === e ? new vector_Vector3_Vector3 : ValueUtils.isUndefinedOrNull(e.x) && ValueUtils.isUndefinedOrNull(e.y) && ValueUtils.isUndefinedOrNull(e.z) ? new vector_Vector3_Vector3(e._x, e._y, e._z) : new vector_Vector3_Vector3(e.x, e.y, e.z);
    }
    static fromScalar(e) {
      return new vector_Vector3_Vector3(e, e, e);
    }
  }
  class vector_Vector2_Vector2 extends AbstractVector2_AbstractVector2 {
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    get x() {
      return super.x;
    }
    get y() {
      return super.y;
    }
    clone() {
      return new vector_Vector2_Vector2(this.x, this.y);
    }
    horizontalAngle() {
      return Math.atan2(this.y, this.x);
    }
    horizontalAngleDeg() {
      return ValueUtils.radianToDegrees(this.horizontalAngle());
    }
    verticalAngle() {
      return Math.atan2(this.x, this.y);
    }
    verticalAngleDeg() {
      return ValueUtils.radianToDegrees(this.verticalAngle());
    }
    angle() {
      return this.horizontalAngle();
    }
    angleDeg() {
      return this.horizontalAngleDeg();
    }
    direction() {
      return this.horizontalAngle();
    }
    rotate(e) {
      const t = Math.cos(e), n = Math.sin(e), i = this.x * t - this.y * n, r = this.x * n + this.y * t;
      return this.setScalarX(i).setScalarY(r);
    }
    rotateDeg(e) {
      return this.rotate(ValueUtils.degreesToRadian(e));
    }
    rotateTo(e) {
      return this.rotate(e - this.angle());
    }
    rotateToDeg(e) {
      return this.rotateTo(ValueUtils.degreesToRadian(e));
    }
    rotateBy(e) {
      return this.rotate(this.angle() + e);
    }
    rotateByDeg(e) {
      return this.rotateBy(ValueUtils.degreesToRadian(e));
    }
    distanceX(e) {
      return this.x - e.y;
    }
    distanceY(e) {
      return this.y - e.y;
    }
    distance(e) {
      return Math.sqrt(this.distanceSq(e));
    }
    distanceSq(e) {
      const t = this.distanceX(e), n = this.distanceY(e);
      return t * t + n * n;
    }
    static to2dProjection(e, t) {
      const n = document.documentElement.clientWidth / 2, i = document.documentElement.clientHeight / 2, r = new It;
      return r.setFromMatrixPosition(e.matrixWorld).project(t), r.x = r.x * n + n, r.y = -r.y * i + i, new vector_Vector2_Vector2(r.x, r.y);
    }
    to(e) {
      return this.copy(e.clone().subtract(this));
    }
    static random(e = 0, t = 1) {
      return new vector_Vector2_Vector2(Math.floor(Randomize_Randomize.getRandomFloat(e, t)), Math.floor(Randomize_Randomize.getRandomFloat(e, t)));
    }
    randomSubVector() {
      return this.clone().normalize().multiplyScalar(Randomize_Randomize.getRandomFloat(0, this.length()));
    }
    isNumber() {
      return ValueUtils.isNumber(this.x) && ValueUtils.isNumber(this.y);
    }
    toVector3(e = 0) {
      return new vector_Vector3_Vector3(this.x, this.y, e);
    }
    static fromBox2dVec(e) {
      return new vector_Vector2_Vector2(Box2dUtils.fromBox2DValue(e.x), Box2dUtils.fromBox2DValue(e.y));
    }
    static fromThreeVector3(e) {
      return new vector_Vector2_Vector2(e.x, e.y);
    }
    static fromVector3(e) {
      return new vector_Vector2_Vector2(e.x, e.y);
    }
    static fromThreeVector2(e) {
      return new vector_Vector2_Vector2(e.x, e.y);
    }
    static fromThreeEuler(e) {
      return new vector_Vector2_Vector2(e.x, e.y);
    }
    static fromArray(e) {
      return new vector_Vector2_Vector2(e[0], e[1]);
    }
    static fromObject(e) {
      return undefined === e ? new vector_Vector2_Vector2 : ValueUtils.isUndefinedOrNull(e.x) && ValueUtils.isUndefinedOrNull(e.y) ? new vector_Vector2_Vector2(e._x, e._y) : new vector_Vector2_Vector2(e.x, e.y);
    }
    static fromScalar(e) {
      return new vector_Vector2_Vector2(e, e);
    }
  }
  vector_Vector2_Vector2.ZERO = new vector_Vector2_Vector2(0, 0), vector_Vector2_Vector2.UP = new vector_Vector2_Vector2(0, 1), vector_Vector2_Vector2.DOWN = new vector_Vector2_Vector2(0, -1), vector_Vector2_Vector2.LEFT = new vector_Vector2_Vector2(-1, 0), vector_Vector2_Vector2.RIGHT = new vector_Vector2_Vector2(1, 0), vector_Vector2_Vector2.UP_RIGHT = new vector_Vector2_Vector2(1, 1), vector_Vector2_Vector2.UP_LEFT = new vector_Vector2_Vector2(-1, 1), vector_Vector2_Vector2.DOWN_RIGHT = new vector_Vector2_Vector2(1, -1), vector_Vector2_Vector2.DOWN_LEFT = new vector_Vector2_Vector2(-1, -1), vector_Vector2_Vector2.IDENTITY = new vector_Vector2_Vector2(1, 1);
  class Randomize_Randomize {
    static getRandomColor(e = 0, t = 0, n = 0, i = 255, r = 255, o = 255) {
      return new utils_Color_Color(Randomize_Randomize.getRandomInt(e, i), Randomize_Randomize.getRandomInt(t, r), Randomize_Randomize.getRandomInt(n, o));
    }
    static getRandomColorScalar(e = 0, t = 0, n = 0, i = 255, r = 255, o = 255) {
      let s = 0;
      return s |= (255 & Randomize_Randomize.getRandomInt(e, i)) << 0, s |= (255 & Randomize_Randomize.getRandomInt(t, r)) << 8, s |= (255 & Randomize_Randomize.getRandomInt(n, o)) << 16;
    }
    static getRandomInt(e = 0, t = 1) {
      return t++, Math.floor(Randomize_Randomize.getRandomFloat(e, t));
    }
    static getRandomFloat(e = 0, t = 1) {
      return t--, Math.random() * (t - e + 1) + e;
    }
    static getRandomVector2(e = vector_Vector2_Vector2.fromScalar(-1), t = vector_Vector2_Vector2.fromScalar(1)) {
      return new vector_Vector2_Vector2(Randomize_Randomize.getRandomFloat(e.x, t.x), Randomize_Randomize.getRandomFloat(e.y, t.y));
    }
    static getRandomVector2Scalar(e = 0, t = 1) {
      return vector_Vector2_Vector2.fromObject({x: Randomize_Randomize.getRandomFloat(e, t), y: Randomize_Randomize.getRandomFloat(e, t)});
    }
    static getRandomVector3(e = vector_Vector3_Vector3.fromScalar(-1), t = vector_Vector3_Vector3.fromScalar(1)) {
      return new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(e.x, t.x), Randomize_Randomize.getRandomFloat(e.y, t.y), Randomize_Randomize.getRandomFloat(e.z, t.z));
    }
    static getRandomVector3Scalar(e = 0, t = 1) {
      return new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(e, t), Randomize_Randomize.getRandomFloat(e, t), Randomize_Randomize.getRandomFloat(e, t));
    }
    static getRandomFromArray(e) {
      return e[Randomize_Randomize.getRandomInt(0, e.length - 1)];
    }
    static getRandomFromObject(e) {
      let t = Object.keys(e);
      return e[t[Randomize_Randomize.getRandomInt(0, t.length - 1)]];
    }
    static getUuid() {
      return Math.random().toString(36).substr(2, 9);
    }
    static getRandomAngle() {
      return Randomize_Randomize.getRandomFloat(0, 2 * Math.PI);
    }
    static getPositionAround(e, t) {
      let n = e.clone();
      return n.x = Randomize_Randomize.getRandomInt(n.x - t, n.x + t), n.y = Randomize_Randomize.getRandomInt(n.y - t, n.y + t), n;
    }
    static shuffleArray(e) {
      let t, n, i = e.length;
      for (; 0 !== i;) n = Math.floor(Math.random() * i), t = e[i -= 1], e[i] = e[n], e[n] = t;
      return e;
    }
  }
  class Listener_Listener {
    constructor(e, t) {
      this._uuid = Randomize_Randomize.getUuid(), this._enabled = true, this._priority = Listener_Listener.DEFAULT_PRIORITY, this._executedTimes = 0, this._alive = true, this._event = e, this._func = t;
    }
    execute(e) {
      false !== this._alive && (this._func(e), this._limit && ++this._executedTimes >= this._limit && (this._alive = false));
    }
    isAlive() {
      return this._alive;
    }
    setPriority(e) {
      return this._priority = e, this._event.setNeedSort(true), this;
    }
    getPriority() {
      return this._priority;
    }
    setLimit(e) {
      return this._limit = e, this;
    }
    getLimit() {
      return this._limit;
    }
    getUuid() {
      return this._uuid;
    }
    getEvent() {
      return this._event;
    }
    enable() {
      this.isDisabled() && (this.getEvent().addListener(this), this._enabled = true);
    }
    disable() {
      this.isEnabled() && (this.getEvent().off(this), this._enabled = false);
    }
    isEnabled() {
      return this._enabled;
    }
    isDisabled() {
      return false === this._enabled;
    }
    isListener() {
      return true;
    }
    destroy() {
      this.getEvent().off(this), this._event = null, this._func = null;
    }
  }
  Listener_Listener.DEFAULT_PRIORITY = 0;
  class Event_Event {
    constructor(e) {
      this._enabled = true, this._listeners = {}, this._data = {}, this._paused = false, this._stopped = false, this._needSort = false, this._name = e;
    }
    on(e) {
      return this.addListener(new Listener_Listener(this, e));
    }
    addListener(e) {
      return this._listeners[e.getUuid()] = e, e.getPriority() !== Listener_Listener.DEFAULT_PRIORITY && this.setNeedSort(true), e;
    }
    once(e) {
      return this.on(e).setLimit(1);
    }
    off(e) {
      this.hasListener(e) && delete this._listeners[e.getUuid()];
    }
    execute(e) {
      this._data = e, this._needSort && this.sortListeners(), this.executeListeners();
    }
    executeListeners() {
      for (const e in this._listeners) {
        if (this._currentListener = this._listeners[e], this.isPaused() || this.isStopped()) return void (this._stopped = false);
        if (this._pausedOnListener) this._currentListener === this._pausedOnListener && (this._pausedOnListener = null); else {
          if (this.isDisabled()) return;
          false !== this._currentListener.isAlive() ? this._currentListener.execute(this._data) : this.off(this._currentListener);
        }
      }
    }
    enable() {
      this._enabled = true;
    }
    disable() {
      this._enabled = false;
    }
    isEnabled() {
      return this._enabled;
    }
    isDisabled() {
      return false === this.isEnabled();
    }
    pause() {
      this.isPaused() || (this._paused = true, this._pausedOnListener = this._currentListener);
    }
    isPaused() {
      return this._paused;
    }
    resume() {
      false !== this.isPaused() && (this._paused = false, this.executeListeners());
    }
    stop() {
      this._stopped = true;
    }
    isStopped() {
      return this._stopped;
    }
    setNeedSort(e) {
      this._needSort = e;
    }
    sortListeners() {
      this.setNeedSort(false);
      const e = {};
      Object.keys(this._listeners).sort((e, t) => this._listeners[t].getPriority() - this._listeners[e].getPriority()).forEach(t => e[t] = this._listeners[t]), this._listeners = e;
    }
    hasListener(e) {
      return this._listeners.hasOwnProperty(e.getUuid());
    }
    getListenersCount() {
      return Object.keys(this._listeners).length;
    }
    getName() {
      return this._name;
    }
    destroy() {
      this._data = {}, this._listeners = {};
    }
  }
  class Events_Events {
    constructor() {
      this._events = {};
    }
    emit(e, t) {
      this.getEvent(e).execute(t);
    }
    on(e, t) {
      return this.getEvent(e).on(t);
    }
    once(e, t) {
      return this.getEvent(e).once(t);
    }
    getEvent(e) {
      return this.hasnt(e) && (this._events[e.toString()] = new Event_Event(e.toString())), this._events[e.toString()];
    }
    hasnt(e) {
      return false === this._events.hasOwnProperty(e);
    }
    destroy() {
      for (const e in this._events) this._events[e].destroy();
      this._events = {};
    }
  }
  class Listeners {
    constructor() {
      this._listeners = [];
    }
    add(e) {
      return this._listeners.push(e), this;
    }
    addListeners(...e) {
      for (let t = 0; t < e.length; t++) this.add(e[t]);
      return this;
    }
    enable() {
      return this._listeners.forEach(e => e.enable()), this;
    }
    disable() {
      return this._listeners.forEach(e => e.disable()), this;
    }
    destroy() {
      this.disable(), this._listeners = [];
    }
  }
  class Module_Module {
    constructor() {
      this._listeners = new Listeners;
    }
    initialize() {}
    finalize() {
      this._listeners.destroy();
    }
  }
  class LoggerModule_LoggerModule extends Module_Module {
    debug(...e) {
      np.dev && Logger_Logger.log(...e);
    }
    timeStart(e) {
      if (np.dev) {
        const t = `${e}_${Randomize_Randomize.getUuid()}`;
        return console.time(t), t;
      }
    }
    timeEnd(e) {
      np.dev && console.timeEnd(e);
    }
  }
  class LocalStorage_LocalStorage extends Module_Module {
    constructor() {
      super(...arguments), this._map = {}, this._notifiedAboutNotSupported = false;
    }
    setItem(e, t) {
      try {
        localStorage ? localStorage.setItem(e, t) : this.onNotSupported();
      } catch (e) {
        this.onNotSupported(e);
      }
      this._map[e] = t;
    }
    getItem(e, t = "") {
      try {
        if (localStorage) return localStorage.getItem(e) || t;
        this.onNotSupported();
      } catch (e) {
        this.onNotSupported(e);
      }
      return this._map[e] || t;
    }
    onNotSupported(e) {
      this._notifiedAboutNotSupported || (this._notifiedAboutNotSupported = true, console.warn(e || "LocalStorage is not supported"));
    }
  }
  class CacheKeeper_CacheKeeper extends Module_Module {
    constructor() {
      super(...arguments), this._cachedObjects = {};
    }
    initialize() {
      super.initialize(), this.add(new rr(1, 1, 1, 1, 1)), this.add(new kr(1, 1, 1, 1)), this.add(new Dl(0.5, 20)), this.add(new ui({map: np.textures.defaultTexture})), this.add(new Vl({map: np.textures.defaultTexture})), this.add(new zl({map: np.textures.defaultTexture}));
    }
    add(e) {
      this._cachedObjects[e.constructor.name] = e;
    }
    remove(e) {
      delete this._cachedObjects[e.name];
    }
    get(e) {
      if (false === this.has(e)) throw new Error("Not found geometry");
      return this._cachedObjects[e.name];
    }
    has(e) {
      return this._cachedObjects.hasOwnProperty(e.name);
    }
  }
  class ShakeCamera_ShakeCamera {
    constructor() {
      this._numberOfShakes = 2, this._counter = this._numberOfShakes, this._magnitude = 0, this._startMagnitude = 0.15, this._magnitudeUnit = this._startMagnitude / this._numberOfShakes;
    }
    shake(e = 500, t = 5) {
      this._counter = 0, this._numberOfShakes = e / Math.max(np.canvas.fps, 50), this._startMagnitude = t, this._magnitudeUnit = this._startMagnitude / this._numberOfShakes, this._magnitude = this._startMagnitude;
    }
    tryShake(e) {
      this._counter < this._numberOfShakes && (this._magnitude -= this._magnitudeUnit, e.x += Randomize_Randomize.getRandomFloat(-this._magnitude, this._magnitude), e.y += Randomize_Randomize.getRandomFloat(-this._magnitude, this._magnitude), this._counter += 1);
    }
  }
  window.x = 0, window.y = 0, window.z = 0;
  class canvas_Camera_Camera {
    constructor() {
      this.events = new Events_Events, this.fieldOfViewSize = 1e3, this._smoothPositionK = 1, this._smoothPositionKspeed = 0.4, this._trackingEnabled = true, this.frustum = new Sr, this._entityFound = false, this._minRadiusForApplyViewDirection = 150, this._maxRadiusForApplyViewDirection = 400, this._viewDirection = vector_Vector2_Vector2.ZERO.clone(), this._viewDirectionDivider = 4, this._smoothViewDirection = 30, this.camera = new ur(75, document.documentElement.clientWidth / document.documentElement.clientHeight, 10, 1e5), this._shakeTool = new ShakeCamera_ShakeCamera, this.tanFOV = Math.tan(Math.PI / 180 * this.camera.fov / 2), this.windowHeight = document.documentElement.clientHeight, this.cameraVerticalPosition = 0, this.cameraVerticalPositionScale = 1, this._cameraVerticalPositionScaleSmoothly = 1, this.cameraVerticalPositionMultiply = 2.21, this.offset = new It, this._finallyPositionZ = 0, this._fovOffset = 0, np.socket.events.on("fieldOfView", e => this.updateFieldOfViewSize(e)), np.window.events.on("resize", () => this.onResize()), this.updateSmoothBound();
    }
    initialize() {
      this.initializeMapControls(), np.canvas.getScene().add(this.camera);
    }
    initializeMapControls() {
      this._mapControls || (this._mapControls = new window.THREE.OrbitControls(this.camera), this._mapControls.enabled = false, this._mapControls.enableKeys = false);
    }
    updateCamera() {
      this.updateCameraRotation(), this.updateCameraPosition(), this.updateCameraScale(), this.frustum.setFromMatrix((new Qt).multiplyMatrices(this.camera.projectionMatrix, this.camera.matrixWorldInverse));
    }
    enableMapControls() {
      this.disableTracking(), this._mapControls.enabled = true;
    }
    disableMapControls() {
      this._mapControls.enabled = false;
    }
    isEnabledMapControls() {
      return this._mapControls.enabled;
    }
    enableTracking() {
      this._trackingEnabled = true;
    }
    disableTracking() {
      this._trackingEnabled = false;
    }
    attachToEntity(e, t) {
      this._observableEntityUuid !== e && (this._observableEntityUuid = e, this._entityFound = false, undefined !== t ? this._smoothPositionK = t : this.attachedEntity.ifPresent(e => {
        this.ifNeedSmoothPosition(e.position) && (this._smoothPositionK = 15);
      }));
    }
    updateCameraFov() {
      const e = this.cameraVerticalPosition, t = document.documentElement.clientHeight / 2, n = 180 / Math.PI * Math.atan2(e, t);
      this.camera.fov = 180 - (90 + n) + this._fovOffset;
    }
    onResize() {
      this.updateCameraFov(), this.updateVerticalPositionScale(), this.camera.aspect = document.documentElement.clientWidth / document.documentElement.clientHeight, this.camera.updateProjectionMatrix(), this.updateSmoothBound();
    }
    updateCameraRotation() {
      false !== this._trackingEnabled && this.camera.rotation.copy(new nn);
    }
    updateCameraPosition() {
      false !== this.attachedEntity.isPresent() && false !== this._trackingEnabled && (this.attachedEntity.isPresent() ? false === this._entityFound && (this._entityFound = true, this.events.emit("cameraEntityFound")) : this._entityFound && (this._entityFound = false, this.events.emit("cameraEntityLost")), this.attachedEntity.ifPresent(e => {
        e.displayed = true, this.setSmoothPosition(e.position.toThreeVector3());
      }));
    }
    ifNeedSmoothPosition(e) {
      return this.getDistance(e) < this._smoothPositionBound;
    }
    getDistance(e) {
      return Math.abs(e.clone().subtract(vector_Vector3_Vector3.fromThreeVector3(this.camera.position)).length());
    }
    setSmoothPosition(e) {
      const t = e.clone().add(this.offset);
      this.camera.position.x = ValueUtils.smoothValue(t.x, this.camera.position.x, this._smoothPositionK), this.camera.position.y = ValueUtils.smoothValue(t.y, this.camera.position.y, this._smoothPositionK), this._shakeTool.tryShake(this.camera.position), this._smoothPositionK > 1 && (this._smoothPositionK = Math.max(1, this._smoothPositionK - this._smoothPositionKspeed));
    }
    shake(e = 500, t = 5) {
      this._shakeTool.shake(e, t);
    }
    updateCameraScale() {
      if (false === this._trackingEnabled) return;
      let e = 12;
      if (ValueUtils.isNotUndefinedAndNotNull(this._blockedPositionZ)) this._finallyPositionZ = this._blockedPositionZ, e = 4; else {
        const e = ValueUtils.smoothValue(this.fieldOfViewSize, this.cameraVerticalPosition);
        ValueUtils.isNumberChanged(this.cameraVerticalPosition, e) && (this.cameraVerticalPosition = e, this.updateCameraFov(), this.camera.updateProjectionMatrix()), this._cameraVerticalPositionScaleSmoothly = ValueUtils.smoothValue(this.cameraVerticalPositionScale, this._cameraVerticalPositionScaleSmoothly), this._finallyPositionZ = this.cameraVerticalPosition * this._cameraVerticalPositionScaleSmoothly * this.cameraVerticalPositionMultiply + this.offset.z;
      }
      this.camera.position.z = ValueUtils.smoothValue(this._finallyPositionZ, this.camera.position.z, e);
    }
    blockPositionZOn(e) {
      this._blockedPositionZ = e;
    }
    unBlockPosition() {
      this._blockedPositionZ = null;
    }
    get observableEntityUuid() {
      return this._observableEntityUuid;
    }
    get attachedEntity() {
      return np.entities.getEntity(this.observableEntityUuid);
    }
    updateFieldOfViewSize(e) {
      this.fieldOfViewSize = e, this.updateVerticalPositionScale();
    }
    updateVerticalPositionScale() {
      this.cameraVerticalPositionScale = Math.min(this.fieldOfViewSize / document.documentElement.clientWidth, this.fieldOfViewSize / document.documentElement.clientHeight);
    }
    updateSmoothBound() {
      this._smoothPositionBound = Math.max(500, document.documentElement.clientWidth);
    }
    setFovOffset(e) {
      this._fovOffset !== e && (this._fovOffset = e, this.updateCameraFov(), this.camera.updateProjectionMatrix());
    }
  }
  class CameraHud_CameraHud {
    constructor() {
      this.camera = new Wc(-document.documentElement.clientWidth / 2, document.documentElement.clientWidth / 2, document.documentElement.clientHeight / 2, -document.documentElement.clientHeight / 2, 0.1, 1e5), np.window.events.on("resize", () => this.onResize()), this.camera.position.z = 10;
    }
    onResize() {
      const e = document.documentElement.clientWidth / 2, t = document.documentElement.clientHeight / 2;
      this.camera.left = -e, this.camera.right = e, this.camera.top = t, this.camera.bottom = -t, this.camera.updateProjectionMatrix();
    }
  }
  class Renderer_Renderer {
    constructor() {
      this._renderPass = new window.THREE.RenderPass(np.canvas.getScene(), np.canvas.camera.camera), this._effectFXAA = new window.THREE.ShaderPass(window.THREE.FXAAShader), this._renderViaComposer = false, this.canvasId = "game-canvas", this._resolutionScale = 1, this._minResolutionScale = 0.3, this.events = new Events_Events, this.initEffectFXAA(), this.setListeners();
    }
    initEffectFXAA() {
      this._effectFXAA.uniforms.resolution.value.set(1 / document.documentElement.clientWidth, 1 / document.documentElement.clientHeight), this._effectFXAA.renderToScreen = true;
    }
    setListeners() {
      np.window.events.on("resize", () => this.onResize());
    }
    renderMainScene(e, t) {
      this._renderViaComposer ? this.composer.render() : this.render(e, t);
    }
    render(e, t) {
      this.renderer && this.renderer.render(e, t);
    }
    enableRenderViaComposer() {
      this._renderViaComposer = true;
    }
    disableRenderViaComposer() {
      this._renderViaComposer = false;
    }
    reCreateRenderer() {
      this.destroyRenderer(), this.createRenderer(), this.events.emit("reCreateRenderer");
    }
    createRenderer() {
      if (!this.renderer) try {
        this.renderer = this.getAvailableRenderer(), this.updateSize(), this.renderer.setPixelRatio(window.devicePixelRatio), this.renderer.autoClear = false, this.renderer.setClearColor(0, 0), this.renderer.gammaInput = true, this.renderer.gammaOutput = true, this.renderer.shadowMap.enabled = np.settings.graphics.getOptions().shadows, this.renderer.shadowMap.type = h, this.renderer.sortObjects = np.modules.mod.optimize2d, this.renderer.domElement.id = this.canvasId, this._$canvas = this.renderer.domElement, document.body.appendChild(this._$canvas), this.composer = new window.THREE.EffectComposer(this.renderer), this.composer.addPass(this._renderPass), this.events.emit("renderComposerPass"), this.composer.addPass(this._effectFXAA), this.events.emit("createRender");
      } catch (e) {
        console.error(e), alert(e);
      }
    }
    destroyRenderer() {
      this._$canvas && this._$canvas.remove(), this.renderer = null, this.composer = null;
    }
    static isWebGlAvailable() {
      try {
        const e = document.createElement("canvas");
        return !(!window.WebGLRenderingContext || !e.getContext("webgl") && !e.getContext("experimental-webgl"));
      } catch (e) {
        return false;
      }
    }
    getAvailableRenderer() {
      if (Renderer_Renderer.isWebGlAvailable()) {
        return new Ts(np.settings.graphics.getOptions().rendererOptions);
      }
      throw new Error("WebGL not supported");
    }
    onResize() {
      this.updateSize();
    }
    updateSize() {
      if (this.renderer) {
        const e = this.viewPortSize.clone().multiplyScalar(this.resolutionScale).ceil();
        this.renderer.setSize(e.x, e.y);
      }
    }
    getSize() {
      const e = this.renderer.getSize(new Lt);
      return new vector_Vector2_Vector2(e.width, e.height);
    }
    set resolutionScale (e) {
      const t = ValueUtils.limit(e, this._minResolutionScale, 1);
      this._resolutionScale !== t && (this._resolutionScale = t, this.updateSize(), this.events.emit("updateResolutionScale"));
    }
    get resolutionScale() {
      return this._resolutionScale;
    }
    get viewPortSize() {
      return new vector_Vector2_Vector2(document.documentElement.clientWidth, document.documentElement.clientHeight);
    }
  }
  class Canvas_Canvas extends Module_Module {
    constructor() {
      super(...arguments), this._scene = new _n, this._worldObject3d = new yn, this._sceneHud = new _n, this.center = new vector_Vector2_Vector2(document.documentElement.clientWidth / 2, document.documentElement.clientHeight / 2), this._lastDrawTime = performance.now(), this.fps = 60, this._timeouts = {}, this._intervals = {}, this._updateEntitiesTransformsToSkin = {}, this._framesCount = 0, this._enableDraw = false, this._enableHandlingTimers = true, this._requetsedAnimationDraw = false, this.events = new Events_Events, this._clock = new wh, this.delta = 0;
    }
    initialize() {
      super.initialize(), this.camera = new canvas_Camera_Camera, this.cameraHud = new CameraHud_CameraHud, this._scene.background = utils_Color_Color.fromScalar(16777215).toThreeColor(), this.renderer = new Renderer_Renderer, this.renderer.createRenderer(), this.camera.initialize(), this.setListeners(), this._worldObject3d.castShadow = true, this._worldObject3d.receiveShadow = true, this._scene.add(this._worldObject3d);
    }
    setListeners() {
      np.window.events.on("resize", () => this.onResize()), np.events.on("gameStart", () => this.onGameStart());
    }
    onGameStart() {
      this.startDraw();
    }
    startDraw() {
      this._enableDraw || (this._enableDraw = true, this.events.emit("canvasStartDraw"), this.draw());
    }
    stopDraw() {
      false !== this._enableDraw && (this._enableDraw = false, this.events.emit("canvasStopDraw"));
    }
    draw() {
      false !== this._enableDraw && (this.delta = this._clock.getDelta(), this._requetsedAnimationDraw = false, this.events.emit("canvasDrawBegin"), this.events.emit("beforeUpdateCamera"), this.camera.updateCamera(), this.events.emit("afterUpdateCamera"), this.tickTimeouts(), this.tickIntervals(), this.tickEntitiesTransformsToSkin(), this.render(), this.fps = 1e3 / (performance.now() - this._lastDrawTime), this._lastDrawTime = performance.now(), this._framesCount++, this.events.emit("canvasDrawEnd", {fps: this.fps}), this.requestAnimationFrame());
    }
    requestAnimationFrame() {
      this._requetsedAnimationDraw || (this._requetsedAnimationDraw = true, requestAnimationFrame(() => this.draw()));
    }
    tickTimeouts() {
      if (false !== this._enableHandlingTimers) for (const e in this._timeouts) ++this._timeouts[e].currentFramesCount >= this._timeouts[e].framesCount && (this._timeouts[e].callback(), delete this._timeouts[e]);
    }
    tickIntervals() {
      if (false !== this._enableHandlingTimers) for (const e in this._intervals) ++this._intervals[e].currentFramesCount >= this._intervals[e].framesCount && (this._intervals[e].currentFramesCount = 0, this._intervals[e].callback());
    }
    tickEntitiesTransformsToSkin() {
      for (const e in this._updateEntitiesTransformsToSkin) this._updateEntitiesTransformsToSkin[e] && this._updateEntitiesTransformsToSkin[e].setTransformsToSkin(), delete this._updateEntitiesTransformsToSkin[e];
    }
    render() {
      this.renderer.renderMainScene(this._scene, this.camera.camera), this.renderer.render(this._sceneHud, this.cameraHud.camera);
    }
    onResize() {
      this.center.x = document.documentElement.clientWidth / 2, this.center.y = document.documentElement.clientHeight / 2, np.socket.send("screen_resize", {size: {x: document.documentElement.clientWidth, y: document.documentElement.clientHeight}});
    }
    canSeeObject3d(e) {
      return this.camera.frustum.intersectsObject(e);
    }
    canSeePoint(e) {
      return this.camera.frustum.containsPoint(e);
    }
    enableFullScreen() {
      return new Promise((e, t) => {
        document.fullscreenElement && t();
        try {
          let n;
          document.body.requestFullscreen ? n = document.body.requestFullscreen() : document.body.mozRequestFullScreen ? n = document.body.mozRequestFullScreen() : document.body.webkitRequestFullscreen ? n = document.body.webkitRequestFullscreen() : document.body.msRequestFullscreen && (n = document.body.msRequestFullscreen()), n && n.then && n.catch ? n.then(() => e(undefined)).catch(() => t()) : t();
        } catch (e) {
          console.error(e.message), t();
        }
      });
    }
    disableFullScreen() {
      if (!document.fullscreenElement) return Promise.reject();
      try {
        if (document.exitFullscreen) return document.exitFullscreen();
        if (document.mozExitFullScreen) return document.mozExitFullScreen();
        if (document.webkitExitFullscreen) return document.webkitExitFullscreen();
        if (document.msExitFullscreen) return document.msExitFullscreen();
      } catch (e) {
        return console.error(e.message), Promise.reject();
      }
      return Promise.reject();
    }
    lockScreenOrientation(e = "landscape") {
      const t = screen.orientation.lock(e);
      return t.then(() => console.log("screen orientation locked")).catch(e => console.error(e.message)), t;
    }
    unLockScreenOrientation() {
      screen.orientation.unlock();
    }
    setTimeoutFrames(e, t = 1) {
      const n = Randomize_Randomize.getUuid();
      return t = Math.ceil(t), this._timeouts[n] = {callback: e, framesCount: t, currentFramesCount: 0}, n;
    }
    setIntervalFrames(e, t) {
      const n = Randomize_Randomize.getUuid();
      return t = Math.ceil(t), this._intervals[n] = {callback: e, framesCount: t, currentFramesCount: 0}, n;
    }
    setUpdateEntityTransformsToSkin(e) {
      this._updateEntitiesTransformsToSkin[e.uuid] = e;
    }
    removeUpdateEntityTransformsToSkin(e) {
      delete this._updateEntitiesTransformsToSkin[e.uuid];
    }
    clearTimeoutFrames(e) {
      delete this._timeouts[e];
    }
    clearIntervalFrames(e) {
      delete this._intervals[e];
    }
    get framesCount() {
      return this._framesCount;
    }
    addToWorldObject(e) {
      this._worldObject3d.add(e);
    }
    removeFromWorldObject(e) {
      this._worldObject3d.remove(e);
    }
    getWorldObject() {
      return this._worldObject3d;
    }
    getCountEntitiesByConstructor() {
      const e = {};
      this.fillCountEntitiesByConstructor(this._scene, e), console.log(e);
    }
    fillCountEntitiesByConstructor(e, t = {}) {
      for (const n in e.children) this.fillCountEntitiesByConstructor(e.children[n], t);
      e.userData && e.userData.entityUuid && np.entities.getEntity(e.userData.entityUuid).ifPresent(e => {
        undefined === t[e.constructor.name] && (t[e.constructor.name] = 0), t[e.constructor.name]++;
      });
    }
    getScene() {
      return this._scene;
    }
    getSceneHud() {
      return this._sceneHud;
    }
  }
  !function (e) {
    e.box2dTps = "box2dTps", e.socketSendingTPS = "socketSendingTPS", e.socketReceiveAndProcessTPS = "socketReceiveAndProcessTPS", e.serverTps = "serverTps";
  }(Xu || (Xu = {}));
  class Config_Config extends Module_Module {
    constructor() {
      super(...arguments), this.events = new Events_Events, this._options = {box2dTps: 30, serverTps: 10, socketSendingTPS: 20, socketReceiveAndProcessTPS: 20};
    }
    loadServerInfo() {}
    onLoadServerInfo(e) {
      ValueUtils.isNotUndefinedAndNotNull(e.serverTps) && this.update({serverTps: e.serverTps});
    }
    get(e) {
      return this._options[e];
    }
    update(e) {
      Object.assign(this._options, e), this.events.emit("configUpdate", {options: e});
    }
  }
  class ConnectionData_ConnectionData {
    constructor() {
      this.attributes = {}, this.userName = "", this.language = "en", this.screenSize = {x: document.documentElement.clientWidth, y: document.documentElement.clientHeight}, this.accessToken = np.storage.getItem("access-token"), this.isBlockedAd = false, this.settings = {enableClientPhysics: true}, this.roomName = "";
    }
  }
  class Connector_Connector extends Module_Module {
    constructor() {
      super(...arguments), this.connectionData = new ConnectionData_ConnectionData, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), this.setAvailableServer(), this.setListeners(), this.connectIfNeedConnectOnceToServer();
    }
    setAvailableServer() {
      if ("undefined" != typeof availableServerString) try {
        const e = JSON.parse(availableServerString);
        e.ip && e.port && np.socket.setServerAddress(e.ip + ":" + e.port);
      } catch (e) {}
    }
    setListeners() {
      this.events.on("loginToServer", () => this.onLoginToServer()), this.events.on("reLoginToServer", () => this.onReLoginToServer()), np.socket.events.on("loginHandshake", e => this.onLoginHandshake(e)), np.socket.events.on("error", () => this.onSocketError()), np.socket.events.on("connectError", () => this.connectError()), np.window.events.on("beforeunload", () => this.onBeforeunload()), np.events.on("gamePlay", () => this.onGamePlay());
    }
    connectIfNeedConnectOnceToServer() {
      const e = np.storage.getItem("NeedConnectOnceToServer");
      if (e) {
        np.storage.setItem("NeedConnectOnceToServer", "");
        try {
          const t = JSON.parse(e);
          Object.assign(this.connectionData, t.connectionData), np.socket.setServerAddress(t.serverAddress), np.events.emit("gamePlay");
        } catch (e) {}
      }
    }
    onGamePlay() {
      this.connect();
    }
    onLoginHandshake(e) {
      this.log("loginHandshake", e), this.connectionData.accessToken = e.accessToken, np.storage.setItem("access-token", e.accessToken);
    }
    onSocketError() {}
    connectError() {}
    onLoginToServer() {
      this.log("login", this.getConnectionData()), np.socket.send("login", this.getConnectionData());
    }
    onReLoginToServer() {
      this.log("reset", this.getConnectionData()), np.socket.send("reset", this.getConnectionData());
    }
    onBeforeunload() {
      this.disconnect();
    }
    connect() {
      np.socket.connectToServer();
    }
    disconnect() {
      false !== np.socket.isConnected() && np.socket.disconnect();
    }
    login() {
      this.events.emit("loginToServer");
    }
    reLogin() {
      this.events.emit("reLoginToServer");
    }
    getConnectionData() {
      return this.connectionData.language = np.languages.detectedLanguage, this.connectionData;
    }
    setNeedConnectAfterReloadPage() {
      const e = {serverAddress: np.socket.getServerAddress(), connectionData: this.connectionData};
      np.storage.setItem("NeedConnectOnceToServer", JSON.stringify(e));
    }
    setUserName(e) {
      this.connectionData.userName = e, this.events.emit("connectorSetUserName", {name: e});
    }
    getUserName() {
      return this.connectionData.userName;
    }
    log(...e) {
      e.unshift("<b>[Connector]</b> "), Logger_Logger.log.call(Logger_Logger, ...e);
    }
  }
  const Ju = n(47);
  var Ku, Zu, Qu;
  !function (e) {
    e[e.WINDOWS_PHONE = 0] = "WINDOWS_PHONE", e[e.ANDROID = 1] = "ANDROID", e[e.MACOS = 2] = "MACOS", e[e.IOS = 3] = "IOS", e[e.UNKNOWN = 4] = "UNKNOWN";
  }(Ku || (Ku = {}));
  class Device_DeviceImpl extends Module_Module {
    isMobile() {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }
    isMobileViaApplication() {
      return !!UrlUtils_UrlUtils.getParameter("device");
    }
    isGpuAcceleration() {
      return undefined === this._isGpuAcceleration && (this._isGpuAcceleration = Ju({failIfMajorPerformanceCaveat: true})), this._isGpuAcceleration;
    }
    getOs() {
      const e = navigator.userAgent || navigator.vendor || window.opera, t = this.isMobile();
      return t && /windows phone/i.test(e) ? Ku.WINDOWS_PHONE : t && /android/i.test(e) ? Ku.ANDROID : false === t && /Mac/.test(e) && !window.MSStream ? Ku.MACOS : t && /iPad|iPhone|iPod/.test(e) && !window.MSStream ? Ku.IOS : Ku.UNKNOWN;
    }
  }
  class DrawerModule_DrawerModule extends Module_Module {
    constructor() {
      super(...arguments), this._drawableEntities = {}, this._drawableEntitiesOnce = {};
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      np.canvas.events.on("canvasDrawBegin", () => this.onCanvasDrawBegin());
    }
    onCanvasDrawBegin() {
      this.draw();
    }
    draw() {
      for (const e in this._drawableEntities) this._drawableEntities[e].draw(), this._drawableEntities[e].abilities.onDraw();
      for (const e in this._drawableEntitiesOnce) {
        const t = this._drawableEntitiesOnce[e];
        delete this._drawableEntitiesOnce[e], t.draw(), t.abilities.onDraw();
      }
    }
    delete(e) {
      this._drawableEntities.hasOwnProperty(e) && delete this._drawableEntities[e], this._drawableEntitiesOnce.hasOwnProperty(e) && delete this._drawableEntitiesOnce[e];
    }
    add(e) {
      e && (this._drawableEntities[e.uuid] = e);
    }
    addOnce(e) {
      e && (this._drawableEntitiesOnce[e.uuid] = e);
    }
    isDrawable(e) {
      return this._drawableEntities.hasOwnProperty(e.uuid) || this._drawableEntitiesOnce.hasOwnProperty(e.uuid);
    }
    getCount() {
      return Object.keys(this._drawableEntities).length + Object.keys(this._drawableEntitiesOnce).length;
    }
  }
  class Ears_Ears extends Module_Module {
    constructor() {
      super(...arguments), this._object3d = new yn, this._attachedToEntityUuid = "", this._earsHeight = 1;
    }
    initialize() {
      super.initialize(), np.canvas.addToWorldObject(this._object3d);
    }
    moveEars() {
      np.entities.getEntity(this._attachedToEntityUuid).ifPresentOrElse(e => {
        this._object3d.position.copy(e.position.toThreeVector3()), this._object3d.position.z += this._earsHeight;
      }, () => {
        np.canvas.camera.attachedEntity.ifPresent(e => {
          this._object3d.position.copy(e.position.toThreeVector3()), this._object3d.position.z += this._earsHeight;
        });
      }), console.log(this._object3d.position);
    }
    attachToEntity(e) {
      this._attachedToEntityUuid = e;
    }
    deAttachFromEntity(e) {}
    getPosition() {
      return this._object3d.position.clone();
    }
  }
  class Optional {
    constructor(e) {
      this._value = e;
    }
    get() {
      if (Optional.isNull(this._value)) throw new Error("optional is empty");
      return this._value;
    }
    isPresent() {
      return !Optional.isNull(this._value);
    }
    ifPresent(e) {
      return Optional.isNull(this._value) ? new Optional : (e(this._value), new Optional(this._value));
    }
    filter(e) {
      return !Optional.isNull(this._value) && e(this._value) ? new Optional(this._value) : new Optional;
    }
    map(e) {
      let t;
      return Optional.isNull(this._value) ? new Optional : (t = e(this._value), Optional.isNull(t) ? new Optional : new Optional(t));
    }
    flatMap(e) {
      let t;
      if (Optional.isNull(this._value)) return new Optional;
      if (t = e(this._value), Optional.isNull(t) || Optional.isNull(t.get)) throw new Error("mapper does not return an Optional");
      return t;
    }
    peek(e) {
      return Optional.isNull(this._value) ? new Optional : (e(this._value), new Optional(this._value));
    }
    orElse(e) {
      return Optional.isNull(this._value) ? e : this._value;
    }
    orElseGet(e) {
      return Optional.isNull(this._value) ? e() : this._value;
    }
    orElseThrow(e) {
      if (Optional.isNull(this._value)) throw e();
      return this._value;
    }
    ifPresentOrElse(e, t) {
      Optional.isNull(this._value) ? t() : this.ifPresent(e);
    }
    or(e) {
      return Optional.isNull(this._value) ? e() : this;
    }
    hashCode() {
      return -1;
    }
    static isNull(e) {
      return null == e;
    }
    static empty() {
      return new Optional;
    }
    static of(e) {
      if (null == e) throw new Error("value is not defined");
      return new Optional(e);
    }
    static ofNullable(e) {
      return new Optional(e);
    }
  }
  !function (e) {
    e.BOX = "BOX", e.CIRCLE = "CIRCLE";
  }(Zu || (Zu = {})), function (e) {
    e[e.STATIC = 0] = "STATIC", e[e.KINEMATIC = 1] = "KINEMATIC", e[e.DYNAMIC = 2] = "DYNAMIC";
  }(Qu || (Qu = {}));
  class Box2dEntityDefaultData_Box2dEntityDefaultData {
    constructor() {
      this.body = {type: Qu.DYNAMIC, mass: 1, angle: 0, position: {x: 0, y: 0}, velocity: {x: 0, y: 0}, angularVelocity: 0, linearDamping: 0, angularDamping: 0, fixedRotation: false, bullet: false, userData: {}}, this.fixtures = {a: {friction: 0.2, restitution: 0, density: 1, sensor: false, angle: 0, type: Zu.CIRCLE, radius: 25, position: {x: 0, y: 0}, serverOnly: false}}, this.speedMultiplier = 1, this.activeDistance = 1e3, this.canUnActive = true, this.allowContact = true, this.size = {x: 10, y: 10};
    }
  }
  class Ability_Ability {
    constructor(e) {
      this._listeners = new Listeners, this.parentEntity = e;
    }
    initialize() {}
    onCreate() {}
    onAddAbility() {}
    onSpawn() {}
    onSetServerProperties(e) {}
    onUpdateServerProperties(e) {}
    onSetPhysicsTransforms(e) {}
    onReCreateSkin() {}
    onAddedToCache() {}
    onDraw() {}
    onChangeDisplaying(e) {}
    onRemove() {
      this._listeners.destroy();
    }
    destroy() {
      this._listeners.destroy(), this.parentEntity = null;
    }
    onBorn() {}
    onDead() {}
  }
  class EntityBox2dTransformsData {
    constructor() {
      this.force = false, this.isActive = true, this.isAwake = true, this.isSensorAll = false, this.transforms = new EntityBox2dTransforms_EntityBox2dTransforms, this.transformsVersion = 1;
    }
  }
  class EntityBox2dTransforms_EntityBox2dTransforms {
    constructor() {
      this.position = vector_Vector2_Vector2.ZERO.clone(), this.velocity = vector_Vector2_Vector2.ZERO.clone(), this.size = vector_Vector2_Vector2.IDENTITY.clone(), this.angularVelocity = 0, this.angle = 0, this.speedMultiplier = 1, this.rotation = 0;
    }
  }
  class EntityTransforms_EntityTransforms {
    constructor() {
      this.position = new vector_Vector3_Vector3, this.rotation = new vector_Vector3_Vector3, this.size = new vector_Vector3_Vector3, this.scale = new vector_Vector3_Vector3, this.velocity = new vector_Vector3_Vector3;
    }
  }
  class AbilityBox2d_AbilityBox2d extends Ability_Ability {
    constructor(e, t) {
      super(e), this.box2dData = new Box2dEntityDefaultData_Box2dEntityDefaultData, this._box2dTransformsData = new EntityBox2dTransformsData, this.parentEntityBox2dData = {}, this.attachedToParent = true, this.rotationOnMouse = false, this.createdBox2dEntity = false, this.canDraw = false, this.attachedToServer = true, this.gotFirstTransforms = false, this._parentTransforms = new EntityTransforms_EntityTransforms, this.smoothParentEntityWithBox2d = {position: 6, rotation: 3, velocity: 3, size: 6}, this.smoothBox2dEntityWithServer = {position: 5}, this.syncWithServer = {position: true, velocity: true, size: true, angle: true, angularVelocity: true}, this.syncWithBox2d = {position: true, velocity: true, size: true, angle: true, angularVelocity: true}, this.settings = {needSmoothKForSmoothBox2dToServerOnInfo: 5, needCountForSmoothBox2dToServerOnInfo: 10, currentCountForSmoothBox2dToServerOnInfo: 0, minDistanceBox2dAndServerPositionForSmooth: 400}, t && Object.assign(this.parentEntityBox2dData, t), this.parentEntity.updatedForceSteps.updatedAbilityBox2dServerProperties = false, this.parentEntity.updatedForceSteps.updatedAbilityBox2dTransforms = false, this.parentEntity.updatedForceSteps.updatedAbilityBox2dDraw = false;
    }
    onSpawn() {
      super.onSpawn(), this.box2dData = this.getBox2dData(), this.createEntity();
    }
    createEntity() {
      this.attachedToParent && (this.parentEntity.position.x = this.box2dData.body.position.x, this.parentEntity.position.y = this.box2dData.body.position.y, this.parentEntity.isServer && this.parentEntity.size.setScalarXY(this.parentEntity.serverProperties.size.x, this.parentEntity.serverProperties.size.y), this.parentEntity.rotation.z = Box2dUtils.getThreeRotationFromBox2d(this.box2dData.body.angle), this.copyParentTransforms()), np.world.entities.create(this.uuid, this.box2dData), this.createdBox2dEntity = true, this.parentEntity.updatedForceSteps.updatedAbilityBox2dServerProperties = true;
    }
    copyParentTransforms() {
      this._parentTransforms.position.copy(this.parentEntity.position), this._parentTransforms.size.copy(this.parentEntity.size), this._parentTransforms.rotation.copy(this.parentEntity.rotation);
    }
    onSetServerProperties(e) {
      super.onSetServerProperties(e), this.onUpdateServerProperties(e);
    }
    onUpdateServerProperties(e) {
      if (super.onUpdateServerProperties(e), false === this.createdBox2dEntity) return;
      if (false === this.attachedToServer && false === this.parentEntity.needUpdateForce) return;
      const t = this.getBox2dData();
      t.body.mass !== this.box2dData.body.mass && np.world.entities.setMass(this.uuid, t.body.mass), t.body.type !== this.box2dData.body.type && np.world.entities.setBodyType(this.uuid, t.body.type), e.box2d && e.box2d.fixtures && np.world.entities.reSetFixture(this.uuid, t), e.size && this.setSize(vector_Vector2_Vector2.fromObject(t.size)), t.speedMultiplier !== this.box2dData.speedMultiplier && this.setSpeedMultiplier(t.speedMultiplier), this.syncWithServer.angularVelocity && t.body.angularVelocity !== this.box2dData.body.angularVelocity && np.world.entities.setAngularVelocity(this.uuid, t.body.angularVelocity), this.syncWithServer.velocity && np.myUuid !== this.parentEntity.uuid && ValueUtils.isPoint2Changed(this.box2dData.body.velocity, t.body.velocity, 0) && this.setVelocity(vector_Vector2_Vector2.fromObject(t.body.velocity)), this.syncWithServer.position && (this.parentEntity.needUpdateForce ? (this.setPosition(vector_Vector2_Vector2.fromObject(t.body.position), true), this.parentEntity.updatedForceSteps.updatedAbilityBox2dServerProperties = true) : this.gotFirstTransforms && (this.settings.currentCountForSmoothBox2dToServerOnInfo = 0, this.setPositionSmoothlyToServer())), this.syncWithServer.angle && t.body.angle !== this.box2dData.body.angle && np.world.entities.setAngle(this.uuid, t.body.angle, this._box2dTransformsData.transformsVersion), this.box2dData = t;
    }
    setSpeedMultiplier(e) {
      this.getSpeedMultiplier() !== e && np.world.entities.setMultiplier(this.uuid, e);
    }
    getSpeedMultiplier() {
      return this._box2dTransformsData.transforms.speedMultiplier;
    }
    setPosition(e, t = false) {
      return (ValueUtils.isVector2Changed(this._box2dTransformsData.transforms.position, e, 0) || t) && np.world.entities.setPosition(this.uuid, e, this._box2dTransformsData.transformsVersion, t), this._box2dTransformsData.transformsVersion;
    }
    setSize(e) {
      return ValueUtils.isVector2Changed(this._box2dTransformsData.transforms.size, e, 0) && np.world.entities.setSize(this.uuid, e, this._box2dTransformsData.transformsVersion), this._box2dTransformsData.transformsVersion;
    }
    setAllowContact(e) {
      np.world.entities.setAllowContact(this.uuid, e);
    }
    getPosition() {
      return this._box2dTransformsData.transforms.position;
    }
    setVelocity(e) {
      return ValueUtils.isVector2Changed(this._box2dTransformsData.transforms.velocity, e, 0) && np.world.entities.setVelocity(this.uuid, e, this._box2dTransformsData.transformsVersion), this._box2dTransformsData.transformsVersion;
    }
    sendUpdateRequest() {
      np.world.entities.sendUpdateRequest(this.uuid);
    }
    setAngle(e) {
      return np.world.entities.setAngle(this.uuid, e, this._box2dTransformsData.transformsVersion), this._box2dTransformsData.transformsVersion;
    }
    getAngle() {
      return this._box2dTransformsData.transforms.rotation;
    }
    isSensorAll() {
      return this._box2dTransformsData.isSensorAll;
    }
    setVelocitySmoothly(e, t = 0) {
      np.world.entities.setVelocitySmoothly(this.uuid, e, t);
    }
    addVelocity(e) {
      np.world.entities.addVelocity(this.uuid, e);
    }
    getVelocity() {
      return this._box2dTransformsData.transforms.velocity;
    }
    setSensor(e) {
      np.world.entities.setSensor(this.uuid, e);
    }
    getBox2dData() {
      const e = this.parentEntity, t = this.parentEntityBox2dData, n = new Box2dEntityDefaultData_Box2dEntityDefaultData;
      return e.isServer ? this.updateBox2dDataFromServer(n, t, e) : this.updateBox2dDataFromClient(n, t, e), n.body.userData = {serverProperties: this.parentEntity.serverProperties, myServerUuid: np.myServerUuid, myUuid: np.myUuid, uuid: this.parentEntity.uuid, allowContact: this.box2dData.allowContact}, n;
    }
    updateBox2dDataFromClient(e, t, n) {
      e.body.mass = ValueUtils.firstNonNullOr(e.body.mass, t.body.mass), e.fixtures = ValueUtils.firstNonNullOr(e.fixtures, t.fixtures), e.body.type = ValueUtils.firstNonNullOr(e.body.type, t.body.type), e.body.position = ValueUtils.firstNonNullOr(e.body.position, t.body.position, n.position.toObject()), this.rotationOnMouse && np.started ? e.body.angle = ValueUtils.absAngle(ValueUtils.firstNonNullOr(e.body.angle, np.input.mouse.getAngle())) : e.body.angle = ValueUtils.absAngle(ValueUtils.firstNonNullOr(e.body.angle, n.rotation.z)), e.body.velocity = ValueUtils.firstNonNullOr(e.body.velocity, t.body.velocity), e.body.angularVelocity = ValueUtils.firstNonNullOr(e.body.angularVelocity, t.body.angularVelocity), e.speedMultiplier = ValueUtils.firstNonNullOr(e.speedMultiplier, t.speedMultiplier), e.body.fixedRotation = ValueUtils.firstNonNullOr(e.body.fixedRotation, t.body.fixedRotation), e.body.linearDamping = ValueUtils.firstNonNullOr(e.body.linearDamping, t.body.linearDamping), e.body.angularDamping = ValueUtils.firstNonNullOr(e.body.angularDamping, t.body.angularDamping), e.activeDistance = ValueUtils.firstNonNullOr(e.activeDistance, t.activeDistance), e.canUnActive = ValueUtils.firstNonNullOr(e.canUnActive, t.canUnActive), e.allowContact = ValueUtils.firstNonNullOr(e.allowContact, t.allowContact), e.size = ValueUtils.firstNonNullOr(e.size, t.size);
    }
    updateBox2dDataFromServer(e, t, n) {
      e.body.mass = ValueUtils.firstNonNullOr(e.body.mass, t.body ? t.body.mass : undefined, n.serverProperties.box2d.body.mass), e.fixtures = ValueUtils.firstNonNullOr(e.fixtures, t.fixtures, n.serverProperties.box2d.fixtures), e.body.type = ValueUtils.firstNonNullOr(e.body.type, t.body ? t.body.type : undefined, n.serverProperties.box2d.body.type), e.body.position = ValueUtils.firstNonNullOr(e.body.position, t.body ? t.body.position : undefined, n.serverProperties.position), this.rotationOnMouse && np.started ? e.body.angle = ValueUtils.absAngle(ValueUtils.firstNonNullOr(e.body.angle, t.body ? t.body.angle : undefined, np.input.mouse.getAngle())) : e.body.angle = ValueUtils.absAngle(ValueUtils.firstNonNullOr(e.body.angle, t.body ? t.body.angle : undefined, n.serverProperties.rotation)), e.body.velocity = vector_Vector2_Vector2.fromObject(n.serverProperties.velocity), e.body.angularVelocity = n.serverProperties.box2d.body.angularVelocity, e.speedMultiplier = ValueUtils.firstNonNullOr(e.speedMultiplier, t.speedMultiplier, n.serverProperties.speedMultiplier), e.body.bullet = ValueUtils.firstNonNullOr(e.body.bullet, t.body ? t.body.bullet : undefined, n.serverProperties.box2d.body.bullet), e.body.fixedRotation = ValueUtils.firstNonNullOr(e.body.fixedRotation, t.body ? t.body.fixedRotation : undefined, n.serverProperties.box2d.body.fixedRotation), e.body.linearDamping = ValueUtils.firstNonNullOr(e.body.linearDamping, t.body ? t.body.linearDamping : undefined, n.serverProperties.box2d.body.linearDamping), e.body.angularDamping = ValueUtils.firstNonNullOr(e.body.angularDamping, t.body ? t.body.angularDamping : undefined, n.serverProperties.box2d.body.angularDamping), e.activeDistance = ValueUtils.firstNonNullOr(e.activeDistance, t.activeDistance), e.canUnActive = ValueUtils.firstNonNullOr(e.canUnActive, t.canUnActive), e.allowContact = ValueUtils.firstNonNullOr(e.allowContact, t.allowContact), e.size = ValueUtils.firstNonNullOr(e.size, t.size, n.serverProperties.size);
    }
    onSetPhysicsTransforms(e) {
      if (this.canDraw = true, this.gotFirstTransforms = true, e.transforms && (e.transforms.position && this._box2dTransformsData.transforms.position.applyFromObject(e.transforms.position), e.transforms.velocity && this._box2dTransformsData.transforms.velocity.applyFromObject(e.transforms.velocity), ValueUtils.isNumber(e.transforms.rotation) && (this._box2dTransformsData.transforms.rotation = ValueUtils.absAngle(e.transforms.rotation)), ValueUtils.isNumber(e.transforms.speedMultiplier) && (this._box2dTransformsData.transforms.speedMultiplier = e.transforms.speedMultiplier)), ValueUtils.isNumber(e.transformsVersion) && (this._box2dTransformsData.transformsVersion = e.transformsVersion + 1), e.force) this.parentEntity.needUpdateForce = true, this.parentEntity.updatedForceSteps.updatedServerProperties = true, this.parentEntity.updatedForceSteps.updatedAbilityBox2dServerProperties = true; else if (this.settings.currentCountForSmoothBox2dToServerOnInfo <= this.settings.needCountForSmoothBox2dToServerOnInfo) this.setPositionSmoothlyToServer(); else {
        const e = vector_Vector2_Vector2.fromObject(this.parentEntity.serverProperties.position);
        this._box2dTransformsData.transforms.position.clone().subtract(e).length() > this.settings.minDistanceBox2dAndServerPositionForSmooth && (this.settings.currentCountForSmoothBox2dToServerOnInfo = 0, this.setPositionSmoothlyToServer());
      }
      this.parentEntity.needUpdateForce && this.parentEntity.updatedForceSteps.updatedAbilityBox2dServerProperties && (this.parentEntity.updatedForceSteps.updatedAbilityBox2dTransforms = true), this.rotationOnMouse && np.started && np.world.entities.setAngle(this.uuid, this.box2dData.body.angle, this._box2dTransformsData.transformsVersion), np.drawer.addOnce(this.parentEntity);
    }
    setPositionSmoothlyToServer() {
      if (false === this.parentEntity.isServer || false === this.attachedToServer || false === this.syncWithServer.position) return;
      this.settings.currentCountForSmoothBox2dToServerOnInfo++;
      const e = this.parentEntity.serverProperties, t = vector_Vector2_Vector2.fromObject(e.velocity).multiplyScalar(e.box2d.speedMultiplier), n = this._box2dTransformsData.transforms.position.clone().smoothlyAdd(vector_Vector2_Vector2.fromObject(e.position), window.sbpws2 || this.smoothBox2dEntityWithServer.position).add(t);
      this.setPosition(n);
    }
    onDraw() {
      if (super.onDraw(), false === this.canDraw || false === this.attachedToParent) return;
      let e;
      this.parentEntity.needUpdateForce && this.isTransformsUpdateForceCompleted() && (e = 1), this.setSmoothlyPosition(e), this.setSmoothlyVelocity(e), this.setSmoothlySize(e), this.setSmoothlyRotation(e), this.attachedToParent && ((ValueUtils.isNumberChanged(this.parentEntity.position.x, this._parentTransforms.position.x, 0.1) || ValueUtils.isNumberChanged(this.parentEntity.position.y, this._parentTransforms.position.y, 0.1) || ValueUtils.isNumberChanged(this.parentEntity.size.x, this._parentTransforms.size.x, 0.1) || ValueUtils.isNumberChanged(this.parentEntity.size.y, this._parentTransforms.size.y, 0.1) || ValueUtils.isNumberChanged(this.parentEntity.rotation.z, this._parentTransforms.rotation.z, 0.01)) && np.drawer.addOnce(this.parentEntity), this.syncWithBox2d.position && (this.parentEntity.position.x = this._parentTransforms.position.x, this.parentEntity.position.y = this._parentTransforms.position.y), this.syncWithBox2d.size && (this.parentEntity.size.x = this._parentTransforms.size.x, this.parentEntity.size.y = this._parentTransforms.size.y), this.syncWithBox2d.angle && (this.parentEntity.rotation.z = this._parentTransforms.rotation.z), this.syncWithBox2d.velocity && this.parentEntity.velocity.copy(this._parentTransforms.velocity)), this.parentEntity.needUpdateForce && this.isTransformsUpdateForceCompleted() && (this.parentEntity.updatedForceSteps.updatedAbilityBox2dDraw = true);
    }
    isTransformsUpdateForceCompleted() {
      return this.parentEntity.updatedForceSteps.updatedAbilityBox2dServerProperties && this.parentEntity.updatedForceSteps.updatedAbilityBox2dTransforms;
    }
    setSmoothlyPosition(e = this.smoothParentEntityWithBox2d.position) {
      false !== this.syncWithBox2d.position && (this._parentTransforms.position.x = ValueUtils.smoothValue(this._box2dTransformsData.transforms.position.x, this._parentTransforms.position.x, e), this._parentTransforms.position.y = ValueUtils.smoothValue(this._box2dTransformsData.transforms.position.y, this._parentTransforms.position.y, e));
    }
    setSmoothlyVelocity(e = this.smoothParentEntityWithBox2d.velocity) {
      false !== this.syncWithBox2d.velocity && (this._parentTransforms.velocity.x = ValueUtils.smoothValue(this._box2dTransformsData.transforms.velocity.x, this._parentTransforms.velocity.x, e), this._parentTransforms.velocity.y = ValueUtils.smoothValue(this._box2dTransformsData.transforms.velocity.y, this._parentTransforms.velocity.y, e), this._parentTransforms.velocity.multiplyScalar(this.box2dData.speedMultiplier));
    }
    setSmoothlyRotation(e = this.smoothParentEntityWithBox2d.rotation) {
      false !== this.syncWithBox2d.angle && (this._parentTransforms.rotation.z = ValueUtils.smoothAngle(Box2dUtils.getThreeRotationFromBox2d(this._box2dTransformsData.transforms.rotation), this._parentTransforms.rotation.z, e));
    }
    setSmoothlySize(e = this.smoothParentEntityWithBox2d.size) {
      false !== this.syncWithBox2d.size && false !== this.parentEntity.isServer && (this._parentTransforms.size.x = ValueUtils.smoothValue(this.parentEntity.serverProperties.size.x, this._parentTransforms.size.x, e), this._parentTransforms.size.y = ValueUtils.smoothValue(this.parentEntity.serverProperties.size.y, this._parentTransforms.size.y, e));
    }
    get serverUuid() {
      return this.parentEntity.serverProperties.uuid;
    }
    get uuid() {
      return this.parentEntity.uuid;
    }
    isIam() {
      return np.myServerUuid === this.serverUuid;
    }
    getSmoothForDistance(e, t, n = 0, i = 300, r = 1) {
      if (!this.parentEntity) return 1;
      const o = Math.abs(vector_Vector2_Vector2.fromObject(this.parentEntity.serverProperties.position).subtract(e).length());
      return o >= n && o <= i && (t *= 1 - (o - n) / i), o > i && (t = 1), t = Math.max(r, t);
    }
    onRemove() {
      this.destroyBox2dEntity();
    }
    destroy() {
      this.destroyBox2dEntity(), delete this.parentEntity.updatedForceSteps.updatedAbilityBox2dServerProperties, delete this.parentEntity.updatedForceSteps.updatedAbilityBox2dTransforms, delete this.parentEntity.updatedForceSteps.updatedAbilityBox2dDraw, super.destroy();
    }
    destroyBox2dEntity() {
      np.world.entities.destroy(this.uuid), this.createdBox2dEntity = false;
    }
    onAddedToCache() {
      super.onAddedToCache(), this.canDraw = false, this.gotFirstTransforms = false;
    }
  }
  class Vector3EntityAbstract_Vector3EntityAbstract extends vector_Vector3_Vector3 {
    constructor(e, t = 0, n = 0, i = 0) {
      super(t, n, i), this._entity = e;
    }
    setScalarX(e) {
      return super.x !== e && (super.setScalarX(e), this.addToDrawer()), this;
    }
    setScalarY(e) {
      return super.y !== e && (super.setScalarY(e), this.addToDrawer()), this;
    }
    setScalarZ(e) {
      return super.z !== e && (super.setScalarZ(e), this.addToDrawer()), this;
    }
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    set z (e) {
      this.setScalarZ(e);
    }
    get x() {
      return super.x;
    }
    get y() {
      return super.y;
    }
    get z() {
      return super.z;
    }
    copy(e) {
      return this.set(e);
    }
    setEntity(e) {
      return this._entity = e, this;
    }
    addToDrawer() {
      this._entity && this._entity.skin && np.canvas.setUpdateEntityTransformsToSkin(this._entity);
    }
    updateInstancedTransform() {
      this._entity && this._entity.isInstanced() && this._entity.skin && this._entity.setTransformsToSkin();
    }
  }
  class Vector3EntityPosition_Vector3EntityPosition extends Vector3EntityAbstract_Vector3EntityAbstract {
    constructor(e, t = 0, n = 0, i = 0) {
      super(e, t, n, i), this.offset = new vector_Vector3_Vector3, this._withOffset = new vector_Vector3_Vector3, this.offset.enableEvents(), this.offset.events.on("change", () => this.onOffsetChange());
    }
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    set z (e) {
      this.setScalarZ(e);
    }
    get x() {
      return super.x;
    }
    get y() {
      return super.y;
    }
    get z() {
      return super.z;
    }
    onOffsetChange() {
      this.addToDrawer();
    }
    setToSkin() {
      this._entity && (this._entity.isInstanced() ? this.updateInstancedTransform() : this._entity.skin && this._entity.skin.setTransforms(this.getWithOffset(), null, null));
    }
    getWithOffset() {
      return this._withOffset.copy(this).add(this.offset);
    }
    clone(e) {
      return new Vector3EntityPosition_Vector3EntityPosition(e, this.x, this.y, this.z);
    }
  }
  class Vector3EntityRotation_Vector3EntityRotation extends Vector3EntityAbstract_Vector3EntityAbstract {
    constructor(e, t = 0, n = 0, i = 0) {
      super(e, t, n, i), this.offset = new vector_Vector3_Vector3, this._withOffset = new vector_Vector3_Vector3, this.offset.enableEvents(), this.offset.events.on("change", () => this.onOffsetChange());
    }
    setScalarX(e) {
      return super.setScalarX(ValueUtils.absAngle(e));
    }
    setScalarY(e) {
      return super.setScalarY(ValueUtils.absAngle(e));
    }
    setScalarZ(e) {
      return super.setScalarZ(ValueUtils.absAngle(e));
    }
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    set z (e) {
      this.setScalarZ(e);
    }
    get x() {
      return super.x;
    }
    get y() {
      return super.y;
    }
    get z() {
      return super.z;
    }
    onOffsetChange() {
      this.addToDrawer();
    }
    setToSkin() {
      this._entity && (this._entity.isInstanced() ? this.updateInstancedTransform() : this._entity.skin && this._entity.skin.setTransforms(null, this.getWithOffset(), null));
    }
    getWithOffset() {
      return this._withOffset.copy(this).add(this.offset);
    }
    clone(e) {
      return new Vector3EntityRotation_Vector3EntityRotation(e, this.x, this.y, this.z);
    }
  }
  class Vector3EntitySize_Vector3EntitySize extends Vector3EntityAbstract_Vector3EntityAbstract {
    constructor() {
      super(...arguments), this._scaled = new vector_Vector3_Vector3;
    }
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    set z (e) {
      this.setScalarZ(e);
    }
    get x() {
      return super.x;
    }
    get y() {
      return super.y;
    }
    get z() {
      return super.z;
    }
    setToSkin() {
      this._entity && (this._entity.isInstanced() ? this.updateInstancedTransform() : this._entity.skin && (this.getScaledSize().isZero() && console.error("ZERO"), this._entity.skin.setTransforms(null, null, this.getScaledSize())));
    }
    getScaledSize() {
      return this._scaled.copy(this._entity.size).multiply(this._entity.scale);
    }
    clone(e) {
      return new Vector3EntitySize_Vector3EntitySize(e, this.x, this.y, this.z);
    }
  }
  class Vector3EntityScale_Vector3EntityScale extends Vector3EntitySize_Vector3EntitySize {
    set x (e) {
      this.setScalarX(e);
    }
    set y (e) {
      this.setScalarY(e);
    }
    set z (e) {
      this.setScalarZ(e);
    }
    get x() {
      return super.x;
    }
    get y() {
      return super.y;
    }
    get z() {
      return super.z;
    }
    clone(e) {
      return new Vector3EntityScale_Vector3EntityScale(e, this.x, this.y, this.z);
    }
  }
  class LinkedListIterator_LinkedListIterator {
    constructor(e) {
      this.stopIterationFlag = false, this.currentNode = null, this.List = e;
    }
    next() {
      let e = this.currentNode;
      return null !== this.currentNode && (this.currentNode = this.currentNode.next), e;
    }
    hasNext() {
      return null !== this.currentNode;
    }
    reset() {
      this.currentNode = this.List.getHeadNode();
    }
    first() {
      return this.reset(), this.next();
    }
    setList(e) {
      this.List = e, this.reset();
    }
    each(e) {
      let t;
      for (this.reset(); this.hasNext() && !this.stopIterationFlag;) e(t = this.next());
      this.stopIterationFlag = false;
    }
    eachFind(e) {
      let t;
      for (this.reset(); this.hasNext() && !this.stopIterationFlag;) if (e(t = this.next())) return this.stopIterationFlag = false, Optional.ofNullable(t);
      return this.stopIterationFlag = false, Optional.empty();
    }
    last() {
      return this.resetReverse(), this.nextReverse();
    }
    resetReverse() {
      this.currentNode = this.List.getTailNode();
    }
    nextReverse() {
      let e = this.currentNode;
      return null !== this.currentNode && (this.currentNode = this.currentNode.prev), e;
    }
    eachReverse(e) {
      let t;
      for (this.resetReverse(); this.hasNext() && !this.stopIterationFlag;) e(t = this.nextReverse());
      this.stopIterationFlag = false;
    }
    interrupt() {
      this.stopIterationFlag = true;
    }
  }
  class LinkedListNode {
    constructor(e) {
      this.next = null, this.prev = null, this.data = e;
    }
    hasNext() {
      return null !== this.next;
    }
    hasPrev() {
      return null !== this.prev;
    }
    getData() {
      return this.data;
    }
    toString() {
      return "object" == typeof this.data ? JSON.stringify(this.data) : String(this.data);
    }
  }
  let ed = n(48);
  class LinkedList_LinkedList {
    constructor() {
      this.iterator = new LinkedListIterator_LinkedListIterator(this), this.head = null, this.tail = null, this.size = 0;
    }
    createNewNode(e) {
      return new LinkedListNode(e);
    }
    getHeadNode() {
      return this.head;
    }
    getTailNode() {
      return this.tail;
    }
    isEmpty() {
      return 0 === this.size;
    }
    getSize() {
      return this.size;
    }
    clear() {
      for (; !this.isEmpty();) this.remove();
    }
    insert(e) {
      let t = this.createNewNode(e);
      return this.isEmpty() ? this.head = this.tail = t : (this.tail.next = t, t.prev = this.tail, this.tail = t), this.size += 1, true;
    }
    insertFirst(e) {
      if (this.isEmpty()) this.insert(e); else {
        let t = this.createNewNode(e);
        t.next = this.head, this.head.prev = t, this.head = t, this.size += 1;
      }
      return true;
    }
    insertAt(e, t) {
      let n = this.getHeadNode(), i = this.createNewNode(t), r = 0;
      if (e < 0 || e > this.getSize() - 1) return false;
      if (0 === e) return this.insertFirst(t), true;
      for (; r < e;) n = n.next, r += 1;
      return n.prev.next = i, i.prev = n.prev, n.prev = i, i.next = n, this.size += 1, true;
    }
    insertBefore(e, t) {
      return this.insertAt(this.indexOf(e), t);
    }
    insertAfter(e, t) {
      let n = this.indexOf(e);
      return n + 1 === this.getSize() ? this.insert(t) : this.insertAt(n + 1, t);
    }
    remove() {
      if (this.isEmpty()) return null;
      let e = this.getTailNode();
      return 1 === this.getSize() ? (this.head = null, this.tail = null) : (this.tail = this.getTailNode().prev, this.tail.next = null), this.size -= 1, e;
    }
    removeFirst() {
      if (this.isEmpty()) return null;
      let e;
      return 1 === this.getSize() ? e = this.remove() : (e = this.getHeadNode(), this.head = this.head.next, this.head.prev = null, this.size -= 1), e;
    }
    removeAt(e) {
      let t = this.findAt(e);
      return e < 0 || e > this.getSize() - 1 ? null : 0 === e ? this.removeFirst() : e === this.getSize() - 1 ? this.remove() : (t.prev.next = t.next, t.next.prev = t.prev, t.next = t.prev = null, this.size -= 1, t);
    }
    removeNode(e) {
      return this.removeAt(this.indexOf(e));
    }
    indexOf(e) {
      let t;
      this.iterator.reset();
      let n = 0;
      for (; this.iterator.hasNext();) {
        if (t = this.iterator.next(), ed(t.getData(), e)) return n;
        n += 1;
      }
      return -1;
    }
    find(e) {
      let t;
      for (this.iterator.reset(); this.iterator.hasNext();) if (t = this.iterator.next(), ed(t.getData(), e)) return t;
    }
    findAt(e) {
      if (this.isEmpty() || e > this.getSize() - 1) return;
      let t = this.getHeadNode(), n = 0;
      for (; n < e;) t = t.next, n += 1;
      return t;
    }
    contains(e) {
      return !!~this.indexOf(e);
    }
    forEach(e, t = false) {
      t ? (this.iterator.resetReverse(), this.iterator.eachReverse(e)) : (this.iterator.reset(), this.iterator.each(e));
    }
    forEachFind(e) {
      return this.iterator.reset(), this.iterator.eachFind(e);
    }
    toArray() {
      let e = [];
      return this.forEach(t => e.push(t.getData())), e;
    }
    interruptEnumeration() {
      this.iterator.interrupt();
    }
  }
  class SkinOptions {}
  class AbstractSkin {
    constructor(e) {
      this._options = new SkinOptions, this._customOptions = e;
    }
    initialize() {
      Object.assign(this._options, this._customOptions);
    }
    draw() {}
  }
  class AbstractObjectSkin_AbstractObjectSkinOptions extends SkinOptions {
    constructor() {
      super(...arguments), this.positionOffset = new vector_Vector3_Vector3;
    }
  }
  class AbstractObjectSkin_AbstractObjectSkin extends AbstractSkin {
    constructor(e) {
      super(e), this._options = new AbstractObjectSkin_AbstractObjectSkinOptions, this._positionWithOffset = new vector_Vector3_Vector3;
    }
    setTransforms(e, t, n) {
      ValueUtils.isUndefinedOrNull(this.getObject3d()) || (e && this.setPosition(this._positionWithOffset.copy(e).add(this._options.positionOffset)), t && this.setRotation(t), n && this.setScale(n));
    }
    setScale(e) {
      ValueUtils.isUndefinedOrNull(this.getObject3d()) || (this.getObject3d().scale.x = e.x, this.getObject3d().scale.y = e.y, this.getObject3d().scale.z = e.z);
    }
    setRotation(e) {
      ValueUtils.isUndefinedOrNull(this.getObject3d()) || (this.getObject3d().rotation.x = e.x, this.getObject3d().rotation.y = e.y, this.getObject3d().rotation.z = e.z);
    }
    setPosition(e) {
      ValueUtils.isUndefinedOrNull(this.getObject3d()) || (this.getObject3d().position.x = e.x, this.getObject3d().position.y = e.y, this.getObject3d().position.z = e.z);
    }
    setUserData(e) {
      ValueUtils.isUndefinedOrNull(this.getObject3d()) || (this.getObject3d().userData = e);
    }
    getObject3d() {
      return this._object3d;
    }
    setObject3d(e) {
      this._object3d = e;
    }
  }
  class AbstractMeshSkin_MeshSkinOptions extends AbstractObjectSkin_AbstractObjectSkinOptions {
    constructor() {
      super(...arguments), this.opacities = [1], this.transparent = false, this.center = new vector_Vector3_Vector3, this.wireframe = false, this.color = new utils_Color_Color, this.renderOrder = 0, this.depthTest = true, this.depthWrite = true;
    }
  }
  class AbstractMeshSkin_AbstractMeshSkin extends AbstractObjectSkin_AbstractObjectSkin {
    constructor(e) {
      super(e), this._options = new AbstractMeshSkin_MeshSkinOptions;
    }
    initialize() {
      super.initialize(), this._geometry = this.createGeometry(), this._materials = this.createMaterials(), np.modules.mod.optimize2d ? this._materials.forEach(e => {
        e.depthTest = false, e.depthWrite = false;
      }) : this._materials.forEach(e => {
        e.depthTest = this._options.depthTest, e.depthWrite = this._options.depthWrite;
      }), this._materials.forEach(e => e.transparent = this._options.transparent), this._object3d = this.createObject3d(), this._object3d.frustumCulled = false, this._object3d.position.add(this._options.positionOffset.toThreeVector3()), this.setRenderOrder(this._options.renderOrder), this.setOpacities(this._options.opacities);
    }
    createObject3d() {
      return new Yi(this._geometry, this._materials[0]);
    }
    setVisible(e, t) {
      if (!ValueUtils.isUndefinedOrNull(this.getObject3d())) if (e) t ? t.add(this.getObject3d()) : this._options.container ? this._options.container.add(this.getObject3d()) : np.canvas.addToWorldObject(this.getObject3d()); else {
        const e = this.getObject3d().parent;
        e && e.remove(this.getObject3d());
      }
    }
    getVisible() {
      const e = this.getObject3d();
      if (e) return !!e.parent;
    }
    setOpacities(e) {
      e.forEach((e, t) => this.setOpacityMaterial(e, t));
    }
    setOpacityMaterial(e, t) {
      e = ValueUtils.limit(e, 0, 1), this._materials[t].opacity !== e && (this._options.opacities[t] = e, this._materials[t].opacity = this._options.opacities[t], 1 === this._materials[t].opacity ? this._materials[t].transparent = this._options.transparent : this._materials[t].transparent = true, 0 === t && this.updateOpacityRecursively(this.getObject3d(), e));
    }
    setOpacity(e) {
      this._materials.forEach((t, n) => this.setOpacityMaterial(e, n));
    }
    updateOpacityRecursively(e, t) {
      if (!e) return;
      for (const n in e.children) this.updateOpacityRecursively(e.children[n], t);
      const n = e;
      if (n.material) {
        const e = n.material;
        e.opacity = t, 1 !== e.opacity && (e.transparent = true);
      }
    }
    getOpacity(e = 0) {
      return this._options.opacities[e];
    }
    setCenter(e) {
      if (e.isZero() || this._options.center.isEqualTo(e)) return;
      this._options.center.copy(e);
      const t = this._geometry.clone();
      this._options.center.isZero(), this._geometry = t, this._geometry.translate(this._options.center.x, this._options.center.y, this._options.center.z);
      const n = this.createObject3d(), i = this.getObject3d().parent;
      i && (i.remove(this.getObject3d()), i.add(n)), AbstractMeshSkin_AbstractMeshSkin.dispose(this.getObject3d()), this.setObject3d(n);
    }
    getCenter() {
      return this._options.center;
    }
    getMaterials() {
      return this._materials;
    }
    setRenderOrder(e) {
      "number" == typeof e && this.getObject3d() && (this.getObject3d().renderOrder = e);
    }
    getRenderOrder() {
      return this.getObject3d() ? this.getObject3d().renderOrder : 0;
    }
    destroy() {
      this.getObject3d() && this.getObject3d().parent && this.getObject3d().parent.remove(this.getObject3d()), AbstractMeshSkin_AbstractMeshSkin.dispose(this.getObject3d()), this._object3d = null;
    }
    static dispose(e) {
      e && e.children && e.children.length && AbstractMeshSkin_AbstractMeshSkin.disposeSkinChildren(e), AbstractMeshSkin_AbstractMeshSkin.disposeMesh(e);
    }
    static disposeSkinChildren(e) {
      if (e) for (let t = 0; t < e.children.length; t++) AbstractMeshSkin_AbstractMeshSkin.dispose(e.children[t]);
    }
    static disposeMesh(e) {
      if (!e) return;
      const t = e;
      t.parent && t.parent.remove(t), t.geometry, t.material && AbstractMeshSkin_AbstractMeshSkin.disposeMaterial(t.material);
    }
    static disposeMaterial(e) {
      e && (e instanceof hi ? e.dispose() : e instanceof Array && e.forEach(e => AbstractMeshSkin_AbstractMeshSkin.disposeMaterial(e)));
    }
  }
  class MaterialUtils {
    static setCustomUniforms(e, t, n) {
      let i = "";
      for (const e in n) {
        const r = n[e];
        switch (r.type) {
          case "i":
            i += `uniform int ${e};`;
            break;
          case "f":
            i += `uniform float ${e};`;
            break;
          case "v2":
            i += `uniform vec2 ${e};`;
            break;
          case "v3":
            i += `uniform vec3 ${e};`;
            break;
          case "v4":
            i += `uniform vec4 ${e};`;
            break;
          case "t":
            i += `uniform sampler2D ${e};`;
        }
        i += "\n", t.uniforms[e] = r;
      }
      t.vertexShader = i + t.vertexShader, t.fragmentShader = i + t.fragmentShader, e.uniforms = t.uniforms;
    }
    static setShaderHooks(e, t) {
      t.forEach(t => {
        let n = t.needle, i = t.vertex;
        undefined !== i && "" !== i && (e.vertexShader = e.vertexShader.replace(n, i));
        let r = t.fragment;
        undefined !== r && "" !== r && (e.fragmentShader = e.fragmentShader.replace(n, r));
      });
    }
  }
  const td = [{needle: new RegExp(/.*void.*main/), vertex: "\n                    attribute vec4 instanceMatrix1;\n                    attribute vec4 instanceMatrix2;\n                    attribute vec4 instanceMatrix3;\n                    attribute vec4 instanceMatrix4;\n        \n                    attribute vec2 textureRepeat;\n                    attribute vec2 textureOffset;\n                    attribute vec2 texture2Offset;\n                    attribute vec4 color;\n                \n                    #ifdef USE_MAP\n                        varying vec4 vColor;\n                        varying vec2 vTextureRepeat;\n                        varying vec2 vTextureOffset;\n                        varying vec2 vTexture2Offset;\n                    #endif\n        \n                    void main\n                "}, {needle: "#include <begin_vertex>", vertex: "\n                    #ifdef USE_MAP\n                        vTextureRepeat = textureRepeat;\n                        vTextureOffset = textureOffset;\n                        vTexture2Offset = texture2Offset;\n                        vColor = color;\n                       #endif\n        \n                    mat4 instanceMatrix = mat4(instanceMatrix1, instanceMatrix2, instanceMatrix3, instanceMatrix4);\n                    vec3 transformed = (instanceMatrix * vec4(position, 1)).xyz;\n                "}, {needle: "#include <common>", fragment: "\n                    #ifdef USE_MAP\n                        varying vec4 vColor;\n                        varying vec2 vTextureRepeat;\n                        varying vec2 vTextureOffset;\n                        varying vec2 vTexture2Offset;\n                    #endif\n    \n                    #include <common>\n                "}, {needle: "#include <map_fragment>", fragment: "\n                 	#ifdef USE_MAP\n                     	vec2 _uv1 = mod(vUv * vTextureRepeat, 1.0) * mapTileSize + vTextureOffset;\n                 	    vec4 texel1 = texture2D(map, _uv1);\n                     	texel1 = mapTexelToLinear(texel1);\n                     	\n                     	if (enableMap2 == 1) {\n                     	    vec2 _uv2 = mod(vUv * vTextureRepeat, 1.0) * map2TileSize + vTexture2Offset;\n                            vec4 texel2 = texture2D(map2, _uv2);\n                            texel2 = mapTexelToLinear(texel2);\n                            diffuseColor *= vec4(texel1.rgb * texel2.rgb, texel1.a + texel2.a);\n                      	} else {\n                      	    diffuseColor *= texel1;\n                      	}\n                      	\n                      	diffuseColor *= vColor;\n                    #endif\n                "}];
  class InstancedObject_InstancedObject {
    constructor(e = np.instancedEntities.defaultInstancedObjectVolume, t, n) {
      this.selfIndex = 0, this._positions = [], this._positionZToMesh = {}, this._positionOffsets = [], this._positionVisibilityOffsets = [], this._geometry = new eh, this._materials = [], this._initialized = false, this._uuid2index = {}, this._freeIndex = new LinkedList_LinkedList, this._textureUrls = [""], this._textureRotations = [], this._textureFlipsY = [], this._textureOffsetY = 0, this._textureTilesCount = vector_Vector2_Vector2.IDENTITY.clone(), this._textureGlobalCurrentTile = vector_Vector2_Vector2.ZERO.clone(), this._texture2Url = "", this._texture2TilesCount = vector_Vector2_Vector2.IDENTITY.clone(), this._texture2OffsetY = 0, this._colorPool = {}, this._positionPool = new vector_Vector3_Vector3, this._textureRepeatPool = {}, this._textureOffsetPool = {}, this._rawShaderMaterialParameters = [], this._materialParameters = {map: np.textures.defaultTexture, side: g}, this._uniforms = {mapTileSize: {type: "v2", value: new Lt(1, 1)}, enableMap2: {type: "i", value: 0}, map2: {type: "t", value: np.textures.defaultTexture}, map2TileSize: {type: "v2", value: new Lt(1, 1)}}, this._size = e, this._offset = t, this._groupIndex = n, this.forEachItem(e => this._freeIndex.insert(e));
    }
    initialize(e) {
      if (this._initialized) return;
      this._initialized = true, this._geometry.copy(e.geometry);
      const t = [], n = [], i = [], r = [], o = [], s = [], a = [], l = [], c = [], h = [];
      this.forEachItem(e => {
        c.push(Randomize_Randomize.getRandomFloat(), Randomize_Randomize.getRandomFloat(), Randomize_Randomize.getRandomFloat()), h.push(0, 0, 0), t.push(1, 1, 1, 1), s.push(1, 1), a.push(0, 0), l.push(0, 0), n.push(10, 0, 0, 0), i.push(0, 10, 0, 0), r.push(0, 0, 10, 0), o.push(1e5, 1e5, 1e5, 1);
      }), this._colorAttribute = new th(new Float32Array(t), 4, true), this._textureRepeatAttribute = new th(new Float32Array(s), 2), this._textureOffsetAttribute = new th(new Float32Array(a), 2), this._texture2OffsetAttribute = new th(new Float32Array(l), 2), this._matrixAttribute = new InstancedObject_InstancedBufferMatrix4(n, i, r, o), this._geometry.addAttribute("color", this._colorAttribute), this._geometry.addAttribute("textureRepeat", this._textureRepeatAttribute), this._geometry.addAttribute("textureOffset", this._textureOffsetAttribute), this._geometry.addAttribute("texture2Offset", this._texture2OffsetAttribute), this._matrixAttribute.addToGeometry("instanceMatrix", this._geometry), e.textureUrls.length > 0 ? e.textureUrls.forEach(t => this.createMaterial(e)) : this.createMaterial(e), this._mesh = new Yi(this._geometry, 1 === this._materials.length ? this._materials[0] : this._materials), this._mesh.frustumCulled = false, np.settings.graphics.getOptions().shadows && (this._depthMaterial = new cr({vertexShader: Tr.depth.vertexShader, fragmentShader: "#define DEPTH_PACKING 3201\n" + Tr.depth.fragmentShader, side: m})), np.canvas.addToWorldObject(this._mesh);
    }
    createMaterial(e) {
      let t;
      e.receiveLight && np.settings.graphics.getOptions().light ? (np.settings.graphics.getOptions().shadows ? ((t = new zl(this._materialParameters)).shininess = 30, t.specular.set(0)) : t = new Vl(this._materialParameters), t.customUniforms = this._uniforms, t.shaderHooks = td, t.onBeforeCompile = function (e) {
        true !== this.hacked && (this.hacked = true, MaterialUtils.setCustomUniforms(this, e, this.customUniforms), MaterialUtils.setShaderHooks(e, this.shaderHooks));
      }) : ((t = new ui(this._materialParameters)).customUniforms = this._uniforms, t.shaderHooks = td, t.onBeforeCompile = function (e) {
        true !== this.hacked && (this.hacked = true, MaterialUtils.setCustomUniforms(this, e, this.customUniforms), MaterialUtils.setShaderHooks(e, this.shaderHooks));
      }), np.modules.mod.optimize2d && (t.depthTest = false, t.depthWrite = false), this._materials.push(t);
    }
    add(e) {
      if (0 === this._freeIndex.getSize()) throw new Error("No free places");
      return false === this.isExistsItem(e.uuid) && (this._uuid2index[e.uuid] = this._freeIndex.removeFirst().getData()), false === this._initialized && this.initialize(e), this.updateItem(e), this;
    }
    isExistsItem(e) {
      return this._uuid2index.hasOwnProperty(e);
    }
    updateItem(e) {
      undefined !== this._uuid2index[e.uuid] && (this._positionZToMesh[e.uuid] = e.positionZToMesh, this.setItemTransform(e.uuid, e.position, e.rotation, e.scale), this.setItemPositionOffset(e.uuid, e.positionOffset), this.setTextures(e.textureUrls), this.setTextureTilesCount(e.textureTilesCount), this.setItemTextureCurrentTile(e.uuid, e.textureCurrentTile), this.setTexture2(e.texture2Url), this.setTexture2TilesCount(e.texture2TilesCount), this.setItemTexture2CurrentTile(e.uuid, e.texture2CurrentTile), this.setItemColor(e.uuid, e.color), this.setItemOpacity(e.uuid, e.opacity), this.setItemVisible(e.uuid, e.visible), this.setItemTextureRepeat(e.uuid, e.textureRepeat), this.setItemTextureOffset(e.uuid, e.textureOffset), this.setItemTexture2Offset(e.uuid, e.textureOffset), this.startTextureAnimation(e.textureAnimationEveryFrame), this.setTransparent(e.transparent), this.setRenderOrder(e.renderOrder), this.setDepthTest(e.depthTest), this.setDepthWrite(e.depthWrite), np.settings.graphics.getOptions().shadows && (this._depthMaterial && true === e.castShadow && (this._mesh.castShadow = true, this._mesh.customDepthMaterial = this._depthMaterial), this._depthMaterial && true === e.receiveShadow && (this._mesh.receiveShadow = true, this._mesh.customDepthMaterial = this._depthMaterial)));
    }
    setTransparent(e) {
      ValueUtils.isUndefinedOrNull(e) || this._materials.forEach(t => t.transparent = e);
    }
    setRenderOrder(e) {
      "number" == typeof e && (this._mesh.renderOrder = e);
    }
    getRenderOrder() {
      return this._mesh.renderOrder;
    }
    setDepthTest(e) {
      ValueUtils.isUndefinedOrNull(e) || this._materials.forEach(t => t.depthTest = e);
    }
    setDepthWrite(e) {
      ValueUtils.isUndefinedOrNull(e) || this._materials.forEach(t => t.depthWrite = e);
    }
    getMesh() {
      return this._mesh;
    }
    onDraw() {}
    setItemTransform(e, t, n, i) {
      const r = this._uuid2index[e];
      if (undefined === r) return;
      ValueUtils.isUndefinedOrNull(this._positionOffsets[r - this._offset]) && (this._positionOffsets[r - this._offset] = new vector_Vector3_Vector3), ValueUtils.isUndefinedOrNull(this._positionVisibilityOffsets[r - this._offset]) && (this._positionVisibilityOffsets[r - this._offset] = new vector_Vector3_Vector3), ValueUtils.isUndefinedOrNull(this._positions[r - this._offset]) ? this._positions[r - this._offset] = t.clone() : this._positions[r - this._offset].copy(t), this._positionPool.copy(this._positions[r - this._offset]).add(this._positionOffsets[r - this._offset]).add(this._positionVisibilityOffsets[r - this._offset]), this._positionZToMesh[e] && (this._mesh.position.z = this._positionPool.z, this._positionPool.z = 0), false === this.getItemVisible(e) && (this._positionPool.x += 1e5);
      const o = InstancedObject_InstancedObject.computeModelMatrix(this._positionPool, n, i);
      this._matrixAttribute.set(r - this._offset, o), this._matrixAttribute.needsUpdate = true;
    }
    setItemPositionOffset(e, t) {
      const n = this._uuid2index[e];
      undefined !== n && (ValueUtils.isUndefinedOrNull(t) || this.getItemPositionOffset(e).isEqualTo(t) || (ValueUtils.isUndefinedOrNull(this._positionOffsets[n - this._offset]) && (this._positionOffsets[n - this._offset] = new vector_Vector3_Vector3), this._positionOffsets[n - this._offset].copy(t), this.updateItemTransforms(e)));
    }
    getItemPositionOffset(e) {
      const t = this._uuid2index[e];
      return undefined === t ? new vector_Vector3_Vector3 : (ValueUtils.isUndefinedOrNull(this._positionOffsets[t - this._offset]) && (this._positionOffsets[t - this._offset] = new vector_Vector3_Vector3), this._positionOffsets[t - this._offset]);
    }
    updateItemTransforms(e) {
      if (undefined === this._uuid2index[e]) return;
      const t = this.getItemTransforms(e);
      this.setItemTransform(e, t.position, t.rotation, t.scale);
    }
    getItemTransforms(e) {
      const t = this._uuid2index[e];
      if (undefined === t) return {position: new vector_Vector3_Vector3(1e4, 1e4, 1e4), rotation: new vector_Vector3_Vector3, scale: new vector_Vector3_Vector3};
      const n = this._matrixAttribute.get(t - this._offset), i = new It, r = new Pt, o = new It;
      return n.decompose(i, r, o), {position: this._positions[t - this._offset], rotation: vector_Vector3_Vector3.fromThreeQuaternion(r), scale: vector_Vector3_Vector3.fromThreeVector3(o)};
    }
    getItemUuidByIndex(e) {
      for (const t in this._uuid2index) if (this._uuid2index[t] === e) return Optional.ofNullable(t);
      return Optional.empty();
    }
    setTextures(e) {
      e.forEach((e, t) => this.setTexture(e, t));
    }
    setTexture(e, t = 0) {
      ValueUtils.isUndefinedOrNull(e) || this._textureUrls[t] === e || (ValueUtils.isUndefinedOrNull(this._materials[t]) && console.warn(`Material #${t} is undefined`), np.textures.getTexture(e).then(n => {
        this._textureUrls[t] !== e && (this._textureUrls[t] = e, n.rotation !== (this._textureRotations[t] || 0) ? (this._materials[t].map = n.clone(), this._materials[t].map.rotation = ValueUtils.absAngle(this._textureRotations[t] || 0), this._materials[t].map.flipY = this._textureFlipsY[t] || true, this._materials[t].map.center.setScalar(0.5), this._materials[t].map.needsUpdate = true) : this._materials[t].map = n, this._rawShaderMaterialParameters[t] && (this._rawShaderMaterialParameters[t].uniforms.map.value = this._materials[t].map), this._materials[t].needsUpdate = true);
      }));
    }
    getTexture(e) {
      if (undefined !== this._uuid2index[e]) return this._textureUrls[0];
    }
    setTextureRotations(e) {
      e.forEach((e, t) => this.setTextureRotation(t, e));
    }
    setTextureRotation(e, t) {
      const n = ValueUtils.absAngle(t);
      ValueUtils.isUndefinedOrNull(t) || this.getTextureRotation(e) === n || (this._textureRotations[e] = n, ValueUtils.isUndefinedOrNull(this._materials[e]) || ValueUtils.isUndefinedOrNull(this._materials[e].map) || (this._materials[e].map.rotation = this._textureRotations[e], this._materials[e].map.center.setScalar(0.5)));
    }
    getTextureRotation(e) {
      return ValueUtils.absAngle(this._textureRotations[e]) || 0;
    }
    setTextureFlipsY(e) {
      e.forEach((e, t) => this.setTextureFlipY(t, e));
    }
    setTextureFlipY(e, t) {
      ValueUtils.isUndefinedOrNull(t) || this.getTextureFlipY(e) === t || (this._textureFlipsY[e] = t, ValueUtils.isUndefinedOrNull(this._materials[e]) || ValueUtils.isUndefinedOrNull(this._materials[e].map) || (this._materials[e].map.flipY = this._textureFlipsY[e], this._materials[e].map.center.setScalar(0.5)));
    }
    getTextureFlipY(e) {
      return this._textureFlipsY[e] || true;
    }
    setItemTextureRepeat(e, t) {
      const n = this._uuid2index[e];
      undefined !== n && (ValueUtils.isUndefinedOrNull(t) || this.getItemTextureRepeat(e).isEqualTo(t) || (false === this._textureRepeatPool.hasOwnProperty(e) ? this._textureRepeatPool[e] = t.clone() : this._textureRepeatPool[e].copy(t), this._textureRepeatAttribute.setXY(n - this._offset, t.x, t.y), this._textureRepeatAttribute.needsUpdate = true));
    }
    getItemTextureRepeat(e) {
      const t = this._uuid2index[e];
      return undefined === t ? new vector_Vector2_Vector2(1, 1) : (false === this._textureRepeatPool.hasOwnProperty(e) && (this._textureRepeatPool[e] = new vector_Vector2_Vector2), this._textureRepeatPool[e].setScalarXY(this._textureRepeatAttribute.getX(t - this._offset), this._textureRepeatAttribute.getY(t - this._offset)), this._textureRepeatPool[e]);
    }
    setItemTextureOffset(e, t) {
      const n = this._uuid2index[e];
      undefined !== n && (ValueUtils.isUndefinedOrNull(t) || this.getItemTextureOffset(e).isEqualTo(t) || (false === this._textureOffsetPool.hasOwnProperty(e) ? this._textureOffsetPool[e] = t.clone() : this._textureOffsetPool[e].copy(t), this._textureOffsetAttribute.setXY(n - this._offset, t.x, t.y), this._textureOffsetAttribute.needsUpdate = true));
    }
    getItemTextureOffset(e) {
      const t = this._uuid2index[e];
      return undefined === t ? new vector_Vector2_Vector2 : (false === this._textureOffsetPool.hasOwnProperty(e) && (this._textureOffsetPool[e] = new vector_Vector2_Vector2), this._textureOffsetPool[e].setScalarXY(this._textureOffsetAttribute.getX(t - this._offset), this._textureOffsetAttribute.getY(t - this._offset)), this._textureOffsetPool[e]);
    }
    setTextureTilesCount(e) {
      ValueUtils.isUndefinedOrNull(e) || this._textureTilesCount.isEqualTo(e) || (this._textureTilesCount.copy(e), this._uniforms.mapTileSize.value.setX(1 / this._textureTilesCount.x).setY(1 / this._textureTilesCount.y), this._rawShaderMaterialParameters.forEach(e => {
        e.uniforms.mapTileSize.value.copy(this._uniforms.mapTileSize.value);
      }), this._textureOffsetY = 1 - this._uniforms.mapTileSize.value.y);
    }
    getTextureTilesCount() {
      return this._textureTilesCount;
    }
    setItemTextureCurrentTile(e, t) {
      undefined !== this._uuid2index[e] && (ValueUtils.isUndefinedOrNull(t) || this.setItemTextureOffset(e, new vector_Vector2_Vector2(t.x / this._textureTilesCount.x, this._textureOffsetY - t.y / this._textureTilesCount.y)));
    }
    getItemTextureCurrentTile(e) {
      if (undefined === this._uuid2index[e]) return new vector_Vector2_Vector2;
      const t = this.getItemTextureOffset(e);
      return t.clone().setScalarY(this._textureOffsetY - t.y).multiply(this._textureTilesCount);
    }
    setItemTextureNextTile(e) {
      undefined !== this._uuid2index[e] && this.setItemTextureCurrentTile(e, this.getNextTile(this.getItemTextureCurrentTile(e)));
    }
    setItemsTextureNextTile() {
      this._textureGlobalCurrentTile.copy(this.getNextTile(this._textureGlobalCurrentTile));
      for (const e in this._uuid2index) this.setItemTextureCurrentTile(e, this._textureGlobalCurrentTile);
    }
    startTextureAnimation(e) {
      ValueUtils.isUndefinedOrNull(e) || this._timerTextureAnimator || (this.setItemsTextureNextTile(), this._timerTextureAnimator = np.canvas.setIntervalFrames(() => this.setItemsTextureNextTile(), e));
    }
    stopTextureAnimation() {
      this._timerTextureAnimator && np.canvas.clearIntervalFrames(this._timerTextureAnimator);
    }
    setTexture2(e) {
      ValueUtils.isUndefinedOrNull(e) || this._texture2Url === e || np.textures.getTexture(e).then(t => {
        this._texture2Url !== e && (this._texture2Url = e, this._uniforms.map2.value = t, this._uniforms.enableMap2.value = 1, this._rawShaderMaterialParameters.forEach(e => {
          e.uniforms.map2.value = t, e.uniforms.enableMap2.value = 1;
        }));
      });
    }
    setItemTexture2Offset(e, t) {
      const n = this._uuid2index[e];
      undefined !== n && (ValueUtils.isUndefinedOrNull(t) || this.getItemTexture2Offset(e).isEqualTo(t) || (this._texture2OffsetAttribute.setXY(n - this._offset, t.x, t.y), this._texture2OffsetAttribute.needsUpdate = true));
    }
    getItemTexture2Offset(e) {
      const t = this._uuid2index[e];
      return undefined === t ? new vector_Vector2_Vector2 : new vector_Vector2_Vector2(this._texture2OffsetAttribute.getX(t - this._offset), this._texture2OffsetAttribute.getY(t - this._offset));
    }
    setTexture2TilesCount(e) {
      ValueUtils.isUndefinedOrNull(e) || this._texture2TilesCount.isEqualTo(e) || (this._texture2TilesCount.copy(e), this._uniforms.map2TileSize.value.setX(1 / this._texture2TilesCount.y).setY(1 / this._texture2TilesCount.x), this._rawShaderMaterialParameters.forEach(e => {
        e.uniforms.map2TileSize.value.copy(this._uniforms.map2TileSize.value);
      }), this._texture2OffsetY = 1 - this._uniforms.map2TileSize.value.y);
    }
    getTexture2TilesCount() {
      return this._texture2TilesCount;
    }
    setItemTexture2CurrentTile(e, t) {
      undefined !== this._uuid2index[e] && (ValueUtils.isUndefinedOrNull(t) || this.setItemTexture2Offset(e, new vector_Vector2_Vector2(t.x / this._texture2TilesCount.y, this._texture2OffsetY - t.y / this._texture2TilesCount.x)));
    }
    setItemColor(e, t) {
      const n = this._uuid2index[e];
      undefined !== n && (ValueUtils.isUndefinedOrNull(t) || this.getItemColor(e).isEqualTo(t) || (false === this._colorPool.hasOwnProperty(e) ? this._colorPool[e] = t.clone() : this._colorPool[e].copy(t), this._colorAttribute.setXYZW(n - this._offset, t.r / 255, t.g / 255, t.b / 255, this.getItemOpacity(e)), this._colorAttribute.needsUpdate = true));
    }
    getItemColor(e) {
      const t = this._uuid2index[e];
      return undefined === t ? utils_Color_Color.WHITE.clone() : (false === this._colorPool.hasOwnProperty(e) && (this._colorPool[e] = new utils_Color_Color), this._colorPool[e].setScalarRGB(255 * this._colorAttribute.getX(t - this._offset), 255 * this._colorAttribute.getY(t - this._offset), 255 * this._colorAttribute.getZ(t - this._offset)), this._colorPool[e]);
    }
    setItemOpacity(e, t) {
      const n = this._uuid2index[e];
      undefined !== n && (ValueUtils.isUndefinedOrNull(t) || this.getItemOpacity(e) === t || (this._colorAttribute.setW(n - this._offset, t), this._colorAttribute.needsUpdate = true));
    }
    getItemOpacity(e) {
      const t = this._uuid2index[e];
      return undefined === t ? 0 : this._colorAttribute.getW(t - this._offset);
    }
    setItemVisible(e, t) {
      const n = this._uuid2index[e];
      undefined !== n && (ValueUtils.isUndefinedOrNull(t) || this.getItemVisible(e) === t || (t ? this._positionVisibilityOffsets[n - this._offset].setScalar(0) : this._positionVisibilityOffsets[n - this._offset].setScalarX(1e4), this.updateItemTransforms(e)));
    }
    getItemVisible(e) {
      const t = this._uuid2index[e];
      return undefined !== t && 0 === this._positionVisibilityOffsets[t - this._offset].length();
    }
    setShakeVector(e, t) {
      this._uuid2index[e];
    }
    getMaterials() {
      return this._materials;
    }
    removeItem(e) {
      const t = this._uuid2index[e];
      undefined !== t && (this.clearItem(e), this._freeIndex.insert(t), delete this._uuid2index[e]);
    }
    removeAllItems() {
      for (const e in this._uuid2index) this.removeItem(e);
    }
    clearItem(e) {
      undefined !== this._uuid2index[e] && (delete this._positionZToMesh[e], this.setItemVisible(e, false), this.setItemColor(e, utils_Color_Color.WHITE.clone()), this.setItemTextureRepeat(e, vector_Vector2_Vector2.IDENTITY.clone()), this.setItemTextureOffset(e, vector_Vector2_Vector2.ZERO.clone()), this.setItemTexture2Offset(e, vector_Vector2_Vector2.ZERO.clone()), this.setItemPositionOffset(e, new vector_Vector3_Vector3), this.setItemTransform(e, new vector_Vector3_Vector3(1e4, 1e4, 1e4), new vector_Vector3_Vector3, new vector_Vector3_Vector3(1, 1, 1)));
    }
    forEachItem(e) {
      const t = this._size + this._offset;
      for (let n = this._offset; n < t; n++) e(n);
    }
    hasFreePlace() {
      return !!this._freeIndex.getSize();
    }
    getFreePlacesCount() {
      return this._freeIndex.getSize();
    }
    getSize() {
      return this._size;
    }
    destroy() {
      this.stopTextureAnimation(), np.canvas.removeFromWorldObject(this._mesh), AbstractMeshSkin_AbstractMeshSkin.dispose(this._mesh);
      for (const e in this._uuid2index) this.removeItem(e), np.entities.getEntityByServerUuid(e).ifPresent(e => e.remove());
      this._uuid2index = {};
    }
    static computeModelMatrix(e, t, n) {
      e || (e = new vector_Vector3_Vector3), t || (t = new vector_Vector3_Vector3), n || (n = new vector_Vector3_Vector3);
      const i = e.toThreeVector3();
      return (new Qt).identity().compose(i, t.toThreeQuaternion(), n.toThreeVector3());
    }
    getNextTile(e) {
      const t = e.clone();
      return t.x++, t.x > this.getTextureTilesCount().x - 1 && (t.x = 0, t.y++, t.y > this.getTextureTilesCount().y - 1 && (t.y = 0)), t;
    }
  }
  class InstancedObject_InstancedBufferMatrix4 {
    constructor(e, t, n, i, r = false) {
      this.a1 = new th(new Float32Array(e), 4, r), this.a2 = new th(new Float32Array(t), 4, r), this.a3 = new th(new Float32Array(n), 4, r), this.a4 = new th(new Float32Array(i), 4, r);
    }
    set(e, t) {
      this.a1.setXYZW(e, t.elements[0], t.elements[1], t.elements[2], t.elements[3]), this.a2.setXYZW(e, t.elements[4], t.elements[5], t.elements[6], t.elements[7]), this.a3.setXYZW(e, t.elements[8], t.elements[9], t.elements[10], t.elements[11]), this.a4.setXYZW(e, t.elements[12], t.elements[13], t.elements[14], t.elements[15]);
    }
    get(e) {
      return (new Qt).set(this.a1.getX(e), this.a1.getY(e), this.a1.getZ(e), this.a1.getW(e), this.a2.getX(e), this.a2.getY(e), this.a2.getZ(e), this.a2.getW(e), this.a3.getX(e), this.a3.getY(e), this.a3.getZ(e), this.a3.getW(e), this.a4.getX(e), this.a4.getY(e), this.a4.getZ(e), this.a4.getW(e));
    }
    addToGeometry(e, t) {
      t.addAttribute(`${e}1`, this.a1), t.addAttribute(`${e}2`, this.a2), t.addAttribute(`${e}3`, this.a3), t.addAttribute(`${e}4`, this.a4);
    }
    set needsUpdate (e) {
      this.a1.needsUpdate = e, this.a2.needsUpdate = e, this.a3.needsUpdate = e, this.a4.needsUpdate = e;
    }
  }
  class InstancedGroup_InstancedGroup {
    constructor(e, t) {
      this._objects = [], this._name = e, this._selfIndex = t;
    }
    draw() {
      this._objects.forEach(e => e.onDraw());
    }
    addItem(e, t) {
      return this.getFreeObject(t).add(e).selfIndex;
    }
    getFreeObject(e) {
      for (const e in this._objects) if (this._objects[e].hasFreePlace()) return this._objects[e];
      return this.createObject(e);
    }
    createObject(e) {
      let t = 0;
      for (const e in this._objects) t += this._objects[e].getSize();
      const n = new InstancedObject_InstancedObject(e, t, this._selfIndex);
      return this._objects.push(n), n.selfIndex = this._objects.length - 1, n;
    }
    removeItem(e, t) {
      this._objects[e] && this._objects[e].removeItem(t);
    }
    removeAllItems() {
      this._objects.forEach(e => e.removeAllItems());
    }
    getObject(e) {
      return Optional.ofNullable(this._objects[e]);
    }
    destroy() {
      this._objects.forEach(e => e.destroy()), this._objects = [];
    }
    getObjectsCount() {
      return this._objects.length;
    }
    getPlacesCount() {
      let e = 0;
      for (const t in this._objects) e += this._objects[t].getSize();
      return e;
    }
    getFreePlacesCount() {
      let e = 0;
      for (const t in this._objects) e += this._objects[t].getFreePlacesCount();
      return e;
    }
  }
  class InstancedGroups_InstancedGroups extends Module_Module {
    constructor() {
      super(...arguments), this._instancedGroups = {}, this._instancedGroupIndexes = {}, this.enabled = true, this.defaultInstancedObjectVolume = 128;
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      np.canvas.events.on("canvasDrawBegin", () => this.onCanvasDrawBegin()), np.socket.events.on("pw_editor_mode", e => this.onPwEditorMode(e)).setPriority(2);
    }
    onCanvasDrawBegin() {
      for (const e in this._instancedGroups) this._instancedGroups[e].draw();
    }
    onPwEditorMode(e) {
      this.enabled = !e.enable;
    }
    addItem(e, t, n) {
      return false === this.isExistsInstancedGroup(e) && this.createInstancedGroup(e), this._instancedGroups[e].addItem(t, n);
    }
    createInstancedGroup(e) {
      if (this.isExistsInstancedGroup(e)) return;
      const t = Object.keys(this._instancedGroups).length;
      if (t > 255) throw new Error("Max limit groups");
      this._instancedGroups[e] = new InstancedGroup_InstancedGroup(e, t), this._instancedGroupIndexes[t] = e;
    }
    getObject(e, t) {
      return this.getGroup(e).map(e => e.getObject(t).orElse());
    }
    getGroup(e) {
      return Optional.ofNullable(this._instancedGroups[e]);
    }
    destroyGroup(e) {
      this.isExistsInstancedGroup(e) && (this._instancedGroups[e].destroy(), delete this._instancedGroups[e]);
    }
    destroyAll() {
      for (const e in this._instancedGroups) this._instancedGroups[e].destroy();
      this._instancedGroups = {};
    }
    removeAllItems() {
      for (const e in this._instancedGroups) this._instancedGroups[e].removeAllItems();
      this._instancedGroups = {};
    }
    isExistsInstancedGroup(e) {
      return this._instancedGroups.hasOwnProperty(e);
    }
    getGroupsCount() {
      return Object.keys(this._instancedGroups).length;
    }
    getObjectsCount() {
      let e = 0;
      for (const t in this._instancedGroups) e += this._instancedGroups[t].getObjectsCount();
      return e;
    }
    getPlacesCount() {
      let e = 0;
      for (const t in this._instancedGroups) e += this._instancedGroups[t].getPlacesCount();
      return e;
    }
    getFreePlacesCount() {
      let e = 0;
      for (const t in this._instancedGroups) e += this._instancedGroups[t].getFreePlacesCount();
      return e;
    }
    static extractInstancedGroupData(e, t) {
      t.clientSettings;
      return {uuid: e, groupName: "", position: new vector_Vector3_Vector3(t.position.x, t.position.y, 0), scale: vector_Vector2_Vector2.fromObject(t.size).toVector3(1), rotation: new vector_Vector3_Vector3(0, 0, Box2dUtils.getThreeRotationFromBox2d(t.rotation)), color: utils_Color_Color.WHITE, opacity: 1, visible: false, geometry: np.cacheKeeper.get(np.modules.mod.defaultGeometry)};
    }
  }
  class Abilities_Abilities {
    constructor(e) {
      this._abilities = {}, this._parentEntity = e;
    }
    addAbility(e) {
      if (false === this._parentEntity.canHaveAbilities()) return;
      const t = e.constructor.name;
      this._abilities[t] || (this._abilities[t] = e, e && e.initialize && e.initialize(), this.onAddAbility());
    }
    addAbilities(...e) {
      if (false !== this._parentEntity.canHaveAbilities()) for (const t in e) this.addAbility(e[t]);
    }
    addFromArray(e) {
      if (false !== this._parentEntity.canHaveAbilities()) for (const t in e) this.addAbility(new e[t](this._parentEntity));
    }
    getAbility(e) {
      const t = this._abilities[e.name];
      return Optional.ofNullable(t);
    }
    hasAbility(e) {
      return this._abilities.hasOwnProperty(e.name);
    }
    destroyAbility(e) {
      this.getAbility(e).ifPresent(t => {
        t.destroy(), delete this._abilities[e.name];
      });
    }
    onDraw() {
      this.forEach(e => e.onDraw());
    }
    destroy() {
      this.forEach(e => e.destroy()), this._abilities = {};
    }
    onCreate() {
      this.forEach(e => e.onCreate());
    }
    onAddAbility() {
      this.forEach(e => e.onAddAbility());
    }
    onSpawn() {
      this.forEach(e => e.onSpawn());
    }
    onSetPhysicsTransforms(e) {
      this.forEach(t => t.onSetPhysicsTransforms(e));
    }
    onReCreateSkin() {
      this.forEach(e => e.onReCreateSkin());
    }
    onAddedToCache() {
      this.forEach(e => e.onAddedToCache());
    }
    onSetServerProperties(e) {
      this.forEach(t => t.onSetServerProperties(e));
    }
    onUpdateServerProperties(e) {
      this.forEach(t => t.onUpdateServerProperties(e));
    }
    onDead() {
      this.forEach(e => e.onDead());
    }
    onRemove() {
      this.forEach(e => e.onRemove());
    }
    onChangeDisplaying(e) {
      this.forEach(t => t.onChangeDisplaying(e));
    }
    forEach(e) {
      for (const t in this._abilities) this._abilities.hasOwnProperty(t) && e(this._abilities[t]);
    }
  }
  var nd, id, rd, od, sd, ad;
  !function (e) {
    e[e.DEFAULT = 0] = "DEFAULT", e[e.INSTANCE = 1] = "INSTANCE";
  }(nd || (nd = {}));
  class EntityAbstract_EntityAbstract {
    constructor() {
      this.immortal = false, this.cacheable = false, this.fromCache = false, this.isServer = false, this.attachedToServer = false, this.serverProperties = null, this._serverVolumesCount = null, this._listeners = new Listeners;
    }
    construct() {
      this.uuid = Randomize_Randomize.getUuid(), this.abilities = new Abilities_Abilities(this);
    }
    setProperties(e) {
      e && Object.assign(this, e);
    }
    setServerProperties(e) {
      e && (this.isServer = true, this.attachedToServer = true, this.serverProperties = e, this.onSetServerProperties(e), this.abilities.onSetServerProperties(e));
    }
    updateServerProperties(e) {
      e && (ValueUtils.fastMerge(this.serverProperties, e), this.onUpdateServerProperties(e), this.abilities.onUpdateServerProperties(e));
    }
    onSetServerProperties(e) {
      this.updateServerVolumeCount();
    }
    onUpdateServerProperties(e) {
      e.box2d && e.box2d.fixtures && this.updateServerVolumeCount();
    }
    onCreate() {}
    onSpawn() {}
    setPhysicsTransforms(e) {}
    remove() {
      this.immortal || (this._listeners.destroy(), np.drawer.delete(this.uuid), np.entities.delete(this.uuid), this.abilities.onRemove());
    }
    onAddedToCache() {}
    destroy() {
      this._listeners.destroy(), this.abilities.destroy(), np.drawer.delete(this.uuid), np.entities.delete(this.uuid), this.removeFromScene();
    }
    getInstancedGroupName() {
      if (this.isServer) {
        const e = this.getClientSetting("texture");
        return e && e.name ? e.name : this.serverProperties.type;
      }
      return this.constructor.name;
    }
    getInstancedData() {
      return InstancedGroups_InstancedGroups.extractInstancedGroupData(this.uuid, this.serverProperties);
    }
    getFirstServerFixture() {
      return this.serverProperties.box2d.fixtures[Object.keys(this.serverProperties.box2d.fixtures)[0]];
    }
    isInstanced() {
      return null !== this.serverProperties && (this.getClientSetting("rendering") === nd.INSTANCE && 1 === this.getServerVolumeCount() && np.device.isGpuAcceleration());
    }
    getServerVolumeCount() {
      return null === this._serverVolumesCount && this.updateServerVolumeCount(), this._serverVolumesCount;
    }
    updateServerVolumeCount() {
      if (this._serverVolumesCount = 0, this.serverProperties && this.serverProperties.box2d && this.serverProperties.box2d.fixtures) for (const e in this.serverProperties.box2d.fixtures) this.serverProperties.box2d.fixtures[e].serverOnly || this._serverVolumesCount++;
    }
    canHaveAbilities() {
      return true;
    }
    onPostCollide(e, t, n) {}
    onProcessContact(e, t) {}
    getCacheKey(e) {
      return this.constructor.name;
    }
    getClientSetting(e, t) {
      if (this.serverProperties && this.serverProperties.clientSettings && this.serverProperties.clientSettings.hasOwnProperty(e)) return this.serverProperties.clientSettings[e];
    }
  }
  class InstancedSkin_InstancedSkin extends AbstractSkin {
    constructor() {
      super(...arguments), this._instancedGroupIndex = 0;
    }
    addItem(e) {
      this._instancedData || (this._instancedData = e, this._instancedGroupIndex = np.instancedEntities.addItem(this._instancedData.groupName, e), np.instancedEntities.getObject(this._instancedData.groupName, this._instancedGroupIndex).ifPresent(e => this._instancedObject = e));
    }
    setTransforms(e, t, n) {
      this._instancedData && this._instancedObject.setItemTransform(this._instancedData.uuid, e, t, n);
    }
    getOpacity() {
      return this._instancedData ? this._instancedObject.getItemOpacity(this._instancedData.uuid) : 0;
    }
    setOpacities(e) {
      e.forEach((e, t) => this.setOpacity(e));
    }
    setOpacity(e) {
      this._instancedData && this.getOpacity() !== e && this._instancedObject.setItemOpacity(this._instancedData.uuid, e);
    }
    getVisible() {
      return !!this._instancedData && this._instancedObject.getItemVisible(this._instancedData.uuid);
    }
    setVisible(e) {
      this._instancedData && this.getVisible() !== e && this._instancedObject.setItemVisible(this._instancedData.uuid, e);
    }
    getColor() {
      return this._instancedData ? this._instancedObject.getItemColor(this._instancedData.uuid) : utils_Color_Color.WHITE.clone();
    }
    setColor(e) {
      this._instancedData && (this.getColor().isEqualTo(e) || this._instancedObject.setItemColor(this._instancedData.uuid, e));
    }
    setTexture(e) {
      this._instancedObject.setTexture(e);
    }
    setTextures(e) {
      this._instancedObject.setTextures(e);
    }
    getTextureUrl() {
      return this._instancedData ? this._instancedObject.getTexture(this._instancedData.uuid) : "";
    }
    setTextureRotations(e) {
      this._instancedObject.setTextureRotations(e);
    }
    setTextureFlipsY(e) {
      this._instancedObject.setTextureFlipsY(e);
    }
    setTextureRepeat(e) {
      this._instancedData && (this.getTextureRepeat().isEqualTo(e) || this._instancedObject.setItemTextureRepeat(this._instancedData.uuid, e));
    }
    getTextureRepeat() {
      return this._instancedData ? this._instancedObject.getItemTextureRepeat(this._instancedData.uuid) : vector_Vector2_Vector2.IDENTITY.clone();
    }
    setTextureOffset(e) {
      this._instancedData && (this.getTextureOffset().isEqualTo(e) || this._instancedObject.setItemTextureOffset(this._instancedData.uuid, e));
    }
    getTextureOffset() {
      return this._instancedData ? this._instancedObject.getItemTextureOffset(this._instancedData.uuid) : vector_Vector2_Vector2.ZERO.clone();
    }
    setTextureCurrentTile(e) {
      this._instancedData && this._instancedObject.setItemTextureCurrentTile(this._instancedData.uuid, e);
    }
    setTextureNextTile() {
      this._instancedData && this._instancedObject.setItemTextureNextTile(this._instancedData.uuid);
    }
    setTexture2CurrentTile(e) {
      this._instancedData && this._instancedObject.setItemTexture2CurrentTile(this._instancedData.uuid, e);
    }
    setRenderOrder(e) {
      this._instancedData && this._instancedObject.setRenderOrder(e);
    }
    getRenderOrder() {
      if (!this._instancedData) return 0;
      this._instancedObject.getRenderOrder();
    }
    getMaterials() {
      return this._instancedObject.getMaterials();
    }
    getObject3d() {
      return null;
    }
    setUserData(e) {}
    destroy() {
      this._instancedData && (this._instancedObject.removeItem(this._instancedData.uuid), this._instancedData = null);
    }
  }
  class EntityDrawable_EntityDrawable extends EntityAbstract_EntityAbstract {
    constructor() {
      super(...arguments), this.alwaysDisplayed = false, this._tryToggleAbilityBox2d = true, this._needUpdateForce = false, this._updateDisplayingStatusTimeoutUuid = "";
    }
    construct() {
      super.construct(), this.size = new Vector3EntitySize_Vector3EntitySize(this, 1, 1, 1), this.scale = new Vector3EntityScale_Vector3EntityScale(this, 1, 1, 1), this.position = new Vector3EntityPosition_Vector3EntityPosition(this), this.rotation = new Vector3EntityRotation_Vector3EntityRotation(this), this.velocity = new vector_Vector3_Vector3, this.updatedForceSteps = {updatedServerProperties: false, updatedDraw: false}, this.smoothing = {position: 20, size: 6, rotation: 6, velocity: 2}, this.syncWithServer = {position: true, velocity: true, size: true, rotation: true}, this._canSeePointPool = new It, this._getDistanceToCameraPool = new vector_Vector3_Vector3;
    }
    onCreate() {
      super.onCreate(), this.setSkin(), this.setTransformsToSkin();
    }
    onSetServerProperties(e) {
      this.setSmoothlyServerTransforms(1), this.needUpdateForce && (this.updatedForceSteps.updatedServerProperties = true), e.clientSettings && undefined !== e.clientSettings.physics && this.toggleBox2dAbility();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), (ValueUtils.isNotUndefinedAndNotNull(e.position) && this.syncWithServer.position || ValueUtils.isNotUndefinedAndNotNull(e.size) && this.syncWithServer.size || ValueUtils.isNotUndefinedAndNotNull(e.rotation) && this.syncWithServer.rotation) && np.drawer.addOnce(this), this.needUpdateForce && (this.updatedForceSteps.updatedServerProperties = true), e.clientSettings && undefined !== e.clientSettings.physics && this.toggleBox2dAbility();
    }
    toggleBox2dAbility() {
      const e = this.getClientSetting("physics");
      e && false === this.abilities.hasAbility(AbilityBox2d_AbilityBox2d) ? this.abilities.addAbility(new AbilityBox2d_AbilityBox2d(this)) : false === e && this.abilities.hasAbility(AbilityBox2d_AbilityBox2d) && this.abilities.destroyAbility(AbilityBox2d_AbilityBox2d);
    }
    setSkin() {
      this.isInstanced() ? this.skin = this.createInstancedSkin() : this.skin = this.createSkin(), this.skin && (this.skin.initialize(), this.isInstanced() && this.skin.addItem(this.getInstancedData()), this.skin.setUserData({entityUuid: this.uuid, serverUuid: this.serverProperties ? this.serverProperties.uuid : undefined}));
    }
    setTransformsToSkin() {
      this.skin && this.skin.setTransforms(this.position.getWithOffset(), this.rotation.getWithOffset(), this.size.getScaledSize());
    }
    createSkin() {
      return null;
    }
    createInstancedSkin() {
      return new InstancedSkin_InstancedSkin;
    }
    onSpawn() {
      super.onSpawn(), this.fromCache && this.isInstanced() && this.skin.addItem(this.getInstancedData()), this.setTransformsToSkin(), np.drawer.addOnce(this), this.updateDisplayingStatus();
    }
    updateDisplayingStatus() {
      this.displayed = this.canDisplayed(), this.isInstanced() || this.alwaysDisplayed || (np.canvas.clearTimeoutFrames(this._updateDisplayingStatusTimeoutUuid), this.displayed ? this._updateDisplayingStatusTimeoutUuid = np.canvas.setTimeoutFrames(() => this.updateDisplayingStatus(), 120) : this._updateDisplayingStatusTimeoutUuid = np.canvas.setTimeoutFrames(() => this.updateDisplayingStatus(), this.getDistanceToCamera() / 5e3 * 5e3 / 62.5));
    }
    getDistanceToCamera() {
      return this._getDistanceToCameraPool.copy(this.position), this._getDistanceToCameraPool.x -= np.canvas.camera.camera.position.x, this._getDistanceToCameraPool.y -= np.canvas.camera.camera.position.y, this._getDistanceToCameraPool.length();
    }
    canDisplayed() {
      return !(!this.isInstanced() && !this.alwaysDisplayed) || this.isInScreen();
    }
    isInScreen() {
      const e = this.size.getScaledSize();
      return this._canSeePointPool.set(this.position.x + e.x / 2, this.position.y + e.y / 2, this.position.z + e.z / 2), !!np.canvas.canSeePoint(this._canSeePointPool) || (this._canSeePointPool.x -= e.x, !!np.canvas.canSeePoint(this._canSeePointPool) || (this._canSeePointPool.y -= e.y, !!np.canvas.canSeePoint(this._canSeePointPool) || (this._canSeePointPool.x += e.x, !!np.canvas.canSeePoint(this._canSeePointPool) || !np.modules.mod.optimize2d && (this._canSeePointPool.z -= e.z, !!np.canvas.canSeePoint(this._canSeePointPool) || (this._canSeePointPool.x -= e.x, !!np.canvas.canSeePoint(this._canSeePointPool) || (this._canSeePointPool.y += e.y, !!np.canvas.canSeePoint(this._canSeePointPool) || (this._canSeePointPool.x += e.x, np.canvas.canSeePoint(this._canSeePointPool))))))));
    }
    draw() {
      this.skin && this.skin.draw(), this.trySetSmoothlyServerTransforms(), this.needUpdateForce && (np.drawer.addOnce(this), this.updatedForceSteps.updatedServerProperties && (this.updatedForceSteps.updatedDraw = true, this.disableUpdateForceIfCompleted()));
    }
    trySetSmoothlyServerTransforms() {
      false !== this.isServer && (this.attachedToServer || this.needUpdateForce && this.updatedForceSteps.updatedServerProperties) && false === this.abilities.hasAbility(AbilityBox2d_AbilityBox2d) && this.setSmoothlyServerTransforms();
    }
    remove() {
      return !this.immortal && (this.needUpdateForce = false, np.canvas.clearTimeoutFrames(this._updateDisplayingStatusTimeoutUuid), this.displayed = false, super.remove(), this.isInstanced() && this.skin && this.skin.destroy(), this.cacheable && np.spawner.factory.add(this) ? (this.serverProperties = null, false) : (this.destroy(), true));
    }
    onAddedToCache() {
      super.onAddedToCache();
    }
    destroy() {
      np.canvas.clearTimeoutFrames(this._updateDisplayingStatusTimeoutUuid), this.displayed = false, this.skin && this.skin.destroy(), super.destroy();
    }
    set displayed (e) {
      this.skin && this.displayed !== e && (e ? this.addToScene() : this.removeFromScene(), this.abilities.onChangeDisplaying(e));
    }
    get displayed() {
      return this.skin.getVisible();
    }
    addToScene() {
      this.skin && this.skin.setVisible(true);
    }
    removeFromScene() {
      this.skin && this.skin.setVisible(false);
    }
    reCreateSkin() {
      this.removeFromScene(), this.skin && this.skin.destroy(), this.setSkin(), this.setTransformsToSkin(), this.updateDisplayingStatus(), this.abilities.onReCreateSkin();
    }
    setSmoothlyServerTransforms(e) {
      undefined === e && this.ifNeedForceDraw() && (e = 1), this.setSmoothlyServerPosition(e), this.setSmoothlyServerVelocity(e), this.setSmoothlyServerRotation(e), this.setSmoothlySize(e);
    }
    setSmoothlyServerVelocity(e = this.smoothing.velocity) {
      if (false === this.syncWithServer.velocity || !this.serverProperties) return;
      const t = this.getInterpolatedServerVelocity(this.serverProperties.velocity.x);
      this.velocity.x = ValueUtils.smoothValue(t, this.velocity.x, e), this.velocity.y = ValueUtils.smoothValue(this.getInterpolatedServerVelocity(this.serverProperties.velocity.y), this.velocity.y, e), this.position.x += this.velocity.x, this.position.y += this.velocity.y;
    }
    setSmoothlyServerPosition(e = this.smoothing.position) {
      if (false === this.syncWithServer.position || !this.serverProperties) return;
      const t = this.serverProperties.position;
      this.position.x = ValueUtils.smoothValue(t.x, this.position.x, e), this.position.y = ValueUtils.smoothValue(t.y, this.position.y, e), (1 === e || ValueUtils.isNumberChanged(t.x, this.position.x, 1) || ValueUtils.isNumberChanged(t.y, this.position.y, 1)) && np.drawer.addOnce(this);
    }
    setSmoothlyServerRotation(e = this.smoothing.rotation) {
      if (false === this.syncWithServer.rotation || !this.serverProperties) return;
      const t = Box2dUtils.getThreeRotationFromBox2d(this.serverProperties.rotation);
      this.rotation.z = ValueUtils.smoothAngle(t, this.rotation.z, e), (1 === e || ValueUtils.isNumberChanged(t, this.rotation.z, 0.1)) && np.drawer.addOnce(this);
    }
    setSmoothlySize(e = this.smoothing.size) {
      false !== this.syncWithServer.size && this.serverProperties && (this.size.x = ValueUtils.smoothValue(this.serverProperties.size.y, this.size.x, e), this.size.y = ValueUtils.smoothValue(this.serverProperties.size.x, this.size.y, e), (1 === e || ValueUtils.isNumberChanged(this.serverProperties.size.x, this.size.x, 1) || ValueUtils.isNumberChanged(this.serverProperties.size.y, this.size.y, 1)) && np.drawer.addOnce(this));
    }
    getInterpolatedServerVelocity(e) {
      return e / (np.canvas.fps / np.config.get(Xu.serverTps)) * this.serverProperties.box2d.speedMultiplier * (window.iv || 1);
    }
    onDead() {}
    set needUpdateForce (e) {
      if (this._needUpdateForce = e, this.needUpdateForce) {
        for (const e in this.updatedForceSteps) "updatedServerProperties" !== e || false !== this.isServer ? this.updatedForceSteps[e] = false : this.updatedForceSteps[e] = true;
        np.drawer.addOnce(this);
      }
    }
    get needUpdateForce() {
      return this._needUpdateForce;
    }
    disableUpdateForceIfCompleted() {
      if (false !== this.needUpdateForce) {
        for (const e in this.updatedForceSteps) if (false === this.updatedForceSteps[e]) return;
        this.needUpdateForce = false;
      }
    }
    ifNeedForceDraw() {
      return this.needUpdateForce && this.updatedForceSteps.updatedServerProperties;
    }
    get radius() {
      return Math.max(this.size.x, this.size.y) / 2;
    }
    set radius (e) {
      this.size.x = 2 * e, this.size.y = 2 * e;
    }
    getInstancedData() {
      const e = super.getInstancedData();
      e.groupName = this.getInstancedGroupName(), e.position.copy(this.position.getWithOffset()), e.rotation.copy(this.rotation.getWithOffset());
      const t = this.size.getScaledSize();
      return t.z = t.getMax(), e.scale.copy(t), e;
    }
  }
  class AbstractTextureAnimationMaterial_AbstractTextureAnimationMaterial {
    initialize(e, t) {
      this._material = this.createMaterial(), this.setTexture(e), this.setColor(t), np.modules.mod.optimize2d && (this._material.depthTest = false, this._material.depthWrite = false);
    }
    getMaterial() {
      return this._material;
    }
  }
  class BasicTextureAnimationMaterial_BasicTextureAnimationMaterial extends AbstractTextureAnimationMaterial_AbstractTextureAnimationMaterial {
    constructor() {
      super(...arguments), this._uniforms = {texture: {type: "t", value: np.textures.defaultTexture}, offset: {type: "v2", value: new Lt}, repeat: {type: "v2", value: new Lt(1, 1)}, tileSize: {type: "v2", value: new Lt(1, 1)}, color: {type: "v4", value: new Gt(1, 1, 1, 1)}};
    }
    createMaterial() {
      return new cr(this.createUniformsData());
    }
    createUniformsData() {
      return {uniforms: this._uniforms, vertexShader: BasicTextureAnimationMaterial_BasicTextureAnimationMaterial.vertexShader, fragmentShader: BasicTextureAnimationMaterial_BasicTextureAnimationMaterial.fragmentShader};
    }
    setTexture(e) {
      this._uniforms.texture.value = e;
    }
    getTexture() {
      return this._uniforms.texture.value;
    }
    getColor() {
      return new utils_Color_Color(255 * this._uniforms.color.value.x, 255 * this._uniforms.color.value.y, 255 * this._uniforms.color.value.z);
    }
    setColor(e) {
      const t = e.toThreeColor();
      this._uniforms.color.value.set(t.r, t.g, t.b, this.getOpacity());
    }
    getOpacity() {
      return this._uniforms.color.value.w;
    }
    setOpacity(e) {
      this._uniforms.color.value.w = e;
    }
    setRepeat(e) {
      this._uniforms.repeat.value.set(e.x, e.y);
    }
    getRepeat() {
      return vector_Vector2_Vector2.fromThreeVector2(this._uniforms.repeat.value);
    }
    setOffset(e) {
      this._uniforms.offset.value.set(e.x, e.y);
    }
    getOffset() {
      return vector_Vector2_Vector2.fromThreeVector2(this._uniforms.offset.value);
    }
    setTileSize(e) {
      this._uniforms.tileSize.value.set(e.x, e.y);
    }
    getTileSize() {
      return vector_Vector2_Vector2.fromThreeVector2(this._uniforms.tileSize.value);
    }
  }
  BasicTextureAnimationMaterial_BasicTextureAnimationMaterial.params = "\n        precision highp float;\n        \n        varying vec2 vUv;\n        uniform vec2 offset;\n        uniform vec2 repeat;\n        uniform vec2 tileSize;\n        uniform sampler2D texture;\n        uniform vec4 color;\n        ", BasicTextureAnimationMaterial_BasicTextureAnimationMaterial.vertexShader = `\n        ${BasicTextureAnimationMaterial_BasicTextureAnimationMaterial.params}\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n        }`, BasicTextureAnimationMaterial_BasicTextureAnimationMaterial.fragmentShader = `\n        ${BasicTextureAnimationMaterial_BasicTextureAnimationMaterial.params}\n        void main() {\n            vec2 fUv =  mod(vUv * repeat, 1.0) * tileSize + offset;\n            gl_FragColor = texture2D(texture, fUv) * color;\n        }\n        `;
  class ExtendedTextureAnimationMaterial_ExtendedTextureAnimationMaterial extends AbstractTextureAnimationMaterial_AbstractTextureAnimationMaterial {
    constructor() {
      super(...arguments), this._uniforms = {offset: {type: "v2", value: new Lt}, repeat: {type: "v2", value: new Lt(1, 1)}, tileSize: {type: "v2", value: new Lt(1, 1)}, color: {type: "v4", value: new Gt(1, 1, 1, 1)}}, this._materialParameters = {map: np.textures.defaultTexture}, this._shaderHooks = [{needle: "#include <map_fragment>", fragment: "\n            #ifdef USE_MAP\n                vec2 _uv1 = mod(vUv * repeat, 1.0) * tileSize + offset;\n                vec4 texel1 = texture2D(map, _uv1);\n                texel1 = mapTexelToLinear(texel1);\n                \n                diffuseColor *= texel1;\n                diffuseColor *= color;\n            #endif\n        "}];
    }
    createMaterial() {
      let e;
      return np.settings.graphics.getOptions().shadows ? ((e = new zl(this._materialParameters)).shininess = 30, e.specular.set(0)) : e = new Vl(this._materialParameters), e.customUniforms = this._uniforms, e.shaderHooks = this._shaderHooks, e.onBeforeCompile = function (e) {
        true !== this.hacked && (this.hacked = true, MaterialUtils.setCustomUniforms(this, e, this.customUniforms), MaterialUtils.setShaderHooks(e, this.shaderHooks));
      }, e;
    }
    setTexture(e) {
      this._material.map = e, this._material.needsUpdate = true;
    }
    getTexture() {}
    getColor() {
      return utils_Color_Color.fromThreeColor(this._material.color);
    }
    setColor(e) {
      this._material.color.copy(e.toThreeColor());
    }
    getOpacity() {
      return this._material.opacity;
    }
    setOpacity(e) {
      this._material.opacity = e;
    }
    setRepeat(e) {
      this._uniforms.repeat.value.set(e.x, e.y);
    }
    getRepeat() {
      return vector_Vector2_Vector2.fromThreeVector2(this._uniforms.repeat.value);
    }
    setOffset(e) {
      this._uniforms.offset.value.set(e.x, e.y);
    }
    getOffset() {
      return vector_Vector2_Vector2.fromThreeVector2(this._uniforms.offset.value);
    }
    setTileSize(e) {
      this._uniforms.tileSize.value.set(e.x, e.y);
    }
    getTileSize() {
      return vector_Vector2_Vector2.fromThreeVector2(this._uniforms.tileSize.value);
    }
  }
  class TextureAnimator_SpriteAnimatorOptions {
    constructor() {
      this.tiles = vector_Vector2_Vector2.IDENTITY.clone(), this.loop = true, this.loopType = id.CIRCLE, this.inverse = false;
    }
  }
  !function (e) {
    e[e.CIRCLE = 0] = "CIRCLE", e[e.FORWARD_BACKWARD = 1] = "FORWARD_BACKWARD";
  }(id || (id = {})), function (e) {
    e[e.FORWARD = 0] = "FORWARD", e[e.BACKWARD = 1] = "BACKWARD";
  }(rd || (rd = {}));
  class TextureAnimator_SpriteAnimator {
    constructor(e, t) {
      this._currentTile = vector_Vector2_Vector2.ZERO.clone(), this._options = new TextureAnimator_SpriteAnimatorOptions, this._direction = rd.FORWARD, Object.assign(this._options, t), this.tilesCount = this._options.tiles.x * this._options.tiles.y, this.material = e, this.material.setTileSize(new vector_Vector2_Vector2(1 / this._options.tiles.x, 1 / this._options.tiles.y)), this.offsetY = 1 - this.material.getTileSize().y, this.setToBeginTile();
    }
    setToBeginTile() {
      this._options.inverse ? this.setCurrentTile(new vector_Vector2_Vector2(this._options.tiles.x - 1, this._options.tiles.y - 1)) : this.setCurrentTile(vector_Vector2_Vector2.ZERO);
    }
    reset() {
      this.setToBeginTile();
    }
    setNextTile() {
      return (!this.isLastFrame() || false !== this._options.loop) && (this.setCurrentTile(this.playTile(this._currentTile)), true);
    }
    setCurrentTile(e) {
      this._currentTile.copy(e), this.material.setOffset(new vector_Vector2_Vector2(e.x / this._options.tiles.x, this.offsetY - e.y / this._options.tiles.y));
    }
    getCurrentTile() {
      return this._currentTile.clone();
    }
    playTile(e) {
      return this._options.inverse ? this.getPrevTile(e) : this._options.loopType === id.FORWARD_BACKWARD ? (this._direction === rd.FORWARD && this.isLastFrame() ? this._direction = rd.BACKWARD : this._direction === rd.BACKWARD && this.isFirstFrame() && (this._direction = rd.FORWARD), this._direction === rd.FORWARD ? this.getNextTile(e) : this.getPrevTile(e)) : this.getNextTile(e);
    }
    getPrevTile(e) {
      const t = e.clone();
      return t.x--, t.x < 0 && (t.x = this._options.tiles.x - 1, t.y--, t.y < 0 && (t.y = this._options.tiles.y - 1)), t;
    }
    getNextTile(e) {
      const t = e.clone();
      return t.x++, t.x > this._options.tiles.x - 1 && (t.x = 0, t.y++, t.y > this._options.tiles.y - 1 && (t.y = 0)), t;
    }
    isFirstFrame() {
      return this._options.inverse ? this._currentTile.isEqualTo(this._options.tiles.clone().subtractScalar(1)) : this._currentTile.isZero();
    }
    isLastFrame() {
      return this._options.inverse ? this._currentTile.isZero() : this._currentTile.isEqualTo(this._options.tiles.clone().subtractScalar(1));
    }
  }
  class SkinSimple_SkinSimpleOptions extends AbstractMeshSkin_MeshSkinOptions {
    constructor() {
      super(...arguments), this.cachedGeometry = np.modules.mod.defaultGeometry, this.side = m, this.alphaTest = 0, this.textureUrls = [""], this.textureRotations = [], this.textureFlipsY = [], this.textureRepeat = new vector_Vector2_Vector2(1, 1), this.textureCenter = new vector_Vector2_Vector2(0.5, 0.5), this.geometrySegments = new vector_Vector2_Vector2(1, 1), this.castShadow = false, this.receiveShadow = false, this.receiveLight = false, this.rotation = new vector_Vector3_Vector3, this.scale = (new vector_Vector3_Vector3).setScalar(1);
    }
  }
  class SkinSimple_SkinSimple extends AbstractMeshSkin_AbstractMeshSkin {
    constructor(e) {
      super(e), this._options = new SkinSimple_SkinSimpleOptions, this._customTextures = [];
    }
    initialize() {
      super.initialize(), this.getObject3d().castShadow = this._options.castShadow, this.getObject3d().receiveShadow = this._options.receiveShadow, this.getObject3d().scale.copy(this._options.scale.toThreeVector3()), this.getObject3d().rotation.copy(this._options.rotation.toThreeEuler()), this.updateTextures(), this.updateTexturesTransforms();
    }
    createGeometry() {
      if (ValueUtils.isUndefinedOrNull(this._options.geometry) && this._options.geometrySegments.isEqualTo(vector_Vector2_Vector2.IDENTITY) && this._options.center.isZero()) return np.cacheKeeper.get(this._options.cachedGeometry);
      if (this._options.geometrySegments.isEqualTo(vector_Vector2_Vector2.IDENTITY)) {
        let e;
        return (e = ValueUtils.isUndefinedOrNull(this._options.geometry) ? np.cacheKeeper.get(this._options.cachedGeometry).clone() : this._options.geometry.clone()).translate(this._options.center.x, this._options.center.y, this._options.center.z), e;
      }
      return new kr(1, 1, this._options.geometrySegments.x, this._options.geometrySegments.y);
    }
    createMaterials() {
      const e = [];
      return this._options.textureUrls.length ? this._options.textureUrls.forEach((t, n) => e.push(this.createMaterial(n))) : e.push(this.createMaterial()), e;
    }
    createMaterial(e = 0) {
      let t;
      return this._options.receiveLight && np.settings.graphics.getOptions().light ? np.settings.graphics.getOptions().shadows ? ((t = np.cacheKeeper.get(zl).clone()).shininess = 30, t.specular.set(0)) : t = np.cacheKeeper.get(Vl).clone() : t = np.cacheKeeper.get(ui).clone(), t.color.copy(this._options.color.toThreeColor()), t.wireframe = this._options.wireframe, t.side = this._options.side, t.alphaTest = this._options.alphaTest, this._options.textureUrls[e] && (t.map = this._options.textureUrls[e]), t;
    }
    createObject3d() {
      return new Yi(this._geometry, this._materials.length > 1 ? this._materials : this._materials[0]);
    }
    setTexture(e, t = 0) {
      this._options.textureUrls[t] !== e && (this._options.textureUrls[t] = e, this._materials[t].needsUpdate = true, this.updateTexture(t));
    }
    getTextureUrl(e = 0) {
      return this._options.textureUrls[e];
    }
    setTextures(e) {
      if (e.length === this._materials.length) e.forEach((e, t) => this.setTexture(e, t)); else {
        this._options.textureUrls = e;
        const t = this.getObject3d(), n = t.parent;
        this.destroy(), this.initialize(), this.getObject3d().copy(t, true), n && n.add(this.getObject3d());
      }
    }
    updateTextures() {
      this._options.textureUrls.forEach((e, t) => this.updateTexture(t));
    }
    updateTexture(e) {
      0 !== this._options.textureUrls[e].length && (np.textures.isExistsTexture(this._options.textureUrls[e]) ? this.onChangeTexture(np.textures.getLoadedTexture(this._options.textureUrls[e]), e) : (this._materials[e].map = np.textures.defaultTexture, this._materials[e].needsUpdate = true, np.textures.getTexture(this._options.textureUrls[e]).then(t => this.onChangeTexture(t, e)).catch(e => this.onUpdateTextureError(e))));
    }
    onChangeTexture(e, t) {
      this._materials[t].map = e, this.updateTextureTransforms(t), this._materials[t].needsUpdate = true;
    }
    updateTexturesTransforms() {
      this._options.textureUrls.forEach((e, t) => this.updateTextureTransforms(t));
    }
    updateTextureTransforms(e) {
      this._materials[e].map && (this.setTextureRepeat(this._options.textureRepeat, e), this.setTextureRotation(this._options.textureRotations[e], e), this.setTextureFlipY(this._options.textureFlipsY[e], e), this.setTextureCenter(this._options.textureCenter, e));
    }
    setTextureRepeat(e, t = 0) {
      if (0 === e.x || 0 === e.y) throw new Error("Can't set texture repeat, X or Y is zero");
      this.getTextureRepeat(t).isEqualTo(e) || (this._options.textureRepeat.copy(e), this._materials[t].map = this._materials[t].map.clone(), this._customTextures.push(this._materials[t].map), this._materials[t].map.wrapS = de, this._materials[t].map.wrapT = de, this._materials[t].map.repeat.copy(e.toThreeVector2()), this._materials[t].map.needsUpdate = true, this._materials[t].needsUpdate = true);
    }
    getTextureRepeat(e = 0) {
      return this._materials[e].map ? vector_Vector2_Vector2.fromThreeVector2(this._materials[e].map.repeat) : vector_Vector2_Vector2.IDENTITY.clone();
    }
    setTextureOffset(e, t = 0) {
      this.getTextureOffset(t).isEqualTo(e) || (this._materials[t].map = this._materials[t].map.clone(), this._customTextures.push(this._materials[t].map), this._materials[t].map.offset.copy(e.toThreeVector2()), this._materials[t].map.needsUpdate = true, this._materials[t].needsUpdate = true);
    }
    getTextureOffset(e = 0) {
      return this._materials[e].map ? vector_Vector2_Vector2.fromThreeVector2(this._materials[e].map.offset) : vector_Vector2_Vector2.ZERO.clone();
    }
    setTextureFlipsY(e) {
      e.forEach((e, t) => this.setTextureFlipY(e, t));
    }
    setTextureFlipY(e, t = 0) {
      ValueUtils.isUndefinedOrNull(e) || (this._options.textureFlipsY[t] = e, this._materials[t] && this._materials[t].map && this._materials[t].map.flipY !== e && (this._materials[t].map = this._materials[t].map.clone(), this._customTextures.push(this._materials[t].map), this._materials[t].map.flipY = e, this._materials[t].map.needsUpdate = true, this._materials[t].needsUpdate = true));
    }
    getTextureFlipY(e = 0) {
      return this._materials[e].map.flipY;
    }
    setTextureRotations(e) {
      e.forEach((e, t) => this.setTextureRotation(e, t));
    }
    setTextureRotation(e, t = 0) {
      if (ValueUtils.isUndefinedOrNull(e)) return;
      const n = ValueUtils.absAngle(e);
      this._options.textureRotations[t] = n, this._materials[t] && this._materials[t].map && this._materials[t].map.rotation !== n && (this._materials[t].map = this._materials[t].map.clone(), this._customTextures.push(this._materials[t].map), this._materials[t].map.rotation = n, this._materials[t].map.center.setScalar(0.5), this._materials[t].map.needsUpdate = true, this._materials[t].needsUpdate = true);
    }
    getTextureRotation(e = 0) {
      return this._materials[e].map.rotation;
    }
    setTextureCenter(e, t = 0) {
      this.getTextureCenter().isEqualTo(e) || (this._options.textureCenter.copy(e), this._materials[t].map.center.copy(e.toThreeVector2()), this._materials[t].map.needsUpdate = true, this._materials[t].needsUpdate = true);
    }
    getTextureCenter(e = 0) {
      return vector_Vector2_Vector2.fromThreeVector2(this._materials[e].map.center);
    }
    onUpdateTextureError(e) {
      console.error(e);
    }
    setColor(e) {
      ValueUtils.isUndefinedOrNull(e) || this._materials && this._materials[0] && this._materials[0].color && this._materials[0].color.equals(e.toThreeColor()) || (this._options.color.copy(e), this.updateColorRecursively(this.getObject3d()));
    }
    updateColorRecursively(e) {
      if (!e) return;
      for (const t in e.children) this.updateColorRecursively(e.children[t]);
      const t = e;
      if (t.material) if (t.material instanceof Array) t.material.forEach(e => e.color.copy(this._options.color.toThreeColor())); else {
        const e = t.material;
        e.color && e.color.copy(this._options.color.toThreeColor());
      }
    }
    getColor(e = 0) {
      return this._materials[e] && this._materials[e].color ? utils_Color_Color.fromThreeColor(this._materials[e].color.clone()) : utils_Color_Color.WHITE.clone();
    }
    destroy() {
      super.destroy(), this._customTextures.forEach(e => e.dispose());
    }
  }
  class SkinAnimatedSprite_SkinAnimatedSpriteOptions extends SkinSimple_SkinSimpleOptions {
    constructor() {
      super(...arguments), this.cachedGeometry = kr, this.tiles = vector_Vector2_Vector2.IDENTITY.clone(), this.everyFrame = 1, this.loop = true, this.loopType = id.CIRCLE, this.inverse = false;
    }
  }
  class SkinAnimatedSprite_SkinAnimatedSprite extends SkinSimple_SkinSimple {
    constructor(e) {
      super(), this._options = new SkinAnimatedSprite_SkinAnimatedSpriteOptions, Object.assign(this._options, e);
    }
    startAnimation() {
      this.stopAnimation(), this._options.everyFrame && (this._timerUuid = np.canvas.setIntervalFrames(() => this.updateAnimator(), this._options.everyFrame));
    }
    stopAnimation() {
      this._timerUuid && (np.canvas.clearIntervalFrames(this._timerUuid), this._timerUuid = null);
    }
    createMaterials() {
      this._options.receiveLight && np.settings.graphics.getOptions().light ? this._mat = new ExtendedTextureAnimationMaterial_ExtendedTextureAnimationMaterial : this._mat = new BasicTextureAnimationMaterial_BasicTextureAnimationMaterial, this._mat.initialize(np.textures.defaultTexture, this._options.color);
      const e = {tiles: this._options.tiles, loop: this._options.loop, loopType: this._options.loopType, inverse: this._options.inverse};
      return this._animator = new TextureAnimator_SpriteAnimator(this._mat, e), [this._mat.getMaterial()];
    }
    updateAnimator() {
      this._animator && false === this._animator.setNextTile() && this.stopAnimation();
    }
    get animator() {
      return this._animator;
    }
    onChangeTexture(e) {
      this._mat.setTexture(e);
    }
    setTextureRepeat(e) {
      this._mat && false === this.getTextureRepeat().isEqualTo(e) && this._mat.setRepeat(e);
    }
    getTextureRepeat() {
      return this._mat.getRepeat();
    }
    setTextureRotation(e) {
      this._mat && this._mat.getTexture() && this._mat.getTexture().rotation !== this._options.textureRotations[0] && (this._mat.getTexture().rotation = this._options.textureRotations[0]);
    }
    setTextureOffset(e) {
      this._mat && false === this.getTextureOffset().isEqualTo(e) && this._mat.setOffset(e);
    }
    getTextureOffset() {
      return this._mat.getOffset();
    }
    setColor(e) {
      this._mat && !ValueUtils.isUndefinedOrNull(e) && (this._options.color.isEqualTo(e) || (this._options.color.copy(e), this._mat.setColor(e)));
    }
    getColor() {
      return this._mat.getColor();
    }
    destroy() {
      super.destroy(), this.stopAnimation();
    }
  }
  class SkinComposite_SkinCompositeOptions extends SkinOptions {
    constructor() {
      super(...arguments), this.skinOptions = {}, this.skinItemClass = SkinSimple_SkinSimple;
    }
  }
  class SkinComposite_SkinComposite extends AbstractSkin {
    constructor(e) {
      super(e), this._skins = {}, this._options = new SkinComposite_SkinCompositeOptions, this._container = new yn;
    }
    initialize() {
      super.initialize(), this.createSkins();
    }
    createSkins() {
      for (const e in this._options.skinOptions) this.createSkin(e);
    }
    createSkin(e) {
      const t = this._options.skinOptions[e];
      t.container = this._container, this._skins[e] = new this._options.skinItemClass(t), this._skins[e].initialize(), this._container.add(this._skins[e].getObject3d());
    }
    getObject3d() {
      return this._container;
    }
    setColor(e) {
      this.forEach(t => t.setColor(e));
    }
    getColor() {
      return this.getFirst().getColor();
    }
    setOpacities(e) {
      this.forEach(t => t.setOpacities(e));
    }
    setOpacity(e) {
      this.forEach(t => t.setOpacity(e));
    }
    setOpacityMaterial(e, t) {
      this.forEach(n => n.setOpacityMaterial(e, t));
    }
    getOpacity() {
      return this.getFirst().getOpacity();
    }
    setVisible(e) {
      this.getVisible() !== e && (e ? np.canvas.addToWorldObject(this._container) : np.canvas.removeFromWorldObject(this._container));
    }
    getVisible() {
      return !!this._container.parent;
    }
    setTexture(e, t) {
      t ? this._skins.hasOwnProperty(t) && this._skins[t].setTexture(e) : this.forEach(t => t.setTexture(e));
    }
    getTextureUrl() {
      return this.getFirst().getTextureUrl();
    }
    setTextures(e) {
      this.forEach(t => t.setTextures(e));
    }
    setTextureRotations(e) {
      this.forEach(t => t.setTextureRotations(e));
    }
    setTextureFlipsY(e) {
      this.forEach(t => t.setTextureFlipsY(e));
    }
    setTextureRepeat(e) {
      this.forEach(t => t.setTextureRepeat(e));
    }
    getTextureRepeat() {
      return this.getFirst().getTextureRepeat();
    }
    setTextureOffset(e) {
      this.forEach(t => t.setTextureOffset(e));
    }
    getTextureOffset() {
      return this.getFirst().getTextureOffset();
    }
    setTransforms(e, t, n) {
      ValueUtils.isNotUndefinedAndNotNull(e) && this._container.position.copy(e.toThreeVector3()), ValueUtils.isNotUndefinedAndNotNull(t) && this._container.rotation.copy(t.toThreeEuler()), ValueUtils.isNotUndefinedAndNotNull(t) && this._container.scale.copy(n.toThreeVector3());
    }
    setUserData(e) {
      this.forEach(t => t.setUserData(e));
    }
    destroy() {
      this.forEach(e => e.destroy()), this._skins = {};
    }
    getFirst() {
      const e = Object.keys(this._skins);
      return this._skins[e[0]];
    }
    forEach(e) {
      for (const t in this._skins) e(this._skins[t]);
    }
    getMaterials() {
      return [];
    }
    getRenderOrder() {
      return this.getFirst().getRenderOrder();
    }
    setRenderOrder(e) {
      this.forEach(t => t.setRenderOrder(e));
    }
    static getSkinItemOptionsFromFixture(e) {
      const t = new vector_Vector2_Vector2;
      if (e.type === Zu.CIRCLE) {
        const n = e;
        t.setScalar(n.radius);
      } else if (e.type === Zu.BOX) {
        const n = e;
        t.applyFromObject(n.size);
      }
      return {rotation: (new vector_Vector3_Vector3).setScalarZ(e.angle), scale: t.toVector3(t.getMax()).multiplyScalar(2), positionOffset: vector_Vector2_Vector2.fromObject(e.position).toVector3()};
    }
  }
  !function (e) {
    e[e.SIMPLE = 0] = "SIMPLE", e[e.COMPOSITE = 1] = "COMPOSITE", e[e.ANIMATED_TEXTURE = 2] = "ANIMATED_TEXTURE", e[e.INSTANCED = 3] = "INSTANCED";
  }(od || (od = {}));
  class EntitySimple_EntitySimple extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this._needDraw = false, this._oldTextureName = "";
    }
    construct() {
      super.construct(), this._oldAnimateTiles = vector_Vector2_Vector2.ZERO.clone();
    }
    onSetServerProperties(e) {
      super.onSetServerProperties(e), this.skin ? this.tryUpdateSkin(e) : this._skinType = this.getSkinType();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), this.skin ? this.tryUpdateSkin(e) : this._skinType = this.getSkinType();
    }
    tryUpdateSkin(e) {
      this.tryChangeSkin(e);
    }
    createSkin() {
      let e;
      switch (this._skinType) {
        case od.COMPOSITE:
          e = this.createSkinComposite();
          break;
        case od.ANIMATED_TEXTURE:
          e = this.createAnimatedTextureSkin(), this._needDraw = true;
          break;
        default:
          e = this.createSkinSimple();
      }
      return e;
    }
    onSpawn() {
      super.onSpawn();
    }
    draw() {
      super.draw(), this._needDraw && np.drawer.addOnce(this);
    }
    tryChangeSkin(e) {
      if (undefined === this._skinType) return;
      const t = this.getSkinType();
      if (this._skinType !== t) return this._skinType = t, void this.reCreateSkin();
      this._skinType === od.COMPOSITE && e.box2d && e.box2d.fixtures && this.reCreateSkin();
    }
    reCreateSkin() {
      this._oldTextureName = "", this._oldAnimateTiles.copy(vector_Vector2_Vector2.ZERO), super.reCreateSkin();
    }
    createSkinSimple() {
      return new SkinSimple_SkinSimple(this.getOptionsForSkinSimple());
    }
    getOptionsForSkinSimple() {
      const e = this.getFirstServerFixture();
      return {positionOffset: vector_Vector2_Vector2.fromObject(e.position).toVector3(), castShadow: this.isCastShadow(), receiveShadow: this.isReceiveShadow()};
    }
    createSkinComposite() {
      const e = {};
      for (const t in this.serverProperties.box2d.fixtures) this.serverProperties.box2d.fixtures[t].serverOnly || (e[t] = this.getOptionsForSkinCompositeItem(t));
      return new SkinComposite_SkinComposite({skinOptions: e});
    }
    getOptionsForSkinCompositeItem(e) {
      const t = SkinComposite_SkinComposite.getSkinItemOptionsFromFixture(this.serverProperties.box2d.fixtures[e]);
      return t.castShadow = this.isCastShadow(), t.receiveShadow = this.isReceiveShadow(), t;
    }
    createAnimatedTextureSkin() {
      const e = this.getFirstServerFixture(), t = this.getClientSetting("texture"), n = {textureUrls: [], tiles: new vector_Vector2_Vector2(t.animate.count.x, t.animate.count.y), textureRepeat: vector_Vector2_Vector2.fromObject(t.repeat), center: vector_Vector2_Vector2.fromObject(e.position).divide(vector_Vector2_Vector2.fromObject(e.size)).divideScalar(2).toVector3(), castShadow: this.isCastShadow(), receiveShadow: this.isReceiveShadow()};
      this._oldAnimateTiles.copy(n.tiles);
      const i = this.getClientSetting("geometrySegments");
      return i && (n.geometrySegments = vector_Vector2_Vector2.fromObject(i)), new SkinAnimatedSprite_SkinAnimatedSprite(n);
    }
    isCastShadow() {
      return false;
    }
    isReceiveShadow() {
      return false;
    }
    getSkinType() {
      return this.isMultiVolumes() ? od.COMPOSITE : this.hasAnimatedTexture() ? od.ANIMATED_TEXTURE : this.isInstanced() ? od.INSTANCED : od.SIMPLE;
    }
    isMultiVolumes() {
      const e = this.getFirstServerFixture();
      let t = 0;
      for (const e in this.serverProperties.box2d.fixtures) this.serverProperties.box2d.fixtures[e].serverOnly || t++;
      return t > 1 || e && false === vector_Vector2_Vector2.fromObject(e.position).isZero();
    }
    hasAnimatedTexture() {
      const e = this.getClientSetting("texture");
      return e && e.name && e.animate && e.animate.count && e.animate.count.x && e.animate.count.y;
    }
    isAnimatedTexture() {
      return this._skinType === od.ANIMATED_TEXTURE;
    }
  }
  class EntityPlayerI_EntityPlayerI extends EntitySimple_EntitySimple {
    constructor() {
      super(), this.abilities.addAbilities(new AbilityBox2d_AbilityBox2d(this));
    }
    onSpawn() {
      super.onSpawn(), np.canvas.camera.attachToEntity(this.uuid);
    }
  }
  !function (e) {
    e[e.CENTER = 0] = "CENTER", e[e.PART = 1] = "PART", e[e.FULL = 2] = "FULL";
  }(sd || (sd = {}));
  class EntitiesModule_EntitiesModule extends Module_Module {
    constructor() {
      super(...arguments), this.entities = {}, this.entitiesMap = {EntityPlayerI: EntityPlayerI_EntityPlayerI};
    }
    addEntity(e) {
      return !this.hasEntity(e.uuid) && (this.entities[e.uuid] = e, true);
    }
    getEntity(e) {
      return Optional.ofNullable(this.entities[e]);
    }
    getEntityByServerUuid(e) {
      return Optional.ofNullable(this.entities[np.spawner.getGameUuid(e)]);
    }
    getEntitiesInRect(e, t, n = false) {
      const i = [];
      for (const r in this.entities) if (!n || false !== this.entities[r].isServer) switch (t) {
        case sd.CENTER:
          this.isEntityCenterInRect(r, e) && i.push(this.entities[r]);
          break;
        case sd.PART:
          this.isEntityPartInRect(r, e) && i.push(this.entities[r]);
          break;
        case sd.FULL:
          this.isEntityInRect(r, e) && i.push(this.entities[r]);
      }
      return i;
    }
    isEntityCenterInRect(e, t) {
      return t.isInRect(this.entities[e].position.x, this.entities[e].position.y);
    }
    isEntityPartInRect(e, t) {
      let n = false;
      return (t.isVecInRect(this.getEntityLeftTopCorner(e)) || t.isVecInRect(this.getEntityRightTopCorner(e)) || t.isVecInRect(this.getEntityRightBottomCorner(e)) || t.isVecInRect(this.getEntityLeftBottomCorner(e))) && (n = true), n;
    }
    isEntityInRect(e, t) {
      let n = false;
      return t.isVecInRect(this.getEntityLeftTopCorner(e)) && t.isVecInRect(this.getEntityRightTopCorner(e)) && t.isVecInRect(this.getEntityRightBottomCorner(e)) && t.isVecInRect(this.getEntityLeftBottomCorner(e)) && (n = true), n;
    }
    getEntityLeftTopCorner(e) {
      return this.hasEntity(e) ? new vector_Vector2_Vector2(this.entities[e].position.x - this.entities[e].size.x / 2, this.entities[e].position.y + this.entities[e].size.y / 2) : new vector_Vector2_Vector2;
    }
    getEntityRightTopCorner(e) {
      return this.hasEntity(e) ? new vector_Vector2_Vector2(this.entities[e].position.x + this.entities[e].size.x / 2, this.entities[e].position.y + this.entities[e].size.y / 2) : new vector_Vector2_Vector2;
    }
    getEntityRightBottomCorner(e) {
      return this.hasEntity(e) ? new vector_Vector2_Vector2(this.entities[e].position.x + this.entities[e].size.x / 2, this.entities[e].position.y - this.entities[e].size.y / 2) : new vector_Vector2_Vector2;
    }
    getEntityLeftBottomCorner(e) {
      return this.hasEntity(e) ? new vector_Vector2_Vector2(this.entities[e].position.x - this.entities[e].size.x / 2, this.entities[e].position.y - this.entities[e].size.y / 2) : new vector_Vector2_Vector2;
    }
    getMiddlePosition(e) {
      const t = new It;
      if (e.length) {
        for (const n in e) this.entities.hasOwnProperty(e[n]) && t.add(this.entities[e[n]].position.toThreeVector3());
        t.divideScalar(e.length);
      }
      return t;
    }
    getSize(e) {
      const t = new vector_Vector2_Vector2, n = new vector_Vector2_Vector2, i = new It(1, 1, 1);
      if (e.length) {
        const r = this.entities[e[0]];
        if (!r) return i;
        t.copy(this.getEntityLeftBottomCorner(r.uuid)), n.copy(this.getEntityRightTopCorner(r.uuid)), i.copy(n.clone().subtract(t).toThreeVector3(1));
        for (const i in e) if (this.entities.hasOwnProperty(e[i])) {
          const r = this.getEntityRightTopCorner(this.entities[e[i]].uuid), o = this.getEntityLeftBottomCorner(this.entities[e[i]].uuid);
          t.x = Math.min(t.x, o.x), t.y = Math.min(t.y, o.y), n.x = Math.max(n.x, r.x), n.y = Math.max(n.y, r.y);
        }
        i.copy(n.clone().subtract(t).toThreeVector3(1));
      }
      return i;
    }
    delete(e) {
      delete this.entities[e];
    }
    removeAll() {
      for (const e in this.entities) this.entities[e].remove();
    }
    hasEntity(e) {
      return this.entities.hasOwnProperty(e);
    }
    addAbilities(...e) {
      for (const t in this.entities) this.entities[t].abilities.addFromArray(e);
    }
    destroyAbilities(...e) {
      for (const t in e) for (const n in this.entities) this.entities[n].abilities.destroyAbility(e[t]);
    }
  }
  class Notifier_Notifier extends Module_Module {
    static sendNotify(e, t) {}
  }
  class ErrorNotifier_ErrorNotifier extends Module_Module {
    constructor() {
      super(...arguments), this.errors = {}, this.slackChannelId = "client-errors";
    }
    initialize() {
      super.initialize(), window.onerror = (e, t, n, i, r) => this.onError(e, t, n, i, r);
    }
    finalize() {
      super.finalize(), window.onerror = () => {};
    }
    onError(e, t, n, i, r) {
      ErrorNotifier_ErrorNotifier.isIgnoredError(e) || this.checkAndSendError(e, t, n, i, r);
    }
    checkAndSendError(e, t, n, i, r) {
      this.isAlreadySent(e) || this.sendError(e, t, n, i, r);
    }
    isAlreadySent(e) {
      let t = ValueUtils.hashString(e);
      return !!this.errors[t];
    }
    sendError(e, t, n, i, r) {
      if (!r) return;
      let o = ValueUtils.hashString(e);
      this.errors[o] = true;
      let s = `\n               Message: ${e}\n               Url: ${t}\n               Line:Col: ${n}:${i}\n               Error Stack: ${r.stack}\n               `;
      Notifier_Notifier.sendNotify(s, this.slackChannelId);
    }
    static isIgnoredError(e) {
      if (location.host.includes("localhost")) return true;
      for (let t in ErrorNotifier_ErrorNotifier.ignoreErrors) {
        if (ErrorNotifier_ErrorNotifier.ignoreErrors[t].msg == e) return true;
      }
      return false;
    }
  }
  ErrorNotifier_ErrorNotifier.ignoreErrors = [{msg: "Access is denied."}, {msg: "Uncaught SecurityError: Failed to read the 'localStorage' property from 'Window': Access is denied for this document."}, {msg: "InvalidStateError (DOM Exception 11): The object is in an invalid state."}, {msg: "SecurityError (DOM Exception 18): The operation is insecure."}, {msg: "SecurityError: The operation is insecure."}, {msg: "Error: Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."}, {msg: "QuotaExceededError (DOM Exception 22): The quota has been exceeded."}, {msg: 'SecurityError: Permission denied to access property "href" on cross-origin object'}, {msg: 'Error: Permission denied to access property "href"'}, {msg: "TypeError: i.window.getComputedStyle(...) is null"}], function (e) {
    e[e.LeftMouseButton = 0] = "LeftMouseButton", e[e.MiddleMouseButton = 1] = "MiddleMouseButton", e[e.RightMouseButton = 2] = "RightMouseButton", e[e.MouseWheelScroll = 3] = "MouseWheelScroll", e[e.ArrowUp = 4] = "ArrowUp", e[e.ArrowLeft = 5] = "ArrowLeft", e[e.ArrowDown = 6] = "ArrowDown", e[e.ArrowRight = 7] = "ArrowRight", e[e.ShiftLeft = 8] = "ShiftLeft", e[e.ControlLeft = 9] = "ControlLeft", e[e.AltLeft = 10] = "AltLeft", e[e.MetaLeft = 11] = "MetaLeft", e[e.ShiftRight = 12] = "ShiftRight", e[e.ControlRight = 13] = "ControlRight", e[e.AltRight = 14] = "AltRight", e[e.MetaRight = 15] = "MetaRight", e[e.CapsLock = 16] = "CapsLock", e[e.Space = 17] = "Space", e[e.Backspace = 18] = "Backspace", e[e.Delete = 19] = "Delete", e[e.Escape = 20] = "Escape", e[e.Enter = 21] = "Enter", e[e.Slash = 22] = "Slash", e[e.Backslash = 23] = "Backslash", e[e.IntlBackslash = 24] = "IntlBackslash", e[e.BracketLeft = 25] = "BracketLeft", e[e.BracketRight = 26] = "BracketRight", e[e.Backquote = 27] = "Backquote", e[e.Minus = 28] = "Minus", e[e.Equal = 29] = "Equal", e[e.Tab = 30] = "Tab", e[e.Quote = 31] = "Quote", e[e.Semicolon = 32] = "Semicolon", e[e.Period = 33] = "Period", e[e.Comma = 34] = "Comma", e[e.Digit0 = 35] = "Digit0", e[e.Digit1 = 36] = "Digit1", e[e.Digit2 = 37] = "Digit2", e[e.Digit3 = 38] = "Digit3", e[e.Digit4 = 39] = "Digit4", e[e.Digit5 = 40] = "Digit5", e[e.Digit6 = 41] = "Digit6", e[e.Digit7 = 42] = "Digit7", e[e.Digit8 = 43] = "Digit8", e[e.Digit9 = 44] = "Digit9", e[e.KeyA = 45] = "KeyA", e[e.KeyB = 46] = "KeyB", e[e.KeyC = 47] = "KeyC", e[e.KeyD = 48] = "KeyD", e[e.KeyE = 49] = "KeyE", e[e.KeyF = 50] = "KeyF", e[e.KeyG = 51] = "KeyG", e[e.KeyH = 52] = "KeyH", e[e.KeyI = 53] = "KeyI", e[e.KeyJ = 54] = "KeyJ", e[e.KeyK = 55] = "KeyK", e[e.KeyL = 56] = "KeyL", e[e.KeyM = 57] = "KeyM", e[e.KeyN = 58] = "KeyN", e[e.KeyO = 59] = "KeyO", e[e.KeyP = 60] = "KeyP", e[e.KeyQ = 61] = "KeyQ", e[e.KeyR = 62] = "KeyR", e[e.KeyS = 63] = "KeyS", e[e.KeyT = 64] = "KeyT", e[e.KeyU = 65] = "KeyU", e[e.KeyV = 66] = "KeyV", e[e.KeyW = 67] = "KeyW", e[e.KeyX = 68] = "KeyX", e[e.KeyY = 69] = "KeyY", e[e.KeyZ = 70] = "KeyZ", e[e.F1 = 71] = "F1", e[e.F2 = 72] = "F2", e[e.F3 = 73] = "F3", e[e.F4 = 74] = "F4", e[e.F5 = 75] = "F5", e[e.F6 = 76] = "F6", e[e.F7 = 77] = "F7", e[e.F8 = 78] = "F8", e[e.F9 = 79] = "F9", e[e.F10 = 80] = "F10", e[e.F11 = 81] = "F11", e[e.F12 = 82] = "F12";
  }(ad || (ad = {}));
  class KeyStatus {
    constructor(e, t, n) {
      this.downed = false, this.key = e, t && (this.onKeyDown = t), n && (this.onKeyUp = n);
    }
    down() {
      this.downed || (this.onKeyDown && this.onKeyDown(), this.downed = true);
    }
    up() {
      this.downed && (this.onKeyUp && this.onKeyUp(), this.downed = false);
    }
  }
  class AbstractKeysController_AbstractKeysController {
    constructor(...e) {
      this._keys = {}, this.events = new Events_Events, this._listeners = [], this.setListeners(), this.addKeysFromArray(e);
    }
    addKeysFromArray(e) {
      for (const t in e) this.addKey(e[t]);
    }
    addKey(e, t, n) {
      this._keys[e] = new KeyStatus(e, t, n);
    }
    removeAllKeys() {
      this._keys = {};
    }
    addKeys(...e) {
      this.addKeysFromArray(e);
    }
    addKeyByCode(e, t, n) {
      const i = ad[e];
      this._keys[i] = new KeyStatus(i, t, n);
    }
    destroy() {
      for (let e = 0; e < this._listeners.length; e++) this._listeners[e].destroy();
    }
    isDown(e) {
      return !!this._keys[e] && this._keys[e].downed;
    }
    isAnyDown(...e) {
      for (const t in e) if (this.isDown(e[t])) return true;
      return false;
    }
    isAllDown() {
      let e = 0;
      for (const t in this._keys) this.isDown(this._keys[t].key) && e++;
      return e === Object.keys(this._keys).length;
    }
    isAllUp() {
      let e = 0;
      for (const t in this._keys) this.isDown(this._keys[t].key) && e++;
      return 0 === e;
    }
    setAllUp() {
      for (const e in this._keys) this._keys[e].up();
    }
    enable() {
      for (let e = 0; e < this._listeners.length; e++) this._listeners[e].enable();
    }
    disable() {
      for (let e = 0; e < this._listeners.length; e++) this._listeners[e].disable();
    }
    press(e) {
      this.onKeyDown(e), this.onKeyUp(e);
    }
    onKeyDown(e, t) {
      this._keys[e] && false === this._keys[e].downed && (this._keys[e].down(), this.isAllDown() && this.events.emit("allDown", t));
    }
    onKeyUp(e, t) {
      this._keys[e] && this._keys[e].downed && (this._keys[e].up(), this.isAllUp() && this.events.emit("allUp", t));
    }
    clear() {
      this._keys = {};
    }
  }
  class KeyBoardKeysController_KeyBoardKeysController extends AbstractKeysController_AbstractKeysController {
    setListeners() {
      this._listeners.push(np.input.events.on("beginInput", () => this.onBeginInput())), this._listeners.push(np.input.events.on("endInput", () => this.onEndInput())), this._listeners.push(np.window.events.on("keyup", e => this.onKeyUp(ad[e.customCode], e))), this._listener = np.window.events.on("keydown", e => this.onKeyDown(ad[e.customCode], e)), this._listeners.push(this._listener);
    }
    onBeginInput() {
      this._listener.disable();
    }
    onEndInput() {
      this._listener.enable();
    }
    destroy() {
      super.destroy(), this._listener.destroy();
    }
  }
  class MouseKeysController_MouseKeysController extends AbstractKeysController_AbstractKeysController {
    setListeners() {
      this._listeners.push(np.input.events.on("playerFreezeShot", () => this.onPlayerFreezeShot())), this._listeners.push(np.input.events.on("playerUnFreezeShot", () => this.onPlayerUnFreezeShot())), this._listeners.push(np.window.events.on("mouseup", e => this.onKeyUp(MouseKeysController_MouseKeysController.mouseKeysMap[e.button]))), this._listener = np.canvas.events.on("gameMouseDown", e => this.onKeyDown(MouseKeysController_MouseKeysController.mouseKeysMap[e.button])), this._listeners.push(this._listener);
    }
    onPlayerFreezeShot() {
      this._listener.disable();
    }
    onPlayerUnFreezeShot() {
      this._listener.enable();
    }
    destroy() {
      super.destroy(), this._listener.destroy();
    }
  }
  MouseKeysController_MouseKeysController.mouseKeysMap = {0: ad.LeftMouseButton, 1: ad.MiddleMouseButton, 2: ad.RightMouseButton};
  class ActionTriggerOptions {
    constructor() {
      this.action = "", this.enabled = true, this.keys = [], this.sendToServer = false;
    }
  }
  class ActionTrigger_ActionTrigger {
    constructor(e) {
      this.events = new Events_Events, this._options = new ActionTriggerOptions, Object.assign(this._options, e);
    }
    initialize() {
      this.initializeControllers(), this.addKeys();
    }
    initializeControllers() {
      this.hasMouseKeys() ? this.initializeMouseController() : this.hasKeyBoardKeys() && this.initializeKeyboardController();
    }
    initializeKeyboardController() {
      this._keyBoardKeys = new KeyBoardKeysController_KeyBoardKeysController, this._keyBoardKeys.events.on("allDown", () => this.onAllDown()), this._keyBoardKeys.events.on("allUp", () => this.onAllUp());
    }
    initializeMouseController() {
      this._mouseKeys = new MouseKeysController_MouseKeysController, this._mouseKeys.events.on("allDown", () => this.onAllDown()), this._mouseKeys.events.on("allUp", () => this.onAllUp());
    }
    addKeys() {
      for (const e in this._options.keys) this.addKey(this._options.keys[e]);
    }
    addKey(e) {
      this.isMouseKey(e) ? (this._mouseKeys || this.initializeMouseController(), this._mouseKeys.addKey(e)) : (this._keyBoardKeys || this.initializeKeyboardController(), this._keyBoardKeys.addKey(e));
    }
    reSetKeys(e) {
      this._mouseKeys && this._mouseKeys.removeAllKeys(), this._keyBoardKeys && this._keyBoardKeys.removeAllKeys(), this._options.keys = e, this.addKeys();
    }
    onAllDown() {
      false !== this._options.enabled && (this.events.emit("allKeysDown", {keys: this.getKeys()}), this._options.sendToServer && this.sendActionToServer("down"));
    }
    onAllUp() {
      false !== this._options.enabled && (this.events.emit("allKeysUp", {keys: this.getKeys()}), this._options.sendToServer && this.sendActionToServer("up"));
    }
    sendActionToServer(e) {
      np.socket.send("binding", {type: e, binding: this._options.action});
    }
    press() {
      this.onAllDown(), this.onAllUp();
    }
    pressDown() {
      this.onAllDown();
    }
    pressUp() {
      this.onAllUp();
    }
    getKeys() {
      return this._options.keys;
    }
    getAction() {
      return this._options.action;
    }
    destroy() {
      this._keyBoardKeys && (this._keyBoardKeys.destroy(), this._keyBoardKeys = null), this.events.destroy();
    }
    hasMouseKeys() {
      for (const e in this._options.keys) if (this.isMouseKey(this._options.keys[e])) return true;
      return false;
    }
    isMouseKey(e) {
      return [ad.LeftMouseButton, ad.MiddleMouseButton, ad.RightMouseButton, ad.MouseWheelScroll].includes(e);
    }
    hasKeyBoardKeys() {
      return this._options.keys.length && false === this.hasMouseKeys();
    }
    getNamedKeys() {
      const e = [];
      for (const t in this._options.keys) e.push(this.getNamedKey(this._options.keys[t]));
      return e.join(" + ");
    }
    getNamedKey(e) {
      let t = ad[e];
      if (undefined === t) return "";
      if (1 === (t = (t = t.replace("Key", "")).replace("Digit", "")).length) return t;
      let n = "";
      for (let e = 0; e < t.length; e++) t[e] === t[e].toUpperCase() && 0 !== e ? n += ` ${t[e]}` : n += t[e];
      return n;
    }
    enable() {
      this._options.enabled = true;
    }
    disable() {
      this._options.enabled = false;
    }
    isSendToServer() {
      return this._options.sendToServer;
    }
  }
  class ActionTriggers {
    constructor() {
      this.triggers = [];
    }
    forEach(e) {
      for (const t in this.triggers) e(this.triggers[t]);
    }
  }
  class KeyBindings_KeyBindings {
    constructor() {
      this._language = n(50)("./" + np.languages.activeLanguage + ".json"), this._keyBindings = {}, this.defaultKeyBindings = {};
    }
    initialize() {
      for (const e in this.defaultKeyBindings) this.initializeKeyBinding(e);
    }
    initializeKeyBinding(e) {
      const t = this.getKeyBindingFromStorage(e);
      t.isPresent() ? this.initializeCustomKeyBinding(e, t.get()) : this.defaultKeyBindings.hasOwnProperty(e) && this.initializeDefaultKeyBinding(e);
    }
    initializeDefaultKeyBinding(e) {
      false === this._keyBindings.hasOwnProperty(e) && (this._keyBindings[e] = new ActionTriggers);
      for (const t in this.defaultKeyBindings[e]) this.defaultKeyBindings[e][t].enable(), this.addKeyBinding(this.defaultKeyBindings[e][t]);
    }
    initializeCustomKeyBinding(e, t) {
      false === this._keyBindings.hasOwnProperty(e) && (this._keyBindings[e] = new ActionTriggers);
      const n = [];
      for (const i in t) {
        let r, o = false;
        for (const e in n) {
          let r = 0;
          for (const o in n[e]) n[e][o] === t[i][o] && r++;
          r === t[i].length && (o = true);
        }
        if (o) continue;
        this.defaultKeyBindings[e] && this.defaultKeyBindings[e][0] && (r = this.defaultKeyBindings[e][0]);
        const s = new ActionTrigger_ActionTrigger({action: e, keys: t[i], sendToServer: !!r && r.isSendToServer()});
        n.push(t[i]), this.addKeyBinding(s);
      }
    }
    addKeyBinding(e) {
      e.initialize(), this._keyBindings[e.getAction()].triggers.push(e);
    }
    getKeyBindings(e) {
      return Optional.ofNullable(this._keyBindings[e]);
    }
    removeKeyBinding(e) {
      this._keyBindings.hasOwnProperty(e) && (this._keyBindings[e].forEach(e => e.destroy()), this._keyBindings[e] = new ActionTriggers);
    }
    setKeysForBindings(e, t) {
      this._keyBindings.hasOwnProperty(e) && this._keyBindings[e].forEach(e => e.reSetKeys(t));
    }
    getKeyBindingFromStorage(e) {
      const t = np.storage.getItem(`custom_key_binding_${e}`);
      if (t.length) try {
        return Optional.ofNullable(JSON.parse(t));
      } catch (e) {
        return Optional.empty();
      }
      return Optional.empty();
    }
    saveKeyBindingInStorage(e) {
      const t = [];
      this._keyBindings[e].forEach(e => t.push(e.getKeys())), np.storage.setItem(`custom_key_binding_${e}`, JSON.stringify(t));
    }
    removeKeyBindingsFromStorage(e) {
      np.storage.setItem(`custom_key_binding_${e}`, "");
    }
    reSetToDefault() {
      for (const e in this.defaultKeyBindings) this.removeKeyBindingsFromStorage(e);
      location.reload();
    }
  }
  class Mouse_Mouse {
    constructor() {
      this.wheelDirection = 0, this._position = new vector_Vector2_Vector2, this._gameMouseEventMap = {mousedown: "gameMouseDown", mouseup: "gameMouseUp", mousemove: "gameMouseMove", dblclick: "gameDblClick", wheel: "gameMouseWheel", touchstart: "gameTouchStart", touchend: "gameTouchEnd", touchmove: "gameTouchMove"}, np.window.events.on("mouseup", e => this.onMouseUp(e)), np.window.events.on("mousedown", e => this.onMouseDown(e)), np.window.events.on("mousemove", e => this.onMouseMove(e)), np.window.events.on("dblclick", e => this.onDblClick(e)), np.window.events.on("mousewheel", e => this.onMouseWheel(e)), np.window.events.on("touchstart", e => this.onTouchStart(e)), np.window.events.on("touchend", e => this.onTouchEnd(e)), np.window.events.on("touchmove", e => this.onTouchMove(e));
    }
    onMouseUp(e) {
      this.updateMouse(e);
    }
    onMouseDown(e) {
      this.updateMouse(e);
    }
    onMouseMove(e) {
      this.updateMouse(e);
    }
    onDblClick(e) {
      this.updateMouse(e);
    }
    onMouseWheel(e) {
      const t = e.deltaY || e.detail || e.wheelDelta;
      this.wheelDirection = t < 0 ? -1 : 1, this.type = this.wheelDirection > 0 ? "down" : "up", this.button = ad.MouseWheelScroll, this.trySendGameMouseEvent(e);
    }
    onTouchStart(e) {
      this.updateMouse(e);
    }
    onTouchEnd(e) {
      this.updateMouse(e);
    }
    onTouchMove(e) {
      this.updateMouse(e);
    }
    updateMouse(e) {
      this.originalEvent = e, this.type = e.type, e instanceof MouseEvent ? (this.button = e.button, this.setPosition(new vector_Vector2_Vector2(e.clientX, e.clientY))) : e instanceof TouchEvent && e.targetTouches[0] && this.setPosition(new vector_Vector2_Vector2(e.targetTouches[0].clientX, e.targetTouches[0].clientY)), this.trySendGameMouseEvent(e);
    }
    trySendGameMouseEvent(e) {
      const t = e.target;
      t && t.id === np.canvas.renderer.canvasId && this._gameMouseEventMap.hasOwnProperty(e.type) && np.canvas.events.emit(this._gameMouseEventMap[e.type], e);
    }
    setPosition(e) {
      return this._position.copy(e);
    }
    getPosition() {
      return this._position.clone();
    }
    getPositionFromCenter() {
      return this.getPosition().subtract(np.canvas.center).invertY();
    }
    getPositionRelativePosition(e) {
      return this.getPosition().subtract(e).invertY();
    }
    getWorldPosition() {
      const e = new It(this._position.x / document.documentElement.clientWidth * 2 - 1, -this._position.y / document.documentElement.clientHeight * 2 + 1, 0.5);
      e.unproject(np.canvas.camera.camera).sub(np.canvas.camera.camera.position).normalize();
      const t = -np.canvas.camera.camera.position.z / e.z;
      return vector_Vector3_Vector3.fromThreeVector3(np.canvas.camera.camera.position.clone().add(e.multiplyScalar(t)));
    }
    getWorldPositionRelativeObservableEntity() {
      return np.canvas.camera.attachedEntity.map(e => vector_Vector2_Vector2.fromVector3(this.getWorldPosition().subtract(e.position)));
    }
    getAngle() {
      const e = this.getPositionFromCenter();
      return 0 === e.x && (e.x = 0.00001), 0 === e.y && (e.y = 0.00001), ValueUtils.absAngle(e.angle());
    }
    getAngleRelativePosition(e) {
      return ValueUtils.absAngle(this.getPositionRelativePosition(e).angle());
    }
  }
  class Input_Input extends Module_Module {
    constructor() {
      super(...arguments), this.mouse = new Mouse_Mouse, this.keyBindings = new KeyBindings_KeyBindings, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), this.keyBindings.initialize();
    }
  }
  class ChatColor_ChatColor {
    constructor(e, t) {
      this.color = e, this.style = t, ChatColor_ChatColor.Values[this.getStyleName()] = this;
    }
    getColor() {
      return this.color;
    }
    getStyle() {
      return this.style;
    }
    getStyleName() {
      return "s_" + this.color;
    }
    toString() {
      return ChatColor_ChatColor.Symbol + this.color;
    }
    static translateToHtml(e) {
      e = "<font>" + e;
      for (let t in ChatColor_ChatColor.MCMap) {
        let n = '</font><font style="color: #' + ChatColor_ChatColor.MCMap[t] + ';">';
        e = e.replace(new RegExp(t, "g"), n);
      }
      e += "</font>";
      let t = 0;
      for (let n in ChatColor_ChatColor.MCFMap) for (; e.indexOf(n) >= 0;) "§r" !== n && t++, e = e.replace(n, ChatColor_ChatColor.MCFMap[n]);
      for (let n = 0; n < t; n++) e += ChatColor_ChatColor.MCFMap["§r"];
      return e;
    }
    static isExistsColor(e) {
      for (const t in ChatColor_ChatColor.MCMap) if (e.includes(t)) return true;
      return false;
    }
    static getFirstColor(e) {
      for (const t in ChatColor_ChatColor.MCMap) if (e.includes(t)) return utils_Color_Color.fromHex(ChatColor_ChatColor.MCMap[t]);
    }
    static clearFromColors(e) {
      if (false === ChatColor_ChatColor.isExistsColor(e)) return e;
      for (const t in ChatColor_ChatColor.MCMap) e = StringUtils_StringUtils.replaceAll(e, t, "");
      for (const t in ChatColor_ChatColor.MCFMap) e = StringUtils_StringUtils.replaceAll(e, t, "");
      return e;
    }
    static translatePixiColors(e) {
      let t, n = 0, i = -1;
      for (; (i = e.indexOf(ChatColor_ChatColor.Symbol, n)) >= 0;) {
        n = i + 1;
        const r = e[i + 1], o = ChatColor_ChatColor.Symbol + r, s = "s_" + r;
        let a;
        "0" < r && r < "f" ? (a = t ? "</" + t + "><" + s + ">" : "<" + s + ">", t = s) : r === ChatColor_ChatColor.RESET.getColor() ? (a = t ? "</" + t + ">" : "", a += "</" + ChatColor_ChatColor.BOLD.getStyleName() + ">", a += "</" + ChatColor_ChatColor.UNDERLINE.getStyleName() + ">", a += "</" + ChatColor_ChatColor.STRIKEOUT.getStyleName() + ">", a += "</" + ChatColor_ChatColor.ITALIC.getStyleName() + ">") : a = "<" + s + ">", e = e.replace(o, a);
      }
      return e;
    }
  }
  ChatColor_ChatColor.Values = [], ChatColor_ChatColor.Symbol = "§", ChatColor_ChatColor.BLACK = new ChatColor_ChatColor("0", {fill: "#555555"}), ChatColor_ChatColor.DARK_BLUE = new ChatColor_ChatColor("1", {fill: "#0000AA"}), ChatColor_ChatColor.DARK_GREEN = new ChatColor_ChatColor("2", {fill: "#00AA00"}), ChatColor_ChatColor.DARK_AQUA = new ChatColor_ChatColor("3", {fill: "#00AAAA"}), ChatColor_ChatColor.DARK_RED = new ChatColor_ChatColor("4", {fill: "#AA0000"}), ChatColor_ChatColor.DARK_PURPLE = new ChatColor_ChatColor("5", {fill: "#AA00AA"}), ChatColor_ChatColor.GOLD = new ChatColor_ChatColor("6", {fill: "#FFAA00"}), ChatColor_ChatColor.GRAY = new ChatColor_ChatColor("7", {fill: "#AAAAAA"}), ChatColor_ChatColor.DARK_GRAY = new ChatColor_ChatColor("8", {fill: "#555555"}), ChatColor_ChatColor.BLUE = new ChatColor_ChatColor("9", {fill: "#5555FF"}), ChatColor_ChatColor.GREEN = new ChatColor_ChatColor("a", {fill: "#55FF55"}), ChatColor_ChatColor.AQUA = new ChatColor_ChatColor("b", {fill: "#55FFFF"}), ChatColor_ChatColor.RED = new ChatColor_ChatColor("c", {fill: "#FF5555"}), ChatColor_ChatColor.PURPLE = new ChatColor_ChatColor("d", {fill: "#FF55FF"}), ChatColor_ChatColor.YELLOW = new ChatColor_ChatColor("e", {fill: "#FFFF55"}), ChatColor_ChatColor.WHITE = new ChatColor_ChatColor("f", {fill: "#FFFFFF"}), ChatColor_ChatColor.BOLD = new ChatColor_ChatColor("l", {fontWeight: "900"}), ChatColor_ChatColor.UNDERLINE = new ChatColor_ChatColor("n", {fontStyle: "underline"}), ChatColor_ChatColor.STRIKEOUT = new ChatColor_ChatColor("m", {fontStyle: "strikeout"}), ChatColor_ChatColor.ITALIC = new ChatColor_ChatColor("o", {fontStyle: "italic"}), ChatColor_ChatColor.RESET = new ChatColor_ChatColor("r", {}), ChatColor_ChatColor.MCMap = {"§0": "555555", "§1": "0000AA", "§2": "00AA00", "§3": "00AAAA", "§4": "AA0000", "§5": "AA00AA", "§6": "FFAA00", "§7": "AAAAAA", "§8": "555555", "§9": "5555FF", "§a": "55FF55", "§b": "55FFFF", "§c": "FF5555", "§d": "FF55FF", "§e": "FFFF55", "§f": "FFFFFF"}, ChatColor_ChatColor.MCFMap = {"§k": "", "§l": "<b>", "§m": "<s>", "§n": "<u>", "§o": "<i>", "§r": "</b></s></u></i></font>"};
  class Languages_LanguagesImpl extends Module_Module {
    constructor() {
      super(), this._languagesMap = {en: n(53), ru: n(54)}, this.activeLanguage = "en", this.detectedLanguage = "en", this._serverLangKey = "$lang", this.identifyLanguage();
    }
    initialize() {
      super.initialize();
    }
    mergeLanguage(e, t) {
      undefined === this._languagesMap[e] && (this._languagesMap[e] = {}), Object.assign(this._languagesMap[e], t);
    }
    identifyLanguage() {
      this.detectedLanguage = navigator.language, navigator.language.includes("-") && (this.detectedLanguage = navigator.language.substr(0, navigator.language.indexOf("-"))), this.detectedLanguage.includes("ru") && (this.activeLanguage = "ru");
      const e = UrlUtils_UrlUtils.getParameter("game-language");
      e && (Object.keys(this._languagesMap).includes(e) ? this.activeLanguage = e : console.warn(`Language ${e} no found`));
    }
    set language (e) {
      this.activeLanguage = e;
    }
    getText(e) {
      return this._languagesMap[this.activeLanguage][e] ? this._languagesMap[this.activeLanguage][e] : (console.error("no languages for", e), e);
    }
    parseText(e = "", t, n) {
      if (!e) return e;
      if (!~e.indexOf(this._serverLangKey)) return e;
      const i = e.split(`${this._serverLangKey}.`), r = i.shift(), o = i.join(`${this._serverLangKey}.`);
      let s = "";
      if (o) {
        let e;
        try {
          e = JSON.parse(o);
        } catch (t) {
          e = JSON.parse(ChatColor_ChatColor.clearFromColors(o));
        }
        s = t && t.hasOwnProperty(e.token) ? t[e.token] : this.getText(e.token);
        for (const i in e.params) e.params[i] = this.parseText(e.params[i], t, n);
        if (n) for (const t in e.params) n[t] && (e.params[t] = n[t](e.params[t]));
        s = StringUtils_StringUtils.insertValues(s, e.params);
      }
      return `${r} ${s}`;
    }
    getParameters(e) {
      const [, t] = e.split(`${this._serverLangKey}.`);
      if (t) return JSON.parse(t);
    }
  }
  class LightContainer_LightContainer extends yn {
    constructor() {
      super(...arguments), this.onSetLight = () => {};
    }
    setLight(e) {
      this.removeLight(), this._light = e, this.add(this._light.getLight()), this.onSetLight(e);
    }
    removeLight() {
      this._light && (this.remove(this._light.getLight()), this._light = null);
    }
    getLight() {
      return Optional.ofNullable(this._light);
    }
  }
  class AbstractLights_AbstractLights {
    constructor() {
      this._lightContainers = [], this._blankLightContainer = new LightContainer_LightContainer;
    }
    initialize() {
      this._blankLightContainer.userData.lightContainer = true, this._blankLightContainer.position.setScalar(1e4);
    }
    getLightContainer(e) {
      let t;
      return this._lightContainers.length ? (t = this._lightContainers.pop(), np.canvas.getScene().add(t)) : (t = new LightContainer_LightContainer, this.reSetLightContainer(t)), e && (t.onSetLight = t => e(t)), t;
    }
    returnLightContainer(e) {
      e && (e.getLight().ifPresent(e => e.reSet()), e.removeLight(), e.parent && e.parent.remove(e), this.reSetLightContainer(e), this._lightContainers.push(e));
    }
    reSetLightContainer(e) {
      e.copy(this._blankLightContainer), np.canvas.getScene().add(e);
    }
  }
  class AbstractLight_AbstractLightOptions {
    constructor() {
      this.color = utils_Color_Color.WHITE.clone(), this.distance = 1, this.intensity = 0;
    }
  }
  class AbstractLight_AbstractLight {
    constructor(e) {
      this._options = new AbstractLight_AbstractLightOptions, this.position = new vector_Vector3_Vector3, e && Object.assign(this._options, e), this.position.enableEvents(), this.position.events.on("change", () => this._light.position.copy(this.position.toThreeVector3()));
    }
    onGet() {}
    onReturn() {}
    getLight() {
      return this._light;
    }
    setDistance(e) {
      if (this._options.distance !== e) return this._options.distance = e, this.updateDistance(), this;
    }
    getDistance() {
      return this._options.distance;
    }
    updateDistance() {}
    setColor(e) {
      if (!this._options.color.isEqualTo(e)) return this._options.color.copy(e), this.updateColor(), this;
    }
    getColor() {
      return this._options.color.clone();
    }
    updateColor() {}
    setIntensity(e) {
      if (this._options.intensity !== e) return this._options.intensity = e, this.updateIntensity(), this;
    }
    getIntensity() {
      return this._options.intensity;
    }
    updateIntensity() {}
    reSet() {
      this.setColor(utils_Color_Color.WHITE), this.setDistance(0), this.setIntensity(0);
    }
    update() {
      this.updateDistance(), this.updateColor(), this.updateIntensity();
    }
  }
  class BlendingLight_BlendingLightOptions extends AbstractLight_AbstractLightOptions {
    constructor() {
      super(...arguments), this.textureUrl = "";
    }
  }
  class BlendingLight_BlendingLight extends AbstractLight_AbstractLight {
    constructor(e) {
      super(e), this._options = new BlendingLight_BlendingLightOptions, e && Object.assign(this._options, e), this._material = new ui, this._material.transparent = true, this._light = new Yi(np.cacheKeeper.get(kr), this._material), this.reSet(), np.textures.getTexture(this._options.textureUrl).then(e => {
        this._material.map = e, this._material.needsUpdate = true, this.enableCustomBlending();
      });
    }
    enableCustomBlending() {
      this._material.blendDst = L, this._material.blendSrc = z, this._material.blending = q;
    }
    disableCustomBlending() {
      this._material.blendDst = 205, this._material.blendSrc = 204, this._material.blending = 1;
    }
    isDisabledCustomBlending() {
      return 1 !== this._material.blending;
    }
    setPremultiplyAlpha(e) {
      this._material.map.premultiplyAlpha = e, this._material.map.needsUpdate = true, this._material.needsUpdate = true;
    }
    startBlending() {
      this._material.blendDst = 200, this._material.blendSrc = 200, this._material.blending = q;
    }
    nextBlending() {
      this._material.blendSrc++, 211 === this._material.blendSrc && (this._material.blendSrc = 200, this._material.blendDst++, 210 === this._material.blendDst && (this._material.blendDst = 200)), console.log(`dst = ${this._material.blendDst}, src = ${this._material.blendSrc}, pre = ${this._material.map.premultiplyAlpha}`);
    }
    updateDistance() {
      if (super.updateDistance(), this._light.parent) {
        const e = this._light.parent.getWorldScale(new It), t = vector_Vector3_Vector3.fromScalar(1).divide(vector_Vector3_Vector3.fromThreeVector3(e)).multiplyScalar(2 * Math.max(1, this.getDistance()));
        this._light.scale.copy(t.toThreeVector3());
      }
    }
    updateColor() {
      super.updateColor(), this._material.color.copy(this.getColor().toThreeColor());
    }
    updateIntensity() {
      super.updateIntensity(), this._material.opacity = this.getIntensity() * (1 - np.light.sunLight.getIntensity()), np.light.sunLight.getIntensity() > 0.2 && false === this.isDisabledCustomBlending() ? (this.disableCustomBlending(), this._material.visible = false) : np.light.sunLight.getIntensity() <= 0.2 && this.isDisabledCustomBlending() && (this.enableCustomBlending(), this._material.visible = true);
    }
    onGet() {
      this.startUpdating();
    }
    onReturn() {
      this.stopUpdating();
    }
    startUpdating() {
      this._updateDistanceTimerUuid || (this._updateDistanceTimerUuid = np.ticker.addToTicker({func: () => this.tickUpdate(), tps: 1, frameDependency: true}));
    }
    stopUpdating() {
      this._updateDistanceTimerUuid && (np.ticker.removeFromTicker(this._updateDistanceTimerUuid), this._updateDistanceTimerUuid = null);
    }
    tickUpdate() {
      this.updateDistance(), this.updateIntensity();
    }
  }
  class BlendingLights_BlendingLights extends AbstractLights_AbstractLights {
    constructor() {
      super(...arguments), this._lights = [];
    }
    getLight() {
      let e;
      return (e = this._lights.length ? this._lights.pop() : this.createLight()).onGet(), e;
    }
    createLight() {
      return new BlendingLight_BlendingLight({textureUrl: "effects/light.png"});
    }
    returnLight(e) {
      this._lights.push(e), e.onReturn();
    }
    getLightContainer(e) {
      return super.getLightContainer(e);
    }
    returnLightContainer(e) {
      e && e.getLight().ifPresent(e => this.returnLight(e)), super.returnLightContainer(e);
    }
  }
  class SelectionObjectsHelper_SelectionObjectsHelper {
    constructor(e, t) {
      this.recursively = false, this.collection = [], this.frustum = e, this.container = t;
    }
    select() {
      return this.collection = [], this.searchChildInFrustum(this.container), this.collection;
    }
    searchChildInFrustum(e, t = 0) {
      if (this.recursively || 0 === t) for (const n in e.children) this.searchChildInFrustum(e.children[n], t + 1);
      if (e instanceof yn) {
        const t = e.getWorldPosition(new It);
        if (this.frustum.containsPoint(t)) {
          if (this.findUserData) for (const t in this.findUserData) if (e.userData[t] !== this.findUserData[t]) return;
          this.collection.push(e);
        }
      }
    }
  }
  class PointLight_PointLightOptions extends AbstractLight_AbstractLightOptions {}
  class light_PointLight_PointLight extends AbstractLight_AbstractLight {
    constructor(e) {
      super(e), this._options = new PointLight_PointLightOptions, e && Object.assign(this._options, e), this._light = new $c(16777215, 0), this.reSet();
    }
    reSet() {
      super.reSet(), this._light.castShadow = false, this._light.shadow.mapSize.width = 256, this._light.shadow.mapSize.height = 256;
    }
    updateDistance() {
      super.updateDistance(), this._light.distance = this.getDistance();
    }
    updateColor() {
      super.updateColor(), this._light.color.copy(this.getColor().toThreeColor());
    }
    updateIntensity() {
      super.updateIntensity(), this._light.intensity = this.getIntensity();
    }
  }
  class PointLights_PointLights extends AbstractLights_AbstractLights {
    constructor() {
      super(...arguments), this._pointLights = [], this._pointLightCount = 10;
    }
    initialize() {
      super.initialize(), np.settings.graphics.getOptions().pointLights && this.initializePointLights();
    }
    initializePointLights() {
      this._selectionBox = new SelectionObjectsHelper_SelectionObjectsHelper(np.canvas.camera.frustum, np.canvas.getScene()), this._selectionBox.recursively = false, this._selectionBox.findUserData = {lightContainer: true}, this.createPointLights(), this._pointLightTimer = np.canvas.setIntervalFrames(() => this.setLightsToContainersNearCamera(), 30);
    }
    createPointLights() {
      for (let e = 0; e < this._pointLightCount; e++) {
        const e = new light_PointLight_PointLight;
        this.reSetLight(e), this._pointLights.push(e);
      }
    }
    reSetLight(e) {
      e.reSet(), np.canvas.getScene().add(e.getLight());
    }
    getLightContainer(e) {
      return super.getLightContainer(e);
    }
    returnLightContainer(e) {
      e && e.getLight().ifPresent(e => this.reSetLight(e)), super.returnLightContainer(e);
    }
    getPointLight() {
      return Optional.ofNullable(this._pointLights.pop());
    }
    returnPointLight(e) {
      e && (this.reSetLight(e), this._pointLights.push(e));
    }
    setLightsToContainersNearCamera() {
      let e = this._selectionBox.select();
      const t = [];
      for (; e.length && t.length < this._pointLightCount;) {
        let n = parseInt(Object.keys(e)[0]), i = e[n], r = i.position.clone().sub(np.canvas.camera.camera.position).length();
        for (let t in e) {
          const o = e[t], s = o.position.clone().sub(np.canvas.camera.camera.position).length();
          s < r && (i = o, r = s, n = parseInt(t));
        }
        t.push(i), e.splice(n, 1);
      }
      for (let e = 0; e < this._pointLightCount; e++) this._pointLights[e] && (t[e] ? (t[e].add(this._pointLights[e].getLight()), this._pointLights[e].reSet(), t[e].onSetLight(this._pointLights[e])) : this.reSetLight(this._pointLights[e]));
    }
  }
  class MillisHelper {
    static fromMonth(e) {
      return MillisHelper.fromDay(31 * e);
    }
    static fromDay(e) {
      return MillisHelper.fromHour(24 * e);
    }
    static fromHour(e) {
      return MillisHelper.fromMinute(60 * e);
    }
    static fromMinute(e) {
      return MillisHelper.fromSecond(60 * e);
    }
    static fromSecond(e) {
      return 1e3 * e;
    }
    static tpsToMs(e) {
      return 1e3 / e;
    }
    static tpsToSeconds(e) {
      return 1 / e;
    }
    static msToTps(e) {
      return 1e3 / e;
    }
    static secondsToTps(e) {
      return 1 / e;
    }
  }
  class SunLight_SunLight {
    constructor() {
      this._maxAmbientScalarColor = 0.7, this._minAmbientScalarColor = 0.1, this._directionLightOffset = new vector_Vector3_Vector3(0, 2e3, 0), this._directionalLightCameraOffset = 700, this._directionalLightShadowBias = -0.00003, this._directionalLightShadowResolution = 1024, this.radius = 5e3, this._currentTimeMs = 0, this._newTimeMs = 0, this._startDayMs = MillisHelper.fromHour(4), this._endDayMs = MillisHelper.fromHour(22), this._fullDayMs = MillisHelper.fromHour(24), this._progress = 0, this._isDay = true, this._dayPassedForEndIncreaseIntensity = 0.3, this._dayPassedForBeginDecreaseIntensity = 0.5, this._dayLightIntensityMultiplier = 0.7, this._nightLightIntensity = 0.13, this.moon = true, this._darkNightIntensity = 0.3, this.canSetTime = true;
    }
    initialize() {
      np.settings.graphics.getOptions().light ? (this.initializeAmbientLight(), this.initializeDirectionalLight()) : this.initializeDark(), this.setListeners();
    }
    initializeDark() {
      this._dark = new SkinSimple_SkinSimple({cachedGeometry: kr, color: utils_Color_Color.BLACK, opacities: [0], scale: new vector_Vector3_Vector3(document.documentElement.clientWidth, document.documentElement.clientHeight, 1)}), this._dark.initialize(), np.canvas.getSceneHud().add(this._dark.getObject3d());
    }
    initializeAmbientLight() {
      this._ambientLight = new Jc(11184810), np.canvas.getScene().add(this._ambientLight);
    }
    initializeDirectionalLight() {
      this._directionalLight = new Yc(16777215, 1), this._directionalLight.castShadow = np.settings.graphics.getOptions().shadows, np.canvas.getScene().add(this._directionalLight.target), this.setDirectionalLightShadowResolution(this._directionalLightShadowResolution), this.setUpDirectionalShadowCamera(), this._directionalLight.shadow.bias = this._directionalLightShadowBias, this.updateDirectionLightPosition(), np.canvas.getScene().add(this._directionalLight);
    }
    setDirectionalLightShadowResolution(e) {
      this._directionalLight.shadow.mapSize.width = e, this._directionalLight.shadow.mapSize.height = e;
    }
    setUpDirectionalShadowCamera() {
      this._directionalLight.shadow.camera.near = np.canvas.camera.camera.near, this._directionalLight.shadow.camera.far = np.canvas.camera.camera.far, this.setDirectionalLightCameraOffset(this._directionalLightCameraOffset);
    }
    setDirectionalLightCameraOffset(e) {
      this._directionalLight.shadow.camera.right !== e && (this._directionalLight.shadow.camera.left = -e, this._directionalLight.shadow.camera.right = e, this._directionalLight.shadow.camera.top = e, this._directionalLight.shadow.camera.bottom = -e, this._directionalLight.shadow.camera.updateProjectionMatrix());
    }
    setListeners() {
      np.canvas.events.on("canvasDrawBegin", () => this.onCanvasDrawBegin()), np.window.events.on("resize", () => this.onResize());
    }
    onCanvasDrawBegin() {
      this.updateDirectionLightPosition();
    }
    onResize() {
      this._dark && this._dark.getObject3d().scale.set(document.documentElement.clientWidth, document.documentElement.clientHeight, 1);
    }
    updateDirectionLightPosition() {
      if (this._directionalLight) {
        const e = new vector_Vector3_Vector3;
        np.canvas.camera.attachedEntity.isPresent() && e.copy(np.canvas.camera.attachedEntity.get().position), this._directionalLight.position.y = e.y + this._directionLightOffset.y, this._directionalLight.target.position.copy(e.toThreeVector3()), this._directionalLight.shadow.camera.lookAt(e.toThreeVector3());
      }
      this.update();
    }
    setTime(e, t = MillisHelper.fromHour(4), n = MillisHelper.fromHour(22), i = MillisHelper.fromHour(24), r = 0.3, o = 0.5) {
      false !== this.canSetTime && (this._newTimeMs = e, this._startDayMs = t, this._endDayMs = n, this._fullDayMs = i, this._dayPassedForEndIncreaseIntensity = r, this._dayPassedForBeginDecreaseIntensity = o, this.update());
    }
    setProgress(e, t) {
      t ? this._newTimeMs = this._startDayMs + e * this.getDayLengthMs() : (this._newTimeMs = this._endDayMs + e * this.getNightLengthMs(), this._newTimeMs = this._newTimeMs >= this._fullDayMs ? this._newTimeMs - this._fullDayMs : this._newTimeMs), this.update();
    }
    getDayLengthMs() {
      return this._endDayMs - this._startDayMs;
    }
    getNightLengthMs() {
      return this._fullDayMs - this.getDayLengthMs();
    }
    update(e = 12) {
      if (false === ValueUtils.isNumberChanged(this._currentTimeMs, this._newTimeMs)) return false;
      0 === this._newTimeMs ? this._currentTimeMs = 0 : this._currentTimeMs = ValueUtils.smoothValue(this._newTimeMs, this._currentTimeMs, e);
      const t = this.getPassedTime(this._currentTimeMs, this._startDayMs, this._endDayMs, this._fullDayMs);
      return this._progress = t.passedTime, this._isDay = t.isDay, this.updatePosition(), this.updateIntensity(), true;
    }
    getPassedTime(e, t = MillisHelper.fromHour(4), n = MillisHelper.fromHour(22), i = MillisHelper.fromHour(24)) {
      if ((e = ValueUtils.limit(e, 0, i)) >= t && e <= n) {
        return {passedTime: (e - t) / this.getDayLengthMs(), isDay: true};
      }
      return e < t && (e += i), {passedTime: (e - n) / this.getNightLengthMs(), isDay: false};
    }
    updatePosition() {
      if (!this._directionalLight) return;
      const e = Math.PI * this._progress;
      this._directionalLight.position.x = this.radius * Math.cos(e), this._directionalLight.position.z = this.radius * Math.sin(e);
    }
    updateIntensity() {
      if (this._isDay) {
        let e = 1;
        this._progress <= this._dayPassedForEndIncreaseIntensity ? e = this._progress / this._dayPassedForEndIncreaseIntensity : this._progress >= this._dayPassedForBeginDecreaseIntensity && (e = 1 - (this._progress / this._dayPassedForBeginDecreaseIntensity - 1)), this._directionalLight ? (this._directionalLight.intensity = ValueUtils.limit(e * this._dayLightIntensityMultiplier, this._nightLightIntensity, 1), this._ambientLight.color.setScalar(ValueUtils.limit(this._directionalLight.intensity * this._maxAmbientScalarColor, this._minAmbientScalarColor, this._maxAmbientScalarColor))) : this._dark && this._dark.setOpacity(1 - ValueUtils.limit(e, this._darkNightIntensity, 1));
      } else this.moon && this._directionalLight ? (this._directionalLight.intensity = this._nightLightIntensity, this._ambientLight.color.setScalar(this._minAmbientScalarColor)) : this._directionalLight ? (this._directionalLight.intensity = 0, this._ambientLight.color.setScalar(this._minAmbientScalarColor)) : this._dark && this._dark.setOpacity(1 - this._darkNightIntensity);
    }
    getIntensity() {
      return this._directionalLight.intensity;
    }
  }
  class Light_LightModule extends Module_Module {
    constructor() {
      super(...arguments), this.sunLight = new SunLight_SunLight, this.pointLights = new PointLights_PointLights, this.blendingLights = new BlendingLights_BlendingLights;
    }
    initialize() {
      super.initialize(), this.sunLight.initialize(), this.pointLights.initialize(), this.blendingLights.initialize();
    }
    getSmartLightContainer(e) {
      return np.settings.graphics.getOptions().pointLights ? this.pointLights.getLightContainer(e) : this.blendingLights.getLightContainer(e);
    }
    returnSmartLightContainer(e) {
      np.settings.graphics.getOptions().pointLights ? this.pointLights.returnLightContainer(e) : this.blendingLights.returnLightContainer(e);
    }
  }
  class ParticleOptions_ParticleOptions {
    constructor() {
      this.cachedGeometry = kr, this.texture = "", this.animateTiles = vector_Vector2_Vector2.ZERO.clone(), this.animateEveryFrame = 1, this.animateLoop = false, this.animateInverse = false, this.animateEndToDead = true, this.rotationZ = 0, this.rotationZSpeed = 0, this.opacity = 1, this.transparent = false, this.opacitySpeedToDead = 0, this.sizeSpeedToDead = 0, this.framesToDead = 0, this.color = utils_Color_Color.WHITE.clone(), this.velocity = new vector_Vector3_Vector3, this.size = new vector_Vector3_Vector3(10, 10, 10), this.spawnAroundRadius = 0, this.spawnTimeoutFrames = 0, this.position = new vector_Vector3_Vector3(0, 0, 0), this.offset = new vector_Vector3_Vector3(0, 0, 0), this.gravity2dAngle = 0, this.gravity = new vector_Vector3_Vector3, this.container = np.canvas.getWorldObject(), this.alwaysDisplayed = false, this.attachedToEntityUuid = "", this.attachedToEntityUuidSmooth = 1, this.receiveLight = false, this.poolLimit = 10, this.poolName = "";
    }
  }
  class EntityParticle_EntityParticle extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this._childrenSpawnIntervalUuids = [], this.cacheable = true;
    }
    setProperties(e) {
      this.options = new ParticleOptions_ParticleOptions, e && Object.assign(this.options, e);
    }
    onSpawn() {
      if (this.alwaysDisplayed = this.options.alwaysDisplayed, this.skin.setOpacity(this.options.opacity), this.skin.setColor(this.options.color), this.skin.setRenderOrder(this.options.renderOrder), this.size.copy(this.options.size), this.position.copy(this.options.position), this.position.add(this.options.offset), this.options.spawnAroundRadius && (this.position.x += Randomize_Randomize.getRandomInt(-this.options.spawnAroundRadius, this.options.spawnAroundRadius), this.position.y += Randomize_Randomize.getRandomInt(-this.options.spawnAroundRadius, this.options.spawnAroundRadius)), this.rotation.z = this.options.rotationZ, this.updatePosition(), super.onSpawn(), false === this.options.animateTiles.isZero()) {
        this.skin.startAnimation();
      }
      this.options.framesToDead && (this._timeoutFramesToDead = np.canvas.setTimeoutFrames(() => this.remove(), this.options.framesToDead));
      for (const e in this.options.children) {
        const t = this.options.children[e];
        this.spawnChild(t), this._childrenSpawnIntervalUuids[e] = np.canvas.setIntervalFrames(() => this.spawnChild(t), t.spawnEveryFrame);
      }
    }
    spawnChild(e) {
      this.displayed ? np.particles.spawn(EntityParticle_EntityParticle, e.getOptions(this)) : this.clearSpawnIntervalsForChildren();
    }
    createSkin() {
      let e;
      const t = {geometry: this.options.geometry, cachedGeometry: this.options.cachedGeometry, color: this.options.color, receiveLight: this.options.receiveLight, transparent: this.options.transparent, renderOrder: this.options.renderOrder};
      return this.options.texture ? (t.textureUrls = [this.options.texture], false === this.options.animateTiles.isZero() ? (t.tiles = this.options.animateTiles.clone(), t.speed = this.options.animateEveryFrame, t.loop = this.options.animateLoop, t.inverse = this.options.animateInverse, t.everyFrame = this.options.animateEveryFrame, e = new SkinAnimatedSprite_SkinAnimatedSprite(t)) : e = new SkinSimple_SkinSimple(t)) : e = new SkinSimple_SkinSimple(t), e;
    }
    draw() {
      if (super.draw(), this.updatePosition(), this.rotation.z += this.options.rotationZSpeed, this.skin.getOpacity() > 0) {
        if (this.skin.setOpacity(this.skin.getOpacity() - this.options.opacitySpeedToDead), this.options.sizeSpeedToDead) {
          if (!(this.size.x > 1 && this.size.y > 1)) return void this.remove();
          {
            const e = Math.max(this.size.x - this.options.sizeSpeedToDead, 1), t = Math.max(this.size.y - this.options.sizeSpeedToDead, 1);
            this.size.x = e, this.size.y = t;
          }
        }
        if (false === this.options.animateTiles.isZero()) {
          const e = this.skin;
          if (this.options.animateEndToDead && e.animator && e.animator.isLastFrame()) return e.stopAnimation(), void this.remove();
        }
        if (this.options.funcToDead && this.options.funcToDead()) this.remove(); else {
          if (this.options.gravity2dAngle) {
            const e = vector_Vector2_Vector2.fromVector3(this.options.velocity), t = e.angle();
            Math.cos(t) < 0 ? e.rotate(this.options.gravity2dAngle) : e.rotate(-this.options.gravity2dAngle), this.rotation.z = e.angle() - Math.PI / 2;
          }
          np.drawer.addOnce(this);
        }
      } else this.remove();
    }
    updatePosition() {
      this.options.attachedToEntityUuid ? np.entities.getEntity(this.options.attachedToEntityUuid).ifPresent(e => {
        this.position.x = ValueUtils.smoothValue(e.position.x, this.position.x, this.options.attachedToEntityUuidSmooth), this.position.y = ValueUtils.smoothValue(e.position.y, this.position.y, this.options.attachedToEntityUuidSmooth), this.position.z = ValueUtils.smoothValue(e.position.z, this.position.z, this.options.attachedToEntityUuidSmooth), this.position.add(this.options.offset);
      }) : this.options.funcSetPosition ? this.options.funcSetPosition(this) : this.position.add(this.options.velocity.add(this.options.gravity));
    }
    addToScene() {
      this.skin && this.options.container.add(this.skin.getObject3d());
    }
    removeFromScene() {
      this.skin && this.options.container.remove(this.skin.getObject3d());
    }
    remove() {
      return this._timeoutFramesToDead && np.canvas.clearTimeoutFrames(this._timeoutFramesToDead), this.clearSpawnIntervalsForChildren(), super.remove();
    }
    clearSpawnIntervalsForChildren() {
      this._childrenSpawnIntervalUuids.forEach(e => np.canvas.clearIntervalFrames(e));
    }
    canHaveAbilities() {
      return false;
    }
    onAddedToCache() {
      if (super.onAddedToCache(), false === this.options.animateTiles.isZero()) {
        const e = this.skin;
        e.animator && e.animator.reset();
      }
    }
    getCacheKey(e) {
      let t;
      if (e && e.properties) t = e.properties; else {
        if (!this.options) return super.getCacheKey(e);
        t = this.options;
      }
      const n = "EntityParticle";
      return t.poolName ? `${n}_${t.poolName}` : t.texture ? `${n}_${t.texture}` : t.color ? `${n}_${t._color.getHex()}` : super.getCacheKey(e);
    }
  }
  class ParticlesModule_ParticlesModule extends Module_Module {
    constructor() {
      super(...arguments), this._particlePools = {}, this._particlePoolsUuids = {}, this._defaultPoolLimit = 50;
    }
    spawn(e, t) {
      if (!(t.spawnTimeoutFrames > 0)) return this.spawnParticle(t, e);
      np.canvas.setTimeoutFrames(() => this.spawnParticle(t, e), t.spawnTimeoutFrames);
    }
    spawnParticle(e, t) {
      const n = (new EntityParticle_EntityParticle).getCacheKey({properties: e});
      undefined === this._particlePools[n] && (this._particlePools[n] = new LinkedList_LinkedList, this._particlePoolsUuids[n] = {});
      let i = this._defaultPoolLimit;
      if (ValueUtils.isNotUndefinedAndNotNull(e.poolLimit) && (i = e.poolLimit), i > 0 && this._particlePools[n].getSize() >= i) {
        const e = this._particlePools[n].removeFirst().getData();
        delete this._particlePoolsUuids[n][e.uuid], e.remove();
      }
      const r = np.spawner.spawnEntity(t, {cacheKey: n, properties: e});
      return false === this._particlePoolsUuids[n].hasOwnProperty(r.uuid) && (this._particlePools[n].insert(r), this._particlePoolsUuids[n][r.uuid] = null), r;
    }
    killAll() {
      for (const e in this._particlePools) this._particlePools[e].forEach(t => {
        const n = t.getData();
        n.remove() && (delete this._particlePoolsUuids[e][n.uuid], this._particlePools[e].removeNode(t.getData()));
      });
    }
  }
  const ld = '{"glyphs":{"0":{"ha":794,"x_min":69,"x_max":725,"o":"m 725 497 q 644 113 725 240 q 396 -14 563 -14 q 153 116 236 -14 q 69 497 69 246 q 150 882 69 756 q 396 1007 231 1007 q 641 876 557 1007 q 725 497 725 745 m 183 497 q 234 182 183 281 q 396 83 285 83 q 559 183 509 83 q 610 497 610 283 q 559 810 610 711 q 396 909 509 909 q 234 811 285 909 q 183 497 183 713 z "},"1":{"ha":794,"x_min":127,"x_max":485,"o":"m 485 0 l 375 0 l 375 707 q 380 873 375 795 q 349 844 366 859 q 187 711 331 828 l 127 789 l 390 991 l 485 991 l 485 0 z "},"2":{"ha":794,"x_min":68,"x_max":720,"o":"m 720 0 l 68 0 l 68 97 l 329 359 q 486 532 448 480 q 543 632 524 583 q 562 737 562 681 q 514 863 562 817 q 380 909 466 909 q 263 889 319 909 q 140 815 208 869 l 81 892 q 379 1006 218 1006 q 598 934 519 1006 q 677 742 677 863 q 625 555 677 648 q 427 322 572 463 l 210 110 l 210 104 l 720 104 l 720 0 z "},"3":{"ha":794,"x_min":64,"x_max":713,"o":"m 682 758 q 629 603 682 663 q 478 522 576 543 l 478 517 q 655 441 597 502 q 713 281 713 380 q 614 63 713 139 q 335 -14 516 -14 q 191 -2 256 -14 q 64 40 125 10 l 64 147 q 201 99 128 115 q 339 82 274 82 q 596 283 596 82 q 313 464 596 464 l 215 464 l 215 561 l 314 561 q 498 612 430 561 q 566 754 566 663 q 516 868 566 827 q 380 909 466 909 q 258 892 315 909 q 126 827 200 874 l 69 903 q 210 978 130 951 q 378 1006 290 1006 q 602 940 522 1006 q 682 758 682 873 z "},"4":{"ha":794,"x_min":29,"x_max":766,"o":"m 766 228 l 619 228 l 619 0 l 511 0 l 511 228 l 29 228 l 29 326 l 500 997 l 619 997 l 619 330 l 766 330 l 766 228 m 511 330 l 511 660 q 518 879 511 757 l 513 879 q 452 771 480 814 l 142 330 l 511 330 z "},"5":{"ha":794,"x_min":90,"x_max":714,"o":"m 378 606 q 624 528 534 606 q 714 315 714 450 q 616 74 714 161 q 346 -14 518 -14 q 90 40 178 -14 l 90 149 q 208 101 138 118 q 347 83 279 83 q 533 140 467 83 q 599 302 599 196 q 345 510 599 510 q 172 490 280 510 l 114 528 l 151 991 l 644 991 l 644 888 l 248 888 l 222 590 q 378 606 300 606 z "},"6":{"ha":794,"x_min":79,"x_max":726,"o":"m 79 424 q 193 861 79 716 q 529 1006 307 1006 q 650 993 606 1006 l 650 896 q 530 913 597 913 q 287 813 371 913 q 195 501 203 714 l 203 501 q 439 618 277 618 q 649 537 572 618 q 726 318 726 456 q 642 75 726 163 q 414 -14 557 -14 q 170 102 260 -14 q 79 424 79 218 m 412 82 q 562 143 509 82 q 615 318 615 203 q 566 473 615 416 q 418 529 516 529 q 306 504 357 529 q 225 435 255 479 q 195 343 195 391 q 222 213 195 273 q 299 117 249 153 q 412 82 349 82 z "},"7":{"ha":794,"x_min":64,"x_max":724,"o":"m 193 0 l 604 888 l 64 888 l 64 991 l 724 991 l 724 901 l 318 0 l 193 0 z "},"8":{"ha":794,"x_min":71,"x_max":722,"o":"m 396 1006 q 611 943 532 1006 q 690 768 690 880 q 645 635 690 695 q 500 525 600 574 q 671 404 621 467 q 722 257 722 340 q 636 60 722 134 q 400 -14 550 -14 q 156 56 241 -14 q 71 253 71 125 q 278 518 71 423 q 144 632 184 571 q 103 770 103 694 q 183 942 103 878 q 396 1006 262 1006 m 182 250 q 238 123 182 169 q 397 78 295 78 q 555 125 498 78 q 611 256 611 173 q 558 373 611 321 q 374 472 505 424 q 227 376 273 429 q 182 250 182 323 m 395 914 q 262 873 310 914 q 214 765 214 833 q 254 658 214 703 q 401 568 294 613 q 539 656 498 609 q 579 765 579 703 q 530 874 579 833 q 395 914 481 914 z "},"9":{"ha":794,"x_min":72,"x_max":720,"o":"m 720 568 q 269 -14 720 -14 q 144 0 191 -14 l 144 97 q 268 79 199 79 q 514 180 431 79 q 604 489 597 281 l 596 489 q 497 403 559 433 q 358 374 435 374 q 149 452 227 374 q 72 672 72 531 q 158 916 72 827 q 386 1006 245 1006 q 563 954 487 1006 q 679 803 638 902 q 720 568 720 703 m 386 909 q 236 847 289 909 q 183 673 183 785 q 232 520 183 576 q 380 464 281 464 q 494 489 442 464 q 576 557 546 514 q 606 648 606 601 q 578 780 606 720 q 500 875 550 840 q 386 909 450 909 z "}," ":{"ha":361,"x_min":0,"x_max":0,"o":""},"!":{"ha":371,"x_min":103,"x_max":267,"o":"m 221 273 l 150 273 l 115 991 l 256 991 l 221 273 m 103 72 q 184 164 103 164 q 245 140 224 164 q 267 72 267 117 q 245 4 267 28 q 184 -20 223 -20 q 126 2 149 -20 q 103 72 103 23 z "},"\\"":{"ha":557,"x_min":90,"x_max":467,"o":"m 216 991 l 189 633 l 118 633 l 90 991 l 216 991 m 467 991 l 439 633 l 368 633 l 340 991 l 467 991 z "},"#":{"ha":897,"x_min":35,"x_max":861,"o":"m 665 610 l 621 379 l 812 379 l 812 292 l 604 292 l 547 0 l 454 0 l 511 292 l 306 292 l 250 0 l 158 0 l 212 292 l 35 292 l 35 379 l 229 379 l 275 610 l 87 610 l 87 696 l 290 696 l 346 991 l 440 991 l 385 696 l 591 696 l 648 991 l 739 991 l 682 696 l 861 696 l 861 610 l 665 610 m 322 379 l 528 379 l 572 610 l 367 610 l 322 379 z "},"$":{"ha":794,"x_min":89,"x_max":703,"o":"m 703 304 q 633 152 703 212 q 440 77 564 92 l 440 -81 l 353 -81 l 353 71 q 205 82 277 71 q 89 115 134 94 l 89 221 q 219 180 145 196 q 353 164 292 164 l 353 463 q 158 565 214 507 q 102 715 102 623 q 171 861 102 804 q 353 930 239 918 l 353 1054 l 440 1054 l 440 932 q 681 882 565 928 l 646 793 q 440 840 545 833 l 440 546 q 600 480 547 512 q 677 406 652 448 q 703 304 703 364 m 587 296 q 557 375 587 345 q 440 435 527 405 l 440 171 q 587 296 587 191 m 216 717 q 247 634 216 665 q 353 575 277 603 l 353 838 q 251 795 286 827 q 216 717 216 764 z "},"%":{"ha":1143,"x_min":71,"x_max":1072,"o":"m 164 696 q 189 523 164 581 q 271 465 214 465 q 382 696 382 465 q 271 925 382 925 q 189 868 214 925 q 164 696 164 811 m 475 696 q 423 462 475 541 q 271 383 371 383 q 123 464 176 383 q 71 696 71 545 q 121 928 71 850 q 271 1006 172 1006 q 422 925 369 1006 q 475 696 475 844 m 761 298 q 786 125 761 182 q 868 68 811 68 q 952 124 925 68 q 979 298 979 181 q 952 470 979 414 q 868 526 925 526 q 786 470 811 526 q 761 298 761 414 m 1072 298 q 1020 65 1072 144 q 868 -14 968 -14 q 720 67 772 -14 q 668 298 668 148 q 719 530 668 452 q 868 608 769 608 q 1018 529 964 608 q 1072 298 1072 449 m 897 991 l 347 0 l 248 0 l 798 991 l 897 991 z "},"&":{"ha":1014,"x_min":77,"x_max":1011,"o":"m 281 794 q 305 705 281 747 q 389 603 330 663 q 510 697 476 654 q 545 796 545 740 q 510 881 545 848 q 416 914 475 914 q 318 882 356 914 q 281 794 281 849 m 386 87 q 657 192 549 87 l 361 479 q 254 403 286 433 q 208 338 223 373 q 193 260 193 304 q 246 134 193 180 q 386 87 298 87 m 77 257 q 124 413 77 345 q 293 550 171 481 q 215 648 235 614 q 182 717 194 681 q 170 791 170 753 q 236 950 170 893 q 421 1007 302 1007 q 594 950 531 1007 q 657 793 657 894 q 611 659 657 720 q 458 534 565 597 l 734 269 q 795 368 772 311 q 833 492 818 425 l 947 492 q 808 197 901 298 l 1011 0 l 856 0 l 730 121 q 568 18 650 49 q 383 -14 485 -14 q 157 58 237 -14 q 77 257 77 130 z "},"\'":{"ha":307,"x_min":90,"x_max":216,"o":"m 216 991 l 189 633 l 118 633 l 90 991 l 216 991 z "},"(":{"ha":411,"x_min":56,"x_max":370,"o":"m 56 380 q 108 717 56 560 q 260 991 161 873 l 370 991 q 223 704 272 861 q 174 382 174 547 q 224 64 174 219 q 368 -220 274 -92 l 260 -220 q 108 50 160 -104 q 56 380 56 203 z "},")":{"ha":411,"x_min":41,"x_max":355,"o":"m 355 380 q 303 48 355 202 q 151 -220 250 -106 l 43 -220 q 187 63 137 -92 q 237 382 237 219 q 188 704 237 547 q 41 991 139 861 l 151 991 q 303 716 251 873 q 355 380 355 559 z "},"*":{"ha":766,"x_min":58,"x_max":704,"o":"m 446 1055 l 416 787 l 686 863 l 704 739 l 446 718 l 614 497 l 497 433 l 378 679 l 269 433 l 150 497 l 314 718 l 58 739 l 78 863 l 343 787 l 314 1055 l 446 1055 z "},"+":{"ha":794,"x_min":71,"x_max":722,"o":"m 443 536 l 722 536 l 722 443 l 443 443 l 443 154 l 349 154 l 349 443 l 71 443 l 71 536 l 349 536 l 349 827 l 443 827 l 443 536 z "},",":{"ha":340,"x_min":43,"x_max":248,"o":"m 237 161 l 248 146 q 197 -12 230 78 q 127 -179 163 -102 l 43 -179 q 83 -5 61 -109 q 114 161 105 99 l 237 161 z "},"-":{"ha":447,"x_min":57,"x_max":390,"o":"m 57 321 l 57 424 l 390 424 l 390 321 l 57 321 z "},".":{"ha":370,"x_min":103,"x_max":267,"o":"m 103 72 q 124 141 103 117 q 183 164 144 164 q 244 141 222 164 q 267 72 267 117 q 244 4 267 28 q 183 -20 222 -20 q 126 2 149 -20 q 103 72 103 23 z "},"/":{"ha":510,"x_min":14,"x_max":496,"o":"m 496 991 l 126 0 l 14 0 l 383 991 l 496 991 z "},":":{"ha":370,"x_min":103,"x_max":267,"o":"m 103 72 q 124 141 103 117 q 183 164 144 164 q 244 141 222 164 q 267 72 267 117 q 244 4 267 28 q 183 -20 222 -20 q 126 2 149 -20 q 103 72 103 23 m 103 671 q 183 762 103 762 q 267 671 267 762 q 244 603 267 627 q 183 579 222 579 q 126 601 149 579 q 103 671 103 622 z "},";":{"ha":370,"x_min":43,"x_max":264,"o":"m 237 161 l 248 146 q 197 -12 230 78 q 127 -179 163 -102 l 43 -179 q 83 -5 61 -109 q 114 161 105 99 l 237 161 m 100 671 q 180 762 100 762 q 264 671 264 762 q 241 603 264 627 q 180 579 219 579 q 120 603 141 579 q 100 671 100 627 z "},"<":{"ha":794,"x_min":71,"x_max":722,"o":"m 722 164 l 71 450 l 71 517 l 722 842 l 722 741 l 192 489 l 722 267 l 722 164 z "},"=":{"ha":794,"x_min":81,"x_max":711,"o":"m 81 582 l 81 675 l 711 675 l 711 582 l 81 582 m 81 304 l 81 397 l 711 397 l 711 304 l 81 304 z "},">":{"ha":794,"x_min":71,"x_max":722,"o":"m 71 267 l 602 488 l 71 741 l 71 842 l 722 517 l 722 450 l 71 164 l 71 267 z "},"?":{"ha":596,"x_min":18,"x_max":559,"o":"m 196 273 l 196 310 q 220 440 196 389 q 311 549 245 492 q 428 666 404 627 q 452 761 452 705 q 407 868 452 830 q 279 905 363 905 q 175 893 226 905 q 58 847 124 880 l 18 939 q 286 1006 146 1006 q 488 942 416 1006 q 559 762 559 878 q 546 675 559 713 q 507 604 533 637 q 396 496 481 570 q 306 399 328 437 q 283 296 283 360 l 283 273 l 196 273 m 163 72 q 244 164 163 164 q 305 140 283 164 q 326 72 326 117 q 304 4 326 28 q 244 -20 283 -20 q 186 2 209 -20 q 163 72 163 23 z "},"@":{"ha":1249,"x_min":82,"x_max":1166,"o":"m 1166 494 q 1137 318 1166 398 q 1053 194 1107 238 q 928 150 998 150 q 829 185 869 150 q 782 275 789 220 l 777 275 q 699 183 749 216 q 579 150 648 150 q 420 219 477 150 q 363 408 363 289 q 443 633 363 547 q 653 720 523 720 q 758 711 699 720 q 863 688 816 703 l 846 369 l 846 354 q 936 233 846 233 q 1036 306 998 233 q 1075 496 1075 379 q 1025 711 1075 618 q 882 853 975 803 q 669 903 789 903 q 406 840 518 903 q 235 661 294 777 q 176 392 176 545 q 286 74 176 185 q 600 -37 395 -37 q 896 21 743 -37 l 896 -69 q 600 -126 766 -126 q 218 9 354 -126 q 82 387 82 144 q 155 701 82 564 q 361 915 227 839 q 669 990 496 990 q 929 929 815 990 q 1104 754 1042 867 q 1166 494 1166 642 m 465 406 q 597 233 465 233 q 750 446 738 233 l 760 623 q 653 636 711 636 q 515 575 565 636 q 465 406 465 514 z "},"A":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 z "},"B":{"ha":900,"x_min":136,"x_max":823,"o":"m 136 991 l 416 991 q 702 932 614 991 q 790 746 790 873 q 741 601 790 658 q 597 526 692 543 l 597 519 q 823 282 823 481 q 733 75 823 149 q 482 0 644 0 l 136 0 l 136 991 m 252 567 l 441 567 q 617 605 564 567 q 671 734 671 644 q 611 855 671 818 q 421 892 551 892 l 252 892 l 252 567 m 252 469 l 252 98 l 458 98 q 639 145 578 98 q 700 290 700 191 q 638 426 700 382 q 449 469 576 469 l 252 469 z "},"C":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 z "},"D":{"ha":1013,"x_min":136,"x_max":928,"o":"m 928 505 q 794 130 928 260 q 411 0 661 0 l 136 0 l 136 991 l 440 991 q 800 863 671 991 q 928 505 928 735 m 806 501 q 708 793 806 695 q 419 892 611 892 l 252 892 l 252 100 l 392 100 q 702 201 598 100 q 806 501 806 302 z "},"E":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 z "},"F":{"ha":717,"x_min":136,"x_max":689,"o":"m 252 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 526 l 663 526 l 663 424 l 252 424 l 252 0 z "},"G":{"ha":1011,"x_min":85,"x_max":909,"o":"m 572 519 l 909 519 l 909 37 q 749 -1 831 12 q 561 -14 668 -14 q 210 120 336 -14 q 85 496 85 254 q 147 767 85 650 q 326 944 209 883 q 599 1006 442 1006 q 895 947 758 1006 l 850 846 q 591 903 715 903 q 309 795 410 903 q 207 496 207 687 q 305 191 207 295 q 593 87 403 87 q 794 111 696 87 l 794 416 l 572 416 l 572 519 z "},"H":{"ha":1025,"x_min":136,"x_max":889,"o":"m 889 0 l 774 0 l 774 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 774 570 l 774 991 l 889 991 l 889 0 z "},"J":{"ha":371,"x_min":-109,"x_max":244,"o":"m -8 -261 q -109 -243 -72 -261 l -109 -144 q -8 -158 -60 -158 q 94 -117 59 -158 q 129 0 129 -77 l 129 991 l 244 991 l 244 9 q 179 -190 244 -119 q -8 -261 114 -261 z "},"K":{"ha":852,"x_min":136,"x_max":852,"o":"m 852 0 l 717 0 l 355 481 l 252 389 l 252 0 l 136 0 l 136 991 l 252 991 l 252 500 l 701 991 l 838 991 l 439 561 l 852 0 z "},"L":{"ha":721,"x_min":136,"x_max":689,"o":"m 136 0 l 136 991 l 252 991 l 252 104 l 689 104 l 689 0 l 136 0 z "},"M":{"ha":1254,"x_min":136,"x_max":1118,"o":"m 575 0 l 239 879 l 233 879 q 243 631 243 774 l 243 0 l 136 0 l 136 991 l 310 991 l 624 174 l 629 174 l 946 991 l 1118 991 l 1118 0 l 1003 0 l 1003 639 q 1013 878 1003 749 l 1007 878 l 668 0 l 575 0 z "},"N":{"ha":1047,"x_min":136,"x_max":911,"o":"m 911 0 l 779 0 l 237 832 l 232 832 q 243 564 243 686 l 243 0 l 136 0 l 136 991 l 267 991 l 807 163 l 812 163 q 806 280 811 181 q 803 422 802 380 l 803 991 l 911 991 l 911 0 z "},"O":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 z "},"P":{"ha":836,"x_min":136,"x_max":765,"o":"m 765 703 q 662 471 765 552 q 368 390 559 390 l 252 390 l 252 0 l 136 0 l 136 991 l 393 991 q 765 703 765 991 m 252 489 l 355 489 q 577 538 509 489 q 646 697 646 588 q 581 844 646 795 q 380 892 517 892 l 252 892 l 252 489 z "},"Q":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 920 180 997 307 q 704 9 844 54 l 940 -236 l 772 -236 l 579 -12 l 542 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 z "},"R":{"ha":859,"x_min":136,"x_max":835,"o":"m 252 412 l 252 0 l 136 0 l 136 991 l 408 991 q 678 922 591 991 q 765 711 765 852 q 566 446 765 515 l 835 0 l 699 0 l 458 412 l 252 412 m 252 511 l 410 511 q 589 560 532 511 q 646 705 646 608 q 588 847 646 804 q 401 890 530 890 l 252 890 l 252 511 z "},"S":{"ha":762,"x_min":72,"x_max":696,"o":"m 696 264 q 601 60 696 133 q 343 -14 506 -14 q 72 32 167 -14 l 72 143 q 205 102 133 117 q 347 87 277 87 q 521 131 463 87 q 579 253 579 175 q 558 337 579 304 q 489 398 538 370 q 342 461 441 426 q 144 578 203 511 q 85 755 85 646 q 171 938 85 870 q 399 1006 257 1006 q 671 951 547 1006 l 635 851 q 396 903 512 903 q 253 863 304 903 q 201 754 201 824 q 220 670 201 703 q 284 609 239 637 q 422 549 330 582 q 637 429 578 493 q 696 264 696 366 z "},"T":{"ha":768,"x_min":12,"x_max":755,"o":"m 441 0 l 326 0 l 326 889 l 12 889 l 12 991 l 755 991 l 755 889 l 441 889 l 441 0 z "},"U":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 z "},"V":{"ha":827,"x_min":0,"x_max":827,"o":"m 703 991 l 827 991 l 469 0 l 355 0 l 0 991 l 122 991 l 350 350 q 412 135 389 239 q 476 354 437 245 l 703 991 z "},"W":{"ha":1286,"x_min":18,"x_max":1267,"o":"m 1002 0 l 888 0 l 688 664 q 656 775 673 708 q 637 856 638 842 q 590 660 623 766 l 396 0 l 282 0 l 18 991 l 140 991 l 297 379 q 345 146 330 250 q 399 389 363 270 l 576 991 l 699 991 l 885 383 q 940 146 918 278 q 989 380 953 242 l 1145 991 l 1267 991 l 1002 0 z "},"X":{"ha":802,"x_min":5,"x_max":796,"o":"m 796 0 l 665 0 l 399 436 l 127 0 l 5 0 l 335 518 l 28 991 l 155 991 l 401 599 l 650 991 l 772 991 l 465 522 l 796 0 z "},"Y":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 z "},"Z":{"ha":793,"x_min":56,"x_max":737,"o":"m 737 0 l 56 0 l 56 90 l 582 888 l 72 888 l 72 991 l 722 991 l 722 901 l 196 104 l 737 104 l 737 0 z "},"[":{"ha":457,"x_min":113,"x_max":422,"o":"m 422 -220 l 113 -220 l 113 991 l 422 991 l 422 896 l 227 896 l 227 -123 l 422 -123 l 422 -220 z "},"\\\\":{"ha":510,"x_min":16,"x_max":497,"o":"m 126 991 l 497 0 l 385 0 l 16 991 l 126 991 z "},"]":{"ha":457,"x_min":35,"x_max":345,"o":"m 35 -123 l 231 -123 l 231 896 l 35 896 l 35 991 l 345 991 l 345 -220 l 35 -220 l 35 -123 z "},"^":{"ha":753,"x_min":33,"x_max":718,"o":"m 33 374 l 328 999 l 395 999 l 718 374 l 615 374 l 363 879 l 136 374 l 33 374 z "},"_":{"ha":623,"x_min":-3,"x_max":625,"o":"m 625 -214 l -3 -214 l -3 -125 l 625 -125 l 625 -214 z "},"`":{"ha":802,"x_min":267,"x_max":533,"o":"m 533 842 l 458 842 q 354 942 414 877 q 267 1050 294 1007 l 267 1064 l 404 1064 q 465 956 426 1017 q 533 859 503 895 l 533 842 z "},"a":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 z "},"b":{"ha":851,"x_min":119,"x_max":774,"o":"m 465 755 q 693 655 612 755 q 774 372 774 555 q 692 88 774 189 q 465 -14 610 -14 q 333 13 393 -14 q 232 96 273 40 l 224 96 l 200 0 l 119 0 l 119 1055 l 232 1055 l 232 799 q 227 644 232 713 l 232 644 q 465 755 311 755 m 449 661 q 283 595 334 661 q 232 372 232 529 q 284 148 232 216 q 452 81 336 81 q 606 156 555 81 q 657 374 657 232 q 606 590 657 519 q 449 661 555 661 z "},"c":{"ha":661,"x_min":78,"x_max":615,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 z "},"d":{"ha":851,"x_min":78,"x_max":732,"o":"m 625 100 l 619 100 q 386 -14 541 -14 q 159 86 240 -14 q 78 370 78 186 q 159 655 78 553 q 386 757 241 757 q 618 647 537 757 l 627 647 l 622 701 l 619 753 l 619 1055 l 732 1055 l 732 0 l 640 0 l 625 100 m 400 81 q 567 143 515 81 q 619 346 619 206 l 619 370 q 567 595 619 528 q 399 663 514 663 q 247 586 300 663 q 195 368 195 509 q 247 153 195 226 q 400 81 299 81 z "},"e":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 z "},"f":{"ha":471,"x_min":20,"x_max":530,"o":"m 454 656 l 265 656 l 265 0 l 153 0 l 153 656 l 20 656 l 20 707 l 153 747 l 153 789 q 392 1063 153 1063 q 530 1039 451 1063 l 501 949 q 390 970 436 970 q 296 927 326 970 q 265 791 265 885 l 265 743 l 454 743 l 454 656 z "},"g":{"ha":761,"x_min":26,"x_max":728,"o":"m 728 743 l 728 672 l 590 656 q 624 594 609 632 q 639 507 639 555 q 564 333 639 398 q 359 268 490 268 q 297 273 326 268 q 225 178 225 235 q 250 133 225 147 q 336 118 275 118 l 468 118 q 653 67 589 118 q 718 -81 718 16 q 619 -269 718 -204 q 330 -334 520 -334 q 105 -279 184 -334 q 26 -126 26 -225 q 70 -9 26 -58 q 192 58 113 41 q 144 98 163 71 q 125 161 125 125 q 146 233 125 202 q 215 292 168 263 q 121 372 157 315 q 85 503 85 429 q 158 691 85 625 q 366 757 231 757 q 471 743 424 757 l 728 743 m 135 -125 q 186 -216 135 -185 q 332 -248 237 -248 q 542 -205 473 -248 q 610 -90 610 -163 q 572 -6 610 -30 q 432 17 535 17 l 297 17 q 178 -20 220 17 q 135 -125 135 -56 m 196 505 q 240 387 196 427 q 363 347 284 347 q 528 507 528 347 q 361 675 528 675 q 239 632 281 675 q 196 505 196 589 z "},"h":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 0 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 597 340 661 q 232 389 232 534 l 232 0 l 119 0 l 119 1055 l 232 1055 l 232 736 q 227 640 232 678 l 233 640 q 328 725 267 694 q 468 755 389 755 q 672 691 604 755 q 741 485 741 626 l 741 0 l 628 0 z "},"i":{"ha":351,"x_min":110,"x_max":243,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 z "},"j":{"ha":351,"x_min":-75,"x_max":243,"o":"m 29 -334 q -75 -317 -35 -334 l -75 -225 q 17 -239 -28 -239 q 95 -210 70 -239 q 119 -122 119 -181 l 119 743 l 232 743 l 232 -114 q 29 -334 232 -334 m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 z "},"k":{"ha":729,"x_min":119,"x_max":714,"o":"m 231 380 q 319 489 260 422 l 559 743 l 693 743 l 392 427 l 714 0 l 578 0 l 315 351 l 231 278 l 231 0 l 119 0 l 119 1055 l 231 1055 l 231 496 q 225 380 231 458 l 231 380 z "},"l":{"ha":351,"x_min":119,"x_max":232,"o":"m 232 0 l 119 0 l 119 1055 l 232 1055 l 232 0 z "},"m":{"ha":1292,"x_min":119,"x_max":1179,"o":"m 1067 0 l 1067 484 q 1029 617 1067 572 q 911 661 991 661 q 755 601 806 661 q 705 415 705 541 l 705 0 l 593 0 l 593 484 q 555 617 593 572 q 436 661 517 661 q 281 598 330 661 q 232 390 232 534 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 325 726 267 696 q 454 757 382 757 q 682 631 629 757 l 688 631 q 784 723 721 689 q 928 757 847 757 q 1117 692 1054 757 q 1179 485 1179 627 l 1179 0 l 1067 0 z "},"n":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 0 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 332 727 269 696 q 471 757 394 757 q 673 692 605 757 q 741 485 741 627 l 741 0 l 628 0 z "},"o":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 z "},"p":{"ha":851,"x_min":119,"x_max":774,"o":"m 465 -14 q 333 13 393 -14 q 232 96 273 40 l 224 96 q 232 -28 232 31 l 232 -334 l 119 -334 l 119 743 l 211 743 l 227 642 l 232 642 q 333 730 275 703 q 465 757 391 757 q 693 656 613 757 q 774 372 774 555 q 692 88 774 189 q 465 -14 610 -14 m 449 661 q 284 598 335 661 q 232 397 233 535 l 232 372 q 284 148 232 216 q 452 81 336 81 q 603 159 548 81 q 657 374 657 237 q 603 587 657 513 q 449 661 548 661 z "},"q":{"ha":851,"x_min":78,"x_max":732,"o":"m 400 81 q 564 141 513 81 q 619 345 616 201 l 619 370 q 566 594 619 526 q 399 663 513 663 q 247 586 300 663 q 195 368 195 509 q 247 154 195 228 q 400 81 298 81 m 383 -14 q 159 87 239 -14 q 78 370 78 189 q 159 654 78 552 q 386 757 241 757 q 621 642 538 757 l 627 642 l 643 743 l 732 743 l 732 -334 l 619 -334 l 619 -16 q 627 100 619 52 l 618 100 q 383 -14 540 -14 z "},"r":{"ha":567,"x_min":119,"x_max":547,"o":"m 458 757 q 547 749 508 757 l 532 644 q 450 654 486 654 q 296 581 360 654 q 232 399 232 508 l 232 0 l 119 0 l 119 743 l 212 743 l 225 606 l 231 606 q 330 718 272 678 q 458 757 389 757 z "},"s":{"ha":663,"x_min":72,"x_max":599,"o":"m 599 203 q 522 43 599 99 q 304 -14 444 -14 q 74 33 157 -14 l 74 138 q 189 95 127 111 q 307 79 250 79 q 443 107 395 79 q 490 193 490 136 q 453 268 490 237 q 306 340 415 298 q 158 408 202 379 q 93 473 115 437 q 72 561 72 510 q 146 704 72 652 q 349 757 220 757 q 583 708 469 757 l 543 616 q 340 663 431 663 q 220 637 260 663 q 179 568 179 612 q 194 517 179 538 q 243 477 210 496 q 374 422 277 458 q 552 326 506 374 q 599 203 599 277 z "},"t":{"ha":490,"x_min":21,"x_max":461,"o":"m 359 79 q 417 84 389 79 q 461 93 445 88 l 461 7 q 407 -8 443 -2 q 343 -14 372 -14 q 127 214 127 -14 l 127 656 l 21 656 l 21 710 l 127 757 l 175 916 l 240 916 l 240 743 l 456 743 l 456 656 l 240 656 l 240 218 q 272 115 240 151 q 359 79 304 79 z "},"u":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 z "},"v":{"ha":696,"x_min":0,"x_max":696,"o":"m 282 0 l 0 743 l 121 743 l 281 302 q 345 102 335 148 l 350 102 q 397 251 357 138 q 575 743 437 363 l 696 743 l 414 0 l 282 0 z "},"w":{"ha":1080,"x_min":16,"x_max":1065,"o":"m 726 0 l 590 436 q 542 618 577 476 l 536 618 q 489 435 509 499 l 349 0 l 218 0 l 16 743 l 134 743 q 243 317 205 463 q 286 119 281 170 l 292 119 q 316 219 299 158 q 345 317 332 281 l 481 743 l 603 743 l 736 317 q 787 121 774 200 l 793 121 q 807 196 795 145 q 949 743 819 247 l 1065 743 l 860 0 l 726 0 z "},"x":{"ha":728,"x_min":26,"x_max":700,"o":"m 298 380 l 40 743 l 168 743 l 364 458 l 559 743 l 686 743 l 428 380 l 700 0 l 572 0 l 364 301 l 154 0 l 26 0 l 298 380 z "},"y":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 z "},"z":{"ha":650,"x_min":56,"x_max":595,"o":"m 595 0 l 56 0 l 56 77 l 461 656 l 81 656 l 81 743 l 585 743 l 585 656 l 184 87 l 595 87 l 595 0 z "},"{":{"ha":526,"x_min":41,"x_max":478,"o":"m 322 8 q 362 -92 322 -61 q 478 -125 401 -123 l 478 -220 q 279 -161 349 -218 q 208 1 208 -103 l 208 207 q 165 308 208 277 q 41 338 123 338 l 41 433 q 169 466 130 435 q 208 562 208 497 l 208 770 q 281 933 208 875 q 478 991 355 991 l 478 897 q 322 762 322 893 l 322 562 q 171 390 322 416 l 171 382 q 322 210 322 355 l 322 8 z "},"|":{"ha":765,"x_min":335,"x_max":431,"o":"m 335 1055 l 431 1055 l 431 -336 l 335 -336 l 335 1055 z "},"}":{"ha":526,"x_min":49,"x_max":485,"o":"m 354 390 q 203 562 203 416 l 203 762 q 49 897 203 893 l 49 991 q 245 932 174 991 q 317 770 317 873 l 317 562 q 357 466 317 496 q 485 433 397 435 l 485 338 q 359 308 402 338 q 317 207 317 277 l 317 1 q 247 -160 317 -102 q 49 -220 178 -218 l 49 -125 q 163 -92 124 -123 q 203 8 203 -61 l 203 210 q 240 328 203 287 q 354 382 277 368 l 354 390 z "},"~":{"ha":794,"x_min":71,"x_max":722,"o":"m 229 484 q 150 461 193 484 q 71 401 107 438 l 71 504 q 236 578 138 578 q 320 568 282 578 q 419 533 359 559 q 497 505 464 514 q 562 496 530 496 q 642 517 599 496 q 722 578 686 539 l 722 476 q 557 401 653 401 q 465 413 508 401 q 374 446 422 424 q 292 475 323 467 q 229 484 262 484 z "}," ":{"ha":361,"x_min":0,"x_max":0,"o":""},"¡":{"ha":371,"x_min":103,"x_max":267,"o":"m 149 464 l 220 464 l 254 -253 l 114 -253 l 149 464 m 267 667 q 184 575 267 575 q 123 599 144 575 q 103 667 103 623 q 124 734 103 709 q 184 758 146 758 q 243 736 219 758 q 267 667 267 715 z "},"¢":{"ha":794,"x_min":129,"x_max":669,"o":"m 659 163 q 488 122 587 126 l 488 -14 l 397 -14 l 397 126 q 194 240 260 148 q 129 503 129 333 q 397 889 129 847 l 397 1006 l 489 1006 l 489 895 q 588 881 540 892 q 669 854 636 870 l 636 760 q 472 794 546 794 q 300 723 355 794 q 245 504 245 651 q 299 291 245 360 q 467 222 353 222 q 659 262 562 222 l 659 163 z "},"£":{"ha":794,"x_min":43,"x_max":741,"o":"m 463 1004 q 707 947 591 1004 l 665 857 q 464 909 561 909 q 338 867 380 909 q 296 730 296 825 l 296 530 l 582 530 l 582 444 l 296 444 l 296 294 q 274 180 296 227 q 201 104 252 134 l 741 104 l 741 0 l 43 0 l 43 96 q 182 293 182 127 l 182 444 l 47 444 l 47 530 l 182 530 l 182 745 q 258 935 182 865 q 463 1004 334 1004 z "},"¤":{"ha":794,"x_min":83,"x_max":710,"o":"m 125 490 q 175 646 125 573 l 83 741 l 147 803 l 239 713 q 397 762 309 762 q 553 713 484 762 l 646 803 l 710 741 l 619 647 q 669 490 669 570 q 619 332 669 401 l 708 240 l 646 178 l 553 268 q 397 220 484 220 q 239 269 307 220 l 147 179 l 85 241 l 175 334 q 125 490 125 406 m 212 490 q 266 360 212 414 q 397 306 319 306 q 530 360 476 306 q 583 490 583 414 q 529 623 583 568 q 397 677 475 677 q 266 622 319 677 q 212 490 212 566 z "},"¥":{"ha":794,"x_min":21,"x_max":771,"o":"m 396 498 l 653 991 l 771 991 l 489 469 l 667 469 l 667 383 l 452 383 l 452 268 l 667 268 l 667 182 l 452 182 l 452 0 l 340 0 l 340 182 l 126 182 l 126 268 l 340 268 l 340 383 l 126 383 l 126 469 l 300 469 l 21 991 l 142 991 l 396 498 z "},"¦":{"ha":765,"x_min":335,"x_max":431,"o":"m 335 1055 l 431 1055 l 431 529 l 335 529 l 335 1055 m 335 191 l 431 191 l 431 -336 l 335 -336 l 335 191 z "},"§":{"ha":717,"x_min":83,"x_max":623,"o":"m 94 549 q 123 653 94 607 q 205 725 153 700 q 127 790 155 752 q 98 885 98 827 q 169 1014 98 967 q 372 1061 239 1061 q 490 1052 436 1061 q 610 1015 544 1042 l 574 926 q 461 962 507 953 q 364 971 416 971 q 246 951 286 971 q 207 888 207 931 q 249 819 207 847 q 395 753 290 790 q 572 655 521 707 q 623 532 623 604 q 595 423 623 471 q 517 347 567 375 q 621 193 621 292 q 541 46 621 98 q 318 -5 462 -5 q 83 39 170 -5 l 83 139 q 202 99 136 114 q 323 83 268 83 q 462 109 414 83 q 510 183 510 135 q 494 234 510 214 q 441 273 477 254 q 326 322 404 293 q 184 388 230 357 q 117 457 139 418 q 94 549 94 496 m 193 562 q 238 474 193 510 q 396 397 283 439 l 429 385 q 522 514 522 439 q 472 608 522 570 q 297 685 422 646 q 222 638 251 672 q 193 562 193 604 z "},"¨":{"ha":802,"x_min":210,"x_max":591,"o":"m 210 945 q 228 996 210 980 q 271 1011 245 1011 q 315 996 296 1011 q 334 945 334 980 q 315 894 334 911 q 271 878 296 878 q 228 894 245 878 q 210 945 210 911 m 468 945 q 486 996 468 980 q 529 1011 504 1011 q 573 996 554 1011 q 591 945 591 980 q 573 894 591 911 q 529 878 554 878 q 486 894 504 878 q 468 945 468 911 z "},"©":{"ha":1156,"x_min":68,"x_max":1088,"o":"m 606 718 q 475 659 521 718 q 429 496 429 600 q 472 327 429 382 q 604 272 515 272 q 747 302 663 272 l 747 218 q 681 195 715 205 q 599 186 646 186 q 397 268 467 186 q 326 496 326 349 q 401 721 326 637 q 606 804 476 804 q 772 764 692 804 l 733 684 q 606 718 660 718 m 68 496 q 136 750 68 631 q 322 937 203 869 q 578 1006 441 1006 q 832 938 713 1006 q 1019 751 951 870 q 1088 496 1088 633 q 1022 245 1088 362 q 838 57 956 127 q 578 -14 719 -14 q 319 57 437 -14 q 134 244 200 127 q 68 496 68 361 m 139 496 q 198 276 139 378 q 359 116 257 174 q 578 57 461 57 q 797 116 696 57 q 957 276 898 175 q 1017 496 1017 376 q 958 715 1017 614 q 798 875 899 816 q 578 935 697 935 q 359 876 460 935 q 198 716 258 817 q 139 496 139 615 z "},"ª":{"ha":492,"x_min":47,"x_max":424,"o":"m 361 543 l 345 600 q 187 534 282 534 q 85 568 123 534 q 47 671 47 602 q 100 775 47 740 q 264 815 152 811 l 343 818 l 343 844 q 243 935 343 935 q 104 900 175 935 l 75 965 q 243 1003 153 1003 q 377 967 331 1003 q 424 850 424 932 l 424 543 l 361 543 m 131 671 q 207 603 131 603 q 343 725 343 603 l 343 758 l 277 755 q 166 733 201 753 q 131 671 131 714 z "},"«":{"ha":690,"x_min":56,"x_max":636,"o":"m 56 374 l 288 650 l 368 603 l 172 366 l 368 127 l 288 79 l 56 355 l 56 374 m 323 374 l 557 650 l 636 603 l 441 366 l 636 127 l 557 79 l 323 355 l 323 374 z "},"¬":{"ha":794,"x_min":71,"x_max":722,"o":"m 722 536 l 722 179 l 629 179 l 629 443 l 71 443 l 71 536 l 722 536 z "},"­":{"ha":447,"x_min":57,"x_max":390,"o":"m 57 321 l 57 424 l 390 424 l 390 321 l 57 321 z "},"®":{"ha":1156,"x_min":68,"x_max":1088,"o":"m 490 517 l 564 517 q 651 545 618 517 q 684 616 684 573 q 654 689 684 667 q 562 711 625 711 l 490 711 l 490 517 m 785 619 q 756 523 785 565 q 675 461 727 481 l 836 193 l 722 193 l 582 433 l 490 433 l 490 193 l 390 193 l 390 798 l 567 798 q 732 753 680 798 q 785 619 785 709 m 68 496 q 136 750 68 631 q 322 937 203 869 q 578 1006 441 1006 q 832 938 713 1006 q 1019 751 951 870 q 1088 496 1088 633 q 1022 245 1088 362 q 838 57 956 127 q 578 -14 719 -14 q 319 57 437 -14 q 134 244 200 127 q 68 496 68 361 m 139 496 q 198 276 139 378 q 359 116 257 174 q 578 57 461 57 q 797 116 696 57 q 957 276 898 175 q 1017 496 1017 376 q 958 715 1017 614 q 798 875 899 816 q 578 935 697 935 q 359 876 460 935 q 198 716 258 817 q 139 496 139 615 z "},"¯":{"ha":694,"x_min":-4,"x_max":699,"o":"m 699 1055 l -4 1055 l -4 1141 l 699 1141 l 699 1055 z "},"°":{"ha":595,"x_min":86,"x_max":509,"o":"m 86 794 q 148 944 86 882 q 297 1006 209 1006 q 447 944 385 1006 q 509 794 509 883 q 481 689 509 737 q 404 612 453 640 q 297 583 354 583 q 148 644 209 583 q 86 794 86 705 m 164 794 q 204 700 164 739 q 298 661 243 661 q 392 700 353 661 q 431 794 431 738 q 392 889 431 851 q 298 928 354 928 q 203 889 242 928 q 164 794 164 850 z "},"±":{"ha":794,"x_min":71,"x_max":722,"o":"m 443 536 l 722 536 l 722 443 l 443 443 l 443 154 l 349 154 l 349 443 l 71 443 l 71 536 l 349 536 l 349 827 l 443 827 l 443 536 m 71 1 l 71 94 l 722 94 l 722 1 l 71 1 z "},"²":{"ha":482,"x_min":33,"x_max":443,"o":"m 443 397 l 33 397 l 33 468 l 193 624 q 281 715 254 682 q 320 774 309 748 q 332 836 332 800 q 304 906 332 882 q 235 929 277 929 q 166 916 199 929 q 86 869 133 903 l 41 929 q 233 1004 130 1004 q 373 960 323 1004 q 422 840 422 916 q 392 735 422 786 q 262 590 362 684 l 144 478 l 443 478 l 443 397 z "},"³":{"ha":482,"x_min":22,"x_max":443,"o":"m 425 851 q 397 762 425 797 q 323 711 370 727 q 443 570 443 680 q 380 434 443 483 q 204 386 318 386 q 22 424 101 386 l 22 507 q 205 461 122 461 q 349 571 349 461 q 192 669 349 669 l 113 669 l 113 742 l 193 742 q 297 769 263 742 q 330 842 330 795 q 303 906 330 883 q 231 929 276 929 q 148 915 186 929 q 72 876 110 900 l 25 937 q 115 986 68 968 q 227 1004 163 1004 q 372 964 319 1004 q 425 851 425 924 z "},"´":{"ha":802,"x_min":267,"x_max":533,"o":"m 267 859 q 337 960 299 901 q 396 1064 374 1020 l 533 1064 l 533 1050 q 444 941 503 1006 q 342 842 385 877 l 267 842 l 267 859 z "},"µ":{"ha":860,"x_min":119,"x_max":741,"o":"m 232 258 q 404 81 232 81 q 574 145 520 81 q 628 353 628 209 l 628 743 l 741 743 l 741 0 l 648 0 l 631 100 l 624 100 q 393 -14 549 -14 q 232 49 292 -14 l 225 49 q 232 -117 232 -8 l 232 -334 l 119 -334 l 119 743 l 232 743 l 232 258 z "},"¶":{"ha":909,"x_min":77,"x_max":760,"o":"m 760 -176 l 682 -176 l 682 985 l 538 985 l 538 -176 l 460 -176 l 460 379 q 361 367 418 367 q 145 452 214 367 q 77 707 77 536 q 151 969 77 883 q 382 1055 224 1055 l 760 1055 l 760 -176 z "},"·":{"ha":370,"x_min":103,"x_max":267,"o":"m 103 490 q 124 558 103 535 q 183 582 145 582 q 244 558 222 582 q 267 490 267 535 q 244 422 267 446 q 183 399 222 399 q 126 420 149 399 q 103 490 103 441 z "},"¸":{"ha":315,"x_min":25,"x_max":296,"o":"m 296 -196 q 244 -298 296 -262 q 90 -334 192 -334 q 25 -328 56 -334 l 25 -256 q 96 -261 56 -261 q 177 -248 149 -261 q 204 -197 204 -234 q 177 -150 204 -168 q 77 -121 151 -132 l 136 0 l 211 0 l 174 -78 q 296 -196 296 -104 z "},"¹":{"ha":482,"x_min":52,"x_max":326,"o":"m 229 991 l 326 991 l 326 397 l 236 397 l 236 790 q 240 913 236 852 q 207 883 225 898 q 97 803 189 867 l 52 868 l 229 991 z "},"º":{"ha":521,"x_min":45,"x_max":476,"o":"m 476 770 q 418 596 476 659 q 258 534 360 534 q 102 597 159 534 q 45 770 45 661 q 102 942 45 880 q 261 1003 159 1003 q 420 941 364 1003 q 476 770 476 880 m 127 770 q 158 646 127 687 q 260 604 189 604 q 362 646 331 604 q 393 770 393 687 q 362 893 393 853 q 260 933 331 933 q 159 893 190 933 q 127 770 127 853 z "},"»":{"ha":690,"x_min":54,"x_max":635,"o":"m 635 355 l 401 79 l 322 127 l 517 366 l 322 603 l 401 650 l 635 374 l 635 355 m 367 355 l 134 79 l 54 127 l 249 366 l 54 603 l 134 650 l 367 374 l 367 355 z "},"¼":{"ha":1083,"x_min":51,"x_max":1010,"o":"m 880 991 l 268 0 l 171 0 l 783 991 l 880 991 m 229 991 l 326 991 l 326 397 l 235 397 l 235 790 q 239 913 235 852 q 206 883 224 898 q 96 803 188 867 l 51 868 l 229 991 m 1010 138 l 925 138 l 925 1 l 827 1 l 827 138 l 554 138 l 554 206 l 831 599 l 925 599 l 925 217 l 1010 217 l 1010 138 m 827 217 l 827 349 q 831 491 827 440 q 819 470 827 483 q 801 441 811 456 q 781 411 791 426 q 763 384 770 395 l 649 217 l 827 217 z "},"½":{"ha":1083,"x_min":31,"x_max":1017,"o":"m 834 991 l 222 0 l 125 0 l 737 991 l 834 991 m 209 991 l 306 991 l 306 397 l 216 397 l 216 790 q 220 913 216 852 q 186 883 205 898 q 77 803 168 867 l 31 868 l 209 991 m 1017 1 l 607 1 l 607 71 l 767 227 q 855 318 827 286 q 894 377 883 351 q 905 439 905 403 q 878 509 905 486 q 808 532 851 532 q 740 519 773 532 q 660 473 707 507 l 615 532 q 807 608 704 608 q 946 564 897 608 q 996 444 996 519 q 966 338 996 389 q 836 193 936 287 l 718 81 l 1017 81 l 1017 1 z "},"¾":{"ha":1083,"x_min":18,"x_max":1064,"o":"m 420 851 q 393 762 420 797 q 319 711 365 727 q 438 570 438 680 q 376 434 438 483 q 199 386 313 386 q 18 424 96 386 l 18 507 q 201 461 117 461 q 344 571 344 461 q 187 669 344 669 l 108 669 l 108 742 l 189 742 q 292 769 258 742 q 326 842 326 795 q 298 906 326 883 q 226 929 271 929 q 143 915 181 929 q 67 876 105 900 l 20 937 q 111 986 63 968 q 222 1004 158 1004 q 367 964 314 1004 q 420 851 420 924 m 943 991 l 330 0 l 233 0 l 846 991 l 943 991 m 1064 138 l 979 138 l 979 1 l 881 1 l 881 138 l 608 138 l 608 206 l 885 599 l 979 599 l 979 217 l 1064 217 l 1064 138 m 881 217 l 881 349 q 885 491 881 440 q 873 470 882 483 q 855 441 865 456 q 835 411 845 426 q 817 384 825 395 l 703 217 l 881 217 z "},"¿":{"ha":596,"x_min":35,"x_max":578,"o":"m 400 464 l 400 429 q 375 296 400 347 q 283 189 349 246 q 181 92 201 117 q 152 40 160 66 q 143 -24 143 14 q 188 -130 143 -92 q 315 -168 233 -168 q 420 -155 370 -168 q 538 -110 471 -142 l 578 -201 q 310 -267 444 -267 q 108 -203 181 -267 q 35 -25 35 -140 q 46 58 35 22 q 80 124 58 94 q 132 182 102 154 q 199 241 162 210 q 289 340 267 301 q 311 443 311 380 l 311 464 l 400 464 m 433 667 q 351 575 433 575 q 290 598 311 575 q 269 667 269 622 q 292 734 269 710 q 351 758 314 758 q 410 736 386 758 q 433 667 433 715 z "},"À":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 491 1071 l 416 1071 q 312 1171 372 1106 q 224 1279 252 1236 l 224 1293 l 362 1293 q 422 1185 384 1246 q 491 1088 461 1124 l 491 1071 z "},"Á":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 357 1088 q 427 1190 389 1130 q 486 1293 465 1249 l 623 1293 l 623 1279 q 534 1171 593 1235 q 432 1071 475 1106 l 357 1071 l 357 1088 z "},"Â":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 205 1086 q 326 1222 292 1179 q 376 1293 361 1265 l 489 1293 q 541 1220 504 1265 q 663 1086 578 1175 l 663 1071 l 582 1071 q 432 1197 522 1108 q 283 1071 340 1106 l 205 1071 l 205 1086 z "},"Ã":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 537 1072 q 480 1085 508 1072 q 426 1113 452 1097 q 374 1140 399 1128 q 326 1153 349 1153 q 275 1133 292 1153 q 248 1071 258 1112 l 182 1071 q 230 1199 191 1153 q 330 1246 269 1246 q 391 1233 361 1246 q 446 1205 420 1221 q 497 1178 473 1190 q 543 1165 522 1165 q 593 1185 576 1165 q 619 1247 609 1205 l 686 1247 q 639 1119 677 1165 q 537 1072 601 1072 z "},"Ä":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 247 1174 q 265 1225 247 1209 q 308 1240 283 1240 q 352 1225 334 1240 q 371 1174 371 1209 q 352 1123 371 1140 q 308 1107 334 1107 q 265 1123 283 1107 q 247 1174 247 1140 m 505 1174 q 523 1225 505 1209 q 566 1240 541 1240 q 610 1225 591 1240 q 629 1174 629 1209 q 610 1123 629 1140 q 566 1107 591 1107 q 523 1123 541 1107 q 505 1174 505 1140 z "},"Å":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 590 1076 q 548 969 590 1010 q 437 929 507 929 q 328 969 369 929 q 288 1075 288 1008 q 329 1180 288 1141 q 437 1219 370 1219 q 548 1179 506 1219 q 590 1076 590 1139 m 517 1075 q 494 1134 517 1113 q 437 1154 472 1154 q 380 1134 403 1154 q 358 1075 358 1113 q 378 1016 358 1037 q 437 996 399 996 q 495 1016 473 996 q 517 1075 517 1037 z "},"Æ":{"ha":1213,"x_min":-1,"x_max":1129,"o":"m 1129 0 l 621 0 l 621 315 l 272 315 l 118 0 l -1 0 l 472 991 l 1129 991 l 1129 889 l 736 889 l 736 570 l 1103 570 l 1103 468 l 736 468 l 736 103 l 1129 103 l 1129 0 m 318 419 l 621 419 l 621 889 l 541 889 l 318 419 z "},"Ç":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 m 644 -196 q 592 -298 644 -262 q 439 -334 541 -334 q 374 -328 404 -334 l 374 -256 q 444 -261 404 -261 q 525 -248 498 -261 q 553 -197 553 -234 q 526 -150 553 -168 q 425 -121 499 -132 l 485 0 l 559 0 l 522 -78 q 644 -196 644 -104 z "},"È":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 484 1071 l 409 1071 q 304 1171 365 1106 q 217 1279 244 1236 l 217 1293 l 355 1293 q 415 1185 376 1246 q 484 1088 454 1124 l 484 1071 z "},"É":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 309 1088 q 379 1190 342 1130 q 439 1293 417 1249 l 576 1293 l 576 1279 q 487 1171 546 1235 q 385 1071 428 1106 l 309 1071 l 309 1088 z "},"Ê":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 178 1086 q 299 1222 264 1179 q 349 1293 334 1265 l 462 1293 q 514 1220 477 1265 q 635 1086 551 1175 l 635 1071 l 555 1071 q 405 1197 495 1108 q 256 1071 313 1106 l 178 1071 l 178 1086 z "},"Ë":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 222 1174 q 240 1225 222 1209 q 283 1240 258 1240 q 327 1225 309 1240 q 346 1174 346 1209 q 327 1123 346 1140 q 283 1107 309 1107 q 240 1123 258 1107 q 222 1174 222 1140 m 480 1174 q 498 1225 480 1209 q 541 1240 516 1240 q 585 1225 566 1240 q 604 1174 604 1209 q 585 1123 604 1140 q 541 1107 566 1107 q 498 1123 516 1107 q 480 1174 480 1140 z "},"Ð":{"ha":1003,"x_min":32,"x_max":917,"o":"m 917 505 q 784 130 917 260 q 400 0 650 0 l 136 0 l 136 440 l 32 440 l 32 542 l 136 542 l 136 991 l 431 991 q 788 864 659 991 q 917 505 917 737 m 794 501 q 408 892 794 892 l 252 892 l 252 542 l 509 542 l 509 440 l 252 440 l 252 100 l 380 100 q 794 501 794 100 z "},"Ñ":{"ha":1047,"x_min":136,"x_max":911,"o":"m 911 0 l 779 0 l 237 832 l 232 832 q 243 564 243 686 l 243 0 l 136 0 l 136 991 l 267 991 l 807 163 l 812 163 q 806 280 811 181 q 803 422 802 380 l 803 991 l 911 991 l 911 0 m 634 1072 q 577 1085 605 1072 q 523 1113 549 1097 q 471 1140 496 1128 q 423 1153 446 1153 q 372 1133 389 1153 q 345 1071 355 1112 l 279 1071 q 327 1199 288 1153 q 427 1246 366 1246 q 488 1233 458 1246 q 543 1205 517 1221 q 594 1178 570 1190 q 640 1165 618 1165 q 690 1185 673 1165 q 716 1247 706 1205 l 783 1247 q 736 1119 774 1165 q 634 1072 698 1072 z "},"Ò":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 615 1071 l 541 1071 q 436 1171 496 1106 q 349 1279 376 1236 l 349 1293 l 486 1293 q 547 1185 508 1246 q 615 1088 585 1124 l 615 1071 z "},"Ó":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 447 1088 q 517 1190 479 1130 q 576 1293 555 1249 l 713 1293 l 713 1279 q 625 1171 684 1235 q 522 1071 566 1106 l 447 1071 l 447 1088 z "},"Ô":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 304 1086 q 425 1222 390 1179 q 475 1293 459 1265 l 587 1293 q 639 1220 602 1265 q 761 1086 676 1175 l 761 1071 l 680 1071 q 530 1197 621 1108 q 382 1071 438 1106 l 304 1071 l 304 1086 z "},"Õ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 639 1072 q 582 1085 610 1072 q 527 1113 554 1097 q 476 1140 500 1128 q 428 1153 451 1153 q 377 1133 394 1153 q 350 1071 359 1112 l 283 1071 q 331 1199 292 1153 q 432 1246 370 1246 q 492 1233 463 1246 q 548 1205 522 1221 q 599 1178 574 1190 q 645 1165 623 1165 q 694 1185 678 1165 q 721 1247 711 1205 l 788 1247 q 741 1119 779 1165 q 639 1072 703 1072 z "},"Ö":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 354 1174 q 372 1225 354 1209 q 415 1240 390 1240 q 459 1225 441 1240 q 478 1174 478 1209 q 459 1123 478 1140 q 415 1107 441 1107 q 372 1123 390 1107 q 354 1174 354 1140 m 612 1174 q 630 1225 612 1209 q 673 1240 648 1240 q 717 1225 699 1240 q 736 1174 736 1209 q 717 1123 736 1140 q 673 1107 699 1107 q 630 1123 648 1107 q 612 1174 612 1140 z "},"×":{"ha":794,"x_min":90,"x_max":703,"o":"m 637 798 l 703 730 l 464 490 l 701 252 l 636 184 l 396 422 l 160 184 l 92 252 l 329 490 l 90 729 l 158 798 l 397 557 l 637 798 z "},"Ø":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 282 54 382 -14 l 214 -41 l 132 12 l 205 117 q 85 498 85 251 q 204 874 85 741 q 543 1007 323 1007 q 791 943 685 1007 l 857 1035 l 939 981 l 867 880 q 997 497 997 743 m 875 497 q 800 786 875 682 l 345 143 q 542 87 422 87 q 791 191 707 87 q 875 497 875 295 m 207 497 q 275 215 207 319 l 729 854 q 543 904 657 904 q 293 800 378 904 q 207 497 207 696 z "},"Ù":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 581 1071 l 506 1071 q 401 1171 462 1106 q 314 1279 341 1236 l 314 1293 l 452 1293 q 512 1185 473 1246 q 581 1088 551 1124 l 581 1071 z "},"Ú":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 407 1088 q 477 1190 439 1130 q 536 1293 515 1249 l 673 1293 l 673 1279 q 585 1171 644 1235 q 482 1071 526 1106 l 407 1071 l 407 1088 z "},"Û":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 267 1086 q 387 1222 353 1179 q 437 1293 422 1265 l 550 1293 q 602 1220 565 1265 q 724 1086 639 1175 l 724 1071 l 643 1071 q 493 1197 583 1108 q 345 1071 401 1106 l 267 1071 l 267 1086 z "},"Ü":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 313 1174 q 331 1225 313 1209 q 374 1240 349 1240 q 418 1225 399 1240 q 437 1174 437 1209 q 418 1123 437 1140 q 374 1107 399 1107 q 331 1123 349 1107 q 313 1174 313 1140 m 571 1174 q 589 1225 571 1209 q 632 1240 607 1240 q 676 1225 657 1240 q 694 1174 694 1209 q 676 1123 694 1140 q 632 1107 657 1107 q 589 1123 607 1107 q 571 1174 571 1140 z "},"Ý":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 300 1088 q 370 1190 332 1130 q 429 1293 408 1249 l 566 1293 l 566 1279 q 477 1171 536 1235 q 375 1071 418 1106 l 300 1071 l 300 1088 z "},"Þ":{"ha":848,"x_min":136,"x_max":777,"o":"m 777 532 q 674 297 777 378 q 376 216 571 216 l 252 216 l 252 0 l 136 0 l 136 991 l 252 991 l 252 818 l 397 818 q 682 748 588 818 q 777 532 777 677 m 252 315 l 366 315 q 587 364 519 315 q 656 524 656 412 q 591 671 656 625 q 390 718 527 718 l 252 718 l 252 315 z "},"ß":{"ha":864,"x_min":119,"x_max":800,"o":"m 711 859 q 614 689 711 767 q 536 619 555 642 q 517 574 517 596 q 526 538 517 552 q 559 504 535 524 q 636 450 583 485 q 766 333 731 386 q 800 211 800 279 q 734 44 800 102 q 547 -14 669 -14 q 347 33 420 -14 l 347 138 q 443 95 390 111 q 545 79 496 79 q 690 203 690 79 q 662 290 690 254 q 559 374 634 326 q 441 471 473 429 q 408 570 408 513 q 432 648 408 612 q 503 720 455 684 q 576 789 554 759 q 597 856 597 820 q 551 939 597 910 q 419 968 505 968 q 232 817 232 968 l 232 0 l 119 0 l 119 815 q 194 999 119 936 q 419 1063 269 1063 q 635 1009 559 1063 q 711 859 711 956 z "},"à":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 456 842 l 381 842 q 277 942 337 877 q 189 1050 216 1007 l 189 1064 l 327 1064 q 387 956 349 1017 q 456 859 426 895 l 456 842 z "},"á":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 296 859 q 366 960 328 901 q 425 1064 404 1020 l 562 1064 l 562 1050 q 473 941 532 1006 q 371 842 414 877 l 296 842 l 296 859 z "},"â":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 155 857 q 275 993 241 949 q 326 1064 310 1036 l 438 1064 q 490 990 453 1036 q 612 857 527 945 l 612 842 l 531 842 q 381 968 471 879 q 233 842 289 877 l 155 842 l 155 857 z "},"ã":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 489 843 q 432 856 460 843 q 377 883 404 868 q 326 911 351 899 q 278 924 301 924 q 227 903 244 924 q 200 842 210 883 l 134 842 q 181 970 142 924 q 282 1017 220 1017 q 342 1004 313 1017 q 398 976 372 991 q 449 948 425 961 q 495 936 473 936 q 545 956 528 936 q 571 1018 561 976 l 638 1018 q 591 889 629 936 q 489 843 553 843 z "},"ä":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 189 945 q 207 996 189 980 q 250 1011 225 1011 q 295 996 276 1011 q 313 945 313 980 q 295 894 313 911 q 250 878 276 878 q 207 894 225 878 q 189 945 189 911 m 448 945 q 466 996 448 980 q 509 1011 484 1011 q 552 996 534 1011 q 571 945 571 980 q 552 894 571 911 q 509 878 534 878 q 466 894 484 878 q 448 945 448 911 z "},"å":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 545 989 q 504 882 545 922 q 393 842 462 842 q 283 881 324 842 q 243 987 243 921 q 284 1093 243 1054 q 393 1132 325 1132 q 503 1092 461 1132 q 545 989 545 1051 m 472 987 q 450 1046 472 1025 q 393 1067 427 1067 q 336 1046 358 1067 q 313 987 313 1025 q 334 929 313 949 q 393 908 354 908 q 450 929 428 908 q 472 987 472 949 z "},"æ":{"ha":1192,"x_min":64,"x_max":1120,"o":"m 64 205 q 148 375 64 315 q 404 441 232 436 l 529 446 l 529 492 q 490 621 529 579 q 370 663 450 663 q 161 606 272 663 l 126 692 q 244 738 176 720 q 378 755 311 755 q 522 726 466 755 q 606 632 578 696 q 700 724 642 692 q 832 757 758 757 q 1041 666 962 757 q 1120 425 1120 576 l 1120 353 l 644 353 q 863 85 650 85 q 978 97 924 85 q 1088 135 1031 109 l 1088 35 q 979 -2 1029 9 q 860 -14 928 -14 q 579 144 664 -14 q 457 22 524 58 q 300 -14 391 -14 q 126 44 189 -14 q 64 205 64 102 m 182 204 q 218 110 182 140 q 314 79 254 79 q 469 137 412 79 q 526 298 526 194 l 526 366 l 419 361 q 237 318 293 355 q 182 204 182 281 m 831 663 q 702 606 749 663 q 647 443 654 550 l 999 443 q 956 606 999 549 q 831 663 912 663 z "},"ç":{"ha":661,"x_min":78,"x_max":615,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 m 517 -196 q 465 -298 517 -262 q 311 -334 413 -334 q 246 -328 277 -334 l 246 -256 q 317 -261 277 -261 q 398 -248 370 -261 q 425 -197 425 -234 q 398 -150 425 -168 q 298 -121 372 -132 l 357 0 l 432 0 l 395 -78 q 517 -196 517 -104 z "},"è":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 482 842 l 408 842 q 303 942 363 877 q 216 1050 243 1007 l 216 1064 l 353 1064 q 414 956 375 1017 q 482 859 452 895 l 482 842 z "},"é":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 319 859 q 390 960 352 901 q 449 1064 427 1020 l 586 1064 l 586 1050 q 497 941 556 1006 q 395 842 438 877 l 319 842 l 319 859 z "},"ê":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 176 857 q 296 993 262 949 q 347 1064 331 1036 l 459 1064 q 511 990 474 1036 q 633 857 548 945 l 633 842 l 552 842 q 402 968 492 879 q 254 842 310 877 l 176 842 l 176 857 z "},"ë":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 216 945 q 234 996 216 980 q 277 1011 252 1011 q 322 996 303 1011 q 340 945 340 980 q 322 894 340 911 q 277 878 303 878 q 234 894 252 878 q 216 945 216 911 m 475 945 q 493 996 475 980 q 536 1011 511 1011 q 579 996 561 1011 q 598 945 598 980 q 579 894 598 911 q 536 878 561 878 q 493 894 511 878 q 475 945 475 911 z "},"ì":{"ha":351,"x_min":-26,"x_max":241,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 241 842 l 166 842 q 62 942 122 877 q -26 1050 1 1007 l -26 1064 l 112 1064 q 172 956 134 1017 q 241 859 211 895 l 241 842 z "},"í":{"ha":351,"x_min":115,"x_max":381,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 115 859 q 185 960 147 901 q 244 1064 222 1020 l 381 1064 l 381 1050 q 292 941 351 1006 q 190 842 233 877 l 115 842 l 115 859 z "},"î":{"ha":351,"x_min":-52,"x_max":405,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m -52 857 q 68 993 34 949 q 119 1064 103 1036 l 231 1064 q 283 990 246 1036 q 405 857 320 945 l 405 842 l 324 842 q 174 968 264 879 q 26 842 82 877 l -52 842 l -52 857 z "},"ï":{"ha":351,"x_min":-14,"x_max":368,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m -14 945 q 4 996 -14 980 q 47 1011 22 1011 q 92 996 73 1011 q 111 945 111 980 q 92 894 111 911 q 47 878 73 878 q 4 894 22 878 q -14 945 -14 911 m 245 945 q 263 996 245 980 q 306 1011 281 1011 q 350 996 331 1011 q 368 945 368 980 q 350 894 368 911 q 306 878 331 878 q 263 894 281 878 q 245 945 245 911 z "},"ð":{"ha":828,"x_min":77,"x_max":761,"o":"m 761 382 q 672 89 761 191 q 416 -14 584 -14 q 171 78 266 -14 q 77 322 77 169 q 166 567 77 478 q 404 656 255 656 q 625 574 557 656 l 631 576 q 453 851 592 722 l 269 746 l 220 819 l 378 909 q 252 985 315 951 l 298 1064 q 473 964 404 1015 l 635 1057 l 686 985 l 546 904 q 705 672 649 807 q 761 382 761 537 m 647 347 q 586 505 647 447 q 419 562 525 562 q 191 318 191 562 q 250 143 191 205 q 419 81 309 81 q 592 149 538 81 q 647 347 647 217 z "},"ñ":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 0 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 332 727 269 696 q 471 757 394 757 q 673 692 605 757 q 741 485 741 627 l 741 0 l 628 0 m 544 843 q 487 856 515 843 q 432 883 459 868 q 381 911 406 899 q 333 924 356 924 q 282 903 299 924 q 255 842 264 883 l 189 842 q 236 970 197 924 q 337 1017 275 1017 q 397 1004 368 1017 q 453 976 427 991 q 504 948 479 961 q 550 936 528 936 q 600 956 583 936 q 626 1018 616 976 l 693 1018 q 646 889 684 936 q 544 843 608 843 z "},"ò":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 503 842 l 429 842 q 324 942 385 877 q 237 1050 264 1007 l 237 1064 l 374 1064 q 435 956 396 1017 q 503 859 473 895 l 503 842 z "},"ó":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 325 859 q 395 960 357 901 q 454 1064 433 1020 l 591 1064 l 591 1050 q 503 941 562 1006 q 400 842 444 877 l 325 842 l 325 859 z "},"ô":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 191 857 q 312 993 277 949 q 362 1064 347 1036 l 475 1064 q 527 990 490 1036 q 648 857 564 945 l 648 842 l 568 842 q 418 968 508 879 q 269 842 326 877 l 191 842 l 191 857 z "},"õ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 524 843 q 467 856 495 843 q 413 883 439 868 q 361 911 386 899 q 313 924 336 924 q 262 903 279 924 q 235 842 245 883 l 169 842 q 217 970 178 924 q 317 1017 256 1017 q 378 1004 349 1017 q 433 976 407 991 q 484 948 460 961 q 530 936 509 936 q 580 956 564 936 q 606 1018 596 976 l 673 1018 q 626 889 665 936 q 524 843 588 843 z "},"ö":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 228 945 q 246 996 228 980 q 289 1011 264 1011 q 333 996 315 1011 q 352 945 352 980 q 333 894 352 911 q 289 878 315 878 q 246 894 264 878 q 228 945 228 911 m 486 945 q 504 996 486 980 q 547 1011 522 1011 q 591 996 572 1011 q 610 945 610 980 q 591 894 610 911 q 547 878 572 878 q 504 894 522 878 q 486 945 486 911 z "},"÷":{"ha":794,"x_min":71,"x_max":722,"o":"m 71 443 l 71 536 l 722 536 l 722 443 l 71 443 m 319 253 q 339 314 319 294 q 396 335 359 335 q 451 314 431 335 q 471 253 471 292 q 451 193 471 214 q 396 171 431 171 q 340 192 361 171 q 319 253 319 214 m 319 726 q 339 788 319 767 q 396 808 359 808 q 451 787 431 808 q 471 726 471 766 q 451 666 471 688 q 396 644 431 644 q 340 666 361 644 q 319 726 319 687 z "},"ø":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 236 33 312 -14 l 179 -46 l 102 7 l 165 96 q 78 372 78 199 q 169 655 78 554 q 421 757 260 757 q 604 705 526 757 l 661 786 l 741 734 l 675 644 q 761 372 761 541 m 195 372 q 231 187 195 256 l 546 625 q 418 661 495 661 q 251 589 307 661 q 195 372 195 516 m 644 372 q 610 551 644 484 l 294 115 q 419 81 342 81 q 587 155 530 81 q 644 372 644 229 z "},"ù":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 492 842 l 418 842 q 313 942 374 877 q 226 1050 253 1007 l 226 1064 l 363 1064 q 424 956 385 1017 q 492 859 463 895 l 492 842 z "},"ú":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 343 859 q 413 960 376 901 q 473 1064 451 1020 l 610 1064 l 610 1050 q 521 941 580 1006 q 418 842 462 877 l 343 842 l 343 859 z "},"û":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 194 857 q 315 993 280 949 q 365 1064 349 1036 l 477 1064 q 529 990 492 1036 q 651 857 566 945 l 651 842 l 570 842 q 420 968 511 879 q 272 842 328 877 l 194 842 l 194 857 z "},"ü":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 232 945 q 250 996 232 980 q 293 1011 268 1011 q 337 996 319 1011 q 356 945 356 980 q 337 894 356 911 q 293 878 319 878 q 250 894 268 878 q 232 945 232 911 m 490 945 q 508 996 490 980 q 551 1011 526 1011 q 595 996 576 1011 q 614 945 614 980 q 595 894 614 911 q 551 878 576 878 q 508 894 526 878 q 490 945 490 911 z "},"ý":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 279 859 q 349 960 311 901 q 408 1064 387 1020 l 545 1064 l 545 1050 q 456 941 515 1006 q 354 842 397 877 l 279 842 l 279 859 z "},"þ":{"ha":851,"x_min":119,"x_max":774,"o":"m 233 643 q 336 730 278 703 q 465 757 393 757 q 692 655 611 757 q 774 372 774 553 q 692 89 774 191 q 465 -14 610 -14 q 232 96 315 -14 l 224 96 l 227 73 q 232 -22 232 20 l 232 -334 l 119 -334 l 119 1055 l 232 1055 l 232 739 q 228 643 232 704 l 233 643 m 450 661 q 285 599 336 661 q 232 400 233 536 l 232 372 q 284 148 232 216 q 452 81 336 81 q 657 374 657 81 q 607 590 657 519 q 450 661 557 661 z "},"ÿ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 159 945 q 177 996 159 980 q 220 1011 195 1011 q 264 996 245 1011 q 283 945 283 980 q 264 894 283 911 q 220 878 245 878 q 177 894 195 878 q 159 945 159 911 m 417 945 q 435 996 417 980 q 478 1011 453 1011 q 522 996 503 1011 q 541 945 541 980 q 522 894 541 911 q 478 878 503 878 q 435 894 453 878 q 417 945 417 911 z "},"Ā":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 247 1164 l 654 1164 l 654 1071 l 247 1071 l 247 1164 z "},"ā":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 197 935 l 604 935 l 604 842 l 197 842 l 197 935 z "},"Ă":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 435 1071 q 287 1117 340 1071 q 228 1253 234 1164 l 298 1253 q 316 1200 302 1219 q 355 1173 330 1181 q 437 1164 380 1164 q 538 1185 506 1164 q 578 1253 571 1207 l 648 1253 q 585 1119 642 1167 q 435 1071 528 1071 z "},"ă":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 387 842 q 239 888 292 842 q 180 1023 186 935 l 250 1023 q 268 971 254 990 q 307 943 282 952 q 389 935 332 935 q 490 956 458 935 q 530 1023 523 978 l 600 1023 q 537 890 593 938 q 387 842 480 842 z "},"Ą":{"ha":879,"x_min":0,"x_max":880,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 750 -161 q 814 -225 750 -225 q 880 -216 842 -225 l 880 -290 q 795 -302 836 -302 q 654 -175 654 -302 q 684 -82 654 -127 q 762 0 713 -36 l 843 0 q 773 -82 797 -45 q 750 -161 750 -119 z "},"ą":{"ha":772,"x_min":64,"x_max":694,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 565 -161 q 629 -225 565 -225 q 694 -216 657 -225 l 694 -290 q 610 -302 650 -302 q 469 -175 469 -302 q 498 -82 469 -127 q 576 0 528 -36 l 658 0 q 588 -82 612 -45 q 565 -161 565 -119 z "},"Ć":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 m 446 1088 q 516 1190 478 1130 q 575 1293 553 1249 l 712 1293 l 712 1279 q 623 1171 682 1235 q 521 1071 564 1106 l 446 1071 l 446 1088 z "},"ć":{"ha":661,"x_min":78,"x_max":615,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 m 313 859 q 383 960 345 901 q 442 1064 420 1020 l 579 1064 l 579 1050 q 490 941 549 1006 q 388 842 431 877 l 313 842 l 313 859 z "},"Ĉ":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 m 298 1086 q 419 1222 385 1179 q 469 1293 454 1265 l 582 1293 q 634 1220 597 1265 q 755 1086 671 1175 l 755 1071 l 675 1071 q 525 1197 615 1108 q 376 1071 433 1106 l 298 1071 l 298 1086 z "},"ĉ":{"ha":661,"x_min":78,"x_max":615,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 m 152 857 q 273 993 238 949 q 323 1064 307 1036 l 435 1064 q 487 990 450 1036 q 609 857 524 945 l 609 842 l 528 842 q 378 968 469 879 q 230 842 286 877 l 152 842 l 152 857 z "},"Ċ":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 m 475 1174 q 494 1231 475 1213 q 542 1249 513 1249 q 589 1230 569 1249 q 608 1174 608 1212 q 589 1117 608 1136 q 542 1099 569 1099 q 494 1117 513 1099 q 475 1174 475 1136 z "},"ċ":{"ha":661,"x_min":78,"x_max":615,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 m 338 945 q 357 1001 338 983 q 404 1019 376 1019 q 451 1001 431 1019 q 471 945 471 983 q 451 888 471 907 q 404 869 431 869 q 357 888 376 869 q 338 945 338 907 z "},"Č":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 m 313 1293 l 391 1293 q 539 1165 468 1243 q 689 1293 627 1253 l 770 1293 l 770 1276 l 725 1230 q 596 1071 627 1130 l 484 1071 q 433 1141 468 1099 q 313 1276 399 1184 l 313 1293 z "},"č":{"ha":661,"x_min":78,"x_max":630,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 m 173 1064 l 251 1064 q 399 936 328 1014 q 549 1064 488 1024 l 630 1064 l 630 1047 l 585 1001 q 456 842 488 901 l 344 842 q 294 912 328 869 q 173 1047 259 955 l 173 1064 z "},"Ď":{"ha":1013,"x_min":136,"x_max":928,"o":"m 928 505 q 794 130 928 260 q 411 0 661 0 l 136 0 l 136 991 l 440 991 q 800 863 671 991 q 928 505 928 735 m 806 501 q 708 793 806 695 q 419 892 611 892 l 252 892 l 252 100 l 392 100 q 702 201 598 100 q 806 501 806 302 m 241 1293 l 319 1293 q 468 1165 397 1243 q 618 1293 556 1253 l 699 1293 l 699 1276 l 654 1230 q 525 1071 556 1130 l 412 1071 q 362 1141 397 1099 q 241 1276 328 1184 l 241 1293 z "},"ď":{"ha":851,"x_min":78,"x_max":956,"o":"m 625 100 l 619 100 q 386 -14 541 -14 q 159 86 240 -14 q 78 370 78 186 q 159 655 78 553 q 386 757 241 757 q 618 647 537 757 l 627 647 l 622 701 l 619 753 l 619 1055 l 732 1055 l 732 0 l 640 0 l 625 100 m 400 81 q 567 143 515 81 q 619 346 619 206 l 619 370 q 567 595 619 528 q 399 663 514 663 q 247 586 300 663 q 195 368 195 509 q 247 153 195 226 q 400 81 299 81 m 795 850 q 822 944 808 887 q 842 1055 835 1000 l 956 1055 l 956 1043 q 918 945 948 1008 q 857 833 888 881 l 795 833 l 795 850 z "},"Đ":{"ha":1003,"x_min":32,"x_max":917,"o":"m 917 505 q 784 130 917 260 q 400 0 650 0 l 136 0 l 136 440 l 32 440 l 32 542 l 136 542 l 136 991 l 431 991 q 788 864 659 991 q 917 505 917 737 m 794 501 q 408 892 794 892 l 252 892 l 252 542 l 509 542 l 509 440 l 252 440 l 252 100 l 380 100 q 794 501 794 100 z "},"đ":{"ha":851,"x_min":78,"x_max":838,"o":"m 625 100 l 619 100 q 386 -14 541 -14 q 159 86 240 -14 q 78 370 78 186 q 159 655 78 553 q 386 757 241 757 q 618 647 537 757 l 627 647 q 619 753 619 703 l 619 843 l 315 843 l 315 930 l 619 930 l 619 1055 l 732 1055 l 732 930 l 838 930 l 838 843 l 732 843 l 732 0 l 640 0 l 625 100 m 400 81 q 567 143 515 81 q 619 346 619 206 l 619 370 q 567 595 619 528 q 399 663 514 663 q 247 586 300 663 q 195 368 195 509 q 247 153 195 226 q 400 81 299 81 z "},"Ē":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 216 1164 l 623 1164 l 623 1071 l 216 1071 l 216 1164 z "},"ē":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 211 935 l 618 935 l 618 842 l 211 842 l 211 935 z "},"Ĕ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 416 1071 q 269 1117 321 1071 q 210 1253 216 1164 l 280 1253 q 298 1200 284 1219 q 337 1173 312 1181 q 419 1164 361 1164 q 520 1185 488 1164 q 559 1253 553 1207 l 630 1253 q 567 1119 623 1167 q 416 1071 510 1071 z "},"ĕ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 402 842 q 254 888 307 842 q 195 1023 201 935 l 266 1023 q 284 971 270 990 q 322 943 298 952 q 405 935 347 935 q 506 956 473 935 q 545 1023 538 978 l 616 1023 q 552 890 609 938 q 402 842 496 842 z "},"Ė":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 359 1154 q 378 1211 359 1193 q 425 1229 397 1229 q 472 1211 452 1229 q 492 1154 492 1192 q 472 1098 492 1116 q 425 1079 452 1079 q 378 1098 397 1079 q 359 1154 359 1116 z "},"ė":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 340 945 q 359 1001 340 983 q 407 1019 378 1019 q 454 1001 434 1019 q 473 945 473 983 q 454 888 473 907 q 407 869 434 869 q 359 888 378 869 q 340 945 340 907 z "},"Ę":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 546 -161 q 610 -225 546 -225 q 675 -216 638 -225 l 675 -290 q 591 -302 631 -302 q 450 -175 450 -302 q 479 -82 450 -127 q 557 0 509 -36 l 639 0 q 569 -82 593 -45 q 546 -161 546 -119 z "},"ę":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 537 -140 q 601 -204 537 -204 q 667 -195 629 -204 l 667 -269 q 582 -281 623 -281 q 441 -154 441 -281 q 471 -61 441 -106 q 549 21 500 -15 l 630 21 q 561 -61 584 -24 q 537 -140 537 -98 z "},"Ě":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 193 1293 l 271 1293 q 419 1165 348 1243 q 569 1293 507 1253 l 650 1293 l 650 1276 l 605 1230 q 476 1071 507 1130 l 363 1071 q 313 1141 348 1099 q 193 1276 279 1184 l 193 1293 z "},"ě":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 178 1064 l 256 1064 q 405 936 334 1014 q 555 1064 493 1024 l 635 1064 l 635 1047 l 591 1001 q 462 842 493 901 l 349 842 q 299 912 334 869 q 178 1047 264 955 l 178 1064 z "},"Ĝ":{"ha":1011,"x_min":85,"x_max":909,"o":"m 572 519 l 909 519 l 909 37 q 749 -1 831 12 q 561 -14 668 -14 q 210 120 336 -14 q 85 496 85 254 q 147 767 85 650 q 326 944 209 883 q 599 1006 442 1006 q 895 947 758 1006 l 850 846 q 591 903 715 903 q 309 795 410 903 q 207 496 207 687 q 305 191 207 295 q 593 87 403 87 q 794 111 696 87 l 794 416 l 572 416 l 572 519 m 340 1086 q 460 1222 426 1179 q 511 1293 495 1265 l 623 1293 q 675 1220 638 1265 q 797 1086 712 1175 l 797 1071 l 716 1071 q 566 1197 656 1108 q 418 1071 474 1106 l 340 1071 l 340 1086 z "},"ĝ":{"ha":761,"x_min":26,"x_max":728,"o":"m 728 743 l 728 672 l 590 656 q 624 594 609 632 q 639 507 639 555 q 564 333 639 398 q 359 268 490 268 q 297 273 326 268 q 225 178 225 235 q 250 133 225 147 q 336 118 275 118 l 468 118 q 653 67 589 118 q 718 -81 718 16 q 619 -269 718 -204 q 330 -334 520 -334 q 105 -279 184 -334 q 26 -126 26 -225 q 70 -9 26 -58 q 192 58 113 41 q 144 98 163 71 q 125 161 125 125 q 146 233 125 202 q 215 292 168 263 q 121 372 157 315 q 85 503 85 429 q 158 691 85 625 q 366 757 231 757 q 471 743 424 757 l 728 743 m 135 -125 q 186 -216 135 -185 q 332 -248 237 -248 q 542 -205 473 -248 q 610 -90 610 -163 q 572 -6 610 -30 q 432 17 535 17 l 297 17 q 178 -20 220 17 q 135 -125 135 -56 m 196 505 q 240 387 196 427 q 363 347 284 347 q 528 507 528 347 q 361 675 528 675 q 239 632 281 675 q 196 505 196 589 m 145 857 q 266 993 231 949 q 316 1064 300 1036 l 429 1064 q 480 990 444 1036 q 602 857 517 945 l 602 842 l 522 842 q 372 968 462 879 q 223 842 279 877 l 145 842 l 145 857 z "},"Ğ":{"ha":1011,"x_min":85,"x_max":909,"o":"m 572 519 l 909 519 l 909 37 q 749 -1 831 12 q 561 -14 668 -14 q 210 120 336 -14 q 85 496 85 254 q 147 767 85 650 q 326 944 209 883 q 599 1006 442 1006 q 895 947 758 1006 l 850 846 q 591 903 715 903 q 309 795 410 903 q 207 496 207 687 q 305 191 207 295 q 593 87 403 87 q 794 111 696 87 l 794 416 l 572 416 l 572 519 m 579 1071 q 431 1117 484 1071 q 372 1253 378 1164 l 443 1253 q 461 1200 447 1219 q 499 1173 475 1181 q 582 1164 524 1164 q 683 1185 650 1164 q 722 1253 715 1207 l 793 1253 q 729 1119 786 1167 q 579 1071 673 1071 z "},"ğ":{"ha":761,"x_min":26,"x_max":728,"o":"m 728 743 l 728 672 l 590 656 q 624 594 609 632 q 639 507 639 555 q 564 333 639 398 q 359 268 490 268 q 297 273 326 268 q 225 178 225 235 q 250 133 225 147 q 336 118 275 118 l 468 118 q 653 67 589 118 q 718 -81 718 16 q 619 -269 718 -204 q 330 -334 520 -334 q 105 -279 184 -334 q 26 -126 26 -225 q 70 -9 26 -58 q 192 58 113 41 q 144 98 163 71 q 125 161 125 125 q 146 233 125 202 q 215 292 168 263 q 121 372 157 315 q 85 503 85 429 q 158 691 85 625 q 366 757 231 757 q 471 743 424 757 l 728 743 m 135 -125 q 186 -216 135 -185 q 332 -248 237 -248 q 542 -205 473 -248 q 610 -90 610 -163 q 572 -6 610 -30 q 432 17 535 17 l 297 17 q 178 -20 220 17 q 135 -125 135 -56 m 196 505 q 240 387 196 427 q 363 347 284 347 q 528 507 528 347 q 361 675 528 675 q 239 632 281 675 q 196 505 196 589 m 372 842 q 224 888 277 842 q 165 1023 171 935 l 235 1023 q 253 971 239 990 q 292 943 267 952 q 374 935 317 935 q 475 956 443 935 q 515 1023 508 978 l 585 1023 q 522 890 578 938 q 372 842 465 842 z "},"Ġ":{"ha":1011,"x_min":85,"x_max":909,"o":"m 572 519 l 909 519 l 909 37 q 749 -1 831 12 q 561 -14 668 -14 q 210 120 336 -14 q 85 496 85 254 q 147 767 85 650 q 326 944 209 883 q 599 1006 442 1006 q 895 947 758 1006 l 850 846 q 591 903 715 903 q 309 795 410 903 q 207 496 207 687 q 305 191 207 295 q 593 87 403 87 q 794 111 696 87 l 794 416 l 572 416 l 572 519 m 525 1174 q 544 1231 525 1213 q 591 1249 563 1249 q 638 1230 618 1249 q 658 1174 658 1212 q 638 1117 658 1136 q 591 1099 618 1099 q 544 1117 563 1099 q 525 1174 525 1136 z "},"ġ":{"ha":761,"x_min":26,"x_max":728,"o":"m 728 743 l 728 672 l 590 656 q 624 594 609 632 q 639 507 639 555 q 564 333 639 398 q 359 268 490 268 q 297 273 326 268 q 225 178 225 235 q 250 133 225 147 q 336 118 275 118 l 468 118 q 653 67 589 118 q 718 -81 718 16 q 619 -269 718 -204 q 330 -334 520 -334 q 105 -279 184 -334 q 26 -126 26 -225 q 70 -9 26 -58 q 192 58 113 41 q 144 98 163 71 q 125 161 125 125 q 146 233 125 202 q 215 292 168 263 q 121 372 157 315 q 85 503 85 429 q 158 691 85 625 q 366 757 231 757 q 471 743 424 757 l 728 743 m 135 -125 q 186 -216 135 -185 q 332 -248 237 -248 q 542 -205 473 -248 q 610 -90 610 -163 q 572 -6 610 -30 q 432 17 535 17 l 297 17 q 178 -20 220 17 q 135 -125 135 -56 m 196 505 q 240 387 196 427 q 363 347 284 347 q 528 507 528 347 q 361 675 528 675 q 239 632 281 675 q 196 505 196 589 m 304 945 q 323 1001 304 983 q 371 1019 342 1019 q 418 1001 398 1019 q 437 945 437 983 q 418 888 437 907 q 371 869 398 869 q 323 888 342 869 q 304 945 304 907 z "},"Ģ":{"ha":1011,"x_min":85,"x_max":909,"o":"m 572 519 l 909 519 l 909 37 q 749 -1 831 12 q 561 -14 668 -14 q 210 120 336 -14 q 85 496 85 254 q 147 767 85 650 q 326 944 209 883 q 599 1006 442 1006 q 895 947 758 1006 l 850 846 q 591 903 715 903 q 309 795 410 903 q 207 496 207 687 q 305 191 207 295 q 593 87 403 87 q 794 111 696 87 l 794 416 l 572 416 l 572 519 m 450 -290 q 487 -184 469 -247 q 509 -85 504 -121 l 623 -85 l 623 -97 q 582 -197 615 -132 q 511 -307 549 -262 l 450 -307 l 450 -290 z "},"ģ":{"ha":761,"x_min":26,"x_max":728,"o":"m 728 743 l 728 672 l 590 656 q 624 594 609 632 q 639 507 639 555 q 564 333 639 398 q 359 268 490 268 q 297 273 326 268 q 225 178 225 235 q 250 133 225 147 q 336 118 275 118 l 468 118 q 653 67 589 118 q 718 -81 718 16 q 619 -269 718 -204 q 330 -334 520 -334 q 105 -279 184 -334 q 26 -126 26 -225 q 70 -9 26 -58 q 192 58 113 41 q 144 98 163 71 q 125 161 125 125 q 146 233 125 202 q 215 292 168 263 q 121 372 157 315 q 85 503 85 429 q 158 691 85 625 q 366 757 231 757 q 471 743 424 757 l 728 743 m 135 -125 q 186 -216 135 -185 q 332 -248 237 -248 q 542 -205 473 -248 q 610 -90 610 -163 q 572 -6 610 -30 q 432 17 535 17 l 297 17 q 178 -20 220 17 q 135 -125 135 -56 m 196 505 q 240 387 196 427 q 363 347 284 347 q 528 507 528 347 q 361 675 528 675 q 239 632 281 675 q 196 505 196 589 m 479 1047 q 442 940 460 1006 q 420 842 424 875 l 307 842 l 307 854 q 350 961 317 896 q 417 1064 384 1025 l 479 1064 l 479 1047 z "},"Ĥ":{"ha":1025,"x_min":136,"x_max":889,"o":"m 889 0 l 774 0 l 774 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 774 570 l 774 991 l 889 991 l 889 0 m 283 1086 q 404 1222 370 1179 q 454 1293 439 1265 l 567 1293 q 619 1220 582 1265 q 741 1086 656 1175 l 741 1071 l 660 1071 q 510 1197 600 1108 q 361 1071 418 1106 l 283 1071 l 283 1086 z "},"ĥ":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 0 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 597 340 661 q 232 389 232 534 l 232 0 l 119 0 l 119 1055 l 232 1055 l 232 736 q 227 640 232 678 l 233 640 q 328 725 267 694 q 468 755 389 755 q 672 691 604 755 q 741 485 741 626 l 741 0 l 628 0 m 203 1124 q 323 1259 289 1216 q 374 1331 358 1303 l 486 1331 q 538 1257 501 1302 q 660 1124 575 1212 l 660 1108 l 579 1108 q 429 1234 519 1145 q 281 1108 337 1143 l 203 1108 l 203 1124 z "},"Ħ":{"ha":1025,"x_min":0,"x_max":1025,"o":"m 136 823 l 136 991 l 252 991 l 252 823 l 774 823 l 774 991 l 889 991 l 889 823 l 1025 823 l 1025 728 l 889 728 l 889 0 l 774 0 l 774 467 l 252 467 l 252 0 l 136 0 l 136 728 l 0 728 l 0 823 l 136 823 m 774 570 l 774 728 l 252 728 l 252 570 l 774 570 z "},"ħ":{"ha":852,"x_min":14,"x_max":741,"o":"m 628 0 l 628 454 q 587 590 628 545 q 457 635 545 635 q 286 572 339 635 q 232 364 232 509 l 232 0 l 119 0 l 119 843 l 14 843 l 14 929 l 119 929 l 119 1055 l 232 1055 l 232 929 l 536 929 l 536 843 l 232 843 l 232 710 q 227 615 232 653 l 233 615 q 328 700 267 669 q 468 730 389 730 q 672 666 604 730 q 741 458 741 601 l 741 0 l 628 0 z "},"ĩ":{"ha":351,"x_min":-76,"x_max":429,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 279 843 q 222 856 250 843 q 168 883 195 868 q 116 911 141 899 q 68 924 92 924 q 17 903 35 924 q -9 842 0 883 l -76 842 q -28 970 -67 924 q 73 1017 11 1017 q 133 1004 104 1017 q 189 976 162 991 q 239 948 215 961 q 286 936 264 936 q 335 956 319 936 q 361 1018 351 976 l 429 1018 q 381 889 420 936 q 279 843 343 843 z "},"ī":{"ha":351,"x_min":-26,"x_max":381,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m -26 935 l 381 935 l 381 842 l -26 842 l -26 935 z "},"ĭ":{"ha":351,"x_min":-35,"x_max":385,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 172 842 q 24 888 77 842 q -35 1023 -29 935 l 35 1023 q 53 971 39 990 q 92 943 67 952 q 174 935 117 935 q 275 956 243 935 q 315 1023 308 978 l 385 1023 q 322 890 378 938 q 172 842 265 842 z "},"į":{"ha":351,"x_min":36,"x_max":261,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 m 132 -161 q 195 -225 132 -225 q 261 -216 224 -225 l 261 -290 q 176 -302 217 -302 q 36 -175 36 -302 q 65 -82 36 -127 q 143 0 94 -36 l 224 0 q 155 -82 178 -45 q 132 -161 132 -119 z "},"ı":{"ha":351,"x_min":119,"x_max":232,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 z "},"ĳ":{"ha":703,"x_min":110,"x_max":594,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 m 380 -334 q 276 -317 316 -334 l 276 -225 q 368 -239 323 -239 q 446 -210 421 -239 q 471 -122 471 -181 l 471 743 l 583 743 l 583 -114 q 380 -334 583 -334 m 461 945 q 480 1001 461 983 q 528 1019 499 1019 q 574 1001 555 1019 q 594 945 594 983 q 574 888 594 907 q 528 869 555 869 q 480 888 499 869 q 461 945 461 907 z "},"Ĵ":{"ha":371,"x_min":-109,"x_max":416,"o":"m -8 -261 q -109 -243 -72 -261 l -109 -144 q -8 -158 -60 -158 q 94 -117 59 -158 q 129 0 129 -77 l 129 991 l 244 991 l 244 9 q 179 -190 244 -119 q -8 -261 114 -261 m -41 1086 q 79 1222 45 1179 q 130 1293 114 1265 l 242 1293 q 294 1220 257 1265 q 416 1086 331 1175 l 416 1071 l 335 1071 q 185 1197 275 1108 q 37 1071 93 1106 l -41 1071 l -41 1086 z "},"ĵ":{"ha":351,"x_min":-75,"x_max":401,"o":"m 29 -334 q -75 -317 -35 -334 l -75 -225 q 17 -239 -28 -239 q 95 -210 70 -239 q 119 -122 119 -181 l 119 743 l 232 743 l 232 -114 q 29 -334 232 -334 m -56 857 q 64 993 30 949 q 115 1064 99 1036 l 227 1064 q 279 990 242 1036 q 401 857 316 945 l 401 842 l 320 842 q 170 968 260 879 q 22 842 78 877 l -56 842 l -56 857 z "},"Ķ":{"ha":852,"x_min":136,"x_max":852,"o":"m 852 0 l 717 0 l 355 481 l 252 389 l 252 0 l 136 0 l 136 991 l 252 991 l 252 500 l 701 991 l 838 991 l 439 561 l 852 0 m 343 -290 q 379 -184 362 -247 q 401 -85 397 -121 l 515 -85 l 515 -97 q 475 -197 508 -132 q 404 -307 441 -262 l 343 -307 l 343 -290 z "},"ķ":{"ha":729,"x_min":119,"x_max":714,"o":"m 231 380 q 319 489 260 422 l 559 743 l 693 743 l 392 427 l 714 0 l 578 0 l 315 351 l 231 278 l 231 0 l 119 0 l 119 1055 l 231 1055 l 231 496 q 225 380 231 458 l 231 380 m 279 -290 q 316 -184 298 -247 q 338 -85 333 -121 l 452 -85 l 452 -97 q 411 -197 444 -132 q 340 -307 378 -262 l 279 -307 l 279 -290 z "},"ĸ":{"ha":720,"x_min":119,"x_max":713,"o":"m 553 742 l 693 742 l 412 415 l 713 0 l 576 0 l 332 342 l 240 265 l 240 0 l 119 0 l 119 742 l 240 742 l 240 550 q 232 361 240 437 l 553 742 z "},"Ĺ":{"ha":721,"x_min":136,"x_max":689,"o":"m 136 0 l 136 991 l 252 991 l 252 104 l 689 104 l 689 0 l 136 0 m 160 1088 q 230 1190 193 1130 q 290 1293 268 1249 l 427 1293 l 427 1279 q 338 1171 397 1235 q 235 1071 279 1106 l 160 1071 l 160 1088 z "},"ĺ":{"ha":351,"x_min":111,"x_max":377,"o":"m 232 0 l 119 0 l 119 1055 l 232 1055 l 232 0 m 111 1126 q 181 1228 143 1168 q 240 1332 218 1288 l 377 1332 l 377 1318 q 288 1209 347 1274 q 186 1109 229 1145 l 111 1109 l 111 1126 z "},"Ļ":{"ha":721,"x_min":136,"x_max":689,"o":"m 136 0 l 136 991 l 252 991 l 252 104 l 689 104 l 689 0 l 136 0 m 283 -290 q 320 -184 302 -247 q 342 -85 337 -121 l 456 -85 l 456 -97 q 415 -197 448 -132 q 345 -307 382 -262 l 283 -307 l 283 -290 z "},"ļ":{"ha":351,"x_min":60,"x_max":233,"o":"m 232 0 l 119 0 l 119 1055 l 232 1055 l 232 0 m 60 -290 q 97 -184 79 -247 q 119 -85 114 -121 l 233 -85 l 233 -97 q 192 -197 225 -132 q 121 -307 159 -262 l 60 -307 l 60 -290 z "},"Ľ":{"ha":721,"x_min":136,"x_max":689,"o":"m 136 0 l 136 991 l 252 991 l 252 104 l 689 104 l 689 0 l 136 0 m 460 787 q 486 881 473 824 q 506 992 499 937 l 620 992 l 620 980 q 583 882 612 945 q 521 770 553 818 l 460 770 l 460 787 z "},"ľ":{"ha":351,"x_min":119,"x_max":456,"o":"m 232 0 l 119 0 l 119 1055 l 232 1055 l 232 0 m 296 850 q 322 944 309 887 q 342 1055 335 1000 l 456 1055 l 456 1043 q 418 945 448 1008 q 357 833 389 881 l 296 833 l 296 850 z "},"Ŀ":{"ha":721,"x_min":136,"x_max":689,"o":"m 136 0 l 136 991 l 252 991 l 252 104 l 689 104 l 689 0 l 136 0 m 460 494 q 479 550 460 532 q 526 568 498 568 q 573 550 553 568 q 593 494 593 532 q 573 437 593 456 q 526 418 553 418 q 479 437 498 418 q 460 494 460 456 z "},"ŀ":{"ha":436,"x_min":119,"x_max":461,"o":"m 232 0 l 119 0 l 119 1055 l 232 1055 l 232 0 m 328 462 q 347 518 328 500 q 395 536 366 536 q 441 518 422 536 q 461 462 461 500 q 441 405 461 424 q 395 387 422 387 q 347 405 366 387 q 328 462 328 424 z "},"Ł":{"ha":726,"x_min":20,"x_max":689,"o":"m 136 0 l 136 345 l 65 304 l 20 382 l 136 450 l 136 991 l 252 991 l 252 518 l 453 636 l 498 554 l 252 411 l 252 104 l 689 104 l 689 0 l 136 0 z "},"ł":{"ha":363,"x_min":-3,"x_max":374,"o":"m 232 586 l 325 650 l 374 574 l 232 478 l 232 0 l 119 0 l 119 404 l 45 355 l -3 432 l 119 513 l 119 1055 l 232 1055 l 232 586 z "},"Ń":{"ha":1047,"x_min":136,"x_max":911,"o":"m 911 0 l 779 0 l 237 832 l 232 832 q 243 564 243 686 l 243 0 l 136 0 l 136 991 l 267 991 l 807 163 l 812 163 q 806 280 811 181 q 803 422 802 380 l 803 991 l 911 991 l 911 0 m 441 1088 q 512 1190 474 1130 q 571 1293 549 1249 l 708 1293 l 708 1279 q 619 1171 678 1235 q 517 1071 560 1106 l 441 1071 l 441 1088 z "},"ń":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 0 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 332 727 269 696 q 471 757 394 757 q 673 692 605 757 q 741 485 741 627 l 741 0 l 628 0 m 349 859 q 419 960 381 901 q 478 1064 456 1020 l 615 1064 l 615 1050 q 526 941 585 1006 q 424 842 467 877 l 349 842 l 349 859 z "},"Ņ":{"ha":1047,"x_min":136,"x_max":911,"o":"m 911 0 l 779 0 l 237 832 l 232 832 q 243 564 243 686 l 243 0 l 136 0 l 136 991 l 267 991 l 807 163 l 812 163 q 806 280 811 181 q 803 422 802 380 l 803 991 l 911 991 l 911 0 m 389 -290 q 426 -184 408 -247 q 448 -85 443 -121 l 562 -85 l 562 -97 q 521 -197 554 -132 q 450 -307 488 -262 l 389 -307 l 389 -290 z "},"ņ":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 0 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 332 727 269 696 q 471 757 394 757 q 673 692 605 757 q 741 485 741 627 l 741 0 l 628 0 m 309 -290 q 345 -184 328 -247 q 367 -85 362 -121 l 481 -85 l 481 -97 q 440 -197 473 -132 q 370 -307 407 -262 l 309 -307 l 309 -290 z "},"Ň":{"ha":1047,"x_min":136,"x_max":911,"o":"m 911 0 l 779 0 l 237 832 l 232 832 q 243 564 243 686 l 243 0 l 136 0 l 136 991 l 267 991 l 807 163 l 812 163 q 806 280 811 181 q 803 422 802 380 l 803 991 l 911 991 l 911 0 m 294 1293 l 372 1293 q 521 1165 450 1243 q 671 1293 609 1253 l 751 1293 l 751 1276 l 707 1230 q 578 1071 609 1130 l 465 1071 q 415 1141 450 1099 q 294 1276 380 1184 l 294 1293 z "},"ň":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 0 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 332 727 269 696 q 471 757 394 757 q 673 692 605 757 q 741 485 741 627 l 741 0 l 628 0 m 203 1064 l 281 1064 q 429 936 358 1014 q 579 1064 517 1024 l 660 1064 l 660 1047 l 615 1001 q 486 842 517 901 l 374 842 q 323 912 358 869 q 203 1047 289 955 l 203 1064 z "},"ŉ":{"ha":946,"x_min":1,"x_max":832,"o":"m 720 0 l 720 481 q 678 616 720 572 q 549 661 637 661 q 378 598 432 661 q 323 390 323 535 l 323 0 l 211 0 l 211 743 l 302 743 l 321 642 l 326 642 q 423 727 361 696 q 562 757 486 757 q 764 692 696 757 q 832 485 832 627 l 832 0 l 720 0 m 193 991 l 203 977 q 153 819 186 909 q 83 652 119 729 l 1 652 q 70 991 48 845 l 193 991 z "},"Ŋ":{"ha":1047,"x_min":136,"x_max":911,"o":"m 657 -261 q 554 -243 591 -261 l 554 -144 q 659 -158 602 -158 q 766 -117 730 -158 q 802 0 802 -75 l 237 832 l 232 832 q 243 546 243 653 l 243 0 l 136 0 l 136 991 l 267 991 l 807 176 l 812 176 q 803 429 803 277 l 803 991 l 911 991 l 911 9 q 845 -192 911 -123 q 657 -261 780 -261 z "},"ŋ":{"ha":852,"x_min":119,"x_max":741,"o":"m 546 -334 q 450 -317 488 -334 l 450 -225 q 533 -239 491 -239 q 628 -122 628 -239 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 236 642 q 332 727 271 697 q 468 757 393 757 q 673 692 606 757 q 741 485 741 627 l 741 -114 q 693 -276 741 -218 q 546 -334 646 -334 z "},"Ō":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 339 1164 l 746 1164 l 746 1071 l 339 1071 l 339 1164 z "},"ō":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 216 935 l 623 935 l 623 842 l 216 842 l 216 935 z "},"Ŏ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 536 1071 q 389 1117 441 1071 q 330 1253 336 1164 l 400 1253 q 418 1200 404 1219 q 457 1173 432 1181 q 539 1164 481 1164 q 640 1185 608 1164 q 680 1253 673 1207 l 750 1253 q 687 1119 743 1167 q 536 1071 630 1071 z "},"ŏ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 415 842 q 267 888 320 842 q 208 1023 214 935 l 279 1023 q 297 971 283 990 q 335 943 311 952 q 418 935 360 935 q 519 956 486 935 q 558 1023 551 978 l 629 1023 q 565 890 622 938 q 415 842 509 842 z "},"Ő":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 344 1088 q 406 1183 368 1120 q 464 1293 443 1246 l 590 1293 l 590 1279 q 507 1170 565 1236 q 410 1071 449 1103 l 344 1071 l 344 1088 m 586 1088 q 653 1194 619 1134 q 705 1293 688 1254 l 831 1293 l 831 1279 q 748 1170 806 1236 q 651 1071 690 1103 l 586 1071 l 586 1088 z "},"ő":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 218 859 q 279 954 242 891 q 338 1064 317 1017 l 464 1064 l 464 1050 q 381 941 439 1007 q 283 842 323 874 l 218 842 l 218 859 m 460 859 q 527 965 493 905 q 579 1064 562 1025 l 705 1064 l 705 1050 q 622 941 680 1007 q 525 842 564 874 l 460 842 l 460 859 z "},"Œ":{"ha":1282,"x_min":85,"x_max":1198,"o":"m 1198 0 l 677 0 q 546 -14 608 -14 q 204 120 324 -14 q 85 498 85 253 q 203 875 85 743 q 538 1007 321 1007 q 668 991 607 1007 l 1198 991 l 1198 889 l 799 889 l 799 570 l 1173 570 l 1173 468 l 799 468 l 799 103 l 1198 103 l 1198 0 m 550 904 q 294 801 381 904 q 207 497 207 697 q 294 192 207 296 q 549 87 381 87 q 684 110 625 87 l 684 884 q 550 904 625 904 z "},"œ":{"ha":1308,"x_min":77,"x_max":1236,"o":"m 970 -14 q 686 146 771 -14 q 573 27 644 67 q 410 -14 503 -14 q 168 90 258 -14 q 77 372 77 193 q 165 654 77 552 q 414 755 254 755 q 572 715 503 755 q 684 597 642 675 q 788 714 723 673 q 939 755 853 755 q 1156 666 1075 755 q 1236 422 1236 576 l 1236 351 l 742 351 q 971 85 747 85 q 1089 97 1035 85 q 1203 135 1144 109 l 1203 35 q 1092 -3 1143 8 q 970 -14 1040 -14 m 195 372 q 246 155 195 229 q 411 81 298 81 q 573 153 522 81 q 625 367 625 225 q 573 589 625 517 q 408 661 520 661 q 245 588 296 661 q 195 372 195 515 m 937 661 q 802 606 851 661 q 745 443 753 550 l 1114 443 q 1069 606 1114 550 q 937 661 1024 661 z "},"Ŕ":{"ha":859,"x_min":136,"x_max":835,"o":"m 252 412 l 252 0 l 136 0 l 136 991 l 408 991 q 678 922 591 991 q 765 711 765 852 q 566 446 765 515 l 835 0 l 699 0 l 458 412 l 252 412 m 252 511 l 410 511 q 589 560 532 511 q 646 705 646 608 q 588 847 646 804 q 401 890 530 890 l 252 890 l 252 511 m 349 1088 q 419 1190 381 1130 q 478 1293 456 1249 l 615 1293 l 615 1279 q 526 1171 585 1235 q 424 1071 467 1106 l 349 1071 l 349 1088 z "},"ŕ":{"ha":567,"x_min":119,"x_max":547,"o":"m 458 757 q 547 749 508 757 l 532 644 q 450 654 486 654 q 296 581 360 654 q 232 399 232 508 l 232 0 l 119 0 l 119 743 l 212 743 l 225 606 l 231 606 q 330 718 272 678 q 458 757 389 757 m 242 859 q 312 960 275 901 q 372 1064 350 1020 l 509 1064 l 509 1050 q 420 941 479 1006 q 317 842 361 877 l 242 842 l 242 859 z "},"Ŗ":{"ha":859,"x_min":136,"x_max":835,"o":"m 252 412 l 252 0 l 136 0 l 136 991 l 408 991 q 678 922 591 991 q 765 711 765 852 q 566 446 765 515 l 835 0 l 699 0 l 458 412 l 252 412 m 252 511 l 410 511 q 589 560 532 511 q 646 705 646 608 q 588 847 646 804 q 401 890 530 890 l 252 890 l 252 511 m 335 -290 q 371 -184 354 -247 q 393 -85 389 -121 l 507 -85 l 507 -97 q 467 -197 500 -132 q 396 -307 433 -262 l 335 -307 l 335 -290 z "},"ŗ":{"ha":567,"x_min":65,"x_max":547,"o":"m 458 757 q 547 749 508 757 l 532 644 q 450 654 486 654 q 296 581 360 654 q 232 399 232 508 l 232 0 l 119 0 l 119 743 l 212 743 l 225 606 l 231 606 q 330 718 272 678 q 458 757 389 757 m 65 -290 q 101 -184 84 -247 q 123 -85 119 -121 l 237 -85 l 237 -97 q 197 -197 230 -132 q 126 -307 163 -262 l 65 -307 l 65 -290 z "},"Ř":{"ha":859,"x_min":136,"x_max":835,"o":"m 252 412 l 252 0 l 136 0 l 136 991 l 408 991 q 678 922 591 991 q 765 711 765 852 q 566 446 765 515 l 835 0 l 699 0 l 458 412 l 252 412 m 252 511 l 410 511 q 589 560 532 511 q 646 705 646 608 q 588 847 646 804 q 401 890 530 890 l 252 890 l 252 511 m 200 1293 l 278 1293 q 427 1165 355 1243 q 576 1293 515 1253 l 657 1293 l 657 1276 l 612 1230 q 484 1071 515 1130 l 371 1071 q 321 1141 355 1099 q 200 1276 286 1184 l 200 1293 z "},"ř":{"ha":567,"x_min":88,"x_max":547,"o":"m 458 757 q 547 749 508 757 l 532 644 q 450 654 486 654 q 296 581 360 654 q 232 399 232 508 l 232 0 l 119 0 l 119 743 l 212 743 l 225 606 l 231 606 q 330 718 272 678 q 458 757 389 757 m 88 1064 l 166 1064 q 315 936 243 1014 q 465 1064 403 1024 l 545 1064 l 545 1047 l 500 1001 q 372 842 403 901 l 259 842 q 209 912 243 869 q 88 1047 174 955 l 88 1064 z "},"Ś":{"ha":762,"x_min":72,"x_max":696,"o":"m 696 264 q 601 60 696 133 q 343 -14 506 -14 q 72 32 167 -14 l 72 143 q 205 102 133 117 q 347 87 277 87 q 521 131 463 87 q 579 253 579 175 q 558 337 579 304 q 489 398 538 370 q 342 461 441 426 q 144 578 203 511 q 85 755 85 646 q 171 938 85 870 q 399 1006 257 1006 q 671 951 547 1006 l 635 851 q 396 903 512 903 q 253 863 304 903 q 201 754 201 824 q 220 670 201 703 q 284 609 239 637 q 422 549 330 582 q 637 429 578 493 q 696 264 696 366 m 321 1088 q 391 1190 353 1130 q 450 1293 429 1249 l 587 1293 l 587 1279 q 498 1171 557 1235 q 396 1071 439 1106 l 321 1071 l 321 1088 z "},"ś":{"ha":663,"x_min":72,"x_max":599,"o":"m 599 203 q 522 43 599 99 q 304 -14 444 -14 q 74 33 157 -14 l 74 138 q 189 95 127 111 q 307 79 250 79 q 443 107 395 79 q 490 193 490 136 q 453 268 490 237 q 306 340 415 298 q 158 408 202 379 q 93 473 115 437 q 72 561 72 510 q 146 704 72 652 q 349 757 220 757 q 583 708 469 757 l 543 616 q 340 663 431 663 q 220 637 260 663 q 179 568 179 612 q 194 517 179 538 q 243 477 210 496 q 374 422 277 458 q 552 326 506 374 q 599 203 599 277 m 252 859 q 322 960 284 901 q 381 1064 359 1020 l 518 1064 l 518 1050 q 429 941 488 1006 q 327 842 370 877 l 252 842 l 252 859 z "},"Ŝ":{"ha":762,"x_min":72,"x_max":696,"o":"m 696 264 q 601 60 696 133 q 343 -14 506 -14 q 72 32 167 -14 l 72 143 q 205 102 133 117 q 347 87 277 87 q 521 131 463 87 q 579 253 579 175 q 558 337 579 304 q 489 398 538 370 q 342 461 441 426 q 144 578 203 511 q 85 755 85 646 q 171 938 85 870 q 399 1006 257 1006 q 671 951 547 1006 l 635 851 q 396 903 512 903 q 253 863 304 903 q 201 754 201 824 q 220 670 201 703 q 284 609 239 637 q 422 549 330 582 q 637 429 578 493 q 696 264 696 366 m 167 1086 q 288 1222 253 1179 q 338 1293 322 1265 l 450 1293 q 502 1220 465 1265 q 624 1086 539 1175 l 624 1071 l 543 1071 q 393 1197 484 1108 q 245 1071 301 1106 l 167 1071 l 167 1086 z "},"ŝ":{"ha":663,"x_min":72,"x_max":599,"o":"m 599 203 q 522 43 599 99 q 304 -14 444 -14 q 74 33 157 -14 l 74 138 q 189 95 127 111 q 307 79 250 79 q 443 107 395 79 q 490 193 490 136 q 453 268 490 237 q 306 340 415 298 q 158 408 202 379 q 93 473 115 437 q 72 561 72 510 q 146 704 72 652 q 349 757 220 757 q 583 708 469 757 l 543 616 q 340 663 431 663 q 220 637 260 663 q 179 568 179 612 q 194 517 179 538 q 243 477 210 496 q 374 422 277 458 q 552 326 506 374 q 599 203 599 277 m 111 857 q 231 993 197 949 q 281 1064 266 1036 l 394 1064 q 446 990 409 1036 q 568 857 483 945 l 568 842 l 487 842 q 337 968 427 879 q 189 842 245 877 l 111 842 l 111 857 z "},"Ş":{"ha":762,"x_min":72,"x_max":696,"o":"m 696 264 q 601 60 696 133 q 343 -14 506 -14 q 72 32 167 -14 l 72 143 q 205 102 133 117 q 347 87 277 87 q 521 131 463 87 q 579 253 579 175 q 558 337 579 304 q 489 398 538 370 q 342 461 441 426 q 144 578 203 511 q 85 755 85 646 q 171 938 85 870 q 399 1006 257 1006 q 671 951 547 1006 l 635 851 q 396 903 512 903 q 253 863 304 903 q 201 754 201 824 q 220 670 201 703 q 284 609 239 637 q 422 549 330 582 q 637 429 578 493 q 696 264 696 366 m 496 -196 q 444 -298 496 -262 q 290 -334 392 -334 q 225 -328 256 -334 l 225 -256 q 296 -261 256 -261 q 377 -248 349 -261 q 404 -197 404 -234 q 377 -150 404 -168 q 277 -121 351 -132 l 336 0 l 411 0 l 374 -78 q 496 -196 496 -104 z "},"ş":{"ha":663,"x_min":72,"x_max":599,"o":"m 599 203 q 522 43 599 99 q 304 -14 444 -14 q 74 33 157 -14 l 74 138 q 189 95 127 111 q 307 79 250 79 q 443 107 395 79 q 490 193 490 136 q 453 268 490 237 q 306 340 415 298 q 158 408 202 379 q 93 473 115 437 q 72 561 72 510 q 146 704 72 652 q 349 757 220 757 q 583 708 469 757 l 543 616 q 340 663 431 663 q 220 637 260 663 q 179 568 179 612 q 194 517 179 538 q 243 477 210 496 q 374 422 277 458 q 552 326 506 374 q 599 203 599 277 m 440 -196 q 388 -298 440 -262 q 235 -334 336 -334 q 170 -328 200 -334 l 170 -256 q 240 -261 200 -261 q 321 -248 294 -261 q 349 -197 349 -234 q 322 -150 349 -168 q 221 -121 295 -132 l 281 0 l 355 0 l 318 -78 q 440 -196 440 -104 z "},"Š":{"ha":762,"x_min":72,"x_max":696,"o":"m 696 264 q 601 60 696 133 q 343 -14 506 -14 q 72 32 167 -14 l 72 143 q 205 102 133 117 q 347 87 277 87 q 521 131 463 87 q 579 253 579 175 q 558 337 579 304 q 489 398 538 370 q 342 461 441 426 q 144 578 203 511 q 85 755 85 646 q 171 938 85 870 q 399 1006 257 1006 q 671 951 547 1006 l 635 851 q 396 903 512 903 q 253 863 304 903 q 201 754 201 824 q 220 670 201 703 q 284 609 239 637 q 422 549 330 582 q 637 429 578 493 q 696 264 696 366 m 163 1293 l 241 1293 q 389 1165 318 1243 q 539 1293 477 1253 l 620 1293 l 620 1276 l 575 1230 q 446 1071 477 1130 l 334 1071 q 283 1141 318 1099 q 163 1276 249 1184 l 163 1293 z "},"š":{"ha":663,"x_min":72,"x_max":599,"o":"m 599 203 q 522 43 599 99 q 304 -14 444 -14 q 74 33 157 -14 l 74 138 q 189 95 127 111 q 307 79 250 79 q 443 107 395 79 q 490 193 490 136 q 453 268 490 237 q 306 340 415 298 q 158 408 202 379 q 93 473 115 437 q 72 561 72 510 q 146 704 72 652 q 349 757 220 757 q 583 708 469 757 l 543 616 q 340 663 431 663 q 220 637 260 663 q 179 568 179 612 q 194 517 179 538 q 243 477 210 496 q 374 422 277 458 q 552 326 506 374 q 599 203 599 277 m 112 1064 l 190 1064 q 338 936 267 1014 q 488 1064 427 1024 l 569 1064 l 569 1047 l 524 1001 q 395 842 427 901 l 283 842 q 233 912 267 869 q 112 1047 198 955 l 112 1064 z "},"Ț":{"ha":768,"x_min":12,"x_max":755,"o":"m 441 0 l 326 0 l 326 889 l 12 889 l 12 991 l 755 991 l 755 889 l 441 889 l 441 0 m 267 -290 q 303 -184 286 -247 q 326 -85 321 -121 l 439 -85 l 439 -97 q 399 -197 432 -132 q 328 -307 366 -262 l 267 -307 l 267 -290 z "},"ț":{"ha":490,"x_min":21,"x_max":461,"o":"m 359 79 q 417 84 389 79 q 461 93 445 88 l 461 7 q 407 -8 443 -2 q 343 -14 372 -14 q 127 214 127 -14 l 127 656 l 21 656 l 21 710 l 127 757 l 175 916 l 240 916 l 240 743 l 456 743 l 456 656 l 240 656 l 240 218 q 272 115 240 151 q 359 79 304 79 m 165 -290 q 201 -184 184 -247 q 223 -85 218 -121 l 337 -85 l 337 -97 q 296 -197 330 -132 q 226 -307 263 -262 l 165 -307 l 165 -290 z "},"Ť":{"ha":768,"x_min":12,"x_max":755,"o":"m 441 0 l 326 0 l 326 889 l 12 889 l 12 991 l 755 991 l 755 889 l 441 889 l 441 0 m 157 1293 l 235 1293 q 384 1165 313 1243 q 534 1293 472 1253 l 614 1293 l 614 1276 l 570 1230 q 441 1071 472 1130 l 328 1071 q 278 1141 313 1099 q 157 1276 243 1184 l 157 1293 z "},"ť":{"ha":490,"x_min":21,"x_max":493,"o":"m 359 79 q 417 84 389 79 q 461 93 445 88 l 461 7 q 407 -8 443 -2 q 343 -14 372 -14 q 127 214 127 -14 l 127 656 l 21 656 l 21 710 l 127 757 l 175 916 l 240 916 l 240 743 l 456 743 l 456 656 l 240 656 l 240 218 q 272 115 240 151 q 359 79 304 79 m 333 850 q 359 944 346 887 q 379 1055 372 1000 l 493 1055 l 493 1043 q 456 945 486 1008 q 394 833 426 881 l 333 833 l 333 850 z "},"Ŧ":{"ha":768,"x_min":12,"x_max":755,"o":"m 326 553 l 326 889 l 12 889 l 12 991 l 755 991 l 755 889 l 441 889 l 441 553 l 652 553 l 652 457 l 441 457 l 441 0 l 326 0 l 326 457 l 114 457 l 114 553 l 326 553 z "},"ŧ":{"ha":490,"x_min":21,"x_max":461,"o":"m 363 79 q 461 93 420 79 l 461 7 q 404 -8 439 -3 q 339 -14 368 -14 q 127 222 127 -14 l 127 395 l 32 395 l 32 482 l 127 482 l 127 656 l 21 656 l 21 710 l 127 757 l 175 916 l 240 916 l 240 743 l 456 743 l 456 656 l 240 656 l 240 482 l 444 482 l 444 395 l 240 395 l 240 229 q 363 79 240 79 z "},"Ũ":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 610 1072 q 553 1085 581 1072 q 498 1113 525 1097 q 447 1140 471 1128 q 399 1153 422 1153 q 348 1133 365 1153 q 321 1071 330 1112 l 254 1071 q 302 1199 263 1153 q 403 1246 341 1246 q 463 1233 434 1246 q 519 1205 492 1221 q 570 1178 545 1190 q 616 1165 594 1165 q 665 1185 649 1165 q 692 1247 682 1205 l 759 1247 q 712 1119 750 1165 q 610 1072 673 1072 z "},"ũ":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 528 843 q 471 856 499 843 q 417 883 444 868 q 365 911 390 899 q 317 924 340 924 q 266 903 283 924 q 239 842 249 883 l 173 842 q 221 970 182 924 q 321 1017 260 1017 q 382 1004 353 1017 q 437 976 411 991 q 488 948 464 961 q 534 936 513 936 q 584 956 568 936 q 610 1018 600 976 l 677 1018 q 630 889 669 936 q 528 843 592 843 z "},"Ū":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 302 1164 l 709 1164 l 709 1071 l 302 1071 l 302 1164 z "},"ū":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 221 935 l 628 935 l 628 842 l 221 842 l 221 935 z "},"Ŭ":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 500 1071 q 352 1117 405 1071 q 293 1253 299 1164 l 363 1253 q 381 1200 368 1219 q 420 1173 395 1181 q 503 1164 445 1164 q 604 1185 571 1164 q 643 1253 636 1207 l 713 1253 q 650 1119 707 1167 q 500 1071 593 1071 z "},"ŭ":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 418 842 q 270 888 323 842 q 211 1023 217 935 l 281 1023 q 299 971 286 990 q 338 943 313 952 q 420 935 363 935 q 522 956 489 935 q 561 1023 554 978 l 631 1023 q 568 890 625 938 q 418 842 511 842 z "},"Ů":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 657 1218 q 615 1111 657 1152 q 505 1071 574 1071 q 395 1111 436 1071 q 355 1217 355 1150 q 396 1322 355 1283 q 505 1361 437 1361 q 615 1321 573 1361 q 657 1218 657 1280 m 584 1217 q 562 1275 584 1255 q 505 1296 539 1296 q 448 1275 470 1296 q 425 1217 425 1255 q 446 1158 425 1179 q 505 1137 466 1137 q 562 1158 540 1137 q 584 1217 584 1179 z "},"ů":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 575 989 q 533 882 575 922 q 422 842 492 842 q 313 881 354 842 q 273 987 273 921 q 314 1093 273 1054 q 422 1132 355 1132 q 533 1092 491 1132 q 575 989 575 1051 m 502 987 q 479 1046 502 1025 q 422 1067 457 1067 q 366 1046 388 1067 q 343 987 343 1025 q 363 929 343 949 q 422 908 384 908 q 480 929 458 908 q 502 987 502 949 z "},"Ű":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 309 1088 q 371 1183 334 1120 q 429 1293 408 1246 l 555 1293 l 555 1279 q 472 1170 530 1236 q 375 1071 414 1103 l 309 1071 l 309 1088 m 551 1088 q 619 1194 585 1134 q 671 1293 653 1254 l 797 1293 l 797 1279 q 714 1170 772 1236 q 616 1071 656 1103 l 551 1071 l 551 1088 z "},"ű":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 227 859 q 289 954 252 891 q 347 1064 326 1017 l 473 1064 l 473 1050 q 390 941 448 1007 q 293 842 332 874 l 227 842 l 227 859 m 469 859 q 537 965 503 905 q 589 1064 571 1025 l 715 1064 l 715 1050 q 632 941 690 1007 q 534 842 574 874 l 469 842 l 469 859 z "},"Ų":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 490 -161 q 554 -225 490 -225 q 620 -216 583 -225 l 620 -290 q 535 -302 576 -302 q 395 -175 395 -302 q 424 -82 395 -127 q 502 0 453 -36 l 583 0 q 514 -82 537 -45 q 490 -161 490 -119 z "},"ų":{"ha":852,"x_min":111,"x_max":763,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 633 -161 q 697 -225 633 -225 q 763 -216 726 -225 l 763 -290 q 678 -302 719 -302 q 538 -175 538 -302 q 567 -82 538 -127 q 645 0 596 -36 l 726 0 q 657 -82 680 -45 q 633 -161 633 -119 z "},"Ŵ":{"ha":1286,"x_min":18,"x_max":1267,"o":"m 1002 0 l 888 0 l 688 664 q 656 775 673 708 q 637 856 638 842 q 590 660 623 766 l 396 0 l 282 0 l 18 991 l 140 991 l 297 379 q 345 146 330 250 q 399 389 363 270 l 576 991 l 699 991 l 885 383 q 940 146 918 278 q 989 380 953 242 l 1145 991 l 1267 991 l 1002 0 m 412 1086 q 533 1222 498 1179 q 583 1293 568 1265 l 696 1293 q 748 1220 711 1265 q 869 1086 785 1175 l 869 1071 l 789 1071 q 639 1197 729 1108 q 490 1071 547 1106 l 412 1071 l 412 1086 z "},"ŵ":{"ha":1080,"x_min":16,"x_max":1065,"o":"m 726 0 l 590 436 q 542 618 577 476 l 536 618 q 489 435 509 499 l 349 0 l 218 0 l 16 743 l 134 743 q 243 317 205 463 q 286 119 281 170 l 292 119 q 316 219 299 158 q 345 317 332 281 l 481 743 l 603 743 l 736 317 q 787 121 774 200 l 793 121 q 807 196 795 145 q 949 743 819 247 l 1065 743 l 860 0 l 726 0 m 313 857 q 433 993 399 949 q 484 1064 468 1036 l 596 1064 q 648 990 611 1036 q 770 857 685 945 l 770 842 l 689 842 q 539 968 629 879 q 391 842 447 877 l 313 842 l 313 857 z "},"Ŷ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 160 1086 q 281 1222 246 1179 q 331 1293 315 1265 l 444 1293 q 495 1220 458 1265 q 617 1086 532 1175 l 617 1071 l 536 1071 q 387 1197 477 1108 q 238 1071 294 1106 l 160 1071 l 160 1086 z "},"ŷ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 125 857 q 246 993 212 949 q 296 1064 281 1036 l 409 1064 q 461 990 424 1036 q 583 857 498 945 l 583 842 l 502 842 q 352 968 442 879 q 203 842 260 877 l 125 842 l 125 857 z "},"Ÿ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 199 1174 q 217 1225 199 1209 q 260 1240 235 1240 q 305 1225 286 1240 q 323 1174 323 1209 q 305 1123 323 1140 q 260 1107 286 1107 q 217 1123 235 1107 q 199 1174 199 1140 m 458 1174 q 476 1225 458 1209 q 519 1240 494 1240 q 563 1225 544 1240 q 581 1174 581 1209 q 563 1123 581 1140 q 519 1107 544 1107 q 476 1123 494 1107 q 458 1174 458 1140 z "},"Ź":{"ha":793,"x_min":56,"x_max":737,"o":"m 737 0 l 56 0 l 56 90 l 582 888 l 72 888 l 72 991 l 722 991 l 722 901 l 196 104 l 737 104 l 737 0 m 311 1088 q 381 1190 344 1130 q 441 1293 419 1249 l 578 1293 l 578 1279 q 489 1171 548 1235 q 387 1071 430 1106 l 311 1071 l 311 1088 z "},"ź":{"ha":650,"x_min":56,"x_max":595,"o":"m 595 0 l 56 0 l 56 77 l 461 656 l 81 656 l 81 743 l 585 743 l 585 656 l 184 87 l 595 87 l 595 0 m 250 859 q 320 960 283 901 q 380 1064 358 1020 l 517 1064 l 517 1050 q 428 941 487 1006 q 326 842 369 877 l 250 842 l 250 859 z "},"Ż":{"ha":793,"x_min":56,"x_max":737,"o":"m 737 0 l 56 0 l 56 90 l 582 888 l 72 888 l 72 991 l 722 991 l 722 901 l 196 104 l 737 104 l 737 0 m 330 1174 q 349 1231 330 1213 q 396 1249 368 1249 q 443 1230 423 1249 q 463 1174 463 1212 q 443 1117 463 1136 q 396 1099 423 1099 q 349 1117 368 1099 q 330 1174 330 1136 z "},"ż":{"ha":650,"x_min":56,"x_max":595,"o":"m 595 0 l 56 0 l 56 77 l 461 656 l 81 656 l 81 743 l 585 743 l 585 656 l 184 87 l 595 87 l 595 0 m 261 945 q 280 1001 261 983 q 328 1019 299 1019 q 374 1001 355 1019 q 394 945 394 983 q 374 888 394 907 q 328 869 355 869 q 280 888 299 869 q 261 945 261 907 z "},"Ž":{"ha":793,"x_min":56,"x_max":737,"o":"m 737 0 l 56 0 l 56 90 l 582 888 l 72 888 l 72 991 l 722 991 l 722 901 l 196 104 l 737 104 l 737 0 m 169 1293 l 247 1293 q 395 1165 324 1243 q 545 1293 484 1253 l 626 1293 l 626 1276 l 581 1230 q 452 1071 484 1130 l 340 1071 q 290 1141 324 1099 q 169 1276 255 1184 l 169 1293 z "},"ž":{"ha":650,"x_min":56,"x_max":595,"o":"m 595 0 l 56 0 l 56 77 l 461 656 l 81 656 l 81 743 l 585 743 l 585 656 l 184 87 l 595 87 l 595 0 m 99 1064 l 177 1064 q 326 936 254 1014 q 475 1064 414 1024 l 556 1064 l 556 1047 l 511 1001 q 382 842 414 901 l 270 842 q 220 912 254 869 q 99 1047 185 955 l 99 1064 z "},"ſ":{"ha":444,"x_min":119,"x_max":496,"o":"m 232 0 l 119 0 l 119 800 q 363 1063 119 1063 q 496 1038 428 1063 l 467 947 q 358 968 408 968 q 262 926 292 968 q 232 802 232 884 l 232 0 z "},"ƒ":{"ha":802,"x_min":132,"x_max":710,"o":"m 222 -334 q 132 -321 176 -334 l 132 -227 q 221 -239 180 -239 q 312 -204 286 -239 q 338 -93 338 -170 l 338 567 l 187 567 l 187 618 l 338 659 l 338 753 q 393 945 338 885 q 571 1006 448 1006 q 710 977 629 1006 l 695 933 l 681 889 q 571 911 612 911 q 477 875 505 911 q 450 755 450 840 l 450 654 l 642 654 l 642 567 l 453 567 l 453 -90 q 399 -274 453 -215 q 222 -334 346 -334 z "},"Ǻ":{"ha":882,"x_min":0,"x_max":882,"o":"m 591 970 q 521 842 591 880 l 882 0 l 764 0 l 644 272 l 231 272 l 118 0 l 0 0 l 361 840 q 289 968 289 876 q 330 1075 289 1036 q 439 1114 372 1114 q 549 1074 507 1114 q 591 970 591 1034 m 610 376 l 489 669 q 440 807 472 709 q 414 729 431 774 q 392 667 398 683 l 272 376 l 610 376 m 375 1161 q 443 1252 408 1201 q 493 1331 477 1302 l 631 1331 l 631 1320 q 552 1234 609 1289 q 450 1149 495 1179 l 375 1149 l 375 1161 m 518 968 q 496 1027 518 1006 q 439 1047 473 1047 q 382 1027 404 1047 q 359 968 359 1006 q 380 910 359 930 q 439 889 400 889 q 496 910 475 889 q 518 968 518 930 z "},"ǻ":{"ha":772,"x_min":64,"x_max":660,"o":"m 319 1189 l 319 1200 q 387 1269 351 1228 q 437 1331 422 1310 l 614 1331 l 614 1322 q 544 1271 600 1306 q 401 1189 488 1235 l 319 1189 m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 428 441 64 431 l 550 446 l 550 492 q 510 621 550 580 q 379 663 469 663 q 257 645 314 663 q 153 606 201 627 l 115 692 q 243 738 172 721 q 382 755 313 755 q 592 696 524 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 545 989 q 503 882 545 922 q 392 842 461 842 q 282 881 323 842 q 241 987 241 920 q 282 1093 241 1054 q 392 1132 323 1132 q 503 1092 460 1132 q 545 989 545 1051 m 471 987 q 449 1046 471 1025 q 392 1067 427 1067 q 335 1046 357 1067 q 313 987 313 1025 q 333 929 313 949 q 392 908 353 908 q 449 929 427 908 q 471 987 471 949 z "},"Ǽ":{"ha":1213,"x_min":-1,"x_max":1129,"o":"m 1129 0 l 621 0 l 621 315 l 272 315 l 118 0 l -1 0 l 472 991 l 1129 991 l 1129 889 l 736 889 l 736 570 l 1103 570 l 1103 468 l 736 468 l 736 103 l 1129 103 l 1129 0 m 318 419 l 621 419 l 621 889 l 541 889 l 318 419 m 665 1088 q 735 1190 698 1130 q 795 1293 773 1249 l 932 1293 l 932 1279 q 843 1171 902 1235 q 741 1071 784 1106 l 665 1071 l 665 1088 z "},"ǽ":{"ha":1192,"x_min":64,"x_max":1120,"o":"m 64 205 q 148 375 64 315 q 404 441 232 436 l 529 446 l 529 492 q 490 621 529 579 q 370 663 450 663 q 161 606 272 663 l 126 692 q 244 738 176 720 q 378 755 311 755 q 522 726 466 755 q 606 632 578 696 q 700 724 642 692 q 832 757 758 757 q 1041 666 962 757 q 1120 425 1120 576 l 1120 353 l 644 353 q 863 85 650 85 q 978 97 924 85 q 1088 135 1031 109 l 1088 35 q 979 -2 1029 9 q 860 -14 928 -14 q 579 144 664 -14 q 457 22 524 58 q 300 -14 391 -14 q 126 44 189 -14 q 64 205 64 102 m 182 204 q 218 110 182 140 q 314 79 254 79 q 469 137 412 79 q 526 298 526 194 l 526 366 l 419 361 q 237 318 293 355 q 182 204 182 281 m 831 663 q 702 606 749 663 q 647 443 654 550 l 999 443 q 956 606 999 549 q 831 663 912 663 m 530 859 q 601 960 563 901 q 660 1064 638 1020 l 797 1064 l 797 1050 q 708 941 767 1006 q 606 842 649 877 l 530 842 l 530 859 z "},"Ǿ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 282 54 382 -14 l 214 -41 l 132 12 l 205 117 q 85 498 85 251 q 204 874 85 741 q 543 1007 323 1007 q 791 943 685 1007 l 857 1035 l 939 981 l 867 880 q 997 497 997 743 m 875 497 q 800 786 875 682 l 345 143 q 542 87 422 87 q 791 191 707 87 q 875 497 875 295 m 207 497 q 275 215 207 319 l 729 854 q 543 904 657 904 q 293 800 378 904 q 207 497 207 696 m 457 1088 q 527 1190 490 1130 q 587 1293 565 1249 l 724 1293 l 724 1279 q 635 1171 694 1235 q 532 1071 576 1106 l 457 1071 l 457 1088 z "},"ǿ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 236 33 312 -14 l 179 -46 l 102 7 l 165 96 q 78 372 78 199 q 169 655 78 554 q 421 757 260 757 q 604 705 526 757 l 661 786 l 741 734 l 675 644 q 761 372 761 541 m 195 372 q 231 187 195 256 l 546 625 q 418 661 495 661 q 251 589 307 661 q 195 372 195 516 m 644 372 q 610 551 644 484 l 294 115 q 419 81 342 81 q 587 155 530 81 q 644 372 644 229 m 325 859 q 395 960 357 901 q 454 1064 433 1020 l 591 1064 l 591 1050 q 503 941 562 1006 q 400 842 444 877 l 325 842 l 325 859 z "},"Ș":{"ha":762,"x_min":72,"x_max":696,"o":"m 696 264 q 601 60 696 133 q 343 -14 506 -14 q 72 32 167 -14 l 72 143 q 205 102 133 117 q 347 87 277 87 q 521 131 463 87 q 579 253 579 175 q 558 337 579 304 q 489 398 538 370 q 342 461 441 426 q 144 578 203 511 q 85 755 85 646 q 171 938 85 870 q 399 1006 257 1006 q 671 951 547 1006 l 635 851 q 396 903 512 903 q 253 863 304 903 q 201 754 201 824 q 220 670 201 703 q 284 609 239 637 q 422 549 330 582 q 637 429 578 493 q 696 264 696 366 m 254 -290 q 291 -184 273 -247 q 313 -85 308 -121 l 427 -85 l 427 -97 q 386 -197 419 -132 q 315 -307 353 -262 l 254 -307 l 254 -290 z "},"ș":{"ha":663,"x_min":72,"x_max":599,"o":"m 599 203 q 522 43 599 99 q 304 -14 444 -14 q 74 33 157 -14 l 74 138 q 189 95 127 111 q 307 79 250 79 q 443 107 395 79 q 490 193 490 136 q 453 268 490 237 q 306 340 415 298 q 158 408 202 379 q 93 473 115 437 q 72 561 72 510 q 146 704 72 652 q 349 757 220 757 q 583 708 469 757 l 543 616 q 340 663 431 663 q 220 637 260 663 q 179 568 179 612 q 194 517 179 538 q 243 477 210 496 q 374 422 277 458 q 552 326 506 374 q 599 203 599 277 m 202 -290 q 238 -184 221 -247 q 260 -85 256 -121 l 374 -85 l 374 -97 q 334 -197 367 -132 q 263 -307 300 -262 l 202 -307 l 202 -290 z "},"ˆ":{"ha":822,"x_min":182,"x_max":639,"o":"m 182 857 q 302 993 268 949 q 353 1064 337 1036 l 465 1064 q 517 990 480 1036 q 639 857 554 945 l 639 842 l 558 842 q 408 968 498 879 q 260 842 316 877 l 182 842 l 182 857 z "},"ˇ":{"ha":822,"x_min":182,"x_max":639,"o":"m 182 1064 l 260 1064 q 408 936 337 1014 q 558 1064 496 1024 l 639 1064 l 639 1047 l 594 1001 q 465 842 496 901 l 353 842 q 302 912 337 869 q 182 1047 268 955 l 182 1064 z "},"ˉ":{"ha":815,"x_min":204,"x_max":611,"o":"m 204 935 l 611 935 l 611 842 l 204 842 l 204 935 z "},"˘":{"ha":822,"x_min":199,"x_max":619,"o":"m 406 842 q 258 888 311 842 q 199 1023 205 935 l 269 1023 q 287 971 273 990 q 326 943 301 952 q 408 935 351 935 q 509 956 477 935 q 549 1023 542 978 l 619 1023 q 556 890 612 938 q 406 842 499 842 z "},"˙":{"ha":351,"x_min":110,"x_max":243,"o":"m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 z "},"˚":{"ha":802,"x_min":249,"x_max":551,"o":"m 551 989 q 510 882 551 922 q 399 842 468 842 q 290 881 330 842 q 249 987 249 921 q 290 1093 249 1054 q 399 1132 331 1132 q 509 1092 467 1132 q 551 989 551 1051 m 478 987 q 456 1046 478 1025 q 399 1067 433 1067 q 342 1046 364 1067 q 319 987 319 1025 q 340 929 319 949 q 399 908 360 908 q 456 929 434 908 q 478 987 478 949 z "},"˛":{"ha":273,"x_min":25,"x_max":250,"o":"m 121 -161 q 184 -225 121 -225 q 250 -216 213 -225 l 250 -290 q 165 -302 206 -302 q 25 -175 25 -302 q 54 -82 25 -127 q 132 0 83 -36 l 214 0 q 144 -82 168 -45 q 121 -161 121 -119 z "},"˜":{"ha":822,"x_min":179,"x_max":684,"o":"m 534 843 q 477 856 505 843 q 423 883 450 868 q 371 911 396 899 q 323 924 347 924 q 272 903 290 924 q 245 842 255 883 l 179 842 q 227 970 188 924 q 328 1017 266 1017 q 388 1004 359 1017 q 444 976 417 991 q 494 948 470 961 q 541 936 519 936 q 590 956 574 936 q 616 1018 606 976 l 684 1018 q 636 889 675 936 q 534 843 598 843 z "},"˝":{"ha":802,"x_min":157,"x_max":644,"o":"m 157 859 q 218 954 181 891 q 277 1064 256 1017 l 403 1064 l 403 1050 q 320 941 378 1007 q 222 842 262 874 l 157 842 l 157 859 m 399 859 q 466 965 432 905 q 518 1064 500 1025 l 644 1064 l 644 1050 q 561 941 619 1007 q 464 842 503 874 l 399 842 l 399 859 z "},"΄":{"ha":802,"x_min":345,"x_max":532,"o":"m 345 861 q 381 987 363 910 q 407 1120 399 1064 l 532 1120 l 532 1104 q 483 974 519 1054 q 412 842 446 893 l 345 842 l 345 861 z "},"΅":{"ha":802,"x_min":192,"x_max":610,"o":"m 347 958 q 412 1164 391 1073 l 541 1164 l 541 1150 q 477 1044 518 1105 q 401 942 436 983 l 347 942 l 347 958 m 192 945 q 210 996 192 980 q 253 1011 227 1011 q 297 994 281 1011 q 314 945 314 976 q 295 894 314 911 q 253 878 277 878 q 210 894 227 878 q 192 945 192 911 m 488 945 q 505 996 488 980 q 549 1011 523 1011 q 593 994 576 1011 q 610 945 610 976 q 591 894 610 911 q 549 878 572 878 q 505 894 523 878 q 488 945 488 911 z "},"Ά":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 19 790 q 55 916 37 839 q 81 1048 73 993 l 206 1048 l 206 1033 q 157 902 194 983 q 87 770 120 822 l 19 770 l 19 790 z "},"·":{"ha":370,"x_min":103,"x_max":267,"o":"m 103 490 q 124 558 103 535 q 183 582 145 582 q 244 558 222 582 q 267 490 267 535 q 244 422 267 446 q 183 399 222 399 q 126 420 149 399 q 103 490 103 441 z "},"Έ":{"ha":859,"x_min":-30,"x_max":774,"o":"m 774 0 l 221 0 l 221 991 l 774 991 l 774 889 l 336 889 l 336 570 l 747 570 l 747 468 l 336 468 l 336 103 l 774 103 l 774 0 m -30 790 q 6 916 -12 839 q 33 1048 24 993 l 157 1048 l 157 1033 q 108 902 145 983 q 38 770 71 822 l -30 770 l -30 790 z "},"Ή":{"ha":1126,"x_min":-30,"x_max":991,"o":"m 991 0 l 876 0 l 876 467 l 353 467 l 353 0 l 238 0 l 238 991 l 353 991 l 353 570 l 876 570 l 876 991 l 991 991 l 991 0 m -30 790 q 6 916 -12 839 q 33 1048 24 993 l 157 1048 l 157 1033 q 108 902 145 983 q 38 770 71 822 l -30 770 l -30 790 z "},"Ό":{"ha":1129,"x_min":-19,"x_max":1043,"o":"m 1043 497 q 923 123 1043 259 q 588 -14 802 -14 q 250 120 369 -14 q 131 498 131 254 q 250 874 131 741 q 589 1007 370 1007 q 923 871 803 1007 q 1043 497 1043 736 m 253 497 q 339 192 253 296 q 588 87 425 87 q 837 191 753 87 q 921 497 921 295 q 837 801 921 697 q 589 904 753 904 q 339 800 425 904 q 253 497 253 696 m -19 790 q 17 916 -1 839 q 43 1048 35 993 l 168 1048 l 168 1033 q 119 902 156 983 q 49 770 82 822 l -19 770 l -19 790 z "},"Ύ":{"ha":958,"x_min":-30,"x_max":958,"o":"m 569 496 l 833 991 l 958 991 l 627 385 l 627 0 l 511 0 l 511 379 l 180 991 l 307 991 l 569 496 m -30 790 q 6 916 -12 839 q 33 1048 24 993 l 157 1048 l 157 1033 q 108 902 145 983 q 38 770 71 822 l -30 770 l -30 790 z "},"Ώ":{"ha":1129,"x_min":-19,"x_max":1076,"o":"m 586 904 q 340 817 425 904 q 255 558 255 730 q 314 293 255 406 q 494 90 372 180 l 494 0 l 97 0 l 97 103 l 344 103 q 187 302 241 183 q 133 558 133 420 q 253 888 133 768 q 586 1007 373 1007 q 920 889 800 1007 q 1040 559 1040 772 q 986 302 1040 419 q 830 103 932 184 l 1076 103 l 1076 0 l 679 0 l 679 90 q 860 294 803 181 q 918 558 918 408 q 833 817 918 729 q 586 904 749 904 m -19 790 q 17 916 -1 839 q 43 1048 35 993 l 168 1048 l 168 1033 q 119 902 156 983 q 49 770 82 822 l -19 770 l -19 790 z "},"ΐ":{"ha":471,"x_min":-16,"x_max":447,"o":"m 227 743 l 227 218 q 251 114 227 148 q 335 79 276 79 q 394 84 360 79 q 447 93 429 88 l 447 7 q 390 -8 426 -2 q 321 -14 355 -14 q 163 43 212 -14 q 114 215 114 100 l 114 743 l 227 743 m 140 958 q 205 1164 184 1073 l 333 1164 l 333 1150 q 270 1044 311 1105 q 194 942 229 983 l 140 942 l 140 958 m -16 945 q 2 996 -16 980 q 45 1011 20 1011 q 90 994 73 1011 q 106 945 106 976 q 88 894 106 911 q 45 878 69 878 q 2 894 20 878 q -16 945 -16 911 m 280 945 q 298 996 280 980 q 341 1011 315 1011 q 386 994 369 1011 q 402 945 402 976 q 384 894 402 911 q 341 878 365 878 q 298 894 315 878 q 280 945 280 911 z "},"Α":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 z "},"Β":{"ha":900,"x_min":136,"x_max":823,"o":"m 136 991 l 416 991 q 702 932 614 991 q 790 746 790 873 q 741 601 790 658 q 597 526 692 543 l 597 519 q 823 282 823 481 q 733 75 823 149 q 482 0 644 0 l 136 0 l 136 991 m 252 567 l 441 567 q 617 605 564 567 q 671 734 671 644 q 611 855 671 818 q 421 892 551 892 l 252 892 l 252 567 m 252 469 l 252 98 l 458 98 q 639 145 578 98 q 700 290 700 191 q 638 426 700 382 q 449 469 576 469 l 252 469 z "},"Γ":{"ha":722,"x_min":136,"x_max":689,"o":"m 689 991 l 689 888 l 252 888 l 252 0 l 136 0 l 136 991 l 689 991 z "},"Δ":{"ha":794,"x_min":26,"x_max":768,"o":"m 26 71 l 340 991 l 453 991 l 768 69 l 768 0 l 26 0 l 26 71 m 396 860 q 328 625 355 707 l 151 103 l 640 103 l 465 619 q 396 860 419 756 z "},"Ε":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 z "},"Ζ":{"ha":793,"x_min":56,"x_max":737,"o":"m 737 0 l 56 0 l 56 90 l 582 888 l 72 888 l 72 991 l 722 991 l 722 901 l 196 104 l 737 104 l 737 0 z "},"Η":{"ha":1025,"x_min":136,"x_max":889,"o":"m 889 0 l 774 0 l 774 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 774 570 l 774 991 l 889 991 l 889 0 z "},"Θ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 328 555 l 754 555 l 754 454 l 328 454 l 328 555 m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 292 192 207 296 q 542 87 376 87 q 791 191 707 87 q 875 497 875 294 q 791 802 875 699 q 543 904 707 904 q 292 800 377 904 q 207 497 207 696 z "},"Κ":{"ha":852,"x_min":136,"x_max":852,"o":"m 852 0 l 717 0 l 355 481 l 252 389 l 252 0 l 136 0 l 136 991 l 252 991 l 252 500 l 701 991 l 838 991 l 439 561 l 852 0 z "},"Λ":{"ha":838,"x_min":0,"x_max":838,"o":"m 838 0 l 714 0 l 490 629 q 416 861 431 800 q 346 631 394 767 l 123 0 l 0 0 l 358 991 l 478 991 l 838 0 z "},"Μ":{"ha":1254,"x_min":136,"x_max":1118,"o":"m 575 0 l 239 879 l 233 879 q 243 631 243 774 l 243 0 l 136 0 l 136 991 l 310 991 l 624 174 l 629 174 l 946 991 l 1118 991 l 1118 0 l 1003 0 l 1003 639 q 1013 878 1003 749 l 1007 878 l 668 0 l 575 0 z "},"Ν":{"ha":1047,"x_min":136,"x_max":911,"o":"m 911 0 l 779 0 l 237 832 l 232 832 q 243 564 243 686 l 243 0 l 136 0 l 136 991 l 267 991 l 807 163 l 812 163 q 806 280 811 181 q 803 422 802 380 l 803 991 l 911 991 l 911 0 z "},"Ξ":{"ha":768,"x_min":49,"x_max":720,"o":"m 132 570 l 636 570 l 636 468 l 132 468 l 132 570 m 77 991 l 692 991 l 692 889 l 77 889 l 77 991 m 720 103 l 720 0 l 49 0 l 49 103 l 720 103 z "},"Ο":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 z "},"Π":{"ha":1013,"x_min":136,"x_max":876,"o":"m 876 0 l 761 0 l 761 889 l 252 889 l 252 0 l 136 0 l 136 991 l 876 991 l 876 0 z "},"Ρ":{"ha":836,"x_min":136,"x_max":765,"o":"m 765 703 q 662 471 765 552 q 368 390 559 390 l 252 390 l 252 0 l 136 0 l 136 991 l 393 991 q 765 703 765 991 m 252 489 l 355 489 q 577 538 509 489 q 646 697 646 588 q 581 844 646 795 q 380 892 517 892 l 252 892 l 252 489 z "},"Σ":{"ha":787,"x_min":50,"x_max":757,"o":"m 50 0 l 50 96 l 376 518 l 58 895 l 58 991 l 717 991 l 717 888 l 258 888 l 193 889 l 505 519 l 179 103 l 757 103 l 757 0 l 50 0 z "},"Τ":{"ha":768,"x_min":12,"x_max":755,"o":"m 441 0 l 326 0 l 326 889 l 12 889 l 12 991 l 755 991 l 755 889 l 441 889 l 441 0 z "},"Υ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 z "},"Φ":{"ha":1108,"x_min":72,"x_max":1036,"o":"m 496 1006 l 612 1006 l 612 884 l 660 884 q 861 838 776 884 q 991 707 946 791 q 1036 515 1036 623 q 986 315 1036 403 q 847 183 935 227 q 640 139 760 139 l 612 139 l 612 -14 l 496 -14 l 496 139 l 465 139 q 258 184 346 139 q 121 317 171 229 q 72 514 72 405 q 118 705 72 621 q 249 837 163 789 q 450 884 334 884 l 496 884 l 496 1006 m 612 236 l 629 236 q 841 310 766 236 q 917 517 917 385 q 847 713 917 642 q 652 785 777 785 l 612 785 l 612 236 m 496 785 l 457 785 q 263 713 334 785 q 192 517 192 641 q 267 310 192 383 q 479 236 342 236 l 496 236 l 496 785 z "},"Χ":{"ha":802,"x_min":5,"x_max":796,"o":"m 796 0 l 665 0 l 399 436 l 127 0 l 5 0 l 335 518 l 28 991 l 155 991 l 401 599 l 650 991 l 772 991 l 465 522 l 796 0 z "},"Ψ":{"ha":1105,"x_min":74,"x_max":1032,"o":"m 610 0 l 494 0 l 494 302 l 464 302 q 258 344 345 302 q 123 469 172 385 q 74 664 74 553 l 74 991 l 192 991 l 192 667 q 262 471 192 539 q 476 403 332 403 l 494 403 l 494 991 l 610 991 l 610 403 l 629 403 q 843 470 772 403 q 913 664 913 537 l 913 991 l 1032 991 l 1032 665 q 983 470 1032 553 q 847 344 935 386 q 640 302 759 302 l 610 302 l 610 0 z "},"Ω":{"ha":1086,"x_min":54,"x_max":1034,"o":"m 543 904 q 297 817 382 904 q 212 558 212 730 q 271 293 212 406 q 452 90 330 180 l 452 0 l 54 0 l 54 103 l 301 103 q 144 302 199 183 q 90 558 90 420 q 210 888 90 768 q 543 1007 330 1007 q 877 889 757 1007 q 997 559 997 772 q 943 302 997 419 q 787 103 890 184 l 1034 103 l 1034 0 l 636 0 l 636 90 q 818 294 760 181 q 875 558 875 408 q 790 817 875 729 q 543 904 706 904 z "},"Ϋ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 198 1174 q 216 1225 198 1209 q 259 1240 234 1240 q 303 1225 285 1240 q 322 1174 322 1209 q 303 1123 322 1140 q 259 1107 285 1107 q 216 1123 234 1107 q 198 1174 198 1140 m 456 1174 q 474 1225 456 1209 q 517 1240 492 1240 q 561 1225 543 1240 q 580 1174 580 1209 q 561 1123 580 1140 q 517 1107 543 1107 q 474 1123 492 1107 q 456 1174 456 1140 z "},"ά":{"ha":848,"x_min":78,"x_max":829,"o":"m 401 81 q 567 147 516 81 q 618 361 618 213 l 618 371 q 566 594 618 526 q 400 661 515 661 q 195 368 195 661 q 244 153 195 224 q 401 81 294 81 m 385 -14 q 159 87 239 -14 q 78 370 78 188 q 161 656 78 555 q 396 757 243 757 q 533 728 478 757 q 624 643 587 700 l 632 643 q 676 743 648 705 l 764 743 q 740 615 749 699 q 730 453 730 532 l 730 155 q 787 78 730 78 q 829 85 807 78 l 829 4 q 754 -14 798 -14 q 669 14 699 -14 q 627 100 639 41 l 618 100 q 521 14 578 41 q 385 -14 465 -14 m 364 861 q 400 987 382 910 q 427 1120 418 1064 l 551 1120 l 551 1104 q 502 974 539 1054 q 432 842 465 893 l 364 842 l 364 861 z "},"έ":{"ha":660,"x_min":61,"x_max":612,"o":"m 485 435 l 485 339 l 385 339 q 174 207 174 339 q 223 113 174 146 q 372 79 273 79 q 486 93 429 79 q 610 138 542 106 l 610 37 q 367 -14 517 -14 q 143 44 224 -14 q 61 201 61 101 q 98 312 61 268 q 224 385 136 357 l 224 392 q 121 454 157 411 q 85 559 85 497 q 161 703 85 650 q 367 757 237 757 q 489 746 433 757 q 612 704 545 734 l 570 614 q 462 652 506 642 q 364 661 418 661 q 195 551 195 661 q 410 435 195 435 l 485 435 m 307 861 q 343 987 325 910 q 369 1120 361 1064 l 494 1120 l 494 1104 q 445 974 481 1054 q 374 842 408 893 l 307 842 l 307 861 z "},"ή":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 -334 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 332 727 269 696 q 471 757 394 757 q 673 692 605 757 q 741 485 741 627 l 741 -334 l 628 -334 m 385 861 q 421 987 403 910 q 447 1120 439 1064 l 572 1120 l 572 1104 q 523 974 559 1054 q 452 842 486 893 l 385 842 l 385 861 z "},"ί":{"ha":471,"x_min":114,"x_max":447,"o":"m 227 743 l 227 218 q 251 114 227 148 q 335 79 276 79 q 394 84 360 79 q 447 93 429 88 l 447 7 q 390 -8 426 -2 q 321 -14 355 -14 q 163 43 212 -14 q 114 215 114 100 l 114 743 l 227 743 m 130 861 q 166 987 149 910 q 193 1120 184 1064 l 317 1120 l 317 1104 q 268 974 305 1054 q 198 842 231 893 l 130 842 l 130 861 z "},"ΰ":{"ha":846,"x_min":111,"x_max":771,"o":"m 425 -14 q 190 71 269 -14 q 111 336 111 156 l 111 743 l 224 743 l 224 342 q 277 145 224 212 q 435 79 331 79 q 603 160 548 79 q 657 411 657 241 q 648 575 657 499 q 615 743 638 651 l 728 743 q 762 573 752 646 q 771 406 771 500 q 684 88 771 190 q 425 -14 596 -14 m 387 958 q 452 1164 431 1073 l 581 1164 l 581 1150 q 517 1044 558 1105 q 441 942 476 983 l 387 942 l 387 958 m 232 945 q 250 996 232 980 q 293 1011 267 1011 q 337 994 321 1011 q 354 945 354 976 q 335 894 354 911 q 293 878 317 878 q 250 894 267 878 q 232 945 232 911 m 528 945 q 545 996 528 980 q 589 1011 563 1011 q 633 994 616 1011 q 650 945 650 976 q 631 894 650 911 q 589 878 612 878 q 545 894 563 878 q 528 945 528 911 z "},"α":{"ha":848,"x_min":78,"x_max":829,"o":"m 401 81 q 567 147 516 81 q 618 361 618 213 l 618 371 q 566 594 618 526 q 400 661 515 661 q 195 368 195 661 q 244 153 195 224 q 401 81 294 81 m 385 -14 q 159 87 239 -14 q 78 370 78 188 q 161 656 78 555 q 396 757 243 757 q 533 728 478 757 q 624 643 587 700 l 632 643 q 676 743 648 705 l 764 743 q 740 615 749 699 q 730 453 730 532 l 730 155 q 787 78 730 78 q 829 85 807 78 l 829 4 q 754 -14 798 -14 q 669 14 699 -14 q 627 100 639 41 l 618 100 q 521 14 578 41 q 385 -14 465 -14 z "},"β":{"ha":872,"x_min":119,"x_max":808,"o":"m 447 1063 q 681 992 596 1063 q 765 798 765 922 q 553 564 765 598 l 553 558 q 808 281 808 530 q 719 63 808 139 q 468 -14 629 -14 q 340 -3 394 -14 q 232 33 286 7 l 232 -334 l 119 -334 l 119 743 q 205 979 119 896 q 447 1063 291 1063 m 446 968 q 285 909 338 968 q 232 739 232 851 l 232 138 q 350 92 295 104 q 463 79 404 79 q 637 130 578 79 q 696 288 696 181 q 631 450 696 394 q 447 505 567 505 l 371 505 l 371 602 l 433 602 q 593 651 538 602 q 648 794 648 701 q 595 923 648 878 q 446 968 543 968 z "},"γ":{"ha":711,"x_min":7,"x_max":704,"o":"m 361 -334 l 239 -334 q 260 -169 239 -269 q 311 8 282 -69 l 7 743 l 123 743 l 286 347 q 363 118 350 188 l 368 118 q 386 186 372 138 q 414 278 399 235 q 587 743 429 322 l 704 743 l 429 18 q 379 -165 397 -66 q 361 -334 361 -264 z "},"δ":{"ha":806,"x_min":77,"x_max":760,"o":"m 370 635 q 235 742 275 688 q 196 863 196 795 q 262 1002 196 951 q 439 1054 328 1054 q 573 1039 509 1054 q 722 981 637 1023 l 673 889 q 544 946 597 931 q 435 961 490 961 q 344 934 377 961 q 311 863 311 907 q 348 777 311 814 q 497 677 384 739 q 700 518 640 600 q 760 325 760 436 q 667 76 760 165 q 415 -14 575 -14 q 169 71 261 -14 q 77 297 77 155 q 153 506 77 417 q 370 635 230 594 m 643 325 q 601 474 643 412 q 464 586 559 536 q 259 476 324 550 q 195 294 195 403 q 255 139 195 197 q 415 81 315 81 q 584 144 525 81 q 643 325 643 207 z "},"ε":{"ha":660,"x_min":61,"x_max":612,"o":"m 485 435 l 485 339 l 385 339 q 174 207 174 339 q 223 113 174 146 q 372 79 273 79 q 486 93 429 79 q 610 138 542 106 l 610 37 q 367 -14 517 -14 q 143 44 224 -14 q 61 201 61 101 q 98 312 61 268 q 224 385 136 357 l 224 392 q 121 454 157 411 q 85 559 85 497 q 161 703 85 650 q 367 757 237 757 q 489 746 433 757 q 612 704 545 734 l 570 614 q 462 652 506 642 q 364 661 418 661 q 195 551 195 661 q 410 435 195 435 l 485 435 z "},"ζ":{"ha":671,"x_min":78,"x_max":629,"o":"m 119 960 l 119 1055 l 629 1055 l 629 968 q 386 736 484 846 q 241 529 288 627 q 195 318 195 431 q 215 212 195 252 q 277 147 235 172 q 436 97 319 122 q 583 39 537 76 q 629 -60 629 2 q 543 -272 629 -161 l 431 -272 q 515 -90 515 -163 q 478 -32 515 -52 q 343 7 440 -11 q 142 105 205 31 q 78 311 78 180 q 98 459 78 389 q 156 596 118 530 q 262 740 194 662 q 494 965 330 817 q 283 960 467 960 l 119 960 z "},"η":{"ha":852,"x_min":119,"x_max":741,"o":"m 628 -334 l 628 481 q 587 616 628 572 q 457 661 545 661 q 286 598 340 661 q 232 390 232 535 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 332 727 269 696 q 471 757 394 757 q 673 692 605 757 q 741 485 741 627 l 741 -334 l 628 -334 z "},"θ":{"ha":822,"x_min":78,"x_max":745,"o":"m 745 529 q 662 120 745 254 q 410 -14 579 -14 q 162 123 247 -14 q 78 529 78 260 q 161 938 78 805 q 410 1071 244 1071 q 660 933 575 1071 q 745 529 745 796 m 410 81 q 574 184 521 81 q 631 496 627 288 l 192 496 q 245 185 195 290 q 410 81 296 81 m 410 977 q 250 879 300 977 q 192 591 199 782 l 629 591 q 570 879 622 782 q 410 977 519 977 z "},"ι":{"ha":471,"x_min":114,"x_max":447,"o":"m 227 743 l 227 218 q 251 114 227 148 q 335 79 276 79 q 394 84 360 79 q 447 93 429 88 l 447 7 q 390 -8 426 -2 q 321 -14 355 -14 q 163 43 212 -14 q 114 215 114 100 l 114 743 l 227 743 z "},"κ":{"ha":720,"x_min":119,"x_max":713,"o":"m 553 742 l 693 742 l 412 415 l 713 0 l 576 0 l 332 342 l 240 265 l 240 0 l 119 0 l 119 742 l 240 742 l 240 550 q 232 361 240 437 l 553 742 z "},"λ":{"ha":742,"x_min":-9,"x_max":742,"o":"m -9 0 l 311 732 l 272 842 q 235 923 252 899 q 195 959 218 947 q 139 971 172 971 q 61 962 100 971 l 61 1053 q 150 1064 107 1064 q 253 1044 212 1064 q 323 979 294 1023 q 390 832 353 935 l 636 146 q 663 95 649 113 q 701 78 677 78 q 742 85 720 78 l 742 3 q 668 -14 709 -14 q 590 12 618 -14 q 542 94 562 38 l 436 390 q 364 618 379 553 l 358 618 q 279 397 339 539 l 107 0 l -9 0 z "},"μ":{"ha":860,"x_min":119,"x_max":741,"o":"m 232 258 q 404 81 232 81 q 574 145 520 81 q 628 353 628 209 l 628 743 l 741 743 l 741 0 l 648 0 l 631 100 l 624 100 q 393 -14 549 -14 q 232 49 292 -14 l 225 49 q 232 -117 232 -8 l 232 -334 l 119 -334 l 119 743 l 232 743 l 232 258 z "},"ν":{"ha":753,"x_min":0,"x_max":696,"o":"m 0 743 l 117 743 l 265 343 q 311 217 283 298 q 350 94 339 136 l 355 94 q 529 364 475 213 q 583 743 583 515 l 696 743 q 626 325 696 497 q 403 0 555 153 l 277 0 l 0 743 z "},"ξ":{"ha":660,"x_min":77,"x_max":629,"o":"m 579 511 l 458 511 q 267 451 339 511 q 195 294 195 391 q 212 207 195 240 q 261 153 229 174 q 339 120 293 132 q 441 96 385 108 q 584 39 538 76 q 629 -60 629 1 q 611 -154 629 -104 q 547 -272 593 -205 l 441 -272 q 500 -174 477 -224 q 522 -89 522 -124 q 483 -31 522 -52 q 347 7 444 -10 q 144 98 212 30 q 77 285 77 165 q 130 451 77 380 q 271 549 184 522 l 271 557 q 123 747 123 600 q 171 880 123 827 q 330 968 218 934 q 165 960 243 960 l 119 960 l 119 1055 l 593 1055 l 593 966 l 558 966 q 394 939 470 966 q 275 863 318 912 q 232 750 232 814 q 289 635 232 672 q 464 599 345 599 l 579 599 l 579 511 z "},"ο":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 z "},"π":{"ha":903,"x_min":17,"x_max":860,"o":"m 779 79 q 838 92 805 79 l 838 3 q 751 -14 808 -14 q 603 158 603 -14 l 603 647 l 279 647 l 279 0 l 167 0 l 167 647 l 17 647 l 17 697 l 114 743 l 860 743 l 860 647 l 715 647 l 715 167 q 733 98 715 117 q 779 79 750 79 z "},"ρ":{"ha":839,"x_min":113,"x_max":761,"o":"m 761 372 q 674 87 761 189 q 429 -14 587 -14 q 227 50 308 -14 l 221 50 q 227 -135 227 9 l 227 -334 l 113 -334 l 113 382 q 198 660 113 562 q 441 757 283 757 q 675 654 590 757 q 761 372 761 551 m 436 661 q 278 591 329 661 q 227 379 227 521 l 227 150 q 433 81 309 81 q 593 151 541 81 q 644 372 644 222 q 595 589 644 517 q 436 661 547 661 z "},"ς":{"ha":669,"x_min":78,"x_max":631,"o":"m 195 354 q 215 218 195 262 q 283 146 235 173 q 440 96 332 119 q 585 38 541 74 q 629 -60 629 1 q 611 -156 629 -104 q 547 -272 593 -208 l 441 -272 q 501 -174 478 -224 q 524 -90 524 -124 q 506 -47 524 -63 q 452 -18 489 -31 q 349 7 414 -5 q 144 118 210 32 q 78 353 78 204 q 172 652 78 547 q 433 757 265 757 q 541 746 487 757 q 631 718 594 734 l 595 623 q 429 657 507 657 q 252 583 310 657 q 195 354 195 509 z "},"σ":{"ha":851,"x_min":78,"x_max":818,"o":"m 760 345 q 718 156 760 238 q 598 31 676 75 q 416 -14 521 -14 q 168 84 257 -14 q 78 354 78 182 q 479 743 78 743 l 818 743 l 818 647 l 639 647 q 760 345 760 534 m 195 354 q 252 152 195 222 q 419 81 310 81 q 585 148 527 81 q 643 338 643 214 q 525 647 643 521 l 481 647 q 262 576 330 647 q 195 354 195 506 z "},"τ":{"ha":657,"x_min":12,"x_max":621,"o":"m 621 743 l 621 647 l 328 647 l 328 228 q 467 77 328 77 q 532 81 498 77 q 583 90 565 85 l 583 5 q 522 -11 559 -5 q 452 -17 484 -17 q 271 41 329 -17 q 214 214 214 98 l 214 647 l 12 647 l 12 697 l 113 743 l 621 743 z "},"υ":{"ha":846,"x_min":111,"x_max":771,"o":"m 425 -14 q 190 71 269 -14 q 111 336 111 156 l 111 743 l 224 743 l 224 342 q 277 145 224 212 q 435 79 331 79 q 603 160 548 79 q 657 411 657 241 q 648 575 657 499 q 615 743 638 651 l 728 743 q 762 573 752 646 q 771 406 771 500 q 684 88 771 190 q 425 -14 596 -14 z "},"φ":{"ha":997,"x_min":78,"x_max":920,"o":"m 436 -334 l 436 -12 q 169 94 260 -5 q 78 376 78 193 q 218 749 78 577 l 307 688 q 219 532 247 608 q 192 372 192 456 q 436 81 192 104 l 436 501 q 492 692 436 628 q 650 757 549 757 q 846 657 772 757 q 920 389 920 558 q 873 179 920 268 q 743 42 827 91 q 547 -12 659 -7 l 547 -334 l 436 -334 m 803 387 q 761 587 803 513 q 650 661 719 661 q 574 621 600 661 q 547 503 547 580 l 547 81 q 736 172 669 92 q 803 387 803 252 z "},"χ":{"ha":758,"x_min":-14,"x_max":749,"o":"m 121 747 q 184 733 157 747 q 231 687 210 718 q 282 581 252 656 l 380 330 l 596 743 l 718 743 l 428 220 l 557 -109 q 617 -216 589 -191 q 688 -241 645 -241 q 749 -236 718 -241 l 749 -323 q 668 -334 708 -334 q 542 -294 590 -334 q 454 -146 494 -254 l 353 117 l 107 -334 l -14 -334 l 301 233 l 184 534 q 135 629 159 602 q 82 656 111 656 q 39 648 57 656 l 39 736 q 121 747 72 747 z "},"ψ":{"ha":1046,"x_min":111,"x_max":960,"o":"m 582 1054 l 582 83 q 778 172 709 94 q 847 389 847 250 q 838 550 847 470 q 804 743 829 629 l 917 743 q 960 393 960 559 q 863 102 960 206 q 582 -12 766 -1 l 582 -334 l 471 -334 l 471 -12 q 201 92 292 -6 q 111 375 111 191 l 111 743 l 224 743 l 224 371 q 285 165 224 239 q 471 82 346 91 l 471 1054 l 582 1054 z "},"ω":{"ha":1074,"x_min":78,"x_max":996,"o":"m 339 -14 q 147 87 216 -14 q 78 359 78 187 q 97 552 78 465 q 161 743 115 640 l 278 743 q 213 551 232 637 q 193 358 193 465 q 234 154 193 227 q 347 81 275 81 q 447 129 411 81 q 482 262 482 178 l 482 473 l 591 473 l 591 262 q 627 128 591 176 q 726 81 663 81 q 840 154 799 81 q 880 358 880 227 q 862 549 880 460 q 796 743 843 637 l 913 743 q 976 555 957 644 q 996 359 996 466 q 927 87 996 189 q 734 -14 858 -14 q 539 110 585 -14 l 533 110 q 339 -14 489 -14 z "},"ϊ":{"ha":471,"x_min":6,"x_max":447,"o":"m 227 743 l 227 218 q 251 114 227 148 q 335 79 276 79 q 394 84 360 79 q 447 93 429 88 l 447 7 q 390 -8 426 -2 q 321 -14 355 -14 q 163 43 212 -14 q 114 215 114 100 l 114 743 l 227 743 m 6 945 q 24 996 6 980 q 67 1011 42 1011 q 112 996 93 1011 q 130 945 130 980 q 112 894 130 911 q 67 878 93 878 q 24 894 42 878 q 6 945 6 911 m 264 945 q 282 996 264 980 q 326 1011 300 1011 q 369 996 351 1011 q 388 945 388 980 q 369 894 388 911 q 326 878 351 878 q 282 894 300 878 q 264 945 264 911 z "},"ϋ":{"ha":846,"x_min":111,"x_max":771,"o":"m 425 -14 q 190 71 269 -14 q 111 336 111 156 l 111 743 l 224 743 l 224 342 q 277 145 224 212 q 435 79 331 79 q 603 160 548 79 q 657 411 657 241 q 648 575 657 499 q 615 743 638 651 l 728 743 q 762 573 752 646 q 771 406 771 500 q 684 88 771 190 q 425 -14 596 -14 m 248 945 q 266 996 248 980 q 309 1011 284 1011 q 354 996 335 1011 q 372 945 372 980 q 354 894 372 911 q 309 878 335 878 q 266 894 284 878 q 248 945 248 911 m 507 945 q 525 996 507 980 q 568 1011 543 1011 q 611 996 593 1011 q 630 945 630 980 q 611 894 630 911 q 568 878 593 878 q 525 894 543 878 q 507 945 507 911 z "},"ό":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 367 861 q 403 987 385 910 q 429 1120 421 1064 l 554 1120 l 554 1104 q 505 974 542 1054 q 435 842 468 893 l 367 842 l 367 861 z "},"ύ":{"ha":846,"x_min":111,"x_max":771,"o":"m 425 -14 q 190 71 269 -14 q 111 336 111 156 l 111 743 l 224 743 l 224 342 q 277 145 224 212 q 435 79 331 79 q 603 160 548 79 q 657 411 657 241 q 648 575 657 499 q 615 743 638 651 l 728 743 q 762 573 752 646 q 771 406 771 500 q 684 88 771 190 q 425 -14 596 -14 m 371 861 q 407 987 389 910 q 433 1120 425 1064 l 558 1120 l 558 1104 q 509 974 546 1054 q 439 842 472 893 l 371 842 l 371 861 z "},"ώ":{"ha":1074,"x_min":78,"x_max":996,"o":"m 339 -14 q 147 87 216 -14 q 78 359 78 187 q 97 552 78 465 q 161 743 115 640 l 278 743 q 213 551 232 637 q 193 358 193 465 q 234 154 193 227 q 347 81 275 81 q 447 129 411 81 q 482 262 482 178 l 482 473 l 591 473 l 591 262 q 627 128 591 176 q 726 81 663 81 q 840 154 799 81 q 880 358 880 227 q 862 549 880 460 q 796 743 843 637 l 913 743 q 976 555 957 644 q 996 359 996 466 q 927 87 996 189 q 734 -14 858 -14 q 539 110 585 -14 l 533 110 q 339 -14 489 -14 m 481 861 q 517 987 499 910 q 543 1120 535 1064 l 668 1120 l 668 1104 q 619 974 656 1054 q 549 842 582 893 l 481 842 l 481 861 z "},"Ё":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 236 1174 q 254 1225 236 1209 q 297 1240 272 1240 q 341 1225 323 1240 q 360 1174 360 1209 q 341 1123 360 1140 q 297 1107 323 1107 q 254 1123 272 1107 q 236 1174 236 1140 m 494 1174 q 512 1225 494 1209 q 555 1240 530 1240 q 599 1225 581 1240 q 618 1174 618 1209 q 599 1123 618 1140 q 555 1107 581 1107 q 512 1123 530 1107 q 494 1174 494 1140 z "},"Ђ":{"ha":1019,"x_min":12,"x_max":913,"o":"m 661 -14 q 559 1 596 -14 l 559 103 q 659 90 597 90 q 762 132 727 90 q 798 250 798 174 l 798 339 q 753 464 798 426 q 614 503 709 503 l 355 503 l 355 0 l 240 0 l 240 889 l 12 889 l 12 991 l 657 991 l 657 889 l 355 889 l 355 606 l 624 606 q 838 541 763 606 q 913 355 913 476 l 913 258 q 846 58 913 130 q 661 -14 780 -14 z "},"Ѓ":{"ha":722,"x_min":136,"x_max":689,"o":"m 689 991 l 689 888 l 252 888 l 252 0 l 136 0 l 136 991 l 689 991 m 328 1088 q 398 1190 360 1130 q 457 1293 435 1249 l 594 1293 l 594 1279 q 505 1171 564 1235 q 403 1071 446 1106 l 328 1071 l 328 1088 z "},"Є":{"ha":888,"x_min":85,"x_max":848,"o":"m 566 903 q 321 818 412 903 q 210 570 230 733 l 700 570 l 700 468 l 207 468 q 304 185 214 282 q 564 89 395 89 q 810 126 673 89 l 810 25 q 547 -14 701 -14 q 203 118 322 -14 q 85 497 85 250 q 213 871 85 735 q 567 1007 340 1007 q 848 947 728 1007 l 800 847 q 566 903 686 903 z "},"Ѕ":{"ha":762,"x_min":72,"x_max":696,"o":"m 696 264 q 601 60 696 133 q 343 -14 506 -14 q 72 32 167 -14 l 72 143 q 205 102 133 117 q 347 87 277 87 q 521 131 463 87 q 579 253 579 175 q 558 337 579 304 q 489 398 538 370 q 342 461 441 426 q 144 578 203 511 q 85 755 85 646 q 171 938 85 870 q 399 1006 257 1006 q 671 951 547 1006 l 635 851 q 396 903 512 903 q 253 863 304 903 q 201 754 201 824 q 220 670 201 703 q 284 609 239 637 q 422 549 330 582 q 637 429 578 493 q 696 264 696 366 z "},"Ј":{"ha":371,"x_min":-109,"x_max":244,"o":"m -8 -261 q -109 -243 -72 -261 l -109 -144 q -8 -158 -60 -158 q 94 -117 59 -158 q 129 0 129 -77 l 129 991 l 244 991 l 244 9 q 179 -190 244 -119 q -8 -261 114 -261 z "},"Љ":{"ha":1291,"x_min":0,"x_max":1239,"o":"m 1239 289 q 1146 75 1239 149 q 876 0 1053 0 l 654 0 l 654 889 l 407 889 q 340 414 368 591 q 284 152 311 237 q 210 25 257 66 q 90 -16 163 -16 q 0 1 43 -16 l 0 98 q 77 81 34 81 q 131 102 109 81 q 168 158 153 123 q 201 277 182 193 q 243 513 220 362 q 310 991 266 665 l 770 991 l 770 568 l 852 568 q 1239 289 1239 568 m 770 100 l 860 100 q 1056 147 994 100 q 1118 289 1118 194 q 1053 425 1118 382 q 839 467 988 467 l 770 467 l 770 100 z "},"Њ":{"ha":1324,"x_min":136,"x_max":1272,"o":"m 1272 289 q 1180 75 1272 149 q 911 0 1088 0 l 688 0 l 688 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 688 570 l 688 991 l 804 991 l 804 568 l 886 568 q 1272 289 1272 568 m 804 100 l 895 100 q 1090 147 1027 100 q 1153 289 1153 194 q 1087 424 1153 382 q 873 467 1022 467 l 804 467 l 804 100 z "},"Ћ":{"ha":1019,"x_min":12,"x_max":913,"o":"m 355 606 l 627 606 q 839 542 766 606 q 913 355 913 478 l 913 0 l 798 0 l 798 340 q 755 464 798 426 q 618 503 713 503 l 355 503 l 355 0 l 240 0 l 240 889 l 12 889 l 12 991 l 700 991 l 700 889 l 355 889 l 355 606 z "},"Ќ":{"ha":850,"x_min":136,"x_max":850,"o":"m 850 0 l 710 0 l 252 503 l 252 0 l 136 0 l 136 991 l 252 991 l 252 511 l 699 991 l 831 991 l 392 510 l 850 0 m 376 1088 q 447 1190 409 1130 q 506 1293 484 1249 l 643 1293 l 643 1279 q 554 1171 613 1235 q 452 1071 495 1106 l 376 1071 l 376 1088 z "},"Ў":{"ha":863,"x_min":18,"x_max":863,"o":"m 199 -14 q 66 7 123 -14 l 66 119 q 195 90 130 90 q 314 124 269 90 q 404 253 359 159 l 18 991 l 146 991 l 439 428 q 465 363 456 395 l 471 363 q 497 435 490 420 l 741 991 l 863 991 l 546 282 q 443 98 489 155 q 340 13 397 40 q 199 -14 283 -14 m 442 1071 q 259 1119 317 1071 q 195 1279 201 1168 l 300 1279 q 337 1181 307 1208 q 445 1153 368 1153 q 548 1183 515 1153 q 589 1279 582 1213 l 696 1279 q 627 1121 688 1172 q 442 1071 567 1071 z "},"Џ":{"ha":1013,"x_min":136,"x_max":876,"o":"m 876 0 l 561 0 l 561 -258 l 441 -258 l 441 0 l 136 0 l 136 991 l 252 991 l 252 104 l 761 104 l 761 991 l 876 991 l 876 0 z "},"А":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 z "},"Б":{"ha":851,"x_min":136,"x_max":779,"o":"m 779 289 q 691 71 779 141 q 427 0 604 0 l 136 0 l 136 991 l 721 991 l 721 889 l 252 889 l 252 568 l 406 568 q 618 538 536 568 q 740 449 701 508 q 779 289 779 390 m 252 100 l 414 100 q 601 144 543 100 q 660 289 660 188 q 600 426 660 385 q 392 467 541 467 l 252 467 l 252 100 z "},"В":{"ha":900,"x_min":136,"x_max":823,"o":"m 136 991 l 416 991 q 702 932 614 991 q 790 746 790 873 q 741 601 790 658 q 597 526 692 543 l 597 519 q 823 282 823 481 q 733 75 823 149 q 482 0 644 0 l 136 0 l 136 991 m 252 567 l 441 567 q 617 605 564 567 q 671 734 671 644 q 611 855 671 818 q 421 892 551 892 l 252 892 l 252 567 m 252 469 l 252 98 l 458 98 q 639 145 578 98 q 700 290 700 191 q 638 426 700 382 q 449 469 576 469 l 252 469 z "},"Г":{"ha":722,"x_min":136,"x_max":689,"o":"m 689 991 l 689 888 l 252 888 l 252 0 l 136 0 l 136 991 l 689 991 z "},"Д":{"ha":949,"x_min":9,"x_max":918,"o":"m 918 -258 l 808 -258 l 808 0 l 119 0 l 119 -258 l 9 -258 l 9 104 l 86 104 q 265 532 191 280 q 347 991 339 783 l 793 991 l 793 104 l 918 104 l 918 -258 m 677 104 l 677 888 l 452 888 q 370 493 439 724 q 207 104 300 263 l 677 104 z "},"Е":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 z "},"Ж":{"ha":1173,"x_min":1,"x_max":1169,"o":"m 406 510 l 16 991 l 144 991 l 530 511 l 530 991 l 642 991 l 642 511 l 1028 991 l 1157 991 l 766 511 l 1169 0 l 1036 0 l 642 503 l 642 0 l 530 0 l 530 503 l 136 0 l 1 0 l 406 510 z "},"З":{"ha":807,"x_min":50,"x_max":730,"o":"m 711 760 q 649 601 711 662 q 478 524 587 540 l 478 518 q 666 440 602 501 q 730 281 730 379 q 627 64 730 142 q 334 -14 523 -14 q 50 40 161 -14 l 50 147 q 191 99 115 116 q 336 82 267 82 q 539 133 471 82 q 608 279 608 184 q 532 417 608 370 q 304 464 456 464 l 157 464 l 157 561 l 298 561 q 514 611 437 561 q 590 750 590 661 q 535 866 590 823 q 387 909 480 909 q 252 892 313 909 q 113 825 192 876 l 56 903 q 209 980 124 954 q 386 1006 294 1006 q 625 939 538 1006 q 711 760 711 872 z "},"И":{"ha":1059,"x_min":138,"x_max":924,"o":"m 138 991 l 245 991 l 245 440 q 236 164 245 288 l 241 164 l 798 991 l 924 991 l 924 0 l 815 0 l 815 546 q 827 832 815 682 l 821 832 l 264 0 l 138 0 l 138 991 z "},"Й":{"ha":1059,"x_min":138,"x_max":924,"o":"m 138 991 l 245 991 l 245 440 q 236 164 245 288 l 241 164 l 798 991 l 924 991 l 924 0 l 815 0 l 815 546 q 827 832 815 682 l 821 832 l 264 0 l 138 0 l 138 991 m 549 1071 q 366 1119 423 1071 q 301 1279 308 1168 l 407 1279 q 444 1181 413 1208 q 551 1153 475 1153 q 655 1183 621 1153 q 696 1279 688 1213 l 802 1279 q 734 1121 794 1172 q 549 1071 673 1071 z "},"К":{"ha":850,"x_min":136,"x_max":850,"o":"m 850 0 l 710 0 l 252 503 l 252 0 l 136 0 l 136 991 l 252 991 l 252 511 l 699 991 l 831 991 l 392 510 l 850 0 z "},"Л":{"ha":978,"x_min":0,"x_max":842,"o":"m 842 0 l 726 0 l 726 889 l 404 889 l 383 726 q 310 251 342 401 q 227 42 279 101 q 90 -16 176 -17 q 0 1 40 -16 l 0 98 q 77 81 37 81 q 139 110 113 81 q 187 213 166 140 q 239 489 208 286 q 309 991 271 693 l 842 991 l 842 0 z "},"М":{"ha":1254,"x_min":136,"x_max":1118,"o":"m 575 0 l 239 879 l 233 879 q 243 631 243 774 l 243 0 l 136 0 l 136 991 l 310 991 l 624 174 l 629 174 l 946 991 l 1118 991 l 1118 0 l 1003 0 l 1003 639 q 1013 878 1003 749 l 1007 878 l 668 0 l 575 0 z "},"Н":{"ha":1025,"x_min":136,"x_max":889,"o":"m 889 0 l 774 0 l 774 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 774 570 l 774 991 l 889 991 l 889 0 z "},"О":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 z "},"П":{"ha":1013,"x_min":136,"x_max":876,"o":"m 876 0 l 761 0 l 761 889 l 252 889 l 252 0 l 136 0 l 136 991 l 876 991 l 876 0 z "},"Р":{"ha":836,"x_min":136,"x_max":765,"o":"m 765 703 q 662 471 765 552 q 368 390 559 390 l 252 390 l 252 0 l 136 0 l 136 991 l 393 991 q 765 703 765 991 m 252 489 l 355 489 q 577 538 509 489 q 646 697 646 588 q 581 844 646 795 q 380 892 517 892 l 252 892 l 252 489 z "},"С":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 z "},"Т":{"ha":768,"x_min":12,"x_max":755,"o":"m 441 0 l 326 0 l 326 889 l 12 889 l 12 991 l 755 991 l 755 889 l 441 889 l 441 0 z "},"У":{"ha":863,"x_min":18,"x_max":863,"o":"m 199 -14 q 66 7 123 -14 l 66 119 q 195 90 130 90 q 314 124 269 90 q 404 253 359 159 l 18 991 l 146 991 l 439 428 q 465 363 456 395 l 471 363 q 497 435 490 420 l 741 991 l 863 991 l 546 282 q 443 98 489 155 q 340 13 397 40 q 199 -14 283 -14 z "},"Ф":{"ha":1108,"x_min":72,"x_max":1036,"o":"m 496 1006 l 612 1006 l 612 884 l 660 884 q 861 838 776 884 q 991 707 946 791 q 1036 515 1036 623 q 986 315 1036 403 q 847 183 935 227 q 640 139 760 139 l 612 139 l 612 -14 l 496 -14 l 496 139 l 465 139 q 258 184 346 139 q 121 317 171 229 q 72 514 72 405 q 118 705 72 621 q 249 837 163 789 q 450 884 334 884 l 496 884 l 496 1006 m 612 236 l 629 236 q 841 310 766 236 q 917 517 917 385 q 847 713 917 642 q 652 785 777 785 l 612 785 l 612 236 m 496 785 l 457 785 q 263 713 334 785 q 192 517 192 641 q 267 310 192 383 q 479 236 342 236 l 496 236 l 496 785 z "},"Х":{"ha":802,"x_min":5,"x_max":796,"o":"m 796 0 l 665 0 l 399 436 l 127 0 l 5 0 l 335 518 l 28 991 l 155 991 l 401 599 l 650 991 l 772 991 l 465 522 l 796 0 z "},"Ц":{"ha":1023,"x_min":136,"x_max":993,"o":"m 876 104 l 993 104 l 993 -258 l 884 -258 l 884 0 l 136 0 l 136 991 l 252 991 l 252 104 l 761 104 l 761 991 l 876 991 l 876 104 z "},"Ч":{"ha":965,"x_min":115,"x_max":829,"o":"m 829 0 l 714 0 l 714 410 q 546 360 613 374 q 407 347 479 347 q 191 412 267 347 q 115 597 115 476 l 115 991 l 231 991 l 231 611 q 274 490 231 529 q 414 450 317 450 q 539 460 479 450 q 714 507 600 470 l 714 991 l 829 991 l 829 0 z "},"Ш":{"ha":1434,"x_min":136,"x_max":1297,"o":"m 1297 0 l 136 0 l 136 991 l 252 991 l 252 104 l 659 104 l 659 991 l 774 991 l 774 104 l 1181 104 l 1181 991 l 1297 991 l 1297 0 z "},"Щ":{"ha":1435,"x_min":136,"x_max":1392,"o":"m 136 0 l 136 991 l 252 991 l 252 104 l 647 104 l 647 991 l 764 991 l 764 104 l 1160 104 l 1160 991 l 1275 991 l 1275 104 l 1392 104 l 1392 -258 l 1282 -258 l 1282 0 l 136 0 z "},"Ъ":{"ha":956,"x_min":12,"x_max":884,"o":"m 884 289 q 796 75 884 149 q 539 0 708 0 l 240 0 l 240 889 l 12 889 l 12 991 l 355 991 l 355 568 l 521 568 q 791 499 698 568 q 884 289 884 429 m 355 100 l 526 100 q 706 147 649 100 q 764 289 764 194 q 704 424 764 381 q 507 467 645 467 l 355 467 l 355 100 z "},"Ы":{"ha":1185,"x_min":136,"x_max":1048,"o":"m 136 0 l 136 991 l 252 991 l 252 568 l 414 568 q 684 499 591 568 q 777 289 777 429 q 689 75 777 149 q 432 0 601 0 l 136 0 m 252 98 l 419 98 q 600 146 542 98 q 657 289 657 194 q 596 424 657 382 q 400 465 536 465 l 252 465 l 252 98 m 1048 0 l 933 0 l 933 991 l 1048 991 l 1048 0 z "},"Ь":{"ha":893,"x_min":136,"x_max":821,"o":"m 821 289 q 729 76 821 151 q 467 0 637 0 l 136 0 l 136 991 l 252 991 l 252 568 l 449 568 q 725 497 630 568 q 821 289 821 425 m 252 100 l 454 100 q 701 289 701 100 q 638 424 701 380 q 435 467 574 467 l 252 467 l 252 100 z "},"Э":{"ha":875,"x_min":41,"x_max":787,"o":"m 317 903 q 90 851 200 903 l 41 949 q 318 1006 158 1006 q 571 946 465 1006 q 732 776 677 886 q 787 515 787 665 q 664 123 787 260 q 309 -14 541 -14 q 49 25 155 -14 l 49 126 q 163 100 105 112 q 289 89 222 89 q 566 187 473 89 q 665 469 660 285 l 178 469 l 178 572 l 664 572 q 557 815 649 728 q 317 903 465 903 z "},"Ю":{"ha":1458,"x_min":136,"x_max":1372,"o":"m 1372 497 q 1256 122 1372 257 q 935 -14 1141 -14 q 615 111 730 -14 q 492 467 499 235 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 493 570 q 623 894 509 781 q 932 1007 737 1007 q 1256 871 1140 1007 q 1372 497 1372 735 m 612 497 q 693 192 612 296 q 930 87 774 87 q 1170 191 1089 87 q 1250 497 1250 295 q 1170 802 1250 699 q 933 904 1090 904 q 694 801 775 904 q 612 497 612 697 z "},"Я":{"ha":884,"x_min":35,"x_max":747,"o":"m 431 414 l 171 0 l 35 0 l 313 433 q 154 538 203 468 q 104 715 104 608 q 196 920 104 848 q 475 991 288 991 l 747 991 l 747 0 l 632 0 l 632 414 l 431 414 m 632 892 l 478 892 q 290 849 354 892 q 225 710 225 806 q 482 513 225 513 l 632 513 l 632 892 z "},"а":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 z "},"б":{"ha":828,"x_min":81,"x_max":751,"o":"m 81 446 q 153 826 81 690 q 380 997 224 963 q 722 1064 574 1038 l 743 965 q 407 903 508 926 q 259 797 309 880 q 205 570 210 713 l 214 570 q 322 659 256 627 q 461 692 389 692 q 675 603 598 692 q 751 357 751 514 q 663 84 751 182 q 415 -14 574 -14 q 170 106 258 -14 q 81 446 81 227 m 425 81 q 632 345 632 81 q 444 596 632 596 q 345 575 393 596 q 257 518 297 553 q 196 446 218 483 q 252 174 196 267 q 425 81 309 81 z "},"в":{"ha":790,"x_min":119,"x_max":746,"o":"m 722 557 q 681 447 722 484 q 564 396 639 409 l 564 390 q 702 334 659 377 q 746 216 746 292 q 670 56 746 113 q 447 0 593 0 l 119 0 l 119 743 l 446 743 q 722 557 722 743 m 633 224 q 588 312 633 284 q 436 339 542 339 l 232 339 l 232 94 l 439 94 q 633 224 633 94 m 612 546 q 571 623 612 600 q 444 646 529 646 l 232 646 l 232 436 l 422 436 q 570 462 527 436 q 612 546 612 488 z "},"г":{"ha":595,"x_min":119,"x_max":567,"o":"m 567 647 l 232 647 l 232 0 l 119 0 l 119 743 l 567 743 l 567 647 z "},"д":{"ha":794,"x_min":28,"x_max":765,"o":"m 765 -257 l 656 -257 l 656 0 l 136 0 l 136 -257 l 28 -257 l 28 97 l 86 97 q 229 387 177 220 q 282 743 280 553 l 659 743 l 659 97 l 765 97 l 765 -257 m 550 97 l 550 654 l 383 654 q 325 350 374 504 q 203 97 276 195 l 550 97 z "},"е":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 z "},"ж":{"ha":1022,"x_min":3,"x_max":1019,"o":"m 458 742 l 562 742 l 562 382 l 869 742 l 993 742 l 682 382 l 1019 0 l 889 0 l 562 376 l 562 0 l 458 0 l 458 376 l 132 0 l 3 0 l 339 382 l 29 742 l 153 742 l 458 382 l 458 742 z "},"з":{"ha":671,"x_min":46,"x_max":607,"o":"m 261 435 q 472 551 472 435 q 301 661 472 661 q 206 652 249 661 q 94 614 163 642 l 54 705 q 306 757 170 757 q 508 704 434 757 q 582 561 582 652 q 443 397 582 436 l 443 392 q 568 320 528 367 q 607 204 607 274 q 524 44 607 101 q 294 -14 441 -14 q 46 35 134 -14 l 46 138 q 297 79 170 79 q 445 113 395 79 q 494 210 494 146 q 283 339 494 339 l 180 339 l 180 435 l 261 435 z "},"и":{"ha":880,"x_min":119,"x_max":761,"o":"m 225 743 l 225 272 l 220 149 l 218 110 l 621 743 l 761 743 l 761 0 l 656 0 l 656 454 l 658 544 l 661 632 l 260 0 l 119 0 l 119 743 l 225 743 z "},"й":{"ha":880,"x_min":119,"x_max":761,"o":"m 225 743 l 225 272 l 220 149 l 218 110 l 621 743 l 761 743 l 761 0 l 656 0 l 656 454 l 658 544 l 661 632 l 260 0 l 119 0 l 119 743 l 225 743 m 437 842 q 254 890 312 842 q 190 1050 197 939 l 296 1050 q 333 951 302 979 q 440 924 363 924 q 544 954 510 924 q 585 1050 577 983 l 691 1050 q 623 892 683 943 q 437 842 562 842 z "},"к":{"ha":721,"x_min":119,"x_max":703,"o":"m 553 743 l 676 743 l 355 385 l 703 0 l 571 0 l 232 376 l 232 0 l 119 0 l 119 743 l 232 743 l 232 382 l 553 743 z "},"л":{"ha":793,"x_min":11,"x_max":673,"o":"m 673 0 l 559 0 l 559 647 l 336 647 q 286 264 318 406 q 201 56 253 122 q 69 -9 149 -9 q 11 -1 33 -9 l 11 82 q 45 78 26 78 q 169 243 123 78 q 239 743 215 408 l 673 743 l 673 0 z "},"м":{"ha":1021,"x_min":119,"x_max":900,"o":"m 505 109 l 526 172 l 555 252 l 757 742 l 900 742 l 900 0 l 800 0 l 800 614 l 787 574 l 747 471 l 555 0 l 461 0 l 269 472 q 220 614 233 563 l 220 0 l 119 0 l 119 742 l 257 742 l 452 271 q 505 109 481 196 z "},"н":{"ha":880,"x_min":119,"x_max":761,"o":"m 232 743 l 232 432 l 648 432 l 648 743 l 761 743 l 761 0 l 648 0 l 648 335 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 z "},"о":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 z "},"п":{"ha":863,"x_min":119,"x_max":743,"o":"m 232 0 l 119 0 l 119 743 l 743 743 l 743 0 l 629 0 l 629 646 l 232 646 l 232 0 z "},"р":{"ha":851,"x_min":119,"x_max":774,"o":"m 465 -14 q 333 13 393 -14 q 232 96 273 40 l 224 96 q 232 -28 232 31 l 232 -334 l 119 -334 l 119 743 l 211 743 l 227 642 l 232 642 q 333 730 275 703 q 465 757 391 757 q 693 656 613 757 q 774 372 774 555 q 692 88 774 189 q 465 -14 610 -14 m 449 661 q 284 598 335 661 q 232 397 233 535 l 232 372 q 284 148 232 216 q 452 81 336 81 q 603 159 548 81 q 657 374 657 237 q 603 587 657 513 q 449 661 548 661 z "},"с":{"ha":661,"x_min":78,"x_max":615,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 z "},"т":{"ha":648,"x_min":28,"x_max":621,"o":"m 621 647 l 379 647 l 379 0 l 267 0 l 267 647 l 28 647 l 28 743 l 621 743 l 621 647 z "},"у":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 z "},"ф":{"ha":993,"x_min":77,"x_max":916,"o":"m 916 372 q 820 103 916 203 q 551 -11 724 3 l 551 -334 l 440 -334 l 440 -11 q 174 104 272 2 q 77 372 77 207 q 174 641 77 541 q 444 754 271 741 l 444 1055 l 551 1055 l 551 754 q 819 637 722 739 q 916 372 916 535 m 195 372 q 254 168 195 242 q 444 82 314 94 l 444 660 q 257 578 319 648 q 195 372 195 508 m 799 372 q 551 659 799 632 l 551 82 q 740 169 680 95 q 799 372 799 243 z "},"х":{"ha":728,"x_min":26,"x_max":700,"o":"m 298 380 l 40 743 l 168 743 l 364 458 l 559 743 l 686 743 l 428 380 l 700 0 l 572 0 l 364 301 l 154 0 l 26 0 l 298 380 z "},"ц":{"ha":869,"x_min":119,"x_max":844,"o":"m 844 -257 l 732 -257 l 732 0 l 119 0 l 119 743 l 232 743 l 232 97 l 627 97 l 627 743 l 739 743 l 739 97 l 844 97 l 844 -257 z "},"ч":{"ha":844,"x_min":106,"x_max":725,"o":"m 218 743 l 218 472 q 367 342 218 342 q 485 361 429 342 q 612 425 541 380 l 612 743 l 725 743 l 725 0 l 612 0 l 612 336 q 480 268 541 288 q 343 248 420 248 q 169 306 232 248 q 106 464 106 364 l 106 743 l 218 743 z "},"ш":{"ha":1236,"x_min":119,"x_max":1117,"o":"m 673 97 l 1003 97 l 1003 743 l 1117 743 l 1117 0 l 119 0 l 119 743 l 232 743 l 232 97 l 561 97 l 561 743 l 673 743 l 673 97 z "},"щ":{"ha":1246,"x_min":119,"x_max":1222,"o":"m 673 97 l 1003 97 l 1003 742 l 1116 742 l 1116 97 l 1222 97 l 1222 -256 l 1108 -256 l 1108 0 l 119 0 l 119 742 l 232 742 l 232 97 l 561 97 l 561 742 l 673 742 l 673 97 z "},"ъ":{"ha":965,"x_min":28,"x_max":888,"o":"m 378 436 l 590 436 q 815 384 742 436 q 888 227 888 332 q 812 57 888 114 q 587 0 736 0 l 265 0 l 265 647 l 28 647 l 28 743 l 378 743 l 378 436 m 777 220 q 734 311 777 283 q 586 339 692 339 l 378 339 l 378 94 l 590 94 q 777 220 777 94 z "},"ы":{"ha":1069,"x_min":119,"x_max":950,"o":"m 232 436 l 435 436 q 645 384 576 436 q 713 227 713 331 q 641 57 713 115 q 428 0 568 0 l 119 0 l 119 743 l 232 743 l 232 436 m 950 0 l 838 0 l 838 743 l 950 743 l 950 0 m 232 339 l 232 94 l 422 94 q 602 220 602 94 q 560 311 602 282 q 419 339 519 339 l 232 339 z "},"ь":{"ha":822,"x_min":119,"x_max":746,"o":"m 232 436 l 461 436 q 746 227 746 436 q 672 58 746 117 q 454 0 597 0 l 119 0 l 119 743 l 232 743 l 232 436 m 232 339 l 232 94 l 449 94 q 586 125 538 94 q 633 220 633 157 q 590 310 633 281 q 446 339 546 339 l 232 339 z "},"э":{"ha":684,"x_min":39,"x_max":606,"o":"m 232 -14 q 39 25 119 -14 l 39 125 q 127 97 79 109 q 236 85 174 85 q 418 148 354 85 q 489 336 482 211 l 113 336 l 113 432 l 488 432 q 419 603 477 549 q 253 657 362 657 q 81 621 183 657 l 49 715 q 142 745 86 733 q 252 757 197 757 q 515 657 425 757 q 606 371 606 558 q 508 87 606 189 q 232 -14 410 -14 z "},"ю":{"ha":1154,"x_min":119,"x_max":1076,"o":"m 1076 372 q 989 88 1076 190 q 750 -14 902 -14 q 521 77 606 -14 q 427 335 436 168 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 l 232 432 l 428 432 q 527 672 441 587 q 753 757 612 757 q 989 653 902 757 q 1076 372 1076 550 m 543 372 q 593 155 543 229 q 751 81 642 81 q 909 153 859 81 q 960 372 960 225 q 910 588 960 515 q 751 661 861 661 q 593 588 642 661 q 543 372 543 515 z "},"я":{"ha":771,"x_min":25,"x_max":652,"o":"m 157 0 l 25 0 l 239 314 q 107 388 153 333 q 61 525 61 442 q 130 685 61 627 q 321 743 198 743 l 652 743 l 652 0 l 539 0 l 539 297 l 351 297 l 157 0 m 171 524 q 358 395 171 395 l 539 395 l 539 646 l 335 646 q 171 524 171 646 z "},"ё":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 215 945 q 233 996 215 980 q 276 1011 251 1011 q 320 996 302 1011 q 339 945 339 980 q 320 894 339 911 q 276 878 302 878 q 233 894 251 878 q 215 945 215 911 m 473 945 q 491 996 473 980 q 534 1011 509 1011 q 578 996 559 1011 q 597 945 597 980 q 578 894 597 911 q 534 878 559 878 q 491 894 509 878 q 473 945 473 911 z "},"ђ":{"ha":852,"x_min":14,"x_max":741,"o":"m 553 -334 q 464 -317 499 -334 l 464 -224 q 541 -237 503 -237 q 628 -122 628 -237 l 628 454 q 587 590 628 545 q 457 635 545 635 q 287 571 340 635 q 233 364 233 507 l 233 0 l 119 0 l 119 843 l 14 843 l 14 929 l 119 929 l 119 1055 l 232 1055 l 232 929 l 504 929 l 504 843 l 232 843 l 232 710 q 227 615 232 653 l 233 615 q 328 700 267 669 q 468 730 389 730 q 672 666 604 730 q 741 458 741 601 l 741 -113 q 694 -276 741 -218 q 553 -334 648 -334 z "},"ѓ":{"ha":595,"x_min":119,"x_max":567,"o":"m 567 647 l 232 647 l 232 0 l 119 0 l 119 743 l 567 743 l 567 647 m 256 859 q 327 960 289 901 q 386 1064 364 1020 l 523 1064 l 523 1050 q 434 941 493 1006 q 332 842 375 877 l 256 842 l 256 859 z "},"є":{"ha":684,"x_min":78,"x_max":636,"o":"m 429 -14 q 170 85 261 -14 q 78 368 78 184 q 171 656 78 555 q 435 757 264 757 q 544 746 490 757 q 636 718 597 735 l 603 623 q 432 657 506 657 q 263 602 321 657 q 195 432 205 547 l 570 432 l 570 336 l 193 336 q 257 146 199 208 q 428 85 315 85 q 625 125 523 85 l 625 25 q 429 -14 547 -14 z "},"ѕ":{"ha":663,"x_min":72,"x_max":599,"o":"m 599 203 q 522 43 599 99 q 304 -14 444 -14 q 74 33 157 -14 l 74 138 q 189 95 127 111 q 307 79 250 79 q 443 107 395 79 q 490 193 490 136 q 453 268 490 237 q 306 340 415 298 q 158 408 202 379 q 93 473 115 437 q 72 561 72 510 q 146 704 72 652 q 349 757 220 757 q 583 708 469 757 l 543 616 q 340 663 431 663 q 220 637 260 663 q 179 568 179 612 q 194 517 179 538 q 243 477 210 496 q 374 422 277 458 q 552 326 506 374 q 599 203 599 277 z "},"і":{"ha":351,"x_min":110,"x_max":243,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 z "},"ї":{"ha":351,"x_min":-14,"x_max":368,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m -14 945 q 4 996 -14 980 q 47 1011 22 1011 q 92 996 73 1011 q 111 945 111 980 q 92 894 111 911 q 47 878 73 878 q 4 894 22 878 q -14 945 -14 911 m 245 945 q 263 996 245 980 q 306 1011 281 1011 q 350 996 331 1011 q 368 945 368 980 q 350 894 368 911 q 306 878 331 878 q 263 894 281 878 q 245 945 245 911 z "},"ј":{"ha":351,"x_min":-75,"x_max":243,"o":"m 29 -334 q -75 -317 -35 -334 l -75 -225 q 17 -239 -28 -239 q 95 -210 70 -239 q 119 -122 119 -181 l 119 743 l 232 743 l 232 -114 q 29 -334 232 -334 m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 z "},"љ":{"ha":1162,"x_min":11,"x_max":1086,"o":"m 640 436 l 806 436 q 1018 384 949 436 q 1086 227 1086 331 q 790 0 1086 0 l 511 0 l 511 647 l 336 647 q 248 143 309 296 q 71 -9 186 -9 q 11 -1 33 -9 l 11 82 q 45 78 26 78 q 169 243 123 78 q 239 743 215 408 l 640 743 l 640 436 m 974 220 q 931 310 974 281 q 782 339 889 339 l 625 339 l 625 94 l 786 94 q 974 220 974 94 z "},"њ":{"ha":1231,"x_min":119,"x_max":1153,"o":"m 694 742 l 694 435 l 868 435 q 1084 383 1015 435 q 1153 227 1153 331 q 859 0 1153 0 l 576 0 l 576 335 l 236 335 l 236 0 l 119 0 l 119 742 l 236 742 l 236 432 l 579 432 l 579 742 l 694 742 m 692 339 l 692 94 l 854 94 q 1042 220 1042 94 q 998 311 1042 282 q 851 339 955 339 l 692 339 z "},"ћ":{"ha":852,"x_min":14,"x_max":741,"o":"m 628 0 l 628 454 q 587 590 628 545 q 457 635 545 635 q 286 572 339 635 q 232 364 232 509 l 232 0 l 119 0 l 119 843 l 14 843 l 14 929 l 119 929 l 119 1055 l 232 1055 l 232 929 l 536 929 l 536 843 l 232 843 l 232 710 q 227 615 232 653 l 233 615 q 328 700 267 669 q 468 730 389 730 q 672 666 604 730 q 741 458 741 601 l 741 0 l 628 0 z "},"ќ":{"ha":721,"x_min":119,"x_max":703,"o":"m 553 743 l 676 743 l 355 385 l 703 0 l 571 0 l 232 376 l 232 0 l 119 0 l 119 743 l 232 743 l 232 382 l 553 743 m 301 859 q 371 960 334 901 q 431 1064 409 1020 l 568 1064 l 568 1050 q 479 941 538 1006 q 376 842 420 877 l 301 842 l 301 859 z "},"ў":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 347 842 q 163 890 221 842 q 99 1050 106 939 l 205 1050 q 242 951 211 979 q 349 924 273 924 q 453 954 419 924 q 494 1050 486 983 l 600 1050 q 532 892 592 943 q 347 842 471 842 z "},"џ":{"ha":863,"x_min":119,"x_max":742,"o":"m 379 0 l 119 0 l 119 742 l 232 742 l 232 97 l 629 97 l 629 742 l 742 742 l 742 0 l 492 0 l 492 -256 l 379 -256 l 379 0 z "},"Ґ":{"ha":732,"x_min":136,"x_max":700,"o":"m 590 991 l 590 1196 l 700 1196 l 700 888 l 252 888 l 252 0 l 136 0 l 136 991 l 590 991 z "},"ґ":{"ha":595,"x_min":119,"x_max":567,"o":"m 567 656 l 232 656 l 232 0 l 119 0 l 119 743 l 454 743 l 454 961 l 567 961 l 567 656 z "},"Ẁ":{"ha":1286,"x_min":18,"x_max":1267,"o":"m 1002 0 l 888 0 l 688 664 q 656 775 673 708 q 637 856 638 842 q 590 660 623 766 l 396 0 l 282 0 l 18 991 l 140 991 l 297 379 q 345 146 330 250 q 399 389 363 270 l 576 991 l 699 991 l 885 383 q 940 146 918 278 q 989 380 953 242 l 1145 991 l 1267 991 l 1002 0 m 722 1071 l 648 1071 q 543 1171 604 1106 q 456 1279 483 1236 l 456 1293 l 593 1293 q 654 1185 615 1246 q 722 1088 692 1124 l 722 1071 z "},"ẁ":{"ha":1080,"x_min":16,"x_max":1065,"o":"m 726 0 l 590 436 q 542 618 577 476 l 536 618 q 489 435 509 499 l 349 0 l 218 0 l 16 743 l 134 743 q 243 317 205 463 q 286 119 281 170 l 292 119 q 316 219 299 158 q 345 317 332 281 l 481 743 l 603 743 l 736 317 q 787 121 774 200 l 793 121 q 807 196 795 145 q 949 743 819 247 l 1065 743 l 860 0 l 726 0 m 611 842 l 536 842 q 432 942 492 877 q 345 1050 372 1007 l 345 1064 l 482 1064 q 543 956 504 1017 q 611 859 581 895 l 611 842 z "},"Ẃ":{"ha":1286,"x_min":18,"x_max":1267,"o":"m 1002 0 l 888 0 l 688 664 q 656 775 673 708 q 637 856 638 842 q 590 660 623 766 l 396 0 l 282 0 l 18 991 l 140 991 l 297 379 q 345 146 330 250 q 399 389 363 270 l 576 991 l 699 991 l 885 383 q 940 146 918 278 q 989 380 953 242 l 1145 991 l 1267 991 l 1002 0 m 559 1088 q 630 1190 592 1130 q 689 1293 667 1249 l 826 1293 l 826 1279 q 737 1171 796 1235 q 635 1071 678 1106 l 559 1071 l 559 1088 z "},"ẃ":{"ha":1080,"x_min":16,"x_max":1065,"o":"m 726 0 l 590 436 q 542 618 577 476 l 536 618 q 489 435 509 499 l 349 0 l 218 0 l 16 743 l 134 743 q 243 317 205 463 q 286 119 281 170 l 292 119 q 316 219 299 158 q 345 317 332 281 l 481 743 l 603 743 l 736 317 q 787 121 774 200 l 793 121 q 807 196 795 145 q 949 743 819 247 l 1065 743 l 860 0 l 726 0 m 458 859 q 529 960 491 901 q 588 1064 566 1020 l 725 1064 l 725 1050 q 636 941 695 1006 q 534 842 577 877 l 458 842 l 458 859 z "},"Ẅ":{"ha":1286,"x_min":18,"x_max":1267,"o":"m 1002 0 l 888 0 l 688 664 q 656 775 673 708 q 637 856 638 842 q 590 660 623 766 l 396 0 l 282 0 l 18 991 l 140 991 l 297 379 q 345 146 330 250 q 399 389 363 270 l 576 991 l 699 991 l 885 383 q 940 146 918 278 q 989 380 953 242 l 1145 991 l 1267 991 l 1002 0 m 451 1174 q 469 1225 451 1209 q 512 1240 487 1240 q 556 1225 538 1240 q 575 1174 575 1209 q 556 1123 575 1140 q 512 1107 538 1107 q 469 1123 487 1107 q 451 1174 451 1140 m 709 1174 q 727 1225 709 1209 q 770 1240 745 1240 q 814 1225 795 1240 q 833 1174 833 1209 q 814 1123 833 1140 q 770 1107 795 1107 q 727 1123 745 1107 q 709 1174 709 1140 z "},"ẅ":{"ha":1080,"x_min":16,"x_max":1065,"o":"m 726 0 l 590 436 q 542 618 577 476 l 536 618 q 489 435 509 499 l 349 0 l 218 0 l 16 743 l 134 743 q 243 317 205 463 q 286 119 281 170 l 292 119 q 316 219 299 158 q 345 317 332 281 l 481 743 l 603 743 l 736 317 q 787 121 774 200 l 793 121 q 807 196 795 145 q 949 743 819 247 l 1065 743 l 860 0 l 726 0 m 350 945 q 368 996 350 980 q 411 1011 386 1011 q 455 996 437 1011 q 474 945 474 980 q 455 894 474 911 q 411 878 437 878 q 368 894 386 878 q 350 945 350 911 m 608 945 q 626 996 608 980 q 669 1011 644 1011 q 713 996 694 1011 q 732 945 732 980 q 713 894 732 911 q 669 878 694 878 q 626 894 644 878 q 608 945 608 911 z "},"Ỳ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 460 1071 l 385 1071 q 281 1171 341 1106 q 193 1279 220 1236 l 193 1293 l 331 1293 q 391 1185 353 1246 q 460 1088 430 1124 l 460 1071 z "},"ỳ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 425 842 l 351 842 q 246 942 307 877 q 159 1050 186 1007 l 159 1064 l 296 1064 q 357 956 318 1017 q 425 859 395 895 l 425 842 z "},"–":{"ha":694,"x_min":56,"x_max":639,"o":"m 56 321 l 56 424 l 639 424 l 639 321 l 56 321 z "},"—":{"ha":1389,"x_min":56,"x_max":1333,"o":"m 56 321 l 56 424 l 1333 424 l 1333 321 l 56 321 z "},"―":{"ha":1389,"x_min":56,"x_max":1333,"o":"m 56 321 l 56 424 l 1333 424 l 1333 321 l 56 321 z "},"‗":{"ha":571,"x_min":-3,"x_max":574,"o":"m 574 -314 l -3 -314 l -3 -220 l 574 -220 l 574 -314 m 574 -125 l -3 -125 l -3 -31 l 574 -31 l 574 -125 z "},"‘":{"ha":236,"x_min":17,"x_max":220,"o":"m 25 652 l 17 667 q 65 819 32 728 q 136 991 98 909 l 220 991 q 150 652 175 819 l 25 652 z "},"’":{"ha":236,"x_min":17,"x_max":220,"o":"m 210 991 l 220 977 q 169 819 202 909 q 100 652 136 729 l 17 652 q 86 991 64 845 l 210 991 z "},"‚":{"ha":340,"x_min":43,"x_max":248,"o":"m 237 161 l 248 146 q 197 -12 230 78 q 127 -179 163 -102 l 43 -179 q 83 -5 61 -109 q 114 161 105 99 l 237 161 z "},"‛":{"ha":236,"x_min":17,"x_max":221,"o":"m 151 991 q 221 652 176 821 l 138 652 q 70 812 107 715 q 17 977 33 908 l 26 991 l 151 991 z "},"“":{"ha":486,"x_min":17,"x_max":469,"o":"m 275 652 l 265 667 q 386 991 303 812 l 469 991 q 429 815 449 913 q 400 652 409 718 l 275 652 m 25 652 l 17 667 q 65 819 32 728 q 136 991 98 909 l 220 991 q 150 652 175 819 l 25 652 z "},"”":{"ha":486,"x_min":17,"x_max":469,"o":"m 210 991 l 220 977 q 169 819 202 909 q 100 652 136 729 l 17 652 q 86 991 64 845 l 210 991 m 460 991 l 469 977 q 420 825 453 915 q 350 652 388 734 l 265 652 q 305 824 283 720 q 336 991 328 928 l 460 991 z "},"„":{"ha":562,"x_min":17,"x_max":469,"o":"m 210 161 l 220 146 q 169 -11 202 79 q 100 -178 136 -101 l 17 -178 q 86 161 64 15 l 210 161 m 460 161 l 469 146 q 420 -5 453 85 q 350 -178 388 -96 l 265 -178 q 305 -6 283 -111 q 336 161 328 98 l 460 161 z "},"†":{"ha":697,"x_min":83,"x_max":614,"o":"m 614 677 l 375 699 l 408 0 l 275 0 l 309 699 l 83 677 l 83 793 l 309 772 l 275 1055 l 408 1055 l 375 772 l 614 793 l 614 677 z "},"‡":{"ha":708,"x_min":83,"x_max":625,"o":"m 386 330 l 625 351 l 625 237 l 386 257 l 419 0 l 285 0 l 318 257 l 83 237 l 83 351 l 318 330 l 289 533 l 318 725 l 83 704 l 83 818 l 318 798 l 285 1055 l 419 1055 l 386 798 l 625 818 l 625 704 l 386 725 l 415 533 l 386 330 z "},"•":{"ha":522,"x_min":111,"x_max":411,"o":"m 111 507 q 150 632 111 589 q 261 675 188 675 q 372 633 332 675 q 411 507 411 591 q 372 383 411 427 q 261 339 333 339 q 150 384 189 339 q 111 507 111 428 z "},"…":{"ha":1089,"x_min":103,"x_max":986,"o":"m 103 72 q 124 141 103 117 q 183 164 144 164 q 244 141 222 164 q 267 72 267 117 q 244 4 267 28 q 183 -20 222 -20 q 126 2 149 -20 q 103 72 103 23 m 463 72 q 483 141 463 117 q 543 164 504 164 q 604 141 582 164 q 626 72 626 117 q 604 4 626 28 q 543 -20 581 -20 q 485 2 508 -20 q 463 72 463 23 m 823 72 q 843 141 823 117 q 903 164 864 164 q 964 141 942 164 q 986 72 986 117 q 964 4 986 28 q 903 -20 941 -20 q 845 2 868 -20 q 823 72 823 23 z "},"‰":{"ha":1670,"x_min":68,"x_max":1603,"o":"m 160 696 q 188 523 160 581 q 279 465 216 465 q 401 696 401 465 q 279 925 401 925 q 188 868 216 925 q 160 696 160 811 m 494 696 q 440 461 494 540 q 279 383 385 383 q 123 464 178 383 q 68 696 68 545 q 279 1006 68 1006 q 438 924 382 1006 q 494 696 494 843 m 913 991 l 363 0 l 262 0 l 812 991 l 913 991 m 1268 298 q 1296 125 1268 182 q 1388 68 1324 68 q 1479 124 1449 68 q 1510 298 1510 181 q 1479 470 1510 414 q 1388 526 1449 526 q 1296 470 1324 526 q 1268 298 1268 414 m 1603 298 q 1548 64 1603 142 q 1388 -14 1493 -14 q 1232 67 1287 -14 q 1177 298 1177 149 q 1388 608 1177 608 q 1546 528 1489 608 q 1603 298 1603 448 m 772 298 q 800 125 772 182 q 890 68 827 68 q 982 124 952 68 q 1013 298 1013 181 q 982 470 1013 414 q 890 526 952 526 q 800 470 827 526 q 772 298 772 414 m 1105 298 q 1050 64 1105 142 q 890 -14 996 -14 q 734 67 789 -14 q 679 298 679 148 q 890 608 679 608 q 1049 528 992 608 q 1105 298 1105 448 z "},"′":{"ha":307,"x_min":90,"x_max":216,"o":"m 216 991 l 189 633 l 118 633 l 90 991 l 216 991 z "},"″":{"ha":546,"x_min":90,"x_max":467,"o":"m 216 991 l 189 633 l 118 633 l 90 991 l 216 991 m 467 991 l 439 633 l 368 633 l 340 991 l 467 991 z "},"‹":{"ha":422,"x_min":56,"x_max":368,"o":"m 56 374 l 288 650 l 368 603 l 172 366 l 368 127 l 288 79 l 56 355 l 56 374 z "},"›":{"ha":422,"x_min":54,"x_max":367,"o":"m 367 355 l 134 79 l 54 127 l 249 366 l 54 603 l 134 650 l 367 374 l 367 355 z "},"‼":{"ha":675,"x_min":103,"x_max":571,"o":"m 221 273 l 150 273 l 115 991 l 256 991 l 221 273 m 103 72 q 184 164 103 164 q 245 140 224 164 q 267 72 267 117 q 245 4 267 28 q 184 -20 223 -20 q 126 2 149 -20 q 103 72 103 23 m 526 273 l 454 273 l 420 991 l 560 991 l 526 273 m 408 72 q 489 164 408 164 q 550 140 528 164 q 571 72 571 117 q 549 4 571 28 q 489 -20 528 -20 q 431 2 454 -20 q 408 72 408 23 z "},"⁄":{"ha":180,"x_min":-265,"x_max":444,"o":"m 444 991 l -168 0 l -265 0 l 347 991 l 444 991 z "},"ⁿ":{"ha":547,"x_min":74,"x_max":479,"o":"m 399 543 l 399 828 q 372 909 399 885 q 292 933 346 933 q 183 898 214 933 q 153 779 153 862 l 153 543 l 74 543 l 74 994 l 139 994 l 149 935 l 155 935 q 304 1003 206 1003 q 479 833 479 1003 l 479 543 l 399 543 z "},"₣":{"ha":794,"x_min":66,"x_max":718,"o":"m 298 268 l 507 268 l 507 180 l 298 180 l 298 0 l 186 0 l 186 180 l 66 180 l 66 268 l 186 268 l 186 991 l 718 991 l 718 889 l 298 889 l 298 526 l 692 526 l 692 424 l 298 424 l 298 268 z "},"₤":{"ha":794,"x_min":46,"x_max":743,"o":"m 467 1004 q 710 950 603 1004 l 669 861 q 467 909 566 909 q 341 864 384 909 q 298 730 298 818 l 298 604 l 583 604 l 583 517 l 298 517 l 298 404 l 583 404 l 583 317 l 298 317 l 298 294 q 276 180 298 227 q 204 104 254 134 l 743 104 l 743 0 l 46 0 l 46 96 q 186 293 186 128 l 186 317 l 50 317 l 50 404 l 186 404 l 186 517 l 50 517 l 50 604 l 186 604 l 186 745 q 262 935 186 865 q 467 1004 338 1004 z "},"₧":{"ha":1060,"x_min":104,"x_max":1010,"o":"m 921 79 q 973 84 944 79 q 1010 92 1002 89 l 1010 7 q 895 -14 969 -14 q 777 33 821 -14 q 733 172 733 79 l 733 486 l 627 486 l 627 541 l 733 587 l 775 717 l 842 717 l 842 574 l 991 574 l 991 486 l 842 486 l 842 187 q 859 107 842 135 q 921 79 877 79 m 628 703 q 534 469 628 549 q 260 390 440 390 l 216 390 l 216 0 l 104 0 l 104 991 l 282 991 q 542 920 456 991 q 628 703 628 848 m 216 489 l 252 489 q 450 538 387 489 q 513 697 513 587 q 454 844 513 795 q 272 892 396 892 l 216 892 l 216 489 z "},"€":{"ha":819,"x_min":43,"x_max":787,"o":"m 539 904 q 269 631 323 904 l 615 631 l 615 543 l 260 543 l 258 505 l 258 461 l 260 431 l 574 431 l 574 343 l 271 343 q 365 154 296 221 q 549 87 433 87 q 758 132 654 87 l 758 31 q 543 -14 659 -14 q 284 78 382 -14 q 155 343 186 169 l 43 343 l 43 431 l 146 431 l 144 459 l 144 489 l 146 543 l 43 543 l 43 631 l 154 631 q 279 907 180 808 q 539 1006 378 1006 q 787 940 675 1006 l 739 846 q 539 904 627 904 z "},"℅":{"ha":1145,"x_min":96,"x_max":1048,"o":"m 889 991 l 339 0 l 239 0 l 789 991 l 889 991 m 1048 227 q 991 57 1048 119 q 833 -5 934 -5 q 682 57 739 -5 q 624 227 624 120 q 681 396 624 334 q 838 458 737 458 q 991 395 933 458 q 1048 227 1048 332 m 715 227 q 836 65 715 65 q 956 227 956 65 q 836 386 956 386 q 715 227 715 386 m 332 534 q 157 594 219 534 q 96 764 96 654 q 159 938 96 878 q 339 999 223 999 q 469 975 410 999 l 447 905 q 338 926 392 926 q 186 765 186 926 q 335 606 186 606 q 463 628 401 606 l 463 559 q 332 534 410 534 z "},"ℓ":{"ha":722,"x_min":81,"x_max":627,"o":"m 432 75 q 562 220 550 75 l 627 220 q 569 47 621 107 q 421 -14 517 -14 q 265 48 319 -14 q 211 224 211 109 l 211 389 q 81 350 146 365 l 81 427 q 211 467 134 441 l 211 804 q 262 952 211 898 q 404 1006 313 1006 q 529 951 484 1006 q 575 803 575 897 q 505 574 575 677 q 317 421 435 471 l 317 229 q 345 117 317 159 q 432 75 372 75 m 490 799 q 404 930 490 930 q 338 901 359 930 q 317 799 317 872 l 317 503 q 490 799 490 595 z "},"№":{"ha":1415,"x_min":136,"x_max":1348,"o":"m 829 0 l 703 0 l 233 832 l 228 832 q 239 564 239 637 l 239 0 l 136 0 l 136 991 l 268 991 l 730 163 l 736 163 q 726 422 726 329 l 726 991 l 829 991 l 829 0 m 1348 421 q 1293 248 1348 311 q 1139 186 1238 186 q 989 249 1044 186 q 935 421 935 313 q 989 593 935 532 q 1143 654 1044 654 q 1293 591 1238 654 q 1348 421 1348 528 m 1023 421 q 1051 304 1023 344 q 1141 264 1078 264 q 1230 303 1203 264 q 1257 421 1257 343 q 1230 537 1257 499 q 1141 575 1203 575 q 1051 537 1079 575 q 1023 421 1023 499 m 965 0 l 965 92 l 1312 92 l 1312 0 l 965 0 z "},"™":{"ha":1078,"x_min":25,"x_max":958,"o":"m 250 503 l 167 503 l 167 920 l 25 920 l 25 991 l 393 991 l 393 920 l 250 920 l 250 503 m 657 503 l 521 882 l 515 882 l 519 794 l 519 503 l 439 503 l 439 991 l 566 991 l 699 612 l 836 991 l 958 991 l 958 503 l 872 503 l 872 787 l 876 880 l 871 880 l 728 503 l 657 503 z "},"Ω":{"ha":1086,"x_min":54,"x_max":1034,"o":"m 543 904 q 297 817 382 904 q 212 558 212 730 q 271 293 212 406 q 452 90 330 180 l 452 0 l 54 0 l 54 103 l 301 103 q 144 302 199 183 q 90 558 90 420 q 210 888 90 768 q 543 1007 330 1007 q 877 889 757 1007 q 997 559 997 772 q 943 302 997 419 q 787 103 890 184 l 1034 103 l 1034 0 l 636 0 l 636 90 q 818 294 760 181 q 875 558 875 408 q 790 817 875 729 q 543 904 706 904 z "},"℮":{"ha":860,"x_min":69,"x_max":789,"o":"m 429 -24 q 241 26 323 -24 q 114 164 159 76 q 69 359 69 253 q 116 562 69 475 q 245 696 163 648 q 429 743 328 743 q 615 695 532 743 q 743 559 697 647 q 789 359 789 471 l 228 359 l 228 118 q 317 58 261 82 q 429 35 374 35 q 580 70 518 35 q 697 193 642 106 l 746 165 q 606 18 680 60 q 429 -24 532 -24 m 632 418 l 632 606 q 543 664 598 642 q 428 686 488 686 q 228 607 311 686 l 228 418 l 632 418 z "},"⅛":{"ha":1083,"x_min":48,"x_max":1033,"o":"m 854 991 l 241 0 l 144 0 l 757 991 l 854 991 m 226 991 l 323 991 l 323 397 l 233 397 l 233 790 q 237 913 233 852 q 203 883 222 898 q 94 803 185 867 l 48 868 l 226 991 m 827 604 q 963 564 911 604 q 1014 453 1014 524 q 913 313 1014 365 q 1033 156 1033 263 q 977 33 1033 79 q 827 -14 921 -14 q 674 30 728 -14 q 621 152 621 73 q 645 238 621 199 q 728 309 670 277 q 658 371 677 340 q 639 449 639 403 q 692 561 639 518 q 827 604 745 604 m 709 152 q 738 86 709 111 q 825 62 766 62 q 914 86 886 62 q 943 152 943 111 q 911 221 943 195 q 825 267 880 248 l 806 274 q 733 222 757 251 q 709 152 709 194 m 826 530 q 754 509 780 530 q 729 450 729 489 q 752 394 729 418 q 830 348 775 370 q 925 450 925 385 q 899 509 925 489 q 826 530 872 530 z "},"⅜":{"ha":1083,"x_min":22,"x_max":1047,"o":"m 901 991 l 289 0 l 192 0 l 804 991 l 901 991 m 842 604 q 977 564 926 604 q 1028 453 1028 524 q 928 313 1028 365 q 1047 156 1047 263 q 991 33 1047 79 q 842 -14 935 -14 q 689 30 743 -14 q 635 152 635 73 q 660 238 635 199 q 742 309 684 277 q 672 371 692 340 q 653 449 653 403 q 706 561 653 518 q 842 604 760 604 m 724 152 q 752 86 724 111 q 839 62 781 62 q 928 86 900 62 q 957 152 957 111 q 925 221 957 195 q 839 267 894 248 l 820 274 q 747 222 771 251 q 724 152 724 194 m 840 530 q 769 509 794 530 q 743 450 743 489 q 766 394 743 418 q 844 348 789 370 q 939 450 939 385 q 913 509 939 489 q 840 530 886 530 m 425 851 q 397 762 425 797 q 323 711 369 727 q 442 570 442 680 q 380 434 442 483 q 203 386 317 386 q 22 424 100 386 l 22 507 q 205 461 121 461 q 348 571 348 461 q 191 669 348 669 l 112 669 l 112 742 l 193 742 q 296 769 262 742 q 330 842 330 795 q 302 906 330 883 q 230 929 275 929 q 147 915 185 929 q 71 876 109 900 l 24 937 q 115 986 67 968 q 226 1004 162 1004 q 371 964 318 1004 q 425 851 425 924 z "},"⅝":{"ha":1083,"x_min":48,"x_max":1044,"o":"m 897 991 l 285 0 l 188 0 l 800 991 l 897 991 m 231 765 q 389 716 329 765 q 448 585 448 668 q 391 437 448 490 q 220 385 333 385 q 123 395 170 385 q 48 421 76 406 l 48 510 q 134 474 86 487 q 218 461 181 461 q 319 489 282 461 q 357 578 357 517 q 320 661 357 631 q 214 690 283 690 q 149 685 175 690 q 102 673 123 679 l 62 701 l 85 983 l 420 983 l 420 913 l 162 913 l 149 757 q 231 765 191 765 m 839 604 q 974 564 923 604 q 1025 453 1025 524 q 925 313 1025 365 q 1044 156 1044 263 q 988 33 1044 79 q 839 -14 932 -14 q 686 30 740 -14 q 632 152 632 73 q 657 238 632 199 q 739 309 682 277 q 670 371 689 340 q 650 449 650 403 q 704 561 650 518 q 839 604 757 604 m 721 152 q 749 86 721 111 q 836 62 778 62 q 926 86 897 62 q 954 152 954 111 q 923 221 954 195 q 836 267 891 248 l 817 274 q 745 222 768 251 q 721 152 721 194 m 838 530 q 766 509 791 530 q 741 450 741 489 q 764 394 741 418 q 842 348 787 370 q 937 450 937 385 q 910 509 937 489 q 838 530 884 530 z "},"⅞":{"ha":1083,"x_min":72,"x_max":1042,"o":"m 839 991 l 227 0 l 130 0 l 742 991 l 839 991 m 836 604 q 971 564 920 604 q 1023 453 1023 524 q 922 313 1023 365 q 1042 156 1042 263 q 986 33 1042 79 q 836 -14 930 -14 q 683 30 737 -14 q 629 152 629 73 q 654 238 629 199 q 736 309 679 277 q 667 371 686 340 q 648 449 648 403 q 701 561 648 518 q 836 604 754 604 m 718 152 q 747 86 718 111 q 833 62 775 62 q 923 86 895 62 q 951 152 951 111 q 920 221 951 195 q 833 267 888 248 l 814 274 q 742 222 766 251 q 718 152 718 194 m 835 530 q 763 509 789 530 q 738 450 738 489 q 761 394 738 418 q 839 348 784 370 q 934 450 934 385 q 907 509 934 489 q 835 530 881 530 m 143 397 l 380 913 l 72 913 l 72 991 l 477 991 l 477 928 l 239 397 l 143 397 z "},"∂":{"ha":807,"x_min":69,"x_max":730,"o":"m 730 633 q 674 300 730 456 q 524 65 617 144 q 313 -14 430 -14 q 133 55 196 -14 q 69 253 69 123 q 115 472 69 368 q 240 630 161 576 q 421 685 319 685 q 536 653 487 685 q 615 571 586 622 l 618 632 q 427 907 618 907 q 336 892 385 907 q 254 854 287 877 l 254 962 q 339 990 286 978 q 441 1003 391 1003 q 657 909 584 1003 q 730 633 730 816 m 319 82 q 440 131 384 82 q 537 268 496 180 q 593 457 578 355 q 532 559 576 523 q 435 596 489 596 q 310 551 366 596 q 220 422 254 507 q 186 250 186 337 q 220 126 186 170 q 319 82 254 82 z "},"∆":{"ha":794,"x_min":26,"x_max":768,"o":"m 26 71 l 340 991 l 453 991 l 768 69 l 768 0 l 26 0 l 26 71 m 396 860 q 328 625 355 707 l 151 103 l 640 103 l 465 619 q 396 860 419 756 z "},"∏":{"ha":1026,"x_min":136,"x_max":890,"o":"m 775 -336 l 775 888 l 252 888 l 252 -336 l 136 -336 l 136 991 l 890 991 l 890 -336 l 775 -336 z "},"∑":{"ha":876,"x_min":52,"x_max":844,"o":"m 52 -336 l 52 -264 l 479 363 l 62 918 l 62 991 l 800 991 l 800 889 l 225 889 l 618 366 l 208 -233 l 844 -233 l 844 -336 l 52 -336 z "},"−":{"ha":794,"x_min":71,"x_max":722,"o":"m 71 443 l 71 536 l 722 536 l 722 443 l 71 443 z "},"√":{"ha":762,"x_min":25,"x_max":822,"o":"m 422 -9 l 336 -9 l 147 521 l 25 521 l 25 612 l 221 612 l 380 149 l 729 1145 l 822 1145 l 422 -9 z "},"∞":{"ha":979,"x_min":81,"x_max":899,"o":"m 899 488 q 842 336 899 399 q 699 273 785 273 q 584 309 635 273 q 488 424 532 345 q 395 315 447 353 q 283 277 343 277 q 138 335 195 277 q 81 490 81 394 q 138 642 81 581 q 283 703 195 703 q 489 554 406 703 q 699 700 573 700 q 844 641 789 700 q 899 488 899 581 m 289 361 q 371 392 334 361 q 444 490 408 422 q 373 588 410 556 q 288 619 336 619 q 202 584 236 619 q 168 489 168 548 q 201 397 168 433 q 289 361 234 361 m 690 616 q 609 585 646 616 q 534 488 572 554 q 606 390 569 422 q 692 358 644 358 q 777 394 743 358 q 811 488 811 431 q 777 581 811 545 q 690 616 743 616 z "},"∫":{"ha":533,"x_min":8,"x_max":515,"o":"m 432 1055 q 515 1044 486 1055 l 515 951 q 440 966 482 966 q 321 802 321 966 l 321 -87 q 265 -270 321 -207 q 98 -334 209 -334 q 8 -321 48 -334 l 8 -229 q 89 -244 50 -244 q 212 -79 212 -244 l 212 810 q 432 1055 212 1055 z "},"≈":{"ha":794,"x_min":66,"x_max":725,"o":"m 228 347 q 148 326 191 347 q 66 265 105 304 l 66 367 q 240 441 140 441 q 323 432 286 441 q 421 397 361 422 q 504 367 473 375 q 566 358 535 358 q 645 380 602 358 q 725 441 688 403 l 725 339 q 553 265 656 265 q 470 275 507 265 q 372 310 432 285 q 292 339 323 330 q 228 347 261 347 m 228 623 q 146 600 189 623 q 66 541 102 576 l 66 642 q 240 715 138 715 q 326 705 287 715 q 421 671 366 694 q 500 642 468 651 q 566 633 532 633 q 647 656 603 633 q 725 715 690 678 l 725 614 q 553 539 657 539 q 466 550 506 539 q 372 583 426 561 q 287 614 315 606 q 228 623 258 623 z "},"≠":{"ha":794,"x_min":71,"x_max":722,"o":"m 258 304 l 71 304 l 71 397 l 301 397 l 387 582 l 71 582 l 71 675 l 431 675 l 522 869 l 607 831 l 533 675 l 722 675 l 722 582 l 490 582 l 403 397 l 722 397 l 722 304 l 359 304 l 271 113 l 186 150 l 258 304 z "},"≤":{"ha":794,"x_min":71,"x_max":722,"o":"m 722 164 l 71 450 l 71 517 l 722 842 l 722 741 l 192 489 l 722 267 l 722 164 m 71 1 l 71 94 l 722 94 l 722 1 l 71 1 z "},"≥":{"ha":794,"x_min":71,"x_max":722,"o":"m 71 267 l 602 488 l 71 741 l 71 842 l 722 517 l 722 450 l 71 164 l 71 267 m 71 1 l 71 94 l 722 94 l 722 1 l 71 1 z "},"◊":{"ha":810,"x_min":75,"x_max":736,"o":"m 75 498 l 380 1000 l 429 1000 l 736 498 l 429 0 l 380 0 l 75 498 m 621 500 l 406 860 l 191 500 l 406 139 l 621 500 z "},"ﬁ":{"ha":822,"x_min":20,"x_max":713,"o":"m 454 656 l 265 656 l 265 0 l 153 0 l 153 656 l 20 656 l 20 707 l 153 747 l 153 789 q 392 1063 153 1063 q 530 1039 451 1063 l 501 949 q 390 970 436 970 q 296 927 326 970 q 265 791 265 885 l 265 743 l 454 743 l 454 656 m 703 0 l 590 0 l 590 743 l 703 743 l 703 0 m 581 945 q 600 1001 581 983 q 647 1019 618 1019 q 694 1001 674 1019 q 713 945 713 983 q 694 888 713 907 q 647 869 674 869 q 600 888 618 869 q 581 945 581 907 z "},"ﬂ":{"ha":822,"x_min":20,"x_max":703,"o":"m 454 656 l 265 656 l 265 0 l 153 0 l 153 656 l 20 656 l 20 707 l 153 747 l 153 789 q 392 1063 153 1063 q 530 1039 451 1063 l 501 949 q 390 970 436 970 q 296 927 326 970 q 265 791 265 885 l 265 743 l 454 743 l 454 656 m 703 0 l 590 0 l 590 1055 l 703 1055 l 703 0 z "},"ȷ":{"ha":351,"x_min":-75,"x_max":232,"o":"m 29 -334 q -75 -317 -35 -334 l -75 -225 q 17 -239 -28 -239 q 95 -210 70 -239 q 119 -122 119 -181 l 119 743 l 232 743 l 232 -114 q 29 -334 232 -334 z "},"⁰":{"ha":482,"x_min":26,"x_max":454,"o":"m 119 694 q 147 524 119 581 q 239 468 175 468 q 332 524 302 468 q 361 696 361 580 q 332 867 361 811 q 239 922 302 922 q 147 866 175 922 q 119 694 119 810 m 454 696 q 240 386 454 386 q 80 466 133 386 q 26 696 26 546 q 240 1003 26 1003 q 401 924 347 1003 q 454 696 454 846 z "},"⁴":{"ha":482,"x_min":14,"x_max":469,"o":"m 469 534 l 385 534 l 385 397 l 286 397 l 286 534 l 14 534 l 14 603 l 290 996 l 385 996 l 385 614 l 469 614 l 469 534 m 286 614 l 286 746 q 290 888 286 837 q 279 866 287 880 q 260 838 271 853 q 240 807 250 823 q 222 781 230 792 l 109 614 l 286 614 z "},"⁵":{"ha":482,"x_min":40,"x_max":440,"o":"m 222 765 q 380 716 321 765 q 440 585 440 668 q 382 437 440 490 q 212 385 325 385 q 115 395 162 385 q 40 421 68 406 l 40 510 q 125 474 78 487 q 210 461 173 461 q 311 489 274 461 q 349 578 349 517 q 312 661 349 631 q 205 690 275 690 q 141 685 167 690 q 94 673 115 679 l 54 701 l 77 983 l 412 983 l 412 913 l 154 913 l 140 757 q 222 765 182 765 z "},"⁶":{"ha":482,"x_min":28,"x_max":457,"o":"m 28 653 q 102 917 28 830 q 325 1003 176 1003 q 408 993 375 1003 l 408 916 q 317 928 373 928 q 170 876 221 928 q 113 711 119 824 l 118 711 q 176 761 138 741 q 272 781 214 781 q 407 730 357 781 q 457 595 457 680 q 401 441 457 497 q 249 386 345 386 q 86 457 145 386 q 28 653 28 528 m 248 461 q 336 493 302 461 q 370 591 370 524 q 340 676 370 645 q 252 707 310 707 q 156 676 194 707 q 118 606 118 646 q 154 503 118 545 q 248 461 190 461 z "},"⁷":{"ha":482,"x_min":39,"x_max":444,"o":"m 110 397 l 347 913 l 39 913 l 39 991 l 444 991 l 444 928 l 205 397 l 110 397 z "},"⁸":{"ha":482,"x_min":35,"x_max":447,"o":"m 241 1003 q 377 963 326 1003 q 428 852 428 923 q 328 713 428 764 q 447 555 447 663 q 391 432 447 479 q 241 386 335 386 q 89 429 142 386 q 35 551 35 473 q 59 637 35 598 q 142 708 84 677 q 72 771 92 739 q 53 848 53 802 q 106 960 53 918 q 241 1003 159 1003 m 123 551 q 152 486 123 511 q 239 461 180 461 q 328 486 300 461 q 357 551 357 511 q 325 621 357 594 q 239 667 294 648 l 220 673 q 147 622 171 650 q 123 551 123 593 m 240 929 q 169 909 194 929 q 143 850 143 888 q 166 794 143 818 q 244 747 189 770 q 339 850 339 784 q 313 909 339 888 q 240 929 286 929 z "},"⁹":{"ha":482,"x_min":24,"x_max":453,"o":"m 453 742 q 379 472 453 559 q 161 386 305 386 q 72 396 105 386 l 72 475 q 168 461 105 461 q 370 682 355 461 l 363 682 q 300 630 339 648 q 216 612 260 612 q 76 662 127 612 q 24 800 24 711 q 81 948 24 892 q 231 1004 138 1004 q 393 936 334 1004 q 453 742 453 867 m 231 929 q 143 897 176 929 q 111 806 111 865 q 140 719 111 751 q 228 686 169 686 q 324 715 285 686 q 363 786 363 744 q 328 890 363 852 q 231 929 293 929 z "}," ":{"ha":694,"x_min":0,"x_max":0,"o":""}," ":{"ha":1389,"x_min":0,"x_max":0,"o":""}," ":{"ha":694,"x_min":0,"x_max":0,"o":""}," ":{"ha":1389,"x_min":0,"x_max":0,"o":""}," ":{"ha":463,"x_min":0,"x_max":0,"o":""}," ":{"ha":347,"x_min":0,"x_max":0,"o":""}," ":{"ha":232,"x_min":0,"x_max":0,"o":""}," ":{"ha":777,"x_min":0,"x_max":0,"o":""}," ":{"ha":370,"x_min":0,"x_max":0,"o":""}," ":{"ha":278,"x_min":0,"x_max":0,"o":""}," ":{"ha":139,"x_min":0,"x_max":0,"o":""},"​":{"ha":0,"x_min":0,"x_max":0,"o":""},"﻿":{"ha":0,"x_min":0,"x_max":0,"o":""},"￼":{"ha":1389,"x_min":57,"x_max":1346,"o":"m 57 823 l 57 1029 l 262 1029 l 262 954 l 132 954 l 132 823 l 57 823 m 1140 954 l 1140 1029 l 1346 1029 l 1346 823 l 1272 823 l 1272 954 l 1140 954 m 57 -260 l 57 -54 l 132 -54 l 132 -186 l 262 -186 l 262 -260 l 57 -260 m 1140 -260 l 1140 -186 l 1272 -186 l 1272 -54 l 1346 -54 l 1346 -260 l 1140 -260 m 875 -260 l 875 -186 l 1060 -186 l 1060 -260 l 875 -260 m 345 -260 l 345 -186 l 528 -186 l 528 -260 l 345 -260 m 345 954 l 345 1029 l 528 1029 l 528 954 l 345 954 m 1346 26 l 1272 26 l 1272 210 l 1346 210 l 1346 26 m 1346 558 l 1272 558 l 1272 742 l 1346 742 l 1346 558 m 610 -260 l 610 -186 l 794 -186 l 794 -260 l 610 -260 m 132 26 l 57 26 l 57 210 l 132 210 l 132 26 m 610 954 l 610 1029 l 794 1029 l 794 954 l 610 954 m 875 954 l 875 1029 l 1060 1029 l 1060 954 l 875 954 m 132 292 l 57 292 l 57 476 l 132 476 l 132 292 m 132 558 l 57 558 l 57 742 l 132 742 l 132 558 m 1346 292 l 1272 292 l 1272 476 l 1346 476 l 1346 292 m 586 427 q 540 275 586 328 q 408 222 494 222 q 276 275 322 222 q 231 427 231 328 q 276 578 231 526 q 408 631 322 631 q 540 578 494 631 q 586 427 586 526 m 317 427 q 408 293 317 293 q 500 427 500 293 q 408 559 500 559 q 317 427 317 559 m 643 625 l 760 625 q 871 603 833 625 q 909 524 909 580 q 894 468 909 490 q 848 440 878 446 l 848 435 q 905 402 890 425 q 921 343 921 379 q 884 258 921 288 q 783 228 847 228 l 643 228 l 643 625 m 726 468 l 771 468 q 814 479 802 468 q 827 513 827 491 q 812 546 827 536 q 766 555 798 555 l 726 555 l 726 468 m 726 401 l 726 297 l 777 297 q 822 312 810 297 q 835 351 835 326 q 774 401 835 401 l 726 401 m 1011 224 q 957 231 976 224 l 957 300 q 1003 294 986 294 q 1061 353 1061 294 l 1061 625 l 1146 625 l 1146 355 q 1111 257 1146 291 q 1011 224 1075 224 z "},"�":{"ha":1389,"x_min":57,"x_max":1331,"o":"m 693 1055 l 1331 419 l 693 -216 l 57 419 l 693 1055 m 737 249 l 737 281 q 752 337 737 315 q 811 392 767 359 q 906 490 881 448 q 930 593 930 533 q 867 736 930 684 q 692 789 804 789 q 575 770 638 789 q 464 722 512 751 l 519 602 q 689 656 628 656 q 753 636 732 656 q 774 585 774 616 q 757 523 774 549 q 692 461 741 498 q 615 377 635 415 q 595 289 595 339 l 595 249 l 737 249 m 576 62 q 601 -5 576 20 q 672 -29 625 -29 q 742 -4 717 -29 q 766 62 766 20 q 742 131 766 106 q 672 155 718 155 q 600 131 623 155 q 576 62 576 106 z "},"ǰ":{"ha":351,"x_min":-75,"x_max":406,"o":"m 29 -334 q -75 -317 -35 -334 l -75 -225 q 17 -239 -28 -239 q 95 -210 70 -239 q 119 -122 119 -181 l 119 743 l 232 743 l 232 -114 q 29 -334 232 -334 m -51 1064 l 27 1064 q 176 936 104 1014 q 326 1064 264 1024 l 406 1064 l 406 1047 l 361 1001 q 233 842 264 901 l 120 842 q 70 912 104 869 q -51 1047 35 955 l -51 1064 z "},"ʼ":{"ha":236,"x_min":17,"x_max":220,"o":"m 210 991 l 220 977 q 169 819 202 909 q 100 652 136 729 l 17 652 q 86 991 64 845 l 210 991 z "},"ϑ":{"ha":864,"x_min":7,"x_max":846,"o":"m 753 574 q 755 498 755 543 q 658 123 755 259 q 385 -14 560 -14 q 118 220 118 -14 q 129 342 118 258 q 139 440 139 425 q 127 484 139 472 q 93 496 115 496 q 58 491 76 496 q 29 479 39 486 l 7 559 q 127 586 63 586 q 219 554 187 586 q 250 460 250 523 q 240 347 250 436 q 229 218 229 258 q 387 78 229 78 q 642 501 642 78 q 639 574 642 544 q 382 611 488 575 q 222 710 277 646 q 168 863 168 774 q 230 1016 168 960 q 406 1071 292 1071 q 633 967 547 1071 q 749 661 720 863 l 846 661 l 846 574 l 753 574 m 633 661 q 552 891 614 804 q 407 978 490 978 q 311 946 344 978 q 278 863 278 913 q 371 715 278 767 q 633 661 465 663 z "},"ϒ":{"ha":785,"x_min":0,"x_max":778,"o":"m 386 486 q 516 789 469 684 q 590 931 564 895 q 648 984 616 968 q 718 1000 679 1000 q 778 990 751 1000 l 778 899 q 739 903 760 903 q 692 884 712 903 q 643 810 672 865 q 572 670 614 755 q 495 505 530 585 q 440 367 461 425 l 440 0 l 323 0 l 323 379 l 0 991 l 126 991 l 386 486 z "},"ϖ":{"ha":1166,"x_min":12,"x_max":1122,"o":"m 375 -14 q 181 65 249 -14 q 114 306 114 143 q 205 647 114 469 l 12 647 l 12 697 l 109 743 l 1122 743 l 1122 647 l 953 647 q 1032 306 1032 476 q 964 65 1032 143 q 771 -14 897 -14 q 575 110 621 -14 l 570 110 q 375 -14 524 -14 m 317 647 q 252 470 274 557 q 229 313 229 382 q 266 138 229 195 q 382 81 302 81 q 481 129 445 81 q 518 262 518 178 l 518 390 l 628 390 l 628 262 q 664 130 628 180 q 764 81 701 81 q 880 138 843 81 q 917 313 917 195 q 842 647 917 485 l 317 647 z "},"Ḿ":{"ha":1254,"x_min":136,"x_max":1118,"o":"m 575 0 l 239 879 l 233 879 q 243 631 243 774 l 243 0 l 136 0 l 136 991 l 310 991 l 624 174 l 629 174 l 946 991 l 1118 991 l 1118 0 l 1003 0 l 1003 639 q 1013 878 1003 749 l 1007 878 l 668 0 l 575 0 m 546 1089 q 616 1191 578 1131 q 675 1295 654 1251 l 812 1295 l 812 1280 q 724 1172 783 1236 q 621 1072 665 1107 l 546 1072 l 546 1089 z "},"ḿ":{"ha":1292,"x_min":119,"x_max":1179,"o":"m 1067 0 l 1067 484 q 1029 617 1067 572 q 911 661 991 661 q 755 601 806 661 q 705 415 705 541 l 705 0 l 593 0 l 593 484 q 555 617 593 572 q 436 661 517 661 q 281 598 330 661 q 232 390 232 534 l 232 0 l 119 0 l 119 743 l 211 743 l 229 642 l 235 642 q 325 726 267 696 q 454 757 382 757 q 682 631 629 757 l 688 631 q 784 723 721 689 q 928 757 847 757 q 1117 692 1054 757 q 1179 485 1179 627 l 1179 0 l 1067 0 m 579 859 q 649 960 612 901 q 709 1064 687 1020 l 846 1064 l 846 1050 q 757 941 816 1006 q 654 842 698 877 l 579 842 l 579 859 z "},"Ḁ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 593 -229 q 550 -336 593 -295 q 439 -376 508 -376 q 330 -337 370 -376 q 289 -231 289 -297 q 330 -124 289 -164 q 439 -85 370 -85 q 550 -125 507 -85 q 593 -229 593 -165 m 518 -231 q 496 -172 518 -192 q 439 -151 473 -151 q 382 -172 404 -151 q 359 -231 359 -192 q 380 -289 359 -269 q 439 -310 400 -310 q 496 -289 475 -310 q 518 -231 518 -269 z "},"ḁ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 518 -229 q 476 -336 518 -295 q 364 -376 433 -376 q 255 -337 296 -376 q 214 -231 214 -297 q 255 -124 214 -164 q 364 -85 296 -85 q 475 -125 433 -85 q 518 -229 518 -165 m 444 -231 q 421 -172 444 -192 q 364 -151 399 -151 q 307 -172 330 -151 q 285 -231 285 -192 q 305 -289 285 -269 q 364 -310 326 -310 q 422 -289 400 -310 q 444 -231 444 -269 z "},"Ὅ":{"ha":1097,"x_min":-196,"x_max":1010,"o":"m 1010 497 q 890 123 1010 259 q 555 -14 770 -14 q 217 120 336 -14 q 98 498 98 254 q 218 874 98 741 q 557 1007 337 1007 q 890 871 770 1007 q 1010 497 1010 736 m 220 497 q 306 192 220 296 q 555 87 392 87 q 804 191 720 87 q 888 497 888 295 q 805 801 888 697 q 557 904 721 904 q 306 800 392 904 q 220 497 220 696 m -6 786 q 60 991 41 909 l 189 991 l 189 978 q 120 867 161 925 q 47 770 80 808 l -6 770 l -6 786 m -196 850 q -35 1002 -196 960 l -35 953 q -117 889 -117 925 q -107 869 -117 876 q -84 857 -96 863 q -61 843 -71 852 q -50 815 -50 834 q -113 765 -50 765 q -173 788 -151 765 q -196 850 -196 811 z "},"˳":{"ha":463,"x_min":79,"x_max":383,"o":"m 383 -229 q 341 -336 383 -295 q 229 -376 298 -376 q 120 -337 161 -376 q 79 -231 79 -297 q 120 -124 79 -164 q 229 -85 161 -85 q 340 -125 298 -85 q 383 -229 383 -165 m 309 -231 q 286 -172 309 -192 q 229 -151 264 -151 q 172 -172 195 -151 q 150 -231 150 -192 q 170 -289 150 -269 q 229 -310 191 -310 q 287 -289 265 -310 q 309 -231 309 -269 z "},"ﬃ":{"ha":1295,"x_min":20,"x_max":1185,"o":"m 921 656 l 732 656 l 732 0 l 619 0 l 619 656 l 486 656 l 486 707 l 619 747 l 619 789 q 859 1063 619 1063 q 997 1039 918 1063 l 968 949 q 857 970 903 970 q 762 927 793 970 q 732 791 732 885 l 732 743 l 921 743 l 921 656 m 454 656 l 265 656 l 265 0 l 153 0 l 153 656 l 20 656 l 20 707 l 153 747 l 153 789 q 392 1063 153 1063 q 530 1039 451 1063 l 501 949 q 390 970 436 970 q 296 927 326 970 q 265 791 265 885 l 265 743 l 454 743 l 454 656 m 1174 0 l 1061 0 l 1061 743 l 1174 743 l 1174 0 m 1052 945 q 1071 1001 1052 983 q 1118 1019 1090 1019 q 1165 1001 1145 1019 q 1185 945 1185 983 q 1165 888 1185 907 q 1118 869 1145 869 q 1071 888 1090 869 q 1052 945 1052 907 z "},"ﬄ":{"ha":1295,"x_min":20,"x_max":1174,"o":"m 921 656 l 732 656 l 732 0 l 619 0 l 619 656 l 486 656 l 486 707 l 619 747 l 619 789 q 859 1063 619 1063 q 997 1039 918 1063 l 968 949 q 857 970 903 970 q 762 927 793 970 q 732 791 732 885 l 732 743 l 921 743 l 921 656 m 454 656 l 265 656 l 265 0 l 153 0 l 153 656 l 20 656 l 20 707 l 153 747 l 153 789 q 392 1063 153 1063 q 530 1039 451 1063 l 501 949 q 390 970 436 970 q 296 927 326 970 q 265 791 265 885 l 265 743 l 454 743 l 454 656 m 1174 0 l 1061 0 l 1061 1055 l 1174 1055 l 1174 0 z "},"Ơ":{"ha":1083,"x_min":85,"x_max":1109,"o":"m 996 497 q 875 122 996 257 q 542 -14 755 -14 q 204 120 323 -14 q 85 498 85 253 q 204 875 85 743 q 543 1007 324 1007 q 885 861 764 1007 q 939 892 919 869 q 967 949 958 915 q 977 1055 977 984 l 1100 1055 l 1109 1040 q 1045 877 1090 935 q 930 791 1001 818 q 996 497 996 672 m 207 497 q 292 191 207 295 q 542 87 376 87 q 790 191 707 87 q 873 497 873 294 q 790 801 873 697 q 543 904 707 904 q 293 801 378 904 q 207 497 207 699 z "},"ơ":{"ha":846,"x_min":78,"x_max":885,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 661 661 568 757 q 715 693 696 671 q 744 749 735 715 q 753 857 753 783 l 875 857 l 885 842 q 823 676 864 736 q 713 591 782 617 q 761 372 761 498 m 195 372 q 248 155 195 229 q 419 81 302 81 q 591 155 538 81 q 644 372 644 229 q 590 588 644 515 q 418 661 536 661 q 248 588 300 661 q 195 372 195 515 z "},"Ư":{"ha":1067,"x_min":126,"x_max":1125,"o":"m 885 991 l 885 857 q 948 884 924 863 q 982 943 972 905 q 993 1055 993 981 l 1116 1055 l 1125 1040 q 1044 854 1103 917 q 885 775 986 792 l 885 350 q 788 81 885 175 q 511 -14 690 -14 q 228 84 330 -14 q 126 353 126 181 l 126 991 l 241 991 l 241 345 q 311 154 241 220 q 514 87 380 87 q 704 153 639 87 q 770 346 770 218 l 770 991 l 885 991 z "},"ư":{"ha":924,"x_min":111,"x_max":970,"o":"m 225 742 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 742 l 733 742 l 733 660 q 814 711 789 667 q 839 859 839 754 l 960 859 l 970 843 q 888 652 948 717 q 733 578 829 587 l 733 0 l 640 0 l 624 100 l 618 100 q 521 15 583 44 q 385 -14 460 -14 q 179 51 247 -14 q 111 257 111 115 l 111 742 l 225 742 z "},"̀":{"ha":0,"x_min":-638,"x_max":-372,"o":"m -372 842 l -446 842 q -551 942 -490 877 q -638 1050 -611 1007 l -638 1064 l -500 1064 q -440 956 -479 1017 q -372 859 -401 895 l -372 842 z "},"́":{"ha":0,"x_min":-512,"x_max":-245,"o":"m -512 859 q -442 960 -479 901 q -382 1064 -404 1020 l -245 1064 l -245 1050 q -334 941 -275 1006 q -437 842 -393 877 l -512 842 l -512 859 z "},"̃":{"ha":0,"x_min":-677,"x_max":-173,"o":"m -322 843 q -379 856 -351 843 q -434 883 -407 868 q -485 911 -460 899 q -533 924 -510 924 q -584 903 -567 924 q -611 842 -602 883 l -677 842 q -630 970 -669 924 q -529 1017 -591 1017 q -469 1004 -498 1017 q -413 976 -439 991 q -362 948 -387 961 q -316 936 -338 936 q -267 956 -283 936 q -240 1018 -250 976 l -173 1018 q -220 889 -182 936 q -322 843 -258 843 z "},"̉":{"ha":0,"x_min":-515,"x_max":-269,"o":"m -269 1014 q -382 896 -269 919 l -389 819 l -460 819 l -468 939 q -383 965 -410 948 q -357 1011 -357 982 q -379 1054 -357 1040 q -452 1068 -402 1068 q -515 1064 -494 1068 l -515 1132 q -443 1139 -490 1139 q -269 1014 -269 1139 z "},"̣":{"ha":0,"x_min":-481,"x_max":-346,"o":"m -481 -164 q -461 -107 -481 -125 q -412 -89 -441 -89 q -366 -107 -385 -89 q -346 -164 -346 -125 q -366 -220 -346 -201 q -412 -239 -385 -239 q -461 -220 -441 -239 q -481 -164 -481 -201 z "},"Ѐ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 506 1071 l 431 1071 q 327 1171 387 1106 q 239 1279 267 1236 l 239 1293 l 377 1293 q 437 1185 399 1246 q 506 1088 476 1124 l 506 1071 z "},"Ѝ":{"ha":1059,"x_min":138,"x_max":924,"o":"m 138 991 l 245 991 l 245 440 q 236 164 245 288 l 241 164 l 798 991 l 924 991 l 924 0 l 815 0 l 815 546 q 827 832 815 682 l 821 832 l 264 0 l 138 0 l 138 991 m 604 1071 l 529 1071 q 425 1171 485 1106 q 337 1279 364 1236 l 337 1293 l 475 1293 q 535 1185 496 1246 q 604 1088 574 1124 l 604 1071 z "},"ѐ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 484 842 l 409 842 q 304 942 365 877 q 217 1050 244 1007 l 217 1064 l 355 1064 q 415 956 376 1017 q 484 859 454 895 l 484 842 z "},"ѝ":{"ha":880,"x_min":119,"x_max":761,"o":"m 225 743 l 225 272 l 220 149 l 218 110 l 621 743 l 761 743 l 761 0 l 656 0 l 656 454 l 658 544 l 661 632 l 260 0 l 119 0 l 119 743 l 225 743 m 509 842 l 434 842 q 330 942 390 877 q 242 1050 269 1007 l 242 1064 l 380 1064 q 440 956 401 1017 q 509 859 479 895 l 509 842 z "},"Ѡ":{"ha":1404,"x_min":90,"x_max":1314,"o":"m 979 900 q 907 886 939 900 q 844 851 875 872 l 798 950 q 985 1004 883 1004 q 1226 877 1139 1004 q 1314 519 1314 749 q 1218 127 1314 268 q 949 -14 1122 -14 q 817 2 876 -14 q 703 52 759 17 l 697 52 q 586 2 643 18 q 456 -14 528 -14 q 186 126 282 -14 q 90 519 90 265 q 177 877 90 749 q 418 1004 263 1004 q 606 950 522 1004 l 558 851 q 496 886 528 872 q 424 900 465 900 q 268 799 324 900 q 212 518 212 699 q 282 201 212 314 q 479 87 353 87 q 643 139 574 87 l 643 449 l 758 449 l 758 139 q 924 87 827 87 q 1120 200 1050 87 q 1190 518 1190 312 q 1134 800 1190 699 q 979 900 1078 900 z "},"ѡ":{"ha":1137,"x_min":0,"x_max":1061,"o":"m 547 310 q 534 275 541 292 q 406 0 527 258 l 261 0 l 0 743 l 117 743 l 283 272 q 336 81 305 209 l 342 81 q 380 172 355 117 q 501 425 405 227 l 385 743 l 505 743 q 700 173 685 222 q 722 94 715 124 l 728 94 q 897 367 845 219 q 949 743 949 514 l 1061 743 q 995 327 1061 498 q 781 0 929 155 l 657 0 l 572 235 q 547 310 550 297 z "},"Ѣ":{"ha":937,"x_min":16,"x_max":865,"o":"m 16 864 l 232 864 l 232 1055 l 349 1055 l 349 864 l 632 864 l 632 764 l 349 764 l 349 568 l 485 568 q 865 289 865 568 q 775 74 865 148 q 509 0 686 0 l 232 0 l 232 764 l 16 764 l 16 864 m 349 98 l 493 98 q 685 145 623 98 q 746 289 746 191 q 683 424 746 382 q 472 465 620 465 l 349 465 l 349 98 z "},"ѣ":{"ha":878,"x_min":16,"x_max":800,"o":"m 288 743 l 521 743 l 521 648 l 288 648 l 288 435 l 504 435 q 800 227 800 435 q 725 57 800 114 q 500 0 649 0 l 175 0 l 175 648 l 16 648 l 16 743 l 175 743 l 175 895 l 288 895 l 288 743 m 288 339 l 288 94 l 494 94 q 689 220 689 94 q 643 311 689 282 q 492 339 597 339 l 288 339 z "},"Ѥ":{"ha":1276,"x_min":136,"x_max":1238,"o":"m 965 903 q 723 818 811 903 q 614 570 635 733 l 1090 570 l 1090 468 l 611 468 q 706 186 616 283 q 964 89 796 89 q 1200 126 1068 89 l 1200 25 q 946 -14 1097 -14 q 612 111 730 -14 q 489 467 494 236 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 493 570 q 638 891 513 778 q 970 1006 764 1004 q 1238 943 1114 1006 l 1189 844 q 1068 890 1121 877 q 965 903 1015 903 z "},"ѥ":{"ha":1022,"x_min":119,"x_max":974,"o":"m 775 -14 q 525 77 616 -14 q 427 335 434 167 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 l 232 431 l 428 431 q 535 673 444 590 q 778 757 627 757 q 885 746 833 757 q 974 718 937 735 l 940 623 q 778 657 846 657 q 611 602 667 657 q 543 431 554 546 l 907 431 l 907 335 l 542 335 q 605 146 548 208 q 774 85 663 85 q 856 92 815 85 q 962 125 896 100 l 962 25 q 775 -14 888 -14 z "},"Ѧ":{"ha":942,"x_min":0,"x_max":942,"o":"m 624 463 l 524 463 l 524 0 l 418 0 l 418 463 l 317 463 l 121 0 l 0 0 l 418 991 l 525 991 l 942 0 l 818 0 l 624 463 m 359 564 l 585 564 l 529 704 q 471 869 491 802 q 411 692 454 803 l 359 564 z "},"ѧ":{"ha":783,"x_min":7,"x_max":777,"o":"m 461 743 l 777 0 l 660 0 l 519 332 l 443 332 l 443 0 l 340 0 l 340 332 l 262 332 l 123 0 l 7 0 l 322 743 l 461 743 m 300 427 l 484 427 q 435 547 454 500 q 393 665 416 593 l 387 665 q 300 427 368 603 z "},"Ѩ":{"ha":1279,"x_min":136,"x_max":1279,"o":"m 958 467 l 861 467 l 861 0 l 757 0 l 757 467 l 657 467 l 464 0 l 338 0 l 534 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 578 570 l 755 991 l 863 991 l 1279 0 l 1152 0 l 958 467 m 700 570 l 916 570 q 826 808 836 779 q 808 869 817 838 q 784 789 795 824 q 700 570 772 753 z "},"ѩ":{"ha":1064,"x_min":119,"x_max":1055,"o":"m 742 743 l 1055 0 l 940 0 l 799 335 l 722 335 l 722 0 l 619 0 l 619 335 l 545 335 l 403 0 l 286 0 l 428 335 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 l 232 431 l 469 431 l 603 743 l 742 743 m 673 665 l 668 665 q 650 610 661 642 q 579 431 640 578 l 761 431 l 673 665 z "},"Ѫ":{"ha":1002,"x_min":14,"x_max":986,"o":"m 896 991 l 896 901 l 610 566 q 742 537 690 562 q 828 466 794 513 q 896 307 862 418 l 986 0 l 868 0 l 775 310 q 728 418 751 385 q 671 463 705 450 q 576 476 637 476 l 558 476 l 558 0 l 443 0 l 443 476 l 425 476 q 330 463 363 476 q 274 417 296 450 q 231 310 252 385 l 139 0 l 14 0 l 106 307 q 171 463 138 415 q 255 536 205 511 q 386 566 306 561 l 107 901 l 107 991 l 896 991 m 757 888 l 243 888 l 500 579 l 757 888 z "},"ѫ":{"ha":892,"x_min":8,"x_max":882,"o":"m 789 743 l 789 672 l 559 433 q 656 412 618 429 q 719 369 694 396 q 760 306 743 342 q 882 0 777 271 l 765 0 l 675 228 q 632 311 652 287 q 584 345 612 335 q 504 354 555 354 l 497 354 l 497 0 l 393 0 l 393 354 l 386 354 q 307 345 335 354 q 260 315 279 336 q 215 229 241 293 l 123 0 l 8 0 l 97 228 q 130 305 113 269 q 171 367 146 340 q 233 411 195 394 q 329 433 270 428 l 102 672 l 102 743 l 789 743 m 644 648 l 245 648 l 444 432 l 644 648 z "},"Ѭ":{"ha":1353,"x_min":136,"x_max":1349,"o":"m 1257 991 l 1257 901 l 972 564 q 1106 535 1054 559 q 1192 462 1158 511 q 1257 307 1226 413 l 1349 0 l 1235 0 l 1141 310 q 1097 414 1120 380 q 1037 461 1073 448 q 937 475 1002 475 l 921 475 l 921 0 l 804 0 l 804 475 l 787 475 q 690 461 724 475 q 633 415 656 448 q 589 310 611 383 l 497 0 l 376 0 l 468 302 q 543 467 505 427 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 745 570 l 468 901 l 468 991 l 1257 991 m 1120 888 l 606 888 l 863 578 l 1120 888 z "},"ѭ":{"ha":1175,"x_min":119,"x_max":1168,"o":"m 1075 743 l 1075 672 l 846 432 q 943 411 905 427 q 1005 368 981 394 q 1046 306 1030 341 q 1168 0 1063 270 l 1051 0 l 961 228 q 918 310 938 286 q 869 343 899 334 q 790 353 840 353 l 783 353 l 783 0 l 679 0 l 679 353 l 672 353 q 593 343 621 353 q 546 313 564 334 q 501 229 527 292 l 410 0 l 294 0 l 383 228 q 440 336 415 309 l 232 336 l 232 0 l 119 0 l 119 743 l 232 743 l 232 432 l 615 432 l 387 672 l 387 743 l 1075 743 m 930 648 l 532 648 l 730 436 l 930 648 z "},"Ѯ":{"ha":808,"x_min":43,"x_max":730,"o":"m 163 -93 q 192 -147 163 -130 q 282 -164 222 -164 q 429 -159 348 -164 q 558 -155 511 -155 q 711 -182 663 -155 l 711 -294 q 549 -260 657 -260 q 431 -263 503 -260 q 289 -267 360 -267 q 105 -224 168 -267 q 43 -92 43 -182 q 116 38 43 -6 q 347 87 190 81 q 547 140 486 93 q 608 282 608 186 q 304 464 608 464 l 157 464 l 157 561 l 298 561 q 514 611 437 561 q 590 750 590 661 q 535 866 590 823 q 387 909 480 909 q 252 891 315 909 q 114 825 189 872 l 56 903 q 298 999 170 980 q 180 1126 260 1044 l 147 1161 l 147 1179 l 231 1179 q 382 1047 293 1139 q 489 1154 444 1125 q 576 1183 533 1183 q 643 1174 610 1183 l 643 1097 q 597 1104 627 1104 q 530 1076 568 1104 q 460 1000 492 1048 q 646 921 581 985 q 711 760 711 857 q 647 602 711 665 q 467 522 582 540 l 467 517 q 662 440 593 500 q 730 282 730 380 q 634 69 730 141 q 347 -9 538 -3 q 208 -32 254 -13 q 163 -93 163 -50 z "},"ѯ":{"ha":671,"x_min":17,"x_max":607,"o":"m 515 921 q 581 911 550 921 l 581 835 q 536 842 564 842 q 470 815 505 842 q 404 746 435 788 q 534 680 487 727 q 582 561 582 633 q 439 397 582 436 l 439 392 q 607 207 607 344 q 525 50 607 106 q 290 -9 443 -7 q 190 -19 227 -11 q 137 -41 153 -26 q 121 -85 121 -55 q 146 -133 121 -118 q 232 -147 172 -147 q 373 -144 290 -147 l 492 -140 q 603 -167 576 -140 l 603 -264 q 560 -243 589 -251 q 494 -235 532 -235 l 373 -238 q 222 -241 285 -241 q 71 -201 125 -241 q 17 -85 17 -161 q 81 36 17 -6 q 268 81 146 79 q 494 212 494 83 q 441 309 494 278 q 281 339 389 339 l 180 339 l 180 435 l 261 435 q 472 551 472 435 q 301 661 472 661 q 202 650 251 661 q 94 614 154 638 l 54 705 q 224 753 138 743 q 92 899 161 832 l 92 917 l 175 917 q 321 789 226 882 q 426 892 380 863 q 515 921 471 921 z "},"Ѱ":{"ha":1105,"x_min":74,"x_max":1032,"o":"m 610 0 l 494 0 l 494 302 l 464 302 q 258 344 345 302 q 123 469 172 385 q 74 664 74 553 l 74 991 l 192 991 l 192 667 q 262 471 192 539 q 476 403 332 403 l 494 403 l 494 991 l 610 991 l 610 403 l 629 403 q 843 470 772 403 q 913 664 913 537 l 913 991 l 1032 991 l 1032 665 q 983 470 1032 553 q 847 344 935 386 q 640 302 759 302 l 610 302 l 610 0 z "},"ѱ":{"ha":1046,"x_min":111,"x_max":960,"o":"m 582 1054 l 582 83 q 778 172 709 94 q 847 389 847 250 q 838 550 847 470 q 804 743 829 629 l 917 743 q 960 393 960 559 q 863 102 960 206 q 582 -12 766 -1 l 582 -334 l 471 -334 l 471 -12 q 201 92 292 -6 q 111 375 111 191 l 111 743 l 224 743 l 224 371 q 285 165 224 239 q 471 82 346 91 l 471 1054 l 582 1054 z "},"Ѳ":{"ha":1083,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 542 87 q 781 180 697 87 q 873 454 865 273 l 208 454 q 301 180 217 273 q 542 87 386 87 m 543 904 q 306 817 391 904 q 208 555 221 729 l 872 555 q 778 816 861 728 q 543 904 695 904 z "},"ѳ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 419 81 q 582 143 526 81 q 644 335 637 205 l 195 335 q 255 145 201 209 q 419 81 309 81 m 418 661 q 258 603 312 661 q 196 431 205 544 l 643 431 q 578 603 633 545 q 418 661 524 661 z "},"Ѵ":{"ha":869,"x_min":0,"x_max":917,"o":"m 847 905 q 781 870 807 905 q 715 713 754 836 l 493 0 l 359 0 l 0 991 l 122 991 l 351 355 q 424 123 400 220 q 493 372 446 221 l 603 724 q 671 905 643 853 q 737 978 700 956 q 835 1000 774 1000 q 917 987 863 1000 l 917 892 q 847 905 879 905 z "},"ѵ":{"ha":703,"x_min":0,"x_max":736,"o":"m 275 0 l 0 743 l 118 743 l 271 328 q 351 78 338 146 l 357 78 q 428 339 372 158 l 493 549 q 542 673 518 631 q 597 732 566 715 q 685 750 628 750 q 736 743 715 750 l 736 657 q 690 663 716 663 q 639 634 659 663 q 600 543 619 606 l 432 0 l 275 0 z "},"Ѷ":{"ha":869,"x_min":0,"x_max":917,"o":"m 847 905 q 781 870 807 905 q 715 713 754 836 l 493 0 l 359 0 l 0 991 l 122 991 l 351 355 q 424 123 400 220 q 493 372 446 221 l 603 724 q 671 905 643 853 q 737 978 700 956 q 835 1000 774 1000 q 917 987 863 1000 l 917 892 q 847 905 879 905 m 615 1071 l 550 1071 q 455 1168 515 1099 q 370 1279 395 1236 l 370 1293 l 496 1293 q 548 1193 515 1252 q 615 1088 582 1134 l 615 1071 m 374 1071 l 309 1071 q 212 1168 271 1101 q 127 1279 153 1236 l 127 1293 l 254 1293 q 307 1193 273 1252 q 374 1088 340 1134 l 374 1071 z "},"ѷ":{"ha":703,"x_min":0,"x_max":736,"o":"m 275 0 l 0 743 l 118 743 l 271 328 q 351 78 338 146 l 357 78 q 428 339 372 158 l 493 549 q 542 673 518 631 q 597 732 566 715 q 685 750 628 750 q 736 743 715 750 l 736 657 q 690 663 716 663 q 639 634 659 663 q 600 543 619 606 l 432 0 l 275 0 m 537 842 l 472 842 q 377 939 437 870 q 292 1050 317 1007 l 292 1064 l 418 1064 q 470 964 437 1023 q 537 859 504 905 l 537 842 m 296 842 l 231 842 q 134 939 193 871 q 50 1050 75 1007 l 50 1064 l 176 1064 q 229 964 195 1023 q 296 859 262 905 l 296 842 z "},"Ѹ":{"ha":1679,"x_min":85,"x_max":1672,"o":"m 925 497 q 814 122 925 258 q 505 -14 703 -14 q 194 120 304 -14 q 85 498 85 254 q 194 874 85 741 q 507 1007 304 1007 q 815 871 705 1007 q 925 497 925 736 m 207 497 q 282 192 207 296 q 505 87 358 87 q 728 191 653 87 q 803 497 803 294 q 728 801 803 699 q 507 904 654 904 q 283 802 359 904 q 207 497 207 699 m 977 743 l 1096 743 l 1263 317 q 1329 107 1316 176 l 1335 107 q 1370 222 1342 137 q 1553 743 1398 307 l 1672 743 l 1354 -103 q 1244 -280 1308 -227 q 1088 -334 1180 -334 q 986 -322 1036 -334 l 986 -232 q 1068 -240 1023 -240 q 1172 -205 1132 -240 q 1235 -110 1211 -170 l 1276 -4 l 977 743 z "},"ѹ":{"ha":1474,"x_min":78,"x_max":1472,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 775 743 l 896 743 l 1059 319 q 1125 110 1112 174 l 1131 110 q 1167 228 1139 144 q 1352 743 1196 312 l 1472 743 l 1153 -103 q 1042 -281 1105 -229 q 886 -334 979 -334 q 785 -322 835 -334 l 785 -232 q 868 -240 822 -240 q 1034 -110 984 -240 l 1075 -4 l 775 743 z "},"Ѻ":{"ha":1137,"x_min":85,"x_max":1053,"o":"m 1053 497 q 950 158 1053 292 q 668 -7 847 23 q 570 -82 650 -82 q 472 -7 486 -82 q 188 155 290 21 q 85 498 85 288 q 186 837 85 705 q 472 999 288 969 q 570 1072 486 1072 q 667 999 652 1072 q 950 834 848 969 q 1053 497 1053 700 m 207 497 q 275 228 207 332 q 472 97 344 125 q 508 142 484 130 q 570 155 533 155 q 665 97 644 155 q 862 228 793 125 q 930 497 930 332 q 862 765 930 663 q 665 895 793 868 q 570 835 644 835 q 472 893 493 835 q 275 765 344 867 q 207 497 207 663 z "},"ѻ":{"ha":913,"x_min":78,"x_max":835,"o":"m 835 372 q 759 116 835 214 q 545 -7 683 18 q 517 -59 538 -43 q 457 -74 495 -74 q 398 -59 418 -74 q 371 -7 377 -45 q 156 117 233 18 q 78 372 78 217 q 154 628 78 530 q 371 750 230 726 q 397 802 376 788 q 457 817 418 817 q 517 802 495 817 q 545 749 538 787 q 758 624 682 723 q 835 372 835 525 m 195 372 q 237 181 195 252 q 372 89 279 110 q 401 129 380 117 q 457 140 421 140 q 543 90 527 140 q 676 182 634 111 q 718 372 718 254 q 542 653 718 611 q 512 614 533 625 q 457 603 492 603 q 401 614 421 603 q 372 654 380 625 q 237 563 279 633 q 195 372 195 492 z "},"Ѽ":{"ha":1388,"x_min":85,"x_max":1301,"o":"m 978 1350 l 978 1268 l 966 1268 q 861 1280 909 1268 q 772 1307 813 1293 q 697 1334 732 1322 q 633 1346 663 1346 q 581 1329 602 1346 q 561 1276 561 1311 l 561 1265 l 476 1265 l 476 1284 q 515 1392 476 1354 q 631 1429 555 1429 q 708 1417 670 1429 q 786 1390 746 1404 q 872 1362 827 1375 q 970 1350 917 1350 l 978 1350 m 476 87 q 594 110 536 87 q 693 175 652 132 q 788 112 730 136 q 909 87 846 87 q 1108 201 1037 87 q 1179 518 1179 314 q 1123 800 1179 699 q 968 900 1067 900 q 895 885 927 900 q 833 850 863 871 l 786 949 q 972 1004 868 1004 q 1214 877 1127 1004 q 1301 519 1301 749 q 1204 127 1301 267 q 930 -14 1106 -14 q 802 0 860 -14 q 693 46 745 14 q 586 1 642 16 q 454 -14 529 -14 q 181 126 278 -14 q 85 519 85 267 q 172 878 85 751 q 414 1004 259 1004 q 600 949 518 1004 l 553 850 q 492 885 524 871 q 419 900 460 900 q 263 800 319 900 q 207 518 207 700 q 278 200 207 313 q 476 87 349 87 m 783 1200 q 623 1048 783 1090 l 623 1097 q 704 1161 704 1125 q 693 1181 704 1175 q 671 1193 683 1187 q 648 1207 659 1198 q 637 1235 637 1216 q 700 1284 637 1284 q 761 1261 738 1284 q 783 1200 783 1238 z "},"ѽ":{"ha":1122,"x_min":78,"x_max":1044,"o":"m 724 -14 q 559 31 623 -14 q 400 -14 497 -14 q 163 85 248 -14 q 78 367 78 184 q 148 656 78 556 q 345 757 218 757 q 427 746 387 757 q 494 718 467 735 l 456 624 q 347 659 395 659 q 232 586 269 659 q 195 368 195 513 q 401 85 195 85 q 561 139 485 85 q 641 98 603 111 q 724 85 678 85 q 928 368 928 85 q 890 586 928 513 q 775 659 853 659 q 667 624 727 659 l 628 718 q 695 746 655 735 q 778 757 736 757 q 975 656 905 757 q 1044 367 1044 555 q 961 86 1044 186 q 724 -14 877 -14 m 822 1140 l 822 1059 l 811 1059 q 706 1071 754 1059 q 616 1097 657 1083 q 542 1124 576 1112 q 478 1136 507 1136 q 406 1067 406 1136 l 406 1055 l 321 1055 l 321 1076 q 360 1182 321 1144 q 475 1219 399 1219 q 552 1207 514 1219 q 631 1180 591 1194 q 715 1153 671 1165 q 812 1140 760 1140 l 822 1140 m 628 990 q 467 839 628 881 l 467 888 q 547 953 547 915 q 537 972 547 966 q 515 984 527 978 q 492 998 503 989 q 482 1025 482 1006 q 545 1075 482 1075 q 605 1052 583 1075 q 628 990 628 1029 z "},"Ѿ":{"ha":1367,"x_min":64,"x_max":1301,"o":"m 962 1218 l 962 1200 l 908 1083 l 886 1083 l 852 1153 l 726 1153 l 693 1083 l 671 1083 l 637 1153 l 510 1153 l 478 1083 l 456 1083 l 401 1200 l 401 1218 l 962 1218 m 968 900 q 896 886 927 900 q 833 851 864 872 l 786 950 q 974 1004 870 1004 q 1215 877 1128 1004 q 1301 519 1301 749 q 1204 126 1301 267 q 932 -14 1107 -14 q 795 3 853 -14 q 685 52 736 19 l 679 52 q 568 2 626 18 q 433 -14 509 -14 q 160 127 257 -14 q 64 519 64 269 q 151 878 64 751 q 393 1004 238 1004 q 581 950 495 1004 l 533 851 q 471 886 503 872 q 399 900 439 900 q 243 799 299 900 q 187 518 187 699 q 258 200 187 313 q 458 87 330 87 q 547 100 503 87 q 625 139 591 113 l 625 449 l 741 449 l 741 139 q 908 87 810 87 q 1107 199 1036 87 q 1179 518 1179 311 q 1123 800 1179 699 q 968 900 1067 900 z "},"ѿ":{"ha":1137,"x_min":0,"x_max":1061,"o":"m 818 979 l 818 961 l 762 844 l 742 844 l 708 914 l 581 914 l 547 844 l 526 844 l 493 914 l 366 914 l 332 844 l 311 844 l 257 961 l 257 979 l 818 979 m 547 310 l 521 245 l 406 0 l 261 0 l 0 743 l 117 743 l 283 272 q 338 81 310 197 l 343 81 q 363 132 351 104 q 501 425 375 159 l 385 743 l 505 743 q 700 173 685 222 q 722 94 715 124 l 728 94 q 897 367 845 219 q 949 743 949 514 l 1061 743 q 995 327 1061 498 q 781 0 929 155 l 657 0 l 572 235 q 547 310 550 297 z "},"Ҁ":{"ha":888,"x_min":85,"x_max":848,"o":"m 570 903 q 306 794 404 903 q 208 496 208 686 q 298 195 208 296 q 564 93 389 93 q 677 109 639 93 l 677 -334 l 562 -334 l 562 -14 l 549 -14 q 204 118 324 -14 q 85 497 85 250 q 144 765 85 649 q 315 943 203 881 q 572 1006 426 1006 q 848 949 733 1006 l 800 850 q 570 903 684 903 z "},"ҁ":{"ha":677,"x_min":78,"x_max":631,"o":"m 427 -14 q 166 84 254 -14 q 78 367 78 181 q 171 655 78 554 q 433 757 263 757 q 543 745 487 757 q 631 718 598 734 l 597 623 q 431 657 501 657 q 253 588 311 657 q 195 368 195 518 q 253 151 195 219 q 427 83 311 83 q 490 89 463 83 q 555 113 517 95 l 555 -334 l 443 -334 l 443 -14 l 427 -14 z "},"҂":{"ha":846,"x_min":72,"x_max":774,"o":"m 349 212 l 225 -3 l 143 43 l 267 261 l 72 374 l 117 452 l 313 338 l 452 579 l 256 692 l 301 771 l 497 657 l 623 872 l 703 827 l 578 610 l 774 497 l 728 419 l 533 532 l 395 292 l 589 178 l 545 100 l 349 212 z "},"҃":{"ha":774,"x_min":138,"x_max":637,"o":"m 265 857 q 247 810 261 827 q 200 793 233 793 q 152 810 165 793 q 138 863 138 827 q 152 912 138 899 q 203 926 166 926 l 507 926 q 526 974 511 958 q 572 990 541 990 q 622 974 607 990 q 637 922 637 957 q 623 871 637 884 q 571 857 608 857 l 265 857 z "},"҄":{"ha":802,"x_min":168,"x_max":669,"o":"m 176 935 q 359 975 258 935 q 515 1014 460 1014 q 630 976 591 1014 q 669 871 669 939 l 669 850 l 585 850 l 585 861 q 513 930 585 930 q 449 918 484 930 q 373 891 414 906 q 284 865 332 877 q 179 852 236 852 l 168 852 l 168 935 l 176 935 z "},"҅":{"ha":802,"x_min":325,"x_max":486,"o":"m 325 993 q 348 1054 325 1031 q 408 1078 370 1078 q 471 1026 471 1078 q 460 999 471 1008 q 438 985 450 991 q 416 974 426 980 q 406 954 406 968 q 486 890 406 918 l 486 840 q 325 993 325 884 z "},"҆":{"ha":802,"x_min":326,"x_max":488,"o":"m 488 993 q 326 840 488 884 l 326 890 q 407 954 407 918 q 397 974 407 968 q 374 985 387 980 q 352 999 362 991 q 342 1026 342 1008 q 404 1078 342 1078 q 465 1054 442 1078 q 488 993 488 1031 z "},"҈":{"ha":1373,"x_min":28,"x_max":1346,"o":"m 770 835 q 746 880 766 865 q 679 895 726 895 q 609 881 626 895 q 589 835 592 867 l 538 835 q 679 966 545 966 q 780 932 742 966 q 823 835 819 898 l 770 835 m 770 -216 q 746 -172 766 -186 q 679 -157 726 -157 q 609 -171 626 -157 q 589 -216 592 -184 l 538 -216 q 575 -120 541 -156 q 679 -85 609 -85 q 780 -119 741 -85 q 823 -216 819 -154 l 770 -216 m 1162 -28 q 1139 17 1159 3 q 1072 32 1118 32 q 1002 19 1019 32 q 982 -28 985 5 l 930 -28 q 968 69 934 33 q 1072 104 1002 104 q 1174 70 1135 104 q 1217 -28 1213 35 l 1162 -28 m 380 -28 q 357 17 377 3 q 290 32 336 32 q 220 19 237 32 q 200 -28 203 5 l 149 -28 q 186 69 152 33 q 290 104 220 104 q 392 70 353 104 q 435 -28 431 35 l 380 -28 m 1162 642 q 1139 687 1159 672 q 1072 701 1118 701 q 1002 688 1019 701 q 982 642 985 675 l 930 642 q 968 738 934 703 q 1072 774 1002 774 q 1174 739 1135 774 q 1217 642 1213 705 l 1162 642 m 380 642 q 357 687 377 672 q 290 701 336 701 q 220 688 237 701 q 200 642 203 675 l 149 642 q 186 738 152 703 q 290 774 220 774 q 392 739 353 774 q 435 642 431 705 l 380 642 m 1292 311 q 1268 356 1289 341 q 1202 371 1248 371 q 1132 357 1149 371 q 1111 311 1114 344 l 1060 311 q 1202 443 1067 443 q 1303 408 1264 443 q 1346 311 1342 372 l 1292 311 m 260 311 q 236 356 256 342 q 170 371 216 371 q 100 358 117 371 q 79 311 83 345 l 28 311 q 65 408 31 372 q 170 443 100 443 q 271 408 232 443 q 314 311 310 374 l 260 311 z "},"҉":{"ha":1328,"x_min":28,"x_max":1300,"o":"m 732 -24 l 739 -33 q 704 -143 728 -78 q 656 -261 680 -208 l 590 -261 q 637 -24 626 -111 l 732 -24 m 597 774 l 590 783 q 628 899 603 831 q 673 1011 652 967 l 739 1011 q 692 774 704 862 l 597 774 m 1063 441 l 1072 449 q 1188 411 1120 436 q 1300 366 1256 387 l 1300 300 q 1063 347 1150 336 l 1063 441 m 265 307 l 256 300 q 146 335 211 311 q 28 383 81 359 l 28 449 q 265 401 178 413 l 265 307 m 899 690 l 900 701 q 1010 758 945 728 q 1120 804 1074 787 l 1166 758 q 965 624 1046 684 l 899 690 m 429 31 l 428 20 q 208 -83 323 -41 l 161 -37 q 363 97 281 37 l 429 31 m 334 595 l 322 596 q 220 815 267 691 l 265 863 q 400 661 349 728 l 334 595 m 993 125 l 1004 123 q 1061 11 1031 77 q 1107 -96 1092 -55 l 1061 -143 q 996 -43 1040 -109 q 926 58 952 23 l 993 125 z "},"Ҋ":{"ha":1069,"x_min":136,"x_max":1047,"o":"m 136 991 l 245 991 l 245 439 q 239 219 245 359 l 236 163 l 241 163 l 798 991 l 922 991 l 922 103 l 1047 103 l 950 -258 l 817 -258 l 922 0 l 814 0 l 814 546 q 827 832 814 665 l 821 832 l 262 0 l 136 0 l 136 991 m 529 1071 q 346 1119 403 1071 q 282 1279 289 1168 l 387 1279 q 426 1179 394 1206 q 532 1153 457 1153 q 636 1184 603 1153 q 676 1279 670 1216 l 783 1279 q 714 1121 775 1171 q 529 1071 652 1071 z "},"ҋ":{"ha":893,"x_min":119,"x_max":880,"o":"m 225 743 l 225 294 q 218 110 225 202 l 621 743 l 761 743 l 761 97 l 880 97 l 793 -256 l 676 -256 l 761 0 l 656 0 l 656 456 q 661 633 656 563 l 258 0 l 119 0 l 119 743 l 225 743 m 453 842 q 270 890 328 842 q 205 1050 212 939 l 311 1050 q 347 952 316 981 q 456 924 377 924 q 559 954 526 924 q 600 1050 593 985 l 707 1050 q 638 892 699 943 q 453 842 578 842 z "},"Ҍ":{"ha":851,"x_min":32,"x_max":779,"o":"m 32 865 l 136 865 l 136 991 l 252 991 l 252 865 l 484 865 l 484 764 l 252 764 l 252 568 l 382 568 q 779 289 779 568 q 686 73 779 146 q 408 0 592 0 l 136 0 l 136 764 l 32 764 l 32 865 m 252 98 l 401 98 q 659 289 659 98 q 596 422 659 378 q 397 465 534 465 l 252 465 l 252 98 z "},"ҍ":{"ha":822,"x_min":14,"x_max":746,"o":"m 232 889 l 432 889 l 432 802 l 232 802 l 232 436 l 449 436 q 673 384 600 436 q 746 227 746 332 q 670 58 746 115 q 444 0 594 0 l 119 0 l 119 802 l 14 802 l 14 889 l 119 889 l 119 1055 l 232 1055 l 232 889 m 232 339 l 232 94 l 439 94 q 633 220 633 94 q 589 311 633 282 q 436 339 544 339 l 232 339 z "},"Ҏ":{"ha":848,"x_min":136,"x_max":777,"o":"m 777 703 q 738 548 777 616 q 625 441 699 480 l 707 335 l 639 278 l 538 408 q 376 390 469 390 l 252 390 l 252 0 l 136 0 l 136 991 l 403 991 q 683 919 589 991 q 777 703 777 846 m 252 489 l 364 489 q 475 496 423 489 l 401 591 l 475 647 l 570 528 q 656 697 656 576 q 590 844 656 795 q 387 892 524 892 l 252 892 l 252 489 z "},"ҏ":{"ha":851,"x_min":119,"x_max":774,"o":"m 465 -14 q 333 13 393 -14 q 232 96 273 40 l 224 96 q 232 -28 232 -5 l 232 -334 l 119 -334 l 119 743 l 211 743 l 228 642 l 233 642 q 334 730 277 703 q 465 757 391 757 q 693 656 613 757 q 774 372 774 555 q 650 45 774 143 l 728 -61 l 660 -115 l 571 3 q 465 -14 523 -14 m 449 661 q 284 598 335 661 q 232 397 233 535 l 232 372 q 284 148 232 216 q 452 81 336 81 q 511 89 484 81 l 429 196 l 501 250 l 589 135 q 657 374 657 205 q 606 590 657 519 q 449 661 555 661 z "},"Ғ":{"ha":732,"x_min":32,"x_max":700,"o":"m 700 991 l 700 888 l 252 888 l 252 542 l 539 542 l 539 440 l 252 440 l 252 0 l 136 0 l 136 440 l 32 440 l 32 542 l 136 542 l 136 991 l 700 991 z "},"ғ":{"ha":595,"x_min":12,"x_max":566,"o":"m 566 648 l 232 648 l 232 415 l 467 415 l 467 329 l 232 329 l 232 0 l 119 0 l 119 329 l 12 329 l 12 415 l 119 415 l 119 743 l 566 743 l 566 648 z "},"Ҕ":{"ha":892,"x_min":136,"x_max":843,"o":"m 380 444 q 252 436 313 444 l 252 0 l 136 0 l 136 991 l 707 991 l 707 888 l 252 888 l 252 538 q 395 545 313 545 q 727 430 612 545 q 843 102 843 315 q 746 -230 843 -112 q 473 -347 649 -347 q 375 -340 417 -347 q 285 -314 332 -333 l 285 -211 q 461 -244 368 -244 q 721 102 721 -244 q 634 356 721 268 q 380 444 547 444 z "},"ҕ":{"ha":729,"x_min":119,"x_max":690,"o":"m 395 -340 q 228 -300 296 -340 l 228 -199 q 390 -241 307 -241 q 526 -173 480 -241 q 572 41 572 -104 q 512 263 572 193 q 329 334 452 334 q 232 322 282 334 l 232 0 l 119 0 l 119 743 l 571 743 l 571 647 l 232 647 l 232 424 q 328 432 288 432 q 601 336 512 432 q 690 40 690 240 q 613 -241 690 -141 q 395 -340 536 -340 z "},"Җ":{"ha":1236,"x_min":1,"x_max":1210,"o":"m 406 510 l 16 991 l 144 991 l 530 511 l 530 991 l 642 991 l 642 511 l 1028 991 l 1157 991 l 766 511 l 1088 104 l 1210 104 l 1210 -258 l 1100 -258 l 1100 0 l 1036 0 l 642 503 l 642 0 l 530 0 l 530 503 l 136 0 l 1 0 l 406 510 z "},"җ":{"ha":1083,"x_min":3,"x_max":1063,"o":"m 458 743 l 562 743 l 562 383 l 869 743 l 993 743 l 682 383 l 932 97 l 1063 97 l 1063 -256 l 953 -256 l 953 0 l 889 0 l 562 378 l 562 0 l 458 0 l 458 378 l 132 0 l 3 0 l 339 383 l 29 743 l 153 743 l 458 383 l 458 743 z "},"Ҙ":{"ha":807,"x_min":50,"x_max":730,"o":"m 711 760 q 649 601 711 662 q 478 524 587 540 l 478 518 q 666 440 602 501 q 730 281 730 379 q 627 64 730 142 q 334 -14 523 -14 q 50 40 161 -14 l 50 147 q 191 99 115 116 q 336 82 267 82 q 539 133 471 82 q 608 279 608 184 q 532 417 608 370 q 304 464 456 464 l 157 464 l 157 561 l 298 561 q 514 611 437 561 q 590 750 590 661 q 535 866 590 823 q 387 909 480 909 q 252 892 313 909 q 113 825 192 876 l 56 903 q 209 980 124 954 q 386 1006 294 1006 q 625 939 538 1006 q 711 760 711 872 m 385 -161 q 290 0 385 -92 l 374 0 q 481 -171 481 -81 q 446 -268 481 -233 q 345 -302 412 -302 q 267 -292 300 -302 l 267 -218 q 325 -225 288 -225 q 367 -209 350 -225 q 385 -161 385 -193 z "},"ҙ":{"ha":671,"x_min":46,"x_max":607,"o":"m 261 435 q 472 551 472 435 q 301 661 472 661 q 206 652 249 661 q 94 614 163 642 l 54 705 q 306 757 170 757 q 508 704 434 757 q 582 561 582 652 q 443 397 582 436 l 443 392 q 568 320 528 367 q 607 204 607 274 q 524 44 607 101 q 294 -14 441 -14 q 46 35 134 -14 l 46 138 q 297 79 170 79 q 445 113 395 79 q 494 210 494 146 q 283 339 494 339 l 180 339 l 180 435 l 261 435 m 330 -161 q 236 0 330 -92 l 319 0 q 427 -171 427 -81 q 392 -268 427 -233 q 290 -302 357 -302 q 212 -292 246 -302 l 212 -218 q 271 -225 234 -225 q 313 -209 296 -225 q 330 -161 330 -193 z "},"Қ":{"ha":918,"x_min":136,"x_max":897,"o":"m 781 104 l 897 104 l 897 -258 l 787 -258 l 787 0 l 718 0 l 355 481 l 252 389 l 252 0 l 136 0 l 136 991 l 252 991 l 252 500 l 701 991 l 838 991 l 439 561 l 781 104 z "},"қ":{"ha":757,"x_min":119,"x_max":736,"o":"m 553 743 l 676 743 l 355 385 l 615 97 l 736 97 l 736 -257 l 628 -257 l 628 0 l 571 0 l 232 376 l 232 0 l 119 0 l 119 743 l 232 743 l 232 382 l 553 743 z "},"Ҝ":{"ha":852,"x_min":136,"x_max":852,"o":"m 336 461 l 252 389 l 252 0 l 136 0 l 136 991 l 252 991 l 252 496 l 336 590 l 336 827 l 421 827 l 421 684 l 700 991 l 838 991 l 439 561 l 852 0 l 717 0 l 421 410 l 421 203 l 336 203 l 336 461 z "},"ҝ":{"ha":741,"x_min":119,"x_max":734,"o":"m 313 294 l 232 376 l 232 0 l 119 0 l 119 743 l 232 743 l 232 382 l 313 464 l 313 688 l 401 688 l 401 549 l 585 743 l 708 743 l 401 421 l 401 349 l 734 0 l 603 0 l 400 214 l 400 64 l 313 64 l 313 294 z "},"Ҟ":{"ha":852,"x_min":32,"x_max":852,"o":"m 32 871 l 136 871 l 136 991 l 252 991 l 252 871 l 401 871 l 401 768 l 252 768 l 252 496 l 700 991 l 838 991 l 439 561 l 852 0 l 713 0 l 355 481 l 252 390 l 252 0 l 136 0 l 136 768 l 32 768 l 32 871 z "},"ҟ":{"ha":718,"x_min":14,"x_max":713,"o":"m 14 929 l 119 929 l 119 1055 l 231 1055 l 231 929 l 489 929 l 489 843 l 231 843 l 231 479 l 229 418 l 227 380 l 232 380 l 244 397 q 295 463 281 447 q 558 743 309 479 l 693 743 l 392 427 l 713 0 l 578 0 l 315 350 l 231 278 l 231 0 l 119 0 l 119 843 l 14 843 l 14 929 z "},"Ҡ":{"ha":957,"x_min":11,"x_max":957,"o":"m 11 991 l 355 991 l 355 496 l 804 991 l 942 991 l 543 561 l 957 0 l 821 0 l 460 481 l 355 389 l 355 0 l 240 0 l 240 888 l 11 888 l 11 991 z "},"ҡ":{"ha":854,"x_min":28,"x_max":848,"o":"m 28 743 l 376 743 l 376 382 l 699 743 l 822 743 l 501 383 l 848 0 l 717 0 l 376 376 l 376 0 l 265 0 l 265 648 l 28 648 l 28 743 z "},"Ң":{"ha":1036,"x_min":136,"x_max":999,"o":"m 889 104 l 999 104 l 999 -258 l 889 -258 l 889 0 l 774 0 l 774 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 774 570 l 774 991 l 889 991 l 889 104 z "},"ң":{"ha":900,"x_min":119,"x_max":863,"o":"m 232 743 l 232 432 l 648 432 l 648 743 l 761 743 l 761 97 l 863 97 l 863 -256 l 750 -256 l 750 0 l 648 0 l 648 335 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 z "},"Ҥ":{"ha":1129,"x_min":136,"x_max":1117,"o":"m 1117 888 l 889 888 l 889 0 l 772 0 l 772 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 772 570 l 772 991 l 1117 991 l 1117 888 z "},"ҥ":{"ha":1022,"x_min":119,"x_max":999,"o":"m 232 743 l 232 432 l 648 432 l 648 743 l 999 743 l 999 648 l 761 648 l 761 0 l 648 0 l 648 335 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 z "},"Ҧ":{"ha":1482,"x_min":136,"x_max":1409,"o":"m 842 0 l 726 0 l 726 888 l 252 888 l 252 0 l 136 0 l 136 991 l 842 991 l 842 536 q 972 545 888 545 q 1294 428 1180 545 q 1409 100 1409 311 q 1313 -230 1409 -113 q 1042 -347 1217 -347 q 852 -314 936 -347 l 852 -211 q 1029 -244 943 -244 q 1286 102 1286 -244 q 1208 354 1286 266 q 972 443 1130 443 q 901 440 944 443 q 842 435 858 438 l 842 0 z "},"ҧ":{"ha":1202,"x_min":119,"x_max":1156,"o":"m 884 -340 q 729 -300 795 -340 l 729 -199 q 876 -241 803 -241 q 1039 41 1039 -241 q 983 263 1039 193 q 810 334 926 334 q 715 319 764 334 l 715 0 l 602 0 l 602 646 l 232 646 l 232 0 l 119 0 l 119 743 l 715 743 l 715 422 q 811 432 766 432 q 1067 331 978 432 q 1156 40 1156 231 q 1085 -241 1156 -142 q 884 -340 1014 -340 z "},"Ҩ":{"ha":1082,"x_min":85,"x_max":1021,"o":"m 993 460 q 946 232 993 337 q 821 69 899 127 q 926 49 865 49 q 1021 64 979 49 l 1021 -40 q 921 -57 983 -57 q 700 11 800 -57 q 533 -14 631 -14 q 204 120 323 -14 q 85 485 85 253 q 196 873 85 740 q 521 1007 308 1007 q 669 983 607 1007 l 637 885 q 519 904 581 904 q 207 490 207 904 q 293 191 207 295 q 539 87 380 87 q 607 94 576 87 q 517 260 549 164 q 486 465 486 357 q 553 721 486 631 q 739 811 621 811 q 927 721 862 811 q 993 460 993 631 m 873 456 q 839 645 873 576 q 741 714 804 714 q 642 646 677 714 q 607 458 607 578 q 638 277 607 363 q 726 134 670 191 q 834 266 795 179 q 873 456 873 352 z "},"ҩ":{"ha":889,"x_min":78,"x_max":838,"o":"m 509 338 q 532 219 509 274 q 597 129 555 165 q 672 212 644 159 q 700 340 700 266 q 608 500 700 500 q 534 457 559 500 q 509 338 509 415 m 751 -39 q 564 14 652 -39 q 415 -14 498 -14 q 237 34 314 -14 q 119 167 161 81 q 78 364 78 253 q 162 654 78 551 q 400 757 246 757 q 514 742 462 757 l 489 648 q 399 661 452 661 q 244 590 293 661 q 195 363 195 519 q 252 152 195 223 q 421 81 310 81 q 464 84 446 81 q 486 89 482 87 q 392 342 392 189 q 449 525 392 459 q 608 590 506 590 q 762 526 709 590 q 815 342 815 462 q 779 186 815 257 q 679 72 743 115 q 760 54 714 54 q 838 64 804 54 l 838 -29 q 751 -39 811 -39 z "},"Ҫ":{"ha":876,"x_min":85,"x_max":835,"o":"m 561 903 q 303 794 397 903 q 208 496 208 685 q 299 195 208 301 q 559 89 391 89 q 796 126 663 89 l 796 25 q 542 -14 693 -14 q 204 119 323 -14 q 85 497 85 252 q 142 766 85 650 q 308 943 199 881 q 562 1006 416 1006 q 835 949 718 1006 l 786 850 q 561 903 673 903 m 524 -161 q 429 0 524 -92 l 513 0 q 620 -171 620 -81 q 585 -268 620 -233 q 484 -302 551 -302 q 406 -292 439 -302 l 406 -218 q 464 -225 427 -225 q 506 -209 489 -225 q 524 -161 524 -193 z "},"ҫ":{"ha":661,"x_min":78,"x_max":615,"o":"m 416 -14 q 166 86 255 -14 q 78 367 78 185 q 168 655 78 553 q 424 757 258 757 q 531 745 477 757 q 615 718 585 734 l 581 623 q 499 647 543 637 q 421 657 455 657 q 195 368 195 657 q 250 158 195 231 q 414 85 305 85 q 604 125 507 85 l 604 25 q 416 -14 530 -14 m 414 -161 q 319 0 414 -92 l 403 0 q 510 -171 510 -81 q 475 -268 510 -233 q 374 -302 441 -302 q 296 -292 330 -302 l 296 -218 q 354 -225 317 -225 q 396 -209 379 -225 q 414 -161 414 -193 z "},"Ҭ":{"ha":768,"x_min":11,"x_max":755,"o":"m 325 888 l 11 888 l 11 991 l 755 991 l 755 888 l 441 888 l 441 104 l 551 104 l 551 -258 l 441 -258 l 441 0 l 325 0 l 325 888 z "},"ҭ":{"ha":648,"x_min":28,"x_max":619,"o":"m 267 648 l 28 648 l 28 743 l 619 743 l 619 648 l 379 648 l 379 97 l 481 97 l 481 -256 l 368 -256 l 368 0 l 267 0 l 267 648 z "},"Ү":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 z "},"ү":{"ha":696,"x_min":0,"x_max":696,"o":"m 404 -334 l 292 -334 l 292 -3 l 0 743 l 117 743 l 277 328 q 346 111 333 177 l 351 111 q 421 328 374 205 l 579 743 l 696 743 l 404 -3 l 404 -334 z "},"Ұ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 345 l 650 345 l 650 241 l 447 241 l 447 0 l 330 0 l 330 241 l 126 241 l 126 345 l 330 345 l 330 379 l 0 991 l 126 991 l 389 496 z "},"ұ":{"ha":696,"x_min":0,"x_max":696,"o":"m 404 -87 l 404 -334 l 292 -334 l 292 -87 l 103 -87 l 103 0 l 290 0 l 0 743 l 117 743 l 277 328 q 346 111 333 177 l 351 111 q 421 328 374 205 l 579 743 l 696 743 l 406 0 l 591 0 l 591 -87 l 404 -87 z "},"Ҳ":{"ha":860,"x_min":5,"x_max":839,"o":"m 729 104 l 839 104 l 839 -258 l 729 -258 l 729 0 l 665 0 l 399 436 l 127 0 l 5 0 l 335 518 l 28 991 l 155 991 l 401 599 l 650 991 l 772 991 l 465 522 l 729 104 z "},"ҳ":{"ha":753,"x_min":26,"x_max":732,"o":"m 298 380 l 40 743 l 168 743 l 364 458 l 559 743 l 686 743 l 428 380 l 631 97 l 732 97 l 732 -257 l 619 -257 l 619 0 l 572 0 l 364 301 l 154 0 l 26 0 l 298 380 z "},"Ҵ":{"ha":1187,"x_min":11,"x_max":1156,"o":"m 1040 104 l 1156 104 l 1156 -258 l 1046 -258 l 1046 0 l 300 0 l 300 888 l 11 888 l 11 991 l 737 991 l 737 888 l 415 888 l 415 104 l 925 104 l 925 991 l 1040 991 l 1040 104 z "},"ҵ":{"ha":996,"x_min":28,"x_max":971,"o":"m 603 647 l 358 647 l 358 97 l 753 97 l 753 742 l 865 742 l 865 97 l 971 97 l 971 -256 l 859 -256 l 859 0 l 245 0 l 245 647 l 28 647 l 28 742 l 603 742 l 603 647 z "},"Ҷ":{"ha":961,"x_min":115,"x_max":939,"o":"m 829 104 l 939 104 l 939 -258 l 829 -258 l 829 0 l 714 0 l 714 410 q 546 360 613 374 q 407 347 479 347 q 191 412 267 347 q 115 597 115 476 l 115 991 l 231 991 l 231 611 q 274 490 231 529 q 414 450 317 450 q 539 460 479 450 q 714 507 600 470 l 714 991 l 829 991 l 829 104 z "},"ҷ":{"ha":846,"x_min":106,"x_max":827,"o":"m 218 743 l 218 472 q 367 342 218 342 q 485 361 429 342 q 612 425 541 380 l 612 743 l 725 743 l 725 97 l 827 97 l 827 -257 l 714 -257 l 714 0 l 612 0 l 612 336 q 480 268 541 288 q 343 248 420 248 q 169 306 232 248 q 106 464 106 364 l 106 743 l 218 743 z "},"Ҹ":{"ha":965,"x_min":115,"x_max":829,"o":"m 427 347 q 115 597 115 347 l 115 991 l 231 991 l 231 611 q 276 490 231 530 q 427 450 322 450 l 427 686 l 511 686 l 511 454 q 713 504 602 463 l 713 991 l 829 991 l 829 0 l 713 0 l 713 407 q 511 351 599 363 l 511 144 l 427 144 l 427 347 z "},"ҹ":{"ha":833,"x_min":106,"x_max":714,"o":"m 218 743 l 218 472 q 354 342 218 346 l 354 546 l 435 546 l 435 349 q 602 425 511 365 l 602 743 l 714 743 l 714 0 l 602 0 l 602 336 q 435 257 515 275 l 435 89 l 354 89 l 354 248 l 339 248 q 168 305 231 248 q 106 464 106 363 l 106 743 l 218 743 z "},"Һ":{"ha":965,"x_min":136,"x_max":850,"o":"m 136 991 l 252 991 l 252 582 q 558 644 425 644 q 774 579 699 644 q 850 395 850 515 l 850 0 l 734 0 l 734 380 q 691 502 734 462 q 551 542 648 542 q 416 530 479 542 q 252 485 353 519 l 252 0 l 136 0 l 136 991 z "},"һ":{"ha":812,"x_min":119,"x_max":739,"o":"m 625 0 l 625 269 q 478 400 625 400 q 366 384 418 400 q 232 317 313 367 l 232 0 l 119 0 l 119 743 l 232 743 l 232 406 q 359 473 296 452 q 500 494 422 494 q 675 437 610 494 q 739 278 739 380 l 739 0 l 625 0 z "},"Ҽ":{"ha":1164,"x_min":41,"x_max":1084,"o":"m 41 612 q 60 699 41 662 l 158 699 q 144 624 144 665 q 221 554 144 554 l 244 554 l 248 583 q 380 896 267 785 q 682 1007 493 1007 q 984 879 884 1007 q 1084 500 1084 750 l 1084 453 l 366 453 q 464 181 375 274 q 720 89 552 89 q 857 99 788 89 q 1021 139 925 110 l 1021 33 q 868 -3 943 7 q 705 -14 793 -14 q 374 107 492 -14 q 243 453 256 228 q 94 493 146 453 q 41 612 41 533 m 681 904 q 458 813 539 904 q 366 554 376 723 l 961 554 q 892 819 961 734 q 681 904 823 904 z "},"ҽ":{"ha":916,"x_min":35,"x_max":844,"o":"m 571 -14 q 313 83 406 -14 q 215 351 219 180 q 35 504 35 354 q 52 585 35 551 l 147 585 q 134 513 134 553 q 205 443 134 443 l 220 443 l 224 467 q 332 680 247 604 q 541 755 416 755 q 763 666 681 755 q 844 422 844 576 l 844 351 l 332 351 q 394 151 336 217 q 570 85 452 85 q 692 96 638 85 q 812 135 746 106 l 812 35 q 700 -2 753 9 q 571 -14 646 -14 m 538 661 q 396 606 447 661 q 335 443 345 550 l 724 443 q 676 605 724 549 q 538 661 629 661 z "},"Ҿ":{"ha":1164,"x_min":41,"x_max":1084,"o":"m 629 -8 q 355 129 454 12 q 243 453 256 246 q 94 493 146 453 q 41 612 41 533 q 60 699 41 662 l 158 699 q 144 624 144 665 q 221 554 144 554 l 244 554 l 248 583 q 380 896 267 785 q 682 1007 493 1007 q 984 879 884 1007 q 1084 500 1084 750 l 1084 453 l 366 453 q 464 181 375 274 q 720 89 552 89 q 857 99 788 89 q 1021 139 925 110 l 1021 33 q 742 -12 901 -9 l 742 -258 l 629 -258 l 629 -8 m 681 904 q 458 813 539 904 q 366 554 376 723 l 961 554 q 892 819 961 734 q 681 904 823 904 z "},"ҿ":{"ha":916,"x_min":35,"x_max":844,"o":"m 492 -7 q 291 107 362 14 q 215 351 219 199 q 35 504 35 354 q 52 585 35 551 l 147 585 q 134 513 134 553 q 205 443 134 443 l 220 443 l 224 467 q 332 680 247 604 q 541 755 416 755 q 763 666 681 755 q 844 422 844 576 l 844 351 l 332 351 q 394 151 336 217 q 570 85 452 85 q 692 96 638 85 q 812 135 746 106 l 812 35 q 604 -12 716 -9 l 604 -256 l 492 -256 l 492 -7 m 538 661 q 396 606 447 661 q 335 443 345 550 l 724 443 q 676 605 724 549 q 538 661 629 661 z "},"Ӂ":{"ha":1173,"x_min":1,"x_max":1169,"o":"m 406 510 l 16 991 l 144 991 l 530 511 l 530 991 l 642 991 l 642 511 l 1028 991 l 1157 991 l 766 511 l 1169 0 l 1036 0 l 642 503 l 642 0 l 530 0 l 530 503 l 136 0 l 1 0 l 406 510 m 581 1072 q 397 1121 455 1072 q 333 1280 340 1169 l 439 1280 q 476 1182 445 1210 q 583 1154 507 1154 q 687 1184 653 1154 q 728 1280 720 1214 l 834 1280 q 766 1123 826 1173 q 581 1072 705 1072 z "},"ӂ":{"ha":1022,"x_min":3,"x_max":1019,"o":"m 458 742 l 562 742 l 562 382 l 869 742 l 993 742 l 682 382 l 1019 0 l 889 0 l 562 376 l 562 0 l 458 0 l 458 376 l 132 0 l 3 0 l 339 382 l 29 742 l 153 742 l 458 382 l 458 742 m 507 842 q 324 890 382 842 q 260 1050 267 939 l 366 1050 q 402 951 372 979 q 510 924 433 924 q 613 954 580 924 q 654 1050 647 983 l 761 1050 q 692 892 753 943 q 507 842 632 842 z "},"Ӄ":{"ha":957,"x_min":136,"x_max":885,"o":"m 411 431 q 252 410 316 431 l 252 0 l 136 0 l 136 991 l 252 991 l 252 511 l 692 991 l 831 991 l 400 528 l 418 529 q 765 419 645 529 q 885 102 885 309 q 785 -229 885 -111 q 504 -347 685 -347 q 406 -340 448 -347 q 317 -314 364 -334 l 317 -211 q 503 -244 399 -244 q 697 -153 629 -244 q 765 102 765 -62 q 671 345 765 259 q 411 431 577 431 z "},"ӄ":{"ha":762,"x_min":119,"x_max":717,"o":"m 231 0 l 119 0 l 119 743 l 231 743 l 231 392 l 558 743 l 682 743 l 372 416 q 631 317 546 414 q 717 40 717 221 q 680 -165 717 -80 q 573 -296 642 -251 q 414 -340 504 -340 q 257 -300 321 -340 l 257 -201 q 325 -231 288 -218 q 410 -244 361 -244 q 553 -171 501 -244 q 604 39 604 -97 q 541 252 604 182 q 349 322 477 322 q 231 306 293 322 l 231 0 z "},"Ӆ":{"ha":981,"x_min":0,"x_max":966,"o":"m 842 104 l 966 104 l 869 -258 l 736 -258 l 842 0 l 726 0 l 726 889 l 404 889 l 383 726 q 310 251 342 401 q 227 42 279 101 q 90 -16 176 -17 q 0 1 40 -16 l 0 98 q 77 81 37 81 q 139 110 113 81 q 187 213 166 140 q 239 489 208 286 q 309 991 271 693 l 842 991 l 842 104 z "},"ӆ":{"ha":794,"x_min":11,"x_max":791,"o":"m 672 97 l 791 97 l 704 -256 l 587 -256 l 672 0 l 559 0 l 559 646 l 335 646 q 284 262 316 401 q 201 57 252 122 q 69 -8 149 -8 q 11 -1 30 -8 l 11 85 q 45 81 26 81 q 168 241 121 81 q 237 742 214 401 l 672 742 l 672 97 z "},"Ӈ":{"ha":1010,"x_min":136,"x_max":889,"o":"m 889 102 q 793 -231 889 -114 q 521 -347 698 -347 q 424 -341 465 -347 q 330 -314 382 -334 l 330 -212 q 505 -245 414 -245 q 774 96 774 -245 l 774 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 774 570 l 774 991 l 889 991 l 889 102 z "},"ӈ":{"ha":856,"x_min":119,"x_max":761,"o":"m 490 -340 q 338 -301 401 -340 l 338 -200 q 482 -241 413 -241 q 607 -174 567 -241 q 647 33 647 -107 l 647 335 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 l 232 432 l 647 432 l 647 743 l 761 743 l 761 35 q 691 -244 761 -147 q 490 -340 621 -340 z "},"Ӊ":{"ha":1035,"x_min":136,"x_max":1014,"o":"m 889 104 l 1014 104 l 916 -258 l 782 -258 l 889 0 l 774 0 l 774 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 774 570 l 774 991 l 889 991 l 889 104 z "},"ӊ":{"ha":907,"x_min":119,"x_max":880,"o":"m 232 742 l 232 432 l 648 432 l 648 742 l 761 742 l 761 97 l 880 97 l 793 -256 l 676 -256 l 761 0 l 648 0 l 648 335 l 232 335 l 232 0 l 119 0 l 119 742 l 232 742 z "},"Ӌ":{"ha":965,"x_min":115,"x_max":829,"o":"m 829 0 l 714 0 l 714 -258 l 604 -258 l 604 104 l 714 104 l 714 410 q 546 360 613 374 q 407 347 479 347 q 191 412 267 347 q 115 597 115 476 l 115 991 l 231 991 l 231 611 q 274 490 231 529 q 414 450 317 450 q 539 460 479 450 q 714 507 600 470 l 714 991 l 829 991 l 829 0 z "},"ӌ":{"ha":844,"x_min":106,"x_max":725,"o":"m 218 743 l 218 472 q 367 342 218 342 q 485 361 429 342 q 612 425 541 380 l 612 743 l 725 743 l 725 0 l 624 0 l 624 -257 l 511 -257 l 511 97 l 612 97 l 612 336 q 480 268 541 288 q 343 248 420 248 q 169 306 232 248 q 106 464 106 364 l 106 743 l 218 743 z "},"Ӎ":{"ha":1255,"x_min":136,"x_max":1243,"o":"m 575 0 l 239 879 l 233 879 l 238 793 q 243 631 243 663 l 243 0 l 136 0 l 136 991 l 310 991 l 625 174 l 631 174 l 946 991 l 1118 991 l 1118 104 l 1243 104 l 1146 -258 l 1011 -258 l 1118 0 l 1003 0 l 1003 639 q 1013 878 1003 728 l 1007 878 l 668 0 l 575 0 z "},"ӎ":{"ha":1022,"x_min":119,"x_max":1019,"o":"m 505 109 l 526 172 l 555 252 l 757 742 l 900 742 l 900 97 l 1019 97 l 932 -256 l 815 -256 l 900 0 l 800 0 l 800 614 l 787 574 l 747 471 l 555 0 l 461 0 l 269 472 q 220 614 233 563 l 220 0 l 119 0 l 119 742 l 257 742 l 458 252 q 505 109 489 177 z "},"Ӑ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 435 1071 q 252 1119 309 1071 q 187 1279 194 1168 l 293 1279 q 330 1181 299 1208 q 437 1153 361 1153 q 541 1183 507 1153 q 582 1279 574 1213 l 688 1279 q 620 1121 680 1172 q 435 1071 559 1071 z "},"ӑ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 380 842 q 197 890 254 842 q 132 1050 139 939 l 238 1050 q 275 951 244 979 q 382 924 306 924 q 486 954 452 924 q 527 1050 519 983 l 633 1050 q 565 892 625 943 q 380 842 505 842 z "},"Ӓ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 251 1174 q 269 1225 251 1209 q 312 1240 287 1240 q 356 1225 338 1240 q 375 1174 375 1209 q 356 1123 375 1140 q 312 1107 338 1107 q 269 1123 287 1107 q 251 1174 251 1140 m 509 1174 q 527 1225 509 1209 q 570 1240 545 1240 q 614 1225 595 1240 q 633 1174 633 1209 q 614 1123 633 1140 q 570 1107 595 1107 q 527 1123 545 1107 q 509 1174 509 1140 z "},"ӓ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 201 945 q 219 996 201 980 q 262 1011 237 1011 q 306 996 288 1011 q 325 945 325 980 q 306 894 325 911 q 262 878 288 878 q 219 894 237 878 q 201 945 201 911 m 459 945 q 477 996 459 980 q 520 1011 495 1011 q 564 996 545 1011 q 583 945 583 980 q 564 894 583 911 q 520 878 545 878 q 477 894 495 878 q 459 945 459 911 z "},"Ӕ":{"ha":1213,"x_min":-1,"x_max":1129,"o":"m 1129 0 l 621 0 l 621 315 l 272 315 l 118 0 l -1 0 l 472 991 l 1129 991 l 1129 889 l 736 889 l 736 570 l 1103 570 l 1103 468 l 736 468 l 736 103 l 1129 103 l 1129 0 m 318 419 l 621 419 l 621 889 l 541 889 l 318 419 z "},"ӕ":{"ha":1192,"x_min":64,"x_max":1120,"o":"m 64 205 q 148 375 64 315 q 404 441 232 436 l 529 446 l 529 492 q 490 621 529 579 q 370 663 450 663 q 161 606 272 663 l 126 692 q 244 738 176 720 q 378 755 311 755 q 522 726 466 755 q 606 632 578 696 q 700 724 642 692 q 832 757 758 757 q 1041 666 962 757 q 1120 425 1120 576 l 1120 353 l 644 353 q 863 85 650 85 q 978 97 924 85 q 1088 135 1031 109 l 1088 35 q 979 -2 1029 9 q 860 -14 928 -14 q 579 144 664 -14 q 457 22 524 58 q 300 -14 391 -14 q 126 44 189 -14 q 64 205 64 102 m 182 204 q 218 110 182 140 q 314 79 254 79 q 469 137 412 79 q 526 298 526 194 l 526 366 l 419 361 q 237 318 293 355 q 182 204 182 281 m 831 663 q 702 606 749 663 q 647 443 654 550 l 999 443 q 956 606 999 549 q 831 663 912 663 z "},"Ӗ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 407 1071 q 224 1119 281 1071 q 159 1279 166 1168 l 265 1279 q 302 1181 271 1208 q 410 1153 333 1153 q 513 1183 479 1153 q 554 1279 547 1213 l 661 1279 q 592 1121 652 1172 q 407 1071 532 1071 z "},"ӗ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 404 842 q 221 890 279 842 q 157 1050 163 939 l 262 1050 q 299 951 269 979 q 407 924 330 924 q 510 954 477 924 q 551 1050 544 983 l 658 1050 q 589 892 650 943 q 404 842 529 842 z "},"Ә":{"ha":1014,"x_min":79,"x_max":928,"o":"m 450 904 q 143 852 296 904 l 143 960 q 292 996 221 985 q 454 1007 363 1007 q 803 872 679 1007 q 928 494 928 736 q 810 122 928 257 q 484 -14 693 -14 q 79 493 79 -14 l 79 541 l 806 541 q 705 812 794 721 q 450 904 616 904 m 484 89 q 710 180 626 89 q 806 439 795 271 l 203 439 q 272 174 203 260 q 484 89 341 89 z "},"ә":{"ha":777,"x_min":69,"x_max":699,"o":"m 343 757 q 604 655 509 757 q 699 376 699 553 q 611 92 699 197 q 375 -14 523 -14 q 152 77 234 -14 q 69 321 69 168 l 69 392 l 582 392 q 518 594 578 530 q 345 657 457 657 q 222 646 278 657 q 102 607 166 635 l 102 707 q 217 745 162 734 q 343 757 272 757 m 376 81 q 519 137 467 81 q 579 298 571 193 l 191 298 q 238 136 191 192 q 376 81 286 81 z "},"Ӛ":{"ha":1014,"x_min":79,"x_max":928,"o":"m 450 904 q 143 852 296 904 l 143 960 q 292 996 221 985 q 454 1007 363 1007 q 803 872 679 1007 q 928 494 928 736 q 810 122 928 257 q 484 -14 693 -14 q 79 493 79 -14 l 79 541 l 806 541 q 705 812 794 721 q 450 904 616 904 m 484 89 q 710 180 626 89 q 806 439 795 271 l 203 439 q 272 174 203 260 q 484 89 341 89 m 309 1174 q 327 1225 309 1209 q 370 1240 345 1240 q 415 1225 396 1240 q 433 1174 433 1209 q 415 1123 433 1140 q 370 1107 396 1107 q 327 1123 345 1107 q 309 1174 309 1140 m 568 1174 q 586 1225 568 1209 q 629 1240 604 1240 q 672 1225 654 1240 q 691 1174 691 1209 q 672 1123 691 1140 q 629 1107 654 1107 q 586 1123 604 1107 q 568 1174 568 1140 z "},"ӛ":{"ha":777,"x_min":69,"x_max":699,"o":"m 343 757 q 604 655 509 757 q 699 376 699 553 q 611 92 699 197 q 375 -14 523 -14 q 152 77 234 -14 q 69 321 69 168 l 69 392 l 582 392 q 518 594 578 530 q 345 657 457 657 q 222 646 278 657 q 102 607 166 635 l 102 707 q 217 745 162 734 q 343 757 272 757 m 376 81 q 519 137 467 81 q 579 298 571 193 l 191 298 q 238 136 191 192 q 376 81 286 81 m 195 945 q 213 996 195 980 q 256 1011 231 1011 q 300 996 281 1011 q 319 945 319 980 q 300 894 319 911 q 256 878 281 878 q 213 894 231 878 q 195 945 195 911 m 453 945 q 471 996 453 980 q 514 1011 489 1011 q 558 996 539 1011 q 576 945 576 980 q 558 894 576 911 q 514 878 539 878 q 471 894 489 878 q 453 945 453 911 z "},"Ӝ":{"ha":1173,"x_min":1,"x_max":1169,"o":"m 406 510 l 16 991 l 144 991 l 530 511 l 530 991 l 642 991 l 642 511 l 1028 991 l 1157 991 l 766 511 l 1169 0 l 1036 0 l 642 503 l 642 0 l 530 0 l 530 503 l 136 0 l 1 0 l 406 510 m 394 1174 q 412 1225 394 1209 q 455 1240 430 1240 q 499 1225 481 1240 q 518 1174 518 1209 q 499 1123 518 1140 q 455 1107 481 1107 q 412 1123 430 1107 q 394 1174 394 1140 m 652 1174 q 670 1225 652 1209 q 713 1240 688 1240 q 757 1225 739 1240 q 776 1174 776 1209 q 757 1123 776 1140 q 713 1107 739 1107 q 670 1123 688 1107 q 652 1174 652 1140 z "},"ӝ":{"ha":1022,"x_min":3,"x_max":1019,"o":"m 458 742 l 562 742 l 562 382 l 869 742 l 993 742 l 682 382 l 1019 0 l 889 0 l 562 376 l 562 0 l 458 0 l 458 376 l 132 0 l 3 0 l 339 382 l 29 742 l 153 742 l 458 382 l 458 742 m 319 945 q 337 996 319 980 q 380 1011 355 1011 q 425 996 406 1011 q 444 945 444 980 q 425 894 444 911 q 380 878 406 878 q 337 894 355 878 q 319 945 319 911 m 578 945 q 596 996 578 980 q 639 1011 614 1011 q 683 996 664 1011 q 701 945 701 980 q 683 894 701 911 q 639 878 664 878 q 596 894 614 878 q 578 945 578 911 z "},"Ӟ":{"ha":807,"x_min":50,"x_max":730,"o":"m 711 760 q 649 601 711 662 q 478 524 587 540 l 478 518 q 666 440 602 501 q 730 281 730 379 q 627 64 730 142 q 334 -14 523 -14 q 50 40 161 -14 l 50 147 q 191 99 115 116 q 336 82 267 82 q 539 133 471 82 q 608 279 608 184 q 532 417 608 370 q 304 464 456 464 l 157 464 l 157 561 l 298 561 q 514 611 437 561 q 590 750 590 661 q 535 866 590 823 q 387 909 480 909 q 252 892 313 909 q 113 825 192 876 l 56 903 q 209 980 124 954 q 386 1006 294 1006 q 625 939 538 1006 q 711 760 711 872 m 201 1174 q 219 1225 201 1209 q 262 1240 237 1240 q 306 1225 288 1240 q 325 1174 325 1209 q 306 1123 325 1140 q 262 1107 288 1107 q 219 1123 237 1107 q 201 1174 201 1140 m 459 1174 q 477 1225 459 1209 q 520 1240 495 1240 q 564 1225 545 1240 q 583 1174 583 1209 q 564 1123 583 1140 q 520 1107 545 1107 q 477 1123 495 1107 q 459 1174 459 1140 z "},"ӟ":{"ha":671,"x_min":46,"x_max":607,"o":"m 261 435 q 472 551 472 435 q 301 661 472 661 q 206 652 249 661 q 94 614 163 642 l 54 705 q 306 757 170 757 q 508 704 434 757 q 582 561 582 652 q 443 397 582 436 l 443 392 q 568 320 528 367 q 607 204 607 274 q 524 44 607 101 q 294 -14 441 -14 q 46 35 134 -14 l 46 138 q 297 79 170 79 q 445 113 395 79 q 494 210 494 146 q 283 339 494 339 l 180 339 l 180 435 l 261 435 m 136 945 q 154 996 136 980 q 197 1011 172 1011 q 242 996 223 1011 q 260 945 260 980 q 242 894 260 911 q 197 878 223 878 q 154 894 172 878 q 136 945 136 911 m 395 945 q 413 996 395 980 q 456 1011 431 1011 q 499 996 481 1011 q 518 945 518 980 q 499 894 518 911 q 456 878 481 878 q 413 894 431 878 q 395 945 395 911 z "},"Ӡ":{"ha":810,"x_min":50,"x_max":732,"o":"m 345 564 q 633 486 534 557 q 732 283 732 414 q 628 65 732 144 q 335 -14 524 -14 q 50 40 161 -14 l 50 147 q 191 99 115 116 q 338 82 266 82 q 541 134 473 82 q 610 283 610 186 q 533 421 610 374 q 306 468 457 468 l 211 468 l 211 564 l 546 888 l 78 888 l 78 991 l 690 991 l 690 897 l 345 564 z "},"ӡ":{"ha":679,"x_min":18,"x_max":633,"o":"m 290 314 q 469 271 391 309 q 590 163 547 232 q 633 3 633 95 q 533 -241 633 -148 q 271 -334 433 -334 q 18 -286 112 -334 l 18 -182 q 278 -240 142 -240 q 454 -176 387 -240 q 521 -3 521 -111 q 448 166 521 109 q 239 224 376 224 l 157 224 l 157 301 l 464 647 l 36 647 l 36 743 l 595 743 l 595 660 l 290 314 z "},"Ӣ":{"ha":1059,"x_min":138,"x_max":924,"o":"m 138 991 l 245 991 l 245 440 q 236 164 245 288 l 241 164 l 798 991 l 924 991 l 924 0 l 815 0 l 815 546 q 827 832 815 682 l 821 832 l 264 0 l 138 0 l 138 991 m 326 1164 l 733 1164 l 733 1071 l 326 1071 l 326 1164 z "},"ӣ":{"ha":880,"x_min":119,"x_max":761,"o":"m 225 743 l 225 272 l 220 149 l 218 110 l 621 743 l 761 743 l 761 0 l 656 0 l 656 454 l 658 544 l 661 632 l 260 0 l 119 0 l 119 743 l 225 743 m 237 935 l 644 935 l 644 842 l 237 842 l 237 935 z "},"Ӥ":{"ha":1059,"x_min":138,"x_max":924,"o":"m 138 991 l 245 991 l 245 440 q 236 164 245 288 l 241 164 l 798 991 l 924 991 l 924 0 l 815 0 l 815 546 q 827 832 815 682 l 821 832 l 264 0 l 138 0 l 138 991 m 338 1174 q 356 1225 338 1209 q 399 1240 374 1240 q 444 1225 425 1240 q 463 1174 463 1209 q 444 1123 463 1140 q 399 1107 425 1107 q 356 1123 374 1107 q 338 1174 338 1140 m 597 1174 q 615 1225 597 1209 q 658 1240 633 1240 q 702 1225 683 1240 q 720 1174 720 1209 q 702 1123 720 1140 q 658 1107 683 1107 q 615 1123 633 1107 q 597 1174 597 1140 z "},"ӥ":{"ha":880,"x_min":119,"x_max":761,"o":"m 225 743 l 225 272 l 220 149 l 218 110 l 621 743 l 761 743 l 761 0 l 656 0 l 656 454 l 658 544 l 661 632 l 260 0 l 119 0 l 119 743 l 225 743 m 251 945 q 269 996 251 980 q 312 1011 287 1011 q 356 996 338 1011 q 375 945 375 980 q 356 894 375 911 q 312 878 338 878 q 269 894 287 878 q 251 945 251 911 m 509 945 q 527 996 509 980 q 570 1011 545 1011 q 614 996 595 1011 q 633 945 633 980 q 614 894 633 911 q 570 878 595 878 q 527 894 545 878 q 509 945 509 911 z "},"Ӧ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 351 1174 q 369 1225 351 1209 q 412 1240 387 1240 q 457 1225 438 1240 q 475 1174 475 1209 q 457 1123 475 1140 q 412 1107 438 1107 q 369 1123 387 1107 q 351 1174 351 1140 m 610 1174 q 628 1225 610 1209 q 671 1240 646 1240 q 714 1225 696 1240 q 733 1174 733 1209 q 714 1123 733 1140 q 671 1107 696 1107 q 628 1123 646 1107 q 610 1174 610 1140 z "},"ӧ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 229 945 q 247 996 229 980 q 290 1011 265 1011 q 335 996 316 1011 q 353 945 353 980 q 335 894 353 911 q 290 878 316 878 q 247 894 265 878 q 229 945 229 911 m 488 945 q 506 996 488 980 q 549 1011 524 1011 q 592 996 574 1011 q 611 945 611 980 q 592 894 611 911 q 549 878 574 878 q 506 894 524 878 q 488 945 488 911 z "},"Ө":{"ha":1083,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 542 87 q 781 180 697 87 q 873 454 865 273 l 208 454 q 301 180 217 273 q 542 87 386 87 m 543 904 q 306 817 391 904 q 208 555 221 729 l 872 555 q 778 816 861 728 q 543 904 695 904 z "},"ө":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 419 81 q 582 143 526 81 q 644 335 637 205 l 195 335 q 255 145 201 209 q 419 81 309 81 m 418 661 q 258 603 312 661 q 196 431 205 544 l 643 431 q 578 603 633 545 q 418 661 524 661 z "},"Ӫ":{"ha":1083,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 542 87 q 781 180 697 87 q 873 454 865 273 l 208 454 q 301 180 217 273 q 542 87 386 87 m 543 904 q 306 817 391 904 q 208 555 221 729 l 872 555 q 778 816 861 728 q 543 904 695 904 m 351 1174 q 369 1225 351 1209 q 412 1240 387 1240 q 457 1225 438 1240 q 475 1174 475 1209 q 457 1123 475 1140 q 412 1107 438 1107 q 369 1123 387 1107 q 351 1174 351 1140 m 610 1174 q 628 1225 610 1209 q 671 1240 646 1240 q 714 1225 696 1240 q 733 1174 733 1209 q 714 1123 733 1140 q 671 1107 696 1107 q 628 1123 646 1107 q 610 1174 610 1140 z "},"ӫ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 419 81 q 582 143 526 81 q 644 335 637 205 l 195 335 q 255 145 201 209 q 419 81 309 81 m 418 661 q 258 603 312 661 q 196 431 205 544 l 643 431 q 578 603 633 545 q 418 661 524 661 m 228 945 q 246 996 228 980 q 289 1011 264 1011 q 333 996 315 1011 q 352 945 352 980 q 333 894 352 911 q 289 878 315 878 q 246 894 264 878 q 228 945 228 911 m 486 945 q 504 996 486 980 q 547 1011 522 1011 q 591 996 572 1011 q 610 945 610 980 q 591 894 610 911 q 547 878 572 878 q 504 894 522 878 q 486 945 486 911 z "},"Ӭ":{"ha":875,"x_min":41,"x_max":787,"o":"m 317 903 q 90 851 200 903 l 41 949 q 318 1006 158 1006 q 571 946 465 1006 q 732 776 677 886 q 787 515 787 665 q 664 123 787 260 q 309 -14 541 -14 q 49 25 155 -14 l 49 126 q 163 100 105 112 q 289 89 222 89 q 566 187 473 89 q 665 469 660 285 l 178 469 l 178 572 l 664 572 q 557 815 649 728 q 317 903 465 903 m 197 1174 q 215 1225 197 1209 q 258 1240 233 1240 q 302 1225 283 1240 q 321 1174 321 1209 q 302 1123 321 1140 q 258 1107 283 1107 q 215 1123 233 1107 q 197 1174 197 1140 m 455 1174 q 473 1225 455 1209 q 516 1240 491 1240 q 560 1225 541 1240 q 578 1174 578 1209 q 560 1123 578 1140 q 516 1107 541 1107 q 473 1123 491 1107 q 455 1174 455 1140 z "},"ӭ":{"ha":684,"x_min":39,"x_max":606,"o":"m 232 -14 q 39 25 119 -14 l 39 125 q 127 97 79 109 q 236 85 174 85 q 418 148 354 85 q 489 336 482 211 l 113 336 l 113 432 l 488 432 q 419 603 477 549 q 253 657 362 657 q 81 621 183 657 l 49 715 q 142 745 86 733 q 252 757 197 757 q 515 657 425 757 q 606 371 606 558 q 508 87 606 189 q 232 -14 410 -14 m 132 945 q 150 996 132 980 q 193 1011 168 1011 q 238 996 219 1011 q 256 945 256 980 q 238 894 256 911 q 193 878 219 878 q 150 894 168 878 q 132 945 132 911 m 391 945 q 409 996 391 980 q 452 1011 427 1011 q 495 996 477 1011 q 514 945 514 980 q 495 894 514 911 q 452 878 477 878 q 409 894 427 878 q 391 945 391 911 z "},"Ӯ":{"ha":863,"x_min":18,"x_max":863,"o":"m 199 -14 q 66 7 123 -14 l 66 119 q 195 90 130 90 q 314 124 269 90 q 404 253 359 159 l 18 991 l 146 991 l 439 428 q 465 363 456 395 l 471 363 q 497 435 490 420 l 741 991 l 863 991 l 546 282 q 443 98 489 155 q 340 13 397 40 q 199 -14 283 -14 m 236 1164 l 643 1164 l 643 1071 l 236 1071 l 236 1164 z "},"ӯ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 148 935 l 555 935 l 555 842 l 148 842 l 148 935 z "},"Ӱ":{"ha":863,"x_min":18,"x_max":863,"o":"m 199 -14 q 66 7 123 -14 l 66 119 q 195 90 130 90 q 314 124 269 90 q 404 253 359 159 l 18 991 l 146 991 l 439 428 q 465 363 456 395 l 471 363 q 497 435 490 420 l 741 991 l 863 991 l 546 282 q 443 98 489 155 q 340 13 397 40 q 199 -14 283 -14 m 250 1174 q 268 1225 250 1209 q 311 1240 286 1240 q 355 1225 336 1240 q 374 1174 374 1209 q 355 1123 374 1140 q 311 1107 336 1107 q 268 1123 286 1107 q 250 1174 250 1140 m 508 1174 q 526 1225 508 1209 q 569 1240 544 1240 q 613 1225 594 1240 q 631 1174 631 1209 q 613 1123 631 1140 q 569 1107 594 1107 q 526 1123 544 1107 q 508 1174 508 1140 z "},"ӱ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 160 945 q 178 996 160 980 q 221 1011 196 1011 q 266 996 247 1011 q 284 945 284 980 q 266 894 284 911 q 221 878 247 878 q 178 894 196 878 q 160 945 160 911 m 418 945 q 436 996 418 980 q 479 1011 454 1011 q 523 996 505 1011 q 542 945 542 980 q 523 894 542 911 q 479 878 505 878 q 436 894 454 878 q 418 945 418 911 z "},"Ӳ":{"ha":863,"x_min":18,"x_max":863,"o":"m 199 -14 q 66 7 123 -14 l 66 119 q 195 90 130 90 q 314 124 269 90 q 404 253 359 159 l 18 991 l 146 991 l 439 428 q 465 363 456 395 l 471 363 q 497 435 490 420 l 741 991 l 863 991 l 546 282 q 443 98 489 155 q 340 13 397 40 q 199 -14 283 -14 m 252 1088 q 314 1183 277 1120 q 372 1293 351 1246 l 498 1293 l 498 1279 q 415 1170 473 1236 q 318 1071 357 1103 l 252 1071 l 252 1088 m 494 1088 q 562 1194 528 1134 q 614 1293 596 1254 l 740 1293 l 740 1279 q 657 1170 715 1236 q 559 1071 599 1103 l 494 1071 l 494 1088 z "},"ӳ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 159 859 q 221 954 184 891 q 279 1064 258 1017 l 406 1064 l 406 1050 q 322 941 380 1007 q 225 842 264 874 l 159 842 l 159 859 m 401 859 q 469 965 435 905 q 521 1064 503 1025 l 647 1064 l 647 1050 q 564 941 622 1007 q 467 842 506 874 l 401 842 l 401 859 z "},"Ӵ":{"ha":965,"x_min":115,"x_max":829,"o":"m 829 0 l 714 0 l 714 410 q 546 360 613 374 q 407 347 479 347 q 191 412 267 347 q 115 597 115 476 l 115 991 l 231 991 l 231 611 q 274 490 231 529 q 414 450 317 450 q 539 460 479 450 q 714 507 600 470 l 714 991 l 829 991 l 829 0 m 281 1174 q 299 1225 281 1209 q 342 1240 317 1240 q 387 1225 368 1240 q 406 1174 406 1209 q 387 1123 406 1140 q 342 1107 368 1107 q 299 1123 317 1107 q 281 1174 281 1140 m 540 1174 q 558 1225 540 1209 q 601 1240 576 1240 q 645 1225 626 1240 q 663 1174 663 1209 q 645 1123 663 1140 q 601 1107 626 1107 q 558 1123 576 1107 q 540 1174 540 1140 z "},"ӵ":{"ha":844,"x_min":106,"x_max":725,"o":"m 218 743 l 218 472 q 367 342 218 342 q 485 361 429 342 q 612 425 541 380 l 612 743 l 725 743 l 725 0 l 612 0 l 612 336 q 480 268 541 288 q 343 248 420 248 q 169 306 232 248 q 106 464 106 364 l 106 743 l 218 743 m 225 945 q 243 996 225 980 q 286 1011 261 1011 q 331 996 312 1011 q 349 945 349 980 q 331 894 349 911 q 286 878 312 878 q 243 894 261 878 q 225 945 225 911 m 484 945 q 502 996 484 980 q 545 1011 519 1011 q 588 996 570 1011 q 607 945 607 980 q 588 894 607 911 q 545 878 570 878 q 502 894 519 878 q 484 945 484 911 z "},"Ӷ":{"ha":732,"x_min":136,"x_max":700,"o":"m 136 991 l 700 991 l 700 888 l 252 888 l 252 104 l 361 104 l 361 -258 l 252 -258 l 252 0 l 136 0 l 136 991 z "},"ӷ":{"ha":595,"x_min":119,"x_max":566,"o":"m 119 742 l 566 742 l 566 647 l 232 647 l 232 97 l 334 97 l 334 -256 l 221 -256 l 221 0 l 119 0 l 119 742 z "},"Ӹ":{"ha":1185,"x_min":136,"x_max":1048,"o":"m 136 0 l 136 991 l 252 991 l 252 568 l 414 568 q 684 499 591 568 q 777 289 777 429 q 689 75 777 149 q 432 0 601 0 l 136 0 m 252 98 l 419 98 q 600 146 542 98 q 657 289 657 194 q 596 424 657 382 q 400 465 536 465 l 252 465 l 252 98 m 1048 0 l 933 0 l 933 991 l 1048 991 l 1048 0 m 401 1174 q 419 1225 401 1209 q 463 1240 437 1240 q 507 1225 488 1240 q 526 1174 526 1209 q 507 1123 526 1140 q 463 1107 488 1107 q 419 1123 437 1107 q 401 1174 401 1140 m 660 1174 q 678 1225 660 1209 q 721 1240 696 1240 q 765 1225 746 1240 q 783 1174 783 1209 q 765 1123 783 1140 q 721 1107 746 1107 q 678 1123 696 1107 q 660 1174 660 1140 z "},"ӹ":{"ha":1069,"x_min":119,"x_max":950,"o":"m 232 436 l 435 436 q 645 384 576 436 q 713 227 713 331 q 641 57 713 115 q 428 0 568 0 l 119 0 l 119 743 l 232 743 l 232 436 m 950 0 l 838 0 l 838 743 l 950 743 l 950 0 m 232 339 l 232 94 l 422 94 q 602 220 602 94 q 560 311 602 282 q 419 339 519 339 l 232 339 m 343 945 q 361 996 343 980 q 404 1011 379 1011 q 449 996 430 1011 q 467 945 467 980 q 449 894 467 911 q 404 878 430 878 q 361 894 379 878 q 343 945 343 911 m 602 945 q 620 996 602 980 q 663 1011 637 1011 q 706 996 688 1011 q 725 945 725 980 q 706 894 725 911 q 663 878 688 878 q 620 894 637 878 q 602 945 602 911 z "},"Ӻ":{"ha":732,"x_min":32,"x_max":700,"o":"m 700 991 l 700 888 l 252 888 l 252 542 l 539 542 l 539 440 l 252 440 l 252 0 l 136 0 l 136 440 l 32 440 l 32 542 l 136 542 l 136 991 l 700 991 m 350 104 l 350 -92 q 195 -268 350 -268 q 117 -252 157 -268 l 117 -157 q 186 -170 144 -170 q 250 -102 250 -170 l 250 104 l 350 104 z "},"ӻ":{"ha":595,"x_min":12,"x_max":566,"o":"m 566 648 l 232 648 l 232 415 l 467 415 l 467 329 l 232 329 l 232 0 l 119 0 l 119 329 l 12 329 l 12 415 l 119 415 l 119 743 l 566 743 l 566 648 m 330 97 l 330 -92 q 175 -268 330 -268 q 96 -252 137 -268 l 96 -157 q 165 -170 124 -170 q 229 -102 229 -170 l 229 97 l 330 97 z "},"Ӽ":{"ha":863,"x_min":5,"x_max":831,"o":"m 796 0 l 665 0 l 399 436 l 127 0 l 5 0 l 335 518 l 28 991 l 155 991 l 401 599 l 650 991 l 772 991 l 465 522 l 796 0 m 831 104 l 831 -92 q 676 -268 831 -268 q 597 -252 638 -268 l 597 -157 q 667 -170 625 -170 q 730 -102 730 -170 l 730 104 l 831 104 z "},"ӽ":{"ha":750,"x_min":26,"x_max":730,"o":"m 298 380 l 40 743 l 168 743 l 364 458 l 559 743 l 686 743 l 428 380 l 700 0 l 572 0 l 364 301 l 154 0 l 26 0 l 298 380 m 730 97 l 730 -92 q 575 -268 730 -268 q 496 -252 537 -268 l 496 -157 q 566 -170 524 -170 q 629 -102 629 -170 l 629 97 l 730 97 z "},"Ӿ":{"ha":802,"x_min":4,"x_max":796,"o":"m 86 578 l 294 578 l 28 991 l 155 991 l 401 597 l 648 991 l 772 991 l 501 578 l 715 578 l 715 475 l 494 475 l 796 0 l 665 0 l 399 436 l 127 0 l 4 0 l 307 475 l 86 475 l 86 578 z "},"ӿ":{"ha":728,"x_min":26,"x_max":700,"o":"m 79 428 l 265 428 l 40 743 l 168 743 l 364 458 l 559 743 l 686 743 l 460 428 l 650 428 l 650 340 l 456 340 l 700 0 l 572 0 l 364 301 l 154 0 l 26 0 l 269 340 l 79 340 l 79 428 z "},"Ԁ":{"ha":851,"x_min":89,"x_max":732,"o":"m 89 285 q 188 498 89 429 q 482 568 287 568 l 616 568 l 616 991 l 732 991 l 732 0 l 452 0 q 180 72 271 0 q 89 285 89 144 m 616 467 l 490 467 q 274 425 340 467 q 208 286 208 382 q 270 144 208 189 q 469 100 332 100 l 616 100 l 616 467 z "},"ԁ":{"ha":851,"x_min":78,"x_max":732,"o":"m 625 100 l 619 100 q 386 -14 541 -14 q 159 86 240 -14 q 78 370 78 186 q 159 655 78 553 q 386 757 241 757 q 618 647 537 757 l 627 647 l 622 701 l 619 753 l 619 1055 l 732 1055 l 732 0 l 640 0 l 625 100 m 400 81 q 567 143 515 81 q 619 346 619 206 l 619 370 q 567 595 619 528 q 399 663 514 663 q 247 586 300 663 q 195 368 195 509 q 247 153 195 226 q 400 81 299 81 z "},"Ԃ":{"ha":1249,"x_min":89,"x_max":1122,"o":"m 400 -12 q 168 59 247 -12 q 89 271 89 130 q 190 493 89 418 q 488 568 291 568 l 586 568 l 586 991 l 701 991 l 701 248 q 857 87 701 87 q 966 129 925 87 q 1007 245 1007 171 l 1007 575 l 1122 575 l 1122 244 q 1052 56 1122 126 q 857 -14 982 -14 q 723 14 777 -14 q 635 103 669 42 q 400 -12 558 -12 m 586 465 l 484 465 q 274 418 340 465 q 208 269 208 371 q 404 87 208 87 q 538 128 490 87 q 586 244 586 168 l 586 465 z "},"ԃ":{"ha":1244,"x_min":78,"x_max":1133,"o":"m 867 81 q 983 125 947 81 q 1019 262 1019 170 l 1019 475 l 1133 475 l 1133 256 q 1065 53 1133 120 q 869 -14 998 -14 q 728 17 782 -14 q 646 125 675 48 l 640 125 q 527 17 589 48 q 376 -14 464 -14 q 157 87 235 -14 q 78 370 78 188 q 156 654 78 551 q 375 757 235 757 q 501 731 447 757 q 597 647 555 705 l 606 647 q 602 696 604 659 q 599 753 599 734 l 599 1055 l 711 1055 l 711 282 q 748 127 711 174 q 867 81 785 81 m 390 81 q 549 143 500 81 q 599 346 599 206 l 599 370 q 549 594 599 526 q 389 663 498 663 q 195 368 195 663 q 242 152 195 223 q 390 81 289 81 z "},"Ԅ":{"ha":1255,"x_min":53,"x_max":1129,"o":"m 292 464 l 155 464 l 155 561 l 286 561 q 489 611 416 561 q 561 750 561 661 q 509 866 561 823 q 370 909 456 909 q 240 891 300 909 q 110 825 180 872 l 53 903 q 199 979 116 951 q 371 1006 283 1006 q 599 939 516 1006 q 682 760 682 873 q 622 602 682 664 q 456 522 562 540 l 456 517 q 700 277 696 482 q 738 132 701 175 q 859 89 774 89 q 977 130 939 89 q 1015 262 1015 171 l 1015 575 l 1129 575 l 1129 256 q 1058 54 1129 121 q 859 -14 987 -14 q 651 57 722 -14 q 579 264 581 128 q 508 415 578 366 q 292 464 439 464 z "},"ԅ":{"ha":1114,"x_min":54,"x_max":1002,"o":"m 739 81 q 889 262 889 81 l 889 475 l 1002 475 l 1002 256 q 938 53 1002 119 q 742 -14 875 -14 q 475 212 486 -14 q 424 309 471 279 q 275 339 376 339 l 180 339 l 180 435 l 256 435 q 452 551 452 435 q 288 661 452 661 q 191 649 237 661 q 93 614 145 637 l 54 705 q 167 745 112 732 q 293 757 222 757 q 489 704 418 757 q 561 561 561 652 q 431 397 561 436 l 431 392 q 539 337 498 378 q 585 224 581 296 q 739 81 591 81 z "},"Ԇ":{"ha":868,"x_min":53,"x_max":836,"o":"m 610 279 q 532 417 610 370 q 301 464 454 464 l 154 464 l 154 561 l 296 561 q 511 611 435 561 q 587 750 587 661 q 532 866 587 823 q 385 909 476 909 q 247 890 313 909 q 110 825 181 870 l 53 903 q 205 979 119 953 q 380 1006 291 1006 q 615 939 530 1006 q 701 760 701 873 q 637 603 701 665 q 463 524 573 541 l 463 518 q 653 440 587 501 q 720 279 720 380 l 720 104 l 836 104 l 836 -258 l 726 -258 l 726 0 l 610 0 l 610 279 z "},"ԇ":{"ha":726,"x_min":54,"x_max":705,"o":"m 492 204 q 282 339 492 339 l 180 339 l 180 435 l 260 435 q 472 551 472 435 q 427 634 472 607 q 301 661 382 661 q 96 614 197 661 l 54 705 q 301 755 163 755 q 503 703 431 755 q 575 559 575 651 q 437 397 575 436 l 437 390 q 561 318 523 365 q 599 203 599 272 l 599 97 l 705 97 l 705 -256 l 593 -256 l 593 0 l 492 0 l 492 204 z "},"Ԉ":{"ha":1362,"x_min":0,"x_max":1238,"o":"m 703 889 l 404 889 l 383 726 q 328 347 354 497 q 274 125 302 196 q 202 19 246 54 q 90 -16 158 -16 q 0 1 43 -16 l 0 98 q 77 81 34 81 q 132 102 110 81 q 168 158 153 123 q 202 281 183 193 q 246 534 221 368 q 309 991 271 700 l 818 991 l 818 264 q 856 130 818 171 q 971 89 893 89 q 1085 130 1047 89 q 1124 262 1124 171 l 1124 575 l 1238 575 l 1238 256 q 1168 56 1238 125 q 971 -14 1099 -14 q 770 56 838 -14 q 703 258 703 125 l 703 889 z "},"ԉ":{"ha":1182,"x_min":11,"x_max":1069,"o":"m 661 262 q 696 125 661 170 q 812 81 732 81 q 957 261 957 81 l 957 475 l 1069 475 l 1069 256 q 1006 53 1069 119 q 814 -14 943 -14 q 617 53 686 -14 q 549 257 549 119 l 549 646 l 335 646 q 284 262 316 401 q 201 57 252 122 q 69 -8 149 -8 q 11 -1 30 -8 l 11 85 q 45 81 26 81 q 168 241 121 81 q 237 742 214 401 l 661 742 l 661 262 z "},"Ԋ":{"ha":1406,"x_min":136,"x_max":1279,"o":"m 861 264 q 899 130 861 171 q 1014 89 936 89 q 1128 130 1090 89 q 1166 262 1166 171 l 1166 575 l 1279 575 l 1279 256 q 1211 56 1279 126 q 1014 -14 1143 -14 q 814 55 882 -14 q 746 258 746 124 l 746 467 l 252 467 l 252 0 l 136 0 l 136 991 l 252 991 l 252 570 l 746 570 l 746 991 l 861 991 l 861 264 z "},"ԋ":{"ha":1268,"x_min":119,"x_max":1156,"o":"m 232 743 l 232 432 l 633 432 l 633 743 l 746 743 l 746 264 q 782 126 746 171 q 899 81 818 81 q 1043 262 1043 81 l 1043 475 l 1156 475 l 1156 256 q 1092 53 1156 119 q 899 -14 1029 -14 q 703 54 772 -14 q 633 257 633 121 l 633 335 l 232 335 l 232 0 l 119 0 l 119 743 l 232 743 z "},"Ԍ":{"ha":1050,"x_min":85,"x_max":972,"o":"m 590 510 l 972 510 l 972 452 q 868 100 972 214 q 553 -14 764 -14 q 209 122 332 -14 q 85 497 85 258 q 145 768 85 652 q 322 944 206 883 q 596 1006 437 1006 q 758 989 677 1006 q 895 946 838 972 l 850 846 q 716 887 789 871 q 585 903 644 903 q 305 796 404 903 q 207 496 207 689 q 297 195 207 302 q 555 87 388 87 q 851 407 851 87 l 590 407 l 590 510 z "},"ԍ":{"ha":889,"x_min":78,"x_max":814,"o":"m 468 390 l 814 390 l 814 345 q 465 -14 814 -14 q 179 86 279 -14 q 78 371 78 186 q 188 655 78 554 q 493 757 297 757 q 755 703 637 757 l 715 614 q 489 664 602 664 q 272 589 350 664 q 195 371 195 513 q 264 155 195 231 q 467 79 333 79 q 641 134 581 79 q 700 294 700 188 l 468 294 l 468 390 z "},"Ԏ":{"ha":986,"x_min":11,"x_max":860,"o":"m 11 888 l 11 991 l 746 991 l 746 888 l 431 888 l 431 264 q 471 129 431 171 q 589 87 511 87 q 746 261 746 87 l 746 575 l 860 575 l 860 256 q 788 56 860 125 q 589 -14 717 -14 q 385 56 454 -14 q 315 258 315 126 l 315 888 l 11 888 z "},"ԏ":{"ha":899,"x_min":28,"x_max":786,"o":"m 608 647 l 374 647 l 374 262 q 411 125 374 170 q 528 81 448 81 q 673 257 673 81 l 673 475 l 786 475 l 786 256 q 722 53 786 119 q 528 -14 658 -14 q 329 55 397 -14 q 261 257 261 124 l 261 647 l 28 647 l 28 742 l 608 742 l 608 647 z "},"Ԑ":{"ha":810,"x_min":75,"x_max":754,"o":"m 106 757 q 195 939 106 871 q 437 1006 285 1006 q 754 908 612 1006 l 690 827 q 558 890 619 873 q 428 908 496 908 q 279 866 333 908 q 225 747 225 825 q 296 611 225 661 q 503 561 367 561 l 650 561 l 650 465 l 505 465 q 276 417 355 465 q 197 275 197 369 q 266 131 197 179 q 458 83 334 83 q 751 146 616 83 l 751 39 q 456 -14 633 -14 q 175 61 274 -14 q 75 269 75 136 q 145 437 75 372 q 343 517 216 502 l 343 522 q 167 600 228 539 q 106 757 106 660 z "},"ԑ":{"ha":660,"x_min":61,"x_max":612,"o":"m 485 435 l 485 339 l 385 339 q 174 207 174 339 q 223 113 174 146 q 372 79 273 79 q 486 93 429 79 q 610 138 542 106 l 610 37 q 367 -14 517 -14 q 143 44 224 -14 q 61 201 61 101 q 98 312 61 268 q 224 385 136 357 l 224 392 q 121 454 157 411 q 85 559 85 497 q 161 703 85 650 q 367 757 237 757 q 489 746 433 757 q 612 704 545 734 l 570 614 q 462 652 506 642 q 364 661 418 661 q 195 551 195 661 q 410 435 195 435 l 485 435 z "},"Ԓ":{"ha":972,"x_min":0,"x_max":941,"o":"m 842 0 l 726 0 l 726 889 l 404 889 l 383 726 q 310 251 342 401 q 227 42 279 101 q 90 -16 176 -17 q 0 1 40 -16 l 0 98 q 77 81 37 81 q 139 110 113 81 q 187 213 166 140 q 239 489 208 286 q 309 991 271 693 l 842 991 l 842 0 m 941 104 l 941 -92 q 786 -268 941 -268 q 707 -252 748 -268 l 707 -157 q 777 -170 735 -170 q 840 -102 840 -170 l 840 104 l 941 104 z "},"ԓ":{"ha":793,"x_min":11,"x_max":772,"o":"m 673 0 l 559 0 l 559 647 l 336 647 q 286 264 318 406 q 201 56 253 122 q 69 -9 149 -9 q 11 -1 33 -9 l 11 82 q 45 78 26 78 q 169 243 123 78 q 239 743 215 408 l 673 743 l 673 0 m 772 97 l 772 -92 q 618 -268 772 -268 q 539 -252 580 -268 l 539 -157 q 608 -170 567 -170 q 672 -102 672 -170 l 672 97 l 772 97 z "},"Ạ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 372 -164 q 392 -107 372 -125 q 440 -89 412 -89 q 487 -107 467 -89 q 507 -164 507 -125 q 487 -220 507 -201 q 440 -239 467 -239 q 392 -220 412 -239 q 372 -164 372 -201 z "},"ạ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 296 -164 q 316 -107 296 -125 q 364 -89 336 -89 q 411 -107 391 -89 q 431 -164 431 -125 q 411 -220 431 -201 q 364 -239 391 -239 q 316 -220 336 -239 q 296 -164 296 -201 z "},"Ả":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 596 1243 q 484 1125 596 1148 l 477 1048 l 406 1048 l 397 1168 q 482 1194 456 1177 q 509 1240 509 1211 q 486 1283 509 1270 q 414 1297 463 1297 q 350 1293 372 1297 l 350 1361 q 422 1368 376 1368 q 596 1243 596 1368 z "},"ả":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 538 1014 q 425 896 538 919 l 418 819 l 347 819 l 339 939 q 424 965 397 948 q 450 1011 450 982 q 428 1054 450 1040 q 355 1068 405 1068 q 292 1064 313 1068 l 292 1132 q 364 1139 317 1139 q 538 1014 538 1139 z "},"Ấ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 646 1071 l 582 1071 q 439 1183 506 1122 q 296 1071 361 1115 l 232 1071 l 232 1088 l 268 1128 q 379 1264 344 1212 l 498 1264 q 646 1088 543 1200 l 646 1071 m 591 1219 q 677 1357 641 1281 l 794 1357 l 794 1343 q 656 1203 738 1268 l 591 1203 l 591 1219 z "},"ấ":{"ha":772,"x_min":64,"x_max":739,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 590 842 l 526 842 q 383 954 450 892 q 240 842 306 886 l 176 842 l 176 859 l 212 899 q 323 1035 288 983 l 443 1035 q 590 859 488 971 l 590 842 m 536 990 q 622 1128 585 1052 l 739 1128 l 739 1114 q 601 974 682 1039 l 536 974 l 536 990 z "},"Ầ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 643 1071 l 579 1071 q 436 1183 513 1115 q 293 1071 364 1118 l 229 1071 l 229 1086 l 265 1127 q 376 1263 341 1211 l 496 1263 q 643 1086 541 1199 l 643 1071 m 283 1203 l 219 1203 q 81 1343 138 1267 l 81 1357 l 197 1357 q 283 1218 233 1284 l 283 1203 z "},"ầ":{"ha":772,"x_min":31,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 593 842 l 529 842 q 386 954 463 886 q 243 842 314 889 l 179 842 l 179 857 l 215 898 q 326 1034 291 981 l 446 1034 q 593 857 490 970 l 593 842 m 233 974 l 169 974 q 31 1114 87 1038 l 31 1128 l 147 1128 q 233 989 182 1055 l 233 974 z "},"Ẩ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 637 1071 l 574 1071 q 431 1183 498 1122 q 288 1071 353 1115 l 224 1071 l 224 1088 l 260 1128 q 371 1264 336 1212 l 490 1264 q 637 1088 535 1200 l 637 1071 m 751 1345 q 665 1255 751 1275 l 661 1200 l 607 1200 l 600 1289 q 660 1306 639 1295 q 682 1343 682 1317 q 662 1376 682 1368 q 614 1385 643 1385 q 565 1381 583 1385 l 565 1435 q 619 1439 582 1439 q 751 1345 751 1439 z "},"ẩ":{"ha":772,"x_min":64,"x_max":710,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 596 842 l 532 842 q 389 954 456 892 q 246 842 312 886 l 182 842 l 182 859 l 218 899 q 330 1035 294 983 l 449 1035 q 596 859 494 971 l 596 842 m 710 1116 q 624 1026 710 1046 l 620 971 l 566 971 l 559 1060 q 619 1077 597 1066 q 640 1114 640 1088 q 621 1147 640 1139 q 572 1156 602 1156 q 524 1152 541 1156 l 524 1206 q 578 1210 541 1210 q 710 1116 710 1210 z "},"Ẫ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 533 1307 q 484 1317 508 1307 q 437 1340 460 1327 q 393 1362 414 1352 q 353 1373 372 1373 q 311 1356 326 1373 q 288 1305 297 1339 l 226 1305 q 269 1416 235 1377 q 354 1454 303 1454 q 404 1444 379 1454 q 451 1421 429 1434 q 495 1399 474 1409 q 534 1389 516 1389 q 576 1406 562 1389 q 598 1455 590 1422 l 659 1455 q 618 1346 652 1385 q 533 1307 585 1307 m 648 1071 l 585 1071 q 441 1183 519 1115 q 298 1071 370 1118 l 235 1071 l 235 1086 l 271 1127 q 382 1263 347 1211 l 501 1263 q 648 1086 546 1199 l 648 1071 z "},"ẫ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 476 1078 q 427 1088 451 1078 q 380 1111 403 1098 q 336 1133 357 1123 q 296 1143 315 1143 q 254 1127 269 1143 q 231 1076 240 1110 l 169 1076 q 212 1186 178 1148 q 297 1225 246 1225 q 347 1215 322 1225 q 394 1192 372 1204 q 438 1170 417 1180 q 477 1160 459 1160 q 519 1176 505 1160 q 541 1226 533 1193 l 602 1226 q 561 1117 595 1156 q 476 1078 528 1078 m 591 842 l 528 842 q 385 954 462 886 q 241 842 313 889 l 178 842 l 178 857 l 214 898 q 325 1034 290 981 l 444 1034 q 591 857 489 970 l 591 842 z "},"Ậ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 372 -164 q 392 -107 372 -125 q 440 -89 412 -89 q 487 -107 467 -89 q 507 -164 507 -125 q 487 -220 507 -201 q 440 -239 467 -239 q 392 -220 412 -239 q 372 -164 372 -201 m 211 1086 q 332 1222 297 1179 q 382 1293 366 1265 l 494 1293 q 546 1220 509 1265 q 668 1086 583 1175 l 668 1071 l 587 1071 q 437 1197 528 1108 q 289 1071 345 1106 l 211 1071 l 211 1086 z "},"ậ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 296 -164 q 316 -107 296 -125 q 364 -89 336 -89 q 411 -107 391 -89 q 431 -164 431 -125 q 411 -220 431 -201 q 364 -239 391 -239 q 316 -220 336 -239 q 296 -164 296 -201 m 152 857 q 273 993 238 949 q 323 1064 307 1036 l 435 1064 q 487 990 450 1036 q 609 857 524 945 l 609 842 l 528 842 q 378 968 469 879 q 230 842 286 877 l 152 842 l 152 857 z "},"Ắ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 397 1263 q 485 1402 452 1333 l 602 1402 l 602 1388 q 463 1247 543 1310 l 397 1247 l 397 1263 m 439 1071 q 242 1247 252 1071 l 311 1247 q 343 1179 317 1198 q 441 1160 369 1160 q 536 1182 507 1160 q 571 1247 566 1204 l 642 1247 q 584 1118 635 1166 q 439 1071 534 1071 z "},"ắ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 342 1034 q 429 1173 396 1104 l 546 1173 l 546 1158 q 407 1018 488 1081 l 342 1018 l 342 1034 m 384 842 q 186 1018 197 842 l 256 1018 q 288 950 262 969 q 385 930 313 930 q 481 952 452 930 q 515 1018 510 975 l 587 1018 q 529 889 579 937 q 384 842 478 842 z "},"Ằ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 473 1247 l 410 1247 q 271 1388 329 1310 l 271 1402 l 387 1402 q 473 1263 422 1329 l 473 1247 m 437 1071 q 240 1247 250 1071 l 309 1247 q 341 1179 315 1198 q 439 1160 367 1160 q 534 1182 505 1160 q 569 1247 564 1204 l 640 1247 q 582 1118 633 1166 q 437 1071 532 1071 z "},"ằ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 418 1018 l 355 1018 q 216 1158 274 1081 l 216 1173 l 332 1173 q 418 1034 368 1099 l 418 1018 m 382 842 q 185 1018 195 842 l 254 1018 q 286 950 260 969 q 384 930 312 930 q 479 952 450 930 q 514 1018 509 975 l 585 1018 q 527 889 578 937 q 382 842 477 842 z "},"Ẳ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 538 1353 q 452 1265 538 1285 l 448 1238 l 393 1238 l 386 1299 q 447 1316 425 1305 q 469 1352 469 1326 q 450 1385 469 1377 q 401 1394 431 1394 q 351 1390 376 1394 l 351 1443 q 408 1449 366 1449 q 538 1353 538 1449 m 437 1071 q 240 1247 250 1071 l 309 1247 q 341 1179 315 1198 q 439 1160 367 1160 q 534 1182 505 1160 q 569 1247 564 1204 l 640 1247 q 582 1118 633 1166 q 437 1071 532 1071 z "},"ẳ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 489 1124 q 403 1036 489 1056 l 399 1008 l 343 1008 l 336 1069 q 397 1086 375 1076 q 420 1122 420 1097 q 400 1156 420 1147 q 351 1165 381 1165 q 302 1161 326 1165 l 302 1214 q 359 1219 317 1219 q 489 1124 489 1219 m 388 842 q 191 1018 201 842 l 260 1018 q 292 950 266 969 q 389 930 317 930 q 485 952 456 930 q 519 1018 514 975 l 591 1018 q 533 889 583 937 q 388 842 482 842 z "},"Ẵ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 532 1305 q 483 1316 507 1305 q 436 1338 458 1326 q 392 1360 413 1350 q 351 1371 370 1371 q 310 1354 324 1371 q 286 1304 296 1338 l 224 1304 q 267 1413 233 1375 q 353 1451 301 1451 q 402 1441 378 1451 q 450 1419 427 1431 q 494 1396 473 1407 q 533 1386 515 1386 q 574 1403 560 1386 q 597 1453 589 1419 l 658 1453 q 617 1344 650 1383 q 532 1305 583 1305 m 433 1071 q 236 1247 246 1071 l 305 1247 q 337 1179 311 1198 q 435 1160 363 1160 q 530 1182 501 1160 q 565 1247 559 1204 l 636 1247 q 578 1118 629 1166 q 433 1071 528 1071 z "},"ẵ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 481 1076 q 432 1086 456 1076 q 385 1109 408 1097 q 341 1131 362 1121 q 300 1141 319 1141 q 259 1125 273 1141 q 235 1075 245 1109 l 174 1075 q 216 1184 182 1145 q 302 1222 250 1222 q 352 1212 327 1222 q 399 1190 376 1202 q 443 1167 422 1177 q 482 1157 464 1157 q 524 1174 509 1157 q 546 1223 538 1190 l 607 1223 q 566 1115 600 1154 q 481 1076 532 1076 m 382 842 q 185 1018 195 842 l 254 1018 q 286 950 260 969 q 384 930 312 930 q 479 952 450 930 q 514 1018 509 975 l 585 1018 q 527 889 578 937 q 382 842 477 842 z "},"Ặ":{"ha":879,"x_min":0,"x_max":879,"o":"m 760 0 l 636 315 l 239 315 l 117 0 l 0 0 l 392 996 l 489 996 l 879 0 l 760 0 m 600 419 l 485 726 q 439 869 463 785 q 396 726 424 804 l 279 419 l 600 419 m 436 1083 q 288 1129 341 1083 q 229 1265 235 1176 l 300 1265 q 318 1213 304 1232 q 356 1185 332 1194 q 439 1176 381 1176 q 540 1198 507 1176 q 579 1265 572 1219 l 650 1265 q 586 1131 643 1179 q 436 1083 530 1083 m 372 -164 q 392 -107 372 -125 q 440 -89 412 -89 q 487 -107 467 -89 q 507 -164 507 -125 q 487 -220 507 -201 q 440 -239 467 -239 q 392 -220 412 -239 q 372 -164 372 -201 z "},"ặ":{"ha":772,"x_min":64,"x_max":660,"o":"m 576 0 l 554 106 l 549 106 q 438 11 493 36 q 300 -14 382 -14 q 126 43 189 -14 q 64 205 64 100 q 424 441 64 431 l 550 446 l 550 492 q 512 621 550 579 q 392 663 475 663 q 182 606 299 663 l 147 692 q 268 739 202 722 q 399 755 333 755 q 596 696 532 755 q 660 507 660 637 l 660 0 l 576 0 m 322 79 q 487 137 427 79 q 547 298 547 195 l 547 366 l 435 361 q 241 319 300 356 q 182 204 182 282 q 219 111 182 143 q 322 79 256 79 m 378 842 q 231 888 283 842 q 172 1023 178 935 l 242 1023 q 260 971 246 990 q 299 943 274 952 q 381 935 323 935 q 482 956 450 935 q 522 1023 515 978 l 592 1023 q 529 890 585 938 q 378 842 472 842 m 296 -164 q 316 -107 296 -125 q 364 -89 336 -89 q 411 -107 391 -89 q 431 -164 431 -125 q 411 -220 431 -201 q 364 -239 391 -239 q 316 -220 336 -239 q 296 -164 296 -201 z "},"Ẹ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 345 -164 q 365 -107 345 -125 q 413 -89 385 -89 q 460 -107 440 -89 q 479 -164 479 -125 q 460 -220 479 -201 q 413 -239 440 -239 q 365 -220 385 -239 q 345 -164 345 -201 z "},"ẹ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 338 -164 q 358 -107 338 -125 q 407 -89 378 -89 q 454 -107 434 -89 q 473 -164 473 -125 q 454 -220 473 -201 q 407 -239 434 -239 q 358 -220 378 -239 q 338 -164 338 -201 z "},"Ẻ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 567 1243 q 454 1125 567 1148 l 448 1048 l 376 1048 l 368 1168 q 453 1194 427 1177 q 479 1240 479 1211 q 457 1283 479 1270 q 385 1297 434 1297 q 321 1293 342 1297 l 321 1361 q 393 1368 347 1368 q 567 1243 567 1368 z "},"ẻ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 562 1014 q 449 896 562 919 l 442 819 l 371 819 l 363 939 q 448 965 421 948 q 474 1011 474 982 q 451 1054 474 1040 q 379 1068 429 1068 q 315 1064 337 1068 l 315 1132 q 388 1139 341 1139 q 562 1014 562 1139 z "},"Ẽ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 515 1072 q 458 1085 486 1072 q 404 1113 431 1097 q 352 1140 377 1128 q 304 1153 328 1153 q 253 1133 271 1153 q 227 1071 236 1112 l 160 1071 q 208 1199 169 1153 q 309 1246 247 1246 q 369 1233 340 1246 q 425 1205 398 1221 q 475 1178 451 1190 q 522 1165 500 1165 q 571 1185 555 1165 q 597 1247 587 1205 l 665 1247 q 617 1119 656 1165 q 515 1072 579 1072 z "},"ẽ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 502 843 q 445 856 473 843 q 390 883 417 868 q 339 911 363 899 q 291 924 314 924 q 240 903 257 924 q 213 842 222 883 l 146 842 q 194 970 155 924 q 295 1017 233 1017 q 355 1004 326 1017 q 411 976 385 991 q 462 948 437 961 q 508 936 486 936 q 557 956 541 936 q 584 1018 574 976 l 651 1018 q 604 889 642 936 q 502 843 566 843 z "},"Ế":{"ha":772,"x_min":136,"x_max":770,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 621 1071 l 557 1071 q 414 1183 481 1122 q 271 1071 337 1115 l 208 1071 l 208 1088 l 243 1128 q 355 1264 319 1212 l 474 1264 q 621 1088 519 1200 l 621 1071 m 567 1219 q 653 1357 616 1281 l 770 1357 l 770 1343 q 632 1203 713 1268 l 567 1203 l 567 1219 z "},"ế":{"ha":779,"x_min":78,"x_max":757,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 608 842 l 545 842 q 401 954 469 892 q 258 842 324 886 l 195 842 l 195 859 l 231 899 q 342 1035 307 983 l 461 1035 q 608 859 506 971 l 608 842 m 554 990 q 640 1128 604 1052 l 757 1128 l 757 1114 q 619 974 701 1039 l 554 974 l 554 990 z "},"Ề":{"ha":772,"x_min":63,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 625 1071 l 562 1071 q 418 1183 496 1115 q 275 1071 347 1118 l 212 1071 l 212 1086 l 248 1127 q 359 1263 323 1211 l 478 1263 q 625 1086 523 1199 l 625 1071 m 266 1203 l 201 1203 q 63 1343 120 1267 l 63 1357 l 180 1357 q 266 1218 215 1284 l 266 1203 z "},"ề":{"ha":779,"x_min":50,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 612 842 l 549 842 q 406 954 483 886 q 262 842 334 889 l 199 842 l 199 857 l 235 898 q 346 1034 311 981 l 465 1034 q 612 857 510 970 l 612 842 m 253 974 l 189 974 q 50 1114 107 1038 l 50 1128 l 167 1128 q 253 989 202 1055 l 253 974 z "},"Ể":{"ha":772,"x_min":136,"x_max":733,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 619 1071 l 555 1071 q 412 1183 479 1122 q 269 1071 335 1115 l 205 1071 l 205 1088 l 241 1128 q 353 1264 317 1212 l 472 1264 q 619 1088 517 1200 l 619 1071 m 733 1345 q 647 1255 733 1275 l 643 1200 l 589 1200 l 582 1289 q 642 1306 621 1295 q 663 1343 663 1317 q 644 1376 663 1368 q 595 1385 625 1385 q 547 1381 564 1385 l 547 1435 q 601 1439 564 1439 q 733 1345 733 1439 z "},"ể":{"ha":779,"x_min":78,"x_max":714,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 600 842 l 536 842 q 393 954 460 892 q 250 842 316 886 l 186 842 l 186 859 l 222 899 q 334 1035 298 983 l 453 1035 q 600 859 498 971 l 600 842 m 714 1116 q 628 1026 714 1046 l 624 971 l 570 971 l 563 1060 q 623 1077 602 1066 q 644 1114 644 1088 q 625 1147 644 1139 q 576 1156 606 1156 q 528 1152 545 1156 l 528 1206 q 582 1210 545 1210 q 714 1116 714 1210 z "},"Ễ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 503 1307 q 453 1317 477 1307 q 407 1340 429 1327 q 362 1362 384 1352 q 322 1373 341 1373 q 281 1356 295 1373 q 257 1305 267 1339 l 195 1305 q 238 1416 204 1377 q 323 1454 273 1454 q 373 1444 349 1454 q 421 1421 398 1434 q 465 1399 444 1409 q 504 1389 486 1389 q 545 1406 531 1389 q 568 1455 559 1422 l 629 1455 q 588 1346 621 1385 q 503 1307 554 1307 m 618 1071 l 554 1071 q 411 1183 488 1115 q 268 1071 339 1118 l 204 1071 l 204 1086 l 240 1127 q 351 1263 316 1211 l 471 1263 q 618 1086 515 1199 l 618 1071 z "},"ễ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 488 1078 q 438 1088 463 1078 q 392 1111 414 1098 q 348 1133 369 1123 q 307 1143 326 1143 q 266 1127 280 1143 q 242 1076 252 1110 l 180 1076 q 223 1186 189 1148 q 309 1225 258 1225 q 358 1215 334 1225 q 406 1192 383 1204 q 450 1170 429 1180 q 489 1160 471 1160 q 530 1176 516 1160 q 553 1226 545 1193 l 614 1226 q 573 1117 606 1156 q 488 1078 539 1078 m 603 842 l 539 842 q 396 954 473 886 q 253 842 324 889 l 189 842 l 189 857 l 225 898 q 336 1034 301 981 l 456 1034 q 603 857 500 970 l 603 842 z "},"Ệ":{"ha":772,"x_min":136,"x_max":689,"o":"m 689 0 l 136 0 l 136 991 l 689 991 l 689 889 l 252 889 l 252 570 l 663 570 l 663 468 l 252 468 l 252 103 l 689 103 l 689 0 m 342 -164 q 362 -107 342 -125 q 411 -89 382 -89 q 458 -107 438 -89 q 477 -164 477 -125 q 458 -220 477 -201 q 411 -239 438 -239 q 362 -220 382 -239 q 342 -164 342 -201 m 183 1086 q 304 1222 269 1179 q 354 1293 338 1265 l 467 1293 q 518 1220 481 1265 q 640 1086 555 1175 l 640 1071 l 559 1071 q 410 1197 500 1108 q 261 1071 317 1106 l 183 1071 l 183 1086 z "},"ệ":{"ha":779,"x_min":78,"x_max":707,"o":"m 433 -14 q 173 87 269 -14 q 78 366 78 187 q 166 651 78 545 q 404 757 255 757 q 625 665 544 757 q 707 422 707 573 l 707 351 l 195 351 q 261 153 198 220 q 437 85 323 85 q 675 135 557 85 l 675 35 q 562 -2 615 9 q 433 -14 509 -14 m 403 663 q 260 604 313 663 q 197 443 207 546 l 586 443 q 538 606 586 549 q 403 663 491 663 m 333 -164 q 353 -107 333 -125 q 401 -89 373 -89 q 448 -107 429 -89 q 468 -164 468 -125 q 448 -220 468 -201 q 401 -239 429 -239 q 353 -220 373 -239 q 333 -164 333 -201 m 172 857 q 292 993 258 949 q 342 1064 327 1036 l 455 1064 q 507 990 470 1036 q 629 857 544 945 l 629 842 l 548 842 q 398 968 488 879 q 250 842 306 877 l 172 842 l 172 857 z "},"ỉ":{"ha":351,"x_min":83,"x_max":330,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 330 1014 q 217 896 330 919 l 210 819 l 139 819 l 131 939 q 216 965 189 948 q 242 1011 242 982 q 219 1054 242 1040 q 147 1068 197 1068 q 83 1064 105 1068 l 83 1132 q 156 1139 109 1139 q 330 1014 330 1139 z "},"ị":{"ha":351,"x_min":106,"x_max":243,"o":"m 232 0 l 119 0 l 119 743 l 232 743 l 232 0 m 110 945 q 129 1001 110 983 q 176 1019 148 1019 q 223 1001 203 1019 q 243 945 243 983 q 223 888 243 907 q 176 869 203 869 q 129 888 148 869 q 110 945 110 907 m 106 -164 q 126 -107 106 -125 q 175 -89 146 -89 q 222 -107 202 -89 q 241 -164 241 -125 q 222 -220 241 -201 q 175 -239 202 -239 q 126 -220 146 -239 q 106 -164 106 -201 z "},"Ọ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 473 -164 q 493 -107 473 -125 q 542 -89 513 -89 q 589 -107 569 -89 q 608 -164 608 -125 q 589 -220 608 -201 q 542 -239 569 -239 q 493 -220 513 -239 q 473 -164 473 -201 z "},"ọ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 350 -164 q 370 -107 350 -125 q 418 -89 390 -89 q 465 -107 446 -89 q 485 -164 485 -125 q 465 -220 485 -201 q 418 -239 446 -239 q 370 -220 390 -239 q 350 -164 350 -201 z "},"Ỏ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 696 1243 q 583 1125 696 1148 l 576 1048 l 505 1048 l 497 1168 q 582 1194 555 1177 q 608 1240 608 1211 q 586 1283 608 1270 q 513 1297 563 1297 q 450 1293 471 1297 l 450 1361 q 522 1368 475 1368 q 696 1243 696 1368 z "},"ỏ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 572 1014 q 460 896 572 919 l 453 819 l 382 819 l 374 939 q 458 965 432 948 q 485 1011 485 982 q 462 1054 485 1040 q 390 1068 439 1068 q 326 1064 348 1068 l 326 1132 q 399 1139 352 1139 q 572 1014 572 1139 z "},"Ố":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 749 1071 l 685 1071 q 542 1183 609 1122 q 399 1071 465 1115 l 335 1071 l 335 1088 l 371 1128 q 482 1264 447 1212 l 602 1264 q 749 1088 646 1200 l 749 1071 m 694 1219 q 781 1357 744 1281 l 897 1357 l 897 1343 q 760 1203 841 1268 l 694 1203 l 694 1219 z "},"ố":{"ha":839,"x_min":78,"x_max":774,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 625 842 l 562 842 q 418 954 486 892 q 275 842 341 886 l 212 842 l 212 859 l 248 899 q 359 1035 323 983 l 478 1035 q 625 859 523 971 l 625 842 m 571 990 q 657 1128 621 1052 l 774 1128 l 774 1114 q 636 974 718 1039 l 571 974 l 571 990 z "},"Ồ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 751 1071 l 688 1071 q 545 1183 622 1115 q 401 1071 473 1118 l 338 1071 l 338 1086 l 374 1127 q 485 1263 450 1211 l 604 1263 q 751 1086 649 1199 l 751 1071 m 392 1203 l 328 1203 q 189 1343 246 1267 l 189 1357 l 306 1357 q 392 1218 341 1284 l 392 1203 z "},"ồ":{"ha":839,"x_min":66,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 628 842 l 564 842 q 421 954 498 886 q 278 842 349 889 l 214 842 l 214 857 l 250 898 q 361 1034 326 981 l 481 1034 q 628 857 526 970 l 628 842 m 269 974 l 204 974 q 66 1114 123 1038 l 66 1128 l 182 1128 q 269 989 218 1055 l 269 974 z "},"Ổ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 747 1071 l 684 1071 q 541 1183 608 1122 q 397 1071 463 1115 l 334 1071 l 334 1088 l 370 1128 q 481 1264 446 1212 l 600 1264 q 747 1088 645 1200 l 747 1071 m 861 1345 q 775 1255 861 1275 l 771 1200 l 717 1200 l 710 1289 q 770 1306 749 1295 q 791 1343 791 1317 q 772 1376 791 1368 q 724 1385 753 1385 q 675 1381 692 1385 l 675 1435 q 729 1439 692 1439 q 861 1345 861 1439 z "},"ổ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 625 842 l 562 842 q 418 954 486 892 q 275 842 341 886 l 212 842 l 212 859 l 248 899 q 359 1035 323 983 l 478 1035 q 625 859 523 971 l 625 842 m 739 1116 q 653 1026 739 1046 l 649 971 l 595 971 l 588 1060 q 648 1077 627 1066 q 669 1114 669 1088 q 650 1147 669 1139 q 602 1156 631 1156 q 553 1152 570 1156 l 553 1206 q 607 1210 570 1210 q 739 1116 739 1210 z "},"Ỗ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 633 1307 q 584 1317 608 1307 q 537 1340 560 1327 q 493 1362 515 1352 q 453 1373 472 1373 q 412 1356 426 1373 q 388 1305 397 1339 l 326 1305 q 369 1416 335 1377 q 454 1454 404 1454 q 504 1444 479 1454 q 552 1421 529 1434 q 595 1399 574 1409 q 635 1389 616 1389 q 676 1406 662 1389 q 699 1455 690 1422 l 760 1455 q 719 1346 752 1385 q 633 1307 685 1307 m 749 1071 l 685 1071 q 542 1183 619 1115 q 399 1071 470 1118 l 335 1071 l 335 1086 l 371 1127 q 482 1263 447 1211 l 602 1263 q 749 1086 646 1199 l 749 1071 z "},"ỗ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 511 1078 q 462 1088 486 1078 q 415 1111 438 1098 q 371 1133 393 1123 q 331 1143 350 1143 q 290 1127 304 1143 q 266 1076 275 1110 l 204 1076 q 247 1186 213 1148 q 332 1225 281 1225 q 382 1215 357 1225 q 430 1192 407 1204 q 473 1170 452 1180 q 513 1160 494 1160 q 554 1176 540 1160 q 576 1226 568 1193 l 637 1226 q 596 1117 630 1156 q 511 1078 563 1078 m 627 842 l 563 842 q 420 954 497 886 q 277 842 348 889 l 213 842 l 213 857 l 249 898 q 360 1034 325 981 l 479 1034 q 627 857 524 970 l 627 842 z "},"Ộ":{"ha":1082,"x_min":85,"x_max":997,"o":"m 997 497 q 877 123 997 259 q 542 -14 756 -14 q 204 120 323 -14 q 85 498 85 254 q 204 874 85 741 q 543 1007 323 1007 q 877 871 757 1007 q 997 497 997 736 m 207 497 q 293 192 207 296 q 542 87 378 87 q 791 191 707 87 q 875 497 875 295 q 791 801 875 697 q 543 904 707 904 q 293 800 378 904 q 207 497 207 696 m 473 -164 q 493 -107 473 -125 q 542 -89 513 -89 q 589 -107 569 -89 q 608 -164 608 -125 q 589 -220 608 -201 q 542 -239 569 -239 q 493 -220 513 -239 q 473 -164 473 -201 m 313 1086 q 433 1222 399 1179 q 484 1293 468 1265 l 596 1293 q 648 1220 611 1265 q 770 1086 685 1175 l 770 1071 l 689 1071 q 539 1197 629 1108 q 391 1071 447 1106 l 313 1071 l 313 1086 z "},"ộ":{"ha":839,"x_min":78,"x_max":761,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 669 653 577 757 q 761 372 761 549 m 195 372 q 252 155 195 230 q 419 81 309 81 q 587 155 530 81 q 644 372 644 229 q 587 588 644 514 q 418 661 530 661 q 251 589 307 661 q 195 372 195 516 m 353 -164 q 373 -107 353 -125 q 421 -89 393 -89 q 468 -107 448 -89 q 488 -164 488 -125 q 468 -220 488 -201 q 421 -239 448 -239 q 373 -220 393 -239 q 353 -164 353 -201 m 191 857 q 312 993 277 949 q 362 1064 347 1036 l 475 1064 q 527 990 490 1036 q 648 857 564 945 l 648 842 l 568 842 q 418 968 508 879 q 269 842 326 877 l 191 842 l 191 857 z "},"Ớ":{"ha":1083,"x_min":85,"x_max":1109,"o":"m 996 497 q 875 122 996 257 q 542 -14 755 -14 q 204 120 323 -14 q 85 498 85 253 q 204 875 85 743 q 543 1007 324 1007 q 885 861 764 1007 q 939 892 919 869 q 967 949 958 915 q 977 1055 977 984 l 1100 1055 l 1109 1040 q 1045 877 1090 935 q 930 791 1001 818 q 996 497 996 672 m 207 497 q 292 191 207 295 q 542 87 376 87 q 790 191 707 87 q 873 497 873 294 q 790 801 873 697 q 543 904 707 904 q 293 801 378 904 q 207 497 207 699 m 469 1088 q 539 1190 502 1130 q 599 1293 577 1249 l 736 1293 l 736 1279 q 647 1171 706 1235 q 545 1071 588 1106 l 469 1071 l 469 1088 z "},"ớ":{"ha":846,"x_min":78,"x_max":885,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 661 661 568 757 q 715 693 696 671 q 744 749 735 715 q 753 857 753 783 l 875 857 l 885 842 q 823 676 864 736 q 713 591 782 617 q 761 372 761 498 m 195 372 q 248 155 195 229 q 419 81 302 81 q 591 155 538 81 q 644 372 644 229 q 590 588 644 515 q 418 661 536 661 q 248 588 300 661 q 195 372 195 515 m 340 859 q 411 960 373 901 q 470 1064 448 1020 l 607 1064 l 607 1050 q 518 941 577 1006 q 416 842 459 877 l 340 842 l 340 859 z "},"Ờ":{"ha":1083,"x_min":85,"x_max":1109,"o":"m 996 497 q 875 122 996 257 q 542 -14 755 -14 q 204 120 323 -14 q 85 498 85 253 q 204 875 85 743 q 543 1007 324 1007 q 885 861 764 1007 q 939 892 919 869 q 967 949 958 915 q 977 1055 977 984 l 1100 1055 l 1109 1040 q 1045 877 1090 935 q 930 791 1001 818 q 996 497 996 672 m 207 497 q 292 191 207 295 q 542 87 376 87 q 790 191 707 87 q 873 497 873 294 q 790 801 873 697 q 543 904 707 904 q 293 801 378 904 q 207 497 207 699 m 625 1071 l 550 1071 q 446 1171 506 1106 q 358 1279 385 1236 l 358 1293 l 496 1293 q 556 1185 517 1246 q 625 1088 595 1124 l 625 1071 z "},"ờ":{"ha":846,"x_min":78,"x_max":885,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 661 661 568 757 q 715 693 696 671 q 744 749 735 715 q 753 857 753 783 l 875 857 l 885 842 q 823 676 864 736 q 713 591 782 617 q 761 372 761 498 m 195 372 q 248 155 195 229 q 419 81 302 81 q 591 155 538 81 q 644 372 644 229 q 590 588 644 515 q 418 661 536 661 q 248 588 300 661 q 195 372 195 515 m 503 842 l 429 842 q 324 942 385 877 q 237 1050 264 1007 l 237 1064 l 374 1064 q 435 956 396 1017 q 503 859 473 895 l 503 842 z "},"Ở":{"ha":1083,"x_min":85,"x_max":1109,"o":"m 996 497 q 875 122 996 257 q 542 -14 755 -14 q 204 120 323 -14 q 85 498 85 253 q 204 875 85 743 q 543 1007 324 1007 q 885 861 764 1007 q 939 892 919 869 q 967 949 958 915 q 977 1055 977 984 l 1100 1055 l 1109 1040 q 1045 877 1090 935 q 930 791 1001 818 q 996 497 996 672 m 207 497 q 292 191 207 295 q 542 87 376 87 q 790 191 707 87 q 873 497 873 294 q 790 801 873 697 q 543 904 707 904 q 293 801 378 904 q 207 497 207 699 m 696 1243 q 583 1125 696 1148 l 576 1048 l 505 1048 l 497 1168 q 582 1194 555 1177 q 608 1240 608 1211 q 586 1283 608 1270 q 513 1297 563 1297 q 450 1293 471 1297 l 450 1361 q 522 1368 475 1368 q 696 1243 696 1368 z "},"ở":{"ha":846,"x_min":78,"x_max":885,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 661 661 568 757 q 715 693 696 671 q 744 749 735 715 q 753 857 753 783 l 875 857 l 885 842 q 823 676 864 736 q 713 591 782 617 q 761 372 761 498 m 195 372 q 248 155 195 229 q 419 81 302 81 q 591 155 538 81 q 644 372 644 229 q 590 588 644 515 q 418 661 536 661 q 248 588 300 661 q 195 372 195 515 m 572 1014 q 460 896 572 919 l 453 819 l 382 819 l 374 939 q 458 965 432 948 q 485 1011 485 982 q 462 1054 485 1040 q 390 1068 439 1068 q 326 1064 348 1068 l 326 1132 q 399 1139 352 1139 q 572 1014 572 1139 z "},"Ỡ":{"ha":1083,"x_min":85,"x_max":1109,"o":"m 996 497 q 875 122 996 257 q 542 -14 755 -14 q 204 120 323 -14 q 85 498 85 253 q 204 875 85 743 q 543 1007 324 1007 q 885 861 764 1007 q 939 892 919 869 q 967 949 958 915 q 977 1055 977 984 l 1100 1055 l 1109 1040 q 1045 877 1090 935 q 930 791 1001 818 q 996 497 996 672 m 207 497 q 292 191 207 295 q 542 87 376 87 q 790 191 707 87 q 873 497 873 294 q 790 801 873 697 q 543 904 707 904 q 293 801 378 904 q 207 497 207 699 m 643 1072 q 586 1085 614 1072 q 531 1113 558 1097 q 480 1140 505 1128 q 432 1153 455 1153 q 381 1133 398 1153 q 354 1071 363 1112 l 288 1071 q 335 1199 296 1153 q 436 1246 374 1246 q 496 1233 467 1246 q 552 1205 526 1221 q 603 1178 578 1190 q 649 1165 627 1165 q 699 1185 682 1165 q 725 1247 715 1205 l 792 1247 q 745 1119 783 1165 q 643 1072 707 1072 z "},"ỡ":{"ha":846,"x_min":78,"x_max":885,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 661 661 568 757 q 715 693 696 671 q 744 749 735 715 q 753 857 753 783 l 875 857 l 885 842 q 823 676 864 736 q 713 591 782 617 q 761 372 761 498 m 195 372 q 248 155 195 229 q 419 81 302 81 q 591 155 538 81 q 644 372 644 229 q 590 588 644 515 q 418 661 536 661 q 248 588 300 661 q 195 372 195 515 m 527 843 q 470 856 498 843 q 415 883 442 868 q 364 911 389 899 q 316 924 339 924 q 265 903 282 924 q 238 842 248 883 l 172 842 q 219 970 180 924 q 320 1017 258 1017 q 380 1004 351 1017 q 436 976 410 991 q 487 948 463 961 q 533 936 511 936 q 583 956 566 936 q 609 1018 599 976 l 676 1018 q 629 889 667 936 q 527 843 591 843 z "},"Ợ":{"ha":1083,"x_min":85,"x_max":1109,"o":"m 996 497 q 875 122 996 257 q 542 -14 755 -14 q 204 120 323 -14 q 85 498 85 253 q 204 875 85 743 q 543 1007 324 1007 q 885 861 764 1007 q 939 892 919 869 q 967 949 958 915 q 977 1055 977 984 l 1100 1055 l 1109 1040 q 1045 877 1090 935 q 930 791 1001 818 q 996 497 996 672 m 207 497 q 292 191 207 295 q 542 87 376 87 q 790 191 707 87 q 873 497 873 294 q 790 801 873 697 q 543 904 707 904 q 293 801 378 904 q 207 497 207 699 m 471 -164 q 491 -107 471 -125 q 539 -89 511 -89 q 586 -107 566 -89 q 606 -164 606 -125 q 586 -220 606 -201 q 539 -239 566 -239 q 491 -220 511 -239 q 471 -164 471 -201 z "},"ợ":{"ha":846,"x_min":78,"x_max":885,"o":"m 761 372 q 669 89 761 191 q 416 -14 578 -14 q 239 33 317 -14 q 120 168 162 80 q 78 372 78 255 q 169 655 78 554 q 421 757 260 757 q 661 661 568 757 q 715 693 696 671 q 744 749 735 715 q 753 857 753 783 l 875 857 l 885 842 q 823 676 864 736 q 713 591 782 617 q 761 372 761 498 m 195 372 q 248 155 195 229 q 419 81 302 81 q 591 155 538 81 q 644 372 644 229 q 590 588 644 515 q 418 661 536 661 q 248 588 300 661 q 195 372 195 515 m 350 -164 q 370 -107 350 -125 q 418 -89 390 -89 q 465 -107 446 -89 q 485 -164 485 -125 q 465 -220 485 -201 q 418 -239 446 -239 q 370 -220 390 -239 q 350 -164 350 -201 z "},"Ụ":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 437 -164 q 457 -107 437 -125 q 506 -89 477 -89 q 553 -107 533 -89 q 572 -164 572 -125 q 553 -220 572 -201 q 506 -239 533 -239 q 457 -220 477 -239 q 437 -164 437 -201 z "},"ụ":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 338 -164 q 358 -107 338 -125 q 407 -89 378 -89 q 454 -107 434 -89 q 473 -164 473 -125 q 454 -220 473 -201 q 407 -239 434 -239 q 358 -220 378 -239 q 338 -164 338 -201 z "},"Ủ":{"ha":1011,"x_min":126,"x_max":885,"o":"m 885 991 l 885 350 q 783 83 885 180 q 501 -14 680 -14 q 224 84 322 -14 q 126 353 126 182 l 126 991 l 241 991 l 241 345 q 309 154 241 220 q 509 87 377 87 q 702 154 634 87 q 770 346 770 221 l 770 991 l 885 991 m 656 1243 q 543 1125 656 1148 l 536 1048 l 465 1048 l 457 1168 q 542 1194 515 1177 q 568 1240 568 1211 q 546 1283 568 1270 q 473 1297 523 1297 q 410 1293 431 1297 l 410 1361 q 482 1368 435 1368 q 656 1243 656 1368 z "},"ủ":{"ha":852,"x_min":111,"x_max":733,"o":"m 225 743 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 743 l 733 743 l 733 0 l 640 0 l 624 100 l 618 100 q 522 16 583 45 q 382 -14 460 -14 q 179 51 246 -14 q 111 257 111 115 l 111 743 l 225 743 m 570 1014 q 457 896 570 919 l 450 819 l 379 819 l 371 939 q 456 965 429 948 q 482 1011 482 982 q 459 1054 482 1040 q 387 1068 437 1068 q 323 1064 345 1068 l 323 1132 q 396 1139 349 1139 q 570 1014 570 1139 z "},"Ứ":{"ha":1067,"x_min":126,"x_max":1125,"o":"m 885 991 l 885 857 q 948 884 924 863 q 982 943 972 905 q 993 1055 993 981 l 1116 1055 l 1125 1040 q 1044 854 1103 917 q 885 775 986 792 l 885 350 q 788 81 885 175 q 511 -14 690 -14 q 228 84 330 -14 q 126 353 126 181 l 126 991 l 241 991 l 241 345 q 311 154 241 220 q 514 87 380 87 q 704 153 639 87 q 770 346 770 218 l 770 991 l 885 991 m 428 1088 q 498 1190 460 1130 q 557 1293 536 1249 l 694 1293 l 694 1279 q 606 1171 665 1235 q 503 1071 547 1106 l 428 1071 l 428 1088 z "},"ứ":{"ha":924,"x_min":111,"x_max":970,"o":"m 225 742 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 742 l 733 742 l 733 660 q 814 711 789 667 q 839 859 839 754 l 960 859 l 970 843 q 888 652 948 717 q 733 578 829 587 l 733 0 l 640 0 l 624 100 l 618 100 q 521 15 583 44 q 385 -14 460 -14 q 179 51 247 -14 q 111 257 111 115 l 111 742 l 225 742 m 349 859 q 419 960 381 901 q 478 1064 456 1020 l 615 1064 l 615 1050 q 526 941 585 1006 q 424 842 467 877 l 349 842 l 349 859 z "},"Ừ":{"ha":1067,"x_min":126,"x_max":1125,"o":"m 885 991 l 885 857 q 948 884 924 863 q 982 943 972 905 q 993 1055 993 981 l 1116 1055 l 1125 1040 q 1044 854 1103 917 q 885 775 986 792 l 885 350 q 788 81 885 175 q 511 -14 690 -14 q 228 84 330 -14 q 126 353 126 181 l 126 991 l 241 991 l 241 345 q 311 154 241 220 q 514 87 380 87 q 704 153 639 87 q 770 346 770 218 l 770 991 l 885 991 m 594 1071 l 519 1071 q 415 1171 475 1106 q 328 1279 355 1236 l 328 1293 l 465 1293 q 526 1185 487 1246 q 594 1088 564 1124 l 594 1071 z "},"ừ":{"ha":924,"x_min":111,"x_max":970,"o":"m 225 742 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 742 l 733 742 l 733 660 q 814 711 789 667 q 839 859 839 754 l 960 859 l 970 843 q 888 652 948 717 q 733 578 829 587 l 733 0 l 640 0 l 624 100 l 618 100 q 521 15 583 44 q 385 -14 460 -14 q 179 51 247 -14 q 111 257 111 115 l 111 742 l 225 742 m 486 842 l 412 842 q 307 942 368 877 q 220 1050 247 1007 l 220 1064 l 357 1064 q 418 956 379 1017 q 486 859 456 895 l 486 842 z "},"Ử":{"ha":1067,"x_min":126,"x_max":1125,"o":"m 885 991 l 885 857 q 948 884 924 863 q 982 943 972 905 q 993 1055 993 981 l 1116 1055 l 1125 1040 q 1044 854 1103 917 q 885 775 986 792 l 885 350 q 788 81 885 175 q 511 -14 690 -14 q 228 84 330 -14 q 126 353 126 181 l 126 991 l 241 991 l 241 345 q 311 154 241 220 q 514 87 380 87 q 704 153 639 87 q 770 346 770 218 l 770 991 l 885 991 m 664 1243 q 551 1125 664 1148 l 545 1048 l 473 1048 l 465 1168 q 550 1194 524 1177 q 576 1240 576 1211 q 554 1283 576 1270 q 481 1297 531 1297 q 418 1293 439 1297 l 418 1361 q 490 1368 444 1368 q 664 1243 664 1368 z "},"ử":{"ha":924,"x_min":111,"x_max":970,"o":"m 225 742 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 742 l 733 742 l 733 660 q 814 711 789 667 q 839 859 839 754 l 960 859 l 970 843 q 888 652 948 717 q 733 578 829 587 l 733 0 l 640 0 l 624 100 l 618 100 q 521 15 583 44 q 385 -14 460 -14 q 179 51 247 -14 q 111 257 111 115 l 111 742 l 225 742 m 574 1014 q 461 896 574 919 l 454 819 l 383 819 l 375 939 q 460 965 433 948 q 486 1011 486 982 q 464 1054 486 1040 q 391 1068 441 1068 q 328 1064 349 1068 l 328 1132 q 400 1139 353 1139 q 574 1014 574 1139 z "},"Ữ":{"ha":1067,"x_min":126,"x_max":1125,"o":"m 885 991 l 885 857 q 948 884 924 863 q 982 943 972 905 q 993 1055 993 981 l 1116 1055 l 1125 1040 q 1044 854 1103 917 q 885 775 986 792 l 885 350 q 788 81 885 175 q 511 -14 690 -14 q 228 84 330 -14 q 126 353 126 181 l 126 991 l 241 991 l 241 345 q 311 154 241 220 q 514 87 380 87 q 704 153 639 87 q 770 346 770 218 l 770 991 l 885 991 m 621 1072 q 564 1085 591 1072 q 509 1113 536 1097 q 457 1140 482 1128 q 410 1153 433 1153 q 358 1133 376 1153 q 332 1071 341 1112 l 265 1071 q 313 1199 274 1153 q 414 1246 352 1246 q 474 1233 445 1246 q 530 1205 503 1221 q 581 1178 556 1190 q 627 1165 605 1165 q 676 1185 660 1165 q 703 1247 692 1205 l 770 1247 q 723 1119 761 1165 q 621 1072 684 1072 z "},"ữ":{"ha":924,"x_min":111,"x_max":970,"o":"m 225 742 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 742 l 733 742 l 733 660 q 814 711 789 667 q 839 859 839 754 l 960 859 l 970 843 q 888 652 948 717 q 733 578 829 587 l 733 0 l 640 0 l 624 100 l 618 100 q 521 15 583 44 q 385 -14 460 -14 q 179 51 247 -14 q 111 257 111 115 l 111 742 l 225 742 m 534 843 q 477 856 505 843 q 422 883 449 868 q 371 911 395 899 q 323 924 346 924 q 272 903 289 924 q 245 842 254 883 l 178 842 q 226 970 187 924 q 327 1017 265 1017 q 387 1004 358 1017 q 443 976 416 991 q 494 948 469 961 q 540 936 518 936 q 589 956 573 936 q 616 1018 606 976 l 683 1018 q 636 889 674 936 q 534 843 597 843 z "},"Ự":{"ha":1067,"x_min":126,"x_max":1125,"o":"m 885 991 l 885 857 q 948 884 924 863 q 982 943 972 905 q 993 1055 993 981 l 1116 1055 l 1125 1040 q 1044 854 1103 917 q 885 775 986 792 l 885 350 q 788 81 885 175 q 511 -14 690 -14 q 228 84 330 -14 q 126 353 126 181 l 126 991 l 241 991 l 241 345 q 311 154 241 220 q 514 87 380 87 q 704 153 639 87 q 770 346 770 218 l 770 991 l 885 991 m 439 -164 q 459 -107 439 -125 q 507 -89 479 -89 q 554 -107 534 -89 q 574 -164 574 -125 q 554 -220 574 -201 q 507 -239 534 -239 q 459 -220 479 -239 q 439 -164 439 -201 z "},"ự":{"ha":924,"x_min":111,"x_max":970,"o":"m 225 742 l 225 261 q 267 125 225 170 q 396 81 308 81 q 567 144 513 81 q 621 353 621 208 l 621 742 l 733 742 l 733 660 q 814 711 789 667 q 839 859 839 754 l 960 859 l 970 843 q 888 652 948 717 q 733 578 829 587 l 733 0 l 640 0 l 624 100 l 618 100 q 521 15 583 44 q 385 -14 460 -14 q 179 51 247 -14 q 111 257 111 115 l 111 742 l 225 742 m 334 -164 q 354 -107 334 -125 q 403 -89 374 -89 q 450 -107 430 -89 q 469 -164 469 -125 q 450 -220 469 -201 q 403 -239 430 -239 q 354 -220 374 -239 q 334 -164 334 -201 z "},"Ỵ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 319 -164 q 339 -107 319 -125 q 388 -89 359 -89 q 435 -107 415 -89 q 454 -164 454 -125 q 435 -220 454 -201 q 388 -239 415 -239 q 339 -220 359 -239 q 319 -164 319 -201 z "},"ỵ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 494 -166 q 514 -109 494 -127 q 563 -91 534 -91 q 610 -109 590 -91 q 629 -166 629 -127 q 610 -222 629 -203 q 563 -241 590 -241 q 514 -222 534 -241 q 494 -166 494 -203 z "},"Ỷ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 541 1243 q 428 1125 541 1148 l 421 1048 l 350 1048 l 342 1168 q 427 1194 400 1177 q 453 1240 453 1211 q 430 1283 453 1270 q 358 1297 408 1297 q 294 1293 316 1297 l 294 1361 q 367 1368 320 1368 q 541 1243 541 1368 z "},"ỷ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 497 1014 q 385 896 497 919 l 378 819 l 307 819 l 298 939 q 383 965 357 948 q 410 1011 410 982 q 387 1054 410 1040 q 315 1068 364 1068 q 251 1064 273 1068 l 251 1132 q 323 1139 277 1139 q 497 1014 497 1139 z "},"Ỹ":{"ha":778,"x_min":0,"x_max":778,"o":"m 389 496 l 653 991 l 778 991 l 447 385 l 447 0 l 330 0 l 330 379 l 0 991 l 126 991 l 389 496 m 492 1072 q 435 1085 463 1072 q 381 1113 408 1097 q 329 1140 354 1128 q 281 1153 304 1153 q 230 1133 248 1153 q 203 1071 213 1112 l 137 1071 q 185 1199 146 1153 q 286 1246 224 1246 q 346 1233 317 1246 q 401 1205 375 1221 q 452 1178 428 1190 q 498 1165 477 1165 q 548 1185 532 1165 q 574 1247 564 1205 l 642 1247 q 594 1119 633 1165 q 492 1072 556 1072 z "},"ỹ":{"ha":700,"x_min":1,"x_max":699,"o":"m 1 743 l 122 743 l 285 319 q 351 110 338 174 l 357 110 q 394 228 366 144 q 578 743 422 312 l 699 743 l 379 -103 q 268 -281 332 -229 q 113 -334 205 -334 q 11 -322 61 -334 l 11 -232 q 94 -240 48 -240 q 260 -110 210 -240 l 301 -4 l 1 743 m 454 843 q 397 856 425 843 q 343 883 370 868 q 291 911 316 899 q 243 924 267 924 q 192 903 210 924 q 165 842 175 883 l 99 842 q 147 970 108 924 q 248 1017 186 1017 q 308 1004 279 1017 q 363 976 337 991 q 414 948 390 961 q 460 936 439 936 q 510 956 494 936 q 536 1018 526 976 l 604 1018 q 556 889 595 936 q 454 843 518 843 z "},"₫":{"ha":851,"x_min":78,"x_max":838,"o":"m 625 100 l 619 100 q 386 -14 541 -14 q 159 86 240 -14 q 78 370 78 186 q 159 655 78 553 q 386 757 241 757 q 618 647 537 757 l 627 647 q 619 753 619 703 l 619 843 l 315 843 l 315 930 l 619 930 l 619 1055 l 732 1055 l 732 930 l 838 930 l 838 843 l 732 843 l 732 0 l 640 0 l 625 100 m 400 81 q 567 143 515 81 q 619 346 619 206 l 619 370 q 567 595 619 528 q 399 663 514 663 q 247 586 300 663 q 195 368 195 509 q 247 153 195 226 q 400 81 299 81 m 747 -214 l 119 -214 l 119 -125 l 747 -125 l 747 -214 z "},"̏":{"ha":0,"x_min":-713,"x_max":-225,"o":"m -225 842 l -290 842 q -386 939 -326 870 q -471 1050 -446 1007 l -471 1064 l -345 1064 q -292 964 -326 1023 q -225 859 -258 905 l -225 842 m -467 842 l -532 842 q -629 939 -570 871 q -713 1050 -688 1007 l -713 1064 l -586 1064 q -533 964 -567 1023 q -467 859 -500 905 l -467 842 z "},"ﬀ":{"ha":942,"x_min":20,"x_max":1001,"o":"m 925 656 l 736 656 l 736 0 l 623 0 l 623 656 l 490 656 l 490 707 l 623 747 l 623 789 q 863 1063 623 1063 q 1001 1039 922 1063 l 972 949 q 861 970 907 970 q 766 927 797 970 q 736 791 736 885 l 736 743 l 925 743 l 925 656 m 454 656 l 265 656 l 265 0 l 153 0 l 153 656 l 20 656 l 20 707 l 153 747 l 153 789 q 392 1063 153 1063 q 530 1039 451 1063 l 501 949 q 390 970 436 970 q 296 927 326 970 q 265 791 265 885 l 265 743 l 454 743 l 454 656 z "},"℠":{"ha":1103,"x_min":62,"x_max":983,"o":"m 396 637 q 346 534 396 571 q 211 497 295 497 q 62 519 113 497 l 62 593 q 215 566 134 566 q 315 633 315 566 q 308 669 315 656 q 281 694 300 683 q 205 726 263 705 q 97 787 124 756 q 69 869 69 818 q 117 963 69 928 q 240 999 165 999 q 387 972 325 999 l 364 905 q 240 930 296 930 q 174 915 199 930 q 149 872 149 899 q 155 840 149 852 q 175 819 161 828 q 254 785 190 809 q 369 720 342 751 q 396 637 396 690 m 682 503 l 546 882 l 541 882 l 545 794 l 545 503 l 464 503 l 464 991 l 591 991 l 724 612 l 861 991 l 983 991 l 983 503 l 897 503 l 897 787 l 901 880 l 896 880 l 753 503 l 682 503 z "},"Ţ":{"ha":768,"x_min":12,"x_max":755,"o":"m 441 0 l 326 0 l 326 889 l 12 889 l 12 991 l 755 991 l 755 889 l 441 889 l 441 0 m 512 -196 q 460 -298 512 -262 q 307 -334 408 -334 q 241 -328 272 -334 l 241 -256 q 312 -261 272 -261 q 393 -248 366 -261 q 420 -197 420 -234 q 394 -150 420 -168 q 293 -121 367 -132 l 353 0 l 427 0 l 390 -78 q 512 -196 512 -104 z "},"ţ":{"ha":490,"x_min":21,"x_max":461,"o":"m 359 79 q 417 84 389 79 q 461 93 445 88 l 461 7 q 407 -8 443 -2 q 343 -14 372 -14 q 127 214 127 -14 l 127 656 l 21 656 l 21 710 l 127 757 l 175 916 l 240 916 l 240 743 l 456 743 l 456 656 l 240 656 l 240 218 q 272 115 240 151 q 359 79 304 79 m 429 -196 q 377 -298 429 -262 q 224 -334 326 -334 q 159 -328 189 -334 l 159 -256 q 229 -261 189 -261 q 310 -248 283 -261 q 338 -197 338 -234 q 311 -150 338 -168 q 210 -121 284 -132 l 270 0 l 345 0 l 307 -78 q 429 -196 429 -104 z "},"I":{"ha":387,"x_min":136,"x_max":252,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 z "},"Ì":{"ha":387,"x_min":3,"x_max":270,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 270 1071 l 195 1071 q 91 1171 151 1106 q 3 1279 31 1236 l 3 1293 l 141 1293 q 201 1185 163 1246 q 270 1088 240 1124 l 270 1071 z "},"Í":{"ha":387,"x_min":121,"x_max":388,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 121 1088 q 192 1190 154 1130 q 251 1293 229 1249 l 388 1293 l 388 1279 q 299 1171 358 1235 q 197 1071 240 1106 l 121 1071 l 121 1088 z "},"Î":{"ha":387,"x_min":-39,"x_max":418,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m -39 1086 q 82 1222 47 1179 q 132 1293 117 1265 l 245 1293 q 297 1220 260 1265 q 418 1086 334 1175 l 418 1071 l 338 1071 q 188 1197 278 1108 q 39 1071 96 1106 l -39 1071 l -39 1086 z "},"Ï":{"ha":387,"x_min":3,"x_max":385,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 3 1174 q 21 1225 3 1209 q 64 1240 39 1240 q 109 1225 90 1240 q 127 1174 127 1209 q 109 1123 127 1140 q 64 1107 90 1107 q 21 1123 39 1107 q 3 1174 3 1140 m 262 1174 q 280 1225 262 1209 q 323 1240 298 1240 q 367 1225 348 1240 q 385 1174 385 1209 q 367 1123 385 1140 q 323 1107 348 1107 q 280 1123 298 1107 q 262 1174 262 1140 z "},"Ĩ":{"ha":387,"x_min":-58,"x_max":447,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 298 1072 q 241 1085 269 1072 q 186 1113 213 1097 q 135 1140 159 1128 q 87 1153 110 1153 q 36 1133 53 1153 q 9 1071 18 1112 l -58 1071 q -10 1199 -49 1153 q 91 1246 29 1246 q 151 1233 122 1246 q 207 1205 180 1221 q 258 1178 233 1190 q 304 1165 282 1165 q 353 1185 337 1165 q 380 1247 370 1205 l 447 1247 q 400 1119 438 1165 q 298 1072 361 1072 z "},"Ī":{"ha":387,"x_min":-9,"x_max":398,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m -9 1164 l 398 1164 l 398 1071 l -9 1071 l -9 1164 z "},"Ĭ":{"ha":387,"x_min":-17,"x_max":404,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 190 1071 q 42 1117 95 1071 q -17 1253 -11 1164 l 54 1253 q 72 1200 58 1219 q 110 1173 85 1181 q 193 1164 135 1164 q 294 1185 261 1164 q 333 1253 326 1207 l 404 1253 q 340 1119 397 1167 q 190 1071 283 1071 z "},"Į":{"ha":387,"x_min":58,"x_max":283,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 154 -161 q 218 -225 154 -225 q 283 -216 246 -225 l 283 -290 q 199 -302 239 -302 q 58 -175 58 -302 q 87 -82 58 -127 q 165 0 117 -36 l 247 0 q 177 -82 201 -45 q 154 -161 154 -119 z "},"İ":{"ha":387,"x_min":127,"x_max":260,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 127 1174 q 146 1231 127 1213 q 193 1249 165 1249 q 240 1230 220 1249 q 260 1174 260 1212 q 240 1117 260 1136 q 193 1099 220 1099 q 146 1117 165 1099 q 127 1174 127 1136 z "},"Ĳ":{"ha":758,"x_min":136,"x_max":631,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 379 -261 q 279 -243 315 -261 l 279 -144 q 379 -158 327 -158 q 481 -117 446 -158 q 516 0 516 -77 l 516 991 l 631 991 l 631 9 q 566 -190 631 -119 q 379 -261 501 -261 z "},"Ί":{"ha":503,"x_min":-19,"x_max":367,"o":"m 252 0 l 252 991 l 367 991 l 367 0 l 252 0 m -19 790 q 17 916 -1 839 q 43 1048 35 993 l 168 1048 l 168 1033 q 119 902 156 983 q 49 770 82 822 l -19 770 l -19 790 z "},"Ι":{"ha":387,"x_min":136,"x_max":252,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 z "},"Ϊ":{"ha":387,"x_min":3,"x_max":385,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 3 1174 q 21 1225 3 1209 q 64 1240 39 1240 q 109 1225 90 1240 q 127 1174 127 1209 q 109 1123 127 1140 q 64 1107 90 1107 q 21 1123 39 1107 q 3 1174 3 1140 m 262 1174 q 280 1225 262 1209 q 323 1240 298 1240 q 367 1225 348 1240 q 385 1174 385 1209 q 367 1123 385 1140 q 323 1107 348 1107 q 280 1123 298 1107 q 262 1174 262 1140 z "},"І":{"ha":387,"x_min":136,"x_max":252,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 z "},"Ї":{"ha":387,"x_min":3,"x_max":385,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 3 1174 q 21 1225 3 1209 q 64 1240 39 1240 q 109 1225 90 1240 q 127 1174 127 1209 q 109 1123 127 1140 q 64 1107 90 1107 q 21 1123 39 1107 q 3 1174 3 1140 m 262 1174 q 280 1225 262 1209 q 323 1240 298 1240 q 367 1225 348 1240 q 385 1174 385 1209 q 367 1123 385 1140 q 323 1107 348 1107 q 280 1123 298 1107 q 262 1174 262 1140 z "},"Ӏ":{"ha":387,"x_min":136,"x_max":252,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 z "},"ӏ":{"ha":387,"x_min":136,"x_max":252,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 z "},"Ỉ":{"ha":387,"x_min":104,"x_max":350,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 350 1243 q 237 1125 350 1148 l 231 1048 l 159 1048 l 151 1168 q 236 1194 210 1177 q 262 1240 262 1211 q 240 1283 262 1270 q 168 1297 217 1297 q 104 1293 125 1297 l 104 1361 q 176 1368 130 1368 q 350 1243 350 1368 z "},"Ị":{"ha":387,"x_min":125,"x_max":260,"o":"m 136 0 l 136 991 l 252 991 l 252 0 l 136 0 m 125 -164 q 145 -107 125 -125 q 193 -89 165 -89 q 240 -107 220 -89 q 260 -164 260 -125 q 240 -220 260 -201 q 193 -239 220 -239 q 145 -220 165 -239 q 125 -164 125 -201 z "}},"familyName":"Open Sans","ascender":1485,"descender":-407,"underlinePosition":-104,"underlineThickness":69,"boundingBox":{"yMin":-376,"xMin":-764,"yMax":1455,"xMax":1672},"resolution":1000,"original_font_information":{"format":0,"copyright":"Digitized data copyright © 2010-2011, Google Corporation.","fontFamily":"Open Sans","fontSubfamily":"Regular","uniqueID":"1.10;1ASC;OpenSans-Regular","fullName":"Open Sans Regular","version":"Version 1.10","postScriptName":"OpenSans-Regular","trademark":"Open Sans is a trademark of Google and may be registered in certain jurisdictions.","manufacturer":"Ascender Corporation","manufacturerURL":"http://www.ascendercorp.com/","designerURL":"http://www.ascendercorp.com/typedesigners.html","licence":"Licensed under the Apache License, Version 2.0","licenceURL":"http://www.apache.org/licenses/LICENSE-2.0"},"cssFontWeight":"normal","cssFontStyle":"normal"}';
  class Fonts_FontsImpl extends Module_Module {
    constructor() {
      super(...arguments), this.defaultFont = new uh(JSON.parse(ld)), this._ttfLoader = new window.THREE.TTFLoader, this._fontLoader = new ph, this.fonts = {}, this.fontsMap = {};
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      np.window.events.on("windowLoaded", () => this.addFonts());
    }
    getFont(e = "") {
      return this.fonts[e] ? this.fonts[e] : this.defaultFont;
    }
    addFonts() {
      for (const e in this.fontsMap) this._ttfLoader.load(this.fontsMap[e], t => this.onLoadedFont(e, this._fontLoader.parse(t)), undefined, e => this.onErrorLoadFont(e));
    }
    onLoadedFont(e, t) {
      this.fonts[e] = t;
    }
    onErrorLoadFont(e) {
      console.error(`Can't load font from "${e.target.responseURL}"`);
    }
  }
  var cd, hd, ud, dd, pd, md, fd, gd, vd, yd, _d, xd, bd = n(0), wd = {retarget: (fd = new bd.Vector3, gd = new bd.Quaternion, vd = new bd.Vector3, yd = new bd.Matrix4, _d = new bd.Matrix4, xd = new bd.Matrix4, function (e, t, n) {
    (n = n || {}).preserveMatrix = undefined === n.preserveMatrix || n.preserveMatrix, n.preservePosition = undefined === n.preservePosition || n.preservePosition, n.preserveHipPosition = undefined !== n.preserveHipPosition && n.preserveHipPosition, n.useTargetMatrix = undefined !== n.useTargetMatrix && n.useTargetMatrix, n.hip = undefined !== n.hip ? n.hip : "hip", n.names = n.names || {};
    var i, r, o, s, a, l, c = t.isObject3D ? t.skeleton.bones : this.getBones(t), h = e.isObject3D ? e.skeleton.bones : this.getBones(e);
    if (e.isObject3D ? e.skeleton.pose() : (n.useTargetMatrix = true, n.preserveMatrix = false), n.preservePosition) for (a = [], l = 0; l < h.length; l++) a.push(h[l].position.clone());
    if (n.preserveMatrix) for (e.updateMatrixWorld(), e.matrixWorld.identity(), l = 0; l < e.children.length; ++l) e.children[l].updateMatrixWorld(true);
    if (n.offsets) for (i = [], l = 0; l < h.length; ++l) r = h[l], o = n.names[r.name] || r.name, n.offsets && n.offsets[o] && (r.matrix.multiply(n.offsets[o]), r.matrix.decompose(r.position, r.quaternion, r.scale), r.updateMatrixWorld()), i.push(r.matrixWorld.clone());
    for (l = 0; l < h.length; ++l) {
      if (r = h[l], o = n.names[r.name] || r.name, s = this.getBoneByName(o, c), xd.copy(r.matrixWorld), s) {
        if (s.updateMatrixWorld(), n.useTargetMatrix ? _d.copy(s.matrixWorld) : (_d.getInverse(e.matrixWorld), _d.multiply(s.matrixWorld)), vd.setFromMatrixScale(_d), _d.scale(vd.set(1 / vd.x, 1 / vd.y, 1 / vd.z)), xd.makeRotationFromQuaternion(gd.setFromRotationMatrix(_d)), e.isObject3D) {
          var u = h.indexOf(r), d = i ? i[u] : yd.getInverse(e.skeleton.boneInverses[u]);
          xd.multiply(d);
        }
        xd.copyPosition(_d);
      }
      r.parent && r.parent.isBone ? (r.matrix.getInverse(r.parent.matrixWorld), r.matrix.multiply(xd)) : r.matrix.copy(xd), n.preserveHipPosition && o === n.hip && r.matrix.setPosition(fd.set(0, r.position.y, 0)), r.matrix.decompose(r.position, r.quaternion, r.scale), r.updateMatrixWorld();
    }
    if (n.preservePosition) for (l = 0; l < h.length; ++l) r = h[l], (o = n.names[r.name] || r.name) !== n.hip && r.position.copy(a[l]);
    n.preserveMatrix && e.updateMatrixWorld(true);
  }), retargetClip: function (e, t, n, i) {
    (i = i || {}).useFirstFramePosition = undefined !== i.useFirstFramePosition && i.useFirstFramePosition, i.fps = undefined !== i.fps ? i.fps : 30, i.names = i.names || [], t.isObject3D || (t = this.getHelperFromSkeleton(t));
    var r, o, s, a, l, c, h = Math.round(n.duration * (i.fps / 1e3) * 1e3), u = 1 / i.fps, d = [], p = new bd.AnimationMixer(t), m = this.getBones(e.skeleton), f = [];
    for (p.clipAction(n).play(), p.update(0), t.updateMatrixWorld(), l = 0; l < h; ++l) {
      var g = l * u;
      for (this.retarget(e, t, i), c = 0; c < m.length; ++c) a = i.names[m[c].name] || m[c].name, this.getBoneByName(a, t.skeleton) && (o = m[c], s = f[c] = f[c] || {bone: o}, i.hip === a && (s.pos || (s.pos = {times: new Float32Array(h), values: new Float32Array(3 * h)}), i.useFirstFramePosition && (0 === l && (r = o.position.clone()), o.position.sub(r)), s.pos.times[l] = g, o.position.toArray(s.pos.values, 3 * l)), s.quat || (s.quat = {times: new Float32Array(h), values: new Float32Array(4 * h)}), s.quat.times[l] = g, o.quaternion.toArray(s.quat.values, 4 * l));
      p.update(u), t.updateMatrixWorld();
    }
    for (l = 0; l < f.length; ++l) (s = f[l]) && (s.pos && d.push(new bd.VectorKeyframeTrack(".bones[" + s.bone.name + "].position", s.pos.times, s.pos.values)), d.push(new bd.QuaternionKeyframeTrack(".bones[" + s.bone.name + "].quaternion", s.quat.times, s.quat.values)));
    return p.uncacheAction(n), new bd.AnimationClip(n.name, -1, d);
  }, getHelperFromSkeleton: function (e) {
    var t = new bd.SkeletonHelper(e.bones[0]);
    return t.skeleton = e, t;
  }, getSkeletonOffsets: (cd = new bd.Vector3, hd = new bd.Vector3, ud = new bd.Vector3, dd = new bd.Vector3, pd = new bd.Vector2, md = new bd.Vector2, function (e, t, n) {
    (n = n || {}).hip = undefined !== n.hip ? n.hip : "hip", n.names = n.names || {}, t.isObject3D || (t = this.getHelperFromSkeleton(t));
    var i, r, o, s, a = Object.keys(n.names), l = Object.values(n.names), c = t.isObject3D ? t.skeleton.bones : this.getBones(t), h = e.isObject3D ? e.skeleton.bones : this.getBones(e), u = [];
    for (e.skeleton.pose(), s = 0; s < h.length; ++s) if (i = h[s], o = n.names[i.name] || i.name, (r = this.getBoneByName(o, c)) && o !== n.hip) {
      var d = this.getNearestBone(i.parent, a), p = this.getNearestBone(r.parent, l);
      d.updateMatrixWorld(), p.updateMatrixWorld(), cd.setFromMatrixPosition(d.matrixWorld), hd.setFromMatrixPosition(i.matrixWorld), ud.setFromMatrixPosition(p.matrixWorld), dd.setFromMatrixPosition(r.matrixWorld), pd.subVectors(new bd.Vector2(hd.x, hd.y), new bd.Vector2(cd.x, cd.y)).normalize(), md.subVectors(new bd.Vector2(dd.x, dd.y), new bd.Vector2(ud.x, ud.y)).normalize();
      var m = pd.angle() - md.angle(), f = (new bd.Matrix4).makeRotationFromEuler(new bd.Euler(0, 0, m));
      i.matrix.multiply(f), i.matrix.decompose(i.position, i.quaternion, i.scale), i.updateMatrixWorld(), u[o] = f;
    }
    return u;
  }), renameBones: function (e, t) {
    for (var n = this.getBones(e), i = 0; i < n.length; ++i) {
      var r = n[i];
      t[r.name] && (r.name = t[r.name]);
    }
    return this;
  }, getBones: function (e) {
    return Array.isArray(e) ? e : e.bones;
  }, getBoneByName: function (e, t) {
    for (var n = 0, i = this.getBones(t); n < i.length; n++) if (e === i[n].name) return i[n];
  }, getNearestBone: function (e, t) {
    for (; e.isBone;) {
      if (-1 !== t.indexOf(e.name)) return e;
      e = e.parent;
    }
  }, findBoneTrackData: function (e, t) {
    for (var n = /\[(.*)\]\.(.*)/, i = {name: e}, r = 0; r < t.length; ++r) {
      var o = n.exec(t[r].name);
      o && e === o[1] && (i[o[2]] = r);
    }
    return i;
  }, getEqualsBonesNames: function (e, t) {
    var n = this.getBones(e), i = this.getBones(t), r = [];
    e: for (var o = 0; o < n.length; o++) for (var s = n[o].name, a = 0; a < i.length; a++) if (s === i[a].name) {
      r.push(s);
      continue e;
    }
    return r;
  }, clone: function (e) {
    var t = new Map, n = new Map, i = e.clone();
    return function e(t, n, i) {
      i(t, n);
      for (var r = 0; r < t.children.length; r++) e(t.children[r], n.children[r], i);
    }(e, i, function (e, i) {
      t.set(i, e), n.set(e, i);
    }), i.traverse(function (e) {
      if (e.isSkinnedMesh) {
        var i = e, r = t.get(e), o = r.skeleton.bones;
        i.skeleton = r.skeleton.clone(), i.bindMatrix.copy(r.bindMatrix), i.skeleton.bones = o.map(function (e) {
          return n.get(e);
        }), i.bind(i.skeleton, i.bindMatrix);
      }
    }), i;
  }};
  class FbxObject_FbxObject {
    constructor(e) {
      this._group = e, this.mixer = new Wh(this._group);
    }
    clone() {
      const e = wd.clone(this._group), t = new FbxObject_FbxObject(e);
      t.animations = this.animations;
      for (let e = 0; e < t.getGroup().children.length; e++) {
        const n = t.getGroup().children[e];
        n.isSkinnedMesh && (t.getGroup().children[e].material = n.material.clone());
      }
      return t;
    }
    getGroup() {
      return this._group;
    }
    set animations (e) {
      this._group.animations = e;
    }
    get animations() {
      return this._group.animations;
    }
  }
  class FbxLoader_FbxLoader extends Module_Module {
    constructor() {
      super(...arguments), this.loader = new window.THREE.FBXLoader, this.preLoadModels = [], this.models = {}, this.promises = {}, this.defaultDirectory = `${np.modules.mod.gameDirectory}/models`, this.directory = this.defaultDirectory, this._cachedUrls = {}, this._cachedExistsUrls = {};
    }
    initialize() {
      super.initialize(), np.window.events.on("windowLoaded", () => this.onWindowLoaded());
    }
    onWindowLoaded() {
      this.loadPreLoadModels();
    }
    isExistsModel(e = "") {
      return this.hasModel(this.getModelUrl(e));
    }
    getLoadedModel(e = "") {
      const t = this.getModelUrl(e);
      if (this.hasModel(t)) return this.models[t];
    }
    getModel(e = "") {
      const t = this.getModelUrl(e);
      return this.promises.hasOwnProperty(t) ? this.promises[t] : (this.promises[t] = new Promise((n, i) => {
        t ? this.hasModel(t) ? (n(this.models[t]), delete this.promises[t]) : this.tryLoadModel(e, n, i) : i(`empty model name ${t}`);
      }), this.promises[t]);
    }
    tryLoadModel(e, t, n) {
      const i = this.getModelUrl(e);
      this.loadModel(i).then(e => {
        t && t(e), delete this.promises[i];
      }).catch(r => {
        this.directory !== this.defaultDirectory ? this.tryLoadModelFromDefaultDirectory(e, t, n) : delete this.promises[i];
      });
    }
    tryLoadModelFromDefaultDirectory(e, t, n) {
      const i = this.getModelUrl(e, this.defaultDirectory);
      this.loadModel(i).then(e => {
        t && t(e), delete this.promises[i];
      }).catch(e => {
        n && n(e), delete this.promises[i];
      });
    }
    loadModel(e) {
      return this.hasModel(e) ? new Promise((t, n) => t(this.models[e])) : new Promise((t, n) => this.loader.load(e, i => this.onLoadedModel(e, i, t, n), undefined, e => {
        n(e);
      }));
    }
    hasModel(e = "") {
      return this.models.hasOwnProperty(e);
    }
    onLoadedModel(e, t, n, i) {
      const r = new FbxObject_FbxObject(t);
      this.models[e] = r, n(r);
    }
    loadPreLoadModels() {
      for (let e = 0; e < this.preLoadModels.length; e++) setTimeout(() => this.getModel(this.preLoadModels[e]), 1);
    }
    getModelUrl(e, t = this.directory) {
      e || console.error("empty url");
      const n = `${e}_${t}`;
      return false === this._cachedUrls.hasOwnProperty(n) && (this._cachedUrls[n] = UrlUtils_UrlUtils.getResourceUrl(e, t, "fbx", np.modules.mod.resourceHost)), this._cachedUrls[n];
    }
  }
  class Sound_Sound {
    constructor(e) {
      this.object3d = new yn, this.soundBuffer = e, this.audio = this.createAudio(), this.audio.setBuffer(this.soundBuffer.buffer), this.audio.userData.soundResource = this.soundBuffer.soundResource, this.object3d.add(this.audio);
    }
    createAudio() {
      return new Mh(np.sounds.audioListener);
    }
  }
  class PositionalSound_PositionalSound extends Sound_Sound {
    createAudio() {
      return new Ph(np.sounds.audioListener);
    }
  }
  class SoundBuffer {
    constructor(e, t) {
      this.buffer = e, this.soundResource = t;
    }
  }
  class SoundsPlayerPlayOptions {
    constructor() {
      this.minRadius = 100, this.radius = 500, this.length = 0, this.offset = 0, this.pitch = 1, this.volume = 1, this.loop = false;
    }
  }
  class SoundsPlayer_SoundsPlayer {
    constructor() {
      this.sounds = {}, this._needPlay = new LinkedList_LinkedList, this._playingSounds = {}, this._maxPlayingSoundsCount = 8, this._playingSoundsCount = 0, this._canInsertSound = true, this.setListeners();
    }
    setListeners() {
      np.window.events.on("blur", () => this.onBlur()), np.window.events.on("focus", () => this.onFocus()), np.canvas.events.on("canvasDrawEnd", () => this.onCanvasDrawEnd());
    }
    onBlur() {
      this._canInsertSound = false, this._needPlay.clear();
    }
    onFocus() {
      this._canInsertSound = true, this._needPlay.clear();
    }
    onCanvasDrawEnd() {
      for (; this._needPlay.getSize() > 0;) {
        const e = this._needPlay.removeFirst();
        if (e) {
          const t = e.getData();
          if (t) {
            if (this._playingSoundsCount >= this._maxPlayingSoundsCount) for (let e = 0; e <= t.soundBuffer.soundResource.priority; e++) if (this._playingSounds.hasOwnProperty(e) && this._playingSounds[e].getSize() > 0) {
              const t = this._playingSounds[e].removeFirst();
              if (t) {
                const e = t.getData();
                e && this.stop(e.audio.userData.uuid);
              }
            }
            t.audio.play(), false === this._playingSounds.hasOwnProperty(t.soundBuffer.soundResource.priority) && (this._playingSounds[t.soundBuffer.soundResource.priority] = new LinkedList_LinkedList), this._playingSounds[t.soundBuffer.soundResource.priority].insert(t), this._playingSoundsCount++;
          }
        }
      }
    }
    play(e) {
      if (false === this._canInsertSound || e.soundName) return;
      const t = this.getSound(e);
      let n = "";
      return t.ifPresent(t => {
        this.initSound(t, e, this.isPositionalAudio(e) ? "positional" : "ambient"), this._needPlay.insert(t), n = t.audio.userData.uuid;
      }), n;
    }
    stop(e) {
      this.sounds.hasOwnProperty(e) && (this.sounds[e].audio.stop(), this.removeSound(e));
    }
    setVolume(e, t) {
      if (this.sounds.hasOwnProperty(e)) {
        const n = this.sounds[e].audio.userData.options;
        n.volume = t, this.sounds[e].audio.setVolume(this.getOptimizedVolumeForSet(n.volume, this.sounds[e]));
      }
    }
    getSound(e) {
      return this.isPositionalAudio(e) ? this.getPositionalSound(e.soundName) : this.getAudio(e.soundName);
    }
    isPositionalAudio(e) {
      return e.parent || e.position;
    }
    getPositionalSound(e) {
      return np.sounds.getPositionalSound(e);
    }
    getAudio(e) {
      return np.sounds.createAudio(e);
    }
    initSound(e, t, n) {
      const i = new SoundsPlayerPlayOptions;
      Object.assign(i, t), e.audio.userData.options = i, e.audio.userData.uuid = Randomize_Randomize.getUuid(), this.setSoundListeners(e), "positional" === n ? this.setUpPositionalSound(e) : this.setUpAudio(e), this.sounds[e.audio.userData.uuid] = e;
    }
    setSoundListeners(e) {
      e.audio.userData.options.length && setTimeout(() => this.stop(e.audio.userData.uuid), e.audio.userData.options.length), e.audio.onEnded = () => this.onEnded(e.audio.userData.uuid);
    }
    setUpPositionalSound(e) {
      const t = e.audio.userData.options;
      e.audio.offset = t.offset, e.audio.setDistanceModel("linear"), e.audio.setMaxDistance(t.radius), e.audio.setRefDistance(t.minRadius), e.audio.setPlaybackRate(t.pitch), e.audio.setLoop(t.loop), e.audio.setVolume(this.getOptimizedVolumeForSet(t.volume, e)), this.putInContainer(e);
    }
    setUpAudio(e) {
      const t = e.audio.userData.options;
      e.audio.offset = t.offset, e.audio.setPlaybackRate(t.pitch), e.audio.setLoop(t.loop), e.audio.setVolume(this.getOptimizedVolumeForSet(t.volume, e)), np.canvas.addToWorldObject(e.object3d);
    }
    getOptimizedVolumeForSet(e, t) {
      const n = Math.min(e * t.audio.userData.soundResource.volume, 1);
      return Math.max(n, 0);
    }
    putInContainer(e) {
      const t = e.audio.userData.options;
      t.position ? this.setSoundPosition(e) : t.parent && t.parent.add(e.object3d);
    }
    setSoundPosition(e) {
      const t = e.audio.userData.options;
      e.object3d.position.copy(t.position.toThreeVector3()), np.canvas.addToWorldObject(e.object3d);
    }
    onEnded(e) {
      this.sounds[e] && this.sounds[e] && (this.sounds[e].audio.isPlaying = false, this.removeSound(e));
    }
    removeSound(e) {
      this.sounds.hasOwnProperty(e) && (this._playingSounds[this.sounds[e].soundBuffer.soundResource.priority].removeNode(this.sounds[e]), this.removeSoundFromContainer(e), this.addSoundToCache(this.sounds[e]), delete this.sounds[e], this._playingSoundsCount--);
    }
    removeSoundFromContainer(e) {
      if (this.sounds.hasOwnProperty(e)) {
        const t = this.sounds[e].audio.userData.options;
        this.isPositionalAudio(t) ? t.parent ? t.parent.remove(this.sounds[e].object3d) : t.position && np.canvas.removeFromWorldObject(this.sounds[e].object3d) : np.canvas.removeFromWorldObject(this.sounds[e].object3d);
      }
    }
    addSoundToCache(e) {
      this.isPositionalAudio(e.audio.userData.options) && np.sounds.addPositionalSoundToCache(e.audio.userData.options.soundName, e);
    }
  }
  class Sounds_SoundsImpl extends Module_Module {
    constructor() {
      super(...arguments), this._loader = new fh, this.audioListener = new Ah, this.buffers = {}, this.soundsMap = {}, this._initialized = false, this.defaultDirectory = `${np.modules.mod.gameDirectory}/sounds`, this.directory = this.defaultDirectory, this._cachedPositionalSounds = {}, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), this.player = new SoundsPlayer_SoundsPlayer, this.setListeners();
    }
    static canGetAudioContextNow() {
      try {
        return "running" === (new (window.AudioContext || window.webkitAudioContext)).state;
      } catch (e) {}
      return false;
    }
    createAudio(e) {
      return this.getSoundBuffer(e).map(e => new Sound_Sound(e));
    }
    addPositionalSoundToCache(e, t) {
      false === this._cachedPositionalSounds.hasOwnProperty(e) && (this._cachedPositionalSounds[e] = []), this._cachedPositionalSounds[e].push(t);
    }
    getPositionalSound(e) {
      return e ? this.hasCachedPositionalAudio(e) ? Optional.ofNullable(this._cachedPositionalSounds[e].pop()) : this.createPositionalAudio(e) : Optional.empty();
    }
    hasCachedPositionalAudio(e) {
      return !(!this._cachedPositionalSounds.hasOwnProperty(e) || !this._cachedPositionalSounds[e].length);
    }
    createPositionalAudio(e) {
      return this.getSoundBuffer(e).map(e => new PositionalSound_PositionalSound(e));
    }
    setListeners() {
      np.window.events.on("windowLoaded", () => this.initializeSounds()), np.events.on("gameStart", () => this.onGameStart());
    }
    onGameStart() {
      this._initialized || this.initializeSounds();
    }
    initializeSounds() {
      this._initialized = true, this.loadSounds();
    }
    loadSounds() {
      if (Object.keys(this.soundsMap).length) {
        for (const e in this.soundsMap) if (this.soundsMap[e].soundName) {
          const t = UrlUtils_UrlUtils.getResourceUrl(this.soundsMap[e].soundName, this.directory, "mp3");
          this._loader.load(t, n => this.onLoadedSound(t, n, this.soundsMap[e]), undefined, e => console.error(`Error on loading sound ${t}`, e));
        }
      } else this.soundLoaded();
    }
    onLoadedSound(e, t, n) {
      this.buffers[e] = new SoundBuffer(t, n), this.soundLoaded();
    }
    soundLoaded() {
      Object.keys(this.buffers).length === Object.keys(this.soundsMap).length && this.events.emit("gameSoundsLoaded");
    }
    getSoundBuffer(e) {
      if (!e) return Optional.empty();
      const t = UrlUtils_UrlUtils.getResourceUrl(e, this.directory, "mp3");
      return undefined === this.buffers[t] && console.log(`Sound "${t}" not found`), Optional.ofNullable(this.buffers[t]);
    }
    getCachedCount() {
      let e = 0;
      for (const t in this._cachedPositionalSounds) this._cachedPositionalSounds.hasOwnProperty(t) && (e += this._cachedPositionalSounds[t].length);
      return e;
    }
  }
  class SvgObject_SvgObject {
    constructor(e, t) {
      this.size = vector_Vector2_Vector2.IDENTITY.clone(), this.svgObject = e, this.size = t;
    }
    getSize() {
      return this.size.clone();
    }
    getObject() {
      return this.svgObject;
    }
  }
  class SvgObjectsImpl_SvgObjectsImpl extends Module_Module {
    constructor() {
      super(...arguments), this.loader = new window.THREE.SVGLoader, this.objects = {}, this.physicsPaths = {}, this.svgsMap = {}, this.dynamicallyObjectsPromises = {}, this.dynamicallyPhysicsObjectsPathsPromises = {}, this.dirLocalSvg = "/dist/" + np.modules.mod.apiHost + "/svg/";
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    getLocalObject(e = "") {
      return this.dynamicallyObjectsPromises.hasOwnProperty(e) ? this.dynamicallyObjectsPromises[e] : (this.dynamicallyObjectsPromises[e] = new Promise((t, n) => {
        this.hasObject(e) ? (t(this.objects[e]), delete this.dynamicallyObjectsPromises[e]) : n(new yn);
      }), this.dynamicallyObjectsPromises[e]);
    }
    getObject(e = "", t = false) {
      return this.dynamicallyObjectsPromises.hasOwnProperty(e) ? this.dynamicallyObjectsPromises[e] : (this.dynamicallyObjectsPromises[e] = new Promise((n, i) => {
        if (this.hasObject(e) && false === t) n(this.objects[e]), delete this.dynamicallyObjectsPromises[e]; else {
          let t = this.svgsMap.hasOwnProperty(e) ? this.svgsMap[e] : e;
          UrlUtils_UrlUtils.isExistsProtocol(t) || (t = this.dirLocalSvg + t, StringUtils_StringUtils.isExistsExtension(t, "svg") || (t += ".svg")), this.loadObject(e, t).then(t => {
            n(t), delete this.dynamicallyObjectsPromises[e];
          }, () => {
            i(new yn), delete this.dynamicallyObjectsPromises[e];
          });
        }
      }), this.dynamicallyObjectsPromises[e]);
    }
    getPhysicsObjectPaths(e = "", t = false) {
      return this.dynamicallyPhysicsObjectsPathsPromises.hasOwnProperty(e) ? this.dynamicallyPhysicsObjectsPathsPromises[e] : (this.dynamicallyPhysicsObjectsPathsPromises[e] = new Promise((n, i) => {
        if (this.hasObject(e) && false === t) n(this.physicsPaths[e]), delete this.dynamicallyPhysicsObjectsPathsPromises[e]; else {
          const t = this.svgsMap.hasOwnProperty(e) ? this.svgsMap[e] : e;
          this.loadObject(e, t).then(t => {
            this.physicsPaths.hasOwnProperty(e) ? n(this.physicsPaths[e]) : i(new hh), delete this.dynamicallyPhysicsObjectsPathsPromises[e];
          }, () => {
            i(new hh), delete this.dynamicallyPhysicsObjectsPathsPromises[e];
          });
        }
      }), this.dynamicallyPhysicsObjectsPathsPromises[e]);
    }
    setListeners() {
      np.window.events.on("windowLoaded", () => this.onWindowLoaded());
    }
    onWindowLoaded() {}
    loadObjects() {
      for (const e in this.svgsMap) this.loadObject(e, this.svgsMap[e]);
    }
    loadObject(e, t) {
      return 0 === e.length ? (console.log("empty svg name"), new Promise((e, t) => t(new yn))) : this.hasObject(e) ? new Promise((t, n) => t(this.objects[e])) : new Promise((n, i) => this.loader.load(t, t => {
        this.onLoadedObject(e, t), n(this.objects[e]);
      }, undefined, e => {
        this.onErrorLoadObject(e), i(new yn);
      }));
    }
    hasObject(e = "") {
      return this.objects.hasOwnProperty(e);
    }
    removeSvg(e) {
      delete this.objects[e], delete this.physicsPaths[e];
    }
    onLoadedObject(e, t) {
      const n = new ys;
      n.userData.childrenPaths = {};
      for (let i = 0; i < t.paths.length; i++) {
        const r = t.paths[i];
        if (r.pathId && r.physics) {
          this.physicsPaths.hasOwnProperty(e) || (this.physicsPaths[e] = {}), r.subPaths[0].curves.reverse(), this.physicsPaths[e][r.pathId] = r;
          continue;
        }
        const o = new ui({color: r.color}), s = r.toShapes(true);
        for (let e = 0; e < s.length; e++) {
          const i = s[e];
          for (const e in i.curves) i.curves[e].aX && (i.curves[e].aX -= t.viewBox.x + t.viewBox.width / 2, i.curves[e].aX /= t.viewBox.width), i.curves[e].aY && (i.curves[e].aY -= t.viewBox.y + t.viewBox.height / 2, i.curves[e].aY /= t.viewBox.height, i.curves[e].aY *= -1), i.curves[e].v0 && (i.curves[e].v0.x -= t.viewBox.x + t.viewBox.width / 2, i.curves[e].v0.y -= t.viewBox.y + t.viewBox.height / 2, i.curves[e].v0.x /= t.viewBox.width, i.curves[e].v0.y /= t.viewBox.height, i.curves[e].v0.y *= -1), i.curves[e].v1 && (i.curves[e].v1.x -= t.viewBox.x + t.viewBox.width / 2, i.curves[e].v1.y -= t.viewBox.y + t.viewBox.height / 2, i.curves[e].v1.x /= t.viewBox.width, i.curves[e].v1.y /= t.viewBox.height, i.curves[e].v1.y *= -1), i.curves[e].v2 && (i.curves[e].v2.x -= t.viewBox.x + t.viewBox.width / 2, i.curves[e].v2.y -= t.viewBox.y + t.viewBox.height / 2, i.curves[e].v2.x /= t.viewBox.width, i.curves[e].v2.y /= t.viewBox.height, i.curves[e].v2.y *= -1), i.curves[e].v3 && (i.curves[e].v3.x -= t.viewBox.x + t.viewBox.width / 2, i.curves[e].v3.y -= t.viewBox.y + t.viewBox.height / 2, i.curves[e].v3.x /= t.viewBox.width, i.curves[e].v3.y /= t.viewBox.height, i.curves[e].v3.y *= -1);
          const a = new Yi(new Tl(i), o);
          a.userData.pathId = r.pathId, a.userData.pathDataset = r.pathDataset, n.add(a), r.pathId.length && (n.userData.childrenPaths[a.userData.pathId] = n.children.length - 1);
        }
      }
      this.objects[e] = new SvgObject_SvgObject(n, new vector_Vector2_Vector2(t.viewBox.width, t.viewBox.height));
    }
    onErrorLoadObject(e) {
      console.error(`Can't load svg from "${e.target.responseURL}"`);
    }
  }
  class Textures_Textures extends Module_Module {
    constructor() {
      super(...arguments), this.defaultTexture = Textures_Textures.createDefaultTexture(), this.preLoadTextures = [], this.loader = new vc, this.textures = {}, this.texturesFilter = ye, this.promises = {}, this.defaultTexturesDirectory = `${np.modules.mod.gameDirectory}/images/textures`, this.texturesDirectory = this.defaultTexturesDirectory, this._cachedTextureUrls = {}, this._cachedExistsTextureUrls = {};
    }
    initialize() {
      super.initialize(), np.window.events.on("windowLoaded", () => this.onWindowLoaded());
    }
    onWindowLoaded() {
      this.loadPreLoadTextures();
    }
    isExistsTexture(e = "") {
      return this.hasTexture(this.getTextureUrl(e));
    }
    getLoadedTexture(e = "") {
      const t = this.getTextureUrl(e);
      if (this.hasTexture(t)) return this.textures[t];
    }
    getTexture(e = "") {
      const t = this.getTextureUrl(e);
      return this.promises.hasOwnProperty(t) ? this.promises[t] : (this.promises[t] = new Promise((n, i) => {
        t ? this.hasTexture(t) ? (n(this.textures[t]), delete this.promises[t]) : this.tryLoadTexture(e, n, i) : i(`empty texture name ${t}`);
      }), this.promises[t]);
    }
    tryLoadTexture(e, t, n) {
      const i = this.getTextureUrl(e);
      this.loadTexture(i).then(e => {
        t && t(e), delete this.promises[i];
      }).catch(r => {
        this.texturesDirectory !== this.defaultTexturesDirectory ? this.tryLoadTextureFromDefaultDirectory(e, t, n) : delete this.promises[i];
      });
    }
    tryLoadTextureFromDefaultDirectory(e, t, n) {
      const i = this.getTextureUrl(e, this.defaultTexturesDirectory);
      this.loadTexture(i).then(e => {
        t && t(e), delete this.promises[i];
      }).catch(e => {
        n && n(e), delete this.promises[i];
      });
    }
    loadTexture(e) {
      return this.hasTexture(e) ? new Promise((t, n) => t(this.textures[e])) : new Promise((t, n) => this.loader.load(e, i => this.onLoadedTexture(e, i, t, n), undefined, e => {
        n(e);
      }));
    }
    hasTexture(e = "") {
      return this.textures.hasOwnProperty(e);
    }
    onLoadedTexture(e, t, n, i) {
      t.magFilter = this.texturesFilter, this.textures[e] = t, n(t);
    }
    static createDefaultTexture() {
      const e = new Uint8Array(27);
      for (let t = 0; t < 9; t++) e[3 * t] = 255, e[3 * t + 1] = 255, e[3 * t + 2] = 255;
      const t = new gr(e, 3, 3, De);
      return t.needsUpdate = true, t;
    }
    static createTransparentTexture() {
      const e = new Uint8Array(64);
      for (let t = 0; t < 16; t++) e[4 * t] = 255, e[4 * t + 1] = 255, e[4 * t + 2] = 255, e[4 * t + 3] = 0;
      const t = new gr(e, 4, 4, Oe);
      return t.needsUpdate = true, t;
    }
    loadPreLoadTextures() {
      for (let e = 0; e < this.preLoadTextures.length; e++) setTimeout(() => this.tryLoadTexture(this.preLoadTextures[e]), 1);
    }
    getTextureUrl(e, t = this.texturesDirectory) {
      e || console.error("empty url");
      const n = `${e}_${t}`;
      return false === this._cachedTextureUrls.hasOwnProperty(n) && (this._cachedTextureUrls[n] = UrlUtils_UrlUtils.getResourceUrl(e, t, "png", np.modules.mod.resourceHost)), this._cachedTextureUrls[n];
    }
    getExistsTextureUrl(e, t = this.texturesDirectory) {
      return new Promise((n, i) => {
        const r = `${e}_${t}`;
        this._cachedExistsTextureUrls.hasOwnProperty(r) && n(this._cachedExistsTextureUrls[r]);
        const o = document.createElement("img"), s = this.getTextureUrl(e, t);
        o.addEventListener("load", () => {
          o.remove(), this._cachedExistsTextureUrls[r] = s, n(s);
        }), o.addEventListener("error", () => {
          o.remove();
          const t = this.getTextureUrl(e, this.defaultTexturesDirectory);
          this._cachedExistsTextureUrls[r] = t, n(t);
        }), o.src = s;
      });
    }
  }
  class DomUtils_DomUtils {
    constructor() {
      this._events = {}, DomUtils_DomUtils.setListeners();
    }
    static setListeners() {
      document.body.addEventListener("change", DomUtils_DomUtils.inputFileChanged);
    }
    addPointerUp(e, t) {
      return this.addEvent(e, DomUtils_DomUtils.getPointerUpType(), t);
    }
    addPointerDown(e, t) {
      return this.addEvent(e, DomUtils_DomUtils.getPointerDownType(), t);
    }
    addPointerMove(e, t) {
      return this.addEvent(e, DomUtils_DomUtils.getPointerMoveType(), t);
    }
    addGlobalPointerDown(e) {
      return this.addEvent(document.body, DomUtils_DomUtils.getPointerDownType(), e);
    }
    addGlobalPointerUp(e) {
      return this.addEvent(document.body, DomUtils_DomUtils.getPointerDownType(), e);
    }
    removePointerUp(e, t) {
      return this.removeEvent(e, DomUtils_DomUtils.getPointerUpType(), t);
    }
    removePointerDown(e, t) {
      return this.removeEvent(e, DomUtils_DomUtils.getPointerDownType(), t);
    }
    removePointerMove(e, t) {
      return this.removeEvent(e, DomUtils_DomUtils.getPointerMoveType(), t);
    }
    removeGlobalPointerDown(e) {
      return this.removeEvent(document.body, DomUtils_DomUtils.getPointerDownType(), e);
    }
    removeGlobalPointerUp(e) {
      return this.removeEvent(document.body, DomUtils_DomUtils.getPointerDownType(), e);
    }
    static getPointerUpType() {
      let e = "mouseup";
      return np.device.isMobile() && (e = "touchend"), e;
    }
    static getPointerDownType() {
      let e = "mousedown";
      return np.device.isMobile() && (e = "touchstart"), e;
    }
    static getPointerMoveType() {
      let e = "mousemove";
      return np.device.isMobile() && (e = "touchmove"), e;
    }
    addEvent(e, t, n) {
      let i = e => {
        n(e);
      }, r = Randomize_Randomize.getUuid();
      return this._events[r] = i, e.addEventListener(t, i), r;
    }
    removeEvent(e, t, n) {
      return !!this._events.hasOwnProperty(n) && (e.removeEventListener(t, this._events[n]), delete this._events[n], true);
    }
    static inputFileChanged(e) {
      let t = e.target;
      if ("INPUT" === t.tagName && t.classList.contains("file")) {
        let n = "";
        n = t.files && t.files.length > 1 ? (t.getAttribute("data-multiple-caption") || "").replace("{count}", t.files.length.toString()) : e.target.value.split("\\").pop();
        let i = t.nextElementSibling;
        if (n) {
          let e = i.querySelector("span");
          e && (e.innerHTML = n);
        } else i.innerHTML = i.dataset.ifEmpty || "Choose file";
      }
    }
    static getCaretPosition(e) {
      let t = 0;
      if (document.selection) {
        e.focus();
        let n = document.selection.createRange();
        n.moveStart("character", -e.value.length), t = n.text.length;
      } else (e.selectionStart || 0 == e.selectionStart) && (t = e.selectionStart);
      return t;
    }
    static setCaretPosition(e, t) {
      if (e.createTextRange) {
        let n = e.createTextRange();
        n.move("character", t), n.select();
      } else e.selectionStart ? (e.focus(), e.setSelectionRange(t, t)) : e.focus();
    }
    static insertCss(...e) {
      for (let t in e) {
        let n = document.head || document.getElementsByTagName("head")[0], i = document.createElement("style");
        i.type = "text/css", i.appendChild(document.createTextNode(e[t])), n.appendChild(i);
      }
    }
    static insertScript(e) {
      const t = document.createElement("script");
      if (t.src = e.src, t.async = !!ValueUtils.isUndefinedOrNull(e.async) || e.async, e.attributes) for (const n in e.attributes) t.setAttribute(n, e.attributes[n]);
      return document.body.appendChild(t), e.callback && setTimeout(() => {
        t.addEventListener("load", () => e.callback()), t.addEventListener("error", () => e.callback());
      }, 1), t;
    }
    static insertScriptHtml(e) {
      const t = document.createElement("script");
      t.innerHTML = e, document.body.appendChild(t);
    }
    static cleanElement(e) {
      for (; e.firstChild;) e.removeChild(e.firstChild);
    }
    static showChildren(e) {
      Array.from(e.childNodes).forEach(e => {
        1 === e.nodeType && e.removeAttribute("style");
      });
    }
    static hideChildren(e) {
      Array.from(e.childNodes).forEach(e => {
        1 === e.nodeType && (e.style.display = "none");
      });
    }
    static getSvgToBase64(e) {
      return `url("data:image/svg+xml;base64,${btoa(e)}")`;
    }
    static insertAtCursor(e, t) {
      if (document.selection) {
        e.focus(), document.selection.createRange().text = t;
      } else if (e.selectionStart || 0 == e.selectionStart) {
        let n = e.selectionStart, i = e.selectionEnd;
        e.value = e.value.substring(0, n) + t + e.value.substring(i, e.value.length), DomUtils_DomUtils.setCaretPosition(e, n + t.length);
      } else e.value += t;
    }
    static openLink(e, t = "_blank") {
      try {
        const n = window.open(e, t);
        n ? n.focus() : location.href = e;
      } catch (t) {
        location.href = e;
      }
    }
    static vwToPx(e) {
      return e * Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 100;
    }
    static vhToPx(e) {
      return e * Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 100;
    }
    static pxToVw(e) {
      return 100 * e / Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    static pxToVh(e) {
      return 100 * e / Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    }
    static scrollToBottom(e) {
      e.scrollTop = e.scrollHeight;
    }
  }
  class ScreensModule_ScreensModule extends Module_Module {
    constructor() {
      super(...arguments), this._screens = {}, this._$screens = document.createElement("div"), this._$screensContainer = document.createElement("div"), this._history = new LinkedList_LinkedList, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      DomUtils_DomUtils.insertCss(n(55).toString(), n(56).toString()), this._$screens.classList.add("screens"), this._$screensContainer.classList.add("screens-container"), this._$screens.appendChild(this._$screensContainer);
    }
    setListeners() {
      np.window.events.on("resize", () => this.onResize());
    }
    onResize() {}
    add(e) {
      this.has(e.name) ? console.error(`Screen with name "${e.name}" already exists`) : this._screens[e.name] = e;
    }
    has(e) {
      return this._screens.hasOwnProperty(e);
    }
    show(e, t = true) {
      false !== this.has(e) ? (false === this.isDisplaying() && np.get$Container().appendChild(this._$screens), this.setActiveScreen(e, t), this.showActiveScreen(), this.events.emit("screenShow", {name: this._activeScreen ? this._activeScreen.name : ""})) : console.error(`Screen with name "${e}" does't exists`);
    }
    hide() {
      false !== this.isDisplaying() && (np.get$Container().removeChild(this._$screens), this._activeScreen && this._activeScreen.onHide(), this.events.emit("screenHide", {name: this._activeScreen ? this._activeScreen.name : ""}));
    }
    get(e, t) {
      return this._screens[e];
    }
    isDisplaying() {
      return np.get$Container().contains(this._$screens);
    }
    back() {
      if (this._history.getSize()) {
        const e = this._history.remove().getData();
        this.show(e, false);
      }
    }
    setActiveScreen(e, t = true) {
      const n = this._screens[e];
      this._activeScreen !== n && (this._activeScreen && t && this._history.insert(this._activeScreen.name), this.hideActiveScreen(), this._activeScreen = n);
    }
    showActiveScreen() {
      this.appendActiveScreen(), this.isDisplaying() && this._activeScreen.onShow();
    }
    hideActiveScreen() {
      this._activeScreen && this.isDisplayingActiveScreen() && (this._$screensContainer.removeChild(this._activeScreen.get$Screen()), this._activeScreen.onHide(), this._activeScreen.onUnActive());
    }
    isActiveScreen(e) {
      return this._activeScreen && this._activeScreen.name === e;
    }
    appendActiveScreen() {
      this._activeScreen && false === this.isDisplayingActiveScreen() && (this._$screensContainer.appendChild(this._activeScreen.get$Screen()), this._activeScreen.onActive());
    }
    isDisplayingActiveScreen() {
      return !!this._activeScreen && this._$screensContainer.contains(this._activeScreen.get$Screen());
    }
    getActiveScreenName() {
      return this._activeScreen.name ? this._activeScreen.name : "";
    }
    getActiveScreen() {
      return this._activeScreen;
    }
    get$Screens() {
      return this._$screens;
    }
    get$ScreensContainer() {
      return this._$screensContainer;
    }
  }
  class GraphicAutoResolutionScale_GraphicAutoResolutionScale {
    constructor() {
      this._fpsCount = 0, this._fpsSum = 0, this._minFpsForDecreaseScale = 35, this._maxFpsForIncreaseScale = 50, this._scaleStep = 0.05, this._tickerTps = 0.2, this._listeners = new Listeners, this.events = new Events_Events, this.setListeners();
    }
    setListeners() {
      this._listeners.add(np.canvas.events.on("canvasDrawEnd", () => this.onCanvasDrawEnd())).add(np.events.on("gameStart", () => this.onGameStart())).add(np.events.on("gameEnd", () => this.onGameEnd())).disable();
    }
    onCanvasDrawEnd() {
      this._fpsCount++, this._fpsSum += np.canvas.fps;
    }
    onGameStart() {
      this.enableTicker();
    }
    onGameEnd() {
      this.disableTicker();
    }
    enable() {
      this.isEnabled() || (this._enabled = true, this.enableTicker(), this.reSetFpsCounting(), this._listeners.enable(), np.storage.setItem("autoScaleResolution", "1"), this.onChange());
    }
    disable() {
      false !== this.isEnabled() && (this._enabled = false, this.disableTicker(), this._listeners.disable(), np.storage.setItem("autoScaleResolution", "0"), this.onChange());
    }
    onChange() {
      this.events.emit("updateAutoResolutionScale");
    }
    isEnabled() {
      return this._enabled;
    }
    enableTicker() {
      this._tickerUuid || (this._tickerUuid = np.ticker.addToTicker({func: () => this.updateScale(), tps: this._tickerTps, frameDependency: true}));
    }
    disableTicker() {
      this._tickerUuid && (np.ticker.removeFromTicker(this._tickerUuid), this._tickerUuid = null);
    }
    reSetFpsCounting() {
      this._fpsCount = 0, this._fpsSum = 0;
    }
    updateScale() {
      this.setScaleByFps(), this.reSetFpsCounting();
    }
    setScaleByFps() {
      0 !== this.avgFps && (this.avgFps < this._minFpsForDecreaseScale ? this.setScaleResolution(np.canvas.renderer.resolutionScale - this._scaleStep) : this.avgFps >= this._maxFpsForIncreaseScale && this.setScaleResolution(np.canvas.renderer.resolutionScale + this._scaleStep));
    }
    setScaleResolution(e) {
      np.canvas.renderer.resolutionScale = e;
    }
    get avgFps() {
      return this._fpsSum / this._fpsCount || 0;
    }
    setFromStorage() {
      "0" === np.storage.getItem("autoScaleResolution") ? this.disable() : this.enable();
    }
  }
  class DefaultGraphicsOptions {
    constructor() {
      this.pointLights = false, this.rendererOptions = {alpha: true}, this.shadows = false;
    }
  }
  class GraphicsSettings_GraphicsSettings {
    constructor() {
      this._options = new DefaultGraphicsOptions, this.autoResolutionScale = new GraphicAutoResolutionScale_GraphicAutoResolutionScale;
    }
    mergeOptions(e) {
      ValueUtils.fastMerge(this._options, e), this.saveToStorage();
    }
    getOptions() {
      return this._options;
    }
    setFromStorage() {
      const e = np.storage.getItem(this.getStorageKey());
      try {
        const t = JSON.parse(e);
        this.mergeOptions(t);
      } catch (e) {}
    }
    saveToStorage() {
      np.storage.setItem(this.getStorageKey(), JSON.stringify(this.getOptions()));
    }
    getStorageKey() {
      return "graphicsSettings";
    }
  }
  class Settings_Settings extends Module_Module {
    initialize() {
      super.initialize(), this.graphics = new GraphicsSettings_GraphicsSettings, this.graphics.setFromStorage(), this.graphics.autoResolutionScale.setFromStorage();
    }
  }
  const Sd = n(57);
  class Socket_Socket {
    constructor() {
      this.protocol = "https", this.events = new Events_Events, this.connected = false, this._commands = [], this.worker = new Sd, this.worker.onmessage = e => this.workerOnMessage(e.data), this._interval = np.ticker.addToTicker({func: () => this.sendCommandsToWorker(), tps: np.config.get(Xu.socketSendingTPS)});
    }
    initialize() {
      this.worker.postMessage([{name: "initialize"}]);
    }
    workerOnMessage(e) {
      this.handlePackets(e);
    }
    onPackets(e) {
      this.handlePackets(e);
    }
    handlePackets(e) {
      for (const t in e) {
        const n = e[t];
        switch (n.type) {
          case "event":
            this.handleEvent(n.data), this.events.emit("event", n.data);
            break;
          case "packet":
            this.events.emit("packet", n.data);
        }
      }
    }
    connectToServer() {
      const e = this.protocol + "://" + this.address;
      this.sendCommand("connect", {url: e, options: {}});
    }
    emit(e, t = {}) {
      this.sendCommand("emit", {event: e, data: t});
    }
    emitForce(e, t = {}) {
      this.worker.postMessage([{name: "emit", data: {event: e, data: t}}]);
    }
    send(e, t = {}) {
      this.sendCommand("send", {name: e, data: t});
    }
    sendForce(e, t = {}) {
      this.worker.postMessage([{name: "send", data: {name: e, data: t}}]);
    }
    sendCommand(e, t = {}) {
      this._commands.push({name: e, data: t});
    }
    sendCommandsToWorker() {
      if (0 !== this._commands.length) {
        try {
          this.worker.postMessage(this._commands);
        } catch (e) {
          console.error("Cant send postMessage", this._commands);
        }
        this._commands = [];
      }
    }
    disconnect() {
      false !== this.connected && this.sendCommand("disconnect");
    }
    destroy() {
      this.disconnect(), this.worker.terminate();
    }
    set address (e) {
      if (e) try {
        this.host = UrlUtils_UrlUtils.getHostFromAddress(e), this.port = UrlUtils_UrlUtils.getPortFromAddress(e);
      } catch (e) {
        console.log("Address invalid");
      }
    }
    get address() {
      return this.host + ":" + this.port;
    }
    handleEvent(e) {
      "connect" === e.name && (this.connected = true), ["connectError", "disconnect", "error"].includes(e.name) && (this.connected = false);
    }
    requestPackets() {
      this.sendCommand("getPackets");
    }
  }
  class SocketModule_SocketModule extends Module_Module {
    constructor() {
      super(...arguments), this.events = new Events_Events, this.socket = new Socket_Socket, this.packets = new LinkedList_LinkedList, this.enableProcessPackets = true, this.logPacketsIn = [""], this.logPacketsOut = [""];
    }
    initialize() {
      super.initialize(), this.socket.initialize(), this.setAddressFromUrlIfExist(), this.setListeners();
    }
    setAddressFromUrlIfExist() {
      Optional.ofNullable(UrlUtils_UrlUtils.getParameter("address")).ifPresent(e => this.setServerAddress(e));
    }
    setListeners() {
      this.socket.events.on("event", e => this.onReceiveEvent(e)), this.socket.events.on("packet", e => this.onReceivePacket(e)), this._tickerUuid = np.ticker.addToTicker({func: () => this.onTickerTick(), tps: np.config.get(Xu.socketReceiveAndProcessTPS)});
    }
    onReceiveEvent(e) {
      this.packets.insert(e);
    }
    onReceivePacket(e) {
      0 === this.logPacketsIn.length ? console.log(performance.now(), e) : this.logPacketsIn.includes(e.name) && console.log(performance.now(), e), this.packets.insert(e);
    }
    onTickerTick() {
      this.processPackets(), this.socket.requestPackets();
    }
    processPackets() {
      if (this.enableProcessPackets) do {
        if (this.packets.getSize() > 0) {
          const e = this.packets.removeFirst();
          if (e) {
            const t = e.getData();
            t && this.events.emit(t.name, t.data);
          }
        }
      } while (this.packets.getSize() > 0);
    }
    setServerAddress(e) {
      const t = UrlUtils_UrlUtils.getParameter("address");
      t ? this.socket.address = t : e && (this.socket.address = e, this.events.emit("changeAddress"));
    }
    getServerAddress() {
      return this.socket.address;
    }
    connectToServer() {
      this.socket.connectToServer();
    }
    emit(e, t = {}) {
      this.tryLog(e, t), this.socket.emit(e.trim(), t);
    }
    emitForce(e, t = {}) {
      this.tryLog(e, t), this.socket.emitForce(e.trim(), t);
    }
    send(e, t = {}) {
      this.tryLog(e, t), this.socket.send(e.trim(), t);
    }
    sendForce(e, t = {}) {
      this.tryLog(e, t), this.socket.sendForce(e.trim(), t);
    }
    tryLog(e, t) {
      0 === this.logPacketsOut.length ? console.log(performance.now(), e, t) : this.logPacketsOut.includes(e) && console.log(performance.now(), e, t);
    }
    disconnect() {
      this.socket.disconnect();
    }
    finalize() {
      super.finalize(), this.socket.destroy(), this.socket = null;
    }
    getServerAddressWithLastNumeralOfPort(e) {
      return this.host + ":" + UrlUtils_UrlUtils.changeLastNumerallInPort(this.port, e);
    }
    get host() {
      return this.socket.host;
    }
    set host (e) {
      this.socket.host = e;
    }
    get port() {
      return this.socket.port;
    }
    set port (e) {
      this.socket.port = e;
    }
    isConnected() {
      return this.socket.connected;
    }
    getPacketsSize() {
      return this.packets.getSize();
    }
  }
  class TimedChunkUtils_TimedChunkUtils {
    static timedArray(e, t, n, i = 5) {
      np.ticker.addToTicker({func: () => {
        const r = performance.now();
        for (; e.length > 0 && performance.now() - r < i;) 0, t(e.pop());
        e.length > 0 ? TimedChunkUtils_TimedChunkUtils.timedArray(e, t, n, i) : n && n(e);
      }, tps: 1e3, once: true, frameDependency: true});
    }
    static timedLinkedList(e, t, n = 5, i) {
      np.ticker.addToTicker({func: () => {
        const r = performance.now();
        for (; e.getSize() > 0 && performance.now() - r < n;) t(e.removeFirst().getData());
        e.getSize() > 0 ? TimedChunkUtils_TimedChunkUtils.timedLinkedList(e, t, n, i) : i && i(e);
      }, tps: 1e3, once: true, frameDependency: true});
    }
  }
  class EntitiesFactory_EntitiesFactory {
    constructor() {
      this._cachedEntities = {}, this._cachedEntitiesUuids = {}, this._abilitiesForAll = [], this._maxCachedTypeCount = 1e3;
    }
    add(e) {
      const t = e.getCacheKey();
      if (t) {
        if (false === this._cachedEntities.hasOwnProperty(t) && (this._cachedEntities[t] = new LinkedList_LinkedList, this._cachedEntitiesUuids[t] = {}), this.hasEntityUuid(t, e.uuid)) return true;
        if (this._cachedEntities[t].getSize() < this._maxCachedTypeCount) return this._cachedEntities[t].insert(e), this._cachedEntitiesUuids[t][e.uuid] = null, e.onAddedToCache(), e.abilities.onAddedToCache(), true;
      }
      return false;
    }
    get(e, t) {
      let n;
      if (t && t.cacheKey) n = t.cacheKey; else {
        n = (new e).getCacheKey(t);
      }
      if (this.hasType(n)) {
        const e = this._cachedEntities[n].removeFirst().getData();
        return delete this._cachedEntitiesUuids[n][e.uuid], e.fromCache = true, e.needUpdateForce = true, t && (e.setProperties(t.properties), e.setServerProperties(t.serverProperties)), e.abilities.addFromArray(this._abilitiesForAll), e;
      }
      return this.createEntity(e, t);
    }
    has(e) {
      const t = e.getCacheKey();
      return !!t && (this._cachedEntitiesUuids[t] && this._cachedEntitiesUuids[t].hasOwnProperty(e.uuid));
    }
    hasEntityUuid(e, t) {
      return this._cachedEntitiesUuids[e] && this._cachedEntitiesUuids[e].hasOwnProperty(t);
    }
    hasType(e) {
      return !(!this._cachedEntities.hasOwnProperty(e) || !this._cachedEntities[e].getSize());
    }
    createEntity(e, t) {
      const n = new e;
      return n.construct(), t && (n.setProperties(t.properties), n.setServerProperties(t.serverProperties)), n.abilities.addFromArray(this._abilitiesForAll), n.onCreate(), n.abilities.onCreate(), n;
    }
    addAbilities(...e) {
      for (const t in e) this._abilitiesForAll.push(e[t]);
    }
    removeAbilities(...e) {
      for (const t in e) for (let n = 0; n < this._abilitiesForAll.length; n++) if (this._abilitiesForAll[n] === e[t]) {
        this._abilitiesForAll.splice(n, 1);
        break;
      }
    }
    getCount() {
      let e = 0;
      for (const t in this._cachedEntities) this._cachedEntities.hasOwnProperty(t) && (e += this._cachedEntities[t].getSize());
      return e;
    }
  }
  class Spawner_Spawner extends Module_Module {
    constructor() {
      super(...arguments), this.serverUuidsMap = {}, this.instancedServerUuidsMap = {}, this.unmappedEntities = {}, this.factory = new EntitiesFactory_EntitiesFactory, this._entityBulkQueue = new LinkedList_LinkedList, this._entityInfoQueue = {}, this._entityTeleportQueue = {}, this._handlingBulk = false, this._needClearQueues = false, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      np.socket.events.on("entitySpawn", e => this.onEntitySpawn(e.entityData)), np.socket.events.on("entitiesEnter", e => this.onEntitiesEnter(e.entitiesData)), np.socket.events.on("entitiesUpdate", e => this.onEntitiesUpdate(e.entitiesData)), np.socket.events.on("entitiesLeave", e => this.onEntitiesLeave(e.uuids)), np.socket.events.on("entitiesDead", e => this.onEntitiesDead(e.uuids)), np.socket.events.on("entityTeleport", e => this.onServerEntityTeleport(e));
    }
    onEntitySpawn(e) {
      this._entityBulkQueue.insert({type: "spawn", data: [e]}), this.handleBulkQueues();
    }
    onEntitiesEnter(e) {
      this._entityBulkQueue.insert({type: "enterBulk", data: e}), this.handleBulkQueues();
    }
    onEntitiesUpdate(e) {
      for (let t = 0; t < e.length; t++) this.onEntityUpdate(e[t]);
    }
    onEntityUpdate(e) {
      np.entities.getEntityByServerUuid(e.uuid).isPresent() ? this.updatePropertiesForServerEntity(e) : (this._entityInfoQueue[e.uuid] || (this._entityInfoQueue[e.uuid] = new LinkedList_LinkedList), this._entityInfoQueue[e.uuid].insert(e));
    }
    onEntitiesLeave(e) {
      this._entityBulkQueue.insert({type: "leaveBulk", data: e}), this.handleBulkQueues();
    }
    onEntitiesDead(e) {
      this._entityBulkQueue.insert({type: "deadBulk", data: e}), this.handleBulkQueues();
    }
    onServerEntityTeleport(e) {
      np.entities.getEntityByServerUuid(e.uuid).isPresent() ? this.teleportEntity(np.entities.getEntityByServerUuid(e.uuid).get(), e) : (this._entityTeleportQueue[e.uuid] || (this._entityTeleportQueue[e.uuid] = new LinkedList_LinkedList), this._entityTeleportQueue[e.uuid].insert(e));
    }
    teleportEntity(e, t) {
      e.needUpdateForce = true, e.updatedForceSteps.updatedServerProperties = true, e.abilities.hasAbility(AbilityBox2d_AbilityBox2d) ? e.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => e.setPosition(vector_Vector2_Vector2.fromObject(t.position), true)) : (e.position.x = t.position.x, e.position.y = t.position.y);
    }
    handleBulkQueues() {
      if (!this._handlingBulk && this._entityBulkQueue.getSize() > 0) {
        this._handlingBulk = true;
        const e = this._entityBulkQueue.removeFirst().getData();
        "enterBulk" === e.type ? TimedChunkUtils_TimedChunkUtils.timedArray(e.data, e => {
          false === this._needClearQueues && this.spawnServerEntity(e);
        }, () => this.handleBulkQueuesCallback(), 5) : "leaveBulk" === e.type ? TimedChunkUtils_TimedChunkUtils.timedArray(e.data, e => {
          false === this._needClearQueues && this.leaveServerEntity(e);
        }, () => this.handleBulkQueuesCallback(), 5) : "deadBulk" === e.type && TimedChunkUtils_TimedChunkUtils.timedArray(e.data, e => {
          false === this._needClearQueues && this.deadServerEntity(e);
        }, () => this.handleBulkQueuesCallback(), 5);
      }
    }
    getTypesCountInQueue() {
      const e = {};
      return this._entityBulkQueue.forEach(t => {
        undefined === e[t.getData().type] && (e[t.getData().type] = 0), e[t.getData().type]++;
      }), e;
    }
    handleBulkQueuesCallback() {
      this._handlingBulk = false, this._needClearQueues ? this.clearQueue() : this.handleBulkQueues();
    }
    spawnServerEntity(e) {
      if (!e || np.entities.hasEntity(this.serverUuidsMap[e.uuid])) return;
      let t;
      return Spawner_Spawner.ifIam(e.uuid) ? t = this.spawnEntity(this.getEntityClassOrDefault("EntityPlayerI"), {serverProperties: e}) : e.type && (t = this.spawnEntity(this.getEntityClassOrDefault(e.type), {serverProperties: e})), t ? (this.serverUuidsMap[e.uuid] = t.uuid, t.isInstanced() && (this.instancedServerUuidsMap[e.uuid] = t.uuid), Spawner_Spawner.ifIam(e.uuid) && this.events.emit("spawnMyEntity"), this.trySetEntityInfo(e.uuid), this.trySetEntityTeleport(e.uuid), this.events.emit("spawnServerEntity", t), t) : undefined;
    }
    trySetEntityInfo(e) {
      this._entityInfoQueue[e] && this._entityInfoQueue[e].getSize() && (this._entityInfoQueue[e].forEach(e => this.onEntityUpdate(e.getData())), delete this._entityInfoQueue[e]);
    }
    trySetEntityTeleport(e) {
      this._entityTeleportQueue[e] && this._entityTeleportQueue[e].getSize() && (this._entityTeleportQueue[e].forEach(e => this.onServerEntityTeleport(e.getData())), delete this._entityTeleportQueue[e]);
    }
    leaveServerEntity(e) {
      np.entities.getEntityByServerUuid(e).filter(e => false === e.getClientSetting("alwaysDisplayed") || undefined === e.getClientSetting("alwaysDisplayed")).ifPresent(t => this.removeServerEntity(e));
    }
    deadServerEntity(e) {
      np.entities.getEntityByServerUuid(e).ifPresent(e => {
        e.onDead(), e.abilities.onDead();
      }), this.removeServerEntity(e);
    }
    spawnEntity(e, t) {
      const n = this.factory.get(e, t);
      return np.entities.addEntity(n), n.onSpawn(), n.abilities.onSpawn(), n;
    }
    updatePropertiesForServerEntity(e) {
      undefined !== e && np.entities.getEntity(this.serverUuidsMap[e.uuid]).filter(e => e.isServer).ifPresent(t => {
        t.updateServerProperties(e), np.myUuid === t.uuid && this.events.emit("updateMyServerProperties", e), np.canvas.camera.observableEntityUuid === t.uuid && this.events.emit("updateObservablePlayerServerProperties", e);
      });
    }
    removeServerEntity(e) {
      np.entities.getEntityByServerUuid(e).ifPresent(e => e.remove()), delete this.serverUuidsMap[e], delete this.instancedServerUuidsMap[e];
    }
    getEntityClassOrDefault(e) {
      return np.entities.entitiesMap[e] ? np.entities.entitiesMap[e] : (false === this.unmappedEntities.hasOwnProperty(e) && (this.unmappedEntities[e] = e), EntitySimple_EntitySimple);
    }
    static ifIam(e) {
      return np.myServerUuid === e;
    }
    destroyServerEntities(e = []) {
      for (const t in np.entities.entities) {
        const n = np.entities.entities[t];
        n.isServer && false === e.includes(n.serverProperties.type) && this.removeServerEntity(n.serverProperties.uuid);
      }
      this.serverUuidsMap = {}, this.instancedServerUuidsMap = {}, np.instancedEntities.destroyAll(), this.clearQueue();
    }
    clearQueue() {
      this._entityBulkQueue.clear(), this._entityInfoQueue = {}, this._entityTeleportQueue = {}, this._needClearQueues = false;
    }
    getServerUuid(e) {
      for (const t in this.serverUuidsMap) if (this.serverUuidsMap[t] === e) return t;
    }
    getServerUuids(e) {
      const t = [];
      for (const n in e) {
        const i = this.getServerUuid(e[n]);
        i && t.push(i);
      }
      return t;
    }
    getGameUuid(e) {
      return this.serverUuidsMap[e];
    }
  }
  var Ed;
  !function (e) {
    e[e.ANIMATION = 0] = "ANIMATION", e[e.INTERVAL = 1] = "INTERVAL";
  }(Ed || (Ed = {}));
  class Ticker_Ticker {
    constructor(e, t) {
      this._tickTimeOld = 0, this.events = new Events_Events, this._selfTickerEnabled = false, this._selfTickerType = Ed.INTERVAL, this._createdTime = performance.now(), this._tps = e, this._selfTickerType = t;
    }
    tick() {
      const e = MillisHelper.tpsToMs(this._tps), t = performance.now();
      this._createdTime + e <= t && this.events.emit("tick");
      const n = 0 === this._tickTimeOld ? 0 : Math.ceil(Math.max(0, t - this._tickTimeOld - e));
      this._tickTimeOld = t, this._selfTickerEnabled && this.setNextTick(n);
    }
    setNextTick(e = 0) {
      if (this.clearTimer(), this._selfTickerType === Ed.ANIMATION) {
        const e = Math.max(1, MillisHelper.tpsToMs(this._tps));
        this._timeoutFramesUuid = np.canvas.setTimeoutFrames(() => this.tick(), e / (1e3 / Math.min(np.canvas.fps, 60)));
      } else {
        const t = Math.max(1, MillisHelper.tpsToMs(this._tps) - e);
        this._timeoutNumber = setTimeout(() => this.tick(), t);
      }
    }
    tryTick() {
      this._selfTickerEnabled || performance.now() - this._tickTimeOld > MillisHelper.tpsToMs(this._tps) && this.tick();
    }
    destroy() {
      this.clearTimer(), this.events.destroy();
    }
    clearTimer() {
      this._timeoutNumber && (clearTimeout(this._timeoutNumber), this._timeoutNumber = null), this._timeoutFramesUuid && (np.canvas.clearTimeoutFrames(this._timeoutFramesUuid), this._timeoutFramesUuid = null);
    }
    disableSelfTicker() {
      false !== this._selfTickerEnabled && (this._selfTickerEnabled = false, this.clearTimer());
    }
    enableSelfTicker() {
      this._selfTickerEnabled || (this._selfTickerEnabled = true, this.clearTimer(), this.setNextTick());
    }
  }
  const qd = n(58);
  var Td;
  !function (e) {
    e[e.OWN_TICKER = 0] = "OWN_TICKER", e[e.WORKER = 1] = "WORKER";
  }(Td || (Td = {}));
  class TickerModule_TickerModule extends Module_Module {
    constructor() {
      super(...arguments), this._tickers = {}, this._funcUuidToTickerKey = {}, this.worker = new qd, this._currentTicker = Td.OWN_TICKER, this._inFocus = true;
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      this.worker.onmessage = e => this.workerOnMessage(e), this.worker.onerror = e => {
        throw console.error("worker error", e.message + " (" + e.filename + ":" + e.lineno + ")"), new Error(e.message + " (" + e.filename + ":" + e.lineno + ")");
      }, np.window.events.on("blur", () => this.onBlur()), np.window.events.on("focus", () => this.onFocus()), np.canvas.events.on("canvasStartDraw", () => this.onCanvasStartDraw()), np.canvas.events.on("canvasStopDraw", () => this.onCanvasStopDraw());
    }
    onBlur() {
      this._inFocus = false, this.switchOnWorkerTicker();
    }
    onFocus() {
      this._inFocus = true, this.switchOnAnimationTicker();
    }
    onCanvasStartDraw() {
      this._inFocus && this.switchOnAnimationTicker();
    }
    onCanvasStopDraw() {
      this.switchOnWorkerTicker();
    }
    switchOnWorkerTicker() {
      this._currentTicker = Td.WORKER, this.startWorkerTicker(), this.forEachTicker(e => e.disableSelfTicker());
    }
    switchOnAnimationTicker() {
      this._currentTicker = Td.OWN_TICKER, this.stopWorkerTicker(), this.forEachTicker(e => e.enableSelfTicker());
    }
    addToTicker(e) {
      const t = e.frameDependency ? Ed.ANIMATION : Ed.INTERVAL, n = `${e.tps}_${t}`;
      if (false === this.hasTicker(n) && (this._tickers[n] = new Ticker_Ticker(e.tps, t), this._currentTicker === Td.OWN_TICKER && this._tickers[n].enableSelfTicker()), e.once) return this._tickers[n].events.once("tick", () => e.func());
      const i = this._tickers[n].events.on("tick", () => e.func());
      return this._funcUuidToTickerKey[i.getUuid()] = n, i;
    }
    removeFromTicker(e) {
      const t = this._funcUuidToTickerKey[e.getUuid()];
      this.hasTicker(t) && (e.destroy(), delete this._funcUuidToTickerKey[e.getUuid()], 0 === this._tickers[t].events.getEvent("tick").getListenersCount() && (this._tickers[t].destroy(), delete this._tickers[t]));
    }
    hasTicker(e) {
      return this._tickers.hasOwnProperty(e);
    }
    workerOnMessage(e) {
      switch (e.data) {
        case "tick":
          this.onTick();
      }
    }
    onTick() {
      this.forEachTicker(e => e.tryTick());
    }
    forEachTicker(e) {
      for (const t in this._tickers) e(this._tickers[t]);
    }
    startWorkerTicker() {
      this.worker.postMessage("start");
    }
    stopWorkerTicker() {
      this.worker.postMessage("stop");
    }
  }
  class Utils_Utils extends Module_Module {
    constructor() {
      super(...arguments), this.Dom = new DomUtils_DomUtils;
    }
  }
  const Ad = {38: "ArrowUp", 37: "ArrowLeft", 40: "ArrowDown", 39: "ArrowRight", 16: "ShiftLeft", 17: "ControlLeft", 18: "AltLeft", 91: "MetaLeft", 20: "CapsLock", 32: "Space", 8: "Backspace", 64: "Delete", 27: "Escape", 13: "Enter", 191: "Slash", 220: "Backslash", 219: "BracketLeft", 221: "BracketRight", 192: "Backquote", 189: "Minus", 187: "Equal", 9: "Tab", 222: "Quote", 186: "Semicolon", 190: "Period", 188: "Comma", 48: "Digit0", 49: "Digit1", 50: "Digit2", 51: "Digit3", 52: "Digit4", 53: "Digit5", 54: "Digit6", 55: "Digit7", 56: "Digit8", 57: "Digit9", 65: "KeyA", 66: "KeyB", 67: "KeyC", 68: "KeyD", 69: "KeyE", 70: "KeyF", 71: "KeyG", 72: "KeyH", 73: "KeyI", 74: "KeyJ", 75: "KeyK", 76: "KeyL", 77: "KeyM", 78: "KeyN", 79: "KeyO", 80: "KeyP", 81: "KeyQ", 82: "KeyR", 83: "KeyS", 84: "KeyT", 85: "KeyU", 86: "KeyV", 87: "KeyW", 88: "KeyX", 89: "KeyY", 90: "KeyZ"};
  class NativeListeners_NativeListeners {
    constructor(e) {
      this._nativeEvents = ["touchstart", "touchend", "touchmove", "mousedown", "mouseup", "mouseleave", "mousemove", "dblclick", "keydown", "keyup", "resize", "beforeunload", "blur", "focus"], this._events = e, this.setNativeListeners(), this.setListenerOnWheel(), this.setListenerWindowLoad(), this.setListenerDocumentFullScreen(), document.body.addEventListener("keydown", e => {
        const t = e.target;
        ["ArrowUp", "ArrowDown", " "].includes(e.key) && "INPUT" !== t.nodeName && "TEXTAREA" !== t.nodeName && e.preventDefault();
      }), document.body.setAttribute("scroll", "no");
    }
    setNativeListeners() {
      for (const e in this._nativeEvents) this.setNativeListener(this._nativeEvents[e]);
    }
    setListenerOnWheel() {
      window.addEventListener("wheel", e => {
        let t = e.target, n = false;
        for (; t;) {
          if (t.classList.contains("scroll")) {
            n = true;
            break;
          }
          t = t.parentElement;
        }
        n || e.preventDefault(), this._events.emit("mousewheel", e);
      }, {passive: false});
    }
    setListenerWindowLoad() {
      window.addEventListener ? window.addEventListener("load", () => this._events.emit("windowLoaded")) : window.attachEvent("onload", () => this._events.emit("windowLoaded"));
    }
    setListenerDocumentFullScreen() {
      document.onfullscreenchange = e => this._events.emit("changeFullScreen", {event: e});
    }
    setNativeListener(e) {
      "keydown" === e || "keyup" === e ? window.addEventListener(e, t => this.onKeyDownOrKeyUp(e, t)) : window.addEventListener(e, t => this._events.emit(e, t));
    }
    onKeyDownOrKeyUp(e, t) {
      const n = t;
      n.customCode = n.code, undefined === n.customCode && Ad.hasOwnProperty(n.keyCode) && (n.customCode = Ad[n.keyCode]), this._events.emit(e, t);
    }
  }
  class Window_Window extends Module_Module {
    constructor() {
      super(...arguments), this.events = new Events_Events, this._nativeListeners = new NativeListeners_NativeListeners(this.events);
    }
    checkReferrer(e) {
      return window.location !== window.parent.location && this.getReferrer().includes(e);
    }
    getReferrer() {
      const e = JSON.parse(np.storage.getItem("referrer") || "{}");
      return e && ValueUtils.isNumber(e.aliveUntil) && e.aliveUntil > Date.now() ? e.referrer : document.referrer;
    }
  }
  class Rect_Rect {
    constructor(e, t, n, i) {
      this.left = 0, this.top = 0, this.right = 0, this.bottom = 0, this.left = e || 0, this.top = t || 0, this.right = n || 0, this.bottom = i || 0;
    }
    isVecInRect(e) {
      return this.isInRect(e.x, e.y);
    }
    isInRect(e, t) {
      return this.left <= e && e <= this.right && this.bottom <= t && t <= this.top;
    }
    randomBoundPointTo(e) {
      const t = Randomize_Randomize.getRandomInt(0, 3), n = this.randomBoundPointOnSide(t);
      return e.x = n.x, e.y = n.y, t;
    }
    randomBoundPointOnSide(e) {
      const t = new vector_Vector2_Vector2;
      switch (e) {
        case 0:
          t.y = this.top, t.x = Randomize_Randomize.getRandomFloat(this.left, this.right);
          break;
        case 1:
          t.y = this.bottom, t.x = Randomize_Randomize.getRandomFloat(this.left, this.right);
          break;
        case 2:
          t.x = this.right, t.y = Randomize_Randomize.getRandomFloat(this.bottom, this.top);
          break;
        case 3:
          t.x = this.left, t.y = Randomize_Randomize.getRandomFloat(this.bottom, this.top);
      }
      return t;
    }
    randomPointWithExcludeRect(e) {
      const t = new vector_Vector2_Vector2, n = e.randomBoundPointTo(t), i = this.randomBoundPointOnSide(n);
      return i.subtract(t), i.randomSubVector(), i.add(t), this.limitVector(i), i;
    }
    limitVector(e, t = 0) {
      return e.y = Math.min(this.top - t, e.y), e.x = Math.max(this.left + t, e.x), e.x = Math.min(this.right - t, e.x), e.y = Math.max(this.bottom + t, e.y), e;
    }
    expand(e) {
      return this.top += e, this.left -= e, this.right += e, this.bottom -= e, this;
    }
    translate(e) {
      return this.top += e.y, this.left += e.x, this.right += e.x, this.bottom += e.y, this;
    }
    getSize() {
      return new vector_Vector2_Vector2(this.right - this.left, this.top - this.bottom);
    }
    getRadius() {
      return this.getSize().divideScalar(2);
    }
    clone() {
      return new Rect_Rect(this.left, this.top, this.right, this.bottom);
    }
    copy(e) {
      return this.copyValues(e.left, e.top, e.right, e.bottom);
    }
    copySize(e) {
      return this.copyWidthHeight(e.x, e.y);
    }
    copyWidthHeight(e, t) {
      return this.copyValues(-e / 2, t / 2, e / 2, -t / 2);
    }
    copyValues(e, t, n, i) {
      return this.left = e, this.top = t, this.right = n, this.bottom = i, this;
    }
    isEqual(e) {
      return this.left === e.left && this.right === e.right && this.top === e.top && this.bottom === e.bottom;
    }
    toBox2dAabb() {
      return Rect_Rect.toBox2dAabb(this);
    }
    static toBox2dAabb(e) {
      const t = new Yu.Collision.b2AABB;
      return t.lowerBound.Set(Box2dUtils.toBox2DValue(e.left), Box2dUtils.toBox2DValue(e.bottom)), t.upperBound.Set(Box2dUtils.toBox2DValue(e.right), Box2dUtils.toBox2DValue(e.top)), t;
    }
    static fromObject(e) {
      const t = new Rect_Rect;
      return t.left = e.left, t.top = e.top, t.right = e.right, t.bottom = e.bottom, t;
    }
    static fromThreeBox3(e) {
      const t = new Rect_Rect;
      return t.left = e.min.x, t.top = e.max.y, t.right = e.max.x, t.bottom = e.min.y, t;
    }
    static fromWidthHeight(e, t) {
      return new Rect_Rect(-e / 2, t / 2, e / 2, -t / 2);
    }
    static fromSize(e) {
      return Rect_Rect.fromRadius(e / 2);
    }
    static fromRadius(e) {
      return new Rect_Rect(-e, e, e, -e);
    }
    static fromPoint(e, t) {
      return new Rect_Rect(e.x - t, e.y + t, e.x + t, e.y - t);
    }
    static fromVector2(e, t) {
      return new Rect_Rect(e.x - t, e.y + t, e.x + t, e.y - t);
    }
  }
  class WorldAbstractCommands {
    constructor(e) {
      this._world = e;
    }
  }
  class WorldEntities_WorldEntities extends WorldAbstractCommands {
    create(e, t) {
      this.sendCommand("createEntity", e, t);
    }
    setMultiplier(e, t) {
      this.sendCommand("setEntityMultiplier", e, t);
    }
    setBodyType(e, t) {
      this.sendCommand("setEntityBodyType", e, t);
    }
    setSensor(e, t) {
      this.sendCommand("setEntitySensor", e, t);
    }
    setRestitution(e, t) {
      this.sendCommand("setEntityRestitution", e, t);
    }
    setFriction(e, t) {
      this.sendCommand("setEntityFriction", e, t);
    }
    setDensity(e, t) {
      this.sendCommand("setEntityDensity", e, t);
    }
    setMass(e, t) {
      this.sendCommand("setEntityMass", e, t);
    }
    setAllowContact(e, t) {
      this.sendCommand("setEntityAllowContact", e, t);
    }
    setVelocity(e, t, n) {
      this.sendCommand("setEntityVelocity", e, {velocity: t.toObject(), version: n});
    }
    setAngularVelocity(e, t) {
      this.sendCommand("setEntityAngularVelocity", e, t);
    }
    addVelocity(e, t) {
      this.sendCommand("addEntityVelocity", e, t.toObject());
    }
    setVelocitySmoothly(e, t, n) {
      this.sendCommand("setEntityVelocitySmoothly", e, {velocity: t.toObject(), smoothness: n});
    }
    reSetFixture(e, t) {
      this.sendCommand("reCreateEntityFixture", e, t);
    }
    setSize(e, t, n) {
      this.sendCommand("setEntitySize", e, {size: t, version: n});
    }
    setAngle(e, t, n) {
      this.sendCommand("setEntityAngle", e, {angle: t, version: n});
    }
    setPosition(e, t, n, i = false) {
      this.sendCommand("setEntityPosition", e, {position: t.toObject(), force: i, version: n});
    }
    addPosition(e, t) {
      this.sendCommand("addEntityPosition", e, t.toObject());
    }
    updateActivePhysicsCenter(e) {
      this.sendCommand("updateActivePhysicsCenter", undefined, e.toObject());
    }
    setActive(e, t) {
      this.sendCommand("setActive", e, t);
    }
    sendUpdateRequest(e) {
      this.sendCommand("sendUpdateRequest", e);
    }
    destroy(e) {
      this.sendCommand("destroyEntity", e);
    }
    destroyAll() {
      this.sendCommand("destroyAllEntities");
    }
    sendCommand(e, t, n) {
      this._world.addCommand({name: e, data: {entityUuid: t, entityData: n}});
    }
  }
  class WorldTools_WorldTools extends WorldAbstractCommands {
    constructor() {
      super(...arguments), this._rayCastPromises = {}, this._rayCastResolves = {}, this._testPointPromises = {}, this._testPointResolves = {}, this._selectPromises = {}, this._selectResolvers = {};
    }
    rayCast(e, t, n = 1) {
      const i = Randomize_Randomize.getUuid();
      return this._rayCastPromises[i] ? this._rayCastPromises[i] : this._rayCastPromises[i] = new Promise((r, o) => {
        this._rayCastResolves[i] = r, this.sendCommand("rayCast", {uuid: i, point1: e.toObject(), point2: t.toObject(), maxFraction: n});
      });
    }
    resolveRayCast(e, t) {
      this._rayCastResolves[e] && (this._rayCastResolves[e](t), delete this._rayCastResolves[e], delete this._rayCastPromises[e]);
    }
    testPoint(e, t = false) {
      const n = Randomize_Randomize.getUuid();
      return this._testPointPromises[n] ? this._testPointPromises[n] : this._testPointPromises[n] = new Promise((i, r) => {
        this._testPointResolves[n] = i, this.sendCommand("testPoint", {uuid: n, data: {point: e.toObject(), first: t}});
      });
    }
    resolveTestPoint(e, t) {
      this._testPointResolves[e] && (this._testPointResolves[e](t), delete this._testPointResolves[e], delete this._testPointPromises[e]);
    }
    selectEntities(e) {
      const t = Randomize_Randomize.getUuid(), n = this._selectPromises[t];
      return n || (this._selectPromises[t] = new Promise((n, i) => {
        this._selectResolvers[t] = n, this.sendCommand("selectEntities", {uuid: t, rect: e});
      }));
    }
    resolveSelectEntities(e, t) {
      this._selectResolvers[e] && (this._selectResolvers[e](t), delete this._selectResolvers[e], delete this._selectPromises[e]);
    }
    sendCommand(e, t) {
      this._world.addCommand({name: e, data: t});
    }
  }
  class World_World extends Module_Module {
    constructor() {
      super(...arguments), this._commands = [], this.entities = new WorldEntities_WorldEntities(this), this.tools = new WorldTools_WorldTools(this), this._canWork = true, this.activeEntitiesCount = 0, this.entityCount = 0, this.jointCount = 0, this.events = new Events_Events, this.worldBounds = new Rect_Rect(1750, -1750, 1750, -1750);
    }
    initialize() {
      super.initialize(), this._worker = new this.workerClass, this.setListeners(), this._worker.postMessage([{name: "initialize", data: {tps: np.config.get(Xu.box2dTps)}}]), this._tickerUuid = np.ticker.addToTicker({func: () => {
        this.updateActivePhysicsCenter(), this.sendCommandsToWorker();
      }, tps: np.config.get(Xu.box2dTps), frameDependency: true}), this.startBox2dTicking();
    }
    startBox2dTicking() {
      this.addCommand({name: "startTicking", data: {}});
    }
    stopBox2dTicking() {
      this.addCommand({name: "stopTicking", data: {}});
    }
    addCommand(e) {
      this._commands.push(e);
    }
    sendCommandsToWorker() {
      if (0 !== this._commands.length) {
        try {
          this._worker.postMessage(this._commands);
        } catch (e) {
          console.error("Cant send postMessage", this._commands);
        }
        this._commands = [];
      }
    }
    setListeners() {
      this._worker.onmessage = e => this.workerOnMessage(e), this._worker.onerror = e => {
        throw console.error("worker error", e.message + " (" + e.filename + ":" + e.lineno + ")"), new Error(e.message + " (" + e.filename + ":" + e.lineno + ")");
      }, np.socket.events.on("worldInfo", e => this.updateWorldBounds(e));
    }
    workerOnMessage(e) {
      "packets" === e.data.type && this.processPackets(e.data.packets);
    }
    processPackets(e) {
      for (const t in e) {
        const n = e[t];
        this.processPacket(n);
      }
    }
    processPacket(e) {
      switch (e.responseType) {
        case "updateEntities":
          this.onUpdateEntities(e.responseData);
          break;
        case "contactPostSolve":
          this.onContactPostSolve(e.responseData);
          break;
        case "processContact":
          this.onProcessContact(e.responseData);
          break;
        case "rayCast":
          this.onRayCast(e.responseData);
          break;
        case "testPoint":
          this.onTestPoint(e.responseData);
          break;
        case "selectEntities":
          this.onSelectEntities(e.responseData);
          break;
        case "Box2dDebugDataSender_DrawSegment":
          this.events.emit("Box2dDebugDataSender_DrawSegment", {data: e.responseData});
          break;
        case "Box2dDebugDataSender_DrawPolygon":
          this.events.emit("Box2dDebugDataSender_DrawPolygon", {data: e.responseData});
          break;
        case "Box2dDebugDataSender_DrawSolidPolygon":
          this.events.emit("Box2dDebugDataSender_DrawSolidPolygon", {data: e.responseData});
          break;
        case "Box2dDebugDataSender_DrawCircle":
          this.events.emit("Box2dDebugDataSender_DrawCircle", {data: e.responseData});
          break;
        case "Box2dDebugDataSender_DrawSolidCircle":
          this.events.emit("Box2dDebugDataSender_DrawSolidCircle", {data: e.responseData});
          break;
        case "Box2dDebugDataSender_DrawTransform":
          this.events.emit("Box2dDebugDataSender_DrawTransform", {data: e.responseData});
      }
    }
    onUpdateEntities(e) {
      this.activeEntitiesCount = e.entitiesData.length, this.entityCount = e.entityCount, this.jointCount = e.jointCount;
      for (const t in e.entitiesData) np.entities.getEntity(e.entitiesData[t].entityUuid).ifPresent(n => {
        n.setPhysicsTransforms(e.entitiesData[t].data), n.abilities.onSetPhysicsTransforms(e.entitiesData[t].data);
      });
    }
    onContactPostSolve(e) {}
    onProcessContact(e) {
      np.entities.getEntity(e.uuidA).ifPresent(t => {
        t.onProcessContact(e.uuidB, e.begin);
      }), np.entities.getEntity(e.uuidB).ifPresent(t => {
        t.onProcessContact(e.uuidA, e.begin);
      });
    }
    onRayCast(e) {
      const t = e;
      this.tools.resolveRayCast(t.uuid, t.entities);
    }
    onTestPoint(e) {
      const t = e;
      this.tools.resolveTestPoint(t.uuid, t.entities);
    }
    onSelectEntities(e) {
      const t = e;
      this.tools.resolveSelectEntities(t.uuid, t.entities);
    }
    updateWorldBounds(e) {
      if (e && e.bounds) {
        const t = Rect_Rect.fromObject(e.bounds);
        false === this.worldBounds.isEqual(t) && (this.worldBounds.copy(t), this.events.emit("worldBoundsUpdated", {}));
      }
    }
    updateActivePhysicsCenter() {
      np.canvas.camera.attachedEntity.ifPresent(e => this.entities.updateActivePhysicsCenter(e.position.toVector2()));
    }
  }
  class Modules_ModulesImpl {
    constructor(e) {
      this.modules = {storage: LocalStorage_LocalStorage, device: Device_DeviceImpl, notifier: Notifier_Notifier, errorNotifier: ErrorNotifier_ErrorNotifier, languages: Languages_LanguagesImpl, utils: Utils_Utils, config: Config_Config, ticker: TickerModule_TickerModule, cacheKeeper: CacheKeeper_CacheKeeper, window: Window_Window, input: Input_Input, settings: Settings_Settings, textures: Textures_Textures, svgObjects: SvgObjectsImpl_SvgObjectsImpl, fbxModels: FbxLoader_FbxLoader, sounds: Sounds_SoundsImpl, fonts: Fonts_FontsImpl, canvas: Canvas_Canvas, world: World_World, ears: Ears_Ears, entities: EntitiesModule_EntitiesModule, instancedEntities: InstancedGroups_InstancedGroups, drawer: DrawerModule_DrawerModule, spawner: Spawner_Spawner, socket: SocketModule_SocketModule, connector: Connector_Connector, screens: ScreensModule_ScreensModule, light: Light_LightModule, particles: ParticlesModule_ParticlesModule}, this.mod = e;
    }
    initialize() {
      Logger_Logger.styled("font-size: 14px;", `🎮Mod: <b>${ this.mod.name}</b>\n📦Version: <b>${ this.mod.version}</b>`);
      const e = UrlUtils_UrlUtils.getParameter("api-host");
      e && (this.mod.apiHost = e);
      const t = UrlUtils_UrlUtils.getParameter("resource-host");
      t && (this.mod.resourceHost = t), this.mod.beforeLoadCoreModules(), this.loadCoreModules(), this.mod.beforeInitializeCoreModules(), this.initializeCoreModules(), this.mod.afterInitializeCoreModules();
    }
    loadCoreModules() {
      for (const e in this.modules) this.modules.hasOwnProperty(e) && (np[e] = new this.modules[e]);
    }
    initializeCoreModules() {
      for (const e in this.modules) this.modules.hasOwnProperty(e) && np[e].initialize();
    }
  }
  class Mod_Mod {
    constructor() {
      this.events = new Events_Events, this._modules = {}, this.defaultGeometry = kr, this.optimize2d = false;
    }
    loadModules(...e) {
      for (const t in e) e.hasOwnProperty(t) && e[t] && this.addModule(e[t]);
      for (const e in this._modules) this.initializeModule(this._modules[e]);
    }
    addModule(e) {
      return this._modules[ValueUtils.getValidClassName(e.constructor.name)] = e, e;
    }
    initializeModule(e) {
      e.initialize();
    }
    loadModule(e) {
      this.addModule(e), this.initializeModule(e);
    }
    unLoad(e) {
      this.get(e).ifPresent(t => {
        t.finalize(), delete this._modules[ValueUtils.getValidClassName(e.name)];
      });
    }
    get(e) {
      return Optional.ofNullable(this._modules[ValueUtils.getValidClassName(e.name)]);
    }
  }
  class AdInstanceOptions_AdInstanceOptions {
    constructor() {
      this.waitTimeBetweenShowPreRoll = MillisHelper.fromMinute(5), this.timeoutLookAdSeconds = 5;
    }
  }
  class HasBlockAd_HasBlockAd extends Module_Module {
    constructor() {
      super(...arguments), this.isAdsBlocked = false, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), this.checkBlockAd();
    }
    checkBlockAd() {
      const e = UrlUtils_UrlUtils.getParameter("dev");
      (false === !!document.getElementById("NxpuwFryGDiQ") || e) && this.setAsBlocked(), Logger_Logger.log(`<b>[HasBlockAd]</b> ${this.isAdsBlocked ? "ad blocked" : "ad not blocked"}`);
    }
    setAsBlocked() {
      this.isAdsBlocked = true, np.connector.connectionData.isBlockedAd = true, this.events.emit("hasBlockingAds", {isAdsBlocked: this.isAdsBlocked});
    }
  }
  class Ads_Ads extends Module_Module {
    constructor(e) {
      super(), console.log("Ads: ", e.constructor.name), this._instance = e;
    }
    initialize() {
      super.initialize(), Ads_Ads.isDisableAds() || false === Ads_Ads.isAdsBlocked() && this.setListeners();
    }
    setListeners() {
      this.getInstance().initialize();
    }
    getInstance() {
      return this._instance;
    }
    static isDisableAds() {
      const e = UrlUtils_UrlUtils.getParameter("disable-ads");
      return !(!e || "gamedistribution.com" === e);
    }
    static isAdsBlocked() {
      return np.modules.mod.get(HasBlockAd_HasBlockAd).map(e => e.isAdsBlocked).orElse(false);
    }
    static isScriptLoaded() {
      return np.modules.mod.get(Ads_Ads).filter(e => e.getInstance().isScriptLoaded()).isPresent();
    }
  }
  class AdVideo_AdVideo {
    constructor(e) {
      this.enabled = true, this._mustSeeKey = "VideoAd_MustSee", this.skipOne = false, this._waitTimeBetweenShow = e, this.setListeners();
    }
    setListeners() {
      console.log("AdVideo setListeners"), np.modules.mod.get(Ads_Ads).ifPresent(e => e.getInstance().events.on("adVideoComplete", e => this.onAdVideoComplete(e)).setPriority(5)), np.events.on("gameEnd", () => this.onGameEnd()), np.window.events.on("beforeunload", () => this.onBeforeUnload()), np.events.on("gamePlay", () => this.onGamePlay()).setPriority(5);
    }
    onAdVideoComplete(e) {
      Logger_Logger.logTime("onAdVideoComplete"), this.log(`video ad "${null == e ? undefined : e.type}" completed`), this.saveLastTimeWatchPreRoll(), this.setMustSeePreRoll(false), this._pausedEvent && (this._pausedEvent.resume(), Logger_Logger.logTime("resume paused event"));
    }
    onGameEnd() {
      this.isCanShow() && this.setMustSeePreRoll(true);
    }
    onBeforeUnload() {
      this.isCanShow() && this.setMustSeePreRoll(true);
    }
    onGamePlay() {
      this.isMustSeePreRoll() ? (this.log("must see"), this.show({pauseEvent: np.events.getEvent("gamePlay"), force: true})) : this.show({pauseEvent: np.events.getEvent("gamePlay")});
    }
    show(e) {
      AdVideo_AdVideo.hasVideoAd() && !this.isBlockAd() && ((null == e ? undefined : e.force) || this.isCanShow()) && (!this.skipOne || (this.skipOne = false, null == e ? undefined : e.force)) && ((null == e ? undefined : e.pauseEvent) && (e.pauseEvent.pause(), this._pausedEvent = e.pauseEvent), np.modules.mod.get(Ads_Ads).ifPresent(t => {
        t.getInstance().canShowAdVideo() && (this.log("show"), t.getInstance().events.emit("adVideoShow"), t.getInstance().showAdVideo(null == e ? undefined : e.type));
      }));
    }
    static hasVideoAd() {
      return np.modules.mod.get(Ads_Ads).map(e => e.getInstance().canShowAdVideo()).orElseGet(() => false);
    }
    isCanShow() {
      return this.enabled && 0 === this.getLeftTimeForWatch();
    }
    log(e, t) {
      np.logger.debug(`<b>[VideoAd]</b> ${e}`, t || "");
    }
    setMustSeePreRoll(e) {
      np.storage.setItem(this._mustSeeKey, e ? "1" : "");
    }
    isMustSeePreRoll() {
      return "1" === np.storage.getItem(this._mustSeeKey);
    }
    isBlockAd() {
      return np.modules.mod.get(HasBlockAd_HasBlockAd).filter(e => e.isAdsBlocked).isPresent() || Ads_Ads.isDisableAds();
    }
    saveLastTimeWatchPreRoll() {
      np.storage.setItem("VideoAd_lastTimeWatch", Date.now().toString());
    }
    getLastTimeWatchPreRoll() {
      const e = parseInt(np.storage.getItem("VideoAd_lastTimeWatch"), 10);
      return ValueUtils.isNumber(e) ? e : 0;
    }
    getLeftTimeForWatch() {
      const e = this.getLastTimeWatchPreRoll() + this._waitTimeBetweenShow - Date.now();
      return e > 0 ? e : 0;
    }
    getWaitTimeBetweenShow() {
      return this._waitTimeBetweenShow;
    }
  }
  class AbstractAdInstance_AbstractAdInstance {
    constructor(e) {
      this._initialized = false, this.options = new AdInstanceOptions_AdInstanceOptions, this._scriptLoaded = false, this.events = new Events_Events, Object.assign(this.options, e);
    }
    initialize() {
      this._initialized || (this._initialized = true, this.adVideo = new AdVideo_AdVideo(this.options.waitTimeBetweenShowPreRoll), np.window.events.on("windowLoaded", () => this.onWindowLoaded()), np.connector.events.on("reLoginToServer", () => this.onReLogin()).setPriority(5));
    }
    onWindowLoaded() {
      Ads_Ads.isAdsBlocked() || (this.putTemplates(), this.loadScript());
    }
    putTemplates() {
      DomUtils_DomUtils.insertCss(n(59).toString());
    }
    loadScript() {
      DomUtils_DomUtils.insertScript({src: this.options.scriptUrl, callback: () => this.onLoadedScript()});
    }
    onLoadedScript() {
      this.log("loaded"), this._scriptLoaded = true, this.events.emit("adScriptLoaded");
    }
    canShowAdVideo() {
      return true;
    }
    log(e, t) {
      np.logger.debug(`<b>[AdInstance]</b> ${e}`, t || "");
    }
    onReLogin() {
      this.adVideo.show({pauseEvent: np.connector.events.getEvent("reLoginToServer")});
    }
    isScriptLoaded() {
      return this._scriptLoaded;
    }
    isBannerAllowed() {
      return true;
    }
  }
  class AdInPlayAds_AdInPlayAds extends AbstractAdInstance_AbstractAdInstance {
    constructor() {
      super(...arguments), this._displayed = false, this._$wrap = document.createElement("div"), this._$preRoll = document.createElement("div");
    }
    onLoadedScript() {
      super.onLoadedScript(), delete Array.prototype.pushIfNotExist, DomUtils_DomUtils.insertScript({src: "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", attributes: {"data-ad-client": "ca-pub-3505897010587732"}});
    }
    putTemplates() {
      super.putTemplates(), this._$wrap.classList.add("preroll-wrap"), document.body.appendChild(this._$wrap), this._$preRoll.id = "preroll", this._$wrap.appendChild(this._$preRoll), this.initializeAdInPlay();
    }
    initializeAdInPlay() {
      window.aiptag = window.aiptag || {}, window.aiptag.cmd = window.aiptag.cmd || [], window.aiptag.cmd.display = window.aiptag.cmd.display || [], window.aiptag.cmd.player = window.aiptag.cmd.player || [], window.aiptag.cmp = {show: true, position: "centered", button: true, buttonText: "Privacy settings", buttonPosition: "bottom-right"}, window.aiptag.gdprShowConsentTool = true, window.aiptag.gdprShowConsentToolButton = true, window.aiptag.cmd.player.push(() => {
        window.adplayer = new window.aipPlayer({AD_WIDTH: 960, AD_HEIGHT: 540, AD_FULLSCREEN: false, AD_CENTERPLAYER: true, LOADING_TEXT: "loading advertisement", PREROLL_ELEM: () => document.getElementById("preroll"), AIP_COMPLETE: e => {
          console.log("AIP_COMPLETE"), np.modules.mod.get(Ads_Ads).ifPresent(t => t.getInstance().events.emit("adVideoComplete", {type: e}));
        }, AIP_REMOVE: () => {}});
      });
    }
    refreshBanner(e, t) {
      if (false === this._displayed) return aiptag.cmd.display.push(() => aipDisplayTag.display(e)), void (this._displayed = true);
      aiptag.cmd.display.push(() => aipDisplayTag.refresh(e));
    }
    clearBanner(e) {}
    showAdVideo() {
      this.canShowAdVideo() && aiptag.cmd.player.push(() => adplayer.startPreRoll());
    }
    canShowAdVideo() {
      return AdInPlayAds_AdInPlayAds.hasAipTagPlayer();
    }
    static hasAipTagPlayer() {
      return "undefined" != typeof aiptag && Optional.ofNullable(aiptag).map(e => e.cmd).map(e => e.player).orElse(false) && "undefined" != typeof adplayer;
    }
  }
  class CrazyGamesAds_CrazyGamesAds extends AbstractAdInstance_AbstractAdInstance {
    constructor() {
      super(...arguments), this._requestBanners = [];
    }
    initialize() {
      super.initialize(), np.events.on("gameStart", () => {
        var e;
        return null === (e = this._sdk) || undefined === e ? undefined : e.gameplayStart();
      }), np.events.on("gameEnd", () => {
        var e;
        return null === (e = this._sdk) || undefined === e ? undefined : e.gameplayStop();
      }), setInterval(() => {
        var e;
        0 !== this._requestBanners.length && (null === (e = this._sdk) || undefined === e || e.requestBanner(this._requestBanners), this._requestBanners = []);
      }, 1e3);
    }
    onLoadedScript() {
      super.onLoadedScript(), this._sdk = window.CrazyGames.CrazySDK.getInstance(), this._sdk.init(), this._sdk.addEventListener("adFinished", () => this.onAdVideoFinished()), this._sdk.addEventListener("adError", e => this.onAdVideoError(e)), this._sdk.addEventListener("bannerRendered", e => {
        Logger_Logger.logTime(`Banner for container ${e.containerId} has been`);
      }), this._sdk.addEventListener("bannerError", e => {
        Logger_Logger.logTime(`Banner render error: ${e.error}`);
      });
    }
    onAdVideoFinished() {
      this.emitAdVideoComplete();
    }
    emitAdVideoComplete() {
      np.modules.mod.get(Ads_Ads).ifPresent(e => e.getInstance().events.emit("adVideoComplete"));
    }
    onAdVideoError(e) {
      console.error("AdVideo request error", e), this.emitAdVideoComplete();
    }
    refreshBanner(e, t) {
      Logger_Logger.logTime("CG SDK requestBanner", e, t), this._requestBanners.push({containerId: e, size: t});
    }
    clearBanner(e) {
      var t;
      null === (t = this._sdk) || undefined === t || t.clearBanner(e);
    }
    showAdVideo(e = "midgame") {
      var t;
      Logger_Logger.logTime("CG SDK requestAd", e), null === (t = this._sdk) || undefined === t || t.requestAd(e);
    }
    getSDK() {
      return this._sdk;
    }
  }
  class MyGamesAds_MyGamesAds extends AbstractAdInstance_AbstractAdInstance {
    onLoadedScript() {
      undefined !== window.iframeApi ? (Logger_Logger.logTime("MG SDK initializing..."), window.iframeApi({appid: 18877, adsCallback: e => {
        Logger_Logger.logTime("MG SDK adsCallback", e), np.modules.mod.get(Ads_Ads).ifPresent(e => e.getInstance().events.emit("adVideoComplete"));
      }}).then(e => {
        Logger_Logger.logTime("MG SDK initialized", e), window.externalApi = e, this._scriptLoaded = true, this.events.emit("adScriptLoaded");
      }).catch(e => {
        throw new Error("Could not init external api " + e);
      })) : console.log("Cannot find iframeApi function, are we inside an iframe?");
    }
    refreshBanner(e, t) {}
    clearBanner(e) {}
    showAdVideo(e) {
      var t;
      Logger_Logger.logTime("MG SDK requestAd", e), null === (t = window.externalApi) || undefined === t || t.showAds();
    }
    isBannerAllowed() {
      return false;
    }
  }
  class YandexSDKAds_YandexSDKAds extends AbstractAdInstance_AbstractAdInstance {
    onLoadedScript() {
      super.onLoadedScript(), this.tryInitYaGames();
    }
    tryInitYaGames() {
      setTimeout(() => {
        YaGames.init().then(e => {
          var t;
          console.log("Yandex SDK initialized"), null === (t = e.features.LoadingAPI) || undefined === t || t.ready(), window.ysdk = e;
        });
      }, 1e3);
    }
    emitAdVideoComplete() {
      np.modules.mod.get(Ads_Ads).ifPresent(e => e.getInstance().events.emit("adVideoComplete"));
    }
    refreshBanner(e, t) {}
    showAdVideo(e = "midgame") {
      Logger_Logger.logTime("YANDEX SDK requestAd", e), ysdk.adv.showFullscreenAdv({callbacks: {onClose: e => {
        this.emitAdVideoComplete();
      }, onError: e => {
        this.emitAdVideoComplete();
      }}});
    }
    clearBanner(e) {}
  }
  class BackgroundModule_BackgroundModule extends Module_Module {
    constructor(e) {
      super(), this._backgrounds = [], this._options = e;
    }
    initialize() {
      super.initialize();
      for (const e in this._options.backgrounds) {
        const t = this._options.backgrounds[e], n = {cachedGeometry: kr, textureUrls: [t.textureName], receiveLight: true, renderOrder: t.renderOrder || 0};
        let i;
        if (t.tiles) {
          const e = n;
          e.tiles = t.tiles, t.animateEveryFrame && (e.everyFrame = t.animateEveryFrame), t.animateLoopType && (e.loopType = t.animateLoopType), (i = new SkinAnimatedSprite_SkinAnimatedSprite(e)).startAnimation();
        } else i = new SkinSimple_SkinSimple(n);
        i.initialize(), np.canvas.getScene().add(i.getObject3d()), undefined !== t.positionZ && (i.getObject3d().position.z = t.positionZ), this._backgrounds.push(i);
      }
      this.setListeners(), this._options.defaultWorldSize && this.forEach((e, t) => {
        const n = this._options.defaultWorldSize.clone().add(this._options.backgrounds[t].addSize || vector_Vector2_Vector2.ZERO.clone());
        e.getObject3d().scale.copy(n.toThreeVector3(1)), e.setTextureRepeat(n.clone().divide(this._options.backgrounds[t].cellSize));
      });
    }
    setListeners() {
      np.world.events.on("worldBoundsUpdated", () => this.onWorldBoundsUpdated());
    }
    onWorldBoundsUpdated() {
      this.forEach((e, t) => {
        const n = np.world.worldBounds.getSize().add(this._options.backgrounds[t].addSize || vector_Vector2_Vector2.ZERO.clone());
        e.getObject3d().scale.copy(n.toThreeVector3(1)), e.setTextureRepeat(n.clone().divide(this._options.backgrounds[t].cellSize));
      });
    }
    forEach(e) {
      for (let t = 0; t < this._backgrounds.length; t++) e(this._backgrounds[t], t);
    }
  }
  class DomAbstractElement_DomAbstractElement {
    constructor() {
      this._listeners = new Listeners;
    }
    focus() {
      return this.get$Element().focus(), this;
    }
    appendChild(e) {
      return false === this.get$Element().contains(e) && this.get$Element().appendChild(e), this;
    }
    prependChild(e) {
      return this.get$Element().insertAdjacentElement("afterbegin", e), this;
    }
    appendHtml(e) {
      this.get$Element().insertAdjacentHTML("beforeend", e);
    }
    removeChild(e) {
      return this.get$Element().contains(e) && this.get$Element().removeChild(e), this;
    }
    addClasses(e) {
      return this.addClassesTo(this.get$Element(), e);
    }
    removeClasses(e) {
      return this.removeClassesFrom(this.get$Element(), e);
    }
    addClassesTo(e, t) {
      for (let n = 0; n < t.length; n++) e.classList.add(t[n]);
      return this;
    }
    removeClassesFrom(e, t) {
      for (let n = 0; n < t.length; n++) e.classList.remove(t[n]);
      return this;
    }
    setDisabled(e) {
      return e ? this.disable() : this.enable(), this;
    }
    enable() {
      return this.get$Element().removeAttribute("disabled"), this;
    }
    disable() {
      return this.get$Element().setAttribute("disabled", "disabled"), this;
    }
    setBackgroundUrl(e) {
      return this.get$Element().style.backgroundImage = `url(${e})`, this;
    }
    setBackgroundColor(e) {
      return this.get$Element().style.backgroundColor = e, this;
    }
    markAsError() {
      return this.addClasses(["error"]), this;
    }
    scrollToBottom() {
      return DomUtils_DomUtils.scrollToBottom(this.get$Element()), this;
    }
    clean() {
      return DomUtils_DomUtils.cleanElement(this.get$Element()), this;
    }
    destroy() {
      this._listeners.destroy(), this.get$Element().remove();
    }
  }
  class DomDiv_DomDiv extends DomAbstractElement_DomAbstractElement {
    constructor() {
      super(), this.events = new Events_Events, this._$element = document.createElement("div"), this.putTemplate(), this.setListeners();
    }
    putTemplate() {}
    setListeners() {
      this._$element.addEventListener("click", e => this.onClick(e));
    }
    onClick(e) {
      this.events.emit("click", {event: e});
    }
    get$Element() {
      return this._$element;
    }
  }
  class DomParagraph_DomParagraph extends DomAbstractElement_DomAbstractElement {
    constructor() {
      super(), this.events = new Events_Events, this._$element = document.createElement("p"), this.putTemplate(), this.setListeners();
    }
    putTemplate() {}
    setListeners() {
      this._$element.addEventListener("click", e => this.onClick(e));
    }
    onClick(e) {
      this.events.emit("click", {event: e});
    }
    setText(e) {
      return this._$element.innerText = e, this;
    }
    getText() {
      return this._$element.innerText;
    }
    setHtml(e) {
      return this._$element.innerHTML = e, this;
    }
    get$Element() {
      return this._$element;
    }
  }
  class ChangeLog_ChangeLog extends Module_Module {
    constructor(e) {
      super(), this._$container = new DomDiv_DomDiv, this._$changeLog = new DomDiv_DomDiv, this._$title = new DomParagraph_DomParagraph, this._$titleSpan = new DomParagraph_DomParagraph, this.options = e;
    }
    initialize() {
      super.initialize(), "vk-iframe" !== UrlUtils_UrlUtils.getParameter("disable-ads") && this.setListeners();
    }
    putTemplate() {
      this._$container.addClasses(["block", "change-log", "scroll"]), this._$title.addClasses(["title"]), this._$container.appendChild(this._$title.get$Element()), this._$titleSpan.setText(this.options.language.title), this._$title.appendChild(this._$titleSpan.get$Element()), this._$changeLog.addClasses(["change-log-list"]), this._$container.appendChild(this._$changeLog.get$Element()), this.setChangeLog();
    }
    setChangeLog() {
      this._$changeLog.appendHtml(this.getChangeLogHtml());
    }
    setListeners() {
      np.window.events.on("windowLoaded", () => this.putTemplate());
    }
    getChangeLogHtml() {
      let e = "";
      for (const t in this.options.language.log) e += this.getHtml(t);
      return e;
    }
    getHtml(e) {
      let t = "";
      return np.storage.getItem(`ChangeLog_v${this.options.language.log[e].version}`) || (t = "new", np.storage.setItem(`ChangeLog_v${this.options.language.log[e].version}`, "1")), `\n            <div class="change ${t}">\n                <div class="label">${this.options.language.new}</div>\n                <div class="content">${this.options.language.log[e].text.join("")}</div>\n        ` + "</div>";
    }
    get$Container() {
      return this._$container.get$Element();
    }
  }
  class SkinText_SkinTextOptions extends SkinSimple_SkinSimpleOptions {
    constructor() {
      super(...arguments), this.text = "", this.fontSize = 10, this.font = "";
    }
  }
  class SkinText_SkinText extends SkinSimple_SkinSimple {
    constructor(e) {
      super(e), this._options = new SkinText_SkinTextOptions;
    }
    createGeometry() {
      return new yl(this._options.text, {font: np.fonts.getFont(this._options.font), size: this._options.fontSize, height: 1, curveSegments: 5});
    }
    set text (e) {
      this._options.text !== e && (this._options.text = e, this.update());
    }
    set fontSize (e) {
      this._options.fontSize !== e && (this._options.fontSize = e, this.update());
    }
    update() {
      this.destroy(), this.initialize();
    }
  }
  class ShapesHelper_ShapesHelper {
    static getRoundedRectShape(e = 2, t = 2, n = 1) {
      const i = new zc;
      return i.moveTo(-e / 2 + n, t / 2), i.lineTo(e / 2, t / 2), i.absarc(e / 2 - n, t / 2 - n, n, Math.PI / 2, 0, true), i.lineTo(e / 2, -t / 2), i.absarc(e / 2 - n, -t / 2 + n, n, 0, 3 * Math.PI / 2, true), i.lineTo(-e / 2, -t / 2), i.absarc(-e / 2 + n, -t / 2 + n, n, 3 * Math.PI / 2, Math.PI, true), i.absarc(-e / 2 + n, t / 2 - n, n, Math.PI, Math.PI / 2, true), i;
    }
  }
  class SkinRoundedRectangle_SkinRoundedRectangleOptions extends SkinSimple_SkinSimpleOptions {
    constructor() {
      super(...arguments), this.width = 0, this.height = 0, this.borderRadius = 0;
    }
  }
  class SkinRoundedRectangle_SkinRoundedRectangle extends SkinSimple_SkinSimple {
    constructor(e) {
      super(e), this._options = new SkinRoundedRectangle_SkinRoundedRectangleOptions;
    }
    createGeometry() {
      return new Tl(ShapesHelper_ShapesHelper.getRoundedRectShape(this._options.width, this._options.height, this._options.borderRadius));
    }
  }
  class AbilityChatMessageAbovePlayer_AbilityChatMessageAbovePlayer extends Ability_Ability {
    constructor() {
      super(...arguments), this._textFontSize = 8, this._backgroundPadding = 40, this._backgroundColor = 4473924, this._backgroundBorderRadius = 3, this._messageDisplayedTimeout = 4e3;
    }
    showMessage(e) {
      if (e.length > 60) return;
      this.tryHideMessage();
      let t = np.languages.parseText(e);
      const n = utils_Color_Color.WHITE.clone();
      ChatColor_ChatColor.isExistsColor(e) && (n.copy(ChatColor_ChatColor.getFirstColor(t)), t = ChatColor_ChatColor.clearFromColors(t)), this._text = new SkinText_SkinText({text: t, font: "defaultFont", fontSize: this._textFontSize, color: n, renderOrder: this.parentEntity.skin.getRenderOrder(), transparent: true}), this._text.initialize();
      const i = (new Ln).setFromObject(this._text.getObject3d());
      this._textSize = i.getSize(new It), this._background = new SkinRoundedRectangle_SkinRoundedRectangle({width: this._textSize.x + this._backgroundPadding / 2, height: this._textSize.y + this._backgroundPadding / 2, borderRadius: this._backgroundBorderRadius, color: utils_Color_Color.fromScalar(this._backgroundColor), renderOrder: this.parentEntity.skin.getRenderOrder()}), this._background.initialize(), this._background.setOpacity(0.8), this.onDraw(), np.canvas.addToWorldObject(this._background.getObject3d()), np.canvas.addToWorldObject(this._text.getObject3d()), this._timeout = setTimeout(() => this.destroyMessage(), this._messageDisplayedTimeout);
    }
    tryHideMessage() {
      this.isDisplayedMessage() && (this._timeout && (clearTimeout(this._timeout), this._timeout = null), this.destroyMessage());
    }
    onDraw() {
      if (super.onDraw(), this.isDisplayedMessage()) {
        this._text.getObject3d().position.copy(this.parentEntity.position.toThreeVector3());
        const e = this._textSize.x / 2, t = this._textSize.y / 2;
        this._text.getObject3d().position.x -= e, this._text.getObject3d().position.y += 1.5 * this.parentEntity.size.y, this._text.getObject3d().position.z = Math.max(110, this.parentEntity.position.z + 33), this._background.getObject3d().position.copy(this._text.getObject3d().position), this._background.getObject3d().position.x += e, this._background.getObject3d().position.y += 0.8 * t, this._background.getObject3d().position.z -= 0.1;
      }
    }
    isDisplayedMessage() {
      return this._background && this._text;
    }
    onRemove() {
      super.onRemove(), this.destroyMessage();
    }
    destroy() {
      super.destroy(), this.destroyMessage();
    }
    destroyMessage() {
      this._timeout = null, this.destroyText(), this.destroyBackground();
    }
    destroyText() {
      this._text && (np.canvas.removeFromWorldObject(this._text.getObject3d()), this._text.destroy(), this._text = null);
    }
    destroyBackground() {
      this._background && (np.canvas.removeFromWorldObject(this._background.getObject3d()), this._background.destroy(), this._background = null);
    }
  }
  class ChatMessageAbovePlayer_ChatMessageAbovePlayer extends Module_Module {
    initialize() {
      super.initialize(), np.socket.events.on("chat", e => this.onChat(e));
    }
    onChat(e) {
      np.entities.getEntityByServerUuid(e.fromUuid).filter(e => e.displayed).ifPresent(t => {
        t.abilities.getAbility(AbilityChatMessageAbovePlayer_AbilityChatMessageAbovePlayer).ifPresent(t => t.showMessage(e.message));
      });
    }
  }
  class SvgIconsHelper_SvgIcon {
    constructor(e, t = new vector_Vector2_Vector2(512, 512)) {
      this.d = [], this.viewPort = new vector_Vector2_Vector2(512, 512), this.d = e, this.viewPort = t;
    }
  }
  class SvgIconsHelper {
    static getIcon(e, t) {
      const n = document.createElementNS("http://www.w3.org/2000/svg", "svg");
      n.classList.add("icon"), n.setAttributeNS(null, "viewBox", `0 0 ${e.viewPort.x} ${e.viewPort.y}`), n.style.width = "100%", n.style.height = "100%", t && t.scale && (n.style.width = `${100 * t.scale.x}%`, n.style.height = `${100 * t.scale.y}%`);
      for (let i = 0; i < e.d.length; i++) {
        const r = document.createElementNS("http://www.w3.org/2000/svg", "path");
        r.setAttributeNS(null, "d", e.d[i]), t && t.color && (r.style.fill = t.color.getHex()), 2 === e.d.length && 0 === i && r.classList.add("first-tone"), n.appendChild(r);
      }
      return n;
    }
  }
  SvgIconsHelper.download = new SvgIconsHelper_SvgIcon(["M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z"]), SvgIconsHelper.trash = new SvgIconsHelper_SvgIcon(["M0 84V56c0-13.3 10.7-24 24-24h112l9.4-18.7c4-8.2 12.3-13.3 21.4-13.3h114.3c9.1 0 17.4 5.1 21.5 13.3L312 32h112c13.3 0 24 10.7 24 24v28c0 6.6-5.4 12-12 12H12C5.4 96 0 90.6 0 84zm415.2 56.7L394.8 467c-1.6 25.3-22.6 45-47.9 45H101.1c-25.3 0-46.3-19.7-47.9-45L32.8 140.7c-.4-6.9 5.1-12.7 12-12.7h358.5c6.8 0 12.3 5.8 11.9 12.7z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.file = new SvgIconsHelper_SvgIcon(["M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm160-14.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z"], new vector_Vector2_Vector2(384, 512)), SvgIconsHelper.ghost = new SvgIconsHelper_SvgIcon(["M186.1.09C81.01 3.24 0 94.92 0 200.05v263.92c0 14.26 17.23 21.39 27.31 11.31l24.92-18.53c6.66-4.95 16-3.99 21.51 2.21l42.95 48.35c6.25 6.25 16.38 6.25 22.63 0l40.72-45.85c6.37-7.17 17.56-7.17 23.92 0l40.72 45.85c6.25 6.25 16.38 6.25 22.63 0l42.95-48.35c5.51-6.2 14.85-7.17 21.51-2.21l24.92 18.53c10.08 10.08 27.31 2.94 27.31-11.31V192C384 84 294.83-3.17 186.1.09zM128 224c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32zm128 0c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z"], new vector_Vector2_Vector2(384, 512)), SvgIconsHelper.cube = new SvgIconsHelper_SvgIcon(["M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z"]), SvgIconsHelper.square = new SvgIconsHelper_SvgIcon(["M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.fileCode = new SvgIconsHelper_SvgIcon(["M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zM123.206 400.505a5.4 5.4 0 0 1-7.633.246l-64.866-60.812a5.4 5.4 0 0 1 0-7.879l64.866-60.812a5.4 5.4 0 0 1 7.633.246l19.579 20.885a5.4 5.4 0 0 1-.372 7.747L101.65 336l40.763 35.874a5.4 5.4 0 0 1 .372 7.747l-19.579 20.884zm51.295 50.479l-27.453-7.97a5.402 5.402 0 0 1-3.681-6.692l61.44-211.626a5.402 5.402 0 0 1 6.692-3.681l27.452 7.97a5.4 5.4 0 0 1 3.68 6.692l-61.44 211.626a5.397 5.397 0 0 1-6.69 3.681zm160.792-111.045l-64.866 60.812a5.4 5.4 0 0 1-7.633-.246l-19.58-20.885a5.4 5.4 0 0 1 .372-7.747L284.35 336l-40.763-35.874a5.4 5.4 0 0 1-.372-7.747l19.58-20.885a5.4 5.4 0 0 1 7.633-.246l64.866 60.812a5.4 5.4 0 0 1-.001 7.879z"], new vector_Vector2_Vector2(348, 512)), SvgIconsHelper.folder = new SvgIconsHelper_SvgIcon(["M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z"]), SvgIconsHelper.openFolder = new SvgIconsHelper_SvgIcon(["M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z"], new vector_Vector2_Vector2(576, 512)), SvgIconsHelper.worldAmericas = new SvgIconsHelper_SvgIcon(["M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm82.29 357.6c-3.9 3.88-7.99 7.95-11.31 11.28-2.99 3-5.1 6.7-6.17 10.71-1.51 5.66-2.73 11.38-4.77 16.87l-17.39 46.85c-13.76 3-28 4.69-42.65 4.69v-27.38c1.69-12.62-7.64-36.26-22.63-51.25-6-6-9.37-14.14-9.37-22.63v-32.01c0-11.64-6.27-22.34-16.46-27.97-14.37-7.95-34.81-19.06-48.81-26.11-11.48-5.78-22.1-13.14-31.65-21.75l-.8-.72a114.792 114.792 0 0 1-18.06-20.74c-9.38-13.77-24.66-36.42-34.59-51.14 20.47-45.5 57.36-82.04 103.2-101.89l24.01 12.01C203.48 89.74 216 82.01 216 70.11v-11.3c7.99-1.29 16.12-2.11 24.39-2.42l28.3 28.3c6.25 6.25 6.25 16.38 0 22.63L264 112l-10.34 10.34c-3.12 3.12-3.12 8.19 0 11.31l4.69 4.69c3.12 3.12 3.12 8.19 0 11.31l-8 8a8.008 8.008 0 0 1-5.66 2.34h-8.99c-2.08 0-4.08.81-5.58 2.27l-9.92 9.65a8.008 8.008 0 0 0-1.58 9.31l15.59 31.19c2.66 5.32-1.21 11.58-7.15 11.58h-5.64c-1.93 0-3.79-.7-5.24-1.96l-9.28-8.06a16.017 16.017 0 0 0-15.55-3.1l-31.17 10.39a11.95 11.95 0 0 0-8.17 11.34c0 4.53 2.56 8.66 6.61 10.69l11.08 5.54c9.41 4.71 19.79 7.16 30.31 7.16s22.59 27.29 32 32h66.75c8.49 0 16.62 3.37 22.63 9.37l13.69 13.69a30.503 30.503 0 0 1 8.93 21.57 46.536 46.536 0 0 1-13.72 32.98zM417 274.25c-5.79-1.45-10.84-5-14.15-9.97l-17.98-26.97a23.97 23.97 0 0 1 0-26.62l19.59-29.38c2.32-3.47 5.5-6.29 9.24-8.15l12.98-6.49C440.2 193.59 448 223.87 448 256c0 8.67-.74 17.16-1.82 25.54L417 274.25z"], new vector_Vector2_Vector2(496, 512)), SvgIconsHelper.groupObjects = new SvgIconsHelper_SvgIcon(["M480 128V96h20c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v20H64V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v40c0 6.627 5.373 12 12 12h20v320H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-20h384v20c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V128zM96 276V140c0-6.627 5.373-12 12-12h168c6.627 0 12 5.373 12 12v136c0 6.627-5.373 12-12 12H108c-6.627 0-12-5.373-12-12zm320 96c0 6.627-5.373 12-12 12H236c-6.627 0-12-5.373-12-12v-52h72c13.255 0 24-10.745 24-24v-72h84c6.627 0 12 5.373 12 12v136z"]), SvgIconsHelper.crossCircle = new SvgIconsHelper_SvgIcon(["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1"]), SvgIconsHelper.cross = new SvgIconsHelper_SvgIcon(["M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"], new vector_Vector2_Vector2(352, 512)), SvgIconsHelper.notifyCircle = new SvgIconsHelper_SvgIcon(["M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"]), SvgIconsHelper.warningCircle = new SvgIconsHelper_SvgIcon(["M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"], new vector_Vector2_Vector2(576, 512)), SvgIconsHelper.successCircle = new SvgIconsHelper_SvgIcon(["M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"]), SvgIconsHelper.thumbsUp = new SvgIconsHelper_SvgIcon(["M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z"]), SvgIconsHelper.caretLeft = new SvgIconsHelper_SvgIcon(["M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z"], new vector_Vector2_Vector2(192, 512)), SvgIconsHelper.terminal = new SvgIconsHelper_SvgIcon(["M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z"], new vector_Vector2_Vector2(640, 512)), SvgIconsHelper.cog = new SvgIconsHelper_SvgIcon(["M444.788 291.1l42.616 24.599c4.867 2.809 7.126 8.618 5.459 13.985-11.07 35.642-29.97 67.842-54.689 94.586a12.016 12.016 0 0 1-14.832 2.254l-42.584-24.595a191.577 191.577 0 0 1-60.759 35.13v49.182a12.01 12.01 0 0 1-9.377 11.718c-34.956 7.85-72.499 8.256-109.219.007-5.49-1.233-9.403-6.096-9.403-11.723v-49.184a191.555 191.555 0 0 1-60.759-35.13l-42.584 24.595a12.016 12.016 0 0 1-14.832-2.254c-24.718-26.744-43.619-58.944-54.689-94.586-1.667-5.366.592-11.175 5.459-13.985L67.212 291.1a193.48 193.48 0 0 1 0-70.199l-42.616-24.599c-4.867-2.809-7.126-8.618-5.459-13.985 11.07-35.642 29.97-67.842 54.689-94.586a12.016 12.016 0 0 1 14.832-2.254l42.584 24.595a191.577 191.577 0 0 1 60.759-35.13V25.759a12.01 12.01 0 0 1 9.377-11.718c34.956-7.85 72.499-8.256 109.219-.007 5.49 1.233 9.403 6.096 9.403 11.723v49.184a191.555 191.555 0 0 1 60.759 35.13l42.584-24.595a12.016 12.016 0 0 1 14.832 2.254c24.718 26.744 43.619 58.944 54.689 94.586 1.667 5.366-.592 11.175-5.459 13.985L444.788 220.9a193.485 193.485 0 0 1 0 70.2zM336 256c0-44.112-35.888-80-80-80s-80 35.888-80 80 35.888 80 80 80 80-35.888 80-80z"]), SvgIconsHelper.user = new SvgIconsHelper_SvgIcon(["M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.users = new SvgIconsHelper_SvgIcon(["M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z"], new vector_Vector2_Vector2(640, 512)), SvgIconsHelper.signOut = new SvgIconsHelper_SvgIcon(["M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z"]), SvgIconsHelper.expand = new SvgIconsHelper_SvgIcon(["M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.compress = new SvgIconsHelper_SvgIcon(["M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.menu = new SvgIconsHelper_SvgIcon(["M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.doorOpen = new SvgIconsHelper_SvgIcon(["M624 448h-80V113.45C544 86.19 522.47 64 496 64H384v64h96v384h144c8.84 0 16-7.16 16-16v-32c0-8.84-7.16-16-16-16zM312.24 1.01l-192 49.74C105.99 54.44 96 67.7 96 82.92V448H16c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h336V33.18c0-21.58-19.56-37.41-39.76-32.17zM264 288c-13.25 0-24-14.33-24-32s10.75-32 24-32 24 14.33 24 32-10.75 32-24 32z"], new vector_Vector2_Vector2(640, 512)), SvgIconsHelper.link = new SvgIconsHelper_SvgIcon(["M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"]), SvgIconsHelper.check = new SvgIconsHelper_SvgIcon(["M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"]), SvgIconsHelper.play = new SvgIconsHelper_SvgIcon(["M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.tw = new SvgIconsHelper_SvgIcon(["M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"]), SvgIconsHelper.fb = new SvgIconsHelper_SvgIcon(["M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"], new vector_Vector2_Vector2(320, 512)), SvgIconsHelper.vk = new SvgIconsHelper_SvgIcon(["M545.451,400.298c-0.664-1.431-1.283-2.618-1.858-3.569c-9.514-17.135-27.695-38.167-54.532-63.102l-0.567-0.571l-0.284-0.28l-0.287-0.287h-0.288c-12.18-11.611-19.893-19.418-23.123-23.415c-5.91-7.614-7.234-15.321-4.004-23.13c2.282-5.9,10.854-18.36,25.696-37.397c7.807-10.089,13.99-18.175,18.556-24.267c32.931-43.78,47.208-71.756,42.828-83.939l-1.701-2.847c-1.143-1.714-4.093-3.282-8.846-4.712c-4.764-1.427-10.853-1.663-18.278-0.712l-82.224,0.568c-1.332-0.472-3.234-0.428-5.712,0.144c-2.475,0.572-3.713,0.859-3.713,0.859l-1.431,0.715l-1.136,0.859c-0.952,0.568-1.999,1.567-3.142,2.995c-1.137,1.423-2.088,3.093-2.848,4.996c-8.952,23.031-19.13,44.444-30.553,64.238c-7.043,11.803-13.511,22.032-19.418,30.693c-5.899,8.658-10.848,15.037-14.842,19.126c-4,4.093-7.61,7.372-10.852,9.849c-3.237,2.478-5.708,3.525-7.419,3.142c-1.715-0.383-3.33-0.763-4.859-1.143c-2.663-1.714-4.805-4.045-6.42-6.995c-1.622-2.95-2.714-6.663-3.285-11.136c-0.568-4.476-0.904-8.326-1-11.563c-0.089-3.233-0.048-7.806,0.145-13.706c0.198-5.903,0.287-9.897,0.287-11.991c0-7.234,0.141-15.085,0.424-23.555c0.288-8.47,0.521-15.181,0.716-20.125c0.194-4.949,0.284-10.185,0.284-15.705s-0.336-9.849-1-12.991c-0.656-3.138-1.663-6.184-2.99-9.137c-1.335-2.95-3.289-5.232-5.853-6.852c-2.569-1.618-5.763-2.902-9.564-3.856c-10.089-2.283-22.936-3.518-38.547-3.71c-35.401-0.38-58.148,1.906-68.236,6.855c-3.997,2.091-7.614,4.948-10.848,8.562c-3.427,4.189-3.905,6.475-1.431,6.851c11.422,1.711,19.508,5.804,24.267,12.275l1.715,3.429c1.334,2.474,2.666,6.854,3.999,13.134c1.331,6.28,2.19,13.227,2.568,20.837c0.95,13.897,0.95,25.793,0,35.689c-0.953,9.9-1.853,17.607-2.712,23.127c-0.859,5.52-2.143,9.993-3.855,13.418c-1.715,3.426-2.856,5.52-3.428,6.28c-0.571,0.76-1.047,1.239-1.425,1.427c-2.474,0.948-5.047,1.431-7.71,1.431c-2.667,0-5.901-1.334-9.707-4c-3.805-2.666-7.754-6.328-11.847-10.992c-4.093-4.665-8.709-11.184-13.85-19.558c-5.137-8.374-10.467-18.271-15.987-29.691l-4.567-8.282c-2.855-5.328-6.755-13.086-11.704-23.267c-4.952-10.185-9.329-20.037-13.134-29.554c-1.521-3.997-3.806-7.04-6.851-9.134l-1.429-0.859c-0.95-0.76-2.475-1.567-4.567-2.427c-2.095-0.859-4.281-1.475-6.567-1.854l-78.229,0.568c-7.994,0-13.418,1.811-16.274,5.428l-1.143,1.711C0.288,140.146,0,141.668,0,143.763c0,2.094,0.571,4.664,1.714,7.707c11.42,26.84,23.839,52.725,37.257,77.659c13.418,24.934,25.078,45.019,34.973,60.237c9.897,15.229,19.985,29.602,30.264,43.112c10.279,13.515,17.083,22.176,20.412,25.981c3.333,3.812,5.951,6.662,7.854,8.565l7.139,6.851c4.568,4.569,11.276,10.041,20.127,16.416c8.853,6.379,18.654,12.659,29.408,18.85c10.756,6.181,23.269,11.225,37.546,15.126c14.275,3.905,28.169,5.472,41.684,4.716h32.834c6.659-0.575,11.704-2.669,15.133-6.283l1.136-1.431c0.764-1.136,1.479-2.901,2.139-5.276c0.668-2.379,1-5,1-7.851c-0.195-8.183,0.428-15.558,1.852-22.124c1.423-6.564,3.045-11.513,4.859-14.846c1.813-3.33,3.859-6.14,6.136-8.418c2.282-2.283,3.908-3.666,4.862-4.142c0.948-0.479,1.705-0.804,2.276-0.999c4.568-1.522,9.944-0.048,16.136,4.429c6.187,4.473,11.99,9.996,17.418,16.56c5.425,6.57,11.943,13.941,19.555,22.124c7.617,8.186,14.277,14.271,19.985,18.274l5.708,3.426c3.812,2.286,8.761,4.38,14.853,6.283c6.081,1.902,11.409,2.378,15.984,1.427l73.087-1.14c7.229,0,12.854-1.197,16.844-3.572c3.998-2.379,6.373-5,7.139-7.851c0.764-2.854,0.805-6.092,0.145-9.712C546.782,404.25,546.115,401.725,545.451,400.298z"], new vector_Vector2_Vector2(548.385, 548.385)), SvgIconsHelper.discord = new SvgIconsHelper_SvgIcon(["M469.7,67.6l-1.7-4.2c0-0.1-0.1-0.2-0.3-0.3l-4.1-1.9c-34.1-15.5-82.2-19.3-124.8-21H291c-0.5,0-0.7,0.7-0.2,1l98.5,47.2c0.6,0.3,0.2,1.1-0.3,0.9c-44.3-11.6-89-17.4-133.2-17.4c-44,0-88.6,5.8-132.8,17.3c-0.6,0.2-0.9-0.7-0.3-0.9l101.9-47.1c0.5-0.2,0.3-1-0.2-1h-51.8c-42.6,1.7-90.7,5.5-124.8,21l-4.1,1.9c-0.1,0.1-0.2,0.2-0.3,0.3l-1.7,4.2C6.7,156.1-3.2,306.2,7.4,400.3l0.6,4.9l3.9,3c54.5,42.3,127.4,64,173.3,69.8l5.9,0.7c1.9,0.2,3.8-0.9,4.5-2.7l29.8-79.7c0.9-2.5-0.7-5.2-3.3-5.6l-9.2-1.4c-31.9-5-77.2-18.3-115.4-53c-0.8-0.7,0-2.1,1-1.7c3.1,1.2,6.5,2.5,10.1,3.9c8.6,3.4,17.6,6.9,23.4,8.3c41,9.8,82.6,14.7,123.7,14.7v-0.7h0.1l0,0.7c41,0,82.6-4.9,123.6-14.7c5.8-1.4,14.8-4.9,23.4-8.3c3.5-1.4,7-2.7,10.1-3.9c1-0.4,1.8,0.9,1,1.7c-38.1,34.5-83.4,47.8-115.4,52.8l-9.2,1.4c-2.6,0.4-4.2,3.1-3.3,5.6l29.9,79.9c0.7,1.8,2.5,2.9,4.5,2.7l5.9-0.7c45.9-5.8,118.8-27.5,173.3-69.8l3.9-3l0.6-4.9C514.6,306.2,504.6,156.1,469.7,67.6z M158.2,284.8c-37.1,3.3-68-27.6-64.7-64.7c2.5-28.4,25.4-51.3,53.8-53.8c37.1-3.3,68,27.6,64.7,64.7C209.5,259.3,186.7,282.2,158.2,284.8zM364,284.8c-37.1,3.3-68-27.6-64.7-64.7c2.5-28.4,25.4-51.3,53.8-53.8c37.1-3.3,68,27.6,64.7,64.7C415.3,259.3,392.4,282.2,364,284.8z"]), SvgIconsHelper.question = new SvgIconsHelper_SvgIcon(["M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"], new vector_Vector2_Vector2(384, 512)), SvgIconsHelper.macos = new SvgIconsHelper_SvgIcon(["M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z"], new vector_Vector2_Vector2(384, 512)), SvgIconsHelper.ubuntu = new SvgIconsHelper_SvgIcon(["M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm52.7 93c8.8-15.2 28.3-20.5 43.5-11.7 15.3 8.8 20.5 28.3 11.7 43.6-8.8 15.2-28.3 20.5-43.5 11.7-15.3-8.9-20.5-28.4-11.7-43.6zM87.4 287.9c-17.6 0-31.9-14.3-31.9-31.9 0-17.6 14.3-31.9 31.9-31.9 17.6 0 31.9 14.3 31.9 31.9 0 17.6-14.3 31.9-31.9 31.9zm28.1 3.1c22.3-17.9 22.4-51.9 0-69.9 8.6-32.8 29.1-60.7 56.5-79.1l23.7 39.6c-51.5 36.3-51.5 112.5 0 148.8L172 370c-27.4-18.3-47.8-46.3-56.5-79zm228.7 131.7c-15.3 8.8-34.7 3.6-43.5-11.7-8.8-15.3-3.6-34.8 11.7-43.6 15.2-8.8 34.7-3.6 43.5 11.7 8.8 15.3 3.6 34.8-11.7 43.6zm.3-69.5c-26.7-10.3-56.1 6.6-60.5 35-5.2 1.4-48.9 14.3-96.7-9.4l22.5-40.3c57 26.5 123.4-11.7 128.9-74.4l46.1.7c-2.3 34.5-17.3 65.5-40.3 88.4zm-5.9-105.3c-5.4-62-71.3-101.2-128.9-74.4l-22.5-40.3c47.9-23.7 91.5-10.8 96.7-9.4 4.4 28.3 33.8 45.3 60.5 35 23.1 22.9 38 53.9 40.2 88.5l-46 .6z"], new vector_Vector2_Vector2(496, 512)), SvgIconsHelper.linux = new SvgIconsHelper_SvgIcon(["M220.8 123.3c1 .5 1.8 1.7 3 1.7 1.1 0 2.8-.4 2.9-1.5.2-1.4-1.9-2.3-3.2-2.9-1.7-.7-3.9-1-5.5-.1-.4.2-.8.7-.6 1.1.3 1.3 2.3 1.1 3.4 1.7zm-21.9 1.7c1.2 0 2-1.2 3-1.7 1.1-.6 3.1-.4 3.5-1.6.2-.4-.2-.9-.6-1.1-1.6-.9-3.8-.6-5.5.1-1.3.6-3.4 1.5-3.2 2.9.1 1 1.8 1.5 2.8 1.4zM420 403.8c-3.6-4-5.3-11.6-7.2-19.7-1.8-8.1-3.9-16.8-10.5-22.4-1.3-1.1-2.6-2.1-4-2.9-1.3-.8-2.7-1.5-4.1-2 9.2-27.3 5.6-54.5-3.7-79.1-11.4-30.1-31.3-56.4-46.5-74.4-17.1-21.5-33.7-41.9-33.4-72C311.1 85.4 315.7.1 234.8 0 132.4-.2 158 103.4 156.9 135.2c-1.7 23.4-6.4 41.8-22.5 64.7-18.9 22.5-45.5 58.8-58.1 96.7-6 17.9-8.8 36.1-6.2 53.3-6.5 5.8-11.4 14.7-16.6 20.2-4.2 4.3-10.3 5.9-17 8.3s-14 6-18.5 14.5c-2.1 3.9-2.8 8.1-2.8 12.4 0 3.9.6 7.9 1.2 11.8 1.2 8.1 2.5 15.7.8 20.8-5.2 14.4-5.9 24.4-2.2 31.7 3.8 7.3 11.4 10.5 20.1 12.3 17.3 3.6 40.8 2.7 59.3 12.5 19.8 10.4 39.9 14.1 55.9 10.4 11.6-2.6 21.1-9.6 25.9-20.2 12.5-.1 26.3-5.4 48.3-6.6 14.9-1.2 33.6 5.3 55.1 4.1.6 2.3 1.4 4.6 2.5 6.7v.1c8.3 16.7 23.8 24.3 40.3 23 16.6-1.3 34.1-11 48.3-27.9 13.6-16.4 36-23.2 50.9-32.2 7.4-4.5 13.4-10.1 13.9-18.3.4-8.2-4.4-17.3-15.5-29.7zM223.7 87.3c9.8-22.2 34.2-21.8 44-.4 6.5 14.2 3.6 30.9-4.3 40.4-1.6-.8-5.9-2.6-12.6-4.9 1.1-1.2 3.1-2.7 3.9-4.6 4.8-11.8-.2-27-9.1-27.3-7.3-.5-13.9 10.8-11.8 23-4.1-2-9.4-3.5-13-4.4-1-6.9-.3-14.6 2.9-21.8zM183 75.8c10.1 0 20.8 14.2 19.1 33.5-3.5 1-7.1 2.5-10.2 4.6 1.2-8.9-3.3-20.1-9.6-19.6-8.4.7-9.8 21.2-1.8 28.1 1 .8 1.9-.2-5.9 5.5-15.6-14.6-10.5-52.1 8.4-52.1zm-13.6 60.7c6.2-4.6 13.6-10 14.1-10.5 4.7-4.4 13.5-14.2 27.9-14.2 7.1 0 15.6 2.3 25.9 8.9 6.3 4.1 11.3 4.4 22.6 9.3 8.4 3.5 13.7 9.7 10.5 18.2-2.6 7.1-11 14.4-22.7 18.1-11.1 3.6-19.8 16-38.2 14.9-3.9-.2-7-1-9.6-2.1-8-3.5-12.2-10.4-20-15-8.6-4.8-13.2-10.4-14.7-15.3-1.4-4.9 0-9 4.2-12.3zm3.3 334c-2.7 35.1-43.9 34.4-75.3 18-29.9-15.8-68.6-6.5-76.5-21.9-2.4-4.7-2.4-12.7 2.6-26.4v-.2c2.4-7.6.6-16-.6-23.9-1.2-7.8-1.8-15 .9-20 3.5-6.7 8.5-9.1 14.8-11.3 10.3-3.7 11.8-3.4 19.6-9.9 5.5-5.7 9.5-12.9 14.3-18 5.1-5.5 10-8.1 17.7-6.9 8.1 1.2 15.1 6.8 21.9 16l19.6 35.6c9.5 19.9 43.1 48.4 41 68.9zm-1.4-25.9c-4.1-6.6-9.6-13.6-14.4-19.6 7.1 0 14.2-2.2 16.7-8.9 2.3-6.2 0-14.9-7.4-24.9-13.5-18.2-38.3-32.5-38.3-32.5-13.5-8.4-21.1-18.7-24.6-29.9s-3-23.3-.3-35.2c5.2-22.9 18.6-45.2 27.2-59.2 2.3-1.7.8 3.2-8.7 20.8-8.5 16.1-24.4 53.3-2.6 82.4.6-20.7 5.5-41.8 13.8-61.5 12-27.4 37.3-74.9 39.3-112.7 1.1.8 4.6 3.2 6.2 4.1 4.6 2.7 8.1 6.7 12.6 10.3 12.4 10 28.5 9.2 42.4 1.2 6.2-3.5 11.2-7.5 15.9-9 9.9-3.1 17.8-8.6 22.3-15 7.7 30.4 25.7 74.3 37.2 95.7 6.1 11.4 18.3 35.5 23.6 64.6 3.3-.1 7 .4 10.9 1.4 13.8-35.7-11.7-74.2-23.3-84.9-4.7-4.6-4.9-6.6-2.6-6.5 12.6 11.2 29.2 33.7 35.2 59 2.8 11.6 3.3 23.7.4 35.7 16.4 6.8 35.9 17.9 30.7 34.8-2.2-.1-3.2 0-4.2 0 3.2-10.1-3.9-17.6-22.8-26.1-19.6-8.6-36-8.6-38.3 12.5-12.1 4.2-18.3 14.7-21.4 27.3-2.8 11.2-3.6 24.7-4.4 39.9-.5 7.7-3.6 18-6.8 29-32.1 22.9-76.7 32.9-114.3 7.2zm257.4-11.5c-.9 16.8-41.2 19.9-63.2 46.5-13.2 15.7-29.4 24.4-43.6 25.5s-26.5-4.8-33.7-19.3c-4.7-11.1-2.4-23.1 1.1-36.3 3.7-14.2 9.2-28.8 9.9-40.6.8-15.2 1.7-28.5 4.2-38.7 2.6-10.3 6.6-17.2 13.7-21.1.3-.2.7-.3 1-.5.8 13.2 7.3 26.6 18.8 29.5 12.6 3.3 30.7-7.5 38.4-16.3 9-.3 15.7-.9 22.6 5.1 9.9 8.5 7.1 30.3 17.1 41.6 10.6 11.6 14 19.5 13.7 24.6zM173.3 148.7c2 1.9 4.7 4.5 8 7.1 6.6 5.2 15.8 10.6 27.3 10.6 11.6 0 22.5-5.9 31.8-10.8 4.9-2.6 10.9-7 14.8-10.4s5.9-6.3 3.1-6.6-2.6 2.6-6 5.1c-4.4 3.2-9.7 7.4-13.9 9.8-7.4 4.2-19.5 10.2-29.9 10.2s-18.7-4.8-24.9-9.7c-3.1-2.5-5.7-5-7.7-6.9-1.5-1.4-1.9-4.6-4.3-4.9-1.4-.1-1.8 3.7 1.7 6.5z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.windows = new SvgIconsHelper_SvgIcon(["M0 93.7l183.6-25.3v177.4H0V93.7zm0 324.6l183.6 25.3V268.4H0v149.9zm203.8 28L448 480V268.4H203.8v177.9zm0-380.6v180.1H448V32L203.8 65.7z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.undo = new SvgIconsHelper_SvgIcon(["M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z"]), SvgIconsHelper.lock = new SvgIconsHelper_SvgIcon(["M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.unLock = new SvgIconsHelper_SvgIcon(["M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.lockOpen = new SvgIconsHelper_SvgIcon(["M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z"], new vector_Vector2_Vector2(576, 512)), SvgIconsHelper.brush = new SvgIconsHelper_SvgIcon(["M167.02 309.34c-40.12 2.58-76.53 17.86-97.19 72.3-2.35 6.21-8 9.98-14.59 9.98-11.11 0-45.46-27.67-55.25-34.35C0 439.62 37.93 512 128 512c75.86 0 128-43.77 128-120.19 0-3.11-.65-6.08-.97-9.13l-88.01-73.34zM457.89 0c-15.16 0-29.37 6.71-40.21 16.45C213.27 199.05 192 203.34 192 257.09c0 13.7 3.25 26.76 8.73 38.7l63.82 53.18c7.21 1.8 14.64 3.03 22.39 3.03 62.11 0 98.11-45.47 211.16-256.46 7.38-14.35 13.9-29.85 13.9-45.99C512 20.64 486 0 457.89 0z"], new vector_Vector2_Vector2(512, 512)), SvgIconsHelper.handRock = new SvgIconsHelper_SvgIcon(["M464.8 80c-26.9-.4-48.8 21.2-48.8 48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v32h-8V80.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v48h-8V96.8c0-26.3-20.9-48.3-47.2-48.8-26.9-.4-48.8 21.2-48.8 48v136l-8-7.1v-48.1c0-26.3-20.9-48.3-47.2-48.8C21.9 127.6 0 149.2 0 176v66.4c0 27.4 11.7 53.5 32.2 71.8l111.7 99.3c10.2 9.1 16.1 22.2 16.1 35.9v6.7c0 13.3 10.7 24 24 24h240c13.3 0 24-10.7 24-24v-2.9c0-12.8 2.6-25.5 7.5-37.3l49-116.3c5-11.8 7.5-24.5 7.5-37.3V128.8c0-26.3-20.9-48.4-47.2-48.8z"], new vector_Vector2_Vector2(512, 512)), SvgIconsHelper.handScissors = new SvgIconsHelper_SvgIcon(["M216 440c0-22.092 17.909-40 40-40v-8h-32c-22.091 0-40-17.908-40-40s17.909-40 40-40h32v-8H48c-26.51 0-48-21.49-48-48s21.49-48 48-48h208v-13.572l-177.551-69.74c-24.674-9.694-36.818-37.555-27.125-62.228 9.693-24.674 37.554-36.817 62.228-27.124l190.342 74.765 24.872-31.09c12.306-15.381 33.978-19.515 51.081-9.741l112 64A40.002 40.002 0 0 1 512 168v240c0 18.562-12.77 34.686-30.838 38.937l-136 32A39.982 39.982 0 0 1 336 480h-80c-22.091 0-40-17.908-40-40z"], new vector_Vector2_Vector2(512, 512)), SvgIconsHelper.handPaper = new SvgIconsHelper_SvgIcon(["M408.781 128.007C386.356 127.578 368 146.36 368 168.79V256h-8V79.79c0-22.43-18.356-41.212-40.781-40.783C297.488 39.423 280 57.169 280 79v177h-8V40.79C272 18.36 253.644-.422 231.219.007 209.488.423 192 18.169 192 40v216h-8V80.79c0-22.43-18.356-41.212-40.781-40.783C121.488 40.423 104 58.169 104 80v235.992l-31.648-43.519c-12.993-17.866-38.009-21.817-55.877-8.823-17.865 12.994-21.815 38.01-8.822 55.877l125.601 172.705A48 48 0 0 0 172.073 512h197.59c22.274 0 41.622-15.324 46.724-37.006l26.508-112.66a192.011 192.011 0 0 0 5.104-43.975V168c.001-21.831-17.487-39.577-39.218-39.993z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.camera = new SvgIconsHelper_SvgIcon(["M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z"], new vector_Vector2_Vector2(512, 512)), SvgIconsHelper.telegramPlane = new SvgIconsHelper_SvgIcon(["M446.7 98.6l-67.6 318.8c-5.1 22.5-18.4 28.1-37.3 17.5l-103-75.9-49.7 47.8c-5.5 5.5-10.1 10.1-20.7 10.1l7.4-104.9 190.9-172.5c8.3-7.4-1.8-11.5-12.9-4.1L117.8 284 16.2 252.2c-22.1-6.9-22.5-22.1 4.6-32.7L418.2 66.4c18.4-6.9 34.5 4.1 28.5 32.2z"], new vector_Vector2_Vector2(448, 512)), SvgIconsHelper.swords = new SvgIconsHelper_SvgIcon(["M309.37 389.38l80-80L93.33 13.33 15.22.14C6.42-1.12-1.12 6.42.14 15.22l13.2 78.11 296.03 296.05zm197.94 72.68L448 402.75l31.64-59.03c3.33-6.22 2.2-13.88-2.79-18.87l-17.54-17.53c-6.25-6.25-16.38-6.25-22.63 0L307.31 436.69c-6.25 6.25-6.25 16.38 0 22.62l17.53 17.54a16 16 0 0 0 18.87 2.79L402.75 448l59.31 59.31c6.25 6.25 16.38 6.25 22.63 0l22.62-22.62c6.25-6.25 6.25-16.38 0-22.63zm-8.64-368.73l13.2-78.11c1.26-8.8-6.29-16.34-15.08-15.08l-78.11 13.2-140.05 140.03 80 80L498.67 93.33zm-345.3 185.3L100 332l-24.69-24.69c-6.25-6.25-16.38-6.25-22.62 0l-17.54 17.53a15.998 15.998 0 0 0-2.79 18.87L64 402.75 4.69 462.06c-6.25 6.25-6.25 16.38 0 22.63l22.62 22.62c6.25 6.25 16.38 6.25 22.63 0L109.25 448l59.03 31.64c6.22 3.33 13.88 2.2 18.87-2.79l17.53-17.54c6.25-6.25 6.25-16.38 0-22.62L180 412l53.37-53.37-80-80z"]), SvgIconsHelper.sword = new SvgIconsHelper_SvgIcon(["M110.11 227.59c-6.25-6.25-16.38-6.25-22.63 0l-18.79 18.8a16.005 16.005 0 0 0-2 20.19l53.39 80.09-53.43 53.43-29.26-14.63a13.902 13.902 0 0 0-16.04 2.6L4.07 405.36c-5.42 5.43-5.42 14.22 0 19.64L87 507.93c5.42 5.42 14.22 5.42 19.64 0l17.29-17.29a13.873 13.873 0 0 0 2.6-16.03l-14.63-29.26 53.43-53.43 80.09 53.39c6.35 4.23 14.8 3.39 20.19-2l18.8-18.79c6.25-6.25 6.25-16.38 0-22.63l-174.3-174.3zM493.73.16L400 16 171.89 244.11l96 96L496 112l15.83-93.73c1.51-10.56-7.54-19.61-18.1-18.11z"]), SvgIconsHelper.spiderSold = new SvgIconsHelper_SvgIcon(["M151.17 167.35L177.1 176h4.67l5.22-26.12c.72-3.58 1.8-7.58 3.21-11.79l-20.29-40.58 23.8-71.39c2.79-8.38-1.73-17.44-10.12-20.24L168.42.82c-8.38-2.8-17.45 1.73-20.24 10.12l-25.89 77.68a32.04 32.04 0 0 0 1.73 24.43l27.15 54.3zm422.14 182.03l-52.75-79.12a32.002 32.002 0 0 0-26.62-14.25H416l68.99-24.36a32.03 32.03 0 0 0 16.51-12.61l53.6-80.41c4.9-7.35 2.91-17.29-4.44-22.19l-13.31-8.88c-7.35-4.9-17.29-2.91-22.19 4.44l-50.56 75.83L404.1 208H368l-10.37-51.85C355.44 145.18 340.26 96 288 96c-52.26 0-67.44 49.18-69.63 60.15L208 208h-36.1l-60.49-20.17L60.84 112c-4.9-7.35-14.83-9.34-22.19-4.44l-13.31 8.88c-7.35 4.9-9.34 14.83-4.44 22.19l53.6 80.41a32.03 32.03 0 0 0 16.51 12.61L160 256H82.06a32.02 32.02 0 0 0-26.63 14.25L2.69 349.38c-4.9 7.35-2.92 17.29 4.44 22.19l13.31 8.88c7.35 4.9 17.29 2.91 22.19-4.44l48-72h47.06l-60.83 97.33A31.988 31.988 0 0 0 72 418.3V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-73.11l74.08-118.53c-1.01 14.05-2.08 28.11-2.08 42.21C192 399.64 232.76 448 288 448s96-48.36 96-101.43c0-14.1-1.08-28.16-2.08-42.21L456 422.89V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-77.71c0-6-1.69-11.88-4.86-16.96L438.31 304h47.06l48 72c4.9 7.35 14.84 9.34 22.19 4.44l13.31-8.88c7.36-4.9 9.34-14.83 4.44-22.18zM406.09 97.51l-20.29 40.58c1.41 4.21 2.49 8.21 3.21 11.79l5.22 26.12h4.67l25.93-8.65 27.15-54.3a31.995 31.995 0 0 0 1.73-24.43l-25.89-77.68C425.03 2.56 415.96-1.98 407.58.82l-15.17 5.06c-8.38 2.8-12.91 11.86-10.12 20.24l23.8 71.39z"], new vector_Vector2_Vector2(576, 512)), SvgIconsHelper.spider = new SvgIconsHelper_SvgIcon(["M151.17 167.35l30.6 8.65 5.22-26.12c.72-3.58 1.8-7.58 3.21-11.79l-20.29-40.58 23.8-71.39c2.79-8.38-1.73-17.44-10.12-20.24L168.42.82c-8.38-2.8-17.45 1.73-20.24 10.12l-25.89 77.68a32.04 32.04 0 0 0 1.73 24.43l27.15 54.3zm254.92-69.84l-20.29 40.58c1.41 4.21 2.49 8.21 3.21 11.79l5.22 26.12 30.6-8.65 27.15-54.3a31.992 31.992 0 0 0 1.73-24.43l-25.89-77.68C425.03 2.56 415.96-1.98 407.58.82l-15.17 5.06c-8.38 2.8-12.91 11.86-10.12 20.24l23.8 71.39zm167.22 251.87l-52.75-79.12a32.002 32.002 0 0 0-26.62-14.25H416l68.99-24.36a32.03 32.03 0 0 0 16.51-12.61l53.6-80.41c4.9-7.35 2.91-17.29-4.44-22.19l-13.31-8.88c-7.35-4.9-17.29-2.91-22.19 4.44l-50.56 75.83L404.1 208H368l-10.37-51.85C355.44 145.18 340.26 96 288 96c-52.26 0-67.44 49.18-69.63 60.15L208 208h-36.1l-60.49-20.17L60.84 112c-4.9-7.35-14.83-9.34-22.19-4.44l-13.31 8.88c-7.35 4.9-9.34 14.83-4.44 22.19l53.6 80.41a32.03 32.03 0 0 0 16.51 12.61L160 256H82.06c-10.7 0-20.69 5.35-26.62 14.25L2.69 349.38c-4.9 7.35-2.92 17.29 4.44 22.19l13.31 8.88c7.35 4.9 17.29 2.91 22.19-4.44l48-72h47.06l-60.83 97.33A31.988 31.988 0 0 0 72 418.3V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-73.11l74.08-118.53c-1.01 14.05-2.08 28.11-2.08 42.21C192 399.64 232.76 448 288 448s96-48.36 96-101.43c0-14.1-1.08-28.16-2.08-42.21L456 422.89V496c0 8.84 7.16 16 16 16h16c8.84 0 16-7.16 16-16v-77.71c0-6-1.69-11.87-4.86-16.96L438.31 304h47.06l48 72c4.9 7.35 14.84 9.34 22.19 4.44l13.31-8.88c7.36-4.9 9.34-14.83 4.44-22.18zM288 400c-28.71 0-48-27.63-48-53.43 0-35.71 3.55-71.57 10.55-106.59l14.86-74.29C266.55 160.6 271.53 144 288 144c16.46 0 21.45 16.61 22.56 21.56l14.88 74.42c7 35.02 10.55 70.87 10.55 106.58C336 372.37 316.71 400 288 400z"], new vector_Vector2_Vector2(576, 512)), SvgIconsHelper.runDuoTone = new SvgIconsHelper_SvgIcon(["M272 96a48 48 0 1 1 48-48 48 48 0 0 1-48 48z", "M384 223.81h-44l-26.06-53.2c-12.5-25.53-35.45-44.2-61.78-50.9l-71.11-21.13a95.65 95.65 0 0 0-80.84 17.12l-39.67 30.39A32 32 0 1 0 99.3 197l.18-.13 39.69-30.39c7.67-5.88 17.44-8 25.27-6.13l14.7 4.36L141.68 252A64.09 64.09 0 0 0 168 332.23l85 50.13L225.53 470a32 32 0 0 0 60.79 20c.1-.3.19-.6.28-.9l31.6-101a48.15 48.15 0 0 0-21.64-54.35l-61.24-36.11 31.31-78.21 20.27 41.39a48.31 48.31 0 0 0 43.1 26.94h54a32 32 0 1 0 0-63.95zm-270.31 93.4l-14.8 34.5H32a32 32 0 1 0 0 63.94h77.45a47.88 47.88 0 0 0 44.11-29.06l8.79-20.5-10.67-6.3a95.23 95.23 0 0 1-38-42.58z"], new vector_Vector2_Vector2(416, 512)), SvgIconsHelper.swordDuoTone = new SvgIconsHelper_SvgIcon(["M267.88 340.11l-96-96L400 16 493.73.16a16 16 0 0 1 18.1 18.11L496 112z", "M4.06 425a13.91 13.91 0 0 1 0-19.64l17.28-17.29a13.92 13.92 0 0 1 16-2.6l29.31 14.63 53.43-53.43-53.39-80.09a16 16 0 0 1 2-20.19l18.79-18.8a16 16 0 0 1 22.62 0l174.3 174.3a16 16 0 0 1 0 22.63l-18.8 18.79a16 16 0 0 1-20.18 2l-80.09-53.39-53.43 53.43 14.62 29.26a13.85 13.85 0 0 1-2.6 16l-17.29 17.29a13.88 13.88 0 0 1-19.63 0z"]), SvgIconsHelper.cameraMovieDuoTone = new SvgIconsHelper_SvgIcon(["M368.2 288H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h48v112.2a47.81 47.81 0 0 0 47.8 47.8h256.4a47.81 47.81 0 0 0 47.8-47.8V335.8a47.81 47.81 0 0 0-47.8-47.8zM128 192a64 64 0 1 0-64-64 64.07 64.07 0 0 0 64 64zm224 0a64 64 0 1 0-64-64 64.07 64.07 0 0 0 64 64z", "M535.68 260.59L448 321.07V447l87.68 60.4c17 11.68 40.32-.23 40.32-20.64V281.23c0-20.33-23.27-32.33-40.32-20.64zM352 0c-48.57 0-90.31 27.37-112 67.24C218.31 27.37 176.57 0 128 0a128 128 0 0 0 0 256h224a128 128 0 0 0 0-256zM128 192a64 64 0 1 1 64-64 64.07 64.07 0 0 1-64 64zm224 0a64 64 0 1 1 64-64 64.07 64.07 0 0 1-64 64z"]);
  class AbstractDomPushPart {
    get$Element() {
      return this.$element;
    }
  }
  class DomPushButtons_DomPushButtons extends AbstractDomPushPart {
    constructor() {
      super(), this.events = new Events_Events, this.$element = document.createElement("div"), this.$accept = document.createElement("button"), this.$reject = document.createElement("button"), this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this.$element.classList.add("buttons"), this.$reject.classList.add("reject"), this.$reject.classList.add("push-button");
      const e = SvgIconsHelper.getIcon(SvgIconsHelper.cross);
      e.classList.add("button-icon"), this.$reject.appendChild(e), this.$element.appendChild(this.$reject), this.$accept.classList.add("accept"), this.$accept.classList.add("push-button");
      const t = SvgIconsHelper.getIcon(SvgIconsHelper.check);
      t.classList.add("button-icon"), this.$accept.appendChild(t), this.$element.appendChild(this.$accept), this.hide();
    }
    setListeners() {
      this.$accept.addEventListener("click", e => this.onClickAccept(e)), this.$reject.addEventListener("click", e => this.onClickReject(e));
    }
    onClickAccept(e) {
      e.stopPropagation(), this.events.emit("accept");
    }
    onClickReject(e) {
      e.stopPropagation(), this.events.emit("reject");
    }
    hide(e) {
      this.$element.style.display = "none";
    }
    show(e) {
      this.$element.style.display = "flex";
    }
    set size (e) {}
  }
  class DomPushIcon_DomPushIcon extends AbstractDomPushPart {
    constructor() {
      super(), this.$element = document.createElement("div"), this._size = new vector_Vector2_Vector2, this._transitionTime = 200, this.$element.classList.add("push-icon"), this.$element.style.transition = `all ${this._transitionTime / 1e3}s`, this.hide();
    }
    setAsBackground(e) {
      this._src = e, this.$element.style.backgroundImage = `url('${this._src}')`;
    }
    setAsElement(e) {
      e instanceof SVGSVGElement && (e.style.width = "70%", e.style.height = "70%"), this.$element.appendChild(e);
    }
    getSrc() {
      return this._src;
    }
    set size (e) {
      this._size = e, 0 !== parseInt(this.$element.style.minWidth) && (this.$element.style.minWidth = `${this.size.x}vw`, this.$element.style.width = `${this.size.x}vw`), this.$element.style.minHeight = `${this.size.y}vw`;
    }
    get size() {
      return this._size;
    }
    show(e) {
      this.fullWidth(), e && setTimeout(() => e(), this._transitionTime);
    }
    hide(e) {
      this.minWidth(), e && setTimeout(() => e(), this._transitionTime);
    }
    fullWidth() {
      this.$element.style.minWidth = `${this.size.x}vw`, this.$element.style.width = `${this.size.x}vw`;
    }
    minWidth() {
      this.$element.style.minWidth = "0", this.$element.style.width = "0";
    }
  }
  class DomPushText_DomPushText extends AbstractDomPushPart {
    constructor() {
      super(), this.$element = document.createElement("p"), this._size = new vector_Vector2_Vector2, this._transitionTime = 400, this._marginTop = 0.2, this.$element.classList.add("text"), this.$element.style.marginTop = `${this._marginTop}vw`, this.$element.style.transition = `max-width ${this._transitionTime / 1e3}s`, this.$element.style.maxWidth = `${this._maxWidth}vw`;
    }
    set size (e) {
      this._size = e;
    }
    get size() {
      return this._size;
    }
    setMaxWidth(e) {
      this._maxWidth = e;
    }
    set(e) {
      this._text = e, this.$element.innerHTML = this._text, this._text.length ? this.$element.style.marginTop = `${this._marginTop}vw` : this.$element.style.marginTop = "0";
    }
    get() {
      return this._text;
    }
    show(e) {
      this.$element.style.display = "block", this.$element.style.marginTop = `${this._marginTop}vw`, this.maximize(), e && e();
    }
    hide(e) {
      this.$element.style.display = "none", e && e();
    }
    maximize() {
      this.$element.style.maxWidth = `${this._maxWidth}vw`;
    }
    minimize() {
      this.$element.style.maxWidth = "0";
    }
  }
  class DomPushTitle_DomPushTitle extends AbstractDomPushPart {
    constructor() {
      super(), this.$element = document.createElement("div"), this._size = new vector_Vector2_Vector2, this.$element.classList.add("title");
    }
    set size (e) {
      this._size = e;
    }
    get size() {
      return this._size;
    }
    set(e) {
      this._text = e, this.$element.innerHTML = this._text;
    }
    get() {
      return this._text;
    }
    show(e) {
      this.$element.style.display = "block", e && e();
    }
    hide(e) {
      this.$element.style.display = "none", e && e();
    }
  }
  class DomPush_DomPush {
    constructor(e = "", t = "", n = "") {
      this.events = new Events_Events, this._$pushWrap = document.createElement("div"), this._$textWrap = document.createElement("div"), this._$push = document.createElement("div"), this._title = new DomPushTitle_DomPushTitle, this._text = new DomPushText_DomPushText, this._icon = new DomPushIcon_DomPushIcon, this._buttons = new DomPushButtons_DomPushButtons, this._visibleAnimationTime = 400, this._maxSizeVw = 8, this._currentSize = vector_Vector2_Vector2.fromScalar(this._maxSizeVw), this._animating = false, this._liveTime = 7e3, this._containerPaddingVw = 1.5, this._shadowSizeVw = 2, this._paddingVw = new vector_Vector2_Vector2(0.8, 0.6), this._textContainerMaxWidthVw = 22, this.currentSize = vector_Vector2_Vector2.fromScalar(this._maxSizeVw), this.title = e, this.text = t, this.icon = n, this.set$Container(), this.setStyles(), this.build(), this.setListeners();
    }
    set$Container() {
      this._$container = document.getElementById("pushes"), this._$container || this.create$Container();
    }
    create$Container() {
      DomUtils_DomUtils.insertCss(n(60).toString()), this._$container = document.createElement("div"), this._$container.id = "pushes", np.get$Container().appendChild(this._$container);
    }
    setStyles() {
      this._$push.classList.add("push"), this._$push.style.transition = `all ${this._visibleAnimationTime / 1e3}s`, this._$push.style.transform = `translateX(calc(100% + ${this._containerPaddingVw + this._shadowSizeVw}vw))`, this._$push.style.cursor = "pointer", this._$pushWrap.classList.add("wrap"), this._$textWrap.classList.add("text-wrap"), this._$textWrap.style.maxWidth = `${this._textContainerMaxWidthVw}vw`, this._$textWrap.style.maxHeight = `${this.currentSize.y}vw`, this._$textWrap.style.padding = `${this._paddingVw.y}vw ${this._paddingVw.x}vw`;
    }
    setListeners() {
      this._$push.addEventListener("click", e => this.onClickPush(e)), this._buttons.events.on("accept", () => this.onClickAccept()), this._buttons.events.on("reject", () => this.onClickReject());
    }
    onClickAccept() {
      this.events.emit("accept", {push: this});
    }
    onClickReject() {
      this.events.emit("reject", {push: this});
    }
    onClickPush(e) {
      this.events.emit("click", {push: this});
    }
    build() {
      this._$textWrap.appendChild(this._title.get$Element()), this._$textWrap.appendChild(this._text.get$Element()), this._$pushWrap.appendChild(this._icon.get$Element()), this._$pushWrap.appendChild(this._$textWrap), this._$pushWrap.appendChild(this._buttons.get$Element()), this._$push.appendChild(this._$pushWrap), this._$container.appendChild(this._$push);
    }
    showInBegin(e, t) {
      this._$container.childElementCount > 0 && this._$push !== this._$container.childNodes[0] && (this._$container.contains(this._$push) && this._$container.removeChild(this._$push), this._$container.insertBefore(this._$push, this._$container.childNodes[0])), this.show(e, t);
    }
    show(e, t) {
      if (!this._animating && !this.isVisible()) {
        if (undefined !== e) {
          if (e <= this._visibleAnimationTime) return;
          this._liveTime = e;
        }
        this.showForce(t), this._liveTime && (this._livingTimeout = setTimeout(() => {
          this.destroy();
        }, this._liveTime + this._visibleAnimationTime));
      }
    }
    showForce(e) {
      this._animating = true, clearTimeout(this._livingTimeout), this._$push.style.display = "block", this._$push.style.height = "1vw", this._$push.style.marginBottom = "1.5vw", this._$container.appendChild(this._$push), this.updateCurrentSize(), setTimeout(() => {
        false !== this._animating && (this._$push.style.opacity = "1", this._$push.style.transform = "translateX(0%)", setTimeout(() => {
          false !== this._animating && (this._animating = false, e && e());
        }, this._visibleAnimationTime));
      });
    }
    hide(e) {
      this._animating || false === this.isVisible() || (this._animating = true, clearTimeout(this._livingTimeout), this._$push.style.transform = `translateX(calc(100% + ${this._containerPaddingVw + this._shadowSizeVw}vw))`, this._$push.style.opacity = "0", this._$push.style.marginBottom = "0", this._$push.style.height = "0", setTimeout(() => {
        false !== this._animating && setTimeout(() => {
          false !== this._animating && (this._$push.style.display = "none", this._animating = false, e && e());
        }, this._visibleAnimationTime);
      }, this._visibleAnimationTime));
    }
    hideForce() {
      clearTimeout(this._livingTimeout), this._$push.style.transform = `translateX(calc(100% + ${this._containerPaddingVw + this._shadowSizeVw}vw))`, this._$push.style.opacity = "0", this._$push.style.marginBottom = "0", this._$push.style.height = "0", this._$push.style.display = "none", this._animating = false;
    }
    set currentSize (e) {
      this._currentSize = e, this._icon.size = this.currentSize, this._text.setMaxWidth(this._textContainerMaxWidthVw - 2 * this._paddingVw.x), 0 !== parseInt(this._$push.style.height, 10) && (this._$push.style.height = `${this.currentSize.y}vw`), this._$textWrap.style.maxHeight = `${this.currentSize.y}vw`;
    }
    get currentSize() {
      return this._currentSize;
    }
    updateCurrentSize(e) {
      setTimeout(() => {
        if (undefined === e) {
          const t = this._text.get$Element(), n = parseInt(t.style.marginTop, 10);
          e = DomUtils_DomUtils.pxToVw(t.offsetHeight) + n + DomUtils_DomUtils.pxToVw(this._title.get$Element().offsetHeight) + 2 * this._paddingVw.y;
        }
        this.currentSize = vector_Vector2_Vector2.fromScalar(e);
      });
    }
    set title (e) {
      this._title.set(e), this.updateCurrentSize();
    }
    get title() {
      return this._title.get();
    }
    set text (e) {
      this._text.set(e), this.updateCurrentSize();
    }
    get text() {
      return this._text.get();
    }
    showText() {
      this._text.show(() => this.updateCurrentSize());
    }
    hideText() {
      this._text.minimize(), this.updateCurrentSize(this._title.get$Element().offsetHeight + 2 * this._paddingVw.y), setTimeout(() => this._text.hide(), this._visibleAnimationTime);
    }
    set icon (e) {
      this._icon.setAsBackground(e), e.length && this.showIcon();
    }
    get icon() {
      return this._icon.getSrc();
    }
    showIcon() {
      this._icon.show(() => this.updateCurrentSize());
    }
    hideIcon() {
      this._icon.hide(() => this.updateCurrentSize());
    }
    setIconAsElement(e) {
      this._icon.setAsElement(e), this.showIcon();
    }
    showButtons() {
      this._buttons.show();
    }
    get$Push() {
      return this._$push;
    }
    get$Icon() {
      return this._icon.get$Element();
    }
    destroy() {
      this.isVisible() ? this.hide(() => this.destroyForce()) : this.destroyForce();
    }
    isVisible() {
      return "block" === this._$push.style.display;
    }
    destroyForce() {
      this.hideForce(), this.events.emit("destroy"), this._$push.remove(), this.events.destroy(), this._buttons.events.destroy();
    }
    static showPush(e, t = "", n = 2e3, i) {
      const r = new DomPush_DomPush(e, t);
      return i && (i instanceof SVGSVGElement ? r.setIconAsElement(i) : "String" === i.constructor.name && (r.icon = i)), r.show(n), r;
    }
    static showSmallPush(e, t = 2e3, n) {
      const i = new DomPush_DomPush(e);
      return n && i.setIconAsElement(n), i.show(t), i;
    }
    static showError(e, t = "", n = 5e3) {
      const i = SvgIconsHelper.getIcon(SvgIconsHelper.crossCircle, {color: utils_Color_Color.WHITE}), r = DomPush_DomPush.showPush(e, t, n, i);
      return r.get$Icon().classList.add("error"), r;
    }
    static showWarning(e, t = "", n = 5e3) {
      const i = SvgIconsHelper.getIcon(SvgIconsHelper.warningCircle, {color: utils_Color_Color.WHITE}), r = DomPush_DomPush.showPush(e, t, n, i);
      return r.get$Icon().style.backgroundColor = "", r.get$Icon().classList.add("warning"), r;
    }
    static showNotify(e, t = "", n = 5e3) {
      const i = SvgIconsHelper.getIcon(SvgIconsHelper.notifyCircle, {color: utils_Color_Color.WHITE});
      return DomPush_DomPush.showPush(e, t, n, i);
    }
    static showSuccess(e, t = "", n = 5e3) {
      const i = SvgIconsHelper.getIcon(SvgIconsHelper.successCircle, {color: utils_Color_Color.WHITE}), r = DomPush_DomPush.showPush(e, t, n, i);
      return r.get$Icon().classList.add("success"), r;
    }
    static showLike(e, t = "", n = 5e3) {
      const i = SvgIconsHelper.getIcon(SvgIconsHelper.thumbsUp, {color: utils_Color_Color.WHITE}), r = DomPush_DomPush.showPush(e, t, n, i);
      return r.get$Icon().classList.add("success"), r;
    }
  }
  class TimeUtils_TimeUtils {
    static getDateTime(e) {
      const t = new Date(e), n = t.getMonth() + 1, i = t.getHours(), r = t.getMinutes(), o = n < 10 ? `0${n}` : n, s = i < 10 ? `0${i}` : i, a = r < 10 ? `0${r}` : r;
      return `${t.getDate()}.${o}.${t.getFullYear()} ${s}:${a}`;
    }
    static getReadableTimeFromSeconds(e) {
      const t = Math.floor(e % 60), n = Math.floor(e / 60 % 60), i = Math.floor(e / 3600 % 24), r = Math.floor(e / 86400 % 30);
      let o = t.toString(), s = "00:", a = "", l = "";
      return t < 10 && (o = `0${t}`), n > 0 && (s = `${n}:`, n < 10 && (s = `0${s}`)), i > 0 && (a = `${i}:`, i < 10 && (a = `0${a}`)), r > 0 && (l = `${r} day `), `${l}${a}${s}${o}`;
    }
    static getMinOrHoursFromSeconds(e) {
      return Math.floor(e / 3600) > 0 ? TimeUtils_TimeUtils.getHoursFromSeconds(e) : TimeUtils_TimeUtils.getMinFromSeconds(e);
    }
    static getMinFromSeconds(e) {
      return `${Math.floor(e / 60)} min`;
    }
    static getHoursFromSeconds(e) {
      const t = Math.floor(e / 3600);
      return `${t} ${ValueUtils.declOfNum(t, ["hour", "hours", "hours"])}`;
    }
  }
  var Md;
  !function (e) {
    e.GET = "GET", e.POST = "POST", e.PUT = "PUT", e.DELETE = "DELETE";
  }(Md || (Md = {}));
  class XhrDefaultOptions {
    constructor() {
      this.url = "", this.method = Md.GET, this.contentType = "application/json", this.data = {}, this.headers = {}, this.async = true, this.prepareData = true, this.responseType = "text", this.stringify = false, this.beforeStart = () => {}, this.start = () => {}, this.receivedRequest = () => {}, this.progress = () => {}, this.success = (e, t) => {}, this.error = (e, t) => {};
    }
  }
  class XhrUtils {
    static query(e) {
      const t = new XhrDefaultOptions;
      if (Object.assign(t, e), !t.url.length) return;
      const n = new XMLHttpRequest;
      let i;
      n.onreadystatechange = function () {
        XhrUtils.onReadyStateChange(this, t);
      }, n.responseType = t.responseType, t.prepareData && t.data && Object.keys(t.data).length && (t.url += "?" + XhrUtils.getBody(t.data)), n.open(t.method, encodeURI(t.url), t.async), t.contentType.length && n.setRequestHeader("Content-Type", t.contentType), this.setHeaders(n, t.headers), i = t.prepareData ? XhrUtils.getBody(t.data) : t.stringify ? JSON.stringify(t.data) : t.data, n.send(i);
    }
    static sendFormData(e) {
      e.method = Md.POST, e.contentType = "", e.prepareData = false, XhrUtils.query(e);
    }
    static get(e) {
      e.method = Md.GET, XhrUtils.query(e);
    }
    static post(e) {
      e.method = Md.POST, e.prepareData = false, e.stringify = true, XhrUtils.query(e);
    }
    static raw(e) {
      e.method = Md.POST, e.prepareData = false, e.stringify = false, XhrUtils.query(e);
    }
    static delete(e) {
      e.method = Md.DELETE, e.prepareData = false, e.stringify = true, XhrUtils.query(e);
    }
    static download(e) {
      e.responseType = "blob", XhrUtils.query(e);
    }
    static setHeaders(e, t) {
      for (const n in t) e.setRequestHeader(n, t[n]);
    }
    static getBody(e) {
      const t = [];
      for (const n in e) t.push(`${n}=${encodeURIComponent(e[n])}`);
      return t.join("&");
    }
    static onReadyStateChange(e, t) {
      switch (e.readyState) {
        case 0:
          t.beforeStart();
          break;
        case 1:
          t.start();
          break;
        case 2:
          t.receivedRequest();
          break;
        case 3:
          t.progress();
          break;
        case 4:
          if (e.status >= 200 && e.status <= 304) {
            let n = e.response;
            "text" === t.responseType && e.responseText.length && (n = this.getParsedJson(e.responseText)), t.success(n, e);
          } else {
            let n = e.response;
            "text" === t.responseType && e.responseText.length && (n = this.getParsedJson(e.responseText)), t.error(n, e);
          }
      }
    }
    static getParsedJson(e) {
      try {
        return JSON.parse(e);
      } catch (t) {
        return e;
      }
    }
  }
  class DiscordBot_DiscordBot extends Module_Module {
    constructor(e) {
      super(), this._url = "", this._url = e;
    }
    initialize() {
      super.initialize();
    }
    async say(e, t, n = "") {
      XhrUtils.post({url: `${this._url}say`, data: {channelId: e, text: t, imgUrl: n}});
    }
  }
  const Cd = ["2 girls 1 cup", "2g1c", "4r5e", "5h1t", "5hit", "a_s_s", "a55", "a55hole", "acrotomophilia", "aeolus", "ahole", "alabama hot pocket", "alaskan pipeline", "anal", "analprobe", "anilingus", "anus", "apeshit", "ar5e", "areola", "areole", "arian", "arrse", "arse", "arsehole", "aryan", "ass", "ass hole", "assbag", "assbandit", "assbang", "assbanged", "assbanger", "assbangs", "assbite", "assclown", "asscock", "asscracker", "asses", "assface", "assfuck", "assfucker", "ass-fucker", "assfukka", "assgoblin", "assh0le", "asshat", "ass-hat", "asshead", "assho1e", "asshole", "assholes", "asshopper", "ass-jabber", "assjacker", "asslick", "asslicker", "assmaster", "assmonkey", "assmunch", "assmuncher", "assnigger", "asspirate", "ass-pirate", "assshit", "assshole", "asssucker", "asswad", "asswhole", "asswipe", "asswipes", "auto erotic", "autoerotic", "axwound", "azazel", "azz", "b!tch", "b00bs", "b17ch", "b1tch", "babe", "babeland", "babes", "baby batter", "baby juice", "balls", "ball gag", "ball gravy", "ball kicking", "ball licking", "ball sack", "ball sucking", "ballbag", "ballsack", "bampot", "bang", "bangbros", "banger", "bareback", "barely legal", "barenaked", "barf", "bastard", "bastardo", "bastards", "bastinado", "bawdy", "bbw", "bdsm", "beaner", "beaners", "beardedclam", "beastial", "beastiality", "beatch", "beater", "beaver cleaver", "beaver lips", "beeyotch", "bellend", "beotch", "bestial", "bestiality", "bi+ch", "biatch", "big black", "big breasts", "big knockers", "big tits", "bigtits", "bimbo", "bimbos", "birdlock", "bitch", "bitchass", "bitched", "bitcher", "bitchers", "bitches", "bitchin", "bitching", "bitchtits", "bitchy", "black cock", "blonde action", "blonde on blonde action", "blow job", "blow your load", "blowjob", "blowjobs", "blue waffle", "blumpkin", "bod", "bodily", "boink", "boiolas", "bollock", "bollocks", "bollok", "bollox", "bondage", "boned", "boner", "boners", "bong", "boob", "boobies", "boobs", "booby", "booger", "bookie", "booobs", "boooobs", "booooobs", "booooooobs", "bootee", "bootie", "booty", "booty call", "booze", "boozer", "boozy", "bosom", "bosomy", "bra", "brassiere", "breast", "breasts", "breeder", "brotherfucker", "brown showers", "brunette action", "buceta", "bugger", "bukkake", "bull shit", "bulldyke", "bullet vibe", "bullshit", "bullshits", "bullshitted", "bullturds", "bum", "bumblefuck", "bung", "bung hole", "bunghole", "bunny fucker", "busty", "butt", "butt fuck", "butt plug", "buttcheeks", "buttfuck", "buttfucka", "buttfucker", "butthole", "buttmuch", "butt-pirate", "buttplug", "c.0.c.k", "c.o.c.k.", "    c.u.n.t", "c0ck", "c-0-c-k", "c0cksucker", "caca", "cahone", "camel toe", "cameltoe", "camgirl", "camslut", "camwhore", "carpet muncher", "carpetmuncher", "cawk", "cervix", "chesticle", "chinc", "chincs", "chink", "choad", "chocolate rosebuds", "chode", "chodes", "cipa", "circlejerk", "cl1t", "cleveland steamer", "climax", "clit", "clitface", "clitfuck", "clitoris", "clitorus", "clits", "clitty", "clover clamps", "clusterfuck", "cnut", "cocain", "cocaine", "cock", "c-o-c-k", "cock sucker", "cockass", "cockbite", "cockblock", "cockburger", "cockeye", "cockface", "cockfucker", "cockhead", "cockholster", "cockjockey", "cockknocker", "cockknoker", "cocklump", "cockmaster", "cockmongler", "cockmongruel", "cockmonkey", "cockmunch", "cockmuncher", "cocknose", "cocknugget", "cocks", "cockshit", "cocksmith", "cocksmoke", "cocksmoker", "cocksniffer", "cocksuck", "cocksucked", "cocksucker", "cock-sucker", "cocksucking", "cocksucks", "cocksuka", "cocksukka", "cockwaffle", "coital", "cok", "cokmuncher", "coksucka", "commie", "condom", "coochie", "coochy", "coon", "coons", "cooter", "coprolagnia", "coprophilia", "corksucker", "cornhole", "cox", "crabs", "crack", "crackwhore", "crap", "crappy", "creampie", "crotte", "cum", "cumbubble", "cumdumpster", "cumguzzler", "cumjockey", "cummer", "cummin", "cumming", "cums", "cumshot", "cumshots", "cumslut", "cumstain", "cumtart", "cunilingus", "cunillingus", "cunnie", "cunnilingus", "cunny", "cunt", "c-u-n-t", "cuntass", "cuntface", "cunthole", "cunthunter", "cuntlick", "cuntlicker", "cuntlicking", "cuntrag", "cunts", "cuntslut", "cyalis", "cyberfuc", "cyberfuck", "cyberfucked", "cyberfucker", "cyberfuckers", "cyberfucking", "d0ng", "d0uch3", "d0uche", "d1ck", "d1ld0", "d1ldo", "dago", "dagos", "darkie", "damn", "damned", "dammit", "date rape", "daterape", "dawgie-style", "deep throat", "deepthroat", "deggo", "dendrophilia", "dick", "dickbag", "dickbeaters", "dickdipper", "dickface", "dickflipper", "dickfuck", "dickfucker", "dickhead", "dickheads", "dickhole", "dickish", "dick-ish", "dickjuice", "dickmilk", "dickmonger", "dickripper", "dicks", "dicksipper", "dickslap", "dick-sneeze", "dicksucker", "dicksucking", "dicktickler", "dickwad", "dickweasel", "dickweed", "dickwhipper", "dickwod", "dickzipper", "diddle", "dike", "dildo", "dildos", "diligaf", "dillweed", "dimwit", "dingle", "dingleberries", "dingleberry", "dink", "dinks", "dipship", "dipshit", "dirsa", "dirty pillows", "dirty sanchez", "dlck", "dog style", "dog-fucker", "doggie style", "doggiestyle", "doggie-style", "doggin", "dogging", "doggy style", "doggystyle", "doggy-style", "dolcett", "domination", "dominatrix", "dommes", "dong", "donkey punch", "donkeyribber", "doochbag", "doofus", "dookie", "doosh", "dopey", "double dong", "double penetration", "doublelift", "douch3", "douche", "douchebag", "douchebags", "douche-fag", "douchewaffle", "douchey", "dp action", "drunk", "dry hump", "duche", "dumass", "dumb ass", "dumbass", "dumbasses", "dumbcunt", "dumbfuck", "dumbshit", "dummy", "dumshit", "dvda", "dyke", "dykes", "eat my ass", "ecchi", "ejaculate", "ejaculated", "ejaculates", "ejaculating", "ejaculatings", "ejaculation", "ejakulate", "enlargement", "erect", "erection", "erotic", "erotism", "escort", "essohbee", "eunuch", "extacy", "extasy", "f u c k", "f u c k e r", "f.u.c.k", "f_u_c_k", "f4nny", "fack", "fag", "fagbag", "fagfucker", "fagg", "fagged", "fagging", "faggit", "faggitt", "faggot", "faggotcock", "faggs", "fagot", "fagots", "fags", "fagtard", "faig", "faigt", "fanny", "fannybandit", "fannyflaps", "fannyfucker", "fanyy", "fartknocker", "fatass", "fcuk", "fcuker", "fcuking", "fecal", "feck", "fecker", "felch", "felcher", "felching", "fellate", "fellatio", "feltch", "feltcher", "female squirting", "femdom", "figging", "fingerbang", "fingerfuck", "fingerfucked", "fingerfucker", "fingerfuckers", "fingerfucking", "fingerfucks", "fingering", "fisted", "fistfuck", "fistfucked", "fistfucker", "fistfuckers", "fistfucking", "fistfuckings", "fistfucks", "fisting", "fisty", "flamer", "flange", "floozy", "foad", "foah", "fondle", "foobar", "fook", "fooker", "foot fetish", "footjob", "foreskin", "freex", "frigg", "frigga", "frotting", "fubar", "fuck", "f-u-c-k", "fuck buttons", "fuck off", "fucka", "fuckass", "fuckbag", "fuckboy", "fuckbrain", "fuckbutt", "fuckbutter", "fucked", "fucker", "fuckers", "fuckersucker", "fuckface", "fuckhead", "fuckheads", "fuckhole", "fuckin", "fucking", "fuckings", "fuckingshitmotherfucker", "fuckme", "fucknugget", "fucknut", "fucknutt", "fuckoff", "fucks", "fuckstick", "fucktard", "fuck-tard", "fucktards", "fucktart", "fucktwat", "fuckup", "fuckwad", "fuckwhit", "fuckwit", "fuckwitt", "fudge packer", "fudgepacker", "fuk", "fuker", "fukker", "fukkin", "fuks", "fukwhit", "fukwit", "futanari", "fux", "fux0r", "fvck", "fxck", "gae", "gai", "gang bang", "gangbang", "gangbanged", "gangbangs", "ganja", "gay", "gay sex", "gayass", "gaybob", "gaydo", "gayfuck", "gayfuckist", "gaylord", "gays", "gaysex", "gaytard", "gaywad", "genitals", "gey", "gfy", "ghay", "ghey", "giant cock", "gigolo", "girl on", "girl on top", "girls gone wild", "glans", "goatcx", "goatse", "god damn", "godamn", "godamnit", "goddam", "god-dam", "goddammit", "goddamn", "goddamned", "god-damned", "goddamnit", "gokkun", "golden shower", "goldenshower", "gonad", "gonads", "goo girl", "gooch", "goodpoop", "gook", "gooks", "goregasm", "gringo", "grope", "group sex", "gspot", "g-spot", "gtfo", "guido", "guro", "h0m0", "h0mo", "hand job", "handjob", "hard core", "hard on", "hardcore", "hardcoresex", "he11", "heeb", "hemp", "hentai", "heroin", "herp", "herpes", "herpy", "heshe", "hitler", "hiv", "ho", "hoar", "hoare", "hobag", "hoe", "hoer", "hom0", "homey", "homo", "homodumbshit", "homoerotic", "homoey", "honkey", "honky", "hooch", "hookah", "hooker", "hoor", "hootch", "hooter", "hooters", "hore", "horniest", "horny", "hot carl", "hot chick", "hotsex", "how to kill", "how to murder", "huge fat", "hump", "humped", "humping", "hussy", "hymen", "inbred", "incest", "injun", "intercourse", "j3rk0ff", "jack Off", "jackass", "jackhole", "jackoff", "jack-off", "jaggi", "jagoff", "jail bait", "jailbait", "jap", "japs", "jelly donut", "jerk", "jerk off", "jerk0ff", "jerkass", "jerked", "jerkoff", "jerk-off", "jigaboo", "jiggaboo", "jiggerboo", "jism", "jiz", "jizm", "jizz", "jizzed", "juggs", "jungle bunny", "junglebunny", "junkie", "junky", "kawk", "kike", "kikes", "kinbaku", "kinkster", "kinky", "kkk", "knob", "knobbing", "knobead", "knobed", "knobend", "knobhead", "knobjocky", "knobjokey", "kock", "kondum", "kondums", "kooch", "kooches", "kootch", "kraut", "kum", "kummer", "kumming", "kums", "kunilingus", "kunja", "kunt", "kyke", "l3i+ch", "l3itch", "labia", "lameass", "lardass", "leather restraint", "leather straight jacket", "lech", "lemon party", "leper", "lesbian", "lesbians", "lesbo", "lesbos", "lez", "lezbian", "lezbians", "lezbo", "lezbos", "lezzie", "lezzies", "lezzy", "lmao", "lmfao", "loin", "loins", "lolita", "lovemaking", "lube", "lust", "lusting", "lusty", "m0f0", "m0fo", "m45terbate", "ma5terb8", "ma5terbate", "make me come", "male squirting", "mams", "masochist", "massa", "masterb8", "masterbat", "masterbat3", "masterbate", "master-bate", "masterbating", "masterbation", "masterbations", "masturbate", "masturbating", "masturbation", "maxi", "mcfagget", "menage a trois", "menses", "menstruate", "menstruation", "meth", "m-fucking", "mick", "milf", "minge", "missionary position", "mof0", "mofo", "mo-fo", "molest", "moolie", "moron", "mothafuck", "mothafucka", "mothafuckas", "mothafuckaz", "mothafucked", "mothafucker", "mothafuckers", "mothafuckin", "mothafucking", "mothafuckings", "mothafucks", "mother fucker", "motherfuck", "motherfucka", "motherfucked", "motherfucker", "motherfuckers", "motherfuckin", "motherfucking", "motherfuckings", "motherfuckka", "motherfucks", "mound of venus", "mr hands", "mtherfucker", "mthrfucker", "mthrfucking", "muff", "muff diver", "muffdiver", "muffdiving", "munging", "murder", "mutha", "muthafecker", "muthafuckaz", "muthafucker", "muthafuckker", "muther", "mutherfucker", "mutherfucking", "muthrfucking", "n1gga", "n1gger", "nad", "nads", "naked", "nambla", "napalm", "nappy", "nawashi", "nazi", "nazism", "negro", "neonazi", "nig nog", "nigaboo", "nigg3r", "nigg4h", "nigga", "niggah", "niggas", "niggaz", "nigger", "niggers", "niggle", "niglet", "nimphomania", "nimrod", "ninny", "nipple", "nipples", "nob", "nob jokey", "nobhead", "nobjocky", "nobjokey", "nooky", "nsfw images", "nude", "nudity", "numbnuts", "nut sack", "nutsack", "nympho", "nymphomania", "octopussy", "omorashi", "one cup two girls", "one guy one jar", "opiate", "opium", "oral", "orally", "organ", "orgasim", "orgasims", "orgasm", "orgasmic", "orgasms", "orgies", "orgy", "ovary", "ovum", "ovums", "p.u.s.s.y.", "p0rn", "paddy", "paedophile", "paki", "panooch", "pantie", "panties", "panty", "pastie", "pasty", "pawn", "pcp", "pecker", "peckerhead", "pedo", "pedobear", "pedophile", "pedophilia", "pedophiliac", "peepee", "pegging", "penetrate", "penetration", "penial", "penile", "penis", "penisbanger", "penisfucker", "penispuffer", "perversion", "peyote", "phalli", "phallic", "phone sex", "phonesex", "phuck", "phuk", "phuked", "phuking", "phukked", "phukking", "phuks", "phuq", "piece of shit", "pigfucker", "pillowbiter", "pimp", "pimpis", "pinko", "piss pig", "pissed", "pissed off", "pisser", "pissers", "pisses", "pissflaps", "pissin", "pissing", "pissoff", "piss-off", "pisspig", "playboy", "pleasure chest", "pms", "polack", "pole smoker", "polesmoker", "pollock", "ponyplay", "poof", "poon", "poonani", "poonany", "poontang", "poop", "poop chute", "poopchute", "poopuncher", "porch monkey", "porchmonkey", "porn", "porno", "pornography", "pornos", "potty", "prick", "pricks", "prig", "prince albert piercing", "pron", "prostitute", "prude", "pthc", "pube", "pubes", "pubic", "pubis", "punanny", "punany", "punkass", "punky", "punta", "puss", "pusse", "pussi", "pussies", "pussy", "pussylicking", "pussypounder", "pussys", "pust", "puto", "queaf", "queef", "queer", "queerbait", "queerhole", "queero", "queers", "quicky", "quim", "racy", "raghead", "raging boner", "rape", "raped", "raper", "raping", "rapist", "raunch", "rectal", "rectum", "rectus", "reefer", "reetard", "reich", "renob", "retard", "retarded", "reverse cowgirl", "revue", "rimjaw", "rimjob", "rimming", "ritard", "rosy palm", "rosy palm and her 5 sisters", "rtard", "r-tard", "rump", "rumprammer", "ruski", "rusty trombone", "s hit", "s&m", "s.h.i.t.", "    s.o.b.", "    s_h_i_t", "s0b", "sadism", "sadist", "sand nigger", "sandler", "sandnigger", "sanger", "santorum", "scag", "scantily", "scat", "schizo", "schlong", "scissoring", "screw", "screwed", "screwing", "scroat", "scrog", "scrot", "scrote", "scrotum", "scrud", "scum", "seaman", "seamen", "seduce", "seks", "semen", "sex", "sexo", "sexual", "sexy", "sh!+", "sh!t", "sh1t", "s-h-1-t", "shag", "shagger", "shaggin", "shagging", "shamedame", "shaved beaver", "shaved pussy", "shemale", "shi+", "shibari", "shit", "s-h-i-t", "shitass", "shitbag", "shitbagger", "shitblimp", "shitbrains", "shitbreath", "shitcanned", "shitcunt", "shitdick", "shite", "shiteater", "shited", "shitey", "shitface", "shitfaced", "shitfuck", "shitfull", "shithead", "shithole", "shithouse", "shiting", "shitings", "shits", "shitspitter", "shitstain", "shitt", "shitted", "shitter", "shitters", "shittiest", "shitting", "shittings", "shitty", "shiz", "shiznit", "shota", "shrimping", "sissy", "skag", "skank", "skeet", "skullfuck", "slag", "slanteye", "slave", "sleaze", "sleazy", "slut", "slutbag", "slutdumper", "slutkiss", "sluts", "smeg", "smegma", "smut", "smutty", "snatch", "snowballing", "snuff", "s-o-b", "sodom", "sodomize", "sodomy", "son-of-a-bitch", "souse", "soused", "spac", "sperm", "spic", "spick", "spik", "spiks", "splooge", "splooge moose", "spooge", "spook", "spread legs", "spunk", "steamy", "stfu", "stiffy", "stoned", "strap on", "strapon", "strappado", "strip", "strip club", "stroke", "stupid", "style doggy", "suck", "suckass", "sucked", "sucking", "sucks", "suicide girls", "sultry women", "sumofabiatch", "swastika", "swinger", "t1t", "t1tt1e5", "t1tties", "tainted love", "tampon", "tard", "taste my", "tawdry", "tea bagging", "teabagging", "teat", "teets", "teez", "terd", "teste", "testee", "testes", "testical", "testicle", "testis", "threesome", "throating", "thrust", "thug", "thundercunt", "tied up", "tight white", "tinkle", "tit", "titfuck", "titi", "tits", "titt", "tittie5", "tittiefucker", "titties", "titty", "tittyfuck", "tittyfucker", "tittywank", "titwank", "toke", "tongue in a", "toots", "topless", "tosser", "towelhead", "tramp", "tranny", "transsexual", "trashy", "tribadism", "tub girl", "tubgirl", "turd", "tush", "tushy", "tw4t", "twat", "twathead", "twatlips", "twats", "twatty", "twatwaffle", "twink", "twinkie", "two girls one cup", "twunt", "twunter", "ugly", "unclefucker", "undies", "undressing", "unwed", "upskirt", "urethra play", "urinal", "urine", "urophilia", "uterus", "uzi", "v14gra", "v1gra", "vag", "vagina", "vajayjay", "va-j-j", "valium", "venus mound", "viagra", "vibrator", "violet wand", "virgin", "vixen", "vjayjay", "vodka", "vomit", "vorarephilia", "voyeur", "vulgar", "vulva", "w00se", "wad", "wang", "wank", "wanker", "wankjob", "wanky", "wazoo", "wedgie", "weed", "weenie", "weewee", "weiner", "weirdo", "wench", "wet dream", "wetback", "wh0re", "wh0reface", "white power", "whitey", "whiz", "whoar", "whoralicious", "whore", "whorealicious", "whorebag", "whored", "whoreface", "whorehopper", "whorehouse", "whores", "whoring", "wigger", "willies", "willy", "womb", "woody", "wop", "wrapping men", "wrinkled starfish", "wtf", "xrated", "x-rated", "xxx", "yaoi", "yeasty", "yellow showers", "yiffy", "yobbo", "zoophile", "zoophilia", "zubb"];
  class ChatOptions_ChatOptions {
    constructor() {
      this.channelPrefix = "", this.language = n(22)("./" + np.languages.activeLanguage + ".json"), this.serverLanguage = {};
    }
  }
  class ChatAutoFill_ChatAutoFill {
    constructor(e) {
      this.$hint = document.createElement("div"), this.hints = new LinkedList_LinkedList, this.maxHintsCount = 100, this.allowApplyHint = true, this._chat = e;
    }
    initialize() {
      this.putTemplate(), this.setListeners(), this.loadHints();
    }
    putTemplate() {
      this.$hint.classList.add("hint"), this._chat.$inputWrap.appendChild(this.$hint);
    }
    setListeners() {
      this._chat.$input.addEventListener("keyup", e => this.onKeyUpChatInput(e)), this._chat.$input.addEventListener("keydown", e => this.onKeyDownChatInput(e));
    }
    loadHints() {
      this.getSavedHints().forEach(e => this.addHint(e)), this.saveHints();
    }
    addHint(e) {
      this.hints.insert(e), this.clearOldHits();
    }
    removeHint(e) {
      this.hints.removeNode(e);
    }
    onKeyUpChatInput(e) {
      this.trySetHint(this._chat.$input.value);
    }
    trySetHint(e) {
      if (["!", "/"].includes(e[0])) {
        let t = false;
        this.hints.forEach(n => {
          if (t) return;
          const i = n.getData();
          this.isFoundHint(i, e) && (t = true, this.setDomHint(i));
        }, true);
      } else this.clearDomHint();
      np.modules.mod.get(Chat_Chat).ifPresent(e => {
        DomUtils_DomUtils.getCaretPosition(e.$input) === e.$input.value.length && (this.allowApplyHint = true);
      });
    }
    onKeyDownChatInput(e) {
      switch (this._chat.$input.value || this.clearDomHint(), ad[e.code]) {
        case ad.ArrowLeft:
          this.onKeyDownArrowLeft();
          break;
        case ad.ArrowRight:
          this.onKeyDownArrowRight();
          break;
        case ad.Enter:
          this.trySaveInHint(this._chat.$input.value);
      }
    }
    onKeyDownArrowLeft() {
      this.allowApplyHint = false, this.clearDomHint();
    }
    onKeyDownArrowRight() {
      this.applyHint();
    }
    applyHint() {
      this.allowApplyHint && this._chat.$input.value.length && this.$hint.innerText.length && (this._chat.$input.value = this.$hint.innerText, this.clearDomHint());
    }
    trySaveInHint(e) {
      this.allowApplyHint = true, e && (e.match(/^\//) || e.match(/^!/)) && (this.addHint(e), this.saveHints()), this.clearDomHint();
    }
    isFoundHint(e, t) {
      try {
        return e.match(new RegExp(`^${t}`));
      } catch (e) {}
      return false;
    }
    setDomHint(e) {
      this.allowApplyHint && (this.$hint.innerText = e);
    }
    clearDomHint() {
      this.$hint.innerText = "";
    }
    clearOldHits() {
      this.hints.getSize() > this.maxHintsCount && this.hints.removeFirst();
    }
    saveHints() {
      np.storage.setItem("ChatAutoFillHints", JSON.stringify(this.hints.toArray()));
    }
    getSavedHints() {
      return Optional.ofNullable(np.storage.getItem("ChatAutoFillHints")).map(e => {
        try {
          return JSON.parse(e);
        } catch (e) {
          return [];
        }
      }).orElse([]);
    }
  }
  class ChatColorsHelper_ChatColorsHelper {
    constructor(e) {
      this._$colors = document.createElement("div"), this._chatColors = ["YELLOW", "GOLD", "RED", "DARK_RED", "GREEN", "DARK_GREEN", "AQUA", "DARK_AQUA", "BLUE", "DARK_BLUE", "PURPLE", "DARK_PURPLE", "WHITE", "GRAY", "DARK_GRAY", "BLACK"], this._chat = e, this.initializeColors();
    }
    initializeColors() {
      this._$colors.classList.add("colors"), this._chat.$chat.appendChild(this._$colors), this.appendColors();
    }
    appendColors() {
      for (const e in this._chatColors) this._$colors.appendChild(this.get$Color(this._chatColors[e]));
    }
    get$Color(e) {
      const t = document.createElement("div");
      t.classList.add("color"), t.dataset.chatColor = e;
      const n = ChatColor_ChatColor[t.dataset.chatColor];
      return n && (t.style.backgroundColor = n.style.fill), t.addEventListener("click", e => this.onClick(e, t)), t;
    }
    onClick(e, t) {
      return e.preventDefault(), DomUtils_DomUtils.insertAtCursor(this._chat.$input, `[${t.dataset.chatColor}]`), this._chat.$input.focus(), false;
    }
  }
  class AbilityDetectBox2dTransforms_AbilityDetectBox2dTransforms extends Ability_Ability {
    constructor() {
      super(...arguments), this._colorRed = 0, this._colorRedStep = 0.05, this._originalsColor = new utils_Color_Color;
    }
    initialize() {
      super.initialize(), this.saveOriginalColors(), np.drawer.addOnce(this.parentEntity);
    }
    onSetPhysicsTransforms(e) {
      super.onSetPhysicsTransforms(e), this._colorRed = 0.95, this.setColor();
    }
    onDraw() {
      super.onDraw(), this.setColor();
    }
    destroy() {
      this._colorRed = 0, this.setColor(), super.destroy();
    }
    setColor() {
      if (this.parentEntity && (this._colorRed && np.drawer.addOnce(this.parentEntity), this.parentEntity.skin)) {
        this.decreaseRedColor();
        const e = new utils_Color_Color;
        e.r = this._originalsColor.r + (1 - this._originalsColor.r) * this._colorRed, e.g = this._originalsColor.g * (1 - this._colorRed), e.b = this._originalsColor.b * (1 - this._colorRed), this.parentEntity.skin.setColor(e);
      }
    }
    saveOriginalColors() {
      this.parentEntity && this.parentEntity.skin && this._originalsColor.copy(this.parentEntity.skin.getColor());
    }
    decreaseRedColor() {
      return 0 !== this._colorRed && (this._colorRed -= this._colorRedStep), this._colorRed < 0 && (this._colorRed = 0), this._colorRed;
    }
  }
  class AbilityDetectEntityInfo_AbilityDetectEntityInfo extends Ability_Ability {
    constructor() {
      super(...arguments), this._colorRed = 0, this._colorRedStep = 0.05, this._originalsColor = new utils_Color_Color, this._firstServerProperties = true;
    }
    initialize() {
      super.initialize(), this.saveOriginalColors();
    }
    onSpawn() {
      super.onSpawn(), this.saveOriginalColors();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), false === this._firstServerProperties && (this._colorRed = 0.95, this.setColor()), this._firstServerProperties = false;
    }
    onDraw() {
      super.onDraw(), this.setColor();
    }
    destroy() {
      this._colorRed = 0, this.setColor(), super.destroy();
    }
    setColor() {
      if (this.parentEntity && (this._colorRed && np.drawer.addOnce(this.parentEntity), this.parentEntity.skin)) {
        this.decreaseRedColor();
        const e = new utils_Color_Color;
        e.r = this._originalsColor.r + (1 - this._originalsColor.r) * this._colorRed, e.g = this._originalsColor.g * (1 - this._colorRed), e.b = this._originalsColor.b * (1 - this._colorRed), this.parentEntity.skin.setColor(e);
      }
    }
    saveOriginalColors() {
      this.parentEntity && this.parentEntity.skin && this._originalsColor.copy(this.parentEntity.skin.getColor());
    }
    decreaseRedColor() {
      return 0 !== this._colorRed && (this._colorRed -= this._colorRedStep), this._colorRed < 0 && (this._colorRed = 0), this._colorRed;
    }
  }
  class FixtureSkinItem_FixtureSkinItem extends SkinSimple_SkinSimple {
    initialize() {
      super.initialize();
      const e = new SkinSimple_SkinSimple({color: this._options.color, receiveLight: true});
      e.initialize(), e.getObject3d().scale.set(0.5, 0.1, 1), e.getObject3d().position.set(0.25, 0, 0), e.setOpacity(0.25), this.getObject3d().add(e.getObject3d());
    }
  }
  class EntityClientBox2d_EntityClientBox2d extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this._color = utils_Color_Color.RED, this.shape = Zu.CIRCLE, this.alwaysDisplayed = true;
    }
    createSkin() {
      const e = {skinOptions: {}, skinItemClass: FixtureSkinItem_FixtureSkinItem}, t = this.parentEntity.abilities.getAbility(AbilityBox2d_AbilityBox2d).get().box2dData;
      for (const n in t.fixtures) e.skinOptions[n] = SkinComposite_SkinComposite.getSkinItemOptionsFromFixture(t.fixtures[n]), e.skinOptions[n].color = this._color;
      return new SkinComposite_SkinComposite(e);
    }
    onCreate() {
      super.onCreate();
      const e = new SkinSimple_SkinSimple({color: utils_Color_Color.BLACK, receiveLight: true});
      e.initialize(), e.getObject3d().scale.set(0.5, 0.2, 1), e.getObject3d().position.set(0.25, 0, 0), e.setOpacity(0.25), this.skin.getObject3d().add(e.getObject3d()), this.skin.setOpacity(0.2);
    }
    canHaveAbilities() {
      return false;
    }
    isInstanced() {
      return this.parentEntity.isInstanced();
    }
    getInstancedData() {
      const e = this.parentEntity.getInstancedData();
      e.color.setScalarRGB(1, 0, 0), e.opacity = 0.5;
      const t = np.canvas.camera.camera.position.clone().sub(this.parentEntity.position.toThreeVector3()).normalize();
      return e.position.add(vector_Vector3_Vector3.fromThreeVector3(t)), e;
    }
    getInstancedGroupName() {
      let e = this.constructor.name;
      if (this.parentEntity.isServer) {
        const t = this.parentEntity.getClientSetting("texture");
        e += t && t.name ? t.name : this.parentEntity.serverProperties.type;
      }
      return e + "_" + this.parentEntity.position.z;
    }
  }
  class AbilityEntityBox2d_AbilityEntityBox2d extends Ability_Ability {
    onSpawn() {
      super.onSpawn(), this.createEntityClientBox2d();
    }
    onAddAbility() {
      super.onAddAbility(), this.createEntityClientBox2d();
    }
    onSetPhysicsTransforms(e) {
      super.onSetPhysicsTransforms(e), this.update(e);
    }
    createEntityClientBox2d() {
      this._entityBox2d || (this.parentEntity.isServer && this.parentEntity.abilities.hasAbility(AbilityBox2d_AbilityBox2d) && (this._entityBox2d = np.spawner.spawnEntity(EntityClientBox2d_EntityClientBox2d, {properties: {shape: this.parentEntity.getFirstServerFixture().type, parentEntity: this.parentEntity}})), this.update());
    }
    update(e) {
      if (this._entityBox2d) {
        if (e) {
          if (e.transforms) {
            if (e.transforms.position) {
              const t = new vector_Vector3_Vector3(e.transforms.position.x, e.transforms.position.y, this.parentEntity.position.z), n = vector_Vector3_Vector3.fromThreeVector3(np.canvas.camera.camera.position.clone().sub(t.toThreeVector3()).normalize());
              this._entityBox2d.position.copy(t).add(n);
            }
            ValueUtils.isNumber(e.transforms.rotation) && (this._entityBox2d.rotation.z = e.transforms.rotation);
          }
          ValueUtils.isBoolean(e.isActive) && (e.isActive ? this._entityBox2d.skin.setColor(utils_Color_Color.GREEN) : this._entityBox2d.skin.setColor(utils_Color_Color.RED)), ValueUtils.isBoolean(e.isAwake) && (e.isAwake ? this._entityBox2d.skin.setOpacity(0.5) : this._entityBox2d.skin.setOpacity(0.3));
        } else {
          const e = vector_Vector3_Vector3.fromThreeVector3(np.canvas.camera.camera.position.clone().sub(this.parentEntity.position.toThreeVector3()).normalize());
          this._entityBox2d.position.copy(this.parentEntity.position).add(e), this._entityBox2d.rotation.z = this.parentEntity.rotation.z;
        }
        this._entityBox2d.size.setScalarXYZ(this.parentEntity.serverProperties.size.x, this.parentEntity.serverProperties.size.y, Math.max(this.parentEntity.serverProperties.size.x, this.parentEntity.serverProperties.size.y)).multiplyScalar(1.1), np.drawer.addOnce(this._entityBox2d);
      }
    }
    onRemove() {
      super.onRemove(), this.removeEntityBox2d();
    }
    destroy() {
      super.destroy(), this.removeEntityBox2d();
    }
    removeEntityBox2d() {
      this._entityBox2d && (this._entityBox2d.remove(), this._entityBox2d = null);
    }
  }
  class EntityServer_EntityServer extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this._color = utils_Color_Color.BLUE, this.shape = "CIRCLE", this.alwaysDisplayed = true;
    }
    createSkin() {
      const e = {skinOptions: {}, skinItemClass: FixtureSkinItem_FixtureSkinItem};
      for (const t in this.sp.box2d.fixtures) e.skinOptions[t] = SkinComposite_SkinComposite.getSkinItemOptionsFromFixture(this.sp.box2d.fixtures[t]), e.skinOptions[t].color = this._color;
      return new SkinComposite_SkinComposite(e);
    }
    onCreate() {
      super.onCreate();
      const e = new SkinSimple_SkinSimple({color: utils_Color_Color.BLACK, receiveLight: true});
      e.initialize(), e.getObject3d().scale.set(0.5, 0.2, 1), e.getObject3d().position.set(0.25, 0, 0), e.setOpacity(0.25), this.skin.getObject3d().add(e.getObject3d()), this.skin.setOpacity(0.2);
    }
    canHaveAbilities() {
      return false;
    }
  }
  class AbilityEntityServer_AbilityEntityServer extends Ability_Ability {
    onSpawn() {
      super.onSpawn(), this.createEntityServer();
    }
    onAddAbility() {
      super.onAddAbility(), this.createEntityServer();
    }
    createEntityServer() {
      this._entityServer || (this.parentEntity.isServer && (this._entityServer = np.spawner.spawnEntity(EntityServer_EntityServer, {properties: {shape: this.parentEntity.getFirstServerFixture().type, sp: this.parentEntity.serverProperties, parentEntity: this.parentEntity}})), this.update());
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), this.update();
    }
    update() {
      this._entityServer && this.parentEntity.isServer && (this._entityServer.position.setScalarXYZ(this.parentEntity.serverProperties.position.x, this.parentEntity.serverProperties.position.y, this.parentEntity.position.z).addScalarZ(0.1), this._entityServer.rotation.z = this.parentEntity.serverProperties.rotation, this._entityServer.size.setScalarXYZ(this.parentEntity.serverProperties.size.x, this.parentEntity.serverProperties.size.y, Math.max(this.parentEntity.serverProperties.size.x, this.parentEntity.serverProperties.size.y)).multiplyScalar(1.05), np.drawer.addOnce(this._entityServer));
    }
    onRemove() {
      super.onRemove(), this.removeEntityServer();
    }
    destroy() {
      super.destroy(), this.removeEntityServer();
    }
    removeEntityServer() {
      this._entityServer && (this._entityServer.remove(), this._entityServer = null);
    }
  }
  class AbilityFpsPing_AbilityFpsPing extends Ability_Ability {
    constructor() {
      super(...arguments), this._textFontSize = 8, this._intervalFrames = 60;
    }
    initialize() {
      super.initialize(), this.enable();
    }
    enable() {
      this.disable(), this.update(), this._interval = np.canvas.setIntervalFrames(() => this.update(), this._intervalFrames);
    }
    disable() {
      np.canvas.clearIntervalFrames(this._interval), this.destroyText();
    }
    update() {
      if (this.destroyText(), !this.parentEntity) return void this.disable();
      if (!this.parentEntity.serverProperties || !this.parentEntity.serverProperties.clientSettings) return;
      const e = Math.round(this.parentEntity.getClientSetting("currentFps") || 0), t = Math.round(this.parentEntity.getClientSetting("currentPing") || 0), n = (this.parentEntity.getClientSetting("currentScale") || 0).toFixed(2);
      if (e && t && n) {
        const i = `${e} / ${t} / ${n}`;
        this._text = new SkinText_SkinText({text: i, fontSize: this._textFontSize}), this._text.initialize();
        const r = (new Ln).setFromObject(this._text.getObject3d());
        this._textSize = r.getSize(new It), np.canvas.addToWorldObject(this._text.getObject3d()), this.onDraw();
      }
    }
    onDraw() {
      super.onDraw(), this.isDisplayed() && (this._text.getObject3d().position.copy(this.parentEntity.position.toThreeVector3()), this._text.getObject3d().position.x -= this._textSize.x / 2, this._text.getObject3d().position.y += 2 * this.parentEntity.size.y, this._text.getObject3d().position.z += this.parentEntity.position.z + 33);
    }
    isDisplayed() {
      return !!this._text;
    }
    destroy() {
      super.destroy(), this.disable();
    }
    destroyText() {
      this._text && (np.canvas.removeFromWorldObject(this._text.getObject3d()), this._text.destroy(), this._text = null);
    }
  }
  class ChatCommand_ChatCommand {
    constructor(e, t, n) {
      this.executeCount = 0, this.name = e, this.description = t, this.func = n;
    }
    execute(e) {
      this.executeCount++, this.parameters = e.split(" "), this.command = this.parameters.shift(), this.func(this);
    }
    sendEnabled(e) {
      this.sendMessage(e, "enabled", ChatColor_ChatColor.GREEN);
    }
    sendDisabled(e) {
      this.sendMessage(e, "disabled", ChatColor_ChatColor.RED);
    }
    sendMessage(e, t, n = ChatColor_ChatColor.RESET) {
      np.modules.mod.get(Chat_Chat).ifPresent(i => {
        i.newMessage({senderName: ChatColor_ChatColor.GOLD + e, message: n + t});
      });
    }
  }
  class ChatCommands_ChatCommands {
    constructor(e) {
      this.commandsMap = {}, this.commandPrefix = "!", this._chat = e;
    }
    initialize() {
      this.addDefaultCommands();
    }
    addCommand(e) {
      const t = this.commandPrefix + e.name;
      this.hasCommand(t) || (this.commandsMap[t] = e, this._chat.chatAutoFill.addHint(t));
    }
    executeCommand(e) {
      const t = e.split(" ")[0];
      this.hasCommand(t) && this.commandsMap[t].execute(e);
    }
    hasCommand(e) {
      return this.commandsMap.hasOwnProperty(e.split(" ")[0]);
    }
    addDefaultCommands() {
      this.addCommand(new ChatCommand_ChatCommand("help", "list of all commands", () => this.helpCommandHandler())), this.addCommand(new ChatCommand_ChatCommand("clear", "clear all chat messages", e => this.clearCommandHandler(e))), this.addCommand(new ChatCommand_ChatCommand("entityInfo", "highlight entities when received entity_info packets", e => this.entityInfoCommandHandler(e))), this.addCommand(new ChatCommand_ChatCommand("entityBox2dTransforms", "highlight entities when received box2d transforms", e => this.box2dTransformsCommandHandler(e))), this.addCommand(new ChatCommand_ChatCommand("entityServer", "toggle displaying server entity", e => this.entityServerCommandHandler(e))), this.addCommand(new ChatCommand_ChatCommand("entityBox2d", "toggle displaying box2d entity", e => this.entityBox2dCommandHandler(e))), this.addCommand(new ChatCommand_ChatCommand("fpsPing", "toggle displaying fps and below players", e => this.fpsPingCommandHandler(e))), this.addCommand(new ChatCommand_ChatCommand("mapControls", "toggle camera map controls", e => this.mapControlsCommandHandler(e)));
    }
    helpCommandHandler() {
      for (const e in this.commandsMap) this._chat.newMessage({senderName: `${ChatColor_ChatColor.GREEN}Client`, message: `${ChatColor_ChatColor.YELLOW}${this.commandPrefix}${this.commandsMap[e].name} ${ChatColor_ChatColor.GRAY}- ${this.commandsMap[e].description}`});
    }
    clearCommandHandler(e) {
      this._chat.$messages.innerHTML = "";
    }
    entityInfoCommandHandler(e) {
      e.executeCount % 2 == 0 ? (np.spawner.factory.removeAbilities(AbilityDetectEntityInfo_AbilityDetectEntityInfo), np.entities.destroyAbilities(AbilityDetectEntityInfo_AbilityDetectEntityInfo)) : (np.spawner.factory.addAbilities(AbilityDetectEntityInfo_AbilityDetectEntityInfo), np.entities.addAbilities(AbilityDetectEntityInfo_AbilityDetectEntityInfo));
    }
    box2dTransformsCommandHandler(e) {
      e.executeCount % 2 == 0 ? (np.spawner.factory.removeAbilities(AbilityDetectBox2dTransforms_AbilityDetectBox2dTransforms), np.entities.destroyAbilities(AbilityDetectBox2dTransforms_AbilityDetectBox2dTransforms)) : (np.spawner.factory.addAbilities(AbilityDetectBox2dTransforms_AbilityDetectBox2dTransforms), np.entities.addAbilities(AbilityDetectBox2dTransforms_AbilityDetectBox2dTransforms));
    }
    entityServerCommandHandler(e) {
      e.executeCount % 2 == 0 ? (np.spawner.factory.removeAbilities(AbilityEntityServer_AbilityEntityServer), np.entities.destroyAbilities(AbilityEntityServer_AbilityEntityServer)) : (np.spawner.factory.addAbilities(AbilityEntityServer_AbilityEntityServer), np.entities.addAbilities(AbilityEntityServer_AbilityEntityServer));
    }
    entityBox2dCommandHandler(e) {
      e.executeCount % 2 == 0 ? (np.spawner.factory.removeAbilities(AbilityEntityBox2d_AbilityEntityBox2d), np.entities.destroyAbilities(AbilityEntityBox2d_AbilityEntityBox2d)) : (np.spawner.factory.addAbilities(AbilityEntityBox2d_AbilityEntityBox2d), np.entities.addAbilities(AbilityEntityBox2d_AbilityEntityBox2d));
    }
    fpsPingCommandHandler(e) {
      e.executeCount % 2 == 0 ? (np.spawner.factory.removeAbilities(AbilityFpsPing_AbilityFpsPing), np.entities.destroyAbilities(AbilityFpsPing_AbilityFpsPing)) : (np.spawner.factory.addAbilities(AbilityFpsPing_AbilityFpsPing), np.entities.addAbilities(AbilityFpsPing_AbilityFpsPing));
    }
    mapControlsCommandHandler(e) {
      np.canvas.camera.isEnabledMapControls() ? (np.canvas.camera.disableMapControls(), np.canvas.camera.enableTracking()) : np.canvas.camera.enableMapControls();
    }
  }
  class ChatTypingPlayer {
    constructor(e, t) {
      this.lastTimeTyping = 0, this.uuid = e, this.name = t, this.lastTimeTyping = performance.now();
    }
  }
  class ChatTyping_ChatTyping {
    constructor(e) {
      this.language = n(22)("./" + np.languages.activeLanguage + ".json"), this.lastTimeSendTyping = 0, this.sendTypingInterval = 1e3, this.typingPlayers = {}, this.typingTimeout = 2e3, this.$typingPlayers = document.createElement("div"), this.timerUpdateTypingPlayersInterval = 60, this._chat = e, this.$typingPlayers.classList.add("typing-players"), this._chat.$messages.insertAdjacentElement("afterend", this.$typingPlayers), this.setListeners();
    }
    setListeners() {
      np.socket.events.on("chat_writer", e => this.onChatWriter(e)), this._chat.$input.addEventListener("keyup", e => this.onChatInputChange(e)), this.timerUpdateTypingPlayers = np.canvas.setIntervalFrames(() => this.updateTypingPlayers(), this.timerUpdateTypingPlayersInterval);
    }
    show() {
      this.$typingPlayers.classList.add("show");
    }
    hide() {
      this.$typingPlayers.classList.remove("show");
    }
    onChatInputChange(e) {
      ad[e.code] !== ad.Enter && this.needSendTyping() && this.sendTyping();
    }
    needSendTyping() {
      return this.lastTimeSendTyping + this.sendTypingInterval < performance.now();
    }
    onChatWriter(e) {
      this.updateTypingPlayer(e), this.updateTypingPlayers();
    }
    updateTypingPlayers() {
      this.deleteOldTypingPlayers();
      const e = [];
      for (const t in this.typingPlayers) t !== np.myServerUuid && e.push(this.typingPlayers[t].name);
      this.$typingPlayers.innerHTML = "", e.length && (this.$typingPlayers.innerHTML = `<span>${e.join("</span>, <span>")}</span>`, this.$typingPlayers.innerHTML += " " + this.language.typing);
    }
    updateTypingPlayer(e) {
      this.typingPlayers[e.uuid] = new ChatTypingPlayer(e.uuid, ChatColor_ChatColor.translateToHtml(e.name));
    }
    deleteOldTypingPlayers() {
      for (const e in this.typingPlayers) this.typingPlayers[e].lastTimeTyping + this.typingTimeout < performance.now() && delete this.typingPlayers[e];
    }
    sendTyping() {
      this.lastTimeSendTyping = performance.now(), np.socket.send("chat_writer_mark", {});
    }
  }
  class MessagesLog_MessagesLog {
    constructor(e) {
      this.history = [], this.historyActive = 0, this.callback = e, this.loadHistory(), this.setListeners();
    }
    pushToHistory(e) {
      e && this.history[this.history.length - 1] !== e && (this.history.push(e), np.storage.setItem("gameChatHistory", JSON.stringify(this.history))), this.historyActive = this.history.length;
    }
    loadHistory() {
      const e = np.storage.getItem("gameChatHistory");
      e && (this.history = JSON.parse(e), this.historyActive = this.history.length);
    }
    setListeners() {
      np.window.events.on("keydown", e => this.onKeyDown(e));
    }
    onKeyDown(e) {
      switch (ad[e.customCode]) {
        case ad.ArrowUp:
          this.onKeyDownUp(e);
          break;
        case ad.ArrowDown:
          this.onKeyDownDown();
      }
    }
    onKeyDownDown() {
      this.historyActive < this.history.length - 1 && (this.historyActive++, this.sendActiveMessage() || this.historyActive--);
    }
    onKeyDownUp(e) {
      this.historyActive > 0 && (e.preventDefault(), this.historyActive--, this.sendActiveMessage() || this.historyActive++);
    }
    sendActiveMessage() {
      return !!this.history[this.historyActive] && this.callback(this.history[this.historyActive]);
    }
  }
  const kd = n(14);
  class Chat_Chat extends Module_Module {
    constructor(e) {
      super(), this.chatAutoFill = new ChatAutoFill_ChatAutoFill(this), this.commands = new ChatCommands_ChatCommands(this), this.messagesLog = new MessagesLog_MessagesLog(e => this.onMessageLogCallback(e)), this.options = new ChatOptions_ChatOptions, this.$chat = document.createElement("div"), this.$messages = document.createElement("div"), this._$offers = document.createElement("div"), this.$inputWrap = document.createElement("div"), this.$input = document.createElement("input"), this.hideMessagesIntervalSec = 10, this.hideMessageIntervalSec = 5, this._input = false, this.events = new Events_Events, this._filter = new kd, Object.assign(this.options, e);
    }
    initialize() {
      super.initialize(), this._filter.addWords(...Cd), this.setListeners();
    }
    putTemplate() {
      DomUtils_DomUtils.insertCss(n(68)), this.$chat.id = "chat", np.get$Container().appendChild(this.$chat), np.device.isMobile() && this.$chat.classList.add("mobile"), this.$messages.classList.add("messages"), this.$messages.classList.add("scroll"), this.$messages.classList.add("scroll-slim"), this.$messages.classList.add("scroll-hide"), this.$chat.appendChild(this.$messages), this.$inputWrap.classList.add("input-wrap"), this.$chat.appendChild(this.$inputWrap), this.$input.id = "chat-input", this.$input.maxLength = 200, this.$input.placeholder = this.options.language.PRESS, this.$input.autocomplete = "off", this.$inputWrap.appendChild(this.$input), this._$offers.classList.add("offers"), this.chatColorsHelper = new ChatColorsHelper_ChatColorsHelper(this), this.chatTyping = new ChatTyping_ChatTyping(this), this.chatAutoFill.initialize(), this.commands.initialize();
    }
    setListeners() {
      np.events.on("gamePlay", () => this.onGamePlay()).setPriority(3), np.events.on("gameStart", () => this.onGameStart()), np.events.on("gameEnd", () => this.onGameEnd()), np.window.events.on("windowLoaded", () => this.onWindowLoaded()).setPriority(1), np.socket.events.on("disconnect", () => this.onSocketDisconnect()), np.socket.events.on("chat", e => this.onChat(e)), np.socket.events.on("kick", e => this.onKick(e)), np.socket.events.on("banned", e => this.onBanned(e)), np.socket.events.on("muted", e => this.onMuted(e)), np.input.events.on("beginInput", () => this.onBeginInput()), np.input.events.on("endInput", () => this.onEndInput()), this._keyDownListener = np.window.events.on("keydown", e => this.onKeyDown(e));
    }
    onBeginInput() {
      this._input = true;
    }
    onEndInput() {
      this._input = false;
    }
    onBanned(e) {
      this.setBan(e);
    }
    onMuted(e) {
      this.setMute(e);
    }
    onGamePlay() {
      const e = this.getBanData();
      e.isPresent() && (this.showBanPush(e.get()), np.events.getEvent("gamePlay").stop());
    }
    onWindowLoaded() {
      this.putTemplate();
    }
    onGameStart() {
      this.show(), this.enableListenerOnKeyDown();
    }
    onGameEnd() {
      setTimeout(() => this.hide(), 1), this.disableListenerOnKeyDown(), this.hideInput();
    }
    onSocketDisconnect() {
      this.disableListenerOnKeyDown(), this.hideInput();
    }
    onKick(e) {
      this.newMessage({senderName: "Server", message: e.message});
    }
    onChat(e) {
      setTimeout(() => this.newMessage(e), 1);
    }
    sendMessage(e) {
      if (!e.length) return;
      if (this.messagesLog.pushToHistory(e), this.commands.hasCommand(e)) return void this.commands.executeCommand(e);
      const t = this.getMutedData();
      if (t.isPresent() && "/" !== e[0] && "!" !== e[0]) this.showMutedMessage(t.get()); else if ("/" !== e[0] && UrlUtils_UrlUtils.isExistsLink(e)) this.newMessage({senderName: `${ChatColor_ChatColor.YELLOW.toString()}Game`, message: `${ChatColor_ChatColor.RED.toString()}Sending links allowed only for staff`}); else {
        try {
          e && (e = this._filter.clean(e));
        } catch (e) {}
        this.sendMessageForce(e), this.sendMessageToApi(e);
      }
    }
    sendMessageForce(e) {
      np.socket.send("chat", {global: true, message: e});
    }
    newMessage(e, t) {
      if (!this.$messages) return;
      let n;
      e.senderName = np.languages.parseText(ValueUtils.clearNotWhiteListedCharsInChat(e.senderName), this.options.serverLanguage), "" === e.fromUuid && (n = {time: e => {
        const t = ChatColor_ChatColor.clearFromColors(e);
        return e.replace(t, TimeUtils_TimeUtils.getReadableTimeFromSeconds(t));
      }}), e.message = np.languages.parseText(ValueUtils.clearNotWhiteListedCharsInChat(e.message), this.options.serverLanguage, n);
      const i = ChatColor_ChatColor.translateToHtml(ChatColor_ChatColor.BOLD + e.senderName + ChatColor_ChatColor.RESET + ": " + e.message);
      let r = true;
      this.$messages.clientHeight + this.$messages.scrollTop !== this.$messages.scrollHeight && (r = false), this.$messages.insertAdjacentHTML("beforeend", `\n            <div class="message show">${i}</div>\n        `), this.setHideMessageTimeout(t), this.setTimerHideMessages(t), r && this.scrollMessagesToBottom();
    }
    setHideMessageTimeout(e) {
      const t = this.$messages.lastElementChild;
      t && setTimeout(() => t.classList.remove("show"), e || 1e3 * this.hideMessageIntervalSec);
    }
    isInputVisible() {
      return this.$input && this.$input.classList.contains("show");
    }
    sendMessageToApi(e) {
      if (!this.options.discordChatLogChannelId) return;
      if (e.includes("/op")) {
        const [t] = e.split(" ");
        e = `\`${t} ******\``;
      }
      const t = `\`[${np.socket.getServerAddress().split(".")[0]}]\` ${this.getNickName()}: ${e}`;
      np.modules.mod.get(DiscordBot_DiscordBot).ifPresent(e => e.say(this.options.discordChatLogChannelId, t));
    }
    getNickName() {
      return np.getMyPlayer().map(e => e.serverProperties).map(e => e.name).orElse("");
    }
    enableListenerOnKeyDown() {
      this._keyDownListener.enable();
    }
    disableListenerOnKeyDown() {
      this._keyDownListener.disable();
    }
    onKeyDown(e) {
      switch (ad[e.customCode]) {
        case ad.Enter:
          this.onDownEnter();
          break;
        case ad.Slash:
          this.onDownSlash();
          break;
        case ad.Escape:
          this.onDownEsc();
      }
    }
    onDownEnter() {
      this.isInputVisible() ? (this.hideInput(), this.sendMessage(this.$input.value), this.$input.value = "") : this.showInput();
    }
    onDownSlash() {
      this.isInputVisible() || this.showInput();
    }
    onDownEsc() {
      this.isInputVisible() && this.hideInput();
    }
    show() {
      this.$chat && this.$chat.classList.add("show");
    }
    hide() {
      this.$chat.classList.remove("show"), this.hideInput();
    }
    showInput() {
      this._input || this.isInputVisible() || (np.input.events.emit("beginInput"), this.$chat.classList.add("highlighted"), this.$input.classList.add("show"), this.chatTyping.show(), this.$messages.classList.remove("scroll-hide"), this.$input.placeholder = this.options.language.PLACEHOLDER, this.showMessages(), this.scrollMessagesToBottom(), this.$input.focus(), this.events.emit("chatHighLighted"), this.$messages.insertAdjacentElement("afterend", this._$offers));
    }
    hideInput() {
      false !== this.isInputVisible() && (this.$chat.classList.remove("highlighted"), this.$input.classList.remove("show"), this.$messages.classList.add("scroll-hide"), this.chatTyping.hide(), np.input.events.emit("endInput"), this.$input.blur(), this.$input.placeholder = this.options.language.PRESS, this.scrollMessagesToBottom(), this.setTimerHideMessages(), this.events.emit("chatUnHighLighted"), this.$chat.contains(this._$offers) && this.$chat.removeChild(this._$offers));
    }
    onMessageLogCallback(e) {
      return !!this.isInputVisible() && (this.$input.value = e, true);
    }
    scrollMessagesToBottom() {
      this.$messages.scrollTop = this.$messages.scrollHeight;
    }
    setTimerHideMessages(e) {
      this.clearTimerHideMessages(), this.showMessages(), this.timerHideMessages = setInterval(() => {
        this.clearTimerHideMessages(), this.isInputVisible() || this.hideMessages();
      }, e || 1e3 * this.hideMessagesIntervalSec);
    }
    clearTimerHideMessages() {
      this.timerHideMessages && (clearInterval(this.timerHideMessages), this.timerHideMessages = null);
    }
    showMessages() {
      this.$messages.classList.add("show");
    }
    hideMessages() {
      this.$messages.classList.remove("show");
    }
    setBan(e) {
      e.startTime = this.getCurrentSeconds();
      const t = JSON.stringify(e);
      np.started = false, np.events.emit("gameEnd"), np.screens.show(this.options.mainScreenName), np.storage.setItem(`banned_${np.connector.connectionData.accessToken}`, t), this.showBanPush(e);
    }
    getBanData() {
      const e = np.storage.getItem(`banned_${np.connector.connectionData.accessToken}`);
      if (e) try {
        const t = JSON.parse(e);
        if (t.startTime + t.time >= this.getCurrentSeconds()) return Optional.ofNullable(t);
      } catch (e) {
        return Optional.empty();
      }
      return Optional.empty();
    }
    showBanPush(e) {
      const t = e.reason, n = TimeUtils_TimeUtils.getReadableTimeFromSeconds(e.startTime + e.time - this.getCurrentSeconds()), i = StringUtils_StringUtils.insertValues(this.options.language.banned.tooltip.text, {timeLeft: n, reason: t});
      DomPush_DomPush.showError(this.options.language.banned.tooltip.title, i, MillisHelper.fromSecond(10));
    }
    setMute(e) {
      e.startTime = this.getCurrentSeconds();
      const t = JSON.stringify(e);
      this.showMutedMessage(e), np.storage.setItem(`muted_${np.connector.connectionData.accessToken}`, t);
    }
    getMutedData() {
      const e = np.storage.getItem(`muted_${np.connector.connectionData.accessToken}`);
      if (e) try {
        const t = JSON.parse(e);
        if (t.startTime + t.time >= this.getCurrentSeconds()) return Optional.ofNullable(t);
      } catch (e) {
        return Optional.empty();
      }
      return Optional.empty();
    }
    showMutedMessage(e) {
      const t = e.reason, n = TimeUtils_TimeUtils.getReadableTimeFromSeconds(e.startTime + e.time - this.getCurrentSeconds()), i = StringUtils_StringUtils.insertValues(this.options.language.muted, {timeLeft: n, reason: t});
      this.newMessage({senderName: `${ChatColor_ChatColor.YELLOW.toString()}Game`, message: `${ChatColor_ChatColor.RED.toString()}${i}`});
    }
    getCurrentSeconds() {
      return Math.round(+new Date / 1e3);
    }
    get$Offers() {
      return this._$offers;
    }
  }
  class DiscordOptions {}
  class Discord_Discord extends Module_Module {
    constructor(e) {
      super(), this.options = new DiscordOptions, this.events = new Events_Events, Object.assign(this.options, e);
    }
    openWindow() {
      this.setJoined(true), DomUtils_DomUtils.openLink(this.options.url);
    }
    isJoined() {
      return !!np.storage.getItem("Discord_joined");
    }
    setJoined(e) {
      e ? (np.storage.setItem("Discord_joined", "1"), this.events.emit("join")) : (np.storage.setItem("Discord_joined", ""), this.events.emit("unJoin"));
    }
    static isJoined() {
      return np.modules.mod.get(Discord_Discord).filter(e => e.isJoined()).isPresent();
    }
  }
  class FxParticles_FxParticles extends Module_Module {
    constructor(e) {
      super(), this._options = e;
    }
    initialize() {
      super.initialize(), np.socket.events.on("fx_effect", e => this.onFxParticle(e));
    }
    onFxParticle(e) {
      this._options.map[e.name] ? new this._options.map[e.name](e) : console.log(`Unknown fx effect ${e.name}`, e);
    }
  }
  var Rd, Ld;
  !function (e) {
    e[e.DOM = 0] = "DOM", e[e.STYLE = 1] = "STYLE";
  }(Rd || (Rd = {}));
  class DomModal_DomModal {
    constructor(e, t, n = np.get$Container()) {
      this.events = new Events_Events, this._$modals = document.createElement("div"), this._$modal = document.createElement("div"), this._$container = document.createElement("div"), this._$contentWrap = document.createElement("div"), this._$content = document.createElement("div"), this._$title = document.createElement("div"), this._$titleText = document.createElement("span"), this._$close = document.createElement("button"), this._closableBackground = true, this.hideOnEscapeKey = true, this._hideType = Rd.DOM, this._$parent = n, this.title = e, this.content = t, this.set$Modals(), this.build(), this.setListeners();
    }
    set$Modals() {
      this._$modals = this._$parent.querySelector("#modals"), this._$modals || this.create$Modals();
    }
    create$Modals() {
      DomUtils_DomUtils.insertCss(n(69).toString()), this._$modals = document.createElement("div"), this._$modals.id = "modals", this._$parent.appendChild(this._$modals);
    }
    build() {
      this._$modal.classList.add("modal"), this._$container.classList.add("container"), this._$content.classList.add("content"), this._$content.classList.add("scroll"), this._$contentWrap.classList.add("content-wrap"), this._$title.classList.add("title"), this._$close.classList.add("close"), this._$close.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.cross)), this._$title.appendChild(this._$titleText), this._$contentWrap.appendChild(this._$close), this._$contentWrap.appendChild(this._$title), this._$contentWrap.appendChild(this._$content), this._$container.appendChild(this._$contentWrap), this._$modal.appendChild(this._$container);
    }
    setListeners() {
      np.utils.Dom.addPointerUp(this._$container, e => {
        e.target === this._$container && this._closableBackground && this.hide();
      }), np.utils.Dom.addPointerUp(this._$close, () => this.hide()), np.utils.Dom.addPointerUp(this._$parent, e => {
        const t = e.target;
        t && t.dataset && t.dataset.modal && t.dataset.modal === this.id && this.show();
      }), np.window.events.on("keydown", e => this.onKeyDown(e));
    }
    onKeyDown(e) {
      false !== this.hideOnEscapeKey && ad[e.code] === ad.Escape && this.hide();
    }
    set title (e) {
      this._$titleText.innerText = e;
    }
    get title() {
      return this._$titleText.innerText;
    }
    set id (e) {
      this._$modal.id = e;
    }
    get id() {
      return this._$modal.id;
    }
    set closableBackground (e) {
      this._closableBackground = e;
    }
    get closableBackground() {
      return this._closableBackground;
    }
    set content (e) {
      this._$content.innerHTML = "", this._$content.appendChild(e);
    }
    get content() {
      return this._$content.firstElementChild;
    }
    set loading (e) {
      e ? this._$contentWrap.classList.add("loading") : this._$contentWrap.classList.remove("loading");
    }
    get loading() {
      return this._$contentWrap.classList.contains("loading");
    }
    show() {
      this._hideType === Rd.DOM ? this._$modals.appendChild(this._$modal) : this._hideType === Rd.STYLE && (false === this._$modals.contains(this._$modal) && this._$modals.appendChild(this._$modal), this._$modal.classList.remove("hide")), this.events.emit("show");
    }
    hide() {
      false !== this.isDisplaying() && (this._hideType === Rd.DOM ? this._$modals.removeChild(this._$modal) : this._hideType === Rd.STYLE && this._$modal.classList.add("hide"), this.events.emit("hide"));
    }
    toggle() {
      this.isDisplaying() ? this.hide() : this.show();
    }
    isDisplaying() {
      return this._hideType === Rd.DOM ? this._$modals.contains(this._$modal) : this._hideType === Rd.STYLE && !this._$modal.classList.contains("hide");
    }
    setHideType(e) {
      e === Rd.STYLE ? false === this.isDisplaying() && this._$modal.classList.add("hide") : this._$modal.classList.remove("hide"), this._hideType = e;
    }
    get$Modal() {
      return this._$modal;
    }
    get$Container() {
      return this._$container;
    }
    get$ContentWrap() {
      return this._$contentWrap;
    }
    get$Content() {
      return this._$content;
    }
    get$Close() {
      return this._$close;
    }
    get$Title() {
      return this._$title;
    }
  }
  class GameFeedBack_GameFeedBack extends Module_Module {
    constructor(e) {
      super(), this._language = n(70)("./" + np.languages.activeLanguage + ".json"), this.sending = false, this._gameStartCount = 0, this._playClickCount = 0, this._fpsSum = 0, this._fpsCount = 0, this._pingSum = 0, this._pingCount = 0, this._options = e;
    }
    initialize() {
      super.initialize(), np.canvas.setIntervalFrames(() => this.updateFps(), 120), np.socket.events.on("pong", e => this.onPong(e)), np.modules.mod.get(DiscordBot_DiscordBot).ifPresentOrElse(() => {
        this.putTemplate(), this.setListeners();
      }, () => {
        console.error("DiscordBot module is required");
      });
    }
    putTemplate() {
      DomUtils_DomUtils.insertCss(n(73)), np.get$Container().insertAdjacentHTML("beforeend", n(74)(this._language)), np.get$Container().insertAdjacentHTML("beforeend", n(89)(this._language)), this._$contentModalFeedback = np.get$Container().querySelector("#content-game-feedback"), this._$like = this._$contentModalFeedback.querySelector(".what-like"), this._$improve = this._$contentModalFeedback.querySelector(".what-improve"), this._$contact = this._$contentModalFeedback.querySelector(".contact"), this._modal = new DomModal_DomModal(this._language.title, this._$contentModalFeedback), this._modal.get$Modal().classList.add("modal-game-feedback"), this.$widget = document.getElementById("leave-game-feedback"), this.$button = this._$contentModalFeedback.querySelector(".send-feedback");
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.events.on("gameEnd", () => this.onGameEnd()), this.$widget.addEventListener("click", () => this.onClickFeedbackButton()), this.$button.addEventListener("click", () => this.onClickButton());
    }
    setPlayButtonListener(e) {
      e.addEventListener("click", e => this.onClickPlayButton());
    }
    onGameEnd() {
      this.showWidget();
    }
    onGameStart() {
      this._gameStartCount++, this.increaseTotalGamesCount(), this.hideWidget();
    }
    onClickPlayButton() {
      this._playClickCount++;
    }
    onClickFeedbackButton() {
      this.show();
    }
    onClickButton() {
      this.sendFeedBack();
    }
    sendFeedBack() {
      if (this.sending) return;
      let e = false;
      this._$rate = this._$contentModalFeedback.querySelector("input[name='game-rate']:checked"), this._$rate || (DomPush_DomPush.showWarning(this._language.errorRate), e = true), 0 === this._$like.value.length && (DomPush_DomPush.showWarning(this._language.errorLike), e = true), 0 === this._$improve.value.length && (DomPush_DomPush.showWarning(this._language.errorImprove), e = true), e || (this.$button.classList.add("loading"), np.modules.mod.get(DiscordBot_DiscordBot).ifPresent(e => {
        this.sending = true;
        let t = "";
        t += `**GAME MOD**: ${np.modules.mod.name}\n`, t += `**Nickname**: ${np.connector.getUserName()}\n`, t += `**Rate**: ${this._$rate.value}\n`, t += `**Like**: ${this._$like.value}\n`, t += `**Improve**: ${this._$improve.value}\n`, t += `**Contact**: ${this._$contact.value}\n`, t += "```", t += `User-Agent: ${navigator.userAgent}\n`, t += `Is mobile: ${np.device.isMobile()}\n`, t += `OS: ${Ku[np.device.getOs()]}\n`;
        let n = false;
        np.modules.mod.get(HasBlockAd_HasBlockAd).ifPresent(e => {
          e.isAdsBlocked && (n = true);
        }), t += `Block ad: ${n ? "true" : "false"}\n`, t += `Socket Connected: ${np.socket.isConnected()}\n`, t += `Games count: ${this._gameStartCount}\n`, t += `Total games count: ${this.getTotalGamesCount()}\n`, t += `Play click count: ${this._playClickCount}\n`, t += `window.location: ${window.location}\n`, t += `window.parent.location: ${window.parent.location}\n`, t += `Avg Fps: ${Math.round(this.getAvgFps())}\n`, t += `Avg Ping: ${Math.round(this.getAvgPing())}\n`, t += `Resolution: ${np.canvas.renderer.viewPortSize.x}x${np.canvas.renderer.viewPortSize.y}\n`, t += `Resolution scale: ${np.canvas.renderer.resolutionScale}\n`, t += "```", e.say(this._options.channelId, t).then(() => this.showSuccessModal(), () => this.showErrorModal());
      }));
    }
    showSuccessModal() {
      this.sending = false, this.clearForm(), this.$button.classList.remove("loading"), DomPush_DomPush.showSuccess(this._language.successSubmitTitle, this._language.successSubmitText), this.hideAllModals();
    }
    hideAllModals() {
      this.clearForm(), this._modal.hide();
    }
    showErrorModal() {
      this.sending = false, this.$button.classList.remove("loading"), DomPush_DomPush.showSuccess(this._language.errorSubmitTitle, this._language.errorSubmitText);
    }
    clearForm() {
      this.$button.classList.remove("loading");
      const e = document.getElementsByName("game-rate");
      for (let t = 0; t < e.length; t++) e[t].checked = false;
      this._$like.value = "", this._$improve.value = "", this._$contact.value = "";
    }
    show() {
      this._modal.show();
    }
    showWidget() {
      this.$widget.classList.add("show");
    }
    hideWidget() {
      this.$widget.classList.remove("show");
    }
    getTotalGamesCount() {
      const e = np.storage.getItem("totalGamesCount");
      return e && e.length ? parseInt(e, 10) : 0;
    }
    increaseTotalGamesCount() {
      let e = this.getTotalGamesCount();
      e++, np.storage.setItem("totalGamesCount", e.toString());
    }
    updateFps() {
      this._fpsCount++, this._fpsSum += np.canvas.fps;
    }
    onPong(e) {
      this._pingCount++, this._pingSum += e;
    }
    getAvgFps() {
      return this._fpsSum / this._fpsCount;
    }
    getAvgPing() {
      return this._pingSum / this._pingCount;
    }
  }
  class GameMetrics_GameMetrics extends Module_Module {
    constructor() {
      super(...arguments), this._language = n(90)("./" + np.languages.activeLanguage + ".json"), this._updateMetricsInterval = 1e3, this._serverEntitiesCount = 0;
    }
    initialize() {
      super.initialize(), DomUtils_DomUtils.insertCss(n(93)), this.putTemplate(), this.setListeners(), this.addGameMetriscCommand();
    }
    putTemplate() {
      np.get$Container().insertAdjacentHTML("beforeend", n(94)(this._language)), this.$gameMetrics = document.body.querySelector(".game-metrics"), this._$cachedEntitiesCount = this.$gameMetrics.querySelector(".cached-entities-count span"), this._$entitiesCount = this.$gameMetrics.querySelector(".entities-count span"), this._$drawableEntitiesCount = this.$gameMetrics.querySelector(".drawable-entities-count span"), this._$serverEntitiesCount = this.$gameMetrics.querySelector(".server-entities-count span"), this._$box2dActiveEntitiesCount = this.$gameMetrics.querySelector(".box2d-active-entities-count span"), this._$box2dEntitiesCount = this.$gameMetrics.querySelector(".box2d-entities-count span"), this._$box2dJointsCount = this.$gameMetrics.querySelector(".box2d-joints-count span"), this._$sceneObjects3dAllCount = this.$gameMetrics.querySelector(".scene-objects3d-all-count span"), this._$instancedObjects = this.$gameMetrics.querySelector(".instanced-objects-count span"), this._$instancedBusyPlaces = this.$gameMetrics.querySelector(".instanced-busy-places-count span"), this._$instancedPlaces = this.$gameMetrics.querySelector(".instanced-places-count span"), this._$sceneHudObjects3dAllCount = this.$gameMetrics.querySelector(".scene-hud-objects3d-all-count span"), this._$memoryGeometriesCount = this.$gameMetrics.querySelector(".memory-geometries-count span"), this._$memoryTexturesCount = this.$gameMetrics.querySelector(".memory-textures-count span"), this._$renderTrianglesCount = this.$gameMetrics.querySelector(".render-triangles-count span"), this._$cachedSoundsCount = this.$gameMetrics.querySelector(".cached-sounds-count span");
    }
    setListeners() {}
    addGameMetriscCommand() {
      np.modules.mod.get(Chat_Chat).ifPresent(e => {
        e.commands.addCommand(new ChatCommand_ChatCommand("gameMetrics", "game metrics", e => this.commandGameMetricsHandler(e)));
      });
    }
    commandGameMetricsHandler(e) {
      "" === this.$gameMetrics.style.display || "none" === this.$gameMetrics.style.display ? (this.updateMetrics(), this.enableUpdater(), this.$gameMetrics.style.display = "block") : (this.$gameMetrics.style.display = "none", this.disableUpdater());
    }
    enableUpdater() {
      this._timerUpdater || (this._timerUpdater = setInterval(() => this.updateMetrics(), this._updateMetricsInterval));
    }
    disableUpdater() {
      clearInterval(this._timerUpdater), this._timerUpdater = null;
    }
    updateMetrics() {
      this.updateServerEntitiesCount(), this._$cachedEntitiesCount.innerText = np.spawner.factory.getCount(), this._$entitiesCount.innerText = Object.keys(np.entities.entities).length, this._$drawableEntitiesCount.innerText = np.drawer.getCount(), this._$serverEntitiesCount.innerText = this._serverEntitiesCount, this._$box2dActiveEntitiesCount.innerText = np.world.activeEntitiesCount.toString(), this._$box2dEntitiesCount.innerText = np.world.entityCount.toString(), this._$sceneObjects3dAllCount.innerText = GameMetrics_GameMetrics.getCountChildrenInObject3d(np.canvas.getScene()), this._$sceneHudObjects3dAllCount.innerText = GameMetrics_GameMetrics.getCountChildrenInObject3d(np.canvas.getSceneHud()), this._$instancedObjects.innerText = np.instancedEntities.getObjectsCount(), this._$instancedPlaces.innerText = np.instancedEntities.getPlacesCount(), this._$instancedBusyPlaces.innerText = np.instancedEntities.getPlacesCount() - np.instancedEntities.getFreePlacesCount(), np.canvas.renderer.renderer && np.canvas.renderer.renderer.info && (np.canvas.renderer.renderer.info.memory && (this._$memoryGeometriesCount.innerText = np.canvas.renderer.renderer.info.memory.geometries, this._$memoryTexturesCount.innerText = np.canvas.renderer.renderer.info.memory.textures), np.canvas.renderer.renderer.info.render && (this._$renderTrianglesCount.innerText = np.canvas.renderer.renderer.info.render.triangles)), this._$cachedSoundsCount.innerText = np.sounds.getCachedCount();
    }
    updateServerEntitiesCount() {
      this._serverEntitiesCount = 0;
      for (const e in np.entities.entities) np.entities.entities[e].isServer && this._serverEntitiesCount++;
    }
    static getCountChildrenInObject3d(e) {
      let t = 0;
      if (e.children && e.children.length) for (const n in e.children) t += GameMetrics_GameMetrics.getCountChildrenInObject3d(e.children[n]);
      return ++t;
    }
  }
  class GameAdsIo_GameAdsIo extends Module_Module {
    constructor() {
      super(...arguments), this._gameAdsBanner = new DomDiv_DomDiv, this._loaded = false;
    }
    initialize() {
      super.initialize(), this._gameAdsBanner.get$Element().id = "gameadsbanner", this._gameAdsBanner.get$Element().style.marginTop = "1vw";
    }
    loadAd(e = Date.now()) {
      if (!this._loaded) {
        this._loaded = true;
        const e = '(function(g,a,m,e,A,d,s){g[A]=g[A]||function(){(g[A].s=g[A].s||[]).push(arguments)};\n               g[A].l=1*new Date();d=a.createElement("script"),s=a.getElementsByTagName("script")[0],d.async=1,d.src=e+"?objid="+m+"&jsdate="+(+new Date())+"&lang="+g.navigator.language+"&rfunc="+A+"&fromhost="+g.location.hostname+"&refr="+encodeURIComponent(a.referrer)+"&fromurl="+encodeURIComponent(g.location.href)+"",s.parentNode.insertBefore(d,s)})\n           (window, document, "gameadsbanner", "https://n.gameads.io/getcode", "GameAdsRenew");';
        return void DomUtils_DomUtils.insertScriptHtml(e);
      }
      if (e + MillisHelper.fromSecond(10) < Date.now()) return;
      const t = window.GameAdsRenew;
      t ? t(this._gameAdsBanner.get$Element().id) : setTimeout(() => {
        this.loadAd(e);
      }, 1e3);
    }
    getBanner() {
      return this._gameAdsBanner;
    }
  }
  class PlayGamesIo_PlayGamesIo extends Module_Module {
    constructor() {
      super(...arguments), this._resolves = [];
    }
    initialize() {
      if (super.initialize(), window.location !== window.parent.location && ~document.referrer.indexOf("crazygames")) return;
      "vk-iframe" !== UrlUtils_UrlUtils.getParameter("disable-ads") && false === np.device.isMobile() && this.setListeners();
    }
    setListeners() {
      this._listeners.add(np.window.events.on("windowLoaded", () => this.onWindowLoaded()));
    }
    onWindowLoaded() {
      this.loadScript();
    }
    loadScript() {
      DomUtils_DomUtils.insertScript({src: "https://playgamesio.net/widget.js", callback: () => this.onScriptLoaded()});
    }
    onScriptLoaded() {
      window.PGI ? (this._pgi = new window.PGI, this._resolves.forEach(e => e(this._pgi.createWidget()))) : this._resolves.forEach(e => e(undefined));
    }
    createWidget(e, t = {}) {
      const n = new Promise(e => {
        this._pgi ? e(this._pgi.createWidget()) : this._resolves.push(e);
      });
      return n.then(n => {
        n && (n.update(t), e.appendChild(n.container));
      }), n;
    }
  }
  class GameSiteApi_GameSiteApi {
    static get(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.query({url: e, data: t, success: n, error: i}));
    }
    static getServer(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.query({url: "servers/server", data: {ip: e, port: t}, success: n, error: i}));
    }
    static getAvailableServers(e = "") {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.query({url: "servers/available", data: {version: e}, success: t, error: n}));
    }
    static getAvailableServer(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.query({url: "servers/available-server", data: {version: e}, success: t, error: n}));
    }
    static signIn(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.post({url: "users/sign-in", data: {nickname: e, password: t}, success: n, error: i}));
    }
    static signInViaVk(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.post({url: "vk/user", data: {id: e, firstName: t}, success: n, error: i}));
    }
    static saveServerAccessToken(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: "users/access-token", data: {access_token: e}, success: t, error: n}));
    }
    static setAsFriendVkUsers(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: "vk/set-as-friends", data: {ids: e}, success: t, error: n}));
    }
    static signUp(e, t, n) {
      const i = {nickname: e, password: t};
      return n && (i.referral = n), new Promise((e, t) => GameSiteApi_GameSiteApi.post({url: "users/sign-up", data: i, success: e, error: t}));
    }
    static signOut() {
      return new Promise((e, t) => GameSiteApi_GameSiteApi.query({url: "users/sign-out", success: e, error: t}));
    }
    static getUserPermissions(e) {
      return GameSiteApi_GameSiteApi.get("permissions", {accessToken: e});
    }
    static updateDiscordNickname(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: "discord/update-nickname", data: {nickname: e}, success: t, error: n}));
    }
    static updatePassword(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.post({url: "users/update-password", data: {cur_pass: e, new_pass: t}, success: n, error: i}));
    }
    static getCurrentDiscordUser() {
      return new Promise((e, t) => GameSiteApi_GameSiteApi.query({url: "discord/current", success: e, error: t}));
    }
    static hasPermission(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.query({url: "users/has-permission", data: {permission: e}, success: t, error: n}));
    }
    static getCurrentUser() {
      return GameSiteApi_GameSiteApi.get("users/current");
    }
    static sendUserActive() {
      return new Promise((e, t) => GameSiteApi_GameSiteApi.post({url: "users/active", success: e, error: t}));
    }
    static sendUserOffline() {
      return new Promise((e, t) => GameSiteApi_GameSiteApi.post({url: "users/offline", success: e, error: t}));
    }
    static getDirectoryContent(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.query({url: "files/directory", data: {path: e}, success: t, error: n}));
    }
    static uploadFile(e, t, n) {
      return n.append("filename", t), n.append("path", e), new Promise((e, t) => GameSiteApi_GameSiteApi.sendFormData({url: "files/file", data: n, success: e, error: t}));
    }
    static createFolder(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `pw/files/directory/${e}`, success: t, error: n}));
    }
    static deleteFolder(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.query({method: Md.DELETE, url: `pw/files/${e}`, success: t, error: n}));
    }
    static downloadFile(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.download({url: "files/file", data: {path: e, filename: t}, success: n, error: i}));
    }
    static deleteFile(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.delete({url: "files/file", data: {path: e, filename: t}, success: n, error: i}));
    }
    static getUser(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.query({url: `users/${e}`, success: t, error: n}));
    }
    static sendAdBlock(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: "users/ad-block", data: {status: e}, success: t, error: n}));
    }
    static getNotifications() {
      return GameSiteApi_GameSiteApi.get("notifications/poll");
    }
    static getJsVersion() {
      return GameSiteApi_GameSiteApi.get("js/version");
    }
    static getUsersByNickname(e) {
      return GameSiteApi_GameSiteApi.get(`users/name/${e}`);
    }
    static getFriends() {
      return GameSiteApi_GameSiteApi.get("friends/list");
    }
    static sendFriendRequest(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `friends/send-request/${e}`, success: t, error: n}));
    }
    static setAsFriendForce(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `friends/set-as-friend-force/${e}`, success: t, error: n}));
    }
    static acceptFriendRequest(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `friends/accept-request/${e}`, success: t, error: n}));
    }
    static removeFriend(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `friends/remove/${e}`, success: t, error: n}));
    }
    static getCurrentTeam() {
      return GameSiteApi_GameSiteApi.get("teams/current");
    }
    static buyShopItem(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `shop/buy/${e}`, success: t, error: n}));
    }
    static getInventory() {
      return GameSiteApi_GameSiteApi.get("inventory");
    }
    static addToInventory(e, t = 1) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.post({url: "inventory/add-from-shop", data: {shopId: e, amount: t}, success: n, error: i}));
    }
    static removeFromInventory(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: "inventory/remove", data: {itemId: e}, success: t, error: n}));
    }
    static createTeam(e, t) {
      return new Promise((n, i) => GameSiteApi_GameSiteApi.post({url: `teams/create/${e}/${t}`, success: n, error: i}));
    }
    static leaveTeam() {
      return new Promise((e, t) => GameSiteApi_GameSiteApi.post({url: "teams/leave", success: e, error: t}));
    }
    static inviteToTeam(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `teams/invite/${e}`, success: t, error: n}));
    }
    static joinToTeam(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `teams/join/${e}`, success: t, error: n}));
    }
    static kickFromTeam(e) {
      return new Promise((t, n) => GameSiteApi_GameSiteApi.post({url: `teams/kick/${e}`, success: t, error: n}));
    }
    static getRootFilesPath() {
      return GameSiteApi_GameSiteApi.getUrl("files");
    }
    static getUrlForDownLoadFile(e) {
      np.modules.mod.version;
      const t = `files/file${e}`;
      return GameSiteApi_GameSiteApi.getUrl(t);
    }
    static post(e) {
      XhrUtils.post(this.prepareOptions(e));
    }
    static sendFormData(e) {
      XhrUtils.sendFormData(this.prepareOptions(e));
    }
    static query(e) {
      XhrUtils.query(this.prepareOptions(e));
    }
    static delete(e) {
      XhrUtils.delete(this.prepareOptions(e));
    }
    static download(e) {
      XhrUtils.download(this.prepareOptions(e));
    }
    static prepareOptions(e) {
      const t = new XhrDefaultOptions;
      let n;
      Object.assign(t, e), t.url = GameSiteApi_GameSiteApi.getUrl(t.url), location.host !== np.modules.mod.apiHost && (n = np.storage.getItem("session_id"));
      const i = UrlUtils_UrlUtils.getParameter("session-id");
      i && (n = i), n && Object.assign(t.headers, {"session-id": n});
      const r = t.error;
      return t.error = e => {
        GameSiteApi_GameSiteApi.onError(e), r(e);
      }, t;
    }
    static getUrl(e) {
      return `//${np.modules.mod.apiHost}${np.modules.mod.apiPath}/${e}`;
    }
    static onError(e) {}
  }
  !function (e) {
    e[e.http = 0] = "http", e[e.socket = 1] = "socket";
  }(Ld || (Ld = {}));
  class PingServer_PingServer {
    constructor(e, t = Ld.http) {
      this._ping = 0, this._address = e, this._pingType = t;
    }
    ping() {
      return new Promise((e, t) => {
        this._pingType === Ld.http ? this.pingViaHttp(e, t) : this._pingType === Ld.socket && this.pingViaSocket();
      });
    }
    pingViaHttp(e, t) {
      const n = UrlUtils_UrlUtils.getHostFromAddress(this._address);
      XhrUtils.query({url: `//${n}/server/info`, start: () => this._ping = performance.now(), receivedRequest: () => e(performance.now() - this._ping), error: e => t(e)});
    }
    pingViaSocket() {
      this._socket && (this._socket.connected ? this.sendPing() : this._socket.connectToServer());
    }
    sendPing() {
      this._socket && (this._ping = performance.now(), this._socket.emit("ping"));
    }
    destroy() {
      this._socket && this._socket.destroy();
    }
  }
  class ServerSelectorServerItem_ServerSelectorServerItem {
    constructor(e) {
      this._language = n(25)("./" + np.languages.activeLanguage + ".json"), this._ping = ServerSelectorServerItem_ServerSelectorServerItem.MAX_PING, this._$option = document.createElement("option"), this._data = e, this._pingServer = new PingServer_PingServer(this.getAddress(), Ld.http), this.update$Option();
    }
    updatePing() {
      const e = this._pingServer.ping();
      return e.then(e => this.onPingServer(e / 5)).catch(e => this.onError(e)), e;
    }
    onPingServer(e) {
      this._ping = e, this._$option.text = this.getOptionText();
    }
    onError(e) {
      this._ping = ServerSelectorServerItem_ServerSelectorServerItem.MAX_PING;
    }
    getAddress() {
      return `${this.getData().ip}:${this.getData().port}`;
    }
    getPing() {
      return this._ping;
    }
    get$Option() {
      return this._$option;
    }
    getOptionText() {
      return `${this.getData().name} [${this.getPlayersText()} ${this.getPingText(this.getPing())}]`;
    }
    getPlayersText() {
      return `${this.getData().players_online}/${this.getData().max_online} ${this._language.players}`;
    }
    getPingText(e) {
      return e === ServerSelectorServerItem_ServerSelectorServerItem.MAX_PING ? "" : `| ${this._language.ping} ${e.toFixed(0)} ${this._language.ms}.`;
    }
    getData() {
      return this._data;
    }
    isFull() {
      return this.getData().players_online >= this.getData().max_online;
    }
    getLoadedProgress() {
      return ValueUtils.limit(this.getData().players_online / this.getData().max_online, 0, 1);
    }
    update(e) {
      this._data = e, this.update$Option();
    }
    update$Option() {
      this._$option.value = this.getAddress(), this._$option.text = this.getOptionText();
    }
    destroy() {
      this._$option.remove();
    }
  }
  ServerSelectorServerItem_ServerSelectorServerItem.MAX_PING = 9999;
  class ServerSelector_ServerSelector extends Module_Module {
    constructor() {
      super(...arguments), this._language = n(25)("./" + np.languages.activeLanguage + ".json"), this._$selector = document.createElement("select"), this._updatingIntervalMs = MillisHelper.fromSecond(10), this._totalOnline = 0, this._totalMaxOnline = 0, this._serversLoaded = false, this._servers = [], this._selectorOpened = false, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), UrlUtils_UrlUtils.getParameter("address") ? this.hideSelector() : this.setListeners();
    }
    setListeners() {
      np.window.events.on("windowLoaded", () => this.showServerSelector()), this._$selector.addEventListener("change", () => this.onChange$Selector(true)), this._$selector.addEventListener("click", () => this.onClick$Selector()), this._$selector.addEventListener("keyup", e => this.onKeyUp$Selector(e)), this._$selector.addEventListener("blur", () => this.onBlur$Selector());
    }
    onChange$Selector(e = false) {
      this._$selector.value && (e && (this._selected$Option = this._$selector.selectedOptions[0]), np.socket.setServerAddress(this._$selector.value), this._selectorOpened = false, this.toggleUpdating());
    }
    onClick$Selector() {
      this._selectorOpened = true, this.toggleUpdating();
    }
    onKeyUp$Selector(e) {
      ad[e.code] !== ad.Escape && ad[e.code] !== ad.Enter || (this._selectorOpened = false, this.toggleUpdating());
    }
    onBlur$Selector() {
      this._selectorOpened = false, this.startUpdating();
    }
    showServerSelector() {
      this.startUpdating();
    }
    toggleUpdating() {
      this._selectorOpened ? this.stopUpdating() : this.startUpdating();
    }
    startUpdating() {
      this._timerUuid || UrlUtils_UrlUtils.getParameter("address") || (this.updateAvailableServers(), this._timerUuid = np.ticker.addToTicker({func: () => this.updateAvailableServers(), tps: MillisHelper.msToTps(this._updatingIntervalMs)}));
    }
    stopUpdating() {
      this._timerUuid && (np.ticker.removeFromTicker(this._timerUuid), this._timerUuid = null);
    }
    updateAvailableServers() {
      GameSiteApi_GameSiteApi.getAvailableServers(np.modules.mod.version.toString()).then(e => this.onGetAvailableServers(e.servers)).catch(e => this.onError(e));
    }
    async onGetAvailableServers(e) {
      if (this._selectorOpened) return false;
      this._totalOnline = 0, this._totalMaxOnline = 0, this.updateServerListItems(e).then(() => {
        const e = this._servers[0];
        e && (this._myRegion = e.getData().region);
      }), this.showSelectorIfNeed(e), false === this._serversLoaded && (this._serversLoaded = true, this.events.emit("serverSelectorOnGetServers"));
    }
    updateServerListItems(e) {
      const t = [];
      for (let n = 0; n < this._servers.length; n++) {
        let i = false;
        for (let r = 0; r < e.length; r++) if (this._servers[n].getData().id === e[r].id) {
          i = true, t.push(this.updateServerListItem(this._servers[n], e[r]));
          break;
        }
        false === i && (this._servers[n].destroy(), this._servers.splice(n, 1));
      }
      for (let n = 0; n < e.length; n++) {
        let i = false;
        for (let t = 0; t < this._servers.length; t++) if (this._servers[t].getData().id === e[n].id) {
          i = true;
          break;
        }
        false === i && t.push(this.appendServerListItem(e[n]));
      }
      return Promise.all(t);
    }
    updateServerListItem(e, t) {
      if (this._selectorOpened) return Promise.reject();
      this._totalOnline += t.players_online, this._totalMaxOnline += t.max_online, e.update(t);
      const n = e.updatePing();
      return n.then(e => this.onUpdatePingServerListItem(e)).catch(e => {}), n;
    }
    appendServerListItem(e) {
      if (this._selectorOpened) return Promise.reject();
      const t = new ServerSelectorServerItem_ServerSelectorServerItem(e);
      return this._servers.push(t), this._$selector.appendChild(t.get$Option()), this.updateServerListItem(t, e);
    }
    onUpdatePingServerListItem(e) {
      this.sortSelectorByPing();
    }
    sortSelectorByPing() {
      if (this._selectorOpened) return Promise.reject();
      this._servers.sort((e, t) => this.sortServerListItemsByPing(e, t)), DomUtils_DomUtils.cleanElement(this._$selector), this.appendOptions(), this.appendTotalOnline(), this._selected$Option ? this._$selector.selectedIndex = this._selected$Option.index : (this.selectFirstOption(), this.onChange$Selector());
    }
    sortServerListItemsByPing(e, t, n = true) {
      const i = e.isFull() ? ServerSelectorServerItem_ServerSelectorServerItem.MAX_PING : e.getPing(), r = t.isFull() ? ServerSelectorServerItem_ServerSelectorServerItem.MAX_PING : t.getPing();
      return n ? i - r : r - i;
    }
    sortServerListItemsByLoaded(e, t, n = true) {
      return n ? e.getLoadedProgress() - t.getLoadedProgress() : t.getLoadedProgress() - e.getLoadedProgress();
    }
    selectFirstOption() {
      const e = this._$selector.firstChild;
      e && (e.selected = true);
    }
    appendOptions() {
      for (let e = 0; e < this._servers.length; e++) this._$selector.appendChild(this._servers[e].get$Option());
    }
    appendTotalOnline() {
      const e = document.createElement("option");
      e.disabled = true, e.innerText = `${this._language.totalOnline} ${this._totalOnline}/${this._totalMaxOnline}`, this._$selector.appendChild(e);
    }
    showSelectorIfNeed(e) {
      return e.length > 1 ? (this.showSelector(), true) : (this.hideSelector(), false);
    }
    showSelector() {
      this._$selector.classList.add("show");
    }
    hideSelector() {
      this._$selector.classList.remove("show");
    }
    onError(e) {
      this.hideSelector();
    }
    getLowestLoadedServerAddress() {
      this._servers.sort((e, t) => this.sortServerListItemsByLoaded(e, t));
      let e = this._servers[0];
      if (this._myRegion) for (const t in this._servers) if (this._servers[t].getData().region === this._myRegion) {
        e = this._servers[t];
        break;
      }
      return e ? e.getAddress() : "";
    }
    get$Selector() {
      return this._$selector;
    }
  }
  class ClientVersionTracker_ClientVersionTracker extends Module_Module {
    constructor() {
      super(...arguments), this._language = n(97)("./" + np.languages.activeLanguage + ".json"), this._checkEverySeconds = 30, this._isDisplayingPush = false;
    }
    initialize() {
      super.initialize(), UrlUtils_UrlUtils.getParameter("version") || UrlUtils_UrlUtils.getParameter("address") || this.enableChecker();
    }
    enableChecker() {
      this._timer || (this._timer = np.ticker.addToTicker({func: () => this.onTick(), tps: 1 / this._checkEverySeconds}));
    }
    disableChecker() {
      this._timer && (np.ticker.removeFromTicker(this._timer), this._timer = null);
    }
    onTick() {
      this.check();
    }
    check() {
      this._isDisplayingPush || GameSiteApi_GameSiteApi.getJsVersion().then(e => this.onGetJsVersion(parseFloat(e.version))).catch(e => console.log(e));
    }
    onGetJsVersion(e) {
      this._isDisplayingPush || (np.modules.mod.version < e ? (console.log(`New version v${e} is available!`), this.showNewestVersionPush()) : np.modules.mod.version > e && (console.log(`Rollback to version v${e}!`), this.showOldestVersionPush()));
    }
    showNewestVersionPush() {
      const e = SvgIconsHelper.getIcon(SvgIconsHelper.download, {color: utils_Color_Color.WHITE}), t = DomPush_DomPush.showPush(this._language.newestTooltip.title, this._language.newestTooltip.text, MillisHelper.fromMinute(1), e);
      t.get$Icon().classList.add("success"), t.showButtons(), t.events.on("click", e => this.onClickPush(e)), t.events.on("accept", e => this.onAcceptPush(e)), t.events.on("reject", e => this.onRejectPush(e)), t.events.on("destroy", e => this.onDestroyPush(e)), this._isDisplayingPush = true;
    }
    showOldestVersionPush() {
      const e = SvgIconsHelper.getIcon(SvgIconsHelper.undo, {color: utils_Color_Color.WHITE}), t = DomPush_DomPush.showPush(this._language.oldestTooltip.title, this._language.oldestTooltip.text, MillisHelper.fromMinute(1), e);
      t.get$Icon().classList.add("warning"), t.events.on("click", e => this.onClickPush(e)), this._isDisplayingPush = true;
    }
    onClickPush(e) {
      this.reloadClient();
    }
    onAcceptPush(e) {
      this.reloadClient();
    }
    onRejectPush(e) {
      e.push.destroy(), this.disableChecker(), this._isDisplayingPush = false;
    }
    onDestroyPush(e) {
      this._isDisplayingPush = false;
    }
    reloadClient() {
      np.socket.isConnected() && np.connector.setNeedConnectAfterReloadPage(), location.reload();
    }
  }
  class DevModeDetector_DevModeDetector extends Module_Module {
    constructor() {
      super(...arguments), this.devMode = false;
    }
    initialize() {
      super.initialize(), this.devMode = Optional.ofNullable(UrlUtils_UrlUtils.getParameter("dev")).isPresent();
    }
    isDevMode() {
      return this.devMode;
    }
  }
  class FacebookSdkOptions {}
  class FacebookSdk_FacebookSdk extends Module_Module {
    constructor(e) {
      super(), this._$button = document.createElement("a"), this.options = new FacebookSdkOptions, Object.assign(this.options, e), this.template = `\n          window.fbAsyncInit = function() {\n            FB.init({\n              appId            : ${this.options.appId},\n              autoLogAppEvents : true,\n              xfbml            : true,\n              version          : 'v5.0'\n            });\n          };\n        \n          (function(d, s, id){\n             var js, fjs = d.getElementsByTagName(s)[0];\n             if (d.getElementById(id)) {return;}\n             js = d.createElement(s); js.id = id;\n             js.src = "https://connect.facebook.net/en_US/sdk.js";\n             fjs.parentNode.insertBefore(js, fjs);\n           }(document, 'script', 'facebook-jssdk'));\n        `;
    }
    initialize() {
      super.initialize(), "vk-iframe" !== UrlUtils_UrlUtils.getParameter("disable-ads") && this.setListeners();
    }
    setListeners() {
      np.window.events.on("windowLoaded", () => this.putTemplate());
    }
    putTemplate() {
      this._$button.classList.add("button"), this._$button.classList.add("small"), this._$button.classList.add("blue"), this._$button.classList.add("fb"), this._$button.innerHTML = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="470.513px" height="470.513px" viewBox="0 0 470.513 470.513" xml:space="preserve"><path d="M271.521,154.17v-40.541c0-6.086,0.28-10.8,0.849-14.13c0.567-3.335,1.857-6.615,3.859-9.853c1.999-3.236,5.236-5.47,9.706-6.708c4.476-1.24,10.424-1.858,17.85-1.858h40.539V0h-64.809c-37.5,0-64.433,8.897-80.803,26.691c-16.368,17.798-24.551,44.014-24.551,78.658v48.82h-48.542v81.086h48.539v235.256h97.362V235.256h64.805l8.566-81.086H271.521z"></path></svg>', this._$button.href = "https://www.facebook.com/crazyniteio/", this._$button.target = "_blank";
      const e = document.createElement("script");
      e.innerHTML = this.template, document.body.appendChild(e);
    }
  }
  class GameMonetize_GameMonetize extends Module_Module {
    constructor(e) {
      super(), this._gameId = "", this._scriptId = "gamemonetize-sdk", this._scriptScr = "https://api.gamemonetize.com/sdk.js", this._gameId = e;
    }
    initialize() {
      super.initialize(), "gamedistribution.com" === UrlUtils_UrlUtils.getParameter("disable-ads") && (this.setGdOptions(), this.putTemplate(), this.setListeners());
    }
    setGdOptions() {
      window.SDK_OPTIONS = {gameId: this._gameId, onEvent: e => {
        switch (e.name) {
          case "SDK_GAME_PAUSE":
            break;
          case "SDK_GAME_START":
            this.tryResumePausedEvent();
        }
      }};
    }
    putTemplate() {
      this.isScriptExists() || this.insertScript();
    }
    insertScript() {
      DomUtils_DomUtils.insertScript({src: this._scriptScr}).id = this._scriptId;
    }
    setListeners() {
      np.events.on("gamePlay", () => this.onGamePlay()).setPriority(5);
    }
    onGamePlay() {
      this.pauseEvent(np.events.getEvent("gamePlay")), this.showVideoAd();
    }
    onReLogin() {
      this.pauseEvent(np.connector.events.getEvent("reLoginToServer")), this.showVideoAd();
    }
    pauseEvent(e) {
      this._pausedEvent = e, this._pausedEvent.pause();
    }
    tryResumePausedEvent() {
      this._pausedEvent && (this._pausedEvent.resume(), this._pausedEvent = null);
    }
    showVideoAd() {
      "undefined" != typeof sdk && "undefined" !== sdk.showBanner && sdk.showBanner();
    }
    isScriptExists() {
      return document.getElementById(this._scriptId);
    }
  }
  class GaEvent {
    constructor(e, t, n, i) {
      this.eventCategory = e, this.eventAction = t, this.eventLabel = n, this.eventValue = i;
    }
  }
  class GoogleAnalytics_GoogleAnalytics extends Module_Module {
    constructor() {
      super(...arguments), this._eventsQueue = new LinkedList_LinkedList, this.gameStartCount = 0;
    }
    initialize() {
      super.initialize(), window.location !== window.parent.location && this.sendEvent(new GaEvent("Game", "InIframe")), np.window.events.on("windowLoaded", () => this.sendEvent(new GaEvent("Game", "Loaded"))), np.socket.events.on("connect", () => this.sendEvent(new GaEvent("Game", "SocketConnect"))), np.events.on("gameStart", () => this.onGameStart()), np.modules.mod.get(HasBlockAd_HasBlockAd).ifPresent(e => e.events.on("hasBlockingAds", e => this.onHasBlockingAds(e))), np.modules.mod.get(Ads_Ads).ifPresent(e => {
        e.getInstance().events.on("adBannerDisplay", e => this.sendEvent(new GaEvent("Ads", `Banner_${e.shortName}`))), e.getInstance().events.on("adBannerRefresh", e => this.sendEvent(new GaEvent("Ads", `Banner_${e.shortName}`))), e.getInstance().events.on("adVideoShow", () => this.sendEvent(new GaEvent("Ads", "AdPreRollShow"))), e.getInstance().events.on("adVideoComplete", () => this.sendEvent(new GaEvent("Ads", "AdPreRollCompleted")));
      });
    }
    onHasBlockingAds(e) {
      e.isAdsBlocked && this.sendEvent(new GaEvent("Game", "BlockAds"));
    }
    onGameStart() {
      this.sendEvent(new GaEvent("Game", "GameStart", "", ++this.gameStartCount));
    }
    sendEvent(e) {
      this._eventsQueue.insert(e), this.processEventsQueue();
    }
    processEventsQueue() {
      if (GoogleAnalytics_GoogleAnalytics.isGaExists()) for (; this._eventsQueue.getSize();) GoogleAnalytics_GoogleAnalytics.sendGaEvent(this.getEventFromQueue());
    }
    getEventFromQueue() {
      const e = this._eventsQueue.removeFirst();
      if (e) return e.getData();
    }
    static sendGaEvent(e) {
      if (GoogleAnalytics_GoogleAnalytics.isGaExists() && e) {
        const t = ga.getAll();
        t && t[0] && t[0].send("event", e.eventCategory, e.eventAction, e.eventLabel, e.eventValue);
      }
    }
    static isGaExists() {
      return "undefined" != typeof ga && ga.getAll;
    }
  }
  class RayCastEntityProperties_RayCastEntityProperties extends Module_Module {
    constructor() {
      super(...arguments), this.rayCaster = new Jh, this.mouse = new Lt, this.printToConsole = false, this.events = new Events_Events;
    }
    initialize() {
      super.initialize(), this.setListeners(), this.setChatCommand();
    }
    enable() {
      this._listeners.enable();
    }
    disable() {
      this._listeners.disable();
    }
    setChatCommand() {
      np.modules.mod.get(Chat_Chat).ifPresent(e => {
        e.commands.addCommand(new ChatCommand_ChatCommand("rayCastEntity", "show entity in console when click on it", e => this.onCommandRayCastEntity(e)));
      });
    }
    onCommandRayCastEntity(e) {
      e.executeCount % 2 != 0 ? (this.printToConsole = true, this.enable(), e.sendEnabled(this.constructor.name)) : (this.printToConsole = false, this.disable(), e.sendDisabled(this.constructor.name));
    }
    setListeners() {
      this._listeners.add(np.canvas.events.on("gameMouseUp", e => this.onGameMouseUp(e)).setPriority(2)), this._listeners.add(np.window.events.on("mousemove", e => this.onMouseMove(e))), this._listeners.disable();
    }
    onGameMouseUp(e) {
      if (e.button !== ad.LeftMouseButton) return;
      this.rayCaster.setFromCamera(this.mouse, np.canvas.camera.camera);
      const t = RayCastEntityProperties_RayCastEntityProperties.getNotClonedRayCastObjects(this.rayCaster.intersectObjects(np.canvas.getWorldObject().children, true));
      let n = false;
      if (this.events.emit("rayCastIntersects", {intersects: t}), 0 !== t.length) {
        for (const e in t) if (RayCastEntityProperties_RayCastEntityProperties.getFindEntity(t[e].object).ifPresent(e => {
          this.printToConsole && console.log(this.constructor.name, e), n = true, this.events.emit("rayCastClickOnEntity", {uuid: e.uuid});
        }), n) return;
      } else this.events.emit("rayCastClickOnEmpty");
    }
    static getNotClonedRayCastObjects(e) {
      const t = {};
      for (let n = 0; n < e.length; n++) t[e[n].object.uuid] = e[n];
      return Object.values(t);
    }
    static getFindEntity(e) {
      return null == e ? new Optional : e.parent === np.canvas.getWorldObject() ? np.entities.getEntity(e.userData.entityUuid) : RayCastEntityProperties_RayCastEntityProperties.getFindEntity(e.parent);
    }
    onMouseMove(e) {
      this.mouse.x = e.clientX / document.documentElement.clientWidth * 2 - 1, this.mouse.y = -e.clientY / document.documentElement.clientHeight * 2 + 1;
    }
  }
  var Pd = n(45), Dd = n.n(Pd);
  class TestClient_TestClient extends Module_Module {
    constructor() {
      super(), this.socket = null, this._defaultOptions = {transports: ["websocket"], reconnectionDelay: 2e3, forceNew: true}, this._uuid = Randomize_Randomize.getUuid();
    }
    connect(e, t = {}) {
      t = Object.assign(this._defaultOptions, t), this.socket = Dd.a.connect(e, t), this.setListeners();
    }
    disconnect() {
      this.socket && this.socket.disconnect();
    }
    setListeners() {
      this.socket.on("message", e => this.onMessage(e)), this.socket.on("connect", () => this.onConnect()), this.socket.on("disconnect", () => this.onDisconnect());
    }
    onConnect() {
      const e = "TestPlayer " + this._uuid;
      console.log(e + " connected"), this.send("login", {userName: e});
    }
    onMessage(e) {
      e.name;
    }
    onDisconnect() {}
    emit(e, t = {}) {
      this.socket && this.socket.emit(e, t);
    }
    send(e, t = {}) {
      this.socket && this.socket.send({name: e, data: t});
    }
    destroy() {
      this.disconnect();
    }
  }
  class TestClients_TestClients extends Module_Module {
    constructor() {
      super(...arguments), this._connected = 0;
    }
    spawnClients(e = 1, t = np.socket.getServerAddress()) {
      for (let n = 0; n < e; n++) this.spawnClient(t);
    }
    spawningClients() {
      let e;
      setInterval(() => {
        e && (e.disconnect(), e = null), e = this.spawnClient();
      }, MillisHelper.fromMinute(3));
    }
    spawnClient(e = np.socket.getServerAddress()) {
      const t = new TestClient_TestClient;
      return t.connect(e), t.socket.on("connect", () => this.onClientConnect()), t.socket.on("disconnect", () => this.onClientDisconnect()), t.socket.on("message", e => this.onMessage(e)), t;
    }
    onClientConnect() {}
    onClientDisconnect() {
      this._connected--;
    }
    onMessage(e) {
      "loginHandshake" === e.name && (this._connected++, console.log(`connected clients ${this._connected}`));
    }
  }
  class VkApiOptions {}
  class VkApi_VkApi extends Module_Module {
    constructor(e) {
      super(), this.options = new VkApiOptions, Object.assign(this.options, e), this.template = `\n          window.vkAsyncInit = function() {\n            VK.init({\n              apiId: ${this.options.apiId},\n              // onlyWidgets: true\n            });\n          };\n        \n          setTimeout(function() {\n            var el = document.createElement("script");\n            el.type = "text/javascript";\n            el.src = "https://vk.com/js/api/openapi.js?154";\n            el.async = true;\n            document.getElementById("vk_api_transport").appendChild(el);\n          }, 0);\n        `;
    }
    initialize() {
      super.initialize(), "vk-iframe" !== UrlUtils_UrlUtils.getParameter("disable-ads") && this.setListeners();
    }
    setListeners() {
      np.window.events.on("windowLoaded", () => this.putTemplate());
    }
    putTemplate() {
      document.body.insertAdjacentHTML("beforeend", '<div id="vk_api_transport"></div>');
      const e = document.createElement("script");
      e.innerHTML = this.template, document.body.appendChild(e);
    }
  }
  class EntityBorder_EntityBorderOptions {
    constructor() {
      this.size = new vector_Vector3_Vector3(100, 100), this.position = new vector_Vector2_Vector2(0, 0), this.angle = 0, this.textureUrls = [], this.textureRepeat = new vector_Vector2_Vector2(1, 1), this.color = utils_Color_Color.WHITE, this.opacity = 1;
    }
  }
  class EntityBorder_EntityBorder extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this.immortal = true, this.alwaysDisplayed = true;
    }
    onCreate() {
      super.onCreate(), this.size.setScalarXYZ(this.options.size.x, this.options.size.y, this.options.size.z), this.position.copy(this.options.position.toVector3());
      const e = this.size.getMin();
      this.abilities.addAbilities(new AbilityBox2d_AbilityBox2d(this, {canUnActive: false, body: {mass: 100, type: Qu.STATIC, position: this.position.toObject()}, fixtures: {a: {size: {x: this.size.x / e / 2, y: this.size.y / e / 2}, angle: this.options.angle, type: Zu.BOX, density: 1, friction: 0.2, restitution: 0, sensor: false, serverOnly: false}}, size: this.size.toObject()}));
    }
    createSkin() {
      return new SkinSimple_SkinSimple({textureUrls: this.options.textureUrls, textureRepeat: new vector_Vector2_Vector2(this.options.textureRepeat.x, this.options.textureRepeat.y), renderOrder: 100, color: this.options.color, opacities: [this.options.opacity]});
    }
  }
  class WorldBorder_WorldBorder extends Module_Module {
    constructor(e) {
      super(), this._options = e;
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      np.world.events.on("worldBoundsUpdated", () => this.onWorldBoundsUpdated());
    }
    onWorldBoundsUpdated() {
      this.updateBorders();
    }
    updateBorders() {
      this.removeBorders(), this.createBorders();
    }
    createBorders() {
      const e = new EntityBorder_EntityBorderOptions;
      this._options.textureUrls && (e.textureUrls = this._options.textureUrls), this._options.color && (e.color = this._options.color), this._options.opacity && (e.opacity = this._options.opacity), this._topBorder || (e.size.setScalarXYZ(2 * np.world.worldBounds.right, this._options.width, this._options.width), e.position.setScalarXY(0, np.world.worldBounds.top + this._options.width / 2), e.textureRepeat.setScalarXY(Math.ceil(e.size.x / this._options.width) - 1, 1), this._topBorder = np.spawner.spawnEntity(EntityBorder_EntityBorder, {properties: {options: e}})), this._bottomBorder || (e.size.setScalarXYZ(2 * np.world.worldBounds.right, this._options.width, this._options.width), e.position.setScalarXY(0, -(np.world.worldBounds.top + this._options.width / 2)), e.textureRepeat.setScalarXY(Math.ceil(e.size.x / this._options.width) - 1, 1), this._bottomBorder = np.spawner.spawnEntity(EntityBorder_EntityBorder, {properties: {options: e}})), this._leftBorder || (e.size.setScalarXYZ(this._options.width, 2 * np.world.worldBounds.top + 2 * this._options.width, this._options.width), e.position.setScalarXY(-(np.world.worldBounds.right + this._options.width / 2), 0), e.textureRepeat.setScalarXY(1, Math.ceil(e.size.y / this._options.width) + 1), this._leftBorder = np.spawner.spawnEntity(EntityBorder_EntityBorder, {properties: {options: e}})), this._rightBorder || (e.size.setScalarXYZ(this._options.width, 2 * np.world.worldBounds.top + 2 * this._options.width, this._options.width), e.position.setScalarXY(np.world.worldBounds.right + this._options.width / 2, 0), e.textureRepeat.setScalarXY(1, Math.ceil(e.size.y / this._options.width) + 1), this._rightBorder = np.spawner.spawnEntity(EntityBorder_EntityBorder, {properties: {options: e}}));
    }
    removeBorders() {
      this._topBorder && (this._topBorder.immortal = false, this._topBorder.remove(), this._topBorder = null), this._rightBorder && (this._rightBorder.immortal = false, this._rightBorder.remove(), this._rightBorder = null), this._bottomBorder && (this._bottomBorder.immortal = false, this._bottomBorder.remove(), this._bottomBorder = null), this._leftBorder && (this._leftBorder.immortal = false, this._leftBorder.remove(), this._leftBorder = null);
    }
  }
  class Cursor_Cursor {
    constructor() {
      this._cellSize = 64, this._defaultTexture = "border.png", this._leftShiftDowned = false, this._putted = false, this._playerPosition = new vector_Vector3_Vector3, this._cursor = new SkinSimple_SkinSimple({textureUrls: [this._defaultTexture], transparent: true, renderOrder: 4}), this._cursor.initialize(), this._cursor.getObject3d().scale.setScalar(this._cellSize), np.events.on("gameOver", () => this.onGameOver()), np.canvas.events.on("gameMouseMove", () => this.onMouseMove()), np.canvas.events.on("gameMouseDown", () => this.onMouseDown()), np.window.events.on("keydown", e => this.onKeyDown(e)), np.window.events.on("keyup", e => this.onKeyUp(e)), np.spawner.events.on("updateMyServerProperties", e => this.onUpdateMyServerProperties(e)), np.canvas.addToWorldObject(this._cursor.getObject3d());
    }
    onGameOver() {
      this.reSet();
    }
    onMouseMove() {
      this.update();
    }
    onMouseDown() {
      this._blockType && (np.socket.send("spawnBlock", {type: this._blockType, position: {x: this._cursor.getObject3d().position.x, y: this._cursor.getObject3d().position.y}, from: this._from}), this._putted = true, false === this._leftShiftDowned && this.reSet());
    }
    onKeyDown(e) {
      ad[e.code] === ad.ShiftLeft ? this._leftShiftDowned = true : ad[e.code] === ad.Escape && this.reSet();
    }
    onKeyUp(e) {
      ad[e.code] === ad.ShiftLeft && (this._leftShiftDowned = false, this._putted && this.reSet());
    }
    onUpdateMyServerProperties(e) {
      ValueUtils.isNotUndefinedAndNotNull(e.position) && this.update();
    }
    update() {
      np.getMyPlayer().ifPresent(e => {
        const t = np.input.mouse.getWorldPosition(), n = Math.round(t.x / this._cellSize) * this._cellSize, i = Math.round(t.y / this._cellSize) * this._cellSize;
        this._cursor.getObject3d().position.x === n && this._cursor.getObject3d().position.y === i && false !== this._playerPosition.isEqualTo(e.position) || (this._cursor.getObject3d().position.x = n, this._cursor.getObject3d().position.y = i, this._playerPosition.copy(e.position), np.world.tools.rayCast(new vector_Vector2_Vector2(e.position.x, e.position.y), new vector_Vector2_Vector2(n, i)).then(e => {
          e.length ? this._cursor.setColor(utils_Color_Color.RED) : this._cursor.setColor(utils_Color_Color.WHITE);
        }));
      });
    }
    setBlock(e, t, n) {
      this._blockType = e, this._from = t, this._cursor.setTexture(n);
    }
    reSet() {
      this._blockType = null, this._leftShiftDowned = false, this._putted = false, this._cursor.setTexture(this._defaultTexture);
    }
  }
  const Od = {moveUp: [new ActionTrigger_ActionTrigger({action: "moveUp", enabled: false, keys: [ad.KeyW], sendToServer: true}), new ActionTrigger_ActionTrigger({action: "moveUp", enabled: false, keys: [ad.ArrowUp], sendToServer: true})], moveRight: [new ActionTrigger_ActionTrigger({action: "moveRight", enabled: false, keys: [ad.KeyD], sendToServer: true}), new ActionTrigger_ActionTrigger({action: "moveRight", enabled: false, keys: [ad.ArrowRight], sendToServer: true})], moveDown: [new ActionTrigger_ActionTrigger({action: "moveDown", enabled: false, keys: [ad.KeyS], sendToServer: true}), new ActionTrigger_ActionTrigger({action: "moveDown", enabled: false, keys: [ad.ArrowDown], sendToServer: true})], moveLeft: [new ActionTrigger_ActionTrigger({action: "moveLeft", enabled: false, keys: [ad.KeyA], sendToServer: true}), new ActionTrigger_ActionTrigger({action: "moveLeft", enabled: false, keys: [ad.ArrowLeft], sendToServer: true})], attack: [new ActionTrigger_ActionTrigger({action: "attack", enabled: false, keys: [ad.LeftMouseButton], sendToServer: true})], speedUp: [new ActionTrigger_ActionTrigger({action: "speedUp", enabled: false, keys: [ad.ShiftLeft], sendToServer: true})], stopMovement: [new ActionTrigger_ActionTrigger({action: "stopMovement", enabled: false, keys: [ad.Space], sendToServer: false})], shop: [new ActionTrigger_ActionTrigger({action: "shop", enabled: false, keys: [ad.KeyE], sendToServer: false})], gameMenu: [new ActionTrigger_ActionTrigger({action: "gameMenu", enabled: false, keys: [ad.Escape], sendToServer: false})]};
  class SkinProgressBar_SkinProgressBar extends SkinSimple_SkinSimple {
    constructor(e, t) {
      super(), this._progress = 0, this._color = e, this._backgroundColor = t;
    }
    createObject3d() {
      const e = new yn;
      return this._background = this.getBackgroundMesh(), this._mesh = this.getMesh(), e.add(this._background), e.add(this._mesh), e;
    }
    getBackgroundMesh() {
      return new Yi(np.cacheKeeper.get(kr), new ui({color: this._backgroundColor.toThreeColor(), transparent: true}));
    }
    getMesh() {
      return new Yi(np.cacheKeeper.get(kr), new ui({color: this._color.toThreeColor(), transparent: true}));
    }
    setColor(e) {
      if (ValueUtils.isUndefinedOrNull(e)) return;
      if (this._options.color.isEqualTo(e)) return;
      this._color.copy(e), this._mesh.material.color.copy(this._color.toThreeColor());
    }
    set progress (e) {
      this._progress !== e && (this._progress = e, this.getObject3d().children[0].scale.x = Math.max(0.001, 1 - this._progress), this.getObject3d().children[0].position.x = (1 - this.getObject3d().children[0].scale.x) / 2, this.getObject3d().children[1].scale.x = Math.max(0.001, this._progress), this.getObject3d().children[1].position.x = -(1 - this.getObject3d().children[1].scale.x) / 2);
    }
    get progress() {
      return this._progress;
    }
    setRenderOrder(e) {
      super.setRenderOrder(e), this._background.renderOrder = e, this._mesh.renderOrder = e + 0.01;
    }
  }
  class AbilityHealth_AbilityHealthOptions {
    constructor() {
      this.color = utils_Color_Color.RED.clone(), this.backgroundColor = utils_Color_Color.BLACK.clone(), this.renderOrderOffset = 0, this.hideTimeoutFrames = 120;
    }
  }
  class AbilityHealth_AbilityHealth extends Ability_Ability {
    constructor(e, t) {
      super(e), this._options = new AbilityHealth_AbilityHealthOptions, this._canDisplayed = false, this._canDisplayedTimeout = "", this._firstShow = true, t && Object.assign(this._options, t);
    }
    onCreate() {
      super.onCreate(), this.bar = new SkinProgressBar_SkinProgressBar(this._options.color, this._options.backgroundColor), this.bar.initialize();
    }
    onSpawn() {
      super.onSpawn(), this.update();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), (ValueUtils.isNotUndefinedAndNotNull(e.health) || ValueUtils.isNotUndefinedAndNotNull(e.maxHealth)) && this.update();
    }
    update() {
      const e = this.parentEntity.serverProperties.health / this.parentEntity.serverProperties.maxHealth;
      this.bar.progress !== e && (this.bar.progress = e, this.show());
    }
    onDraw() {
      super.onDraw(), this.bar && (this._options.updatePosition ? this._options.updatePosition(this.bar) : (this.bar.getObject3d().position.copy(this.parentEntity.position.getWithOffset().toThreeVector3()), this.bar.getObject3d().position.y -= this.parentEntity.size.y / 2 + this.parentEntity.size.y / 3, this.bar.getObject3d().position.z += 1), this.bar.getObject3d().scale.x = this.parentEntity.size.x / 1.5, this.bar.getObject3d().scale.y = 3, this.bar.setRenderOrder(this.parentEntity.skin.getRenderOrder() + this._options.renderOrderOffset));
    }
    onRemove() {
      super.onRemove(), this.clearTimeout(), this.bar && this.bar.setVisible(false);
    }
    destroy() {
      super.destroy(), this.removeProgressBar();
    }
    removeProgressBar() {
      this.bar && (this.clearTimeout(), this.bar.destroy(), this.bar = null);
    }
    setColor(e) {
      this._options.color.copy(e), this.bar && this.bar.setColor(e);
    }
    show() {
      this._firstShow ? this._firstShow = false : (this._canDisplayed = true, this.clearTimeout(), np.canvas.getWorldObject().add(this.bar.getObject3d()), this._canDisplayedTimeout = np.canvas.setTimeoutFrames(() => {
        np.canvas.getWorldObject().remove(this.bar.getObject3d());
      }, this._options.hideTimeoutFrames));
    }
    clearTimeout() {
      np.canvas.clearTimeoutFrames(this._canDisplayedTimeout);
    }
  }
  class Screen_Screen {
    constructor(e) {
      this._$screen = document.createElement("div"), this._name = e, this._$screen.classList.add("screen"), this._$screen.classList.add(this._name);
    }
    onActive() {}
    onUnActive() {}
    onShow() {}
    onHide() {}
    get$Screen() {
      return this._$screen;
    }
    get name() {
      return this._name;
    }
    show() {
      np.screens.show(this.name);
    }
    isDisplaying() {
      return np.screens.isActiveScreen(this.name) && np.screens.isDisplayingActiveScreen();
    }
  }
  class DomJoystick_DomJoystick {
    constructor() {
      this._$joystick = document.createElement("div"), this._$lever = document.createElement("div"), this._joystickPosition = new vector_Vector2_Vector2, this._direction = new vector_Vector2_Vector2, this._force = new vector_Vector2_Vector2, this._leverPosition = new vector_Vector2_Vector2, this.events = new Events_Events, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$joystick.classList.add("joystick"), this._$lever.classList.add("lever"), this._$joystick.appendChild(this._$lever);
    }
    setListeners() {
      np.window.events.on("resize", () => this.onResize()), this._$joystick.addEventListener("touchstart", e => this.onTouchStart(e)), this._$joystick.addEventListener("touchmove", e => this.onTouchMove(e)), this._$joystick.addEventListener("touchend", e => this.onTouchEnd(e)), this._$joystick.addEventListener("touchcancel", e => this.onTouchCancel(e));
    }
    onResize() {
      this.update();
    }
    onTouchStart(e) {
      this.update(), this.setDirection(e.targetTouches[0]), this.updateForce(), this.updateLeverPosition(), this.events.emit("start");
    }
    onTouchMove(e) {
      this.setDirection(e.targetTouches[0]), this.updateForce(), this.updateLeverPosition(), this.events.emit("move");
    }
    onTouchEnd(e) {
      this.reSet(), this.events.emit("end");
    }
    onTouchCancel(e) {
      this.reSet(), this.events.emit("cancel");
    }
    get$Joystick() {
      return this._$joystick;
    }
    update() {
      this._joystickRect = this._$joystick.getBoundingClientRect(), this._joystickPosition.setScalarXY(this._joystickRect.left + this._joystickRect.width / 2, this._joystickRect.top + this._joystickRect.height / 2), this.updateLeverPosition();
    }
    setDirection(e) {
      e && (this._direction.x = e.pageX - this._joystickPosition.x, this._direction.y = e.pageY - this._joystickPosition.y, this._direction.invertY());
    }
    updateForce() {
      this._force.copy(this._direction).maxLimit(this._joystickRect.width / 2).divideScalar(this._joystickRect.width / 2);
    }
    updateLeverPosition() {
      this._leverPosition.copy(this._force).multiplyScalar(this._joystickRect.width / 2).invertY(), this._$lever.style.transform = `translate(${this._leverPosition.x}px, ${this._leverPosition.y}px)`;
    }
    reSet() {
      this._direction.copy(vector_Vector2_Vector2.ZERO), this._force.copy(vector_Vector2_Vector2.ZERO), this.updateLeverPosition();
    }
    getAngle() {
      return this._direction.angle();
    }
    getDirection() {
      return this._direction;
    }
    getForce() {
      return this._force;
    }
  }
  class DomButton_DomButton extends DomAbstractElement_DomAbstractElement {
    constructor() {
      super(), this.events = new Events_Events, this._$element = document.createElement("button"), this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$element.classList.add("button");
    }
    setListeners() {
      this._$element.addEventListener("click", e => this.onClick(e)), this._$element.addEventListener("focus", e => this.onFocus(e)), this._$element.addEventListener("blur", e => this.onBlur(e));
    }
    onClick(e) {
      e.stopPropagation(), this.events.emit("click", {event: e});
    }
    onFocus(e) {
      this.events.emit("focus", {event: e});
    }
    onBlur(e) {
      this.events.emit("blur", {event: e});
    }
    setText(e) {
      return this._$element.innerText = e, this;
    }
    click() {
      this._$element.click();
    }
    get$Element() {
      return this._$element;
    }
  }
  class GameMenu_GameMenu extends Module_Module {
    constructor(e) {
      super(), this._language = n(129)("./" + np.languages.activeLanguage + ".json"), this._$content = document.createElement("div"), this._$settings = document.createElement("button"), this._$exitToMainMenu = document.createElement("button"), this._modal = new DomModal_DomModal(this._language.title, this._$content), this._options = e;
    }
    initialize() {
      super.initialize(), this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._modal.get$Modal().classList.add("game-menu"), this._options.settingsScreenName && (this._$settings.classList.add("button"), this._$settings.classList.add("settings"), this._$settings.innerText = this._language.settings, this._$content.appendChild(this._$settings)), this._$exitToMainMenu.classList.add("button"), this._$exitToMainMenu.classList.add("exit-to-main-menu"), this._$exitToMainMenu.innerText = this._language.exitToMainScreen, this._$content.appendChild(this._$exitToMainMenu), this._modal.hideOnEscapeKey = false;
    }
    setListeners() {
      this._$settings.addEventListener("click", () => this.onClickSettings()), this._$exitToMainMenu.addEventListener("click", () => this.onClickExitToMainMenu()), np.input.keyBindings.getKeyBindings("gameMenu").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", e => this.onKeyDown(e.keys[0]))));
    }
    onClickSettings() {
      np.screens.show(this._options.settingsScreenName), this._modal.hide();
    }
    onClickExitToMainMenu() {
      np.started = false, np.events.emit("gameEnd"), np.device.isMobile() && this._options.mobileMainScreenName ? np.screens.show(this._options.mobileMainScreenName) : np.screens.show(this._options.mainScreenName), this._modal.hide();
    }
    onKeyDown(e) {
      if (false === np.started) return;
      const t = document.getElementById("modals");
      t && t.childElementCount && false === t.firstElementChild.classList.contains("game-menu") || this._modal.toggle();
    }
    show() {
      this._modal.show();
    }
  }
  class MineStrikeSiteApi_MineStrikeSiteApi extends GameSiteApi_GameSiteApi {
    static getLeadersBoard(e) {
      return GameSiteApi_GameSiteApi.get(`leaders/${e}`);
    }
    static getRandomRePlay() {
      return GameSiteApi_GameSiteApi.get("replays/random");
    }
    static uploadRePlay(e) {
      const t = JSON.stringify(e), n = new Blob([t], {type: "text/json"}), i = new FormData;
      return i.append("file", n), new Promise((e, t) => GameSiteApi_GameSiteApi.sendFormData({url: "replays/upload", data: i, success: e, error: t}));
    }
  }
  var Id;
  !function (e) {
    e[e.timer = 0] = "timer", e[e.RAF = 1] = "RAF";
  }(Id || (Id = {}));
  class RePlayPlayer_RePlayPlayer {
    constructor() {
      this._packets = new LinkedList_LinkedList, this.playing = false, this._playingSpeed = 16, this._replayCurrentTime = 0, this._maxTimeForProcessPacketsMs = 8, this._startI = 0, this.replaysJsonData = [], this.setListeners();
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.config.events.on("configUpdate", () => this.configUpdate());
    }
    onGameStart() {
      this.stopReplay();
    }
    configUpdate() {
      this.isEnabledProcessPacketsHandler() && (this.disableProcessPacketsHandler(), this.enableProcessPacketsHandler());
    }
    playReplays() {
      this.replaysJsonData.length && this.playReplay(Randomize_Randomize.getRandomFromArray(this.replaysJsonData), () => this.playReplays());
    }
    playReplay(e, t) {
      if (np.started) throw new Error("Game started");
      if (!e) throw new Error("Broken json data");
      this.playing && this.stopReplay(), this.clearScene(), this.playing = true, this._replayCurrentTime = 0, this._startI = 0, this._timedPackets = e, this._timerReplaying = setInterval(() => this.addReplayPackets(t), this._playingSpeed), this.enableProcessPacketsHandler();
    }
    stopReplay() {
      this.playing && (this.playing = false, clearInterval(this._timerReplaying), this._timerReplaying = null, this.disableProcessPacketsHandler(), this.clearScene());
    }
    clearScene() {
      np.destroyAllEntities();
    }
    addReplayPackets(e) {
      if (this.playing) {
        if (this._startI === this._timedPackets.length - 1) return this.stopReplay(), void (e && e());
        for (let e = this._startI; e < this._timedPackets.length; e++) {
          if (!(this._timedPackets[e].time <= this._replayCurrentTime)) {
            this._startI = e;
            break;
          }
          "loginHandshake" === this._timedPackets[e].packet.name ? np.myServerUuid = this._timedPackets[e].packet.data.uuid : this._packets.insert(this._timedPackets[e].packet), e === this._timedPackets.length - 1 && (this._startI = e);
        }
        this._replayCurrentTime += this._playingSpeed;
      }
    }
    enableProcessPacketsHandler() {
      this.isEnabledProcessPacketsHandler() || (this._timerProcessPackages = np.ticker.addToTicker({func: () => this.processPackets(), tps: np.config.get(Xu.serverTps), frameDependency: true}));
    }
    isEnabledProcessPacketsHandler() {
      return !!this._timerProcessPackages;
    }
    disableProcessPacketsHandler() {
      this._timerProcessPackages && (np.ticker.removeFromTicker(this._timerProcessPackages), this._timerProcessPackages = null);
    }
    processPackets() {
      const e = window.performance.now();
      let t = e;
      do {
        if (this._packets.getSize() > 0) {
          const e = this._packets.removeFirst();
          if (e) {
            const n = e.getData();
            n && (np.socket.events.emit(n.name, n.data), 0, t = window.performance.now());
          }
        }
      } while (t - e < this._maxTimeForProcessPacketsMs && this._packets.getSize() > 0);
    }
  }
  class RePlayBgPlayer_RePlayBgPlayer {
    constructor() {
      this._player = new RePlayPlayer_RePlayPlayer, this._playing = false, this._overlayOpacity = 0, this._overlayOpacityShow = 0.5, this._overlayOpacityHide = 0, this._overlay = new SkinSimple_SkinSimple({color: utils_Color_Color.BLACK.clone()}), this._overlay.initialize(), this.updateOverlaySize(), np.window.events.on("resize", () => this.onResize()), np.events.on("gameStart", () => this.onGameStart()), this._onCanvasDrawBeginListener = np.canvas.events.on("canvasDrawBegin", () => this.onCanvasDrawBegin());
    }
    onResize() {
      this.updateOverlaySize();
    }
    onGameStart() {
      this.hideOverlay();
    }
    onCanvasDrawBegin() {
      this.drawOverlayOpacity();
    }
    drawOverlayOpacity() {
      this._overlay.setOpacity(ValueUtils.smoothValue(this._overlayOpacity, this._overlay.getOpacity())), false === ValueUtils.isNumberChanged(this._overlay.getOpacity(), this._overlayOpacity) && (this._onCanvasDrawBeginListener.disable(), this._overlayOpacity === this._overlayOpacityHide && this._overlay.setVisible(false));
    }
    showOverlay() {
      this._overlayOpacity = this._overlayOpacityShow, this._overlay.setOpacity(this._overlayOpacityHide), this._overlay.setVisible(true, np.canvas.getSceneHud()), this._onCanvasDrawBeginListener.enable();
    }
    hideOverlay() {
      this._overlayOpacity = this._overlayOpacityHide, this._overlay.setOpacity(this._overlayOpacityShow), this._onCanvasDrawBeginListener.enable();
    }
    play() {
      return this._playing ? Promise.reject(new Error("Already playing")) : (this._playing = true, this.loadRandomRePlay());
    }
    stop() {
      this._playing = false, this._player.stopReplay();
    }
    loadRandomRePlay() {
      const e = MineStrikeSiteApi_MineStrikeSiteApi.getRandomRePlay();
      return this.showOverlay(), e.then(e => this.onRePlayLoaded(e)).catch(e => this.onRePlayError(e)).then(() => this.hideOverlay()), e;
    }
    onRePlayLoaded(e) {
      this._player.playReplay(e, () => this.onEnd());
    }
    playTest(e) {
      this._player.playReplay(e);
    }
    onRePlayError(e) {}
    onEnd() {
      this._playing && this.loadRandomRePlay();
    }
    updateOverlaySize() {
      this._overlay.getObject3d().scale.set(document.documentElement.clientWidth, document.documentElement.clientHeight, 1);
    }
  }
  const Bd = n(132);
  class RePlayRecorder_RePlayRecorder {
    constructor() {
      this.worker = new Bd, this.recording = false, this.worker.postMessage({command: "initialize"}), this.worker.onmessage = e => this.workerOnMessage(e);
    }
    startRecord(e = 0) {
      this.recording || (this.recording = true, this.sendCommand("startRecord", {saveLastSeconds: e}), RePlayRecorder_RePlayRecorder.isGameStart() && (this.sendRecordSettings(), this.sendRecordExistsEntities()), this._nameOnPacketFunc = np.socket.socket.events.on("packet", e => this.onPacket(e)));
    }
    stopRecord() {
      return this.recording ? (this._nameOnPacketFunc.disable(), this.stopPromise = new Promise((e, t) => {
        this.stopPromiseResolveFunc = e, this.stopPromiseRejectFunc = t, this.sendCommand("stopRecord");
      }), this.stopPromise) : new Promise((e, t) => {});
    }
    sendRecordSettings() {
      this.sendCommand("recordSettings", {myServerUuid: np.myServerUuid, worldBounds: np.world.worldBounds, fieldOfViewSize: np.canvas.camera.fieldOfViewSize});
    }
    sendRecordExistsEntities() {
      const e = [];
      for (const t in np.entities.entities) np.entities.entities[t].isServer && e.push(np.entities.entities[t].serverProperties);
      this.sendCommand("recordExistsEntities", {entitiesServerProperties: e});
    }
    onPacket(e) {
      this.sendCommand("packet", e);
    }
    workerOnMessage(e) {
      switch (e.data.type) {
        case "recordedPackets":
          this.recording = false, this.stopPromiseResolveFunc(e.data.packets);
      }
    }
    sendCommand(e, t) {
      this.worker.postMessage({command: e, data: t});
    }
    static isGameStart() {
      return !!~np.myServerUuid;
    }
  }
  class DeathRePlayerOptions {
    constructor() {
      this.recordLastSeconds = 5, this.recordSecondsAfterDead = 0;
    }
  }
  class DeathRePlayer_DeathRePlayer extends Module_Module {
    constructor(e) {
      super(), this._language = n(133)("./" + np.languages.activeLanguage + ".json"), this._options = new DeathRePlayerOptions, this._recorder = new RePlayRecorder_RePlayRecorder, this._recorderPush = new DomPush_DomPush("", this._language.uploadYourSelfRePlay), this._recording = false, Object.assign(this._options, e), this._recorderPush.setIconAsElement(SvgIconsHelper.getIcon(SvgIconsHelper.cameraMovieDuoTone, {scale: new vector_Vector2_Vector2(0.7, 0.7)})), this._recorderPush.get$Icon().style.backgroundColor = "#cfae32", this._recorderPush.events.on("click", () => {
        this._recorderPush.hide(), this._recorderPush.text = "";
      });
    }
    initialize() {
      super.initialize(), this.putTemplate(), this.setListeners(), this.bgPlayer = new RePlayBgPlayer_RePlayBgPlayer;
    }
    putTemplate() {
      np.device.isMobile() || DomUtils_DomUtils.insertCss(n(136));
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.events.on("gameEnd", () => this.onGameEnd()), this._spawnMyEntityListener = np.spawner.events.on("spawnMyEntity", () => this.onMyEntitySpawn());
    }
    onGameStart() {
      this._recorderPush.hide(), this._recorderPush.text = "", this._spawnMyEntityListener.disable(), this.hideRecorderWidget();
    }
    onGameEnd() {
      this._recording && (this._recording = false, setTimeout(() => this.stopAndUploadRePlay(), 1e3 * this._options.recordSecondsAfterDead));
    }
    onMyEntitySpawn() {
      np.getMyPlayer().map(e => e.serverProperties).map(e => e.name).ifPresent(e => {
        this.changeRecorderWidgetIconStatus(`${this._language.replayBy} ${e}.`), this.showRecorderWidget();
      });
    }
    startRecord() {
      np.device.isMobile() || this._recording || (this._recording = true, this.changeRecorderWidgetIconStatus("recording"), this.showRecorderWidget(), this._recorderPush.text = this._language.yourGameRecording, false === np.device.isMobile() && this._recorderPush.show(), setTimeout(() => this._recorderPush.text = "", 1e4), this._recorder.startRecord(this._options.recordLastSeconds));
    }
    stopAndUploadRePlay() {
      this.changeRecorderWidgetIconStatus("saving"), this._recorder.stopRecord().then(e => this.onGotRePlay(e));
    }
    onGotRePlay(e) {
      this.checkExistsMyEntity(e) ? (this.changeRecorderWidgetIconStatus("uploading"), MineStrikeSiteApi_MineStrikeSiteApi.uploadRePlay(e).then(e => this.onUploadedRePlay()).catch(e => this.changeStatusAndHideWidget("errorUpload"))) : this.changeStatusAndHideWidget("errorInRecord");
    }
    onUploadedRePlay() {
      this.changeStatusAndHideWidget("uploaded");
    }
    changeStatusAndHideWidget(e, t = 2e3) {
      this.changeRecorderWidgetIconStatus(e), this.hideRecorderWidget(t);
    }
    hideRecorderWidget(e = 0) {
      return setTimeout(() => this._recorderPush.hide(), e);
    }
    changeRecorderWidgetIconStatus(e) {
      this._recorderPush.title = this._language.hasOwnProperty(e) ? this._language[e] : e, this.showRecorderWidget();
    }
    showRecorderWidget() {
      clearTimeout(this._recorderPushTimer), false === np.device.isMobile() && (this._recorderPush.showInBegin(), this._recorderPushTimer = this.hideRecorderWidget(1e4));
    }
    checkExistsMyEntity(e) {
      return true;
    }
  }
  class Spectator_Spectator extends Module_Module {
    constructor() {
      super(...arguments), this._observedPlayers = new LinkedList_LinkedList, this._observedPlayer = new LinkedListNode, this._enable = false, this.events = new Events_Events, this._timerTps = 2;
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      np.socket.events.on("spectate", e => this.onSpectate(e)), np.socket.events.on("spectate_list", e => this.onSpectateList(e)), np.socket.events.on("spectate_item_add", e => this.onSpectateItemAdd(e)), np.socket.events.on("spectate_item_remove", e => this.onSpectateItemRemove(e)), this._cameraEntityFoundListener = np.canvas.camera.events.on("cameraEntityFound", () => this.onCameraEntityFound());
    }
    onSpectate(e) {
      this._observedPlayers.forEachFind(t => t.getData().uuid === e.uuid).ifPresent(e => this._observedPlayer = e), this.isEnabled() && this.spectateObservablePlayer();
    }
    onSpectateList(e) {
      for (const t in e.list) this._observedPlayers.insert(e.list[t]);
    }
    onSpectateItemAdd(e) {
      this._observedPlayers.insert(e.item);
    }
    onSpectateItemRemove(e) {
      this._observedPlayers.forEachFind(t => t.getData().uuid === e.item.uuid).ifPresent(e => this._observedPlayers.removeNode(e.getData()));
    }
    onCameraEntityFound() {
      np.entities.getEntity(np.canvas.camera.observableEntityUuid).ifPresent(e => this.events.emit("spectateEntity", {entity: e}));
    }
    enable() {
      this.isEnabled() || (this._enable = true, this.enableFoundEntityTicker(), this._cameraEntityFoundListener.enable(), this.spectateObservablePlayer());
    }
    disable() {
      false !== this.isEnabled() && (this._enable = false, this.disableFoundEntityTicker(), this._cameraEntityFoundListener.disable());
    }
    isEnabled() {
      return this._enable;
    }
    spectateObservablePlayer() {
      this._observedPlayer && this._observedPlayer.getData() && np.entities.getEntityByServerUuid(this._observedPlayer.getData().uuid).ifPresent(e => {
        np.canvas.camera.attachToEntity(e.uuid, 30);
      });
    }
    enableFoundEntityTicker() {
      this._timerUuid || (this._timerUuid = np.ticker.addToTicker({func: () => this.onTick(), tps: this._timerTps}));
    }
    disableFoundEntityTicker() {
      this._timerUuid && (np.ticker.removeFromTicker(this._timerUuid), this._timerUuid = null);
    }
    onTick() {
      this.spectateObservablePlayer();
    }
    observePlayer(e) {
      this._observedPlayers.forEachFind(t => t.getData().uuid === e).ifPresent(e => this.setObservedPlayer(e));
    }
    previous() {
      this.setObservedPlayer(this._observedPlayer.hasPrev() ? this._observedPlayer.prev : this._observedPlayers.getTailNode());
    }
    next() {
      this.setObservedPlayer(this._observedPlayer.hasNext() ? this._observedPlayer.next : this._observedPlayers.getHeadNode());
    }
    setObservedPlayer(e) {
      this._observedPlayer = e, false !== this.isEnabled() && np.socket.send("spectate_select", {uuid: this._observedPlayer.getData().uuid});
    }
  }
  class DomAbstractMetric_DomAbstractMetric extends DomDiv_DomDiv {
    constructor() {
      super(), this._name = new DomParagraph_DomParagraph, this._value = new DomParagraph_DomParagraph, this.addClasses(["metric"]), this._name.addClasses(["name"]), this.appendChild(this._name.get$Element()), this._value.addClasses(["value"]), this.appendChild(this._value.get$Element());
    }
  }
  class DomFps_DomFps extends DomAbstractMetric_DomAbstractMetric {
    constructor() {
      super(), this._language = n(39)("./" + np.languages.activeLanguage + ".json"), this._name.setText(this._language.fps), this.addClasses(["fps"]);
    }
    update() {
      this._value.setText(Math.round(np.canvas.fps).toString());
    }
  }
  class DomPing_DomPing extends DomAbstractMetric_DomAbstractMetric {
    constructor() {
      super(), this._language = n(39)("./" + np.languages.activeLanguage + ".json"), this._name.setText(this._language.ping), this.addClasses(["ping"]), np.socket.events.on("pong", e => this.onPong(e));
    }
    onPong(e) {
      this._value.setText(e.toString());
    }
  }
  class DomPosition_DomPosition extends DomAbstractMetric_DomAbstractMetric {
    constructor() {
      super(), this.addClasses(["position"]);
    }
    update() {
      np.canvas.camera.attachedEntity.ifPresent(e => {
        this._value.setText(`x: ${Math.round(e.position.x)}, y: ${Math.round(e.position.y)}`);
      });
    }
  }
  class DomMetrics_DomMetrics extends DomDiv_DomDiv {
    constructor() {
      super(), this._fps = new DomFps_DomFps, this._ping = new DomPing_DomPing, this._position = new DomPosition_DomPosition, this.addClasses(["metrics"]), this.appendChild(this._fps.get$Element()), this.appendChild(this._ping.get$Element()), this.appendChild(this._position.get$Element());
    }
    start() {
      false === this.isStarted() && (this._interval = np.canvas.setIntervalFrames(() => this.update(), 60));
    }
    stop() {
      this.isStarted() && (np.canvas.clearIntervalFrames(this._interval), this._interval = null);
    }
    isStarted() {
      return !!this._interval;
    }
    update() {
      this._fps.update(), this._position.update();
    }
  }
  class TopPlayersPlayer_TopPlayersPlayer {
    constructor(e) {
      this._$player = document.createElement("tr"), this._$number = document.createElement("td"), this._$flag = document.createElement("td"), this._$flagIcon = document.createElement("div"), this._$name = document.createElement("td"), this._$score = document.createElement("td"), this._language = "en", this.events = new Events_Events, this.build(), this.setListeners(), this.update(e);
    }
    build() {
      this._$player.classList.add("player"), this._$number.classList.add("number"), this._$flag.classList.add("flag"), this._$flagIcon.classList.add("flag-icon"), this._$name.classList.add("name"), this._$score.classList.add("score"), this._$flag.appendChild(this._$flagIcon), this._$player.appendChild(this._$number), this._$player.appendChild(this._$flag), this._$player.appendChild(this._$name), this._$player.appendChild(this._$score);
    }
    setListeners() {
      this._$name.addEventListener("click", () => this.onNameClick());
    }
    onNameClick() {
      this.events.emit("click", {playerData: this._data});
    }
    get$Player() {
      return this._$player;
    }
    setNumber(e) {
      ValueUtils.isNotUndefinedAndNotNull(e) && this._number !== e && (this._number = e, this._$number.innerText = (this._number + 1).toString() + ".", this.isIam() && this.events.emit("changedMyNumber", {position: e + 1}));
    }
    getNumber() {
      return this._number;
    }
    setName(e) {
      this._name !== e && (this._name = ChatColor_ChatColor.clearFromColors(ValueUtils.clearNotWhiteListedCharsInName(e)), this._$name.innerText = this._name);
    }
    getUuid() {
      return this._data.uuid;
    }
    setScore(e) {
      ValueUtils.isNotUndefinedAndNotNull(e) && (this._score = e, this._$score.innerText = `$${ValueUtils.getHumanityNumber(e).text}`);
    }
    setLanguage(e) {
      this._language = ValueUtils.clearNotWhiteListedCharsInName(e), this._$flagIcon.style.backgroundImage = `url('//${np.modules.mod.resourceHost}${np.modules.mod.gameDirectory}/images/flags/${this._language}.svg')`;
    }
    update(e) {
      this._data = e, this.isIam() ? this._$player.classList.add("iam") : this._$player.classList.remove("iam"), this.setName(this._data.name), this.setLanguage(this._data.language), this.setNumber(this._data.index), this.setScore(this._data.score);
    }
    isIam() {
      return this._data.uuid === np.myServerUuid;
    }
    destroy() {
      this.events.destroy(), this._$player.remove();
    }
  }
  class DomTopPlayers_DomTopPlayers extends DomDiv_DomDiv {
    constructor() {
      super(), this.events = new Events_Events, this._language = n(139)("./" + np.languages.activeLanguage + ".json"), this._$title = new DomParagraph_DomParagraph, this._$table = document.createElement("table"), this._$tableHead = document.createElement("thead"), this._$tableBody = document.createElement("tbody"), this._players = [], this.addClasses(["top-players"]), this._$title.setText(this._language.title), this._$table.classList.add("top-players-table"), this.createTableHead(), this._$table.appendChild(this._$tableHead), this._$table.appendChild(this._$tableBody), this.appendChild(this._$title.get$Element()), this.appendChild(this._$table), np.socket.events.on("topPlayers", e => this.update(e.players));
    }
    update(e) {
      this.clear(), this.updatePlayers(e), this.sortPlayers(), this.removeOldPlayers(e), this.showPlayers();
    }
    clear() {
      DomUtils_DomUtils.cleanElement(this._$tableBody);
    }
    updatePlayers(e) {
      for (const t in e) this.updatePlayer(e[t]);
    }
    removeOldPlayers(e) {
      for (let t = 0; t < this._players.length; t++) {
        let n = false;
        if (t < 10 || this._players[t].getUuid() === np.myServerUuid) for (const i in e) if (this._players[t].getUuid() === e[i].uuid) {
          n = true;
          break;
        }
        false === n && (this._players[t].destroy(), this._players.splice(t, 1));
      }
    }
    updatePlayer(e) {
      let t = this.getPlayer(e.uuid);
      t || (t = this.createPlayer(e)), t.update(e);
    }
    getPlayer(e) {
      for (const t in this._players) if (this._players[t].getUuid() === e) return this._players[t];
    }
    createPlayer(e) {
      const t = new TopPlayersPlayer_TopPlayersPlayer(e);
      return t.events.on("click", e => this.onClickPlayer(e.playerData)), t.events.on("changedMyNumber", e => this.onChancedMyNumber(e.position)), this._players.push(t), t;
    }
    onClickPlayer(e) {
      this.events.emit("clickPlayer", {playerData: e});
    }
    onChancedMyNumber(e) {
      this.events.emit("changedMyNumber", {position: e});
    }
    sortPlayers() {
      this._players.sort((e, t) => e.getNumber() - t.getNumber());
    }
    showPlayers() {
      for (const e in this._players) this._$tableBody.appendChild(this._players[e].get$Player());
    }
    createTableHead() {
      const e = document.createElement("tr");
      e.classList.add("player"), e.appendChild(document.createElement("td")), e.appendChild(document.createElement("td")), e.appendChild(document.createElement("td"));
      const t = document.createElement("td");
      t.classList.add("score"), e.appendChild(t), this._$tableHead.appendChild(e);
    }
  }
  class AbstractResource_AbstractResource extends DomDiv_DomDiv {
    constructor() {
      super(), this._icon = new DomDiv_DomDiv, this._text = new DomParagraph_DomParagraph, this._value = 0, this._isNormal = true, this.addClasses(["resource"]), this._icon.addClasses(["icon"]), this.appendChild(this._icon.get$Element()), this._text.addClasses(["text"]), this.appendChild(this._text.get$Element());
    }
    setText(e) {
      return this._text.setText(e), this;
    }
    setValue(e) {
      return this._value === e ? (this.setAsNormalTimeout(), this) : (this.clearTimeout(), e > this._value ? this.setIncreased() : e < this._value ? this.setDecreased() : this.setNormal(), this._value = e, this);
    }
    setIncreased() {
      return this.setNormal(), this.addClasses(["increased"]), this._isNormal = false, this;
    }
    setDecreased() {
      return this.setNormal(), this.addClasses(["decreased"]), this._isNormal = false, this;
    }
    setNormal() {
      return this.removeClasses(["increased"]), this.removeClasses(["decreased"]), this._isNormal = true, this;
    }
    setAsNormalTimeout() {
      this._timeout || this._isNormal || (this._timeout = setTimeout(() => {
        this.setNormal(), this.clearTimeout();
      }, 1e3));
    }
    clearTimeout() {
      this._timeout && (clearTimeout(this._timeout), this._timeout = null);
    }
  }
  class CoalResource_CoalResource extends AbstractResource_AbstractResource {
    constructor() {
      super(), this.addClasses(["coal"]);
    }
  }
  class DiamondResource_DiamondResource extends AbstractResource_AbstractResource {
    constructor() {
      super(), this.addClasses(["diamond"]);
    }
  }
  class EnergyResource_EnergyResource extends AbstractResource_AbstractResource {
    constructor() {
      super(), this.addClasses(["energy"]);
    }
  }
  class GoldResource_GoldResource extends AbstractResource_AbstractResource {
    constructor() {
      super(), this.addClasses(["gold"]);
    }
  }
  class IronResource_IronResource extends AbstractResource_AbstractResource {
    constructor() {
      super(), this.addClasses(["iron"]);
    }
  }
  class MoneyResource_MoneyResource extends AbstractResource_AbstractResource {
    constructor() {
      super(), this.addClasses(["money"]);
    }
  }
  class Tab_Tab {
    constructor(e, t) {
      this.uuid = Randomize_Randomize.getUuid(), this.name = "", this._$content = document.createElement("div"), this._$tab = document.createElement("div"), this._$icon = document.createElement("div"), this._$container = document.createElement("div"), this._$name = document.createElement("div"), this._clickCallbacks = [], this.name = e, this._$content = t, this._$container.classList.add("container"), t.classList.add("tab-content"), this._$container.appendChild(t), this._$icon.classList.add("icon"), this._$tab.classList.add("tab"), this._$name.classList.add("name"), this._$name.innerText = this.name, this._$tab.appendChild(this._$name);
      let n = this;
      this._$tab.addEventListener("click", function () {
        for (let e in n._clickCallbacks) n._clickCallbacks[e](n);
      });
    }
    setIcon(e) {
      this._$icon.innerHTML = "", this._$icon.appendChild(e), this._$tab.contains(this._$icon) && this._$tab.removeChild(this._$icon), this._$tab.insertBefore(this._$icon, this._$name);
    }
    setImage(e) {
      this._$icon.innerHTML = "";
      const t = document.createElement("div");
      return t.classList.add("image"), t.style.backgroundImage = `url(${e})`, this._$icon.appendChild(t), this._$tab.contains(this._$icon) && this._$tab.removeChild(this._$icon), this._$tab.insertBefore(this._$icon, this._$name), this;
    }
    addClickCallback(e) {
      this._clickCallbacks.push(e);
    }
    getName() {
      return this.name;
    }
    getUuid() {
      return this.uuid;
    }
    get$Tab() {
      return this._$tab;
    }
    get$Container() {
      return this._$container;
    }
    get$Content() {
      return this._$content;
    }
    setUnActive() {
      this._$tab.classList.remove("active"), this._$container.classList.remove("show");
    }
    setActive() {
      this._$tab.classList.add("active"), this._$container.classList.add("show");
    }
    isActive() {
      return this._$tab.classList.contains("active");
    }
    destroy() {
      this._$tab.remove();
    }
  }
  var Fd, zd, Nd, Ud, Vd, Gd;
  !function (e) {
    e.VERTICAL = "vertical", e.HORIZONTAL = "horizontal";
  }(Fd || (Fd = {}));
  class DomTabs_DomTabs {
    constructor(e = Fd.HORIZONTAL) {
      this._type = "", this._tabs = {}, this._uuid = Randomize_Randomize.getUuid(), this._$domTabs = document.createElement("div"), this._$tabsWrap = document.createElement("div"), this._$tabs = document.createElement("div"), this._$containers = document.createElement("div"), this._type = e, this._$tabsWrap.setAttribute("id", this.id), this._$tabsWrap.classList.add("tabs-wrap"), this._$tabsWrap.classList.add(this._type), this._$tabs.classList.add("tabs"), this._$containers.classList.add("containers"), this._$tabsWrap.appendChild(this._$tabs), this._$tabsWrap.appendChild(this._$containers), this.set$DomTabs();
    }
    set$DomTabs() {
      document.getElementById("dom-tabs") || this.create$DomTabs();
    }
    create$DomTabs() {
      DomUtils_DomUtils.insertCss(n(142).toString()), this._$domTabs.id = "dom-tabs", np.get$Container().appendChild(this._$domTabs);
    }
    get id() {
      return `${this._uuid}`;
    }
    addTab(e, t, n) {
      const i = new Tab_Tab(e, t);
      return n && i.setIcon(n), this._tabs[i.getUuid()] = i, i.addClickCallback(e => this.onClickTab(e)), this._$tabs.appendChild(i.get$Tab()), this._$containers.appendChild(i.get$Container()), i;
    }
    getTab(e) {
      return Optional.ofNullable(this._tabs[e]);
    }
    removeTab(e) {
      false !== this.hasTab(e) && (this._tabs[e].destroy(), delete this._tabs[e]);
    }
    hasTabByName(e) {
      for (const t in this._tabs) if (this._tabs[t].getName() === e) return true;
      return false;
    }
    get$TabsWrap() {
      return this._$tabsWrap;
    }
    get$Tabs() {
      return this._$tabs;
    }
    get$Containers() {
      return this._$containers;
    }
    update() {
      this.clear(), this.generate();
    }
    clear() {
      this._$tabs.innerHTML = "", this._$containers.innerHTML = "";
    }
    generate() {
      this.appendTabs(), this.appendContainers();
    }
    appendTabs() {
      for (const e in this._tabs) this._$tabs.appendChild(this._tabs[e].get$Tab());
    }
    appendContainers() {
      for (const e in this._tabs) this._$containers.appendChild(this._tabs[e].get$Container());
    }
    setActiveTab(e) {
      if (this.hasTab(e)) {
        const t = this._tabs[e];
        this.toggleActiveTab(t);
      }
    }
    setActiveFirstTab() {
      const e = Object.keys(this._tabs);
      e.length && this.hasTab(e[0]) && this.toggleActiveTab(this._tabs[e[0]]);
    }
    getFirstTab() {
      const e = Object.keys(this._tabs);
      return e.length && this.hasTab(e[0]) ? Optional.ofNullable(this._tabs[e[0]]) : Optional.empty();
    }
    getActiveTab() {
      return Optional.ofNullable(this.activeTab);
    }
    hasTab(e) {
      return this._tabs.hasOwnProperty(e);
    }
    onClickTab(e) {
      this.toggleActiveTab(e);
    }
    toggleActiveTab(e) {
      this.activeTab === e ? e.isActive() ? e.setUnActive() : e.setActive() : (this.activeTab && this.activeTab.setUnActive(), this.activeTab = e, this.activeTab.setActive());
    }
  }
  class DomToolTipAbstract_DomToolTipAbstract {
    constructor(e = "", t, n = np.get$Container()) {
      this.uuid = Randomize_Randomize.getUuid(), this._position = new vector_Vector2_Vector2, this._$tooltip = document.createElement("div"), this._timeout = 15e3, this._margin = 15, this._onMouseEnterFunc = e => this.onMouseEnter(e), this._onMouseLeaveFunc = () => this.onMouseLeave(), this._cursor = new vector_Vector2_Vector2, this._listeners = new Listeners, this._$trigger = t, this._$parent = n, this.text = e, this.initialize();
    }
    initialize() {
      this._$tooltip.classList.add("tooltip"), this.set$Container(), this.setListeners();
    }
    set$Container() {
      this._$container = this._$parent.querySelector("#tooltips"), this._$container || this.create$Container();
    }
    create$Container() {
      DomUtils_DomUtils.insertCss(n(143).toString()), this._$container = document.createElement("div"), this._$container.id = "tooltips", this._$parent.appendChild(this._$container);
    }
    setListeners() {
      this._$trigger.addEventListener("mouseenter", this._onMouseEnterFunc), this._$trigger.addEventListener("mouseleave", this._onMouseLeaveFunc), this._listeners.add(np.window.events.on("mousewheel", () => this._onMouseLeaveFunc())), this._listeners.add(np.events.on("gameStart", () => this.onGameStart()));
    }
    onMouseEnter(e) {
      0 !== this.text.length && (this.show(), this.updateCursor(e), this.updatePosition());
    }
    updateCursor(e) {
      this._cursor.setScalarXY(e.clientX, e.clientY);
    }
    onMouseLeave() {
      this.hide();
    }
    onGameStart() {
      this.hide();
    }
    set text (e) {
      this._text = e, this._$tooltip.innerHTML = this.text, this.updatePosition();
    }
    get text() {
      return this._text;
    }
    set timeout (e) {
      this._timeout = e;
    }
    get timeout() {
      return this._timeout;
    }
    set margin (e) {
      this._margin = e;
    }
    get margin() {
      return this._margin;
    }
    setPosition(e) {
      this._position.copy(e), this._$tooltip.style.left = this._position.x + "px", this._$tooltip.style.top = this._position.y + "px";
    }
    show() {
      this.clearShowingTimeout(), this._$container.appendChild(this._$tooltip), this.setShowingTimeout();
    }
    hide() {
      this.clearShowingTimeout(), this._$container.contains(this._$tooltip) && this._$container.removeChild(this._$tooltip);
    }
    get$Tooltip() {
      return this._$tooltip;
    }
    destroy() {
      this._listeners.destroy(), this.clearShowingTimeout(), this.removeListeners(), this._$tooltip.remove();
    }
    removeListeners() {
      this._$trigger.removeEventListener("mouseenter", this._onMouseEnterFunc), this._$trigger.removeEventListener("mouseleave", this._onMouseLeaveFunc);
    }
    setShowingTimeout() {
      this._timer = setInterval(() => this.hide(), this._timeout);
    }
    clearShowingTimeout() {
      clearInterval(this._timer);
    }
    static clearAllToolTips() {
      const e = document.getElementById("tooltips");
      e && DomUtils_DomUtils.cleanElement(e);
    }
  }
  class DomToolTipTop_DomToolTipTop extends DomToolTipAbstract_DomToolTipAbstract {
    constructor(e = "", t, n = np.get$Container()) {
      super(e, t, n), this._$tooltip.classList.add("top");
    }
    updatePosition() {
      const e = this._$trigger.getBoundingClientRect(), t = new vector_Vector2_Vector2(e.left + e.width / 2 - this._$tooltip.offsetWidth / 2, e.top - this._$tooltip.offsetHeight - this._margin), n = new vector_Vector2_Vector2(0, 0), i = new vector_Vector2_Vector2(document.documentElement.clientWidth - this._$tooltip.offsetWidth - 1, document.documentElement.clientHeight - this._$tooltip.offsetHeight - 1), r = new vector_Vector2_Vector2(0, 0), o = t.x;
      r.x = Math.max(n.x, o), r.x = Math.min(i.x, r.x);
      const s = t.y;
      r.y = Math.max(n.y, s), r.y = Math.min(i.y, r.y), this.setPosition(r);
    }
  }
  class AdBanner_AdBanner {
    constructor(e) {
      this._$wrap = document.createElement("div"), this._$banner = document.createElement("div"), this._$disableAdBlock = document.createElement("div"), this._$disableAdBlockImage = document.createElement("img"), this._$disableAdBlockText = document.createElement("div"), this._disableAdBlockImages = [], this._options = e, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$wrap.classList.add("ad-item"), this._$wrap.classList.add(`size${this.getSize()}`), this._$banner.id = this._options.id, this._$wrap.appendChild(this._$banner), this._$disableAdBlock.classList.add("disable-adblock"), this._$disableAdBlockText.classList.add("text"), this._$disableAdBlockText.innerText = "Disable ad block", this._$disableAdBlock.appendChild(this._$disableAdBlockImage), AdBanner_AdBanner.isBlockAd() && this.onHasBlockingAds();
    }
    setListeners() {
      np.modules.mod.events.on("addModule", e => this.onAddModule(e.module)), this.setModuleListeners();
    }
    onAddModule(e) {
      e instanceof HasBlockAd_HasBlockAd ? this.setHasAdBlockListeners() : e instanceof Ads_Ads && this.setAdsListeners();
    }
    setModuleListeners() {
      this.setHasAdBlockListeners(), this.setAdsListeners();
    }
    setHasAdBlockListeners() {
      np.modules.mod.get(HasBlockAd_HasBlockAd).ifPresent(e => e.events.on("hasBlockingAds", () => this.onHasBlockingAds()));
    }
    setAdsListeners() {
      np.modules.mod.get(Ads_Ads).ifPresent(e => {
        e.getInstance().events.on("adVideoShow", () => this.onAdsVideoAdShow()), e.getInstance().events.on("adVideoComplete", () => this.onAdsVideoAdComplete()), e.getInstance().events.on("adScriptLoaded", () => this.onAdsScriptLoaded());
      });
    }
    onHasBlockingAds() {
      false === Ads_Ads.isScriptLoaded() && AdBanner_AdBanner.isBlockAd() && this._$wrap.appendChild(this._$disableAdBlock);
    }
    onAdsVideoAdShow() {
      this.hide();
    }
    onAdsVideoAdComplete() {
      this.show();
    }
    onAdsScriptLoaded() {
      this.isDisplaying() && this.reFresh();
    }
    reFresh() {
      Ads_Ads.isDisableAds() || (Ads_Ads.isAdsBlocked() && this._disableAdBlockImages.length ? this._$disableAdBlockImage.src = Randomize_Randomize.getRandomFromArray(this._disableAdBlockImages) : Ads_Ads.isAdsBlocked() || false === Ads_Ads.isScriptLoaded() || (this.log(`refresh: ${this.getId()}`), np.modules.mod.get(Ads_Ads).ifPresent(e => {
        e.getInstance().refreshBanner(this.getId(), this.getSize()), e.getInstance().events.emit("adBannerRefresh", {name: this.getId(), size: this.getSize()});
      })));
    }
    show() {
      this.isDisplaying() || Ads_Ads.isDisableAds() || !np.modules.mod.get(Ads_Ads).map(e => e.getInstance().isBannerAllowed()).orElseGet(() => true) || (this._options.$container.appendChild(this._$wrap), this.log(`show ${this.getId()}`), np.modules.mod.get(Ads_Ads).ifPresent(e => e.getInstance().events.emit("adBannerShow", {name: this.getId(), size: this.getSize()})));
    }
    hide() {
      false !== this.isDisplaying() && (this._options.$container.removeChild(this._$wrap), this.log(`hide ${this.getId()}`), np.modules.mod.get(Ads_Ads).ifPresent(e => e.getInstance().clearBanner(this.getId())));
    }
    isDisplaying() {
      return this._options.$container.contains(this._$wrap);
    }
    getId() {
      return this._options.id;
    }
    getSize() {
      return this._options.size;
    }
    get$Container() {
      return this._$wrap;
    }
    log(e, t) {
      np.logger.debug(`<b>[AdBanner]</b> ${e}`, t || "");
    }
    setDisableAdBlockText(e) {
      this._$disableAdBlockText.innerText = e, this._$disableAdBlockImage.alt = e, this._$disableAdBlock.appendChild(this._$disableAdBlockText);
    }
    setDisableAdBlockImages(e) {
      this._disableAdBlockImages = e;
    }
    static isBlockAd() {
      return np.modules.mod.get(HasBlockAd_HasBlockAd).filter(e => e.isAdsBlocked).isPresent();
    }
  }
  class DomShopCharacteristic_DomShopCharacteristic extends DomDiv_DomDiv {
    constructor(e) {
      super(), this._name = new DomParagraph_DomParagraph, this._resources = new DomDiv_DomDiv, this.addClasses(["characteristic"]), this._name.addClasses(["name"]).setText(`${e}:`), this.appendChild(this._name.get$Element()), this._resources.addClasses(["resources"]), this.appendChild(this._resources.get$Element());
    }
    appendResource(e) {
      return this._resources.appendChild(e), this;
    }
  }
  class DomShopCostItem_DomShopCostItem extends DomDiv_DomDiv {
    constructor(e, t) {
      super(), this._icon = new DomDiv_DomDiv, this._value = new DomParagraph_DomParagraph, this.addClasses(["resource", "cost", e]), this._icon.addClasses(["icon"]), this.appendChild(this._icon.get$Element()), this._value.addClasses(["value"]).setText(ValueUtils.getHumanityNumber(t).text), this.appendChild(this._value.get$Element());
    }
  }
  class DomShopResourceItem_DomShopResourceItem extends DomDiv_DomDiv {
    constructor(e) {
      super(), this._language = n(12)("./" + np.languages.activeLanguage + ".json"), this._icon = new DomDiv_DomDiv, this._value = new DomParagraph_DomParagraph, this._type = new DomParagraph_DomParagraph, this.addClasses(["resource", e.name]), this._icon.addClasses(["icon"]), this.appendChild(this._icon.get$Element()), this._value.addClasses(["value"]).setText(ValueUtils.getHumanityNumber(e.value).text), this.appendChild(this._value.get$Element()), e.type && (this._type.addClasses(["type"]).setText(this._language.produceTypes[e.type]), this.appendChild(this._type.get$Element()));
    }
    setValue(e) {
      this._value.setText(e);
    }
  }
  class DomShopItem_DomShopItem extends DomDiv_DomDiv {
    constructor(e) {
      super(), this._language = n(12)("./" + np.languages.activeLanguage + ".json"), this._image = new DomDiv_DomDiv, this._content = new DomDiv_DomDiv, this._title = new DomParagraph_DomParagraph, this._description = new DomParagraph_DomParagraph, this._characteristics = new DomDiv_DomDiv, this._consumes = new DomShopCharacteristic_DomShopCharacteristic(this._language.consumes), this._produces = new DomShopCharacteristic_DomShopCharacteristic(this._language.produces), this._repairs = new DomShopCharacteristic_DomShopCharacteristic(this._language.repairs), this._health = new DomShopCharacteristic_DomShopCharacteristic(this._language.health), this._healingSpeed = new DomShopCharacteristic_DomShopCharacteristic(this._language.healingSpeed), this._healingDuration = new DomShopCharacteristic_DomShopCharacteristic(this._language.healingDuration), this._protection = new DomShopCharacteristic_DomShopCharacteristic(this._language.protection), this._damage = new DomShopCharacteristic_DomShopCharacteristic(this._language.damage), this._attackRadius = new DomShopCharacteristic_DomShopCharacteristic(this._language.attackRadius), this._costs = new DomShopCharacteristic_DomShopCharacteristic(this._language.cost), this._costsResources = {}, this._actions = new DomDiv_DomDiv, this._buy = new DomButton_DomButton, this._data = e, this.addClasses(["shop-item"]), this._image.addClasses(["image"]), this.appendChild(this._image.get$Element()), this._content.addClasses(["content"]), this.appendChild(this._content.get$Element()), this._title.addClasses(["shop-title"]), this._content.appendChild(this._title.get$Element()), this._description.addClasses(["description"]), this._content.appendChild(this._description.get$Element()), this._characteristics.addClasses(["characteristics"]), this.appendChild(this._characteristics.get$Element()), this._costs.addClasses(["costs"]), this._actions.addClasses(["actions"]), this.appendChild(this._actions.get$Element()), this._buy.addClasses(["buy"]).setText(this._language.buy), this._actions.appendChild(this._buy.get$Element());
    }
    setTitle(e) {
      return this._title.setText(e), this;
    }
    setImage(e) {
      return this._image.setBackgroundUrl(e), this;
    }
    setDescription(e) {
      return this._description.setText(e), this;
    }
    setConsumes(e) {
      if (e) {
        for (let t = 0; t < e.length; t++) {
          const n = new DomShopResourceItem_DomShopResourceItem(e[t]);
          this._consumes.appendResource(n.get$Element());
        }
        this._characteristics.appendChild(this._consumes.get$Element());
      }
      return this;
    }
    setProduces(e) {
      if (e) {
        for (let t = 0; t < e.length; t++) {
          const n = new DomShopResourceItem_DomShopResourceItem(e[t]);
          this._produces.appendResource(n.get$Element());
        }
        this._characteristics.appendChild(this._produces.get$Element());
      }
      return this;
    }
    setRepairs(e) {
      if (e) {
        for (let t = 0; t < e.length; t++) {
          const n = new DomShopResourceItem_DomShopResourceItem(e[t]);
          this._repairs.appendResource(n.get$Element());
        }
        this._characteristics.appendChild(this._repairs.get$Element());
      }
      return this;
    }
    setCosts(e) {
      if (e) {
        for (const t in e) {
          const n = new DomShopCostItem_DomShopCostItem(t, e[t]);
          this._costs.appendResource(n.get$Element()), this._costsResources[t] = n;
        }
        this._characteristics.appendChild(this._costs.get$Element());
      }
      return this;
    }
    setHealth(e) {
      if (e) {
        const t = new DomShopResourceItem_DomShopResourceItem({name: "health", value: e});
        this._health.appendResource(t.get$Element()), this._characteristics.appendChild(this._health.get$Element());
      }
      return this;
    }
    setHealingSpeed(e) {
      if (e) {
        const t = new DomShopResourceItem_DomShopResourceItem({name: "healingSpeed", value: e});
        this._healingSpeed.appendResource(t.get$Element()), this._characteristics.appendChild(this._healingSpeed.get$Element());
      }
      return this;
    }
    setHealingDuration(e) {
      if (e) {
        const t = new DomShopResourceItem_DomShopResourceItem({name: "healingDuration", value: e});
        t.setValue(TimeUtils_TimeUtils.getReadableTimeFromSeconds(Math.ceil(e / 1e3))), this._healingDuration.appendResource(t.get$Element()), this._characteristics.appendChild(this._healingDuration.get$Element());
      }
      return this;
    }
    setDamage(e) {
      if (e) {
        const t = new DomShopResourceItem_DomShopResourceItem({name: "damage", value: e});
        this._damage.appendResource(t.get$Element()), this._characteristics.appendChild(this._damage.get$Element());
      }
      return this;
    }
    setAttackRadius(e) {
      if (e) {
        const t = new DomShopResourceItem_DomShopResourceItem({name: "attackRadius", value: e});
        this._attackRadius.appendResource(t.get$Element()), this._characteristics.appendChild(this._attackRadius.get$Element());
      }
      return this;
    }
    setProtection(e) {
      if (e) {
        const t = new DomShopResourceItem_DomShopResourceItem({name: "protection", value: e});
        this._protection.appendResource(t.get$Element()), this._characteristics.appendChild(this._protection.get$Element());
      }
      return this;
    }
    getBuyButton() {
      return this._buy;
    }
    updateAvailable() {
      return np.getMyPlayer().ifPresent(e => {
        let t = true;
        for (const n in this._data.costs) false === e.serverProperties.resources.hasOwnProperty(n) || e.serverProperties.resources[n] < this._data.costs[n] ? (t = false, this._costsResources[n] && this._costsResources[n].removeClasses(["enough"]).addClasses(["not-enough"])) : this._costsResources[n] && this._costsResources[n].removeClasses(["not-enough"]).addClasses(["enough"]);
        t ? this.onAvailable() : this.onUnavailable();
      }), this;
    }
    onAvailable() {
      this.addClasses(["available"]).removeClasses(["unavailable"]), this._buy.enable();
    }
    onUnavailable() {
      this.addClasses(["unavailable"]).removeClasses(["available"]), this._buy.disable();
    }
  }
  class DomStorageCountItem_DomStorageCountItem extends DomDiv_DomDiv {
    constructor(e) {
      super(), this._icon = new DomDiv_DomDiv, this._value = new DomParagraph_DomParagraph, this.addClasses(["resource", "count"]), this._icon.addClasses(["icon"]), this.appendChild(this._icon.get$Element()), this._value.addClasses(["value"]).setText(ValueUtils.getHumanityNumber(e).text), this.appendChild(this._value.get$Element());
    }
  }
  class DomStorageItem_DomStorageItem extends DomDiv_DomDiv {
    constructor(e) {
      super(), this._language = n(12)("./" + np.languages.activeLanguage + ".json"), this._image = new DomDiv_DomDiv, this._content = new DomDiv_DomDiv, this._title = new DomParagraph_DomParagraph, this._description = new DomParagraph_DomParagraph, this._characteristics = new DomDiv_DomDiv, this._count = new DomShopCharacteristic_DomShopCharacteristic(this._language.count), this._actions = new DomDiv_DomDiv, this._use = new DomButton_DomButton, this._data = e, this.addClasses(["shop-item"]), this._image.addClasses(["image"]), this.appendChild(this._image.get$Element()), this._content.addClasses(["content"]), this.appendChild(this._content.get$Element()), this._title.addClasses(["shop-title"]), this._content.appendChild(this._title.get$Element()), this._description.addClasses(["description"]), this._content.appendChild(this._description.get$Element()), this._characteristics.addClasses(["characteristics"]), this.appendChild(this._characteristics.get$Element()), this._count.addClasses(["costs"]), this._actions.addClasses(["actions"]), this.appendChild(this._actions.get$Element()), this._use.addClasses(["use"]).setText(this._language.use), this._actions.appendChild(this._use.get$Element());
    }
    setTitle(e) {
      return this._title.setText(e), this;
    }
    setImage(e) {
      return this._image.setBackgroundUrl(e), this;
    }
    setDescription(e) {
      return this._description.setText(e), this;
    }
    setCount(e) {
      const t = new DomStorageCountItem_DomStorageCountItem(e);
      return this._count.appendResource(t.get$Element()), this._characteristics.appendChild(this._count.get$Element()), this;
    }
    getUseButton() {
      return this._use;
    }
  }
  !function (e) {
    e[e.SHOP = 0] = "SHOP", e[e.STORAGE = 1] = "STORAGE";
  }(zd || (zd = {}));
  class DomShopModal_DomShopModal {
    constructor() {
      this._language = n(12)("./" + np.languages.activeLanguage + ".json"), this._tabs = new DomTabs_DomTabs, this._container = new DomDiv_DomDiv, this._modal = new DomModal_DomModal("", this._container.get$Element()), this._items = [], this._storage = new DomDiv_DomDiv, this._storageEmpty = new DomParagraph_DomParagraph, this._tools = new DomDiv_DomDiv, this._armor = new DomDiv_DomDiv, this._potions = new DomDiv_DomDiv, this._miners = new DomDiv_DomDiv, this._generators = new DomDiv_DomDiv, this._sellers = new DomDiv_DomDiv, this._defense = new DomDiv_DomDiv, this._banner728x90 = new AdBanner_AdBanner({id: "mineenergy-fun_728x90", size: "728x90", $container: MineEnergy_MineEnergy.isYandexGamesIframe() ? document.createElement("div") : this._container.get$Element()}), this._lastTimeShowBanner = 0, this._refreshBannerAfter = MillisHelper.fromMinute(3), this._beginInput = false, this.putTemplates(), this.addListeners();
    }
    putTemplates() {
      this._modal.setHideType(Rd.STYLE), this._modal.get$Modal().classList.add("shop-modal"), this._modal.get$Content().classList.remove("scroll"), this._container.appendChild(this._tabs.get$TabsWrap()), this._storageEmpty.setText(this._language.storageIsEmpty);
      const e = this._tabs.addTab("", this._storage.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.storage, e.get$Tab()), e.setImage(np.textures.getTextureUrl("blocks/chest.png")).get$Content().classList.add("scroll");
      const t = this._tabs.addTab("", this._tools.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.tools, t.get$Tab()), t.setImage(np.textures.getTextureUrl("tools/wooden_pickaxe.png")).get$Content().classList.add("scroll");
      const n = this._tabs.addTab("", this._armor.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.armor, n.get$Tab()), n.setImage(np.textures.getTextureUrl("helmets/leather.png")).get$Content().classList.add("scroll");
      const i = this._tabs.addTab("", this._potions.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.potions, i.get$Tab()), i.setImage(np.textures.getTextureUrl("potions/potion_of_regeneration.png")).get$Content().classList.add("scroll");
      const r = this._tabs.addTab("", this._miners.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.miners, r.get$Tab()), r.setImage(np.textures.getTextureUrl("blocks/miners/gold-miner.png")).get$Content().classList.add("scroll");
      const o = this._tabs.addTab("", this._generators.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.generators, o.get$Tab()), o.setImage(np.textures.getTextureUrl("blocks/generators/manual-generator.png")).get$Content().classList.add("scroll");
      const s = this._tabs.addTab("", this._sellers.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.sellers, s.get$Tab()), s.setImage(np.textures.getTextureUrl("blocks/sellers/small-seller.png")).get$Content().classList.add("scroll");
      const a = this._tabs.addTab("", this._defense.get$Element());
      new DomToolTipTop_DomToolTipTop(this._language.tabs.defense, a.get$Tab()), a.setImage(np.textures.getTextureUrl("blocks/defense/tesla-coil-1000.png")).get$Content().classList.add("scroll"), this._tabs.setActiveTab(t.getUuid()), this._banner728x90.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-2.jpg`]), this._banner728x90.get$Container().classList.add("block");
    }
    addListeners() {
      np.socket.events.on("shop", e => this.onShopItems(e)), np.spawner.events.on("spawnMyEntity", () => this.onSpawnMyEntity()), np.spawner.events.on("updateMyServerProperties", e => this.onUpdateMyServerProperties(e)), np.input.keyBindings.getKeyBindings("shop").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", e => this.onKeyDown()))), this._modal.events.on("show", () => this.onShowModal()), this._modal.events.on("hide", () => this.onHideModal()), np.input.events.on("beginInput", () => this.onBeginInput()), np.input.events.on("endInput", () => this.onEndInput());
    }
    onSpawnMyEntity() {
      this.updateAvailableItems(), this.updateStorage();
    }
    onUpdateMyServerProperties(e) {
      false !== this._modal.isDisplaying() && (ValueUtils.isNotUndefinedAndNotNull(e.resources) && this.updateAvailableItems(), ValueUtils.isNotUndefinedAndNotNull(e.storage) && this.updateStorage());
    }
    onKeyDown() {
      false !== np.started ? this._beginInput || this._modal.toggle() : this._modal.hide();
    }
    onShowModal() {
      this.updateAvailableItems(), this.updateStorage(), this._lastTimeShowBanner + this._refreshBannerAfter <= Date.now() && (console.log("refresh"), this._lastTimeShowBanner = Date.now(), MineEnergy_MineEnergy.isCrazyGamesIframe() || (this._banner728x90.show(), this._banner728x90.reFresh()));
    }
    onHideModal() {}
    onBeginInput() {
      this._beginInput = true;
    }
    onEndInput() {
      this._beginInput = false;
    }
    updateAvailableItems() {
      for (let e = 0; e < this._items.length; e++) this._items[e].updateAvailable();
    }
    updateStorage() {
      DomUtils_DomUtils.cleanElement(this._storage.get$Element());
      let e = false;
      np.getMyPlayer().ifPresent(t => {
        const n = t.serverProperties.storage;
        if (n) for (const t in n) this.appendStorageItem(t, n[t]), e = true;
      }), false === e && this._storage.appendChild(this._storageEmpty.get$Element());
    }
    appendStorageItem(e, t) {
      if (false === this._language.items.hasOwnProperty(e)) return;
      const n = this._language.items[e], i = new DomStorageItem_DomStorageItem(t);
      i.setImage(np.textures.getTextureUrl(n.textureName)).setTitle(n.title).setDescription(n.description).setCount(t.count).getUseButton().events.on("click", () => {
        switch (t.type) {
          case "item":
            np.socket.send("shopBuyItem", {type: e, from: zd.STORAGE});
            break;
          case "block":
            np.modules.mod.cursor.setBlock(e, zd.STORAGE, n.textureName);
        }
        this._modal.hide();
      }), this._storage.appendChild(i.get$Element());
    }
    onShopItems(e) {
      this.clean();
      for (const t in e.items) this.appendItem(t, e.items[t]);
    }
    appendItem(e, t) {
      if (false === this._language.items.hasOwnProperty(e)) return;
      const n = this._language.items[e], i = new DomShopItem_DomShopItem(t);
      switch (this._items.push(i), i.setImage(np.textures.getTextureUrl(n.textureName)).setTitle(n.title).setDescription(n.description).setConsumes(t.consumes).setProduces(t.produces).setRepairs(t.repairs).setHealth(t.health).setHealingSpeed(t.healingSpeed).setHealingDuration(t.healingDuration).setProtection(ValueUtils.numToFixed(1 - t.reduceDamage, 1)).setAttackRadius(t.attackRadius).setDamage(t.damage).setCosts(t.costs).updateAvailable().getBuyButton().events.on("click", () => {
        switch (t.type) {
          case "item":
            np.socket.send("shopBuyItem", {type: e, from: zd.SHOP});
            break;
          case "block":
            np.modules.mod.cursor.setBlock(e, zd.SHOP, n.textureName);
        }
        this._modal.hide();
      }), n.group) {
        case "tools":
          this._tools.appendChild(i.get$Element());
          break;
        case "armor":
          this._armor.appendChild(i.get$Element());
          break;
        case "potions":
          this._potions.appendChild(i.get$Element());
          break;
        case "miners":
          this._miners.appendChild(i.get$Element());
          break;
        case "generators":
          this._generators.appendChild(i.get$Element());
          break;
        case "sellers":
          this._sellers.appendChild(i.get$Element());
          break;
        case "defense":
          this._defense.appendChild(i.get$Element());
      }
    }
    show() {
      this._modal.show();
    }
    hide() {
      this._modal.hide();
    }
    clean() {
      this._tools.clean(), this._armor.clean(), this._potions.clean(), this._miners.clean(), this._generators.clean(), this._sellers.clean(), this._defense.clean();
    }
  }
  !function (e) {
    e[e.LeftMouseButton = 0] = "LeftMouseButton", e[e.MiddleMouseButton = 1] = "MiddleMouseButton", e[e.RightMouseButton = 2] = "RightMouseButton", e[e.MouseWheelScroll = 3] = "MouseWheelScroll", e[e.ArrowUp = 4] = "ArrowUp", e[e.ArrowLeft = 5] = "ArrowLeft", e[e.ArrowDown = 6] = "ArrowDown", e[e.ArrowRight = 7] = "ArrowRight", e[e.ShiftLeft = 8] = "ShiftLeft", e[e.ControlLeft = 9] = "ControlLeft", e[e.AltLeft = 10] = "AltLeft", e[e.MetaLeft = 11] = "MetaLeft", e[e.ShiftRight = 12] = "ShiftRight", e[e.ControlRight = 13] = "ControlRight", e[e.AltRight = 14] = "AltRight", e[e.MetaRight = 15] = "MetaRight", e[e.CapsLock = 16] = "CapsLock", e[e.Space = 17] = "Space", e[e.Backspace = 18] = "Backspace", e[e.Delete = 19] = "Delete", e[e.Escape = 20] = "Escape", e[e.Enter = 21] = "Enter", e[e.Slash = 22] = "Slash", e[e.Backslash = 23] = "Backslash", e[e.IntlBackslash = 24] = "IntlBackslash", e[e.BracketLeft = 25] = "BracketLeft", e[e.BracketRight = 26] = "BracketRight", e[e.Backquote = 27] = "Backquote", e[e.Minus = 28] = "Minus", e[e.Equal = 29] = "Equal", e[e.Tab = 30] = "Tab", e[e.Quote = 31] = "Quote", e[e.Semicolon = 32] = "Semicolon", e[e.Period = 33] = "Period", e[e.Comma = 34] = "Comma", e[e.Digit0 = 35] = "Digit0", e[e.Digit1 = 36] = "Digit1", e[e.Digit2 = 37] = "Digit2", e[e.Digit3 = 38] = "Digit3", e[e.Digit4 = 39] = "Digit4", e[e.Digit5 = 40] = "Digit5", e[e.Digit6 = 41] = "Digit6", e[e.Digit7 = 42] = "Digit7", e[e.Digit8 = 43] = "Digit8", e[e.Digit9 = 44] = "Digit9", e[e.KeyA = 45] = "KeyA", e[e.KeyB = 46] = "KeyB", e[e.KeyC = 47] = "KeyC", e[e.KeyD = 48] = "KeyD", e[e.KeyE = 49] = "KeyE", e[e.KeyF = 50] = "KeyF", e[e.KeyG = 51] = "KeyG", e[e.KeyH = 52] = "KeyH", e[e.KeyI = 53] = "KeyI", e[e.KeyJ = 54] = "KeyJ", e[e.KeyK = 55] = "KeyK", e[e.KeyL = 56] = "KeyL", e[e.KeyM = 57] = "KeyM", e[e.KeyN = 58] = "KeyN", e[e.KeyO = 59] = "KeyO", e[e.KeyP = 60] = "KeyP", e[e.KeyQ = 61] = "KeyQ", e[e.KeyR = 62] = "KeyR", e[e.KeyS = 63] = "KeyS", e[e.KeyT = 64] = "KeyT", e[e.KeyU = 65] = "KeyU", e[e.KeyV = 66] = "KeyV", e[e.KeyW = 67] = "KeyW", e[e.KeyX = 68] = "KeyX", e[e.KeyY = 69] = "KeyY", e[e.KeyZ = 70] = "KeyZ", e[e.F1 = 71] = "F1", e[e.F2 = 72] = "F2", e[e.F3 = 73] = "F3", e[e.F4 = 74] = "F4", e[e.F5 = 75] = "F5", e[e.F6 = 76] = "F6", e[e.F7 = 77] = "F7", e[e.F8 = 78] = "F8", e[e.F9 = 79] = "F9", e[e.F10 = 80] = "F10", e[e.F11 = 81] = "F11", e[e.F12 = 82] = "F12";
  }(Nd || (Nd = {})), function (e) {
    e.TEXT = "text", e.PASSWORD = "password", e.NUMBER = "number", e.FILE = "file";
  }(Ud || (Ud = {}));
  class DomInput_DomInput extends DomAbstractElement_DomAbstractElement {
    constructor() {
      super(), this.events = new Events_Events, this._container = new DomDiv_DomDiv, this._placeHolder = new DomParagraph_DomParagraph, this._$element = document.createElement("input"), this._oldValue = "", this._oldSelectionStart = 0, this._oldSelectionEnd = 0, this._type = Ud.TEXT, this._container.addClasses(["input-container"]), this._placeHolder.addClasses(["placeholder"]), this._container.appendChild(this._placeHolder.get$Element()), this.get$Input().classList.add("input"), this._container.appendChild(this._$element), this.get$Input().addEventListener("click", e => this.onClick(e)), this.get$Input().addEventListener("input", e => this.onInput(e)), this.get$Input().addEventListener("keydown", e => this.onKeyDown(e)), this.get$Input().addEventListener("keyup", e => this.onKeyUp(e)), this.get$Input().addEventListener("change", e => this.onChange(e)), this.get$Input().addEventListener("focus", e => this.onFocus(e)), this.get$Input().addEventListener("blur", e => this.onBlur(e));
    }
    onClick(e) {
      this.events.emit("click", {event: e});
    }
    onInput(e) {
      this.update(), this.events.emit("input", {event: e});
    }
    onKeyDown(e) {
      this.update(), this.events.emit("keyDown", {event: e}), Nd[e.code] === Nd.Enter && this.onKeyDownEnter();
    }
    onKeyDownEnter() {
      this.events.emit("keyDownEnter");
    }
    onKeyUp(e) {
      this.update(), this.events.emit("keyUp", {event: e});
    }
    onChange(e) {
      this.update(), this.removeClasses(["error"]), this.events.emit("change", {event: e});
    }
    onFocus(e) {
      this.events.emit("focus", {event: e});
    }
    onBlur(e) {
      this.events.emit("blur", {event: e});
    }
    setName(e) {
      this.get$Input().name = e;
    }
    setPlaceHolder(e) {
      return this._placeHolder.setText(e), this;
    }
    setValue(e) {
      return this.get$Input().value = e, this.update(), this;
    }
    getValue() {
      return this.get$Input().value;
    }
    setNumber(e) {
      return this.get$Input().value = e.toString(), this.update(), this;
    }
    getNumber() {
      return parseFloat(this.getValue()) || 0;
    }
    isNumber() {
      return this._type === Ud.NUMBER;
    }
    clear() {
      return this.setValue("");
    }
    setMin(e) {
      return this.get$Input().min = e.toString(), this;
    }
    setMax(e) {
      return this.get$Input().max = e.toString(), this;
    }
    setMaxLength(e) {
      return this.get$Input().maxLength = e, this;
    }
    setLimit(e, t) {
      return this.get$Input().min = e.toString(), this.get$Input().max = t.toString(), this;
    }
    setType(e) {
      return this._type = e, this.get$Input().type = e, this;
    }
    get$Element() {
      return this._container.get$Element();
    }
    get$Input() {
      return this._$element;
    }
    focus() {
      return this.get$Input().focus(), this;
    }
    enable() {
      return this.get$Input().removeAttribute("disabled"), this;
    }
    disable() {
      return this.get$Input().setAttribute("disabled", "disabled"), this;
    }
    update() {
      this.filterNumeric(), this.updatePlaceHolder();
    }
    filterNumeric() {
      this.isNumber() && (this.numericFilterRegEx(this.getValue()) ? (this._oldValue = this.getValue(), this._oldSelectionStart = this.get$Input().selectionStart, this._oldSelectionEnd = this.get$Input().selectionEnd) : (this.setValue(this._oldValue), this.get$Input().setSelectionRange(this._oldSelectionStart, this._oldSelectionEnd)));
    }
    numericFilterRegEx(e) {
      return /^\d*\.?\d*$/.test(e);
    }
    updatePlaceHolder() {
      this.getValue().length || false === this.get$Input().checkValidity() ? this.upPlaceHolder() : this.downPlaceHolder();
    }
    upPlaceHolder() {
      this._placeHolder.addClasses(["up"]);
    }
    downPlaceHolder() {
      this._placeHolder.removeClasses(["up"]);
    }
  }
  class DomCreateTeam_DomCreateTeam extends DomDiv_DomDiv {
    constructor() {
      super(), this._language = n(4)("./" + np.languages.activeLanguage + ".json"), this._input = new DomInput_DomInput, this._create = new DomButton_DomButton, this.addClasses(["create-team"]), this._input.addClasses(["team-name"]).setPlaceHolder(this._language.teamName).setMaxLength(6), this.appendChild(this._input.get$Element()), this._create.setText(this._language.createTeam), this.appendChild(this._create.get$Element()), this._create.events.on("click", () => this.onClickCreateTeam()), np.socket.events.on("team", e => this.onTeam(e.team)), np.socket.events.on("teamsError", e => this.onTeamsError(e.error));
    }
    onTeam(e) {
      this.hide();
    }
    onClickCreateTeam() {
      this._input.getValue().length && (np.socket.send("createTeam", {name: this._input.getValue()}), this._input.setValue(""));
    }
    onTeamsError(e) {
      switch (e) {
        case "hasNotTeam":
          this.show();
      }
    }
    show() {
      this.addClasses(["show"]);
    }
    hide() {
      this.removeClasses(["show"]);
    }
  }
  class DomTeammate_DomTeammate extends DomDiv_DomDiv {
    constructor(e) {
      super(), this._language = n(4)("./" + np.languages.activeLanguage + ".json"), this._name = new DomParagraph_DomParagraph, this._kick = new DomButton_DomButton, this._leave = new DomButton_DomButton, this._data = e, this.addClasses(["teammate"]), this._name.setText(this._data.name), this.appendChild(this._name.get$Element()), this._leave.addClasses(["leave"]).setText(this._language.leave).events.on("click", () => this.onSendLeave()), this._kick.addClasses(["kick"]).setText(this._language.kick).events.on("click", () => this.onSendKick()), np.myServerUuid === this._data.uuid ? this.appendChild(this._leave.get$Element()) : this.appendChild(this._kick.get$Element());
    }
    onSendLeave() {
      np.socket.send("leaveTeam");
    }
    onSendKick() {
      np.socket.send("kickTeammate", {teammate: this._data.uuid});
    }
  }
  class DomTeam_DomTeam extends DomDiv_DomDiv {
    constructor() {
      super(), this._language = n(4)("./" + np.languages.activeLanguage + ".json"), this._name = new DomParagraph_DomParagraph, this._teammates = new DomDiv_DomDiv, this.addClasses(["team"]), this._name.addClasses(["team-name"]), this.appendChild(this._name.get$Element()), this._teammates.addClasses(["teammates"]), this.appendChild(this._teammates.get$Element()), np.socket.events.on("team", e => this.onTeam(e.team)), np.socket.events.on("teamsError", e => this.onTeamsError(e.error));
    }
    update() {
      np.socket.send("getTeam");
    }
    onTeam(e) {
      this.setTeam(e);
    }
    onTeamsError(e) {
      switch (e) {
        case "hasNotTeam":
          this.onHasNotTeam();
      }
    }
    onHasNotTeam() {
      if (this.hide(), this._data) {
        const e = this._data.teammates;
        this._data = null;
        for (let t = 0; t < e.length; t++) np.entities.getEntityByServerUuid(e[t].uuid).ifPresent(e => e.updateFriendlyStatus());
      }
    }
    setTeam(e) {
      this.clean(), this._data = e, this._name.setText(StringUtils_StringUtils.insertValues(this._language.myTeam, {team: ValueUtils.clearNotWhiteListedCharsInName(e.name)}));
      for (let t = 0; t < e.teammates.length; t++) this.appendTeammate(e.teammates[t]);
      this.show();
    }
    appendTeammate(e) {
      this._teammates.appendChild(new DomTeammate_DomTeammate(e).get$Element()), np.entities.getEntityByServerUuid(e.uuid).ifPresent(e => e.updateFriendlyStatus());
    }
    show() {
      this.addClasses(["show"]);
    }
    hide() {
      this.removeClasses(["show"]);
    }
    clean() {
      return this._name.setText(""), this._teammates.clean(), this;
    }
    isTeammate(e) {
      if (!this._data) return false;
      for (let t = 0; t < this._data.teammates.length; t++) if (this._data.teammates[t].uuid === e) return true;
      return false;
    }
  }
  class ButtonBlocker_ButtonBlocker {
    constructor(e) {
      this._buttonText = "", this.replaceButtonText = false, this._$button = e;
    }
    block(e) {
      this._interval && this.unBlock();
      let t = e;
      this._buttonText = this._$button.innerText, this._$button.setAttribute("disabled", "disabled"), this._$button.classList.add("loading"), this.replaceButtonText ? this._$button.innerText = `${t}` : this._$button.innerText = `${this._buttonText} (${t})`, this._interval = setInterval(() => t = this.tick(t), MillisHelper.fromSecond(1));
    }
    unBlock() {
      this.clearInterval(), this._$button.classList.remove("loading"), this._$button.innerText = this._buttonText, this._$button.removeAttribute("disabled");
    }
    tick(e) {
      return this.replaceButtonText ? this._$button.innerText = `${--e}` : this._$button.innerText = `${this._buttonText} (${--e})`, 0 === e && this.onExpired(), e;
    }
    onExpired() {
      this.unBlock();
    }
    clearInterval() {
      clearInterval(this._interval), this._interval = null;
    }
  }
  class DomTeamItem_DomTeamItem extends DomDiv_DomDiv {
    constructor(e) {
      super(), this._language = n(4)("./" + np.languages.activeLanguage + ".json"), this._name = new DomParagraph_DomParagraph, this._sendRequest = new DomButton_DomButton, this._buttonBlocker = new ButtonBlocker_ButtonBlocker(this._sendRequest.get$Element()), this._blockSendRequestOnSeconds = 60, this._data = e, this.addClasses(["team-item"]), this._name.setText(ValueUtils.clearNotWhiteListedCharsInName(this._data.name)), this.appendChild(this._name.get$Element()), this._sendRequest.addClasses(["send-join-request"]).setText(this._language.join).events.on("click", () => this.onSendRequest()), this.appendChild(this._sendRequest.get$Element());
    }
    onSendRequest() {
      np.socket.send("teamJoinRequest", {team: this._data.uuid});
      const e = SvgIconsHelper.getIcon(SvgIconsHelper.users, {color: utils_Color_Color.WHITE});
      DomPush_DomPush.showPush(this._language.joinRequestSent, "", MillisHelper.fromSecond(3), e), this._buttonBlocker.block(this._blockSendRequestOnSeconds);
    }
  }
  class DomTeams_DomTeams extends DomDiv_DomDiv {
    constructor() {
      super(), this._language = n(4)("./" + np.languages.activeLanguage + ".json"), this._teamsTitle = new DomParagraph_DomParagraph, this._teamsList = new DomDiv_DomDiv, this.addClasses(["teams"]), this._teamsTitle.addClasses(["teams-title"]).setText(this._language.teams), this.appendChild(this._teamsTitle.get$Element()), this._teamsList.addClasses(["teams-list"]), this.appendChild(this._teamsList.get$Element()), np.socket.events.on("teams", e => this.onTeams(e.teams));
    }
    update() {
      np.socket.send("getTeams");
    }
    onTeams(e) {
      this.setTeams(e);
    }
    setTeams(e) {
      this.clean(), this._data = e;
      for (const t in e) this.appendTeam(e[t]);
    }
    appendTeam(e) {
      this._teamsList.appendChild(new DomTeamItem_DomTeamItem(e).get$Element());
    }
    clean() {
      return this._teamsList.clean(), this;
    }
  }
  class TeamsModal_TeamsModal {
    constructor() {
      this._language = n(4)("./" + np.languages.activeLanguage + ".json"), this._container = new DomDiv_DomDiv, this._teams = new DomTeams_DomTeams, this._team = new DomTeam_DomTeam, this._createTeam = new DomCreateTeam_DomCreateTeam, this._modal = new DomModal_DomModal("", this._container.get$Element()), this.putTemplates(), this.addListeners();
    }
    putTemplates() {
      this._container.addClasses(["modal-container"]), this._modal.get$Modal().classList.add("teams-modal"), this._modal.events.on("show", () => this.onShowModal()), this._modal.events.on("hide", () => this.onHideModal()), this._container.appendChild(this._teams.get$Element()), this._container.appendChild(this._team.get$Element()), this._container.appendChild(this._createTeam.get$Element());
    }
    onShowModal() {
      np.input.events.emit("beginInput"), this._teams.update(), this._team.update();
    }
    onHideModal() {
      np.input.events.emit("endInput");
    }
    addListeners() {
      np.events.on("gameEnd", () => this.onGameEnd()), np.socket.events.on("disconnect", () => this.onSocketDisconnect()), np.socket.events.on("teamJoinRequest", e => this.onTeamJoinRequest(e.request)), np.socket.events.on("teamJoinRequestAccepted", e => this.onTeamJoinRequestAccepted(e.team)), np.socket.events.on("teamsError", e => this.onTeamsError(e.error)), np.socket.events.on("newTeammate", e => this.onNewTeammate(e.teammate)), np.socket.events.on("teammateLeave", e => this.onTeammateLeave(e.teammate)), np.socket.events.on("kickTeammate", e => this.onKickTeammate(e.kicker, e.kicked)), np.socket.events.on("kickFromTeam", e => this.onKickFromTeam(e.kicker)), np.socket.events.on("teammateDead", e => this.onTeammateDead(e.teammate));
    }
    onGameEnd() {
      this.hide();
    }
    onSocketDisconnect() {
      this.hide();
    }
    onTeamJoinRequest(e) {
      if (e) {
        const t = StringUtils_StringUtils.insertValues(this._language.wantJoinToTeam, {player: ValueUtils.clearNotWhiteListedCharsInName(e.player.name)}), n = this.showTeamPush(this._language.joinRequest, t, MillisHelper.fromSecond(20));
        n.get$Icon().classList.add("success"), n.showButtons(), n.events.on("click", () => this.onClickAcceptJoinRequest(n, e.uuid)), n.events.on("accept", () => this.onClickAcceptJoinRequest(n, e.uuid)), n.events.on("reject", () => this.onClickRejectJoinRequest(n));
      }
    }
    onClickAcceptJoinRequest(e, t) {
      np.socket.send("acceptJoinRequest", {requestUuid: t}), e.destroy();
    }
    onClickRejectJoinRequest(e) {
      e.destroy();
    }
    onTeamJoinRequestAccepted(e) {
      if (e) {
        const t = StringUtils_StringUtils.insertValues(this._language.acceptedTo, {team: ValueUtils.clearNotWhiteListedCharsInName(e.name)}), n = StringUtils_StringUtils.insertValues(this._language.youAreAcceptedToTeam, {team: ValueUtils.clearNotWhiteListedCharsInName(e.name)});
        this.showTeamPush(t, n).get$Icon().classList.add("success");
      }
    }
    onTeamsError(e) {
      switch (e) {
        case "alreadyInTeam":
          DomPush_DomPush.showError(this._language.error, this._language.alreadyInTeam);
          break;
        case "teamNotFound":
          DomPush_DomPush.showError(this._language.error, this._language.teamNotFound);
          break;
        case "joinRequestNotFound":
          DomPush_DomPush.showError(this._language.error, this._language.joinRequestNotFound);
          break;
        case "teammatesTooFar":
          DomPush_DomPush.showError(this._language.error, this._language.teammatesTooFar);
      }
    }
    onNewTeammate(e) {
      if (e) {
        this.showTeamPush(this._language.newTeammate, ValueUtils.clearNotWhiteListedCharsInName(e.name)).get$Icon().classList.add("success");
      }
    }
    onTeammateLeave(e) {
      if (e) {
        const t = StringUtils_StringUtils.insertValues(this._language.teammateLeaveTeam, {teammate: ValueUtils.clearNotWhiteListedCharsInName(e.name)});
        this.showTeamPush(this._language.teammateLeave, t, MillisHelper.fromSecond(10)).get$Icon().classList.add("success"), np.entities.getEntityByServerUuid(e.uuid).ifPresent(e => e.updateFriendlyStatus());
      }
    }
    onKickTeammate(e, t) {
      if (e && t) {
        const n = StringUtils_StringUtils.insertValues(this._language.kickedTeammateBy, {kicker: ValueUtils.clearNotWhiteListedCharsInName(e.name), kicked: ValueUtils.clearNotWhiteListedCharsInName(t.name)});
        this.showTeamPush(this._language.kickedTeammate, n, MillisHelper.fromSecond(10)).get$Icon().classList.add("success"), np.entities.getEntityByServerUuid(t.uuid).ifPresent(e => e.updateFriendlyStatus());
      }
    }
    onKickFromTeam(e) {
      if (e) {
        const t = StringUtils_StringUtils.insertValues(this._language.kickFromTeam, {kicker: ValueUtils.clearNotWhiteListedCharsInName(e.name)});
        this.showTeamPush(this._language.kicked, t, MillisHelper.fromSecond(10)).get$Icon().classList.add("error");
      }
    }
    onTeammateDead(e) {
      if (e) {
        const t = StringUtils_StringUtils.insertValues(this._language.teammateDead, {teammate: ValueUtils.clearNotWhiteListedCharsInName(e.name)});
        this.showTeamPush(t, "", MillisHelper.fromSecond(10)).get$Icon().classList.add("error");
      }
    }
    show() {
      this._modal.show();
    }
    hide() {
      this._modal.hide();
    }
    showTeamPush(e, t, n) {
      const i = SvgIconsHelper.getIcon(SvgIconsHelper.users, {color: utils_Color_Color.WHITE});
      return DomPush_DomPush.showPush(e, t, n, i);
    }
    isTeammate(e) {
      return this._team.isTeammate(e);
    }
  }
  class UraniumResource_UraniumResource extends AbstractResource_AbstractResource {
    constructor() {
      super(), this.addClasses(["uranium"]);
    }
  }
  class GameScreen_GameScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(148)("./" + np.languages.activeLanguage + ".json"), this._buttons = new DomDiv_DomDiv, this._topLeft = new DomDiv_DomDiv, this._top = new DomDiv_DomDiv, this._topRight = new DomDiv_DomDiv, this._bottom = new DomDiv_DomDiv, this._bottomRight = new DomDiv_DomDiv, this._teams = new DomButton_DomButton, this._teamsSpan = new DomParagraph_DomParagraph, this._joystickAngle = 0, this._speedUp = new DomButton_DomButton, this._attack = new DomButton_DomButton, this._topPlayers = new DomTopPlayers_DomTopPlayers, this._metrics = new DomMetrics_DomMetrics, this._resources = new DomDiv_DomDiv, this.coalResource = new CoalResource_CoalResource, this.ironResource = new IronResource_IronResource, this.goldResource = new GoldResource_GoldResource, this.diamondResource = new DiamondResource_DiamondResource, this.uraniumResource = new UraniumResource_UraniumResource, this.energyResource = new EnergyResource_EnergyResource, this.moneyResource = new MoneyResource_MoneyResource, this._shop = new DomShopModal_DomShopModal, this._shopButton = new DomButton_DomButton, this._shopButtonIcon = new DomDiv_DomDiv, this._shopButtonText = new DomParagraph_DomParagraph, this._howToPlayText = new DomParagraph_DomParagraph, this.teamsModal = new TeamsModal_TeamsModal, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._topLeft.addClasses(["top-left"]), this.get$Screen().appendChild(this._topLeft.get$Element()), this._buttons.addClasses(["buttons"]), this._topRight.appendChild(this._buttons.get$Element()), this._top.addClasses(["top"]), this.get$Screen().appendChild(this._top.get$Element()), this._topRight.addClasses(["top-right"]), this.get$Screen().appendChild(this._topRight.get$Element()), this._bottom.addClasses(["bottom"]), this.get$Screen().appendChild(this._bottom.get$Element()), this._bottomRight.addClasses(["bottom-right"]), this.get$Screen().appendChild(this._bottomRight.get$Element()), this._howToPlayText.addClasses(["how-to-play"]).setHtml(this._language.howToPlay), this._top.appendChild(this._howToPlayText.get$Element()), this._shopButton.addClasses(["shop-button"]), this._bottomRight.appendChild(this._shopButton.get$Element()), this._shopButtonIcon.addClasses(["shop-icon"]), this._shopButton.appendChild(this._shopButtonIcon.get$Element()), this._shopButtonText.addClasses(["text"]).setText(this._language.shop), this._shopButton.appendChild(this._shopButtonText.get$Element()), false !== np.device.isMobile() || MineEnergy_MineEnergy.isYandexGamesIframe() || this._topRight.appendChild(this._metrics.get$Element()), this._resources.addClasses(["resources"]), this._bottomRight.appendChild(this._resources.get$Element()), this._resources.appendChild(this.moneyResource.get$Element()), this._resources.appendChild(this.energyResource.get$Element()), this._resources.appendChild(this.diamondResource.get$Element()), this._resources.appendChild(this.uraniumResource.get$Element()), this._resources.appendChild(this.goldResource.get$Element()), this._resources.appendChild(this.ironResource.get$Element()), this._resources.appendChild(this.coalResource.get$Element()), this._topLeft.appendChild(this._topPlayers.get$Element()), np.device.isMobile() && (this._joystick = new DomJoystick_DomJoystick, this.get$Screen().appendChild(this._joystick.get$Joystick()), this._speedUp.addClasses(["mobile-button"]), this._speedUp.addClasses(["speed-up"]), this._speedUp.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.runDuoTone)), this.get$Screen().appendChild(this._speedUp.get$Element()), this._attack.addClasses(["mobile-button"]), this._attack.addClasses(["attack"]), this._attack.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.swordDuoTone)), this.get$Screen().appendChild(this._attack.get$Element())), this._teams.addClasses(["open-teams", "small", "only-icon"]).events.on("click", () => this.teamsModal.show()), this._buttons.appendChild(this._teams.get$Element());
      const e = document.createElement("div");
      e.classList.add("icon"), e.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.users)), this._teams.appendChild(e), this._teamsSpan.setText(this._language.teams), this._teams.appendChild(this._teamsSpan.get$Element());
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.window.events.on("resize", () => this.onResize()), this._joystick && this._joystick.events.on("move", () => this.onJoystickMove()), np.utils.Dom.addPointerDown(this._speedUp.get$Element(), () => this.onDownSpeedUp()), np.utils.Dom.addPointerUp(this._speedUp.get$Element(), () => this.onUpSpeedUp()), np.utils.Dom.addPointerDown(this._attack.get$Element(), () => this.onDownAttack()), np.utils.Dom.addPointerUp(this._attack.get$Element(), () => this.onUpAttack()), this.getTopPlayers().events.on("changedMyNumber", e => this.onChangedMyNumber(e.position)), this._shopButton.events.on("click", () => this.onShopButtonClick()), np.spawner.events.on("spawnMyEntity", () => this.onSpawnMyEntity()), np.spawner.events.on("updateMyServerProperties", e => this.onUpdateMyServerProperties(e));
    }
    onChangedMyNumber(e) {
      1 === e && np.modules.mod.get(DevModeDetector_DevModeDetector).ifPresent(e => {
        e.isDevMode() || np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => e.startRecord());
      });
    }
    onShopButtonClick() {
      this._shop.show();
    }
    onSpawnMyEntity() {
      this.updateResources();
    }
    onUpdateMyServerProperties(e) {
      ValueUtils.isNotUndefinedAndNotNull(e.resources) && this.updateResources();
    }
    updateResources() {
      np.getMyPlayer().ifPresent(e => {
        const t = e.serverProperties.resources, n = ValueUtils.getHumanityNumber(t.coal).text, i = ValueUtils.getHumanityNumber(t.produceCoalPerTick).text, r = ValueUtils.getHumanityNumber(t.iron).text, o = ValueUtils.getHumanityNumber(t.produceIronPerTick).text, s = ValueUtils.getHumanityNumber(t.gold).text, a = ValueUtils.getHumanityNumber(t.produceGoldPerTick).text, l = ValueUtils.getHumanityNumber(t.diamond).text, c = ValueUtils.getHumanityNumber(t.produceDiamondPerTick).text, h = ValueUtils.getHumanityNumber(t.uranium).text, u = ValueUtils.getHumanityNumber(t.produceUraniumPerTick).text, d = ValueUtils.getHumanityNumber(t.energy).text, p = ValueUtils.getHumanityNumber(t.produceEnergyPerTick).text, m = ValueUtils.getHumanityNumber(t.money).text, f = ValueUtils.getHumanityNumber(t.produceMoneyPerTick).text;
        this.coalResource.setValue(t.coal).setText(`${n} (${i}/${this._language.perTick})`), this.ironResource.setValue(t.iron).setText(`${r} (${o}/${this._language.perTick})`), this.goldResource.setValue(t.gold).setText(`${s} (${a}/${this._language.perTick})`), this.diamondResource.setValue(t.diamond).setText(`${l} (${c}/${this._language.perTick})`), this.uraniumResource.setValue(t.uranium).setText(`${h} (${u}/${this._language.perTick})`), this.energyResource.setValue(t.energy).setText(`${d} (${p}/${this._language.perTick})`), this.moneyResource.setValue(t.money).setText(`${m} (${f}/${this._language.perTick})`);
      });
    }
    startUpdateResources() {
      this.stopUpdateResources(), this._updateResourcesTicker = np.ticker.addToTicker({func: () => this.updateResourcesDirection(), tps: 0.5});
    }
    stopUpdateResources() {
      this._updateResourcesTicker && (np.ticker.removeFromTicker(this._updateResourcesTicker), this._updateResourcesTicker = null);
    }
    updateResourcesDirection() {
      np.getMyPlayer().ifPresent(e => {
        const t = e.serverProperties.resources;
        this.coalResource.setValue(t.coal), this.ironResource.setValue(t.iron), this.goldResource.setValue(t.gold), this.diamondResource.setValue(t.diamond), this.uraniumResource.setValue(t.uranium), this.energyResource.setValue(t.energy), this.moneyResource.setValue(t.money);
      });
    }
    onGameStart() {
      this.show();
    }
    onResize() {}
    onClickGameMenu() {
      np.input.events.emit("playerUnFreezeShot"), np.modules.mod.get(GameMenu_GameMenu).ifPresent(e => e.show());
    }
    onClickFullScreen() {
      np.input.events.emit("playerUnFreezeShot"), document.fullscreenElement ? np.canvas.disableFullScreen() : np.canvas.enableFullScreen();
    }
    onJoystickMove() {
      this._joystickAngle = this._joystick.getAngle();
    }
    onDownSpeedUp() {
      np.input.events.emit("playerFreezeShot"), np.input.keyBindings.getKeyBindings("speedUp").ifPresent(e => e.triggers[0].pressDown());
    }
    onUpSpeedUp() {
      np.input.events.emit("playerUnFreezeShot"), np.input.keyBindings.getKeyBindings("speedUp").ifPresent(e => e.triggers[0].pressUp());
    }
    onDownAttack() {
      np.input.events.emit("playerFreezeShot"), np.input.keyBindings.getKeyBindings("attack").ifPresent(e => e.triggers[0].pressDown());
    }
    onUpAttack() {
      np.input.events.emit("playerUnFreezeShot"), np.input.keyBindings.getKeyBindings("attack").ifPresent(e => e.triggers[0].pressUp());
    }
    onShow() {
      super.onShow(), this.startUpdateResources(), this._metrics.start(), np.screens.get$Screens().style.pointerEvents = "none", np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.disable());
    }
    onHide() {
      super.onHide(), this.stopUpdateResources(), this._metrics.stop(), np.screens.get$Screens().style.pointerEvents = "all";
    }
    getTopPlayers() {
      return this._topPlayers;
    }
    get$TopRight() {
      return this._topRight;
    }
  }
  !function (e) {
    e.Main = "main", e.Connect = "connect", e.GameOver = "gameOver", e.ReSpawn = "reSpawn", e.Game = "game", e.Spectator = "spectator";
  }(Vd || (Vd = {}));
  class AbstractEntityBlock_AbstractEntityBlock extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this.cacheable = false, this._transparent = true, this._renderOrder = 1, this.serverProperties = null;
    }
    construct() {
      super.construct(), this.abilities.addAbilities(new AbilityHealth_AbilityHealth(this, {renderOrderOffset: 1}));
    }
    onSpawn() {
      super.onSpawn(), this.serverProperties.parentUuid && (this.updateBlockFriendlyStatus(), np.entities.getEntityByServerUuid(this.serverProperties.parentUuid).ifPresent(e => {
        this._updateParentFriendlyStatusListener || (this._updateParentFriendlyStatusListener = e.events.on("updateFriendlyStatus", () => this.onParentUpdateFriendlyStatus()));
      }), np.spawner.events.on("spawnServerEntity", e => this.onSpawnServerEntity(e)));
    }
    onSpawnServerEntity(e) {
      this.serverProperties && e.serverProperties.uuid === this.serverProperties.parentUuid && (this.updateBlockFriendlyStatus(), np.entities.getEntityByServerUuid(this.serverProperties.parentUuid).ifPresent(e => {
        this._updateParentFriendlyStatusListener || (this._updateParentFriendlyStatusListener = e.events.on("updateFriendlyStatus", () => this.onParentUpdateFriendlyStatus()));
      }));
    }
    onParentUpdateFriendlyStatus() {
      this.updateBlockFriendlyStatus();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), this.serverProperties.parentUuid && this.updateBlockFriendlyStatus();
    }
    updateBlockFriendlyStatus() {
      this.serverProperties.parentUuid === np.myServerUuid ? this.onMyBlock() : np.screens.get(Vd.Game, GameScreen_GameScreen).teamsModal.isTeammate(this.serverProperties.parentUuid) ? this.onMyBlock() : this.onEnemyBlock();
    }
    onEnemyBlock() {
      this.abilities.getAbility(AbilityHealth_AbilityHealth).ifPresent(e => e.setColor(utils_Color_Color.RED));
    }
    onMyBlock() {
      this.abilities.getAbility(AbilityHealth_AbilityHealth).ifPresent(e => e.setColor(utils_Color_Color.GREEN));
    }
    onNeutralBlock() {
      this.abilities.getAbility(AbilityHealth_AbilityHealth).ifPresent(e => e.setColor(utils_Color_Color.AQUA));
    }
    createSkin() {
      return new SkinSimple_SkinSimple({textureUrls: [this.getTexture()], transparent: this._transparent, renderOrder: this._renderOrder});
    }
    getInstancedData() {
      const e = super.getInstancedData();
      return e.textureUrls = [this.getTexture()], e.transparent = this._transparent, e.renderOrder = this._renderOrder, e;
    }
    isInstanced() {
      return np.device.isGpuAcceleration();
    }
    onDead() {
      super.onDead(), this.spawnDeadEffect();
    }
    spawnDeadEffect() {
      for (let e = 0; e < 5; e++) this.spawnDeadSmokeParticle(this.position, 2.5 * this.radius);
    }
    spawnDeadSmokeParticle(e, t) {
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(t, 1.5 * t)), position: e.clone(), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), rotationZSpeed: Randomize_Randomize.getRandomFloat(0.02, 0.04), color: Randomize_Randomize.getRandomColor(100, 100, 100, 255, 255, 255).toGrayScale(), texture: "effects/particles/big-smoke.png", animateTiles: new vector_Vector2_Vector2(1, 12), spawnAroundRadius: t / 2, spawnTimeoutFrames: Randomize_Randomize.getRandomInt(0, 15), animateEveryFrame: Randomize_Randomize.getRandomInt(1, 2), poolName: "smoke", transparent: true, renderOrder: 10});
    }
    remove() {
      return this._updateParentFriendlyStatusListener && (this._updateParentFriendlyStatusListener.destroy(), this._updateParentFriendlyStatusListener = null), super.remove();
    }
  }
  class EntityBlockBed_EntityBlockBed extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/bed.png";
    }
  }
  class EntityBlockIron_EntityBlockIron extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/iron.png";
    }
  }
  class EntityBlockObsidian_EntityBlockObsidian extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/obsidian.png";
    }
  }
  class EntityBlockReinforcedStone_EntityBlockReinforcedStone extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/reinforced-stone.png";
    }
  }
  class TeslaCoilSkin_TeslaCoilSkin extends SkinSimple_SkinSimple {
    initialize() {
      super.initialize(), this._radius = new SkinSimple_SkinSimple({textureUrls: ["blocks/defense/skull.png"], opacities: [0.2], transparent: true}), this._radius.initialize(), this.getObject3d().add(this._radius.getObject3d());
    }
    setRadius(e) {
      this._radius.getObject3d().scale.setScalar(e), this._radius.setTextureRepeat(vector_Vector2_Vector2.fromScalar(e));
    }
    setRadiusColor(e) {
      this._radius.setColor(e);
    }
  }
  class EntityBlockTeslaCoil1000_EntityBlockTeslaCoil1000 extends AbstractEntityBlock_AbstractEntityBlock {
    constructor() {
      super(...arguments), this.serverProperties = null, this.alwaysDisplayed = true;
    }
    createSkin() {
      return new TeslaCoilSkin_TeslaCoilSkin({textureUrls: [this.getTexture()], transparent: this._transparent, renderOrder: this._renderOrder});
    }
    onSpawn() {
      super.onSpawn(), this.skin && this.skin.setRadius(this.serverProperties.attackRadius / (this.serverProperties.size.x / 2) + 1);
    }
    onMyBlock() {
      super.onMyBlock(), this.skin && this.skin.setRadiusColor(utils_Color_Color.fromScalar(5635925));
    }
    onEnemyBlock() {
      super.onEnemyBlock(), this.skin && this.skin.setRadiusColor(utils_Color_Color.fromScalar(16711680));
    }
    getTexture() {
      return "blocks/defense/tesla-coil-1000.png";
    }
    isInstanced() {
      return false;
    }
  }
  class EntityBlockTeslaCoil2000_EntityBlockTeslaCoil2000 extends EntityBlockTeslaCoil1000_EntityBlockTeslaCoil1000 {
    getTexture() {
      return "blocks/defense/tesla-coil-2000.png";
    }
  }
  class EntityBlockTeslaCoil3000_EntityBlockTeslaCoil3000 extends EntityBlockTeslaCoil1000_EntityBlockTeslaCoil1000 {
    getTexture() {
      return "blocks/defense/tesla-coil-3000.png";
    }
  }
  class Chance_Chance {
    static getValueFromArrayOfChanceItems(e) {
      let t = Randomize_Randomize.getRandomInt(1, 100), n = Randomize_Randomize.getRandomFromArray(e);
      return n.haveChance(t) ? n.returnValue : Chance_Chance.getValueFromArrayOfChanceItems(e);
    }
    static get(e) {
      return e >= Randomize_Randomize.getRandomFloat(0, 100);
    }
  }
  class AbstractEntityBlockGenerator_AbstractEntityBlockGenerator extends AbstractEntityBlock_AbstractEntityBlock {
    constructor() {
      super(...arguments), this.serverProperties = null;
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), ValueUtils.isNotUndefinedAndNotNull(e.enabled) && this.updateEnabledStatus();
    }
    updateEnabledStatus() {
      this.serverProperties.enabled ? this.onEnabled() : this.onDisabled();
    }
    onEnabled() {}
    onDisabled() {}
    onSpawn() {
      super.onSpawn(), this.updateEnabledStatus();
    }
    remove() {
      return this.onDisabled(), super.remove();
    }
  }
  class EntityBlockGeneratorCoal_EntityBlockGeneratorCoal extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    constructor() {
      super(...arguments), this._enabledTextureName = "blocks/generators/coal-generator-enabled.png", this._disabledTextureName = "blocks/generators/coal-generator-disabled.png";
    }
    getTexture() {
      return this._disabledTextureName;
    }
    onEnabled() {
      super.onEnabled(), this.startSpawnParticles(), this.skin && this.skin.setTexture(this._enabledTextureName);
    }
    onDisabled() {
      super.onDisabled(), this.stopSpawnParticles(), this.skin && this.skin.setTexture(this._disabledTextureName);
    }
    isInstanced() {
      return false;
    }
    remove() {
      return this.stopSpawnParticles(), super.remove();
    }
    startSpawnParticles() {
      this._timerParticlesUuid || (this._timerParticlesUuid = np.canvas.setIntervalFrames(() => this.spawnParticles(), Randomize_Randomize.getRandomInt(30, 40)));
    }
    stopSpawnParticles() {
      this._timerParticlesUuid && (np.canvas.clearIntervalFrames(this._timerParticlesUuid), this._timerParticlesUuid = null);
    }
    spawnParticles() {
      Chance_Chance.get(80) && this.spawnFireParticle(), Chance_Chance.get(40) && this.spawnSmokeParticle();
    }
    spawnFireParticle() {
      const e = vector_Vector2_Vector2.DOWN.clone().normalize().rotate(this.rotation.getWithOffset().z).multiplyScalar(this.radius / 2), t = Randomize_Randomize.getRandomFloat(this.radius / 2, this.radius / 1.2);
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(t), position: this.position.clone().addScalarX(e.x).addScalarY(e.y), offset: new vector_Vector3_Vector3(0, 0, this.size.getScaledSize().divideScalar(2).addScalarZ(1).z), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.4, 0.4), Randomize_Randomize.getRandomFloat(0.25, 0.4), Randomize_Randomize.getRandomFloat(0, 1)), texture: "effects/particles/fire-1.png", animateTiles: new vector_Vector2_Vector2(1, 32), animateEveryFrame: 2, animateEndToDead: false, animateLoop: true, sizeSpeedToDead: 0.3, spawnAroundRadius: this.radius / 4, transparent: true, renderOrder: this._renderOrder});
    }
    spawnSmokeParticle() {
      const e = vector_Vector2_Vector2.DOWN.clone().normalize().rotate(this.rotation.getWithOffset().z).multiplyScalar(this.radius / 2), t = Randomize_Randomize.getRandomFloat(this.radius / 2, this.radius);
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(t), position: this.position.clone().addScalarX(e.x).addScalarY(e.y), offset: new vector_Vector3_Vector3(0, 0, this.size.getScaledSize().divideScalar(2).addScalarZ(1).z), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(2, 5)), opacity: Randomize_Randomize.getRandomFloat(0.7, 1), color: Randomize_Randomize.getRandomColor(0, 0, 0, 100, 100, 100).toGrayScale(), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), spawnAroundRadius: this.radius / 2, animateEveryFrame: 15, animateInverse: true, transparent: true, receiveLight: true, renderOrder: this._renderOrder});
    }
  }
  class EntityBlockGeneratorLava_EntityBlockGeneratorLava extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    constructor() {
      super(...arguments), this._enabledTextureName = "blocks/generators/lava-generator-enabled.png", this._disabledTextureName = "blocks/generators/lava-generator-disabled.png";
    }
    getTexture() {
      return this._disabledTextureName;
    }
    onEnabled() {
      super.onEnabled(), this.skin && this.skin.setTexture(this._enabledTextureName);
    }
    onDisabled() {
      super.onDisabled(), this.skin && this.skin.setTexture(this._disabledTextureName);
    }
    isInstanced() {
      return false;
    }
  }
  class EntityBlockGeneratorManual_EntityBlockGeneratorManual extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/manual-generator.png";
    }
  }
  class EntityBlockGeneratorNuclear_EntityBlockGeneratorNuclear extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/nuclear-generator.png";
    }
  }
  class EntityBlockGeneratorSolar_EntityBlockGeneratorSolar extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/solar-generator.png";
    }
  }
  class EntityBlockGeneratorSolarAdvanced_EntityBlockGeneratorSolarAdvanced extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/advanced-solar-generator.png";
    }
  }
  class EntityBlockGeneratorWater_EntityBlockGeneratorWater extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    constructor() {
      super(...arguments), this._enabledTextureName = "blocks/generators/water-generator-enabled.png", this._disabledTextureName = "blocks/generators/water-generator-disabled.png";
    }
    getTexture() {
      return this._disabledTextureName;
    }
    onEnabled() {
      super.onEnabled(), this.skin && this.skin.setTexture(this._enabledTextureName);
    }
    onDisabled() {
      super.onDisabled(), this.skin && this.skin.setTexture(this._disabledTextureName);
    }
    isInstanced() {
      return false;
    }
  }
  class SkinWindGenerator_SkinMinerOptions extends SkinSimple_SkinSimpleOptions {}
  class SkinWindGenerator_SkinWindGenerator extends SkinSimple_SkinSimple {
    constructor(e) {
      super(e), this._options = new SkinWindGenerator_SkinMinerOptions, this._count = 0, this._speedRotor1 = 0.02, this._speedRotor2 = 0.01;
    }
    initialize() {
      super.initialize(), this._rotor1 = new SkinSimple_SkinSimple({textureUrls: [this._options.rotor1TextureName], transparent: true, renderOrder: this.getRenderOrder()}), this._rotor1.initialize(), this.getObject3d().add(this._rotor1.getObject3d()), this._rotor2 = new SkinSimple_SkinSimple({textureUrls: [this._options.rotor2TextureName], transparent: true, renderOrder: this.getRenderOrder()}), this._rotor2.initialize(), this.getObject3d().add(this._rotor2.getObject3d()), this._border = new SkinSimple_SkinSimple({textureUrls: [this._options.borderTextureName], transparent: true, renderOrder: this.getRenderOrder()}), this._border.initialize(), this.getObject3d().add(this._border.getObject3d());
    }
    start() {
      this._tickerUuid || (this._tickerUuid = np.canvas.setIntervalFrames(() => this.tick(), 1));
    }
    stop() {
      this._tickerUuid && (np.canvas.clearIntervalFrames(this._tickerUuid), this._tickerUuid = null, this._count = 0);
    }
    tick() {
      this._rotor1.getObject3d().rotation.z += this._speedRotor1, this._rotor2.getObject3d().rotation.z -= this._speedRotor2;
    }
  }
  class EntityBlockGeneratorWind_EntityBlockGeneratorWind extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    onEnabled() {
      super.onEnabled(), this.skin && this.skin.start();
    }
    onDisabled() {
      super.onDisabled(), this.skin && this.skin.stop();
    }
    createSkin() {
      return new SkinWindGenerator_SkinWindGenerator({textureUrls: [this.getTexture()], rotor1TextureName: "blocks/generators/wind-generator-rotor-1.png", rotor2TextureName: "blocks/generators/wind-generator-rotor-2.png", borderTextureName: "blocks/generators/wind-generator-border.png", transparent: this._transparent, renderOrder: this._renderOrder});
    }
    isInstanced() {
      return false;
    }
    getTexture() {
      return "blocks/generators/wind-generator-block.png";
    }
  }
  class AbstractEntityBlockLiquid_AbstractEntityBlockLiquid extends AbstractEntityBlock_AbstractEntityBlock {}
  class EntityBlockLiquidLava_EntityBlockLiquidLava extends AbstractEntityBlockLiquid_AbstractEntityBlockLiquid {
    constructor() {
      super(...arguments), this._transparent = true;
    }
    createSkin() {
      return new SkinAnimatedSprite_SkinAnimatedSprite({textureUrls: [this.getTexture()], tiles: new vector_Vector2_Vector2(1, 20), transparent: this._transparent, everyFrame: 8});
    }
    getInstancedData() {
      const e = super.getInstancedData();
      return e.textureTilesCount = new vector_Vector2_Vector2(1, 20), e.textureAnimationEveryFrame = 8, e;
    }
    getTexture() {
      return "blocks/liquid/lava_still.png";
    }
  }
  class EntityBlockLiquidWater_EntityBlockLiquidWater extends AbstractEntityBlockLiquid_AbstractEntityBlockLiquid {
    constructor() {
      super(...arguments), this._transparent = true;
    }
    createSkin() {
      return new SkinAnimatedSprite_SkinAnimatedSprite({textureUrls: [this.getTexture()], tiles: new vector_Vector2_Vector2(1, 32), transparent: this._transparent, everyFrame: 4});
    }
    getInstancedData() {
      const e = super.getInstancedData();
      return e.textureTilesCount = new vector_Vector2_Vector2(1, 32), e.textureAnimationEveryFrame = 4, e;
    }
    getTexture() {
      return "blocks/liquid/water_still_overlay.png";
    }
  }
  class SkinMiner_SkinMinerOptions extends SkinSimple_SkinSimpleOptions {}
  class SkinMiner_SkinMiner extends SkinSimple_SkinSimple {
    constructor(e) {
      super(e), this._options = new SkinMiner_SkinMinerOptions, this._count = 0;
    }
    initialize() {
      super.initialize(), this._piston = new SkinSimple_SkinSimple({textureUrls: [this._options.pistonTextureName], transparent: true, renderOrder: this.getRenderOrder()}), this._piston.initialize(), this.getObject3d().add(this._piston.getObject3d());
    }
    start() {
      this._tickerUuid || (this._tickerUuid = np.canvas.setIntervalFrames(() => this.tick(), 1));
    }
    stop() {
      this._tickerUuid && (np.canvas.clearIntervalFrames(this._tickerUuid), this._tickerUuid = null, this._piston.getObject3d().position.y = 0, this._count = 0);
    }
    tick() {
      this._piston.getObject3d().position.y = -(Math.sin(0.1 * this._count) + 1) / 2 * 0.25, this._count++;
    }
  }
  class AbstractEntityBlockMiner_AbstractEntityBlockMiner extends AbstractEntityBlock_AbstractEntityBlock {
    constructor() {
      super(...arguments), this.serverProperties = null;
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), ValueUtils.isNotUndefinedAndNotNull(e.enabled) && this.updateSkinStatus();
    }
    onSpawn() {
      super.onSpawn(), this.updateSkinStatus();
    }
    updateSkinStatus() {
      this.skin && (this.serverProperties.enabled ? this.skin.start() : this.skin.stop());
    }
    createSkin() {
      return new SkinMiner_SkinMiner({textureUrls: [this.getTexture()], pistonTextureName: this._pistonTextureName, transparent: this._transparent, renderOrder: this._renderOrder});
    }
    isInstanced() {
      return false;
    }
    remove() {
      return this.skin && this.skin.stop(), super.remove();
    }
  }
  class EntityBlockMinerCoal_EntityBlockMinerCoal extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/coal-miner-block.png";
    }
  }
  class EntityBlockMinerDiamond_EntityBlockMinerDiamond extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/diamond-miner-block.png";
    }
  }
  class EntityBlockMinerGold_EntityBlockMinerGold extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/gold-miner-block.png";
    }
  }
  class EntityBlockMinerIron_EntityBlockMinerIron extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/iron-miner-block.png";
    }
  }
  class EntityBlockMinerUranium_EntityBlockMinerUranium extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/uranium-miner-block.png";
    }
  }
  class AbstractEntityBlockOre_AbstractEntityBlockOre extends AbstractEntityBlock_AbstractEntityBlock {
    onSpawn() {
      super.onSpawn(), this.onNeutralBlock();
    }
  }
  class EntityBlockOreCoal_EntityBlockOreCoal extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/coal_ore.png";
    }
  }
  class EntityBlockOreDiamond_EntityBlockOreDiamond extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/diamond_ore.png";
    }
  }
  class EntityBlockOreGold_EntityBlockOreGold extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/gold_ore.png";
    }
  }
  class EntityBlockOreIron_EntityBlockOreIron extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/iron_ore.png";
    }
  }
  class EntityBlockOreUranium_EntityBlockOreUranium extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/uranium_ore.png";
    }
  }
  class AbstractEntityBlockSeller_AbstractEntityBlockSeller extends AbstractEntityBlock_AbstractEntityBlock {}
  class EntityBlockSellerBig_EntityBlockSellerBig extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/big-seller.png";
    }
  }
  class EntityBlockSellerCoal_EntityBlockSellerCoal extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/coal-seller.png";
    }
  }
  class EntityBlockSellerDiamond_EntityBlockSellerDiamond extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/diamond-seller.png";
    }
  }
  class EntityBlockSellerGolden_EntityBlockSellerGolden extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/golden-seller.png";
    }
  }
  class EntityBlockSellerManual_EntityBlockSellerManual extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/manual-seller.png";
    }
  }
  class EntityBlockSellerSmall_EntityBlockSellerSmall extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/small-seller.png";
    }
  }
  class AbilityHighlightOnDamageOptions {
    constructor() {
      this.bloodScreenTexture = "", this.hurtSounds = {}, this.hurtSoundsVolume = 1, this.highlight = true;
    }
  }
  class AbilityHighlightOnDamage_AbilityHighlightOnDamage extends Ability_Ability {
    constructor(e, t) {
      super(e), this._health = 0, this._maxHealth = 0, this._rotationZ = 0, this._sinX = 0, this._stepX = 0.05, this._colorRed = 0, this._colorRedStep = 12, this.options = new AbilityHighlightOnDamageOptions, this._originalsColor = new utils_Color_Color, this._isDisplayingBloodScreen = false, t && Object.assign(this.options, t);
    }
    onCreate() {
      super.onCreate(), this.parentEntity.serverProperties && this.parentEntity.serverProperties.health && this.parentEntity.serverProperties.maxHealth && (this._health = this.parentEntity.serverProperties.health, this._maxHealth = this.parentEntity.serverProperties.maxHealth), this.parentEntity && this.parentEntity.skin && this.saveOriginalColors(), np.myServerUuid === this.parentEntity.serverProperties.uuid && (this._bloodScreen = new SkinSimple_SkinSimple({textureUrls: [this.options.bloodScreenTexture], cachedGeometry: kr, opacities: [0], transparent: true}), this._bloodScreen.initialize(), this.updateBloodScreenSize(), this._listeners.add(np.window.events.on("resize", () => this.onResize())));
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), this.parentEntity.serverProperties && this.parentEntity.serverProperties.health && this.parentEntity.serverProperties.maxHealth && (this._health && this._maxHealth && this.parentEntity.serverProperties.health < this._health && this.parentEntity.serverProperties.maxHealth >= this._maxHealth && this.onDamage(), this._health = this.parentEntity.serverProperties.health, this._maxHealth = this.parentEntity.serverProperties.maxHealth);
    }
    onDraw() {
      super.onDraw(), 0 !== this._colorRed && (this.setColor(), np.drawer.addOnce(this.parentEntity)), this._bloodScreen && (this._bloodScreen.getOpacity() > 0 ? this._bloodScreen.setOpacity(this._bloodScreen.getOpacity() - 0.02) : this.hideBloodScreen());
    }
    destroy() {
      super.destroy(), this._bloodScreen && this._bloodScreen.destroy();
    }
    onResize() {
      this.updateBloodScreenSize();
    }
    updateBloodScreenSize() {
      this._bloodScreen && this._bloodScreen.getObject3d().scale.set(document.documentElement.clientWidth, document.documentElement.clientHeight, 1);
    }
    onDamage() {
      this.options.highlight && (this._colorRed = 127.5, np.drawer.addOnce(this.parentEntity)), this.playHurtSound(), this.parentEntity.uuid === np.myUuid && np.started && this.showBloodScreen();
    }
    showBloodScreen() {
      this._isDisplayingBloodScreen || this._bloodScreen && (this._isDisplayingBloodScreen = true, np.canvas.getSceneHud().add(this._bloodScreen.getObject3d()), this._bloodScreen.setOpacity(1));
    }
    hideBloodScreen() {
      false !== this._isDisplayingBloodScreen && (this._isDisplayingBloodScreen = false, np.canvas.getSceneHud().remove(this._bloodScreen.getObject3d()));
    }
    playHurtSound() {
      if (!this.parentEntity || !this.parentEntity.serverProperties) return;
      const e = this.parentEntity.serverProperties.latestDamageSource && this.options.hurtSounds.hasOwnProperty(this.parentEntity.serverProperties.latestDamageSource.type) ? this.parentEntity.serverProperties.latestDamageSource.type : "DEFAULT";
      this.options.hurtSounds[e] && this.options.hurtSounds[e].length;
    }
    shake() {
      this._sinX = Randomize_Randomize.getRandomFromArray([-1, 1]);
    }
    getRotationZ() {
      return 0 !== this._sinX && (this._sinX < 0 && (this._sinX += this._stepX), this._sinX > 0 && (this._sinX -= this._stepX)), this._sinX = Math.round(100 * this._sinX) / 100, this._rotationZ = Math.sin(this._sinX) / 2, this._rotationZ;
    }
    setColor() {
      if (this.parentEntity && (this._colorRed && np.drawer.addOnce(this.parentEntity), this.parentEntity.skin)) {
        this.decreaseRedColor();
        const e = new utils_Color_Color;
        e.r = this._originalsColor.r, e.g = this._originalsColor.g * (1 - this._colorRed / 255), e.b = this._originalsColor.b * (1 - this._colorRed / 255), this.parentEntity.skin.setColor(e);
      }
    }
    saveOriginalColors() {
      this.parentEntity && this.parentEntity.skin && this._originalsColor.copy(this.parentEntity.skin.getColor());
    }
    decreaseRedColor() {
      return 0 !== this._colorRed && (this._colorRed -= this._colorRedStep), this._colorRed < 0 && (this._colorRed = 0), this._colorRed;
    }
    onAddedToCache() {
      super.onAddedToCache(), this._health = 0, this._maxHealth = 0;
    }
  }
  class AbilityInFire_AbilityInFire extends Ability_Ability {
    constructor(e, t) {
      super(e), this._particleIntervalUuid = "", this._inFire = false, this._options = t;
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e);
      const t = e;
      undefined !== t.inFire && this.setInFire(t.inFire);
    }
    onSpawn() {
      super.onSpawn();
      const e = this.parentEntity.serverProperties;
      this.setInFire(e.inFire);
    }
    setInFire(e) {
      e && false === this._inFire ? (this._inFire = true, this.stopSpawnParticles(), this.startFire()) : false === e && this._inFire && (this._inFire = false, this.stopSpawnParticles());
    }
    startFire() {
      this._particleIntervalUuid || (this._particleIntervalUuid = np.canvas.setIntervalFrames(() => this.trySpawnParticles(), 1), this.enableLight(), this.spawnParticles());
    }
    stopSpawnParticles() {
      this._particleIntervalUuid && (this.disableLight(), np.canvas.clearIntervalFrames(this._particleIntervalUuid), this._particleIntervalUuid = null);
    }
    trySpawnParticles() {
      if (this.parentEntity) for (const e in this._options.particles) this.trySpawnParticle(this._options.particles[e]); else this.stopSpawnParticles();
    }
    trySpawnParticle(e) {
      ValueUtils.isNotUndefinedAndNotNull(e.spawnEveryFrame) && np.canvas.framesCount % e.spawnEveryFrame != 0 || ValueUtils.isNotUndefinedAndNotNull(e.spawnChance) && false === Chance_Chance.get(e.spawnChance) || this.spawnParticle(e);
    }
    spawnParticles() {
      for (const e in this._options.particles) this.spawnParticle(this._options.particles[e]);
    }
    spawnParticle(e) {
      np.particles.spawn(EntityParticle_EntityParticle, e.getOptions());
    }
    toggleFire() {
      this.parentEntity && this.parentEntity.serverProperties.uuid !== np.myServerUuid || (this._particleIntervalUuid ? this.stopSpawnParticles() : this.startFire());
    }
    onDraw() {
      super.onDraw(), this.updateLightContainerPosition();
    }
    updateLightContainerPosition() {
      if (this.parentEntity && this._lightContainer) {
        const e = this.parentEntity.position.clone().addScalarZ(this.parentEntity.size.getScaledSize().z).minZ(110);
        this._lightContainer.position.copy(e.toThreeVector3());
      }
    }
    enableLight() {
      this._lightContainer || (this._lightContainer = np.light.getSmartLightContainer(e => {
        e.setIntensity(1).setColor(new utils_Color_Color(255, 100, 35)).setDistance(320);
      }), this.updateLightContainerPosition());
    }
    disableLight() {
      this._lightContainer && (np.light.returnSmartLightContainer(this._lightContainer), this._lightContainer = null);
    }
    isFire() {
      return this._inFire;
    }
    onRemove() {
      super.onRemove(), this.setInFire(false);
    }
    destroy() {
      super.destroy(), this.setInFire(false);
    }
  }
  class AbilityInvulnerability_AbilityInvulnerability extends Ability_Ability {
    constructor() {
      super(...arguments), this._minOpacity = 0.5, this._maxOpacity = 1;
    }
    onSpawn() {
      super.onSpawn(), this.updateInvincibleStatus();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), ValueUtils.isNotUndefinedAndNotNull(e.invulnerable) && this.updateInvincibleStatus();
    }
    updateInvincibleStatus() {
      this.parentEntity.serverProperties.invulnerable ? this.activateInvincible() : this.deActivateInvincible();
    }
    activateInvincible() {
      this.parentEntity.skin && this.parentEntity.skin.setOpacity(this._minOpacity);
    }
    deActivateInvincible() {
      this.parentEntity.skin && this.parentEntity.skin.setOpacity(this._maxOpacity);
    }
  }
  class AbilityActiveEffects_AbilityActiveEffects extends Ability_Ability {
    constructor(e, t) {
      super(e), this._particleIntervalUuids = {}, this._particleTimeouts = {}, this._hudEffects = {}, this._effectOptions = {}, this._effectOptions = t;
    }
    onSpawn() {
      super.onSpawn();
      const e = this.parentEntity;
      ValueUtils.isNotUndefinedAndNotNull(e.serverProperties.activeEffects) && this.startEffects(e.serverProperties.activeEffects);
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), ValueUtils.isNotUndefinedAndNotNull(e.activeEffects) && this.startEffects(e.activeEffects);
    }
    startEffects(e) {
      for (const t in e) {
        const n = e[t];
        n ? this.hasEffect(t) ? this.updateEffect(t, n) : this.startEffect(n.name, n.remainingTime) : null === n && this.stopEffect(t);
      }
    }
    updateEffect(e, t) {
      this._effectOptions.effects[e] && this._effectOptions.effects[e].onUpdate && this._effectOptions.effects[e].onUpdate(), this.updateHudEffect(e, t.remainingTime);
    }
    startEffect(e, t) {
      this.hasEffect(e) || (this.getParticleTexture(e) && (this.spawnParticle(e), this._particleIntervalUuids[e] = np.canvas.setIntervalFrames(() => this.spawnParticle(e), 15)), this._particleTimeouts[e] = setTimeout(() => this.stopEffect(e), t), this.updateHudEffect(e, t), this._effectOptions.effects[e] && this._effectOptions.effects[e].onStart && this._effectOptions.effects[e].onStart());
    }
    stopEffect(e) {
      false !== this.hasEffect(e) && (np.canvas.clearIntervalFrames(this._particleIntervalUuids[e]), delete this._particleIntervalUuids[e], clearTimeout(this._particleTimeouts[e]), delete this._particleTimeouts[e], this.removeHudEffect(e), this._effectOptions.effects[e] && this._effectOptions.effects[e].onStop && this._effectOptions.effects[e].onStop());
    }
    hasEffect(e) {
      return this._particleTimeouts.hasOwnProperty(e);
    }
    stopAllEffects() {
      for (const e in this._particleTimeouts) this.stopEffect(e);
    }
    spawnParticle(e) {
      if (!this.parentEntity) return void this.stopAllEffects();
      const t = Randomize_Randomize.getRandomFloat(this.parentEntity.radius / 2, this.parentEntity.radius), n = this.parentEntity.position.clone();
      n.z += this.parentEntity.size.getScaledSize().divideScalar(2).addScalarZ(1).z, np.particles.spawn(EntityParticle_EntityParticle, {position: n, spawnAroundRadius: this.parentEntity.radius, opacitySpeedToDead: 0.02, rotationZSpeed: Randomize_Randomize.getRandomFloat(-0.1, 0.1), rotationZ: Randomize_Randomize.getRandomAngle(), size: new vector_Vector3_Vector3(t, t, t), color: this.getParticleColor(e), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-1, 1), Randomize_Randomize.getRandomFloat(-1, 1), Randomize_Randomize.getRandomFloat(0, 5)), texture: this.getParticleTexture(e), transparent: true, receiveLight: true, renderOrder: this.parentEntity.skin.getRenderOrder()});
    }
    getParticleTexture(e) {
      if (this._effectOptions.effects.hasOwnProperty(e)) return this._effectOptions.effects[e].textureUrl ? this._effectOptions.effects[e].textureUrl : "";
      console.warn(`Unknown effect "${e}"`);
    }
    getParticleColor(e) {
      return this._effectOptions.effects[e] && this._effectOptions.effects[e].color ? this._effectOptions.effects[e].color : utils_Color_Color.WHITE.clone();
    }
    updateHudEffect(e, t) {
      this.parentEntity.serverProperties.uuid === np.myServerUuid && (false === this.isExistsHudEffect(e) && this.createHudEffect(e), this._hudEffects[e].innerText = TimeUtils_TimeUtils.getReadableTimeFromSeconds(t / 1e3));
    }
    createHudEffect(e) {
      if (this.parentEntity.serverProperties.uuid !== np.myServerUuid) return;
      if (this.isExistsHudEffect(e)) return;
      const t = document.createElement("div");
      t.classList.add("ability-active-effects-effect"), t.classList.add(e), t.style.backgroundImage = `url(${np.modules.mod.gameDirectory}/images/${this.getIconImageName(e)})`, this._hudEffects[e] = t, this._effectOptions.hudIconsContainer && this._effectOptions.hudIconsContainer.appendChild(t);
    }
    removeHudEffect(e) {
      this.parentEntity && this.parentEntity.serverProperties && this.parentEntity.serverProperties.uuid !== np.myServerUuid || false !== this.isExistsHudEffect(e) && (this._effectOptions.hudIconsContainer && this._effectOptions.hudIconsContainer.removeChild(this._hudEffects[e]), delete this._hudEffects[e]);
    }
    isExistsHudEffect(e) {
      return this._hudEffects.hasOwnProperty(e);
    }
    getIconImageName(e) {
      return this._effectOptions.effects.hasOwnProperty(e) && this._effectOptions.effects[e].hudIcon ? this._effectOptions.effects[e].hudIcon : "";
    }
    onRemove() {
      super.onRemove(), this.stopAllEffects();
    }
    destroy() {
      super.destroy(), this.stopAllEffects();
    }
  }
  class AbilityHighlightOnPoison_AbilityHighlightOnPoison extends Ability_Ability {
    constructor() {
      super(...arguments), this._colorRed = 0, this._colorRedStep = 3, this._originalsColor = new utils_Color_Color, this._lastExperience = 0;
    }
    onCreate() {
      super.onCreate(), this.parentEntity && this.parentEntity.skin && this.saveOriginalColors();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e);
    }
    onDraw() {
      super.onDraw(), 0 !== this._colorRed && (this.setColor(), np.drawer.addOnce(this.parentEntity));
    }
    onDamage() {
      this._colorRed = 127.5, np.drawer.addOnce(this.parentEntity), this.spawnParticles();
    }
    setColor() {
      if (this.parentEntity && (this._colorRed && np.drawer.addOnce(this.parentEntity), this.parentEntity.skin)) {
        this.decreaseRedColor();
        const e = new utils_Color_Color;
        e.g = this._originalsColor.g, e.r = this._originalsColor.r * (1 - this._colorRed / 255), e.b = this._originalsColor.b * (1 - this._colorRed / 255), this.parentEntity.skin.setColor(e);
      }
    }
    saveOriginalColors() {
      this.parentEntity && this.parentEntity.skin && this._originalsColor.copy(this.parentEntity.skin.getColor());
    }
    decreaseRedColor() {
      return 0 !== this._colorRed && (this._colorRed -= this._colorRedStep), this._colorRed < 0 && (this._colorRed = 0), this._colorRed;
    }
    spawnParticles() {
      for (let e = 0; e < 5; e++) this.spawnParticle(this.parentEntity.position, this.parentEntity.radius, Math.PI / 2 + Randomize_Randomize.getRandomFloat(-Math.PI / 4, Math.PI / 4));
    }
    spawnParticle(e, t, n) {
      const i = vector_Vector2_Vector2.RIGHT.clone().rotate(n).normalize().multiplyScalar(Randomize_Randomize.getRandomFloat(0.5, 1));
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(0.5 * t, t)), position: e.clone().add(i.toVector3().multiplyScalar(Randomize_Randomize.getRandomFloat(0, t / i.length()))), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: i.toVector3(Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(0, 50, 0, 0, 100, 0), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), animateEveryFrame: Randomize_Randomize.getRandomInt(10, 15), animateInverse: true, poolName: "poison", transparent: true, receiveLight: true});
    }
  }
  !function (e) {
    e[e.IDLE = 0] = "IDLE", e[e.FORWARD = 1] = "FORWARD", e[e.BACKWARD = 2] = "BACKWARD";
  }(Gd || (Gd = {}));
  class EntitySteveSkin_EntitySteveSkin extends SkinSimple_SkinSimple {
    constructor() {
      super(...arguments), this.events = new Events_Events, this._toolContainer = new ys, this._nicknameContainer = new ys, this._direction = Gd.IDLE, this._startAngle = ValueUtils.normalizeAngle(-Math.PI / 4), this._endAngle = 0, this._path = Math.abs(this._endAngle - this._startAngle), this._attacking = false, this._helmets = ["", "leather", "iron", "gold", "diamond", "nano", "quantum"], this._tools = ["wooden_pickaxe", "iron_pickaxe", "golden_pickaxe", "diamond_pickaxe", "drill", "diamond_drill", "wrench"], this._toolRotations = [-Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4], this._toolPositions = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], this._name = "", this._box3 = new Ln, this._boxSize = new It, this._walkAnimationSpeed = 1, this._renderOrder = 5;
    }
    initialize() {
      super.initialize(), this._face = new SkinSimple_SkinSimple({textureUrls: ["players/steve.png"], transparent: true}), this._face.initialize(), this._face.getObject3d().rotation.z = Math.PI / 2, this._face.setRenderOrder(this._renderOrder), this.getObject3d().add(this._face.getObject3d()), this._helmet = new SkinSimple_SkinSimple({transparent: true}), this._helmet.initialize(), this._helmet.getObject3d().rotation.z = Math.PI / 2, this._helmet.setRenderOrder(this._renderOrder), this.setAnimationTime(5e3), this._toolContainer.rotation.z = this._startAngle, this.getObject3d().add(this._toolContainer), this._tool = new SkinSimple_SkinSimple({textureUrls: [`tools/${this._tools[0]}.png`], transparent: true}), this._tool.initialize(), this._tool.getObject3d().position.x = 1.1, this._tool.getObject3d().position.y = -0.3, this._tool.getObject3d().rotation.z = -Math.PI / 4, this._tool.setRenderOrder(this._renderOrder + 1), this._toolContainer.add(this._tool.getObject3d()), this.getObject3d().add(this._nicknameContainer);
    }
    createObject3d() {
      return new ys;
    }
    setNickname(e) {
      this._name !== e && (this._name = e, this._nickname && this._nickname.destroy(), this._nickname = new SkinText_SkinText({text: e, font: "defaultFont", fontSize: 1, transparent: true}), this._nickname.initialize(), this._nickname.getObject3d().scale.setScalar(0.25), this._nickname.getObject3d().position.y = 1, this._nickname.setRenderOrder(this._renderOrder + 1), this._nicknameContainer.add(this._nickname.getObject3d()), this.updateNicknamePosition(this.getObject3d().scale.x));
    }
    setAnimationTime(e) {
      this._animationTime = e, this.updateSpeed();
    }
    updateSpeed() {
      this._speed = this._path / (this._animationTime / MillisHelper.tpsToMs(np.canvas.fps));
    }
    start() {
      this.isStarted() || (this._ticker = np.canvas.setIntervalFrames(() => this.tick(), 1));
    }
    stop() {
      return this.isStarted() && (np.canvas.clearIntervalFrames(this._ticker), this._ticker = null), this;
    }
    isStarted() {
      return !!this._ticker;
    }
    tick() {
      this.updateSpeed(), this.isAttacking() && (this._direction === Gd.FORWARD ? (this._toolContainer.rotation.z = ValueUtils.normalizeAngle(this._toolContainer.rotation.z + this._speed), this.isEnd() && (this._direction = Gd.BACKWARD)) : this._direction === Gd.BACKWARD && (this._toolContainer.rotation.z = ValueUtils.normalizeAngle(this._toolContainer.rotation.z - this._speed), this.isBegin() && this.onEndAnimation()));
    }
    onEndAnimation() {
      this.reSetAttackingAnimation(), this.events.emit("end");
    }
    reSetAttackingAnimation() {
      return this._attacking = false, this._direction = Gd.IDLE, this._toolContainer.rotation.z = this._startAngle, this.reSetWeaponContainer(), this;
    }
    isEnd() {
      return this._toolContainer.rotation.z >= this._endAngle;
    }
    isBegin() {
      return this._toolContainer.rotation.z <= this._startAngle;
    }
    isAttacking() {
      return this._attacking;
    }
    attack() {
      this._attacking = true, this._direction = Gd.FORWARD, this.reSetWeaponContainer();
    }
    reSetWeaponContainer() {
      this._toolContainer.position.x = 0;
    }
    setTransforms(e, t, n) {
      super.setTransforms(e, t, n), n && this.updateNicknamePosition(n.x), t && (this._nicknameContainer.rotation.z = -t.z);
    }
    updateNicknamePosition(e) {
      this._nickname && (this._box3.setFromObject(this._nickname.getObject3d()), this._box3.getSize(this._boxSize), this._nickname.getObject3d().position.x = -this._boxSize.x / 2 / e);
    }
    setWalkAnimationSpeed(e) {
      this._walkAnimationSpeed = e;
    }
    setTool(e) {
      this._tools[e] && this._tool.setTexture(`tools/${this._tools[e]}.png`);
    }
    setArmor(e) {
      0 !== e && this._helmets[e] ? (this._helmet.setTexture(`helmets/${this._helmets[e]}.png`), this._helmet.setVisible(true, this.getObject3d())) : this._helmet.setVisible(false);
    }
    getRenderOrder() {
      return this._renderOrder;
    }
  }
  class EntitySteve_EntitySteve extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this.events = new Events_Events, this.cacheable = true, this._isStartedAttacking = false;
    }
    construct() {
      super.construct(), this._pool0 = new vector_Vector2_Vector2, this.abilities.addAbilities(new AbilityHealth_AbilityHealth(this, {renderOrderOffset: 1}), new AbilityInvulnerability_AbilityInvulnerability(this), new AbilityChatMessageAbovePlayer_AbilityChatMessageAbovePlayer(this), new AbilityHighlightOnDamage_AbilityHighlightOnDamage(this, {bloodScreenTexture: "effects/blood-screen.png"}), new AbilityInFire_AbilityInFire(this, {particles: [{spawnEveryFrame: 15, getOptions: () => {
        const e = Randomize_Randomize.getRandomFloat(this.radius, 1.5 * this.radius);
        return {size: vector_Vector3_Vector3.fromScalar(e), position: this.position.clone(), offset: new vector_Vector3_Vector3(0, 0, this.size.getScaledSize().divideScalar(2).addScalarZ(1).z), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.6, 0.6), Randomize_Randomize.getRandomFloat(0.25, 0.6), Randomize_Randomize.getRandomFloat(0, 1)), texture: "effects/particles/fire-1.png", animateTiles: new vector_Vector2_Vector2(1, 32), animateEveryFrame: 2, animateEndToDead: false, animateLoop: true, sizeSpeedToDead: 0.3, spawnAroundRadius: this.radius / 2, transparent: true, renderOrder: this.skin.getRenderOrder()};
      }}, {spawnEveryFrame: 15, getOptions: () => {
        const e = Randomize_Randomize.getRandomFloat(this.radius / 2, this.radius);
        return {size: vector_Vector3_Vector3.fromScalar(e), position: this.position.clone(), offset: new vector_Vector3_Vector3(0, 0, this.size.getScaledSize().divideScalar(2).addScalarZ(1).z), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-1, 1), Randomize_Randomize.getRandomFloat(-1, 1), Randomize_Randomize.getRandomFloat(3, 8)), opacity: Randomize_Randomize.getRandomFloat(0.7, 1), color: Randomize_Randomize.getRandomColor(0, 0, 0, 100, 100, 100).toGrayScale(), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), spawnAroundRadius: this.radius, animateEveryFrame: 15, animateInverse: true, transparent: true, receiveLight: true, renderOrder: this.skin.getRenderOrder()};
      }}]}), new AbilityActiveEffects_AbilityActiveEffects(this, {effects: {EFFECT_REGENERATION: {textureUrl: "effects/particles/potion.png", color: utils_Color_Color.fromScalar(13458347), hudIcon: "icons/potion-effects/regeneration.png"}}, hudIconsContainer: np.screens.get(Vd.Game, GameScreen_GameScreen).get$TopRight().get$Element()}));
    }
    createSkin() {
      return new EntitySteveSkin_EntitySteveSkin;
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), e.arm && (ValueUtils.isNumber(e.arm.animationTime) && this.updateAttackingSpeed(), ValueUtils.isNotUndefinedAndNotNull(e.arm.direction) && this.updateAttacking()), ValueUtils.isNotUndefinedAndNotNull(e.tool) && this.updateTool(), ValueUtils.isNotUndefinedAndNotNull(e.armor) && this.updateArmor(), ValueUtils.isNotUndefinedAndNotNull(e.name) && this.updateNickname();
    }
    updateTool() {
      this.skin && this.skin.setTool(this.serverProperties.tool);
    }
    updateArmor() {
      this.skin && this.skin.setArmor(this.serverProperties.armor);
    }
    updateWalkAnimationSpeed() {
      this.skin && this.skin.setWalkAnimationSpeed(this.serverProperties.speedMultiplier);
    }
    updateAttackingSpeed() {
      this.skin && this.skin.setAnimationTime(this.serverProperties.arm.animationTime);
    }
    updateAttacking() {
      this.serverProperties.arm.direction === Gd.FORWARD ? this.startAttacking() : this.stopAttacking();
    }
    onSpawn() {
      super.onSpawn(), this.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        e.smoothParentEntityWithBox2d.position = 5, e.smoothParentEntityWithBox2d.velocity = 1, e.smoothBox2dEntityWithServer.position = 5;
      }), this.updateNickname(), this.skin.start(), this.updateWalkAnimationSpeed(), this.updateAttackingSpeed(), this.updateAttacking(), this.updateArmor(), this.updateTool(), this.updateFriendlyStatus();
    }
    updateFriendlyStatus() {
      np.myServerUuid !== this.serverProperties.uuid && (np.screens.get(Vd.Game, GameScreen_GameScreen).teamsModal.isTeammate(this.serverProperties.uuid) ? this.abilities.getAbility(AbilityHealth_AbilityHealth).ifPresent(e => e.setColor(utils_Color_Color.GREEN.clone())) : this.abilities.getAbility(AbilityHealth_AbilityHealth).ifPresent(e => e.setColor(utils_Color_Color.RED.clone())), this.events.emit("updateFriendlyStatus"));
    }
    updateNickname() {
      this.skin.setNickname(this.serverProperties.name);
    }
    startAttacking() {
      return false === this.isStarted() && (this._isStartedAttacking = true, this.attack()), this;
    }
    stopAttacking() {
      return this.isStarted() && (this._isStartedAttacking = false), this;
    }
    attackOnce() {
      this.startAttacking().stopAttacking();
    }
    isStarted() {
      return this._isStartedAttacking;
    }
    isAttacking() {
      return this.skin && this.skin.isAttacking();
    }
    attack() {
      this.skin && this.skin.attack();
    }
    getParticleOptions() {
      return {flyAroundEntityUuid: this.uuid, position: this.position.clone(), offset: new vector_Vector3_Vector3(0, 0, Randomize_Randomize.getRandomFloat(0, 2 * this.radius)), spawnAroundRadius: 2 * this.radius, rotationZSpeed: 0.1, size: new vector_Vector3_Vector3(this.radius / 2, this.radius / 2, 1), velocity: vector_Vector3_Vector3.random(-0.5, 0.5), flySmoothMultiplier: 0.002, color: utils_Color_Color.WHITE, texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), animateEveryFrame: 30, animateInverse: true, poolName: "player-particle", transparent: true};
    }
    onProcessContact(e, t) {
      t && np.entities.getEntity(e).ifPresent(e => {
        e.serverProperties && "ENTITY_FOOD_POISONOUS_POTATO" === e.serverProperties.type && this.abilities.getAbility(AbilityHighlightOnPoison_AbilityHighlightOnPoison).ifPresent(e => e.onDamage());
      });
    }
    onDead() {
      super.onDead(), this.spawnDeadEffect();
    }
    spawnDeadEffect() {
      for (let e = 0; e < 5; e++) this.spawnSmokeParticle(this.position, 2.5 * this.radius);
    }
    spawnSmokeParticle(e, t) {
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(t, 1.5 * t)), position: e.clone(), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), rotationZSpeed: Randomize_Randomize.getRandomFloat(0.02, 0.04), color: Randomize_Randomize.getRandomColor(100, 100, 100, 255, 255, 255).toGrayScale(), texture: "effects/particles/big-smoke.png", animateTiles: new vector_Vector2_Vector2(1, 12), spawnAroundRadius: t / 2, spawnTimeoutFrames: Randomize_Randomize.getRandomInt(0, 15), animateEveryFrame: Randomize_Randomize.getRandomInt(1, 2), poolName: "smoke", transparent: true, renderOrder: 10});
    }
    remove() {
      return this.stopAttacking(), this.skin && this.skin.stop().reSetAttackingAnimation(), super.remove();
    }
  }
  class AnotherGame {
    constructor() {
      this._$container = document.createElement("div"), this._$title = document.createElement("div"), this._$a = document.createElement("a"), this._$img = document.createElement("img"), this.putTemplate();
    }
    putTemplate() {
      this._$container.classList.add("block"), this._$container.classList.add("another-game"), this._$title.classList.add("title"), this._$container.appendChild(this._$title), this._$a.target = "_blank", this._$container.appendChild(this._$a), this._$a.appendChild(this._$img);
    }
    get$Container() {
      return this._$container;
    }
    setTitle(e) {
      this._$title.innerHTML = e;
    }
    setLinkHref(e) {
      this._$a.href = e;
    }
    setImageSrc(e) {
      this._$img.src = e;
    }
  }
  const Hd = {attack: [new ActionTrigger_ActionTrigger({action: "attack", enabled: false, keys: [ad.LeftMouseButton], sendToServer: true})], speedUp: [new ActionTrigger_ActionTrigger({action: "speedUp", enabled: false, keys: [ad.RightMouseButton], sendToServer: true})], stopMovement: [new ActionTrigger_ActionTrigger({action: "stopMovement", enabled: false, keys: [ad.Space], sendToServer: false})], gameMenu: [new ActionTrigger_ActionTrigger({action: "gameMenu", enabled: false, keys: [ad.Escape], sendToServer: false})]};
  class AbstractEntityArmor_AbstractEntityArmor extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this.cacheable = true, this._normalScale = 2;
    }
    createSkin() {
      return new SkinSimple_SkinSimple({textureUrls: [this.getTexture()], transparent: true});
    }
    onSpawn() {
      super.onSpawn(), this.scale.setScalar(0.1);
    }
    draw() {
      super.draw(), this.scale.setScalar(ValueUtils.smoothValue(this._normalScale, this.scale.x, 20)), ValueUtils.isNumberChanged(this._normalScale, this.scale.x, 0.01) && np.drawer.addOnce(this);
    }
    getInstancedData() {
      const e = super.getInstancedData();
      return e.textureUrls = [this.getTexture()], e.transparent = true, e;
    }
    isInstanced() {
      return false;
    }
  }
  class EntityArmorDiamond_EntityArmorDiamond extends AbstractEntityArmor_AbstractEntityArmor {
    getTexture() {
      return "armors/diamond_helmet.png";
    }
  }
  class EntityArmorGold_EntityArmorGold extends AbstractEntityArmor_AbstractEntityArmor {
    getTexture() {
      return "armors/golden_helmet.png";
    }
  }
  class EntityArmorIron_EntityArmorIron extends AbstractEntityArmor_AbstractEntityArmor {
    getTexture() {
      return "armors/iron_helmet.png";
    }
  }
  class AbstractEntityFood_AbstractEntityFood extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this.cacheable = true;
    }
    createSkin() {
      return new SkinSimple_SkinSimple({textureUrls: [this.getTexture()], transparent: true});
    }
    onSpawn() {
      super.onSpawn(), this.scale.setScalar(0.1);
    }
    draw() {
      super.draw(), this.scale.setScalar(ValueUtils.smoothValue(1, this.scale.x, 20)), ValueUtils.isNumberChanged(1, this.scale.x, 0.01) && np.drawer.addOnce(this);
    }
    getInstancedData() {
      const e = super.getInstancedData();
      return e.textureUrls = [this.getTexture()], e.transparent = true, e;
    }
    isInstanced() {
      return false;
    }
  }
  class EntityFoodCake_EntityFoodCake extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cake.png";
    }
  }
  class EntityFoodCookedChicken_EntityFoodCookedChicken extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cooked_chicken.png";
    }
  }
  class EntityFoodCookedSalmon_EntityFoodCookedSalmon extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cooked_salmon.png";
    }
  }
  class EntityFoodCookie_EntityFoodCookie extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cookie.png";
    }
  }
  class EntityFoodGoldenApple_EntityFoodGoldenApple extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/golden_apple.png";
    }
  }
  class EntityFoodPoisonousPotato_EntityFoodPoisonousPotato extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/poisonous_potato.png";
    }
  }
  class EntityInertialParticle_InertialParticleOptions extends ParticleOptions_ParticleOptions {
    constructor() {
      super(...arguments), this.flyAroundEntityUuid = "", this.flySmoothMultiplier = 0.003;
    }
  }
  class EntityInertialParticle_EntityInertialParticle extends EntityParticle_EntityParticle {
    constructor(e) {
      super(), this.options = new EntityInertialParticle_InertialParticleOptions, e && Object.assign(this.options, e);
    }
    updatePosition() {
      this.options.flyAroundEntityUuid.length && (np.entities.getEntity(this.options.flyAroundEntityUuid).ifPresent(e => {
        const t = e.position.clone().subtract(this.position).multiplyScalar(this.options.flySmoothMultiplier);
        this.options.velocity.add(t);
      }), this.position.add(this.options.velocity));
    }
  }
  class AbilityHighlightOnPoison_AbilityHighlightOnPoison_AbilityHighlightOnPoison extends Ability_Ability {
    constructor() {
      super(...arguments), this._colorRed = 0, this._colorRedStep = 3, this._originalsColor = new utils_Color_Color, this._lastExperience = 0;
    }
    onCreate() {
      super.onCreate(), this.parentEntity && this.parentEntity.skin && this.saveOriginalColors();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e);
    }
    onDraw() {
      super.onDraw(), 0 !== this._colorRed && (this.setColor(), np.drawer.addOnce(this.parentEntity));
    }
    onDamage() {
      this._colorRed = 127.5, np.drawer.addOnce(this.parentEntity), this.spawnParticles();
    }
    setColor() {
      if (this.parentEntity && (this._colorRed && np.drawer.addOnce(this.parentEntity), this.parentEntity.skin)) {
        this.decreaseRedColor();
        const e = new utils_Color_Color;
        e.g = this._originalsColor.g, e.r = this._originalsColor.r * (1 - this._colorRed / 255), e.b = this._originalsColor.b * (1 - this._colorRed / 255), this.parentEntity.skin.setColor(e);
      }
    }
    saveOriginalColors() {
      this.parentEntity && this.parentEntity.skin && this._originalsColor.copy(this.parentEntity.skin.getColor());
    }
    decreaseRedColor() {
      return 0 !== this._colorRed && (this._colorRed -= this._colorRedStep), this._colorRed < 0 && (this._colorRed = 0), this._colorRed;
    }
    spawnParticles() {
      for (let e = 0; e < 5; e++) this.spawnParticle(this.parentEntity.position, this.parentEntity.radius, Math.PI / 2 + Randomize_Randomize.getRandomFloat(-Math.PI / 4, Math.PI / 4));
    }
    spawnParticle(e, t, n) {
      const i = vector_Vector2_Vector2.RIGHT.clone().rotate(n).normalize().multiplyScalar(Randomize_Randomize.getRandomFloat(0.5, 1));
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(0.5 * t, t)), position: e.clone().add(i.toVector3().multiplyScalar(Randomize_Randomize.getRandomFloat(0, t / i.length()))), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: i.toVector3(Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(0, 50, 0, 0, 100, 0), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), animateEveryFrame: Randomize_Randomize.getRandomInt(10, 15), animateInverse: true, poolName: "poison", transparent: true, receiveLight: true});
    }
  }
  var jd, $d;
  !function (e) {
    e[e.IDLE = 0] = "IDLE", e[e.FORWARD = 1] = "FORWARD", e[e.BACKWARD = 2] = "BACKWARD";
  }(jd || (jd = {}));
  class MineStrikerSkin_MineStrikerSkin extends SkinSimple_SkinSimple {
    constructor() {
      super(...arguments), this.events = new Events_Events, this._weaponContainer = new ys, this._nicknameContainer = new ys, this._direction = jd.IDLE, this._startAngle = ValueUtils.normalizeAngle(-Math.PI + Math.PI / 8), this._endAngle = Math.PI / 4, this._path = Math.abs(this._endAngle - this._startAngle), this._attacking = false, this._skins = ["steve", "steve", "bee", "pumpkin", "fish", "cat", "pig", "zombie", "skeleton", "creeper", "drowned", "enderman", "zombie_pigman", "blaze", "witch", "herobrine"], this._helmets = ["iron_layer_1", "gold_layer_1", "diamond_layer_1"], this._weapons = ["wooden_sword", "wooden_sword", "dandelion", "stick", "fishing_rod_cast", "stone_sword", "stone_pickaxe", "iron_shovel", "bone", "iron_pickaxe", "trident", "diamond_sword", "golden_sword", "blaze_rod", "enchanted_diamond_sword", "nano_saber"], this._weaponRotations = [-Math.PI / 4, -Math.PI / 4, -Math.PI / 2, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 2, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4, -Math.PI / 4], this._weaponPositions = [1.1, 1.1, 0.9, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0.9, 1.1, 1.1, 1.1, 1.1, 1.1], this._name = "", this._box3 = new Ln, this._boxSize = new It, this._walkAnimationSpeed = 1, this._renderOrder = 5;
    }
    initialize() {
      super.initialize(), this._face = new SkinSimple_SkinSimple({textureUrls: [`players/${this._skins[0]}.png`], transparent: true}), this._face.initialize(), this._face.getObject3d().rotation.z = Math.PI / 2, this._face.setRenderOrder(this._renderOrder), this.getObject3d().add(this._face.getObject3d()), this._helmet = new SkinSimple_SkinSimple({textureUrls: [`helmets/${this._helmets[0]}.png`], transparent: true}), this._helmet.initialize(), this._helmet.getObject3d().rotation.z = Math.PI / 2, this._helmet.setRenderOrder(this._renderOrder), this.setAnimationTime(5e3), this._weaponContainer.scale.setScalar(2), this._weaponContainer.rotation.z = this._startAngle, this.getObject3d().add(this._weaponContainer), this._weapon = new SkinSimple_SkinSimple({textureUrls: [`weapons/${this._weapons[0]}.png`], transparent: true}), this._weapon.initialize(), this._weapon.getObject3d().position.x = 1.1, this._weapon.getObject3d().position.y = 0.2, this._weapon.getObject3d().rotation.z = -Math.PI / 4, this._weapon.setRenderOrder(this._renderOrder + 1), this._weaponContainer.add(this._weapon.getObject3d()), this.getObject3d().add(this._nicknameContainer);
    }
    createObject3d() {
      return new ys;
    }
    setNickname(e) {
      this._name !== e && (this._name = e, this._nickname && this._nickname.destroy(), this._nickname = new SkinText_SkinText({text: e, font: "defaultFont", fontSize: 1, transparent: true}), this._nickname.initialize(), this._nickname.getObject3d().scale.setScalar(0.25), this._nickname.getObject3d().position.y = 1, this._nickname.setRenderOrder(this._renderOrder + 1), this._nicknameContainer.add(this._nickname.getObject3d()), this.updateNicknamePosition(this.getObject3d().scale.x));
    }
    setAnimationTime(e) {
      this._animationTime = e, this.updateSpeed();
    }
    updateSpeed() {
      this._speed = this._path / (this._animationTime / MillisHelper.tpsToMs(np.canvas.fps));
    }
    start() {
      this.isStarted() || (this._ticker = np.canvas.setIntervalFrames(() => this.tick(), 1));
    }
    stop() {
      return this.isStarted() && (np.canvas.clearIntervalFrames(this._ticker), this._ticker = null), this;
    }
    isStarted() {
      return !!this._ticker;
    }
    tick() {
      this.updateSpeed(), this.isAttacking() ? this._direction === jd.FORWARD ? (this._weaponContainer.rotation.z = ValueUtils.normalizeAngle(this._weaponContainer.rotation.z + this._speed), this.isEnd() && (this._direction = jd.BACKWARD)) : this._direction === jd.BACKWARD && (this._weaponContainer.rotation.z = ValueUtils.normalizeAngle(this._weaponContainer.rotation.z - this._speed), this.isBegin() && this.onEndAnimation()) : this._weaponContainer.position.x = 0.15 * Math.cos(0.2 * np.canvas.framesCount * this._walkAnimationSpeed);
    }
    onEndAnimation() {
      this.reSetAttackingAnimation(), this.events.emit("end");
    }
    reSetAttackingAnimation() {
      return this._attacking = false, this._direction = jd.IDLE, this._weaponContainer.rotation.z = this._startAngle, this.reSetWeaponContainer(), this;
    }
    isEnd() {
      return this._weaponContainer.rotation.z >= this._endAngle;
    }
    isBegin() {
      return this._weaponContainer.rotation.z <= this._startAngle;
    }
    isAttacking() {
      return this._attacking;
    }
    attack() {
      this._attacking = true, this._direction = jd.FORWARD, this.reSetWeaponContainer();
    }
    reSetWeaponContainer() {
      this._weaponContainer.position.x = 0;
    }
    setSkin(e) {
      this._face.setTexture(`players/${this._skins[e]}.png`), this._weapon.setTexture(`weapons/${this._weapons[e]}.png`), this._weapon.getObject3d().rotation.z = this._weaponRotations[e], this._weapon.getObject3d().position.x = this._weaponPositions[e];
    }
    setTransforms(e, t, n) {
      super.setTransforms(e, t, n), n && this.updateNicknamePosition(n.x), t && (this._nicknameContainer.rotation.z = -t.z);
    }
    updateNicknamePosition(e) {
      this._nickname && (this._box3.setFromObject(this._nickname.getObject3d()), this._box3.getSize(this._boxSize), this._nickname.getObject3d().position.x = -this._boxSize.x / 2 / e);
    }
    isEnderman(e) {
      return "enderman" === this._skins[e];
    }
    isBee(e) {
      return "bee" === this._skins[e];
    }
    setWalkAnimationSpeed(e) {
      this._walkAnimationSpeed = e;
    }
    setArmorType(e) {
      this._helmets[e - 1] ? (this._helmet.setTexture(`helmets/${this._helmets[e - 1]}.png`), this._helmet.setVisible(true, this.getObject3d())) : this._helmet.setVisible(false);
    }
  }
  class EntityMineStriker_EntityMineStriker extends EntityDrawable_EntityDrawable {
    constructor() {
      super(...arguments), this.cacheable = true, this._isStartedAttacking = false;
    }
    construct() {
      super.construct(), this._pool0 = new vector_Vector2_Vector2, this.abilities.addAbilities(new AbilityHealth_AbilityHealth(this), new AbilityInvulnerability_AbilityInvulnerability(this), new AbilityHighlightOnPoison_AbilityHighlightOnPoison_AbilityHighlightOnPoison(this));
    }
    createSkin() {
      return new MineStrikerSkin_MineStrikerSkin;
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), ValueUtils.isNumber(e.level) && this.updateSkin(), ValueUtils.isNumber(e.speedMultiplier) && this.updateWalkAnimationSpeed(), e.arm && (ValueUtils.isNumber(e.arm.animationTime) && this.updateAttackingSpeed(), ValueUtils.isNotUndefinedAndNotNull(e.arm.direction) && this.updateAttacking()), ValueUtils.isNotUndefinedAndNotNull(e.armorType) && this.updateArmor();
    }
    updateArmor() {
      this.skin && this.skin.setArmorType(this.serverProperties.armorType);
    }
    updateSkin() {
      this.skin && this.skin.setSkin(this.serverProperties.level);
    }
    updateWalkAnimationSpeed() {
      this.skin && this.skin.setWalkAnimationSpeed(this.serverProperties.speedMultiplier);
    }
    updateAttackingSpeed() {
      this.skin && this.skin.setAnimationTime(this.serverProperties.arm.animationTime);
    }
    updateAttacking() {
      this.serverProperties.arm.direction === jd.FORWARD ? this.startAttacking() : this.stopAttacking();
    }
    onSpawn() {
      super.onSpawn(), this.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        e.smoothParentEntityWithBox2d.position = 5, e.smoothParentEntityWithBox2d.velocity = 1, e.smoothBox2dEntityWithServer.position = 5;
      }), this.skin.setNickname(this.serverProperties.name), this.skin.start(), this.updateWalkAnimationSpeed(), this.updateSkin(), this.updateAttackingSpeed(), this.updateAttacking(), this.updateArmor();
    }
    draw() {
      super.draw(), this.skin && (this.skin.isBee(this.serverProperties.level) && Chance_Chance.get(3) && this.spawnBeeParticle(), this.skin.isEnderman(this.serverProperties.level) && Chance_Chance.get(3) && this.spawnEndermanParticle());
    }
    startAttacking() {
      return false === this.isStarted() && (this._isStartedAttacking = true, this.attack()), this;
    }
    stopAttacking() {
      return this.isStarted() && (this._isStartedAttacking = false), this;
    }
    attackOnce() {
      this.startAttacking().stopAttacking();
    }
    isStarted() {
      return this._isStartedAttacking;
    }
    isAttacking() {
      return this.skin && this.skin.isAttacking();
    }
    attack() {
      this.skin && this.skin.attack();
    }
    spawnBeeParticle() {
      const e = this.getParticleOptions();
      e.poolName = "bee", e.color = Randomize_Randomize.getRandomFromArray([utils_Color_Color.fromScalar(16701032), utils_Color_Color.fromScalar(15582019), utils_Color_Color.fromScalar(3156791)]), np.particles.spawn(EntityInertialParticle_EntityInertialParticle, e);
    }
    spawnEndermanParticle() {
      const e = this.getParticleOptions();
      e.poolName = "enderman", e.color = Randomize_Randomize.getRandomFromArray([utils_Color_Color.fromScalar(15625693), utils_Color_Color.fromScalar(14418175)]), np.particles.spawn(EntityInertialParticle_EntityInertialParticle, e);
    }
    getParticleOptions() {
      return {flyAroundEntityUuid: this.uuid, position: this.position.clone(), offset: new vector_Vector3_Vector3(0, 0, Randomize_Randomize.getRandomFloat(0, 2 * this.radius)), spawnAroundRadius: 2 * this.radius, rotationZSpeed: 0.1, size: new vector_Vector3_Vector3(this.radius / 2, this.radius / 2, 1), velocity: vector_Vector3_Vector3.random(-0.5, 0.5), flySmoothMultiplier: 0.002, color: utils_Color_Color.WHITE, texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), animateEveryFrame: 30, animateInverse: true, poolName: "player-particle", transparent: true};
    }
    spawnDeadEffect() {
      for (let e = 0; e < 5; e++) this.spawnSmokeParticle(this.position, 2.5 * this.radius);
    }
    spawnSmokeParticle(e, t) {
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(t, 1.5 * t)), position: e.clone(), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), rotationZSpeed: Randomize_Randomize.getRandomFloat(0.02, 0.04), color: Randomize_Randomize.getRandomColor(100, 100, 100, 255, 255, 255).toGrayScale(), texture: "effects/particles/big-smoke.png", animateTiles: new vector_Vector2_Vector2(1, 12), spawnAroundRadius: t / 2, spawnTimeoutFrames: Randomize_Randomize.getRandomInt(0, 15), animateEveryFrame: Randomize_Randomize.getRandomInt(1, 2), poolName: "smoke", transparent: true, renderOrder: 10});
    }
    onProcessContact(e, t) {
      t && np.entities.getEntity(e).ifPresent(e => {
        e.serverProperties && "ENTITY_FOOD_POISONOUS_POTATO" === e.serverProperties.type && this.abilities.getAbility(AbilityHighlightOnPoison_AbilityHighlightOnPoison_AbilityHighlightOnPoison).ifPresent(e => e.onDamage());
      });
    }
    onDead() {
      super.onDead(), this.spawnDeadEffect();
    }
    remove() {
      return this.stopAttacking(), this.skin && this.skin.stop().reSetAttackingAnimation(), super.remove();
    }
  }
  class DomToolTipMove_DomToolTipMove extends DomToolTipAbstract_DomToolTipAbstract {
    constructor(e = "", t, n = np.get$Container()) {
      super(e, t, n), this._onMouseMoveUuid = "", this._$tooltip.classList.add("move");
    }
    onMouseEnter(e) {
      super.onMouseEnter(e), this._onMouseMoveUuid = np.utils.Dom.addPointerMove(this._$trigger, e => this.onMouseMove(e));
    }
    onMouseLeave() {
      super.onMouseLeave(), np.utils.Dom.removePointerMove(this._$trigger, this._onMouseMoveUuid);
    }
    onMouseMove(e) {
      this.updateCursor(e), this.updatePosition();
    }
    updatePosition() {
      const e = new vector_Vector2_Vector2(0, 0), t = new vector_Vector2_Vector2(document.documentElement.clientWidth - this._$tooltip.offsetWidth - 1, document.documentElement.clientHeight - this._$tooltip.offsetHeight - 1), n = new vector_Vector2_Vector2(0, 0), i = this._cursor.x - this._$tooltip.offsetWidth / 2;
      n.x = Math.max(e.x, i), n.x = Math.min(t.x, n.x);
      const r = this._cursor.y + this._margin;
      n.y = Math.max(e.y, r), n.y = Math.min(t.y, n.y), this.setPosition(n);
    }
  }
  class KeyBoardHotKey {
    constructor(e, t) {
      this._$container = document.createElement("div"), this._$text = document.createElement("span"), this.isMouseKey(e[0]) ? this._$container.classList.add("mouse-button-wrap") : this._$container.classList.add("keyboard-keys"), this._$text.innerText = t, this._$container.appendChild(this._$text), this.appendHotKeys(e);
    }
    appendHotKeys(e) {
      for (let t = 0; t < e.length; t++) {
        const n = document.createElement("div");
        this.isMouseKey(e[0]) ? (n.classList.add("mouse-button"), "Left Mouse Button" === e[0] && n.classList.add("mouse-left"), "Right Mouse Button" === e[0] && n.classList.add("mouse-right")) : (n.classList.add("key"), n.innerText = e[t]), n.classList.add("white"), this._$container.appendChild(n);
      }
    }
    isMouseKey(e) {
      return "Right Mouse Button" === e || "Left Mouse Button" === e || "Middle Mouse Button" === e;
    }
    get$Container() {
      return this._$container;
    }
  }
  class DomBar_DomBar extends DomDiv_DomDiv {
    constructor() {
      super(), this._text = new DomParagraph_DomParagraph, this._progress = new DomDiv_DomDiv, this._progressInner = new DomDiv_DomDiv, this._currentProgress = 0, this.addClasses(["dom-bar"]), this._progress.addClasses(["progress"]), this.appendChild(this._progress.get$Element()), this._progressInner.addClasses(["progress-inner"]), this._progress.appendChild(this._progressInner.get$Element()), this._text.addClasses(["text"]), this.appendChild(this._text.get$Element());
    }
    setProgress(e) {
      return this._currentProgress = e, this.update$progress(), this;
    }
    getProgress() {
      return this._currentProgress;
    }
    setText(e) {
      return this._text.setText(e), this;
    }
    getText() {
      return this._text.getText();
    }
    update$progress() {
      this._progress && (this._progress.get$Element().style.width = `${100 * this.getProgress()}%`);
    }
  }
  class DomLvlBar_DomLvlBar extends DomBar_DomBar {
    constructor() {
      super(), this._language = n(151)("./" + np.languages.activeLanguage + ".json"), this._levelUp = new DomParagraph_DomParagraph, this.addClasses(["lvl-bar"]), this._levelUp.addClasses(["lvl-up"]).setText(this._language.lvlUp), this.appendChild(this._levelUp.get$Element());
    }
    setLevel(e) {
      return ValueUtils.isNumber(this._currentLevel) && e > this._currentLevel && this.showLvlUp(), this._currentLevel = e, super.setText(e.toString()), this;
    }
    showLvlUp() {
      this._levelUp.addClasses(["show"]), setTimeout(() => this._levelUp.removeClasses(["show"]), 1e3);
    }
  }
  class metrics_DomAbstractMetric_DomAbstractMetric extends DomDiv_DomDiv {
    constructor() {
      super(), this._name = new DomParagraph_DomParagraph, this._value = new DomParagraph_DomParagraph, this.addClasses(["metric"]), this._name.addClasses(["name"]), this.appendChild(this._name.get$Element()), this._value.addClasses(["value"]), this.appendChild(this._value.get$Element());
    }
  }
  class metrics_DomFps_DomFps extends metrics_DomAbstractMetric_DomAbstractMetric {
    constructor() {
      super(), this._language = n(40)("./" + np.languages.activeLanguage + ".json"), this._name.setText(this._language.fps), this.addClasses(["fps"]);
    }
    update() {
      this._value.setText(Math.round(np.canvas.fps).toString());
    }
  }
  class metrics_DomPing_DomPing extends metrics_DomAbstractMetric_DomAbstractMetric {
    constructor() {
      super(), this._language = n(40)("./" + np.languages.activeLanguage + ".json"), this._name.setText(this._language.ping), this.addClasses(["ping"]), np.socket.events.on("pong", e => this.onPong(e));
    }
    onPong(e) {
      this._value.setText(e.toString());
    }
  }
  class metrics_DomPosition_DomPosition extends metrics_DomAbstractMetric_DomAbstractMetric {
    constructor() {
      super(), this.addClasses(["position"]);
    }
    update() {
      np.canvas.camera.attachedEntity.ifPresent(e => {
        this._value.setText(`x: ${Math.round(e.position.x)}, y: ${Math.round(e.position.y)}`);
      });
    }
  }
  class metrics_DomMetrics_DomMetrics extends DomDiv_DomDiv {
    constructor() {
      super(), this._fps = new metrics_DomFps_DomFps, this._ping = new metrics_DomPing_DomPing, this._position = new metrics_DomPosition_DomPosition, this.addClasses(["metrics"]), this.appendChild(this._fps.get$Element()), this.appendChild(this._ping.get$Element()), this.appendChild(this._position.get$Element());
    }
    start() {
      false === this.isStarted() && (this._interval = np.canvas.setIntervalFrames(() => this.update(), 60));
    }
    stop() {
      this.isStarted() && (np.canvas.clearIntervalFrames(this._interval), this._interval = null);
    }
    isStarted() {
      return !!this._interval;
    }
    update() {
      this._fps.update(), this._position.update();
    }
  }
  class top_players_TopPlayersPlayer_TopPlayersPlayer {
    constructor(e) {
      this._$player = document.createElement("tr"), this._$number = document.createElement("td"), this._$flag = document.createElement("td"), this._$flagIcon = document.createElement("div"), this._$name = document.createElement("td"), this._$score = document.createElement("td"), this._language = "en", this.events = new Events_Events, this.build(), this.setListeners(), this.update(e);
    }
    build() {
      this._$player.classList.add("player"), this._$number.classList.add("number"), this._$flag.classList.add("flag"), this._$flagIcon.classList.add("flag-icon"), this._$name.classList.add("name"), this._$score.classList.add("score"), this._$flag.appendChild(this._$flagIcon), this._$player.appendChild(this._$number), this._$player.appendChild(this._$flag), this._$player.appendChild(this._$name), this._$player.appendChild(this._$score);
    }
    setListeners() {
      this._$name.addEventListener("click", () => this.onNameClick());
    }
    onNameClick() {
      this.events.emit("click", {playerData: this._data});
    }
    get$Player() {
      return this._$player;
    }
    setNumber(e) {
      ValueUtils.isNotUndefinedAndNotNull(e) && this._number !== e && (this._number = e, this._$number.innerText = (this._number + 1).toString() + ".", this.isIam() && this.events.emit("changedMyNumber", {position: e + 1}));
    }
    getNumber() {
      return this._number;
    }
    setName(e) {
      this._name !== e && (this._name = ChatColor_ChatColor.clearFromColors(e), this._$name.innerText = this._name);
    }
    getUuid() {
      return this._data.uuid;
    }
    setScore(e) {
      ValueUtils.isNotUndefinedAndNotNull(e) && (this._score = e, this._$score.innerText = ValueUtils.getHumanityNumber(e).text);
    }
    getScore() {
      return this._score;
    }
    setLanguage(e) {
      this._language = e, this._$flagIcon.style.backgroundImage = `url('//${np.modules.mod.resourceHost}${np.modules.mod.gameDirectory}/images/flags/${this._language}.svg')`;
    }
    getLanguage() {
      return this._language;
    }
    update(e) {
      this._data = e, this.isIam() ? this._$player.classList.add("iam") : this._$player.classList.remove("iam"), this.setName(this._data.name), this.setLanguage(this._data.language), this.setNumber(this._data.index), this.setScore(this._data.score);
    }
    isIam() {
      return this._data.uuid === np.myServerUuid;
    }
    destroy() {
      this.events.destroy(), this._$player.remove();
    }
  }
  class top_players_DomTopPlayers_DomTopPlayers extends DomDiv_DomDiv {
    constructor() {
      super(), this.events = new Events_Events, this._language = n(156)("./" + np.languages.activeLanguage + ".json"), this._$title = new DomParagraph_DomParagraph, this._$table = document.createElement("table"), this._$tableHead = document.createElement("thead"), this._$tableBody = document.createElement("tbody"), this._players = [], this.addClasses(["top-players"]), this._$title.setText(this._language.title), this._$table.classList.add("top-players-table"), this.createTableHead(), this._$table.appendChild(this._$tableHead), this._$table.appendChild(this._$tableBody), this.appendChild(this._$title.get$Element()), this.appendChild(this._$table), np.socket.events.on("topPlayers", e => this.update(e.players));
    }
    update(e) {
      this.clear(), this.updatePlayers(e), this.sortPlayers(), this.removeOldPlayers(e), this.showPlayers();
    }
    clear() {
      DomUtils_DomUtils.cleanElement(this._$tableBody);
    }
    updatePlayers(e) {
      for (const t in e) this.updatePlayer(e[t]);
    }
    removeOldPlayers(e) {
      for (let t = 0; t < this._players.length; t++) {
        let n = false;
        if (t < 10 || this._players[t].getUuid() === np.myServerUuid) for (const i in e) if (this._players[t].getUuid() === e[i].uuid) {
          n = true;
          break;
        }
        false === n && (this._players[t].destroy(), this._players.splice(t, 1));
      }
    }
    updatePlayer(e) {
      let t = this.getPlayer(e.uuid);
      t || (t = this.createPlayer(e)), t.update(e);
    }
    getPlayer(e) {
      for (const t in this._players) if (this._players[t].getUuid() === e) return this._players[t];
    }
    createPlayer(e) {
      const t = new top_players_TopPlayersPlayer_TopPlayersPlayer(e);
      return t.events.on("click", e => this.onClickPlayer(e.playerData)), t.events.on("changedMyNumber", e => this.onChancedMyNumber(e.position)), this._players.push(t), t;
    }
    onClickPlayer(e) {
      this.events.emit("clickPlayer", {playerData: e});
    }
    onChancedMyNumber(e) {
      this.events.emit("changedMyNumber", {position: e});
    }
    sortPlayers() {
      this._players.sort((e, t) => e.getNumber() - t.getNumber());
    }
    showPlayers() {
      for (const e in this._players) this._$tableBody.appendChild(this._players[e].get$Player());
    }
    createTableHead() {
      const e = document.createElement("tr");
      e.classList.add("player"), e.appendChild(document.createElement("td")), e.appendChild(document.createElement("td")), e.appendChild(document.createElement("td"));
      const t = document.createElement("td");
      t.classList.add("score"), e.appendChild(t), this._$tableHead.appendChild(e);
    }
  }
  class game_GameScreen_GameScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(159)("./" + np.languages.activeLanguage + ".json"), this._buttons = new DomDiv_DomDiv, this._topLeft = new DomDiv_DomDiv, this._top = new DomDiv_DomDiv, this._topRight = new DomDiv_DomDiv, this._bottom = new DomDiv_DomDiv, this._fullScreen = new DomButton_DomButton, this._fullScreenIcon = new DomDiv_DomDiv, this._joystickAngle = 0, this._speedUp = new DomButton_DomButton, this._attack = new DomButton_DomButton, this._lvlBar = new DomLvlBar_DomLvlBar, this._topPlayers = new top_players_DomTopPlayers_DomTopPlayers, this._metrics = new metrics_DomMetrics_DomMetrics, this._hotKeys = new DomDiv_DomDiv, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._topLeft.addClasses(["top-left"]), this.get$Screen().appendChild(this._topLeft.get$Element()), this._buttons.addClasses(["buttons"]), this._topLeft.appendChild(this._buttons.get$Element()), this._top.addClasses(["top"]), this.get$Screen().appendChild(this._top.get$Element()), this._topRight.addClasses(["top-right"]), this.get$Screen().appendChild(this._topRight.get$Element()), this._bottom.addClasses(["bottom"]), this.get$Screen().appendChild(this._bottom.get$Element()), this._bottom.appendChild(this._lvlBar.get$Element()), this._topRight.appendChild(this._topPlayers.get$Element()), false === np.device.isMobile() && this._topRight.appendChild(this._metrics.get$Element()), this._hotKeys.addClasses(["hotkeys"]), np.input.keyBindings.getKeyBindings("attack").ifPresent(e => {
        this._hotKeys.appendChild(new KeyBoardHotKey([e.triggers[0].getNamedKeys()], this._language.hotKeys.attack).get$Container());
      }), np.input.keyBindings.getKeyBindings("speedUp").ifPresent(e => {
        this._hotKeys.appendChild(new KeyBoardHotKey([e.triggers[0].getNamedKeys()], this._language.hotKeys.speedUp).get$Container());
      }), np.device.isMobile() ? (this._joystick = new DomJoystick_DomJoystick, this.get$Screen().appendChild(this._joystick.get$Joystick()), this._speedUp.addClasses(["mobile-button"]), this._speedUp.addClasses(["speed-up"]), this._speedUp.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.runDuoTone)), this.get$Screen().appendChild(this._speedUp.get$Element()), this._attack.addClasses(["mobile-button"]), this._attack.addClasses(["attack"]), this._attack.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.swordDuoTone)), this.get$Screen().appendChild(this._attack.get$Element())) : (this._fullScreen.addClasses(["turn-fullscreen"]), this._fullScreen.addClasses(["button"]), this._fullScreen.addClasses(["small"]), this._fullScreen.addClasses(["only-icon"]), MineStrike_MineStrike.isCrazyGamesIframe() || this._buttons.appendChild(this._fullScreen.get$Element()), this._fullScreenIcon.addClasses(["icon"]), this._fullScreen.appendChild(this._fullScreenIcon.get$Element()), this._fullScreenToolTip = new DomToolTipMove_DomToolTipMove("", this._fullScreen.get$Element()), this.onFullScreenChange());
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.window.events.on("resize", () => this.onResize()), np.window.events.on("changeFullScreen", () => this.onFullScreenChange()), this._joystick && this._joystick.events.on("move", () => this.onJoystickMove()), np.utils.Dom.addPointerDown(this._fullScreen.get$Element(), () => np.input.events.emit("playerFreezeShot")), np.utils.Dom.addPointerUp(this._fullScreen.get$Element(), () => this.onClickFullScreen()), np.utils.Dom.addPointerDown(this._speedUp.get$Element(), () => this.onDownSpeedUp()), np.utils.Dom.addPointerUp(this._speedUp.get$Element(), () => this.onUpSpeedUp()), np.utils.Dom.addPointerDown(this._attack.get$Element(), () => this.onDownAttack()), np.utils.Dom.addPointerUp(this._attack.get$Element(), () => this.onUpAttack()), this.getTopPlayers().events.on("changedMyNumber", e => this.onChangedMyNumber(e.position));
    }
    onChangedMyNumber(e) {
      1 === e && np.modules.mod.get(DevModeDetector_DevModeDetector).ifPresent(e => {
        e.isDevMode() || np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => e.startRecord());
      });
    }
    onGameStart() {
      this.show();
    }
    onResize() {}
    onFullScreenChange() {
      document.fullscreenElement ? this.onEnabledFullScreen() : this.onDisabledFullScreen();
    }
    onEnabledFullScreen() {
      np.device.isMobile() || (this._fullScreenIcon.clean(), this._fullScreenIcon.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.compress)), this._fullScreenToolTip.text = this._language.fullScreen.disable);
    }
    onDisabledFullScreen() {
      np.device.isMobile() || (this._fullScreenIcon.clean(), this._fullScreenIcon.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.expand)), this._fullScreenToolTip.text = this._language.fullScreen.enable);
    }
    onClickGameMenu() {
      np.input.events.emit("playerUnFreezeShot"), np.modules.mod.get(GameMenu_GameMenu).ifPresent(e => e.show());
    }
    onClickFullScreen() {
      np.input.events.emit("playerUnFreezeShot"), document.fullscreenElement ? np.canvas.disableFullScreen() : np.canvas.enableFullScreen();
    }
    onJoystickMove() {
      this._joystickAngle = this._joystick.getAngle();
    }
    onDownSpeedUp() {
      np.input.events.emit("playerFreezeShot"), np.input.keyBindings.getKeyBindings("speedUp").ifPresent(e => e.triggers[0].pressDown());
    }
    onUpSpeedUp() {
      np.input.events.emit("playerUnFreezeShot"), np.input.keyBindings.getKeyBindings("speedUp").ifPresent(e => e.triggers[0].pressUp());
    }
    onDownAttack() {
      np.input.events.emit("playerFreezeShot"), np.input.keyBindings.getKeyBindings("attack").ifPresent(e => e.triggers[0].pressDown());
    }
    onUpAttack() {
      np.input.events.emit("playerUnFreezeShot"), np.input.keyBindings.getKeyBindings("attack").ifPresent(e => e.triggers[0].pressUp());
    }
    onShow() {
      super.onShow(), this._metrics.start(), np.screens.get$Screens().style.pointerEvents = "none", np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.disable()), false === np.device.isMobile() && this._topRight.appendChild(this._hotKeys.get$Element());
    }
    onHide() {
      super.onHide(), this._metrics.stop(), np.screens.get$Screens().style.pointerEvents = "all";
    }
    getJoystickAngle() {
      return this._joystickAngle;
    }
    getJoystick() {
      return this._joystick;
    }
    getLvlBar() {
      return this._lvlBar;
    }
    getTopPlayers() {
      return this._topPlayers;
    }
  }
  class DomParticle_DomParticleOptions {
    constructor() {
      this.$parent = document.body, this.scale = vector_Vector2_Vector2.IDENTITY.clone(), this.position = vector_Vector2_Vector2.ZERO.clone(), this.velocity = vector_Vector2_Vector2.ZERO.clone(), this.angle = 0, this.opacity = 1, this.opacitySpeedToDead = 0, this.opacitySpeedToShow = 0, this.animateTilesLoop = false, this.animateTilesEveryFrame = 1, this.destroyOnEnd = true;
    }
  }
  class DomParticle_DomParticle {
    constructor() {
      this._$particle = document.createElement("div"), this._options = new DomParticle_DomParticleOptions, this._animating = false, this._scale = vector_Vector2_Vector2.IDENTITY.clone(), this._position = vector_Vector2_Vector2.ZERO.clone(), this._angle = 0, this._opacityShowing = false, this._tile = new vector_Vector2_Vector2, this._currentFrame = 0, this._$particle.classList.add("particle");
    }
    setOptions(e) {
      if (e && Object.assign(this._options, e), this.applyOptions(), this._options.$content) {
        if (this._$particle.contains(this._options.$content)) return;
        this._options.$content.classList.add("content"), this._$particle.appendChild(this._options.$content);
      }
    }
    show() {
      return this.isDisplayed() ? this : (this._options.$parent.appendChild(this._$particle), this);
    }
    hide() {
      false !== this.isDisplayed() && this._options.$parent.removeChild(this._$particle);
    }
    isDisplayed() {
      return this._options.$parent.contains(this._$particle);
    }
    start(e) {
      return this._animating ? this : (e && this.setOptions(e), this._animating = true, this._options.onStart && this._options.onStart(this), requestAnimationFrame(() => this.draw()), this);
    }
    stop() {
      false !== this._animating && (this._animating = false, this._options.onStop && this._options.onStop(this));
    }
    draw() {
      false !== this._animating && (this._currentFrame++, false === this._options.velocity.isZero() && (this._position.add(this._options.velocity), this.updateTransforms()), this._opacityShowing && (this.opacity += this._options.opacitySpeedToShow, this.opacity >= 1 && (this._opacityShowing = false)), 0 !== this._options.opacitySpeedToDead && false === this._opacityShowing && (this.opacity += this._options.opacitySpeedToDead, this.opacity <= 0 || this.opacity >= 1) ? this.onEnd() : this._options.tiles && this._currentFrame % this._options.animateTilesEveryFrame == 0 && (this.updateBackgroundPosition(), this.setNextTile(), this._tile.isZero() && false === this._options.animateTilesLoop) ? this.onEnd() : this._animating && requestAnimationFrame(() => this.draw()));
    }
    updateBackgroundPosition() {
      let e = 0;
      this._options.tiles.x > 1 && (e = this._tile.x / (this._options.tiles.x - 1));
      let t = 0;
      this._options.tiles.y > 1 && (t = this._tile.y / (this._options.tiles.y - 1)), this._$particle.style.backgroundPosition = `${100 * e}% ${100 * t}%`;
    }
    setNextTile() {
      this._tile.x++, this._tile.x > this._options.tiles.x - 1 && (this._tile.x = 0, this._tile.y++, this._tile.y > this._options.tiles.y - 1 && (this._tile.x = 0, this._tile.y = 0));
    }
    onEnd() {
      this.stop(), this._options.onEnd && this._options.onEnd(this), this._options.destroyOnEnd && this.destroy();
    }
    destroy() {
      this.stop(), this._$particle.remove();
    }
    set opacity (e) {
      this._$particle.style.opacity = `${ValueUtils.limit(e, 0, 1)}`;
    }
    get opacity() {
      return parseFloat(this._$particle.style.opacity);
    }
    get$Particle() {
      return this._$particle;
    }
    applyOptions() {
      this._scale.copy(this._options.scale), this._position.copy(this._options.position), this._angle = this._options.angle, this.opacity = this._options.opacity, this._options.opacitySpeedToShow > 0 && (this._opacityShowing = true), this._tile.setScalar(0), this.updateTransforms();
    }
    reSet() {
      return this.applyOptions(), this;
    }
    updateTransforms() {
      const e = `scaleX(${this._scale.x}) scaleY(${this._scale.y})`, t = `translate(${this._position.x}vw, ${-this._position.y}vw)`, n = `rotate(-${ValueUtils.absAngle(this._angle)}rad)`;
      this._$particle.style.transform = `${e} ${t} ${n}`;
    }
  }
  class ShareUtils_ShareUtils {
    static shareToTw(e) {
      DomUtils_DomUtils.openLink("https://twitter.com/intent/tweet?text=" + encodeURIComponent(e));
    }
    static shareToFb(e, t, n) {
      return new Promise((i, r) => {
        FB.ui({method: "share", href: t, hashtag: n, quote: e}, e => {
          undefined !== e ? i(e) : r();
        });
      });
    }
    static shareToVk(e) {
      return new Promise((t, n) => {
        try {
          VK.Api.call("wall.post", {message: e, v: "5.73"}, e => {
            if (console.log("data3", e), e.response && e.response.post_id) return console.log("Posted with id ", e.response.post_id), void t(e.response);
            n();
          });
        } catch (e) {
          n(e);
        }
      });
    }
    static vkGiveAccess() {
      return new Promise((e, t) => {
        try {
          VK.Auth.login(n => {
            console.log("data2", n), "connected" === n.status ? e(undefined) : t();
          });
        } catch (e) {
          t(e);
        }
      });
    }
  }
  class ShareButtons_ShareButtons {
    constructor(e) {
      this._language = n(162)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$text = document.createElement("div"), this._$buttons = document.createElement("div"), this._$twButton = document.createElement("button"), this._twParticle = new DomParticle_DomParticle, this._$twParticleContainer = document.createElement("div"), this._$twParticleContent = document.createElement("div"), this._$fbButton = document.createElement("button"), this._fbParticle = new DomParticle_DomParticle, this._$fbParticleContainer = document.createElement("div"), this._$fbParticleContent = document.createElement("div"), this._$vkButton = document.createElement("button"), this._vkParticle = new DomParticle_DomParticle, this._$vkParticleContainer = document.createElement("div"), this._$vkParticleContent = document.createElement("div"), this._$vkAccessModalContainer = document.createElement("div"), this._$vkAccessModalButton = document.createElement("button"), this._vkAccessModalButtonFunc = () => {}, this._$discordButton = document.createElement("button"), this._discordShareLogChannelId = "", this._options = e, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$container.classList.add("share"), this._$text.classList.add("text"), this._$container.appendChild(this._$text), this._$buttons.classList.add("buttons"), this._$container.appendChild(this._$buttons), this._$twButton.classList.add("button"), this._$twButton.classList.add("tw-button"), this._$twButton.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.tw)), this._$buttons.appendChild(this._$twButton), this._$fbButton.classList.add("button"), this._$fbButton.classList.add("fb-button"), this._$fbButton.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.fb)), this._$buttons.appendChild(this._$fbButton), this._$vkButton.classList.add("button"), this._$vkButton.classList.add("vk-button"), this._$vkButton.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.vk)), this._$buttons.appendChild(this._$vkButton), this._vkAccessModal = new DomModal_DomModal(this._language.vk.accessModalTitle, this._$vkAccessModalContainer), this._$vkAccessModalButton.classList.add("button"), this._$vkAccessModalButton.innerText = this._language.vk.giveAccessAndShare, this._$vkAccessModalContainer.appendChild(this._$vkAccessModalButton), this._$discordButton.classList.add("button"), this._$discordButton.classList.add("discord-button"), this._$discordButton.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.discord)), this._$buttons.appendChild(this._$discordButton), this._$twParticleContainer.classList.add("particle-container"), this._$twButton.appendChild(this._$twParticleContainer), this._$twParticleContent.innerText = this._language.tw.particle, this._$fbParticleContainer.classList.add("particle-container"), this._$fbButton.appendChild(this._$fbParticleContainer), this._$fbParticleContent.innerText = this._language.fb.particle, this._$vkParticleContainer.classList.add("particle-container"), this._$vkButton.appendChild(this._$vkParticleContainer), this._$vkParticleContent.innerText = this._language.vk.particle;
    }
    setListeners() {
      this._$twButton.addEventListener("click", () => this.shareToTw()), this._$fbButton.addEventListener("click", () => this.shareToFb()), this._$vkButton.addEventListener("click", () => this.onVkButtonClick()), this._$vkAccessModalButton.addEventListener("click", () => this._vkAccessModalButtonFunc()), this._vkAccessModalButtonFunc = () => this.tryGetVkAccess(), this._$discordButton.addEventListener("click", () => this.onClickDiscord());
    }
    shareToTw() {
      ShareUtils_ShareUtils.shareToTw(this.getOffer());
    }
    shareToFb() {
      ShareUtils_ShareUtils.shareToFb(this.getOffer(), "https://minestrike.fun", "#minestrikefun").then(() => this.onShareFb());
    }
    onShareFb() {
      this.sendToDiscordShareLog("Shared via FB");
    }
    onVkButtonClick() {
      this._vkAccessModal.show();
    }
    tryGetVkAccess() {
      ShareUtils_ShareUtils.vkGiveAccess().then(() => this.onGotVkAccess());
    }
    onGotVkAccess() {
      this._$vkAccessModalButton.innerText = this._language.share, this._vkAccessModalButtonFunc = () => this.shareViaVk();
    }
    shareViaVk() {
      ShareUtils_ShareUtils.shareToVk(this.getOffer()).then(() => this.onSharedViaVk());
    }
    onSharedViaVk() {
      this._vkAccessModalButtonFunc = () => this.tryGetVkAccess(), this._$vkAccessModalButton.innerText = this._language.vk.giveAccessAndShare, this._vkAccessModal.hide(), this.sendToDiscordShareLog("Shared via VK");
    }
    onClickDiscord() {
      np.modules.mod.get(Discord_Discord).ifPresent(e => DomUtils_DomUtils.openLink(e.options.url));
    }
    get$Container() {
      return this._$container;
    }
    setText(e) {
      this._$text.innerHTML = e;
    }
    getOffer() {
      return this._options.getOffer();
    }
    sendToDiscordShareLog(e) {
      np.modules.mod.get(DiscordBot_DiscordBot).ifPresent(t => t.say(this._discordShareLogChannelId, e));
    }
    showAnimate() {
      this.hideText(), setTimeout(() => this.spawnTwParticle(), 500);
    }
    spawnTwParticle() {
      this._$twButton.classList.add("scale");
      const e = vector_Vector2_Vector2.RIGHT.clone().rotate(Randomize_Randomize.getRandomFloat(5 * Math.PI / 8, 6 * Math.PI / 8)).multiplyScalar(0.25);
      this._twParticle.start({$parent: this._$twParticleContainer, $content: this._$twParticleContent, velocity: e, angle: e.angle(), opacitySpeedToDead: -0.025, opacitySpeedToShow: 0.08, opacity: 0, destroyOnEnd: false, onEnd: e => e.reSet()}), setTimeout(() => this._$twButton.classList.remove("scale"), 100), setTimeout(() => this.spawnFbParticle(), 500);
    }
    spawnFbParticle() {
      this._$fbButton.classList.add("scale");
      const e = vector_Vector2_Vector2.RIGHT.clone().rotate(Randomize_Randomize.getRandomFloat(3 * Math.PI / 8, 5 * Math.PI / 8)).multiplyScalar(0.25);
      this._fbParticle.start({$parent: this._$fbParticleContainer, $content: this._$fbParticleContent, velocity: e, angle: e.angle(), opacitySpeedToDead: -0.025, opacitySpeedToShow: 0.08, opacity: 0, destroyOnEnd: false, onEnd: e => e.reSet()}), setTimeout(() => this._$fbButton.classList.remove("scale"), 100), setTimeout(() => this.spawnVkParticle(), 500);
    }
    spawnVkParticle() {
      this._$vkButton.classList.add("scale");
      const e = vector_Vector2_Vector2.RIGHT.clone().rotate(Randomize_Randomize.getRandomFloat(2 * Math.PI / 8, 3 * Math.PI / 8)).multiplyScalar(0.25);
      this._vkParticle.start({$parent: this._$vkParticleContainer, $content: this._$vkParticleContent, velocity: e, angle: e.angle(), opacitySpeedToDead: -0.025, opacitySpeedToShow: 0.08, opacity: 0, destroyOnEnd: false, onEnd: e => e.reSet()}), setTimeout(() => this._$vkButton.classList.remove("scale"), 100), setTimeout(() => this.showText(), 500);
    }
    showText() {
      this._$text.classList.add("show");
    }
    hideText() {
      this._$text.classList.remove("show");
    }
  }
  !function (e) {
    e.Main = "main", e.MobileMain = "mobileMain", e.Connect = "connect", e.Settings = "settings", e.Graphics = "graphics", e.KeyBindings = "keyBindings", e.GameOver = "gameOver", e.ReSpawn = "reSpawn", e.MobileReSpawn = "mobileReSpawn", e.Game = "game", e.StartMobile = "startMobile", e.Spectator = "spectator";
  }($d || ($d = {}));
  class MobileReSpawnScreen_MobileReSpawnScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(165)("./" + np.languages.activeLanguage + ".json"), this._$row1 = document.createElement("div"), this._$row2 = document.createElement("div"), this._$leftCol = document.createElement("div"), this._$centerCol = document.createElement("div"), this._$rightCol = document.createElement("div"), this._$centerBlock = document.createElement("div"), this._$scoreWrap = document.createElement("div"), this._$scoreTitle = document.createElement("div"), this._$score = document.createElement("div"), this._$buttons = document.createElement("div"), this._$help = document.createElement("div"), this._$reSpawn = document.createElement("button"), this._shareButtons = new ShareButtons_ShareButtons({getOffer: () => this.getShareButtonsOffer()}), this._banner728x90 = new AdBanner_AdBanner({id: "minestrike-fun_728x90", size: "728x90", $container: this._$row2}), this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$row1.classList.add("row"), this._$row1.classList.add("row-1"), this._$screen.appendChild(this._$row1), this._$row2.classList.add("row"), this._$row2.classList.add("row-2"), this._$screen.appendChild(this._$row2), this._$leftCol.classList.add("left-col"), this._$leftCol.classList.add("col"), this._$row1.appendChild(this._$leftCol), this._$centerCol.classList.add("center-col"), this._$centerCol.classList.add("col"), this._$row1.appendChild(this._$centerCol), this._$rightCol.classList.add("right-col"), this._$rightCol.classList.add("col"), this._$row1.appendChild(this._$rightCol), this._$centerBlock.classList.add("block"), this._$centerCol.appendChild(this._$centerBlock), this._$scoreWrap.classList.add("score-wrap"), this._$centerBlock.appendChild(this._$scoreWrap), this._$scoreTitle.classList.add("score-title"), this._$scoreTitle.innerText = this._language.scoreTitle, this._$scoreWrap.appendChild(this._$scoreTitle), this._$score.classList.add("score"), this._$score.innerText = `${ValueUtils.getHumanityNumber(1e5).text}`, this._$scoreWrap.appendChild(this._$score), this._shareButtons.setText(this._language.shareText), this._$centerBlock.appendChild(this._shareButtons.get$Container()), this._$buttons.classList.add("main-buttons"), this._$centerBlock.appendChild(this._$buttons), this._$reSpawn.classList.add("respawn"), this._$reSpawn.classList.add("button"), this._$reSpawn.innerText = this._language.reSpawn, this._$buttons.appendChild(this._$reSpawn), this._$help.classList.add("help"), this._$help.classList.add("block"), this._$help.classList.add("scroll"), this._$help.innerHTML = this._language.help.join(""), this._$rightCol.appendChild(this._$help), this._banner728x90.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-2.jpg`]), this._banner728x90.get$Container().classList.add("block");
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), this._$reSpawn.addEventListener("click", () => this.reLoginToServer());
    }
    onGameStart() {
      this.setScore(0), this._shareButtons.hideText(), this.endLoading();
    }
    reLoginToServer() {
      false !== np.socket.isConnected() ? (np.device.isMobile() && np.canvas.enableFullScreen().then(() => np.canvas.lockScreenOrientation()).catch(e => console.log(e)), this.startLoading(), np.connector.events.emit("reLoginToServer")) : np.device.isMobile() ? np.screens.show($d.MobileMain) : np.screens.show($d.Main);
    }
    startLoading() {
      this._$reSpawn.setAttribute("disabled", "disabled");
    }
    endLoading() {
      this._$reSpawn.removeAttribute("disabled");
    }
    onShow() {
      super.onShow(), np.screens.get$ScreensContainer().classList.add("dark"), this._banner728x90.show(), this._banner728x90.reFresh(), this._shareButtons.showAnimate();
    }
    onHide() {
      super.onHide(), np.screens.get$ScreensContainer().classList.remove("dark");
    }
    setScore(e) {
      this._$score.innerText = ValueUtils.getHumanityNumber(e).text;
    }
    getShareButtonsOffer() {
      return StringUtils_StringUtils.insertValues(this._language.shareOffer, {points: this._$score.innerText});
    }
  }
  class AnotherGame_AnotherGame {
    constructor() {
      this._$container = document.createElement("div"), this._$title = document.createElement("div"), this._$a = document.createElement("a"), this._$img = document.createElement("img"), this.putTemplate();
    }
    putTemplate() {
      this._$container.classList.add("block"), this._$container.classList.add("another-game"), this._$title.classList.add("title"), this._$container.appendChild(this._$title), this._$a.target = "_blank", this._$container.appendChild(this._$a), this._$a.appendChild(this._$img);
    }
    get$Container() {
      return this._$container;
    }
    setTitle(e) {
      this._$title.innerHTML = e;
    }
    setLinkHref(e) {
      this._$a.href = e;
    }
    setImageSrc(e) {
      this._$img.src = e;
    }
  }
  class ReSpawnScreen_ReSpawnScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(168)("./" + np.languages.activeLanguage + ".json"), this._$row1 = document.createElement("div"), this._$row2 = document.createElement("div"), this._$leftCol = document.createElement("div"), this._$centerCol = document.createElement("div"), this._$rightCol = document.createElement("div"), this._$centerBlock = document.createElement("div"), this._$scoreWrap = document.createElement("div"), this._$scoreTitle = document.createElement("div"), this._$score = document.createElement("div"), this._$buttons = document.createElement("div"), this._$help = document.createElement("div"), this._$reSpawn = document.createElement("button"), this._blockerReSpawn = new ButtonBlocker_ButtonBlocker(this._$reSpawn), this._banner300x250 = new AdBanner_AdBanner({id: "minestrike-fun_300x250", size: "300x250", $container: this._$leftCol}), this._banner728x90 = new AdBanner_AdBanner({id: "minestrike-fun_728x90", size: "728x90", $container: this._$row2}), this._shareButtons = new ShareButtons_ShareButtons({getOffer: () => this.getShareButtonsOffer()}), this.$pgi = document.createElement("div"), this._pgiOptions = {slugs: "mine-craft-io,crazy-steve-io,slithercraft.io,mineenergy.fun,crazybattle.fun,evowarriors-fun", count: 9}, this._anotherGame = new AnotherGame_AnotherGame, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$row1.classList.add("row"), this._$row1.classList.add("row-1"), this._$screen.appendChild(this._$row1), this._$row2.classList.add("row"), this._$row2.classList.add("row-2"), this._$screen.appendChild(this._$row2), this._$leftCol.classList.add("left-col"), this._$leftCol.classList.add("col"), this._$row1.appendChild(this._$leftCol), this._$centerCol.classList.add("center-col"), this._$centerCol.classList.add("col"), this._$row1.appendChild(this._$centerCol), this._$rightCol.classList.add("right-col"), this._$rightCol.classList.add("col"), this._$row1.appendChild(this._$rightCol), this._$centerBlock.classList.add("block"), this._$centerCol.appendChild(this._$centerBlock), this._$scoreWrap.classList.add("score-wrap"), this._$centerBlock.appendChild(this._$scoreWrap), this._$scoreTitle.classList.add("score-title"), this._$scoreTitle.innerText = this._language.scoreTitle, this._$scoreWrap.appendChild(this._$scoreTitle), this._$score.classList.add("score"), this._$score.innerText = `${ValueUtils.getHumanityNumber(1e5).text}`, this._$scoreWrap.appendChild(this._$score), this._shareButtons.setText(this._language.shareText), this._$centerBlock.appendChild(this._shareButtons.get$Container()), this._$buttons.classList.add("main-buttons"), this._$centerBlock.appendChild(this._$buttons), this._$reSpawn.classList.add("respawn"), this._$reSpawn.classList.add("button"), this._$reSpawn.innerText = this._language.reSpawn, this._$buttons.appendChild(this._$reSpawn), this._$help.classList.add("help"), this._$help.classList.add("block"), this._$help.classList.add("scroll"), this._$help.innerHTML = this._language.help.join(""), this._$rightCol.appendChild(this._$help), this._banner300x250.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-1.jpg`]), this._banner300x250.setDisableAdBlockText(this._language.disableAdBlock), this._banner300x250.get$Container().classList.add("block"), this._banner728x90.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-2.jpg`]), this._banner728x90.get$Container().classList.add("block"), this._anotherGame.setTitle(this._language.anotherGameTitle), this._anotherGame.setImageSrc("https://mineenergy.fun/games/mineenergy/images/previews/512x340.jpg"), this._anotherGame.setLinkHref(MineStrike_MineStrike.isCrazyGamesIframe() ? "https://www.crazygames.com/game/mineenergy" : "//mineenergy.fun"), this.$pgi.classList.add("pgi"), this.$pgi.classList.add("block"), this.$pgi.classList.add("scroll"), false === MineStrike_MineStrike.isCrazyGamesIframe() && np.modules.mod.get(PlayGamesIo_PlayGamesIo).ifPresent(e => {
        e.createWidget(this.$pgi, this._pgiOptions).then(e => this.pgiWidget = e);
      });
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), this._$reSpawn.addEventListener("click", () => this.reLoginToServer());
    }
    onGameStart() {
      this.setScore(0), this._shareButtons.hideText(), this.endLoading();
    }
    reLoginToServer() {
      false !== np.socket.isConnected() ? (np.device.isMobile() && np.canvas.enableFullScreen().then(() => np.canvas.lockScreenOrientation()).catch(e => console.log(e)), this.startLoading(), np.connector.events.emit("reLoginToServer")) : np.screens.show($d.Main);
    }
    startLoading() {
      this._$reSpawn.setAttribute("disabled", "disabled");
    }
    endLoading() {
      this._$reSpawn.removeAttribute("disabled");
    }
    onShow() {
      super.onShow(), np.screens.get$ScreensContainer().classList.add("dark"), this._banner300x250.show(), this._banner300x250.reFresh(), this._banner728x90.show(), this._banner728x90.reFresh(), this._shareButtons.showAnimate(), false === np.device.isMobileViaApplication() && MineEnergy_MineEnergy.isCrazyGamesIframe() && false === this._$rightCol.contains(this._anotherGame.get$Container()) && this._$rightCol.appendChild(this._anotherGame.get$Container()), np.modules.mod.get(Ads_Ads).ifPresent(e => {
        false === Ads_Ads.isAdsBlocked() && this._blockerReSpawn.block(e.getInstance().options.timeoutLookAdSeconds);
      }), false === MineEnergy_MineEnergy.isCrazyGamesIframe() && (this._$leftCol.appendChild(this.$pgi), np.modules.mod.get(GameAdsIo_GameAdsIo).ifPresent(e => {
        this._$leftCol.appendChild(e.getBanner().get$Element()), e.loadAd();
      }));
    }
    onHide() {
      super.onHide(), np.screens.get$ScreensContainer().classList.remove("dark");
    }
    setScore(e) {
      this._$score.innerText = ValueUtils.getHumanityNumber(e).text;
    }
    getShareButtonsOffer() {
      return StringUtils_StringUtils.insertValues(this._language.shareOffer, {points: this._$score.innerText});
    }
  }
  class AbilityMove_AbilityMove extends Ability_Ability {
    constructor(e) {
      super(e), this.listeners = new Listeners, this.enabled = true, this._sendingTransforms = true, this._oldTransformsPosition = new vector_Vector2_Vector2, this._oldTransformsVelocity = new vector_Vector2_Vector2, this._oldTransformsAngle = 0, this._canSendTransformsToServer = false, this._movementTicker = np.ticker.addToTicker({func: () => this.onTick(), tps: np.config.get(Xu.box2dTps), frameDependency: true}), this.enableSendingToServerTicker();
    }
    initialize() {
      super.initialize(), this.setListeners();
    }
    setListeners() {
      np.config.events.on("configUpdate", e => this.onConfigUpdate(e.options));
    }
    onTick() {
      false !== this.isEnabled() && this.applyMoveDirection();
    }
    onSetPhysicsTransforms(e) {
      super.onSetPhysicsTransforms(e), this._canSendTransformsToServer = true;
    }
    onConfigUpdate(e) {
      ValueUtils.isNotUndefinedAndNotNull(e.serverTps) && this.reStartSendingToServerTicker();
    }
    reStartSendingToServerTicker() {
      this.disableSendingToServerTicker(), this.enableSendingToServerTicker();
    }
    enableSendingToServerTicker() {
      this._sendingToServerTicker || (this._sendingToServerTicker = np.ticker.addToTicker({func: () => this.sendClientTransforms(), tps: np.config.get(Xu.serverTps), frameDependency: true}));
    }
    disableSendingToServerTicker() {
      this._sendingToServerTicker && (np.ticker.removeFromTicker(this._sendingToServerTicker), this._sendingToServerTicker = null);
    }
    sendClientTransforms() {
      false !== this._sendingTransforms && false !== this._canSendTransformsToServer && np.getMyPlayer().map(e => e.abilities.getAbility(AbilityBox2d_AbilityBox2d)).filter(e => !!e.orElse(false)).map(e => e.get()).filter(e => e.attachedToServer).filter(e => e.attachedToParent).filter(e => e.gotFirstTransforms).ifPresent(e => {
        let t = false;
        ValueUtils.isVector2Changed(this._oldTransformsPosition, e.getPosition(), 1) && (t = true), ValueUtils.isVector2Changed(this._oldTransformsVelocity, e.getVelocity(), 0.1) && (t = true), ValueUtils.isNumberChanged(this._oldTransformsAngle, e.getAngle(), 0.1) && (t = true), false !== t && (this._oldTransformsPosition.copy(e.getPosition()), this._oldTransformsVelocity.copy(e.getVelocity()), this._oldTransformsAngle = e.getAngle(), this._canSendTransformsToServer = false, np.socket.send("transforms", this.getClientTransforms(e)));
      });
    }
    getClientTransforms(e) {
      return {position: e.getPosition().toObject(), angle: e.getAngle(), velocity: e.getVelocity().toObject()};
    }
    enable() {
      this.enabled = true;
    }
    disable() {
      this.enabled = false;
    }
    isEnabled() {
      return this.enabled;
    }
    destroy() {
      super.destroy(), this.listeners.destroy(), np.ticker.removeFromTicker(this._movementTicker), np.ticker.removeFromTicker(this._sendingToServerTicker);
    }
  }
  class MineStrikerAbilityMove_MineStrikerAbilityMove extends AbilityMove_AbilityMove {
    constructor() {
      super(...arguments), this._velocity = vector_Vector2_Vector2.RIGHT.clone(), this._stopKeyDowned = false, this._serverVelocity = new vector_Vector2_Vector2, this._pushed = false, this._waitSendingTransformsToBox2d = false, this._waitReceivingTransformsVersionFromBox2d = 1;
    }
    setListeners() {
      super.setListeners(), np.input.keyBindings.getKeyBindings("attack").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", () => this.onDownMouseLmb()))), np.input.keyBindings.getKeyBindings("stopMovement").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", () => this.onDownSpace()))), np.input.keyBindings.getKeyBindings("stopMovement").ifPresent(e => e.forEach(e => e.events.on("allKeysUp", () => this.onUpSpace())));
    }
    onDownMouseLmb() {
      this.sendClientTransforms();
    }
    onDownSpace() {
      this._stopKeyDowned = true;
    }
    onUpSpace() {
      this._stopKeyDowned = false;
    }
    onSetPhysicsTransforms(e) {
      super.onSetPhysicsTransforms(e), this._waitReceivingTransformsVersionFromBox2d === e.transformsVersion && (this._waitReceivingTransformsVersionFromBox2d = 0, this._sendingTransforms = true);
    }
    applyMoveDirection() {
      this.parentEntity.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        if (this._pushed) e.setVelocity(this._serverVelocity); else {
          let t = 0;
          const n = 2;
          t = np.device.isMobile() ? np.screens.get($d.Game, game_GameScreen_GameScreen).getJoystickAngle() : np.input.mouse.getAngle();
          const i = ValueUtils.smoothAngle(t, this._velocity.angle(), n);
          this._velocity.copy(vector_Vector2_Vector2.RIGHT).normalize().rotate(i), false === this.parentEntity.isAttacking() && e.setAngle(this._velocity.angle());
          const r = e.setVelocity(this._stopKeyDowned || this.parentEntity.isAttacking() ? vector_Vector2_Vector2.ZERO : this._velocity);
          this._waitSendingTransformsToBox2d && (this._waitSendingTransformsToBox2d = false, this._waitReceivingTransformsVersionFromBox2d = r);
        }
      });
    }
  }
  class EntityMineStrikerI_EntityMineStrikerI extends EntityMineStriker_EntityMineStriker {
    constructor() {
      super(...arguments), this.cacheable = false, this.alwaysDisplayed = true;
    }
    construct() {
      super.construct(), np.started && this.abilities.addAbilities(new MineStrikerAbilityMove_MineStrikerAbilityMove(this));
    }
    onSpawn() {
      super.onSpawn(), np.started && (this.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        e.syncWithServer.angularVelocity = false, e.syncWithServer.velocity = false, e.syncWithServer.angle = false, e.syncWithServer.position = false, e.syncWithBox2d.velocity = false;
      }), np.connector.setUserName(this.serverProperties.name)), np.canvas.camera.attachToEntity(this.uuid), np.ears.attachToEntity(this.uuid), this.updateLvlBar();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), (ValueUtils.isNumber(e.level) || ValueUtils.isNumber(e.levelProgress)) && this.updateLvlBar();
    }
    updateLvlBar() {
      np.screens.has($d.Game) && np.screens.get($d.Game, game_GameScreen_GameScreen).getLvlBar().setLevel(this.serverProperties.level).setProgress(this.serverProperties.levelProgress);
    }
    destroy() {
      super.destroy(), np.device.isMobile() ? np.screens.get($d.MobileReSpawn, MobileReSpawnScreen_MobileReSpawnScreen).setScore(Math.round(this.serverProperties.experience)) : np.screens.get($d.ReSpawn, ReSpawnScreen_ReSpawnScreen).setScore(Math.round(this.serverProperties.experience)), np.ears.deAttachFromEntity(this.uuid);
    }
  }
  const Wd = {ENTITY_PLAYER: EntityMineStriker_EntityMineStriker, EntityPlayerI: class extends EntityMineStriker_EntityMineStriker {
    constructor() {
      super(...arguments), this.cacheable = false, this.alwaysDisplayed = true;
    }
    construct() {
      super.construct(), np.started && this.abilities.addAbilities(new MineStrikerAbilityMove_MineStrikerAbilityMove(this));
    }
    onSpawn() {
      super.onSpawn(), np.started && (this.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        e.syncWithServer.angularVelocity = false, e.syncWithServer.velocity = false, e.syncWithServer.angle = false, e.syncWithServer.position = false, e.syncWithBox2d.velocity = false;
      }), np.connector.setUserName(this.serverProperties.name)), np.canvas.camera.attachToEntity(this.uuid), np.ears.attachToEntity(this.uuid), this.updateLvlBar();
    }
    onUpdateServerProperties(e) {
      super.onUpdateServerProperties(e), (ValueUtils.isNumber(e.level) || ValueUtils.isNumber(e.levelProgress)) && this.updateLvlBar();
    }
    updateLvlBar() {
      np.screens.has($d.Game) && np.screens.get($d.Game, game_GameScreen_GameScreen).getLvlBar().setLevel(this.serverProperties.level).setProgress(this.serverProperties.levelProgress);
    }
    destroy() {
      super.destroy(), np.device.isMobile() ? np.screens.get($d.MobileReSpawn, MobileReSpawnScreen_MobileReSpawnScreen).setScore(Math.round(this.serverProperties.experience)) : np.screens.get($d.ReSpawn, ReSpawnScreen_ReSpawnScreen).setScore(Math.round(this.serverProperties.experience)), np.ears.deAttachFromEntity(this.uuid);
    }
  }, ENTITY_FOOD_GOLDEN_APPLE: class extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/golden_apple.png";
    }
  }, ENTITY_FOOD_CAKE: class extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cake.png";
    }
  }, ENTITY_FOOD_COOKED_CHICKEN: class extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cooked_chicken.png";
    }
  }, ENTITY_FOOD_COOKED_SALMON: class extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cooked_salmon.png";
    }
  }, ENTITY_FOOD_COOKIE: class extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/cookie.png";
    }
  }, ENTITY_FOOD_POISONOUS_POTATO: class extends AbstractEntityFood_AbstractEntityFood {
    getTexture() {
      return "food/poisonous_potato.png";
    }
  }, ENTITY_ARMOR_IRON: class extends AbstractEntityArmor_AbstractEntityArmor {
    getTexture() {
      return "armors/iron_helmet.png";
    }
  }, ENTITY_ARMOR_GOLD: class extends AbstractEntityArmor_AbstractEntityArmor {
    getTexture() {
      return "armors/golden_helmet.png";
    }
  }, ENTITY_ARMOR_DIAMOND: class extends AbstractEntityArmor_AbstractEntityArmor {
    getTexture() {
      return "armors/diamond_helmet.png";
    }
  }}, Xd = ["players/steve.png", "players/bee.png", "players/pumpkin.png", "players/fish.png", "players/cat.png", "players/pig.png", "players/zombie.png", "players/skeleton.png", "players/creeper.png", "players/drowned.png", "players/enderman.png", "players/zombie_pigman.png", "players/blaze.png", "players/witch.png", "players/herobrine.png", "helmets/diamond_layer_1.png", "helmets/gold_layer_1.png", "helmets/iron_layer_1.png", "armors/diamond_helmet.png", "armors/golden_helmet.png", "armors/iron_helmet.png", "weapons/wooden_sword.png", "weapons/dandelion.png", "weapons/stick.png", "weapons/fishing_rod_cast.png", "weapons/stone_sword.png", "weapons/stone_pickaxe.png", "weapons/iron_shovel.png", "weapons/bone.png", "weapons/iron_pickaxe.png", "weapons/trident.png", "weapons/diamond_sword.png", "weapons/golden_sword.png", "weapons/blaze_rod.png", "weapons/enchanted_diamond_sword.png", "weapons/nano_saber.png", "food/golden_apple.png", "food/cooked_chicken.png", "food/cooked_salmon.png", "food/cookie.png", "food/cake.png", "food/poisonous_potato.png", "effects/particles/big-smoke.png", "effects/particles/generic.png"];
  class FxParticle {
    constructor(e) {
      this._data = e;
    }
  }
  class FxParticleExplosion_FxParticleExplosion extends FxParticle {
    constructor(e) {
      super(e), e.radius = 6 * e.radius, this.spawnParticle(e), np.canvas.camera.attachedEntity.ifPresent(t => {
        let n = 1 - vector_Vector2_Vector2.fromObject(e.pos).subtract(vector_Vector2_Vector2.fromVector3(t.position)).length() / (1.5 * e.radius);
        n = Math.max(n, 0);
        const i = e.radius / 20 * n;
        np.canvas.camera.shake(2e3, i);
      });
    }
    spawnParticle(e) {
      this.explode(vector_Vector2_Vector2.fromObject(e.pos), e.radius / 16);
    }
    explode(e, t) {
      this.spawnExplosionParticles(e.toVector3(), t), this.spawnExplosionBigSmokeParticles(e.toVector3(), t), this.spawnExplosionSmokeParticles(e.toVector3(), t);
    }
    spawnExplosionParticles(e, t) {
      const n = Randomize_Randomize.getRandomInt(2, 3);
      for (let i = 0; i < n; i++) this.spawnExplosionParticle(e, t);
    }
    spawnExplosionBigSmokeParticles(e, t) {
      const n = Randomize_Randomize.getRandomInt(6, 8);
      for (let i = 0; i < n; i++) this.spawnExplosionBigSmokeParticle(e, t);
    }
    spawnExplosionSmokeParticles(e, t) {
      const n = Randomize_Randomize.getRandomInt(6, 8);
      for (let i = 0; i < n; i++) this.spawnExplosionSmokeParticle(e, t, 2 * Math.PI / n * (i + 1));
    }
    spawnExplosionParticle(e, t) {
      const n = 2 * t;
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(2 * n, 3 * n)), position: e.clone(), offset: new vector_Vector3_Vector3(0, 0, 64), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(100, 100, 100, 255, 255, 255).toGrayScale(), texture: "effects/particles/explosion.png", animateTiles: new vector_Vector2_Vector2(1, 16), animateEveryFrame: 1, spawnAroundRadius: t, spawnTimeoutFrames: Randomize_Randomize.getRandomInt(0, 15), transparent: true, receiveLight: true});
    }
    spawnExplosionBigSmokeParticle(e, t) {
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(t, 1.5 * t)), position: e.clone(), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(100, 100, 100, 255, 255, 255).toGrayScale(), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), spawnAroundRadius: 2 * t, spawnTimeoutFrames: Randomize_Randomize.getRandomInt(0, 15), animateEveryFrame: Randomize_Randomize.getRandomInt(20, 40), animateInverse: true, poolName: "explosion-big-smoke", transparent: true, receiveLight: true});
    }
    spawnExplosionSmokeParticle(e, t, n) {
      const i = vector_Vector2_Vector2.IDENTITY.clone().rotate(n).normalize().multiplyScalar(Randomize_Randomize.getRandomFloat(2, 3));
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(0.5 * t, t)), position: e.clone().add(i.toVector3().multiplyScalar(Randomize_Randomize.getRandomFloat(0, t / i.length()))), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: i.toVector3(Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(0, 0, 0, 100, 100, 100).toGrayScale(), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), animateEveryFrame: Randomize_Randomize.getRandomInt(10, 15), animateInverse: true, poolName: "explosion-smoke", transparent: true, receiveLight: true});
    }
  }
  var Yd, Jd;
  !function (e) {
    e[e.CODE_NORMAL_DISCONNECT = 0] = "CODE_NORMAL_DISCONNECT", e[e.CODE_FORCE_DISCONNECT = 1] = "CODE_FORCE_DISCONNECT", e[e.CODE_REPLACE_SESSION = 2] = "CODE_REPLACE_SESSION", e[e.CODE_EMPTY = 3] = "CODE_EMPTY", e[e.CODE_SERVER_STOP = 4] = "CODE_SERVER_STOP", e[e.CODE_ROOM_DESTROY = 5] = "CODE_ROOM_DESTROY", e[e.CODE_ROOM_NOT_ACTIVE = 6] = "CODE_ROOM_NOT_ACTIVE", e[e.CODE_SERVER_CLOSED = 7] = "CODE_SERVER_CLOSED", e[e.CODE_AUTH_FAILED = 8] = "CODE_AUTH_FAILED", e[e.CODE_SERVER_FULL = 9] = "CODE_SERVER_FULL", e[e.CODE_KEEP_ALIVE_TIMEOUT = 10] = "CODE_KEEP_ALIVE_TIMEOUT", e[e.CODE_INVALID_STATE = 11] = "CODE_INVALID_STATE", e[e.CODE_RESET_NOT_ALLOWED = 12] = "CODE_RESET_NOT_ALLOWED", e[e.CODE_NEW_SERVER_RELEASE = 13] = "CODE_NEW_SERVER_RELEASE", e[e.CODE_KICK = 14] = "CODE_KICK", e[e.CODE_SERVER_RESTART = 15] = "CODE_SERVER_RESTART", e[e.CODE_CUSTOM = 100] = "CODE_CUSTOM";
  }(Yd || (Yd = {}));
  class ConnectScreen_ConnectScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(171)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$status = document.createElement("div"), this._$text = document.createElement("div"), this._$inMainMenu = document.createElement("button"), this._reconnectionCount = 0, this._knowCloseSessionCode = false, this._reconnectSecondsInterval = 10, this._waitSecondsServerRestart = 60, this._waitSecondsUnknownReason = 10, this._gettingServerInfo = false, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$container.classList.add("container"), this.get$Screen().appendChild(this._$container), this._$status.classList.add("status"), this._$container.appendChild(this._$status), this._$text.classList.add("text"), this._$container.appendChild(this._$text), this._$inMainMenu.classList.add("button"), this._$inMainMenu.classList.add("in-main-menu"), this._$inMainMenu.innerText = this._language.inMainScreen, this._$container.appendChild(this._$inMainMenu);
    }
    setListeners() {
      np.socket.events.on("connect", () => this.onSocketConnect()), np.socket.events.on("reconnecting", e => this.onSocketReconnecting(e)), np.socket.events.on("disconnect", e => this.onSocketDisconnect(e)), np.socket.events.on("error", () => this.onSocketError()), np.socket.events.on("connectError", () => this.connectError()), np.events.on("gamePlay", () => this.onGamePlay()), np.connector.events.on("loginToServer", () => this.onLoginToServer()).setPriority(2), np.connector.events.on("reLoginToServer", () => this.onReLoginToServer()).setPriority(2), this._$inMainMenu.addEventListener("click", () => this.onClickInMainMenu());
    }
    onGamePlay() {
      this.setStatus(this._language.statuses.connecting), this.show();
    }
    onSocketConnect() {}
    onSocketReconnecting(e) {
      this.reconnectionCount = e;
    }
    onSocketError() {}
    connectError() {}
    onLoginToServer() {
      this.setStatus(this._language.statuses.login);
    }
    onReLoginToServer() {
      this.setStatus(this._language.statuses.reLogin);
    }
    onSocketDisconnect(e) {
      false !== np.started && (this.show(), ValueUtils.isNotUndefinedAndNotNull(this._closeSessionCode) && this._knowCloseSessionCode || this.onDisconnect());
    }
    onCloseSession(e) {
      if (this._closeSessionCode = e, Yd[e]) switch (this._knowCloseSessionCode = true, this._closeSessionCode) {
        case Yd.CODE_REPLACE_SESSION:
          this.onCodeReplaceSession();
          break;
        case Yd.CODE_SERVER_STOP:
          this.onCodeServerStop();
          break;
        case Yd.CODE_ROOM_DESTROY:
          this.onCodeRoomDestroy();
          break;
        case Yd.CODE_ROOM_NOT_ACTIVE:
          this.onCodeRoomNotActive();
          break;
        case Yd.CODE_SERVER_CLOSED:
          this.onCodeServerClosed();
          break;
        case Yd.CODE_AUTH_FAILED:
          this.onCodeAuthFailed();
          break;
        case Yd.CODE_SERVER_FULL:
          this.onCodeServerFull();
          break;
        case Yd.CODE_KEEP_ALIVE_TIMEOUT:
          this.onCodeKeepAliveTimeout();
          break;
        case Yd.CODE_INVALID_STATE:
          this.onCodeInvalidState();
          break;
        case Yd.CODE_RESET_NOT_ALLOWED:
          this.onCodeResetNotAllowed();
          break;
        case Yd.CODE_NEW_SERVER_RELEASE:
          this.onCodeNewServerRelease();
          break;
        case Yd.CODE_KICK:
          this.onCodeKick();
          break;
        case Yd.CODE_SERVER_RESTART:
          this.onCodeServerRestart();
          break;
        default:
          this.showWith(this._language.codes.default.title, this._language.codes.default.text.join(""), true);
      } else console.warn(`Unknown close_session code: ${e}`);
    }
    onClickInMainMenu() {
      np.started = false, np.events.emit("gameEnd"), np.screens.show($d.Main);
    }
    onCodeReplaceSession() {
      const e = this._language.codes[Yd.CODE_REPLACE_SESSION];
      this.showWith(e.title, e.text, true);
    }
    onCodeServerStop() {
      this.showWith(this._language.codes[Yd.CODE_SERVER_STOP].title, "", true);
    }
    onCodeRoomDestroy() {
      this.showWith(this._language.codes[Yd.CODE_ROOM_DESTROY].title, "", true);
    }
    onCodeRoomNotActive() {
      this.showWith(this._language.codes[Yd.CODE_ROOM_NOT_ACTIVE].title, "", true);
    }
    onCodeServerClosed() {
      this.showWith(this._language.codes[Yd.CODE_SERVER_CLOSED].title, "", true);
    }
    onCodeAuthFailed() {
      this.showWith(this._language.codes[Yd.CODE_AUTH_FAILED].title, "", true);
    }
    onCodeServerFull() {
      this.showWith(this._language.codes[Yd.CODE_SERVER_FULL].title, "", true);
    }
    onCodeKeepAliveTimeout() {
      this.showWith(this._language.codes[Yd.CODE_KEEP_ALIVE_TIMEOUT].title, "", true);
    }
    onCodeInvalidState() {
      this.showWith(this._language.codes[Yd.CODE_INVALID_STATE].title, "", true);
    }
    onCodeResetNotAllowed() {
      this.showWith(this._language.codes[Yd.CODE_RESET_NOT_ALLOWED].title, "", true);
    }
    onCodeNewServerRelease() {
      const e = `${this._language.statuses.expectation} ${this._waitSecondsServerRestart} ${this._language.shortSeconds}`;
      this.showWith(e, this._language.codes[Yd.CODE_NEW_SERVER_RELEASE].text.join(""));
    }
    onCodeKick() {}
    onCodeServerRestart() {
      const e = `${this._language.statuses.expectation} ${this._waitSecondsServerRestart} ${this._language.shortSeconds}`;
      this.showWith(e, this._language.codes[Yd.CODE_SERVER_RESTART].text.join(""));
    }
    onDisconnect() {
      this.showWith(this._language.codes.default.title, this._language.codes.default.text.join(""), true);
    }
    setStatus(e) {
      this._$status.innerText = e;
    }
    set reconnectionCount (e) {
      this._reconnectionCount = e, this.reconnectionCount > 1 ? this.setStatus(`${this._language.statuses.connectionAttempt} ${this.reconnectionCount}`) : 1 === this.reconnectionCount && this.setStatus(`${this._language.statuses.connecting}`);
    }
    get reconnectionCount() {
      return this._reconnectionCount;
    }
    startTicker(e, t, n = false) {
      let i = e;
      this.setTicker(1, () => {
        (i -= 1) <= 0 ? (this.stopTicker(), this.startReconnectTicker(n)) : t(i);
      });
    }
    setTicker(e, t) {
      this.stopTicker(), this.stopReconnectTicker(), this._ticker = np.ticker.addToTicker({func: () => t(), tps: e});
    }
    stopTicker() {
      this._ticker && (np.ticker.removeFromTicker(this._ticker), this._ticker = null);
    }
    startReconnectTicker(e = false) {
      this.stopReconnectTicker(), this.tryConnect(e), this._reconnectTicker = np.ticker.addToTicker({func: () => this.tryConnect(e), tps: 1 / this._reconnectSecondsInterval});
    }
    stopReconnectTicker() {
      this._reconnectTicker && (np.ticker.removeFromTicker(this._reconnectTicker), this._reconnectTicker = null);
    }
    tryConnect(e = false) {
      this._gettingServerInfo || (np.socket.isConnected() ? this.onSocketConnect() : (this.reconnectionCount += 1, setTimeout(() => {
        e ? this.receiveServerInfo() : np.connector.connect();
      }, 1e3)));
    }
    receiveServerInfo() {
      this._gettingServerInfo || (this._gettingServerInfo = true, this.setStatus(this._language.statuses.receivingServerInfo), GameSiteApi_GameSiteApi.getAvailableServers().then(e => this.onGetAvailableServers(e.servers)).catch(e => this.onErrorGetAvailableServers(e)));
    }
    onGetAvailableServers(e) {
      this._gettingServerInfo = false;
      let t = false, n = false;
      for (const i in e) {
        const r = e[i];
        parseFloat(r.require_client_version) !== np.modules.mod.version && (t = true), `${r.ip}:${r.port}` === np.socket.getServerAddress() && (n = true);
      }
      const i = e[0];
      t && n ? (np.connector.setNeedConnectAfterReloadPage(), this.setStatus(this._language.statuses.clientWillAutoConnectToServer), setTimeout(() => location.reload(), 2e3)) : false === n ? (np.socket.setServerAddress(`${i.ip}:${i.port}`), np.connector.setNeedConnectAfterReloadPage(), this.setStatus(this._language.statuses.clientWillAutoConnectToServer), setTimeout(() => location.reload(), 2e3)) : (this.setStatus(this._language.statuses.connecting), np.connector.connect());
    }
    onErrorGetAvailableServers(e) {
      this.setStatus(this._language.statuses.errorReceivingServerInfo), this.showText(e), this.showInMainMenu(), this._gettingServerInfo = false;
    }
    onShow() {
      super.onShow();
    }
    onHide() {
      super.onHide(), this.reset();
    }
    showText(e) {
      0 !== e.length && (this._$text.innerHTML = e, this._$text.classList.add("show"));
    }
    hideText() {
      this._$text.classList.contains("show") && this._$text.classList.remove("show");
    }
    showInMainMenu() {
      this._$inMainMenu.classList.add("show");
    }
    hideInMainMenu() {
      this._$inMainMenu.classList.contains("show") && this._$inMainMenu.classList.remove("show");
    }
    showWith(e, t = "", n = false) {
      super.show(), this.setStatus(e), this.showText(t), n && this.showInMainMenu();
    }
    reset() {
      this.stopTicker(), this.stopReconnectTicker(), this._closeSessionCode = null, this._knowCloseSessionCode = false, this._gettingServerInfo = false, this.reconnectionCount = 0, this.hideText(), this.hideInMainMenu(), this.setStatus("");
    }
  }
  class GameOverScreen_GameOverScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(174)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$title = document.createElement("div"), this._$text = document.createElement("div"), this._showTimeoutMs = 1e3, this._showReSpawnScreenTimeoutMs = 3e3, this.putTemplate(), this.setListeners(), this.reset();
    }
    putTemplate() {
      this._$container.classList.add("container"), this.get$Screen().appendChild(this._$container), this._$title.classList.add("title"), this._$container.appendChild(this._$title), this._$text.classList.add("text"), this._$container.appendChild(this._$text);
    }
    setListeners() {
      np.events.on("gameOver", e => this.onGameOver(e)), np.socket.events.on("kick", e => this.onKick(e));
    }
    onGameOver(e) {
      this._killerUuid = null, "ENTITY_PLAYER" === e.killerType && np.myServerUuid !== e.killerUuid ? (this._killerUuid = e.killerUuid, this.onDead()) : this.onDead(), this.showWithTimeout();
    }
    onKick(e) {
      this._killerUuid = null, this.setTitle(this._language.kickedOut), this._$title.classList.add("kick"), this.showText(`${this._language.reason}: "${np.languages.parseText(e.message)}"`), this.showWithTimeout();
    }
    onKilled(e) {
      this.setTitle(this._language.dead), this._$title.classList.add("dead"), this.showText(`${e.serverProperties.name} ${this._language.killedYou}`);
    }
    onDead() {
      this.setTitle(this._language.dead), this._$title.classList.add("dead");
    }
    onShow() {
      super.onShow(), this._killerUuid && (np.entities.getEntityByServerUuid(this._killerUuid).ifPresent(e => this.onKilled(e)), this._killerUuid = null), setTimeout(() => {
        np.device.isMobile() ? np.screens.show($d.MobileReSpawn) : np.screens.show($d.ReSpawn);
      }, this._showReSpawnScreenTimeoutMs);
    }
    onHide() {
      super.onHide(), this.reset();
    }
    showWithTimeout(e = this._showTimeoutMs) {
      0 === e ? this.show() : setTimeout(() => this.show(), e);
    }
    setTitle(e) {
      this._$title.innerText = e;
    }
    showText(e) {
      0 !== e.length && (this._$text.innerHTML = e, this._$text.classList.add("show"));
    }
    hideText() {
      this._$text.classList.contains("show") && this._$text.classList.remove("show");
    }
    reset() {
      this.setTitle(""), this.hideText(), this._$title.classList.remove("dead"), this._$title.classList.remove("kick");
    }
  }
  class LeadersBoardPlayer_LeadersBoardPlayer {
    constructor(e, t) {
      this._$container = document.createElement("div"), this._$name = document.createElement("div"), this._$score = document.createElement("div"), this._index = e, this._data = t, this.putTemplate();
    }
    putTemplate() {
      this._$container.classList.add("player"), this._$name.classList.add("name"), this._$name.innerText = `${this._index + 1}. ${this._data.nickname}`, this._$container.appendChild(this._$name), this._$score.classList.add("score"), this._$score.innerText = ValueUtils.getHumanityNumber(this._data.total_score).text, this._$container.appendChild(this._$score);
    }
    get$Container() {
      return this._$container;
    }
  }
  !function (e) {
    e[e.TODAY = 0] = "TODAY", e[e.THREE_DAYS = 1] = "THREE_DAYS", e[e.WEEK = 2] = "WEEK";
  }(Jd || (Jd = {}));
  class LeadersBoard_LeadersBoard {
    constructor() {
      this._language = n(177)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$title = document.createElement("div"), this._$players = document.createElement("div"), this._$intervalWrap = document.createElement("div"), this._$interval = document.createElement("select"), this.putTemplate();
    }
    putTemplate() {
      this._$container.classList.add("block"), this._$container.classList.add("leaders-board"), this._$title.classList.add("title"), this._$container.appendChild(this._$title), this._$players.classList.add("players"), this._$container.appendChild(this._$players);
      for (const e in Jd) {
        if (false === this._language.interval.hasOwnProperty(e)) continue;
        const t = document.createElement("option");
        t.innerText = this._language.interval[e], t.value = e, this._$interval.appendChild(t);
      }
      this._$intervalWrap.classList.add("interval-wrap"), this._$container.appendChild(this._$intervalWrap), this._$interval.classList.add("interval"), this._$interval.addEventListener("change", () => this.onChangeInterval()), this._$intervalWrap.appendChild(this._$interval);
    }
    onChangeInterval() {
      this.update(Jd[this._$interval.value]);
    }
    get$Container() {
      return this._$container;
    }
    setTitle(e) {
      this._$title.innerHTML = e;
    }
    update(e = Jd.TODAY) {
      this._$container.classList.add("loading");
      const t = MineStrikeSiteApi_MineStrikeSiteApi.getLeadersBoard(e);
      return t.then(e => this.onUpdate(e)).catch(e => {}).then(() => this._$container.classList.remove("loading")), t;
    }
    onUpdate(e) {
      this.clear();
      for (let t = 0; t < e.board.length; t++) {
        const n = new LeadersBoardPlayer_LeadersBoardPlayer(t, e.board[t]);
        this._$players.appendChild(n.get$Container());
      }
    }
    clear() {
      DomUtils_DomUtils.cleanElement(this._$players);
    }
  }
  const Kd = n(14);
  class MainScreen_MainScreen extends Screen_Screen {
    constructor(e) {
      super(e), this.language = n(180)("./" + np.languages.activeLanguage + ".json"), this.$row1 = document.createElement("div"), this.$row2 = document.createElement("div"), this.$leftCol = document.createElement("div"), this.$centerCol = document.createElement("div"), this.$rightCol = document.createElement("div"), this.$aboutBlock = document.createElement("div"), this.$centerBlock = document.createElement("div"), this.$loginWrap = document.createElement("div"), this.$loginContainer = document.createElement("div"), this.$nicknameWrap = document.createElement("div"), this.$nickname = document.createElement("input"), this.$playButton = document.createElement("button"), this.$selectorsWrap = document.createElement("div"), this.$skins = document.createElement("div"), this.$partners = document.createElement("div"), this.$notMojang = document.createElement("div"), this.$pgi = document.createElement("div"), this._pgiOptions = {slugs: "mine-craft-io,crazy-steve-io,slithercraft.io,mineenergy.fun,crazybattle.fun,evowarriors-fun", count: 9}, this._banner300x250 = new AdBanner_AdBanner({id: "minestrike-fun_300x250", size: "300x250", $container: this.$leftCol}), this._banner728x90 = new AdBanner_AdBanner({id: "minestrike-fun_728x90", size: "728x90", $container: this.$row2}), this._firstPlay = true, this._shareButtons = new ShareButtons_ShareButtons({getOffer: () => this.language.shareButtonsOffer}), this._windowLoaded = false, this._leadersBoard = new LeadersBoard_LeadersBoard, this._filter = new Kd, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this.$row1.classList.add("row"), this.$row1.classList.add("row-1"), this._$screen.appendChild(this.$row1), this.$row2.classList.add("row"), this.$row2.classList.add("row-2"), this._$screen.appendChild(this.$row2), this.$leftCol.classList.add("col"), this.$leftCol.classList.add("left-col"), this.$row1.appendChild(this.$leftCol), this.$centerCol.classList.add("col"), this.$centerCol.classList.add("center-col"), this.$row1.appendChild(this.$centerCol), this.$rightCol.classList.add("col"), this.$rightCol.classList.add("right-col"), this.$row1.appendChild(this.$rightCol), this._leadersBoard.setTitle(this.language.leadersBoard), this.$rightCol.appendChild(this._leadersBoard.get$Container()), this.$centerBlock.classList.add("block"), this.$centerBlock.classList.add("login"), this.$centerCol.appendChild(this.$centerBlock), this.$loginWrap.classList.add("login-wrap"), this.$centerBlock.appendChild(this.$loginWrap), this.$loginContainer.classList.add("login-container"), this.$loginWrap.appendChild(this.$loginContainer), this.$nicknameWrap.classList.add("nickname-wrap"), this.$loginContainer.appendChild(this.$nicknameWrap), this.$nickname.classList.add("input"), this.$nickname.classList.add("nickname"), this.$nickname.placeholder = this.language.nickname, this.$nickname.maxLength = 15, this.$nickname.autocomplete = "off", this.$nicknameWrap.appendChild(this.$nickname), this.$playButton.classList.add("button"), this.$playButton.classList.add("play-button"), this.$playButton.classList.add("big"), this.$playButton.innerText = this.language.play, this.$loginContainer.appendChild(this.$playButton), np.modules.mod.get(GameFeedBack_GameFeedBack).ifPresent(e => e.setPlayButtonListener(this.$playButton)), this.$selectorsWrap.classList.add("selectors"), this.$centerBlock.appendChild(this.$selectorsWrap), this.$centerBlock.appendChild(this.$skins), this.$centerBlock.appendChild(this._shareButtons.get$Container()), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => {
        e.get$Selector().classList.add("select"), this.$selectorsWrap.appendChild(e.get$Selector());
      }), this.$aboutBlock.classList.add("block"), this.$aboutBlock.classList.add("about"), this.$aboutBlock.classList.add("scroll"), this.$aboutBlock.innerHTML = this.language.about.join(""), this.$centerCol.appendChild(this.$aboutBlock), false === np.device.isMobile() && (this.$partners.classList.add("partners"), this.addPartner(this.language.partners["playgamesio.net"], "playgamesio.net"), this.addPartner(this.language.partners["crazygames.com"], "crazygames.com"), this.addPartner(this.language.partners["iogames.space"], "iogames.space"), this.addPartner(this.language.partners["multoigri.ru"], "multoigri.ru"), this.addPartner(this.language.partners["igroutka.ru"], "igroutka.ru"), this.addPartner(this.language.partners["titotu.io"], "titotu.io"), this.addPartner(this.language.partners["kevin.games"], "kevin.games"), this.addPartner(this.language.partners["brightestgames.com"], "brightestgames.com"), this.addPartner(this.language.partners["vitalitygames.com"], "vitalitygames.com"), this.addPartner(this.language.partners["gamepix.com"], "gamepix.com"), this.addPartner(this.language.partners["play-games.com"], "play-games.com"), this._$screen.appendChild(this.$partners)), this.$notMojang.classList.add("not-mojang"), this.$notMojang.innerText = this.language.notMojang, this._$screen.appendChild(this.$notMojang), this._banner300x250.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-1.jpg`]), this._banner300x250.setDisableAdBlockText(this.language.disableAdBlock), this._banner300x250.get$Container().classList.add("block"), this._banner728x90.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-2.jpg`]), this._banner728x90.get$Container().classList.add("block"), this.$pgi.classList.add("pgi"), this.$pgi.classList.add("block"), this.$pgi.classList.add("scroll"), false === MineStrike_MineStrike.isCrazyGamesIframe() && np.modules.mod.get(PlayGamesIo_PlayGamesIo).ifPresent(e => {
        e.createWidget(this.$pgi, this._pgiOptions).then(e => this.pgiWidget = e);
      });
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.events.on("gameEnd", () => this.onGameEnd()), np.events.on("gameOver", () => this.onGameOver()), np.socket.events.on("connect", () => this.onSocketConnect()), np.connector.events.on("connectorSetUserName", () => this.onConnectorSetUserName()), np.window.events.on("windowLoaded", () => this.onWindowLoaded()), this.$playButton.addEventListener("click", e => this.onClickPlayButton()), this.$nickname.addEventListener("keydown", e => this.nameKeyDown(e));
    }
    onGameStart() {
      np.screens.get$Screens().style.backgroundImage = "none", this._firstPlay = false, np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => e.bgPlayer.stop());
    }
    onGameEnd() {}
    onGameOver() {
      np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.enable());
    }
    onSocketConnect() {
      np.connector.login();
    }
    onClickPlayButton() {
      np.device.isMobile() && np.canvas.enableFullScreen().then(() => np.canvas.lockScreenOrientation()).catch(e => console.log(e));
      const e = ChatColor_ChatColor.clearFromColors(this.$nickname.value);
      np.connector.connectionData.userName = e;
      try {
        np.connector.connectionData.userName = (null == e ? undefined : e.length) > 1 ? this._filter.clean(e) : e;
      } catch (e) {}
      np.events.emit("gamePlay");
    }
    onConnectorSetUserName() {
      this.$nickname.value = ChatColor_ChatColor.clearFromColors(np.connector.getUserName());
    }
    onWindowLoaded() {
      this._windowLoaded = true, np.screens.isActiveScreen($d.Main) && np.screens.isDisplaying() && this.tryPlayDeathRePlayer();
    }
    tryPlayDeathRePlayer() {
      np.started || np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => {
        e.bgPlayer.play().then(() => np.canvas.startDraw()).catch(e => {});
      });
    }
    onShow() {
      super.onShow(), false === np.device.isMobile() && this.$nickname.focus(), np.screens.get$ScreensContainer().classList.add("dark"), np.connector.disconnect(), this._banner300x250.show(), this._banner300x250.reFresh(), this._banner728x90.show(), this._banner728x90.reFresh(), np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.enable()), np.modules.mod.get(ChangeLog_ChangeLog).ifPresent(e => this.$rightCol.appendChild(e.get$Container())), false === this._firstPlay ? this.tryPlayDeathRePlayer() : this._windowLoaded && this.tryPlayDeathRePlayer(), this._leadersBoard.update(), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => e.startUpdating()), false === MineStrike_MineStrike.isCrazyGamesIframe() && (this.$leftCol.appendChild(this.$pgi), np.modules.mod.get(GameAdsIo_GameAdsIo).ifPresent(e => {
        this.$leftCol.appendChild(e.getBanner().get$Element()), e.loadAd();
      }));
    }
    onHide() {
      super.onHide(), np.screens.get$ScreensContainer().classList.remove("dark"), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => e.stopUpdating());
    }
    nameKeyDown(e) {
      ad[e.code] === ad.Enter && this.$playButton.click();
    }
    addPartner(e, t, n = "") {
      if (window.location !== window.parent.location && !~document.referrer.indexOf(t)) return;
      n && n.length && (n += ":");
      const i = document.createElement("a");
      i.classList.add("partner"), i.innerText = e, i.href = `${n}//${t}`, i.target = "_blank", this.$partners.appendChild(i);
    }
  }
  class MobileMainScreen_MobileMainScreen extends Screen_Screen {
    constructor(e) {
      super(e), this.language = n(183)("./" + np.languages.activeLanguage + ".json"), this.$row1 = document.createElement("div"), this.$row2 = document.createElement("div"), this.$leftCol = document.createElement("div"), this.$centerCol = document.createElement("div"), this.$rightCol = document.createElement("div"), this.$centerBlock = document.createElement("div"), this.$loginWrap = document.createElement("div"), this.$loginContainer = document.createElement("div"), this.$nicknameWrap = document.createElement("div"), this.$nickname = document.createElement("input"), this.$playButton = document.createElement("button"), this.$selectorsWrap = document.createElement("div"), this.$skins = document.createElement("div"), this.$buttonIcons = document.createElement("div"), this.$notMojang = document.createElement("div"), this._leadersBoard = new LeadersBoard_LeadersBoard, this._firstPlay = true, this._banner728x90 = new AdBanner_AdBanner({id: "minestrike-fun_728x90", size: "728x90", $container: this.$row2}), this._shareButtons = new ShareButtons_ShareButtons({getOffer: () => this.language.shareButtonsOffer}), this._windowLoaded = false, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this.$row1.classList.add("row"), this.$row1.classList.add("row-1"), this._$screen.appendChild(this.$row1), this.$row2.classList.add("row"), this.$row2.classList.add("row-2"), this._$screen.appendChild(this.$row2), this.$leftCol.classList.add("col"), this.$leftCol.classList.add("left-col"), this.$row1.appendChild(this.$leftCol), this.$centerCol.classList.add("col"), this.$centerCol.classList.add("center-col"), this.$row1.appendChild(this.$centerCol), this.$rightCol.classList.add("col"), this.$rightCol.classList.add("right-col"), this.$row1.appendChild(this.$rightCol), this._leadersBoard.setTitle(this.language.leadersBoard), this.$rightCol.appendChild(this._leadersBoard.get$Container()), this.$centerBlock.classList.add("block"), this.$centerBlock.classList.add("login"), this.$centerCol.appendChild(this.$centerBlock), this.$loginWrap.classList.add("login-wrap"), this.$centerBlock.appendChild(this.$loginWrap), this.$loginContainer.classList.add("login-container"), this.$loginWrap.appendChild(this.$loginContainer), this.$nicknameWrap.classList.add("nickname-wrap"), this.$loginContainer.appendChild(this.$nicknameWrap), this.$nickname.classList.add("input"), this.$nickname.classList.add("nickname"), this.$nickname.placeholder = this.language.nickname, this.$nickname.maxLength = 15, this.$nickname.autocomplete = "off", this.$nicknameWrap.appendChild(this.$nickname), this.$playButton.classList.add("button"), this.$playButton.classList.add("play-button"), this.$playButton.classList.add("big"), this.$playButton.innerText = this.language.play, this.$loginContainer.appendChild(this.$playButton), np.modules.mod.get(GameFeedBack_GameFeedBack).ifPresent(e => e.setPlayButtonListener(this.$playButton)), this.$selectorsWrap.classList.add("selectors"), this.$centerBlock.appendChild(this.$selectorsWrap), this.$centerBlock.appendChild(this.$skins), this.$centerBlock.appendChild(this._shareButtons.get$Container()), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => {
        e.get$Selector().classList.add("select"), this.$selectorsWrap.appendChild(e.get$Selector());
      }), this.$buttonIcons.classList.add("button-icons"), this._$screen.appendChild(this.$buttonIcons), this.$notMojang.classList.add("not-mojang"), this.$notMojang.innerText = this.language.notMojang, this._$screen.appendChild(this.$notMojang), this._banner728x90.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-2.jpg`]), this._banner728x90.get$Container().classList.add("block");
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.events.on("gameEnd", () => this.onGameEnd()), np.events.on("gameOver", () => this.onGameOver()), np.socket.events.on("connect", () => this.onSocketConnect()), np.connector.events.on("connectorSetUserName", () => this.onConnectorSetUserName()), np.window.events.on("windowLoaded", () => this.onWindowLoaded()), this.$playButton.addEventListener("click", e => this.onClickPlayButton()), this.$nickname.addEventListener("keydown", e => this.nameKeyDown(e));
    }
    onGameStart() {
      np.screens.get$Screens().style.backgroundImage = "none", this._firstPlay = false, np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => e.bgPlayer.stop());
    }
    onGameEnd() {}
    onGameOver() {
      np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.enable());
    }
    onSocketConnect() {
      np.connector.login();
    }
    onClickPlayButton() {
      np.device.isMobile() && np.canvas.enableFullScreen().then(() => np.canvas.lockScreenOrientation()).catch(e => console.log(e)), np.connector.connectionData.userName = ChatColor_ChatColor.clearFromColors(this.$nickname.value), np.events.emit("gamePlay");
    }
    onConnectorSetUserName() {
      this.$nickname.value = ChatColor_ChatColor.clearFromColors(np.connector.getUserName());
    }
    onWindowLoaded() {
      this._windowLoaded = true, np.screens.isActiveScreen($d.MobileMain) && np.screens.isDisplaying() && this.tryPlayDeathRePlayer();
    }
    tryPlayDeathRePlayer() {
      np.started || np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => {
        e.bgPlayer.play().then(() => np.canvas.startDraw()).catch(e => console.log(e.message));
      });
    }
    onShow() {
      super.onShow(), false === np.device.isMobile() && this.$nickname.focus(), np.screens.get$ScreensContainer().classList.add("dark"), np.connector.disconnect(), np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.enable()), this._banner728x90.show(), this._banner728x90.reFresh(), false === this._firstPlay ? this.tryPlayDeathRePlayer() : this._windowLoaded && this.tryPlayDeathRePlayer(), this._leadersBoard.update(), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => e.startUpdating());
    }
    onHide() {
      super.onHide(), np.screens.get$ScreensContainer().classList.remove("dark"), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => e.stopUpdating());
    }
    nameKeyDown(e) {
      ad[e.code] === ad.Enter && this.$playButton.click();
    }
    onClickSettingsButton() {
      np.screens.show($d.Settings);
    }
  }
  class MineStrike_MineStrike extends Mod_Mod {
    constructor() {
      super(...arguments), this.name = "MineStrike", this.apiHost = location.host, this.apiPath = "/api", this.resourceHost = location.host, this.gameDirectory = "/games/minestrike", this.version = 0.028, this.defaultGeometry = kr, this.optimize2d = true;
    }
    beforeLoadCoreModules() {
      np.$container.classList.add("mineStrike");
    }
    beforeInitializeCoreModules() {
      np.world.workerClass = n(186), np.textures.texturesFilter = fe, Object.assign(np.entities.entitiesMap, Wd), np.sounds.soundsMap = {}, Object.assign(np.fonts.fontsMap, {defaultFont: `${this.gameDirectory}/fonts/minecraft.ttf`}), np.input.keyBindings.defaultKeyBindings = Hd;
    }
    afterInitializeCoreModules() {
      DomUtils_DomUtils.insertCss(n(187)), np.languages.mergeLanguage("en", n(41)), np.languages.mergeLanguage("ru", n(42)), np.canvas.getScene().background = utils_Color_Color.fromScalar(5940842).toThreeColor(), np.textures.preLoadTextures = Xd, this.loadModules(new Discord_Discord({url: "https://discord.gg/bRfaeTT"}), new DiscordBot_DiscordBot(`https://${this.apiHost}/api/discord-bot/`), new DevModeDetector_DevModeDetector, new BackgroundModule_BackgroundModule({backgrounds: [{textureName: "blocks/grass.png", cellSize: new vector_Vector2_Vector2(128, 128), renderOrder: -1}, {textureName: "blocks/lava_still.png", cellSize: new vector_Vector2_Vector2(128, 128), renderOrder: -2, tiles: new vector_Vector2_Vector2(1, 20), addSize: new vector_Vector2_Vector2(5e3, 5e3), animateEveryFrame: 8, animateLoopType: id.FORWARD_BACKWARD}]}), new WorldBorder_WorldBorder({width: 128, textureUrls: ["blocks/diamond_ore.png"]}), new FxParticles_FxParticles({map: {EXPLOSION: FxParticleExplosion_FxParticleExplosion}}), new GoogleAnalytics_GoogleAnalytics, new Chat_Chat({serverLanguage: n(188)("./" + np.languages.activeLanguage + ".json"), mainScreenName: $d.Main}), new GameFeedBack_GameFeedBack({channelId: "677786756157931521"}), new RayCastEntityProperties_RayCastEntityProperties, new GameMetrics_GameMetrics, new HasBlockAd_HasBlockAd, new Ads_Ads(MineStrike_MineStrike.isCrazyGamesIframe() ? new CrazyGamesAds_CrazyGamesAds({scriptUrl: "//sdk.crazygames.com/crazygames-sdk-v1.js", waitTimeBetweenShowPreRoll: MillisHelper.fromMinute(2)}) : MineStrike_MineStrike.isMyGamesIframe() ? new MyGamesAds_MyGamesAds({scriptUrl: "//store.my.games/app/18877/static/mailru.core.js", waitTimeBetweenShowPreRoll: MillisHelper.fromMinute(2)}) : new AdInPlayAds_AdInPlayAds({scriptUrl: "//api.adinplay.com/libs/aiptag/pub/MSK/minestrike.fun/tag.min.js", waitTimeBetweenShowPreRoll: MillisHelper.fromMinute(2)})), new GameMonetize_GameMonetize("bgkaq5jchbya9rff5jw6gnkwceukg16s"), new ChangeLog_ChangeLog({language: n(189)("./" + np.languages.activeLanguage + ".json")}), new ServerSelector_ServerSelector, new ClientVersionTracker_ClientVersionTracker, new VkApi_VkApi({apiId: 7320315}), new FacebookSdk_FacebookSdk({appId: "190401378701448"}), new DeathRePlayer_DeathRePlayer({recordLastSeconds: 10, recordSecondsAfterDead: 3}), new TestClients_TestClients, new GameAdsIo_GameAdsIo, new PlayGamesIo_PlayGamesIo), np.screens.add(new game_GameScreen_GameScreen($d.Game)), np.screens.add(new ConnectScreen_ConnectScreen($d.Connect)), np.screens.add(new GameOverScreen_GameOverScreen($d.GameOver)), np.device.isMobile() ? (np.screens.add(new MobileMainScreen_MobileMainScreen($d.MobileMain)), np.screens.add(new MobileReSpawnScreen_MobileReSpawnScreen($d.MobileReSpawn))) : (np.screens.add(new MainScreen_MainScreen($d.Main)), np.screens.add(new ReSpawnScreen_ReSpawnScreen($d.ReSpawn))), np.device.isMobile() ? np.screens.show($d.MobileMain) : np.screens.show($d.Main), np.canvas.startDraw();
    }
    static isCrazyGamesIframe() {
      return np.window.checkReferrer("crazygames.com");
    }
    static isMyGamesIframe() {
      return np.window.checkReferrer("my.games");
    }
  }
  class share_buttons_ShareButtons_ShareButtons {
    constructor(e) {
      this._language = n(192)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$text = document.createElement("div"), this._$buttons = document.createElement("div"), this._$twButton = document.createElement("button"), this._twParticle = new DomParticle_DomParticle, this._$twParticleContainer = document.createElement("div"), this._$twParticleContent = document.createElement("div"), this._$vkButton = document.createElement("button"), this._vkParticle = new DomParticle_DomParticle, this._$vkParticleContainer = document.createElement("div"), this._$vkParticleContent = document.createElement("div"), this._$vkAccessModalContainer = document.createElement("div"), this._$vkAccessModalButton = document.createElement("button"), this._vkAccessModalButtonFunc = () => {}, this._$discordButton = document.createElement("button"), this._discordShareLogChannelId = "", this._options = e, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$container.classList.add("share"), this._$text.classList.add("text"), this._$container.appendChild(this._$text), this._$buttons.classList.add("buttons"), this._$container.appendChild(this._$buttons), this._$twButton.classList.add("button"), this._$twButton.classList.add("tw-button"), this._$twButton.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.tw)), this._$buttons.appendChild(this._$twButton), this._$vkButton.classList.add("button"), this._$vkButton.classList.add("vk-button"), this._$vkButton.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.vk)), this._$buttons.appendChild(this._$vkButton), this._vkAccessModal = new DomModal_DomModal(this._language.vk.accessModalTitle, this._$vkAccessModalContainer), this._$vkAccessModalButton.classList.add("button"), this._$vkAccessModalButton.innerText = this._language.vk.giveAccessAndShare, this._$vkAccessModalContainer.appendChild(this._$vkAccessModalButton), this._$discordButton.classList.add("button"), this._$discordButton.classList.add("discord-button"), this._$discordButton.appendChild(SvgIconsHelper.getIcon(SvgIconsHelper.discord)), this._$buttons.appendChild(this._$discordButton), this._$twParticleContainer.classList.add("particle-container"), this._$twButton.appendChild(this._$twParticleContainer), this._$twParticleContent.innerText = this._language.tw.particle, this._$vkParticleContainer.classList.add("particle-container"), this._$vkButton.appendChild(this._$vkParticleContainer), this._$vkParticleContent.innerText = this._language.vk.particle;
    }
    setListeners() {
      this._$twButton.addEventListener("click", () => this.shareToTw()), this._$vkButton.addEventListener("click", () => this.onVkButtonClick()), this._$vkAccessModalButton.addEventListener("click", () => this._vkAccessModalButtonFunc()), this._vkAccessModalButtonFunc = () => this.tryGetVkAccess(), this._$discordButton.addEventListener("click", () => this.onClickDiscord());
    }
    shareToTw() {
      ShareUtils_ShareUtils.shareToTw(this.getOffer());
    }
    shareToFb() {
      ShareUtils_ShareUtils.shareToFb(this.getOffer(), "https://mineenergy.fun", "#mineenergyfun").then(() => this.onShareFb());
    }
    onShareFb() {
      this.sendToDiscordShareLog("Shared via FB");
    }
    onVkButtonClick() {
      this._vkAccessModal.show();
    }
    tryGetVkAccess() {
      ShareUtils_ShareUtils.vkGiveAccess().then(() => this.onGotVkAccess());
    }
    onGotVkAccess() {
      this._$vkAccessModalButton.innerText = this._language.share, this._vkAccessModalButtonFunc = () => this.shareViaVk();
    }
    shareViaVk() {
      ShareUtils_ShareUtils.shareToVk(this.getOffer()).then(() => this.onSharedViaVk());
    }
    onSharedViaVk() {
      this._vkAccessModalButtonFunc = () => this.tryGetVkAccess(), this._$vkAccessModalButton.innerText = this._language.vk.giveAccessAndShare, this._vkAccessModal.hide(), this.sendToDiscordShareLog("Shared via VK");
    }
    onClickDiscord() {
      np.modules.mod.get(Discord_Discord).ifPresent(e => DomUtils_DomUtils.openLink(e.options.url));
    }
    get$Container() {
      return this._$container;
    }
    setText(e) {
      this._$text.innerHTML = e;
    }
    getOffer() {
      return this._options.getOffer();
    }
    sendToDiscordShareLog(e) {
      np.modules.mod.get(DiscordBot_DiscordBot).ifPresent(t => t.say(this._discordShareLogChannelId, e));
    }
    showAnimate() {
      this.hideText(), setTimeout(() => this.spawnTwParticle(), 500);
    }
    spawnTwParticle() {
      this._$twButton.classList.add("scale");
      const e = vector_Vector2_Vector2.RIGHT.clone().rotate(Randomize_Randomize.getRandomFloat(5 * Math.PI / 8, 6 * Math.PI / 8)).multiplyScalar(0.25);
      this._twParticle.start({$parent: this._$twParticleContainer, $content: this._$twParticleContent, velocity: e, angle: e.angle(), opacitySpeedToDead: -0.025, opacitySpeedToShow: 0.08, opacity: 0, destroyOnEnd: false, onEnd: e => e.reSet()}), setTimeout(() => this._$twButton.classList.remove("scale"), 100);
    }
    spawnVkParticle() {
      this._$vkButton.classList.add("scale");
      const e = vector_Vector2_Vector2.RIGHT.clone().rotate(Randomize_Randomize.getRandomFloat(2 * Math.PI / 8, 3 * Math.PI / 8)).multiplyScalar(0.25);
      this._vkParticle.start({$parent: this._$vkParticleContainer, $content: this._$vkParticleContent, velocity: e, angle: e.angle(), opacitySpeedToDead: -0.025, opacitySpeedToShow: 0.08, opacity: 0, destroyOnEnd: false, onEnd: e => e.reSet()}), setTimeout(() => this._$vkButton.classList.remove("scale"), 100), setTimeout(() => this.showText(), 500);
    }
    showText() {
      this._$text.classList.add("show");
    }
    hideText() {
      this._$text.classList.remove("show");
    }
  }
  class re_spawn_ReSpawnScreen_ReSpawnScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(195)("./" + np.languages.activeLanguage + ".json"), this._$row1 = document.createElement("div"), this._$row2 = document.createElement("div"), this._$leftCol = document.createElement("div"), this._$centerCol = document.createElement("div"), this._$rightCol = document.createElement("div"), this._$centerBlock = document.createElement("div"), this._$scoreWrap = document.createElement("div"), this._$scoreTitle = document.createElement("div"), this._$score = document.createElement("div"), this._$buttons = document.createElement("div"), this._$help = document.createElement("div"), this._$reSpawn = document.createElement("button"), this._blockerReSpawn = new ButtonBlocker_ButtonBlocker(this._$reSpawn), this._banner300x250 = new AdBanner_AdBanner({id: "mineenergy-fun_300x250", size: "300x250", $container: MineEnergy_MineEnergy.isYandexGamesIframe() ? document.createElement("div") : this._$leftCol}), this.$pgi = document.createElement("div"), this._pgiOptions = {slugs: "mine-craft-io,crazy-steve-io,slithercraft.io,minestrike.fun,crazybattle.fun,evowarriors-fun", count: 9}, this._shareButtons = new share_buttons_ShareButtons_ShareButtons({getOffer: () => this.getShareButtonsOffer()}), this._anotherGame = new AnotherGame, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$row1.classList.add("row"), this._$row1.classList.add("row-1"), this._$screen.appendChild(this._$row1), this._$row2.classList.add("row"), this._$row2.classList.add("row-2"), this._$screen.appendChild(this._$row2), this._$leftCol.classList.add("left-col"), this._$leftCol.classList.add("col"), this._$row1.appendChild(this._$leftCol), this._$centerCol.classList.add("center-col"), this._$centerCol.classList.add("col"), this._$row1.appendChild(this._$centerCol), this._$rightCol.classList.add("right-col"), this._$rightCol.classList.add("col"), this._$row1.appendChild(this._$rightCol), this._$centerBlock.classList.add("block"), this._$centerCol.appendChild(this._$centerBlock), this._$scoreWrap.classList.add("score-wrap"), this._$centerBlock.appendChild(this._$scoreWrap), this._$scoreTitle.classList.add("score-title"), this._$scoreTitle.innerText = this._language.scoreTitle, this._$scoreWrap.appendChild(this._$scoreTitle), this._$score.classList.add("score"), this._$score.innerText = `${ValueUtils.getHumanityNumber(1e5).text}`, this._$scoreWrap.appendChild(this._$score), MineEnergy_MineEnergy.isYandexGamesIframe() || (this._shareButtons.setText(this._language.shareText), this._$centerBlock.appendChild(this._shareButtons.get$Container())), this._$buttons.classList.add("main-buttons"), this._$centerBlock.appendChild(this._$buttons), this._$reSpawn.classList.add("respawn"), this._$reSpawn.classList.add("button"), this._$reSpawn.innerText = this._language.reSpawn, this._$buttons.appendChild(this._$reSpawn), MineEnergy_MineEnergy.isYandexGamesIframe() || (this._$help.classList.add("help"), this._$help.classList.add("block"), this._$help.classList.add("scroll"), this._$help.innerHTML = this._language.help.join(""), this._$rightCol.appendChild(this._$help)), this._banner300x250.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-1.jpg`]), this._banner300x250.setDisableAdBlockText(this._language.disableAdBlock), this._banner300x250.get$Container().classList.add("block"), this._anotherGame.setTitle(this._language.anotherGameTitle), this._anotherGame.setImageSrc("//minestrike.fun/games/minestrike/images/previews/512x340.jpg"), this._anotherGame.setLinkHref(MineEnergy_MineEnergy.isCrazyGamesIframe() ? "//www.crazygames.com/game/minestrike-fun" : "//minestrike.fun"), this.$pgi.classList.add("pgi"), this.$pgi.classList.add("block"), this.$pgi.classList.add("scroll"), false === MineStrike_MineStrike.isCrazyGamesIframe() && np.modules.mod.get(PlayGamesIo_PlayGamesIo).ifPresent(e => {
        e.createWidget(this.$pgi, this._pgiOptions).then(e => this.pgiWidget = e);
      });
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), this._$reSpawn.addEventListener("click", () => this.reLoginToServer());
    }
    onGameStart() {
      this.setScore(0), this._shareButtons.hideText(), this.endLoading();
    }
    reLoginToServer() {
      false !== np.socket.isConnected() ? (np.device.isMobile() && np.canvas.enableFullScreen().then(() => np.canvas.lockScreenOrientation()).catch(e => console.log(e)), this.startLoading(), np.connector.events.emit("reLoginToServer")) : np.screens.show(Vd.Main);
    }
    startLoading() {
      this._$reSpawn.setAttribute("disabled", "disabled");
    }
    endLoading() {
      this._$reSpawn.removeAttribute("disabled");
    }
    onShow() {
      super.onShow(), np.screens.get$ScreensContainer().classList.add("dark"), this._banner300x250.show(), this._banner300x250.reFresh(), np.device.isMobileViaApplication() || MineEnergy_MineEnergy.isYandexGamesIframe() || (MineEnergy_MineEnergy.isCrazyGamesIframe() && false === this._$rightCol.contains(this._anotherGame.get$Container()) && this._$rightCol.appendChild(this._anotherGame.get$Container()), MineEnergy_MineEnergy.isCrazyGamesIframe() || MineEnergy_MineEnergy.isYandexGamesIframe() || (this._$leftCol.appendChild(this.$pgi), np.modules.mod.get(GameAdsIo_GameAdsIo).ifPresent(e => {
        this._$leftCol.appendChild(e.getBanner().get$Element()), e.loadAd();
      }))), this._shareButtons.showAnimate(), np.modules.mod.get(Ads_Ads).ifPresent(e => {
        false === Ads_Ads.isAdsBlocked() && this._blockerReSpawn.block(e.getInstance().options.timeoutLookAdSeconds);
      });
    }
    onHide() {
      super.onHide(), np.screens.get$ScreensContainer().classList.remove("dark");
    }
    setScore(e) {
      this._$score.innerText = ValueUtils.getHumanityNumber(e).text;
    }
    getShareButtonsOffer() {
      return StringUtils_StringUtils.insertValues(this._language.shareOffer, {points: this._$score.innerText});
    }
  }
  class MoveThroughKeyboard_MoveThroughKeyboard {
    constructor() {
      this._keysDowned = new Set, this._direction = new vector_Vector2_Vector2, this._lastMoveDirection = new vector_Vector2_Vector2, this.moveDirection = new vector_Vector2_Vector2, this.events = new Events_Events, np.input.keyBindings.getKeyBindings("moveUp").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", e => this.onKeyDown(e.keys[0])))), np.input.keyBindings.getKeyBindings("moveRight").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", e => this.onKeyDown(e.keys[0])))), np.input.keyBindings.getKeyBindings("moveDown").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", e => this.onKeyDown(e.keys[0])))), np.input.keyBindings.getKeyBindings("moveLeft").ifPresent(e => e.forEach(e => e.events.on("allKeysDown", e => this.onKeyDown(e.keys[0])))), np.input.keyBindings.getKeyBindings("moveUp").ifPresent(e => e.forEach(e => e.events.on("allKeysUp", e => this.onKeyUp(e.keys[0])))), np.input.keyBindings.getKeyBindings("moveRight").ifPresent(e => e.forEach(e => e.events.on("allKeysUp", e => this.onKeyUp(e.keys[0])))), np.input.keyBindings.getKeyBindings("moveDown").ifPresent(e => e.forEach(e => e.events.on("allKeysUp", e => this.onKeyUp(e.keys[0])))), np.input.keyBindings.getKeyBindings("moveLeft").ifPresent(e => e.forEach(e => e.events.on("allKeysUp", e => this.onKeyUp(e.keys[0]))));
    }
    onKeyDown(e) {
      this._keysDowned.add(e), this.keysToDirection(), this.tryUpdateMoveDirection();
    }
    onKeyUp(e) {
      this._keysDowned.delete(e), this.keysToDirection(), this.tryUpdateMoveDirection();
    }
    tryUpdateMoveDirection() {
      this.moveDirection.copy(this._direction), this.moveDirection.x === this._lastMoveDirection.x && this.moveDirection.y === this._lastMoveDirection.y || (this._lastMoveDirection.copy(this.moveDirection), this.events.emit("change"));
    }
    keysToDirection() {
      this._direction.setScalar(0);
      for (const e of this._keysDowned) this.keyToDirection(e);
    }
    keyToDirection(e) {
      np.input.keyBindings.getKeyBindings("moveUp").ifPresent(t => {
        t.forEach(t => {
          const n = t.getKeys();
          for (const t in n) n[t] === e && (this._direction.y = vector_Vector2_Vector2.UP.y);
        });
      }), np.input.keyBindings.getKeyBindings("moveLeft").ifPresent(t => {
        t.forEach(t => {
          const n = t.getKeys();
          for (const t in n) n[t] === e && (this._direction.x = vector_Vector2_Vector2.LEFT.x);
        });
      }), np.input.keyBindings.getKeyBindings("moveDown").ifPresent(t => {
        t.forEach(t => {
          const n = t.getKeys();
          for (const t in n) n[t] === e && (this._direction.y = vector_Vector2_Vector2.DOWN.y);
        });
      }), np.input.keyBindings.getKeyBindings("moveRight").ifPresent(t => {
        t.forEach(t => {
          const n = t.getKeys();
          for (const t in n) n[t] === e && (this._direction.x = vector_Vector2_Vector2.RIGHT.x);
        });
      });
    }
    getMoveDirection() {
      return this.moveDirection;
    }
  }
  class MineEnergySteveAbilityMove_MineEnergySteveAbilityMove extends AbilityMove_AbilityMove {
    constructor() {
      super(...arguments), this._moveThroughKeyboard = new MoveThroughKeyboard_MoveThroughKeyboard, this._mouseMoveSendCount = 0;
    }
    onSpawn() {
      super.onSpawn(), this._listeners.add(np.input.events.on("playerFreezeShot", () => this.onPlayerFreezeShot())), this._listeners.add(np.input.events.on("playerUnFreezeShot", () => this.onPlayerUnFreezeShot())), this._onGameMouseMoveListener = np.canvas.events.on("gameMouseUp", () => this.onGameMouseUp()), this._onGameMouseMoveListener = np.canvas.events.on("gameMouseDown", () => this.onGameMouseDown()), this._onGameMouseMoveListener = np.canvas.events.on("gameMouseMove", () => this.onGameMouseMove());
    }
    onPlayerFreezeShot() {
      this._onGameMouseMoveListener.disable();
    }
    onPlayerUnFreezeShot() {
      this._onGameMouseMoveListener.enable();
    }
    onGameMouseUp() {
      this.sendMouse();
    }
    onGameMouseDown() {
      this.sendMouse();
    }
    onGameMouseMove() {
      this.trySendMouse();
    }
    trySendMouse() {
      ++this._mouseMoveSendCount % 2 != 0 && this.sendMouse();
    }
    sendMouse() {
      np.input.mouse.getWorldPositionRelativeObservableEntity().ifPresent(e => np.socket.emit("clientMouse", {pos: {x: e.x, y: e.y}}));
    }
    applyMoveDirection() {
      this.parentEntity.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        e.setVelocity(this._moveThroughKeyboard.getMoveDirection()), e.setAngle(np.input.mouse.getAngle());
      });
    }
    onRemove() {
      super.onRemove(), this._onGameMouseMoveListener.destroy();
    }
  }
  class EntitySteveI_EntitySteveI extends EntitySteve_EntitySteve {
    constructor() {
      super(...arguments), this.cacheable = false, this.alwaysDisplayed = true;
    }
    construct() {
      super.construct(), np.started && (this.abilities.addAbilities(new MineEnergySteveAbilityMove_MineEnergySteveAbilityMove(this)), this.abilities.getAbility(AbilityHealth_AbilityHealth).ifPresent(e => e.setColor(utils_Color_Color.GREEN.clone())));
    }
    onSpawn() {
      super.onSpawn(), np.started && (this.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        e.syncWithServer.angularVelocity = false, e.syncWithServer.velocity = false, e.syncWithServer.angle = false, e.syncWithServer.position = false, e.syncWithBox2d.velocity = false;
      }), np.connector.setUserName(this.serverProperties.name)), np.canvas.camera.attachToEntity(this.uuid), np.ears.attachToEntity(this.uuid);
    }
    updateNickname() {
      this.skin.setNickname(""), np.connector.setUserName(this.serverProperties.name);
    }
    destroy() {
      super.destroy(), np.screens.get(Vd.ReSpawn, re_spawn_ReSpawnScreen_ReSpawnScreen).setScore(Math.round(this.serverProperties.resources.money)), np.ears.deAttachFromEntity(this.uuid);
    }
  }
  const Zd = {ENTITY_PLAYER: EntitySteve_EntitySteve, EntityPlayerI: class extends EntitySteve_EntitySteve {
    constructor() {
      super(...arguments), this.cacheable = false, this.alwaysDisplayed = true;
    }
    construct() {
      super.construct(), np.started && (this.abilities.addAbilities(new MineEnergySteveAbilityMove_MineEnergySteveAbilityMove(this)), this.abilities.getAbility(AbilityHealth_AbilityHealth).ifPresent(e => e.setColor(utils_Color_Color.GREEN.clone())));
    }
    onSpawn() {
      super.onSpawn(), np.started && (this.abilities.getAbility(AbilityBox2d_AbilityBox2d).ifPresent(e => {
        e.syncWithServer.angularVelocity = false, e.syncWithServer.velocity = false, e.syncWithServer.angle = false, e.syncWithServer.position = false, e.syncWithBox2d.velocity = false;
      }), np.connector.setUserName(this.serverProperties.name)), np.canvas.camera.attachToEntity(this.uuid), np.ears.attachToEntity(this.uuid);
    }
    updateNickname() {
      this.skin.setNickname(""), np.connector.setUserName(this.serverProperties.name);
    }
    destroy() {
      super.destroy(), np.screens.get(Vd.ReSpawn, re_spawn_ReSpawnScreen_ReSpawnScreen).setScore(Math.round(this.serverProperties.resources.money)), np.ears.deAttachFromEntity(this.uuid);
    }
  }, ENTITY_BLOCK_LIQUID_WATER: class extends AbstractEntityBlockLiquid_AbstractEntityBlockLiquid {
    constructor() {
      super(...arguments), this._transparent = true;
    }
    createSkin() {
      return new SkinAnimatedSprite_SkinAnimatedSprite({textureUrls: [this.getTexture()], tiles: new vector_Vector2_Vector2(1, 32), transparent: this._transparent, everyFrame: 4});
    }
    getInstancedData() {
      const e = super.getInstancedData();
      return e.textureTilesCount = new vector_Vector2_Vector2(1, 32), e.textureAnimationEveryFrame = 4, e;
    }
    getTexture() {
      return "blocks/liquid/water_still_overlay.png";
    }
  }, ENTITY_BLOCK_LIQUID_LAVA: class extends AbstractEntityBlockLiquid_AbstractEntityBlockLiquid {
    constructor() {
      super(...arguments), this._transparent = true;
    }
    createSkin() {
      return new SkinAnimatedSprite_SkinAnimatedSprite({textureUrls: [this.getTexture()], tiles: new vector_Vector2_Vector2(1, 20), transparent: this._transparent, everyFrame: 8});
    }
    getInstancedData() {
      const e = super.getInstancedData();
      return e.textureTilesCount = new vector_Vector2_Vector2(1, 20), e.textureAnimationEveryFrame = 8, e;
    }
    getTexture() {
      return "blocks/liquid/lava_still.png";
    }
  }, ENTITY_BLOCK_ORE_COAL: class extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/coal_ore.png";
    }
  }, ENTITY_BLOCK_ORE_IRON: class extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/iron_ore.png";
    }
  }, ENTITY_BLOCK_ORE_GOLD: class extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/gold_ore.png";
    }
  }, ENTITY_BLOCK_ORE_DIAMOND: class extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/diamond_ore.png";
    }
  }, ENTITY_BLOCK_ORE_URANIUM: class extends AbstractEntityBlockOre_AbstractEntityBlockOre {
    getTexture() {
      return "blocks/ores/uranium_ore.png";
    }
  }, ENTITY_BLOCK_MINER_COAL: class extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/coal-miner-block.png";
    }
  }, ENTITY_BLOCK_MINER_IRON: class extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/iron-miner-block.png";
    }
  }, ENTITY_BLOCK_MINER_GOLD: class extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/gold-miner-block.png";
    }
  }, ENTITY_BLOCK_MINER_DIAMOND: class extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/diamond-miner-block.png";
    }
  }, ENTITY_BLOCK_MINER_URANIUM: class extends AbstractEntityBlockMiner_AbstractEntityBlockMiner {
    constructor() {
      super(...arguments), this._pistonTextureName = "blocks/miners/miner-piston.png";
    }
    getTexture() {
      return "blocks/miners/uranium-miner-block.png";
    }
  }, ENTITY_BLOCK_GENERATOR_MANUAL: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/manual-generator.png";
    }
  }, ENTITY_BLOCK_GENERATOR_SOLAR: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/solar-generator.png";
    }
  }, ENTITY_BLOCK_GENERATOR_SOLAR_ADVANCED: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/advanced-solar-generator.png";
    }
  }, ENTITY_BLOCK_GENERATOR_WIND: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    onEnabled() {
      super.onEnabled(), this.skin && this.skin.start();
    }
    onDisabled() {
      super.onDisabled(), this.skin && this.skin.stop();
    }
    createSkin() {
      return new SkinWindGenerator_SkinWindGenerator({textureUrls: [this.getTexture()], rotor1TextureName: "blocks/generators/wind-generator-rotor-1.png", rotor2TextureName: "blocks/generators/wind-generator-rotor-2.png", borderTextureName: "blocks/generators/wind-generator-border.png", transparent: this._transparent, renderOrder: this._renderOrder});
    }
    isInstanced() {
      return false;
    }
    getTexture() {
      return "blocks/generators/wind-generator-block.png";
    }
  }, ENTITY_BLOCK_GENERATOR_COAL: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    constructor() {
      super(...arguments), this._enabledTextureName = "blocks/generators/coal-generator-enabled.png", this._disabledTextureName = "blocks/generators/coal-generator-disabled.png";
    }
    getTexture() {
      return this._disabledTextureName;
    }
    onEnabled() {
      super.onEnabled(), this.startSpawnParticles(), this.skin && this.skin.setTexture(this._enabledTextureName);
    }
    onDisabled() {
      super.onDisabled(), this.stopSpawnParticles(), this.skin && this.skin.setTexture(this._disabledTextureName);
    }
    isInstanced() {
      return false;
    }
    remove() {
      return this.stopSpawnParticles(), super.remove();
    }
    startSpawnParticles() {
      this._timerParticlesUuid || (this._timerParticlesUuid = np.canvas.setIntervalFrames(() => this.spawnParticles(), Randomize_Randomize.getRandomInt(30, 40)));
    }
    stopSpawnParticles() {
      this._timerParticlesUuid && (np.canvas.clearIntervalFrames(this._timerParticlesUuid), this._timerParticlesUuid = null);
    }
    spawnParticles() {
      Chance_Chance.get(80) && this.spawnFireParticle(), Chance_Chance.get(40) && this.spawnSmokeParticle();
    }
    spawnFireParticle() {
      const e = vector_Vector2_Vector2.DOWN.clone().normalize().rotate(this.rotation.getWithOffset().z).multiplyScalar(this.radius / 2), t = Randomize_Randomize.getRandomFloat(this.radius / 2, this.radius / 1.2);
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(t), position: this.position.clone().addScalarX(e.x).addScalarY(e.y), offset: new vector_Vector3_Vector3(0, 0, this.size.getScaledSize().divideScalar(2).addScalarZ(1).z), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.4, 0.4), Randomize_Randomize.getRandomFloat(0.25, 0.4), Randomize_Randomize.getRandomFloat(0, 1)), texture: "effects/particles/fire-1.png", animateTiles: new vector_Vector2_Vector2(1, 32), animateEveryFrame: 2, animateEndToDead: false, animateLoop: true, sizeSpeedToDead: 0.3, spawnAroundRadius: this.radius / 4, transparent: true, renderOrder: this._renderOrder});
    }
    spawnSmokeParticle() {
      const e = vector_Vector2_Vector2.DOWN.clone().normalize().rotate(this.rotation.getWithOffset().z).multiplyScalar(this.radius / 2), t = Randomize_Randomize.getRandomFloat(this.radius / 2, this.radius);
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(t), position: this.position.clone().addScalarX(e.x).addScalarY(e.y), offset: new vector_Vector3_Vector3(0, 0, this.size.getScaledSize().divideScalar(2).addScalarZ(1).z), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(2, 5)), opacity: Randomize_Randomize.getRandomFloat(0.7, 1), color: Randomize_Randomize.getRandomColor(0, 0, 0, 100, 100, 100).toGrayScale(), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), spawnAroundRadius: this.radius / 2, animateEveryFrame: 15, animateInverse: true, transparent: true, receiveLight: true, renderOrder: this._renderOrder});
    }
  }, ENTITY_BLOCK_GENERATOR_LAVA: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    constructor() {
      super(...arguments), this._enabledTextureName = "blocks/generators/lava-generator-enabled.png", this._disabledTextureName = "blocks/generators/lava-generator-disabled.png";
    }
    getTexture() {
      return this._disabledTextureName;
    }
    onEnabled() {
      super.onEnabled(), this.skin && this.skin.setTexture(this._enabledTextureName);
    }
    onDisabled() {
      super.onDisabled(), this.skin && this.skin.setTexture(this._disabledTextureName);
    }
    isInstanced() {
      return false;
    }
  }, ENTITY_BLOCK_GENERATOR_WATER: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    constructor() {
      super(...arguments), this._enabledTextureName = "blocks/generators/water-generator-enabled.png", this._disabledTextureName = "blocks/generators/water-generator-disabled.png";
    }
    getTexture() {
      return this._disabledTextureName;
    }
    onEnabled() {
      super.onEnabled(), this.skin && this.skin.setTexture(this._enabledTextureName);
    }
    onDisabled() {
      super.onDisabled(), this.skin && this.skin.setTexture(this._disabledTextureName);
    }
    isInstanced() {
      return false;
    }
  }, ENTITY_BLOCK_GENERATOR_NUCLEAR: class extends AbstractEntityBlockGenerator_AbstractEntityBlockGenerator {
    getTexture() {
      return "blocks/generators/nuclear-generator.png";
    }
  }, ENTITY_BLOCK_SELLER_MANUAL: class extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/manual-seller.png";
    }
  }, ENTITY_BLOCK_SELLER_SMALL: class extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/small-seller.png";
    }
  }, ENTITY_BLOCK_SELLER_BIG: class extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/big-seller.png";
    }
  }, ENTITY_BLOCK_SELLER_COAL: class extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/coal-seller.png";
    }
  }, ENTITY_BLOCK_SELLER_GOLDEN: class extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/golden-seller.png";
    }
  }, ENTITY_BLOCK_SELLER_DIAMOND: class extends AbstractEntityBlockSeller_AbstractEntityBlockSeller {
    getTexture() {
      return "blocks/sellers/diamond-seller.png";
    }
  }, ENTITY_BLOCK_BED: class extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/bed.png";
    }
  }, ENTITY_BLOCK_IRON: class extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/iron.png";
    }
  }, ENTITY_BLOCK_OBSIDIAN: class extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/obsidian.png";
    }
  }, ENTITY_BLOCK_REINFORCED_STONE: class extends AbstractEntityBlock_AbstractEntityBlock {
    getTexture() {
      return "blocks/defense/reinforced-stone.png";
    }
  }, ENTITY_BLOCK_TESLA_COIL_1000: EntityBlockTeslaCoil1000_EntityBlockTeslaCoil1000, ENTITY_BLOCK_TESLA_COIL_2000: class extends EntityBlockTeslaCoil1000_EntityBlockTeslaCoil1000 {
    getTexture() {
      return "blocks/defense/tesla-coil-2000.png";
    }
  }, ENTITY_BLOCK_TESLA_COIL_3000: class extends EntityBlockTeslaCoil1000_EntityBlockTeslaCoil1000 {
    getTexture() {
      return "blocks/defense/tesla-coil-3000.png";
    }
  }}, Qd = ["players/steve.png", "helmets/leather.png", "helmets/iron.png", "helmets/gold.png", "helmets/diamond.png", "helmets/nano.png", "helmets/quantum.png", "tools/wooden_pickaxe.png", "tools/iron_pickaxe.png", "tools/golden_pickaxe.png", "tools/diamond_pickaxe.png", "tools/drill.png", "tools/diamond_drill.png", "tools/wrench.png", "items/coal.png", "items/iron_ingot.png", "items/gold_ingot.png", "items/diamond.png", "items/uranium.png", "effects/particles/big-smoke.png", "effects/particles/generic.png", "blocks/grass.png", "blocks/bedrock.png", "blocks/defense/bed.png", "blocks/defense/iron.png", "blocks/defense/obsidian.png", "blocks/defense/reinforced-stone.png", "blocks/defense/tesla-coil.png", "blocks/defense/tesla-coil-improved.png", "blocks/defense/skull.png", "blocks/generators/manual-generator.png", "blocks/generators/solar-generator.png", "blocks/generators/wind-generator.png", "blocks/generators/wind-generator-block.png", "blocks/generators/wind-generator-rotor-1.png", "blocks/generators/wind-generator-rotor-2.png", "blocks/generators/coal-generator.png", "blocks/generators/coal-generator-enabled.png", "blocks/generators/coal-generator-disabled.png", "blocks/generators/water-generator.png", "blocks/generators/water-generator-enabled.png", "blocks/generators/water-generator-disabled.png", "blocks/generators/lava-generator.png", "blocks/generators/lava-generator-enabled.png", "blocks/generators/lava-generator-disabled.png", "blocks/generators/nuclear-generator.png", "blocks/liquid/water_still_overlay.png", "blocks/liquid/lava_still.png", "blocks/miners/miner-piston.png", "blocks/miners/coal-miner.png", "blocks/miners/coal-miner-block.png", "blocks/miners/iron-miner.png", "blocks/miners/iron-miner-block.png", "blocks/miners/gold-miner.png", "blocks/miners/gold-miner-block.png", "blocks/miners/diamond-miner.png", "blocks/miners/diamond-miner-block.png", "blocks/miners/uranium-miner.png", "blocks/miners/uranium-miner-block.png", "blocks/ores/coal_ore.png", "blocks/ores/iron_ore.png", "blocks/ores/gold_ore.png", "blocks/ores/diamond_ore.png", "blocks/ores/uranium_ore.png", "blocks/sellers/small-seller.png", "blocks/sellers/big-seller.png"];
  class explosion_FxParticleExplosion_FxParticleExplosion extends FxParticle {
    constructor(e) {
      super(e), e.radius = 6 * e.radius, this.spawnParticle(e), np.canvas.camera.attachedEntity.ifPresent(t => {
        let n = 1 - vector_Vector2_Vector2.fromObject(e.pos).subtract(vector_Vector2_Vector2.fromVector3(t.position)).length() / (1.5 * e.radius);
        n = Math.max(n, 0);
        const i = e.radius / 20 * n;
        np.canvas.camera.shake(2e3, i);
      });
    }
    spawnParticle(e) {
      this.explode(vector_Vector2_Vector2.fromObject(e.pos), e.radius / 16);
    }
    explode(e, t) {
      this.spawnExplosionParticles(e.toVector3(), t), this.spawnExplosionBigSmokeParticles(e.toVector3(), t), this.spawnExplosionSmokeParticles(e.toVector3(), t);
    }
    spawnExplosionParticles(e, t) {
      const n = Randomize_Randomize.getRandomInt(2, 3);
      for (let i = 0; i < n; i++) this.spawnExplosionParticle(e, t);
    }
    spawnExplosionBigSmokeParticles(e, t) {
      const n = Randomize_Randomize.getRandomInt(6, 8);
      for (let i = 0; i < n; i++) this.spawnExplosionBigSmokeParticle(e, t);
    }
    spawnExplosionSmokeParticles(e, t) {
      const n = Randomize_Randomize.getRandomInt(6, 8);
      for (let i = 0; i < n; i++) this.spawnExplosionSmokeParticle(e, t, 2 * Math.PI / n * (i + 1));
    }
    spawnExplosionParticle(e, t) {
      const n = 2 * t;
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(2 * n, 3 * n)), position: e.clone(), offset: new vector_Vector3_Vector3(0, 0, 64), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(100, 100, 100, 255, 255, 255).toGrayScale(), texture: "effects/particles/explosion.png", animateTiles: new vector_Vector2_Vector2(1, 16), animateEveryFrame: 1, spawnAroundRadius: t, spawnTimeoutFrames: Randomize_Randomize.getRandomInt(0, 15), transparent: true, receiveLight: true});
    }
    spawnExplosionBigSmokeParticle(e, t) {
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(t, 1.5 * t)), position: e.clone(), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: new vector_Vector3_Vector3(Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(-0.5, 0.5), Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(100, 100, 100, 255, 255, 255).toGrayScale(), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), spawnAroundRadius: 2 * t, spawnTimeoutFrames: Randomize_Randomize.getRandomInt(0, 15), animateEveryFrame: Randomize_Randomize.getRandomInt(20, 40), animateInverse: true, poolName: "explosion-big-smoke", transparent: true, receiveLight: true});
    }
    spawnExplosionSmokeParticle(e, t, n) {
      const i = vector_Vector2_Vector2.IDENTITY.clone().rotate(n).normalize().multiplyScalar(Randomize_Randomize.getRandomFloat(2, 3));
      np.particles.spawn(EntityParticle_EntityParticle, {size: vector_Vector3_Vector3.fromScalar(Randomize_Randomize.getRandomFloat(0.5 * t, t)), position: e.clone().add(i.toVector3().multiplyScalar(Randomize_Randomize.getRandomFloat(0, t / i.length()))), offset: new vector_Vector3_Vector3(0, 0, 64), velocity: i.toVector3(Randomize_Randomize.getRandomFloat(2, 5)), rotationZ: Randomize_Randomize.getRandomAngle(), color: Randomize_Randomize.getRandomColor(0, 0, 0, 100, 100, 100).toGrayScale(), texture: "effects/particles/generic.png", animateTiles: new vector_Vector2_Vector2(8, 1), animateEveryFrame: Randomize_Randomize.getRandomInt(10, 15), animateInverse: true, poolName: "explosion-smoke", transparent: true, receiveLight: true});
    }
  }
  class connect_ConnectScreen_ConnectScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(198)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$status = document.createElement("div"), this._$text = document.createElement("div"), this._$inMainMenu = document.createElement("button"), this._reconnectionCount = 0, this._knowCloseSessionCode = false, this._reconnectSecondsInterval = 10, this._waitSecondsServerRestart = 60, this._waitSecondsUnknownReason = 10, this._gettingServerInfo = false, this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this._$container.classList.add("container"), this.get$Screen().appendChild(this._$container), this._$status.classList.add("status"), this._$container.appendChild(this._$status), this._$text.classList.add("text"), this._$container.appendChild(this._$text), this._$inMainMenu.classList.add("button"), this._$inMainMenu.classList.add("in-main-menu"), this._$inMainMenu.innerText = this._language.inMainScreen, this._$container.appendChild(this._$inMainMenu);
    }
    setListeners() {
      np.socket.events.on("connect", () => this.onSocketConnect()), np.socket.events.on("reconnecting", e => this.onSocketReconnecting(e)), np.socket.events.on("disconnect", e => this.onSocketDisconnect(e)), np.socket.events.on("error", () => this.onSocketError()), np.socket.events.on("connectError", () => this.connectError()), np.socket.events.on("closeSession", e => this.onCloseSession(e.code)), np.events.on("gamePlay", () => this.onGamePlay()), np.connector.events.on("loginToServer", () => this.onLoginToServer()).setPriority(2), np.connector.events.on("reLoginToServer", () => this.onReLoginToServer()).setPriority(2), this._$inMainMenu.addEventListener("click", () => this.onClickInMainMenu());
    }
    onGamePlay() {
      this.setStatus(this._language.statuses.connecting), this.show();
    }
    onSocketConnect() {}
    onSocketReconnecting(e) {
      this.reconnectionCount = e;
    }
    onSocketError() {}
    connectError() {}
    onLoginToServer() {
      this.setStatus(this._language.statuses.login);
    }
    onReLoginToServer() {
      this.setStatus(this._language.statuses.reLogin);
    }
    onSocketDisconnect(e) {
      false !== np.started && (this.show(), ValueUtils.isNotUndefinedAndNotNull(this._closeSessionCode) && this._knowCloseSessionCode || this.onDisconnect());
    }
    onCloseSession(e) {
      if (this._closeSessionCode = e, Yd[e]) switch (this._knowCloseSessionCode = true, this._closeSessionCode) {
        case Yd.CODE_REPLACE_SESSION:
          this.onCodeReplaceSession();
          break;
        case Yd.CODE_SERVER_STOP:
          this.onCodeServerStop();
          break;
        case Yd.CODE_ROOM_DESTROY:
          this.onCodeRoomDestroy();
          break;
        case Yd.CODE_ROOM_NOT_ACTIVE:
          this.onCodeRoomNotActive();
          break;
        case Yd.CODE_SERVER_CLOSED:
          this.onCodeServerClosed();
          break;
        case Yd.CODE_AUTH_FAILED:
          this.onCodeAuthFailed();
          break;
        case Yd.CODE_SERVER_FULL:
          this.onCodeServerFull();
          break;
        case Yd.CODE_KEEP_ALIVE_TIMEOUT:
          this.onCodeKeepAliveTimeout();
          break;
        case Yd.CODE_INVALID_STATE:
          this.onCodeInvalidState();
          break;
        case Yd.CODE_RESET_NOT_ALLOWED:
          this.onCodeResetNotAllowed();
          break;
        case Yd.CODE_NEW_SERVER_RELEASE:
          this.onCodeNewServerRelease();
          break;
        case Yd.CODE_KICK:
          this.onCodeKick();
          break;
        case Yd.CODE_SERVER_RESTART:
          this.onCodeServerRestart();
          break;
        default:
          this.showWith(this._language.codes.default.title, this._language.codes.default.text.join(""), true);
      } else console.warn(`Unknown close_session code: ${e}`);
    }
    onClickInMainMenu() {
      np.started = false, np.events.emit("gameEnd"), np.screens.show(Vd.Main);
    }
    onCodeReplaceSession() {
      const e = this._language.codes[Yd.CODE_REPLACE_SESSION];
      this.showWith(e.title, e.text, true);
    }
    onCodeServerStop() {
      this.showWith(this._language.codes[Yd.CODE_SERVER_STOP].title, "", true);
    }
    onCodeRoomDestroy() {
      this.showWith(this._language.codes[Yd.CODE_ROOM_DESTROY].title, "", true);
    }
    onCodeRoomNotActive() {
      this.showWith(this._language.codes[Yd.CODE_ROOM_NOT_ACTIVE].title, "", true);
    }
    onCodeServerClosed() {
      this.showWith(this._language.codes[Yd.CODE_SERVER_CLOSED].title, "", true);
    }
    onCodeAuthFailed() {
      this.showWith(this._language.codes[Yd.CODE_AUTH_FAILED].title, "", true);
    }
    onCodeServerFull() {
      this.showWith(this._language.codes[Yd.CODE_SERVER_FULL].title, "", true);
    }
    onCodeKeepAliveTimeout() {
      this.showWith(this._language.codes[Yd.CODE_KEEP_ALIVE_TIMEOUT].title, "", true);
    }
    onCodeInvalidState() {
      this.showWith(this._language.codes[Yd.CODE_INVALID_STATE].title, "", true);
    }
    onCodeResetNotAllowed() {
      this.showWith(this._language.codes[Yd.CODE_RESET_NOT_ALLOWED].title, "", true);
    }
    onCodeNewServerRelease() {
      const e = `${this._language.statuses.expectation} ${this._waitSecondsServerRestart} ${this._language.shortSeconds}`;
      this.showWith(e, this._language.codes[Yd.CODE_NEW_SERVER_RELEASE].text.join(""));
    }
    onCodeKick() {}
    onCodeServerRestart() {
      const e = `${this._language.statuses.expectation} ${this._waitSecondsServerRestart} ${this._language.shortSeconds}`;
      this.showWith(e, this._language.codes[Yd.CODE_SERVER_RESTART].text.join(""));
    }
    onDisconnect() {
      this.showWith(this._language.codes.default.title, this._language.codes.default.text.join(""), true);
    }
    setStatus(e) {
      this._$status.innerText = e;
    }
    set reconnectionCount (e) {
      this._reconnectionCount = e, this.reconnectionCount > 1 ? this.setStatus(`${this._language.statuses.connectionAttempt} ${this.reconnectionCount}`) : 1 === this.reconnectionCount && this.setStatus(`${this._language.statuses.connecting}`);
    }
    get reconnectionCount() {
      return this._reconnectionCount;
    }
    startTicker(e, t, n = false) {
      let i = e;
      this.setTicker(1, () => {
        (i -= 1) <= 0 ? (this.stopTicker(), this.startReconnectTicker(n)) : t(i);
      });
    }
    setTicker(e, t) {
      this.stopTicker(), this.stopReconnectTicker(), this._ticker = np.ticker.addToTicker({func: () => t(), tps: e});
    }
    stopTicker() {
      this._ticker && (np.ticker.removeFromTicker(this._ticker), this._ticker = null);
    }
    startReconnectTicker(e = false) {
      this.stopReconnectTicker(), this.tryConnect(e), this._reconnectTicker = np.ticker.addToTicker({func: () => this.tryConnect(e), tps: 1 / this._reconnectSecondsInterval});
    }
    stopReconnectTicker() {
      this._reconnectTicker && (np.ticker.removeFromTicker(this._reconnectTicker), this._reconnectTicker = null);
    }
    tryConnect(e = false) {
      this._gettingServerInfo || (np.socket.isConnected() ? this.onSocketConnect() : (this.reconnectionCount += 1, setTimeout(() => {
        e ? this.receiveServerInfo() : np.connector.connect();
      }, 1e3)));
    }
    receiveServerInfo() {
      this._gettingServerInfo || (this._gettingServerInfo = true, this.setStatus(this._language.statuses.receivingServerInfo), GameSiteApi_GameSiteApi.getAvailableServers().then(e => this.onGetAvailableServers(e.servers)).catch(e => this.onErrorGetAvailableServers(e)));
    }
    onGetAvailableServers(e) {
      this._gettingServerInfo = false;
      let t = false, n = false;
      for (const i in e) {
        const r = e[i];
        parseFloat(r.require_client_version) !== np.modules.mod.version && (t = true), `${r.ip}:${r.port}` === np.socket.getServerAddress() && (n = true);
      }
      const i = e[0];
      t && n ? (np.connector.setNeedConnectAfterReloadPage(), this.setStatus(this._language.statuses.clientWillAutoConnectToServer), setTimeout(() => location.reload(), 2e3)) : false === n ? (np.socket.setServerAddress(`${i.ip}:${i.port}`), np.connector.setNeedConnectAfterReloadPage(), this.setStatus(this._language.statuses.clientWillAutoConnectToServer), setTimeout(() => location.reload(), 2e3)) : (this.setStatus(this._language.statuses.connecting), np.connector.connect());
    }
    onErrorGetAvailableServers(e) {
      this.setStatus(this._language.statuses.errorReceivingServerInfo), this.showText(e), this.showInMainMenu(), this._gettingServerInfo = false;
    }
    onShow() {
      super.onShow();
    }
    onHide() {
      super.onHide(), this.reset();
    }
    showText(e) {
      0 !== e.length && (this._$text.innerHTML = e, this._$text.classList.add("show"));
    }
    hideText() {
      this._$text.classList.contains("show") && this._$text.classList.remove("show");
    }
    showInMainMenu() {
      this._$inMainMenu.classList.add("show");
    }
    hideInMainMenu() {
      this._$inMainMenu.classList.contains("show") && this._$inMainMenu.classList.remove("show");
    }
    showWith(e, t = "", n = false) {
      super.show(), this.setStatus(e), this.showText(t), n && this.showInMainMenu();
    }
    reset() {
      this.stopTicker(), this.stopReconnectTicker(), this._closeSessionCode = null, this._knowCloseSessionCode = false, this._gettingServerInfo = false, this.reconnectionCount = 0, this.hideText(), this.hideInMainMenu(), this.setStatus("");
    }
  }
  class game_over_GameOverScreen_GameOverScreen extends Screen_Screen {
    constructor(e) {
      super(e), this._language = n(201)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$title = document.createElement("div"), this._$text = document.createElement("div"), this._showTimeoutMs = 1e3, this._showReSpawnScreenTimeoutMs = 3e3, this.putTemplate(), this.setListeners(), this.reset();
    }
    putTemplate() {
      this._$container.classList.add("container"), this.get$Screen().appendChild(this._$container), this._$title.classList.add("title"), this._$container.appendChild(this._$title), this._$text.classList.add("text"), this._$container.appendChild(this._$text);
    }
    setListeners() {
      np.events.on("gameOver", e => this.onGameOver(e)), np.socket.events.on("kick", e => this.onKick(e));
    }
    onGameOver(e) {
      this._killerUuid = null, "ENTITY_PLAYER" === e.killerType && np.myServerUuid !== e.killerUuid ? (this._killerUuid = e.killerUuid, this.onDead()) : this.onDead(), this.showWithTimeout();
    }
    onKick(e) {
      this._killerUuid = null, this.setTitle(this._language.kickedOut), this._$title.classList.add("kick"), this.showText(`${this._language.reason}: "${np.languages.parseText(e.message)}"`), this.showWithTimeout();
    }
    onKilled(e) {
      this.setTitle(this._language.dead), this._$title.classList.add("dead"), this.showText(`${e.serverProperties.name} ${this._language.killedYou}`);
    }
    onDead() {
      this.setTitle(this._language.dead), this._$title.classList.add("dead");
    }
    onShow() {
      super.onShow(), this._killerUuid && (np.entities.getEntityByServerUuid(this._killerUuid).ifPresent(e => this.onKilled(e)), this._killerUuid = null), setTimeout(() => {
        np.screens.show(Vd.ReSpawn);
      }, this._showReSpawnScreenTimeoutMs);
    }
    onHide() {
      super.onHide(), this.reset();
    }
    showWithTimeout(e = this._showTimeoutMs) {
      0 === e ? this.show() : setTimeout(() => this.show(), e);
    }
    setTitle(e) {
      this._$title.innerText = e;
    }
    showText(e) {
      0 !== e.length && (this._$text.innerHTML = e, this._$text.classList.add("show"));
    }
    hideText() {
      this._$text.classList.contains("show") && this._$text.classList.remove("show");
    }
    reset() {
      this.setTitle(""), this.hideText(), this._$title.classList.remove("dead"), this._$title.classList.remove("kick");
    }
  }
  class MineEnergySiteApi_MineEnergySiteApi extends GameSiteApi_GameSiteApi {
    static getLeadersBoard(e) {
      return GameSiteApi_GameSiteApi.get(`leaders/${e}`);
    }
    static getRandomRePlay() {
      return GameSiteApi_GameSiteApi.get("replays/random");
    }
    static uploadRePlay(e) {
      const t = JSON.stringify(e), n = new Blob([t], {type: "text/json"}), i = new FormData;
      return i.append("file", n), new Promise((e, t) => GameSiteApi_GameSiteApi.sendFormData({url: "replays/upload", data: i, success: e, error: t}));
    }
  }
  class leaders_board_LeadersBoardPlayer_LeadersBoardPlayer {
    constructor(e, t) {
      this._$container = document.createElement("div"), this._$name = document.createElement("div"), this._$score = document.createElement("div"), this._index = e, this._data = t, this.putTemplate();
    }
    putTemplate() {
      this._$container.classList.add("player"), this._$name.classList.add("name"), this._$name.innerText = `${this._index + 1}. ${ValueUtils.clearNotWhiteListedCharsInName(this._data.nickname)}`, this._$container.appendChild(this._$name), this._$score.classList.add("score"), this._$score.innerText = `$${ValueUtils.getHumanityNumber(this._data.total_score).text}`, this._$container.appendChild(this._$score);
    }
    get$Container() {
      return this._$container;
    }
  }
  var ep;
  !function (e) {
    e[e.TODAY = 0] = "TODAY", e[e.THREE_DAYS = 1] = "THREE_DAYS", e[e.WEEK = 2] = "WEEK";
  }(ep || (ep = {}));
  class leaders_board_LeadersBoard_LeadersBoard {
    constructor() {
      this._language = n(204)("./" + np.languages.activeLanguage + ".json"), this._$container = document.createElement("div"), this._$titleWrap = document.createElement("div"), this._$title = document.createElement("div"), this._$players = document.createElement("div"), this._$intervalWrap = document.createElement("div"), this._$interval = document.createElement("select"), this.putTemplate();
    }
    putTemplate() {
      this._$container.classList.add("block"), this._$container.classList.add("leaders-board"), this._$titleWrap.classList.add("title-wrap"), this._$container.appendChild(this._$titleWrap), this._$title.classList.add("title"), this._$titleWrap.appendChild(this._$title), this._$players.classList.add("players"), this._$container.appendChild(this._$players);
      for (const e in ep) {
        if (false === this._language.interval.hasOwnProperty(e)) continue;
        const t = document.createElement("option");
        t.innerText = this._language.interval[e], t.value = e, this._$interval.appendChild(t);
      }
      this._$intervalWrap.classList.add("interval-wrap"), this._$titleWrap.appendChild(this._$intervalWrap), this._$interval.classList.add("interval"), this._$interval.addEventListener("change", () => this.onChangeInterval()), this._$intervalWrap.appendChild(this._$interval);
    }
    onChangeInterval() {
      this.update(ep[this._$interval.value]);
    }
    get$Container() {
      return this._$container;
    }
    setTitle(e) {
      this._$title.innerHTML = e;
    }
    update(e = ep.TODAY) {
      this._$container.classList.add("loading");
      const t = MineEnergySiteApi_MineEnergySiteApi.getLeadersBoard(e);
      return t.then(e => this.onUpdate(e)).catch(e => {}).then(() => this._$container.classList.remove("loading")), t;
    }
    onUpdate(e) {
      this.clear();
      for (let t = 0; t < e.board.length; t++) {
        const n = new leaders_board_LeadersBoardPlayer_LeadersBoardPlayer(t, e.board[t]);
        this._$players.appendChild(n.get$Container());
      }
    }
    clear() {
      DomUtils_DomUtils.cleanElement(this._$players);
    }
  }
  const tp = n(14);
  class main_MainScreen_MainScreen extends Screen_Screen {
    constructor(e) {
      super(e), this.language = n(207)("./" + np.languages.activeLanguage + ".json"), this.$row1 = document.createElement("div"), this.$row2 = document.createElement("div"), this.$leftCol = document.createElement("div"), this.$centerCol = document.createElement("div"), this.$rightCol = document.createElement("div"), this.$aboutBlock = document.createElement("div"), this.$centerBlock = document.createElement("div"), this.$loginWrap = document.createElement("div"), this.$loginContainer = document.createElement("div"), this.$nicknameWrap = document.createElement("div"), this.$nickname = document.createElement("input"), this.$playButton = document.createElement("button"), this.$selectorsWrap = document.createElement("div"), this.$skins = document.createElement("div"), this.$partners = document.createElement("div"), this.$notMojang = document.createElement("div"), this.$pgi = document.createElement("div"), this._pgiOptions = {slugs: "mine-craft-io,crazy-steve-io,slithercraft.io,minestrike.fun,crazybattle.fun,evowarriors-fun", count: 9}, this._banner300x250 = new AdBanner_AdBanner({id: "mineenergy-fun_300x250", size: "300x250", $container: MineEnergy_MineEnergy.isYandexGamesIframe() ? document.createElement("div") : this.$leftCol}), this._firstPlay = true, this._shareButtons = new share_buttons_ShareButtons_ShareButtons({getOffer: () => this.language.shareButtonsOffer}), this._windowLoaded = false, this._leadersBoard = new leaders_board_LeadersBoard_LeadersBoard, this._filter = new tp, this._filter.addWords(...Cd), this.putTemplate(), this.setListeners();
    }
    putTemplate() {
      this.$row1.classList.add("row"), this.$row1.classList.add("row-1"), this._$screen.appendChild(this.$row1), this.$row2.classList.add("row"), this.$row2.classList.add("row-2"), this._$screen.appendChild(this.$row2), MineEnergy_MineEnergy.isYandexGamesIframe() || (this.$leftCol.classList.add("col"), this.$leftCol.classList.add("left-col"), this.$row1.appendChild(this.$leftCol)), this.$centerCol.classList.add("col"), this.$centerCol.classList.add("center-col"), this.$row1.appendChild(this.$centerCol), this.$rightCol.classList.add("col"), this.$rightCol.classList.add("right-col"), this.$row1.appendChild(this.$rightCol), this._leadersBoard.setTitle(this.language.leadersBoard), this.$rightCol.appendChild(this._leadersBoard.get$Container()), this.$centerBlock.classList.add("block"), this.$centerBlock.classList.add("login"), this.$centerCol.appendChild(this.$centerBlock), this.$loginWrap.classList.add("login-wrap"), this.$centerBlock.appendChild(this.$loginWrap), this.$loginContainer.classList.add("login-container"), this.$loginWrap.appendChild(this.$loginContainer), this.$nicknameWrap.classList.add("nickname-wrap"), this.$loginContainer.appendChild(this.$nicknameWrap), this.$nickname.classList.add("input"), this.$nickname.classList.add("nickname"), this.$nickname.placeholder = this.language.nickname, this.$nickname.maxLength = 15, this.$nickname.autocomplete = "off", this.$nicknameWrap.appendChild(this.$nickname), this.$playButton.classList.add("button"), this.$playButton.classList.add("play-button"), this.$playButton.classList.add("big"), this.$playButton.innerText = this.language.play, this.$loginContainer.appendChild(this.$playButton), np.modules.mod.get(GameFeedBack_GameFeedBack).ifPresent(e => e.setPlayButtonListener(this.$playButton)), MineEnergy_MineEnergy.isYandexGamesIframe() || (this.$selectorsWrap.classList.add("selectors"), this.$centerBlock.appendChild(this.$selectorsWrap), this.$centerBlock.appendChild(this.$skins), this.$centerBlock.appendChild(this._shareButtons.get$Container()), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => {
        e.get$Selector().classList.add("select"), this.$selectorsWrap.appendChild(e.get$Selector());
      })), MineEnergy_MineEnergy.isYandexGamesIframe() || (this.$aboutBlock.classList.add("block"), this.$aboutBlock.classList.add("about"), this.$aboutBlock.classList.add("scroll"), this.$aboutBlock.innerHTML = this.language.about.join(""), this.$centerCol.appendChild(this.$aboutBlock)), np.device.isMobile() || MineEnergy_MineEnergy.isYandexGamesIframe() || (this.$partners.classList.add("partners"), this.addPartner(this.language.partners["playgamesio.net"], "playgamesio.net"), this.addPartner(this.language.partners["crazygames.com"], "crazygames.com"), this.addPartner(this.language.partners["iogames.space"], "iogames.space"), this.addPartner(this.language.partners["multoigri.ru"], "multoigri.ru"), this.addPartner(this.language.partners["igroutka.ru"], "igroutka.ru"), this.addPartner(this.language.partners["titotu.io"], "titotu.io"), this.addPartner(this.language.partners["kevin.games"], "kevin.games"), this.addPartner(this.language.partners["brightestgames.com"], "brightestgames.com"), this.addPartner(this.language.partners["vitalitygames.com"], "vitalitygames.com"), this.addPartner(this.language.partners["gamepix.com"], "gamepix.com"), this.addPartner(this.language.partners["play-games.com"], "play-games.com"), "ru" === np.languages.activeLanguage ? this.addPartner(this.language.partners["gamasexual.ru"], "gamasexual.ru/c/") : this.addPartner(this.language.partners["gamasexual.com"], "gamasexual.com"), this._$screen.appendChild(this.$partners)), this.$notMojang.classList.add("not-mojang"), this.$notMojang.innerText = this.language.notMojang, this._$screen.appendChild(this.$notMojang), this._banner300x250.setDisableAdBlockImages([`${np.modules.mod.gameDirectory}/images/disable-ad-block-1.jpg`]), this._banner300x250.setDisableAdBlockText(this.language.disableAdBlock), this._banner300x250.get$Container().classList.add("block"), this.$pgi.classList.add("pgi"), this.$pgi.classList.add("block"), this.$pgi.classList.add("scroll"), false === MineStrike_MineStrike.isCrazyGamesIframe() && np.modules.mod.get(PlayGamesIo_PlayGamesIo).ifPresent(e => {
        e.createWidget(this.$pgi, this._pgiOptions).then(e => this.pgiWidget = e);
      });
    }
    setListeners() {
      np.events.on("gameStart", () => this.onGameStart()), np.events.on("gameEnd", () => this.onGameEnd()), np.events.on("gameOver", () => this.onGameOver()), np.socket.events.on("connect", () => this.onSocketConnect()), np.connector.events.on("connectorSetUserName", () => this.onConnectorSetUserName()), np.window.events.on("windowLoaded", () => this.onWindowLoaded()), this.$playButton.addEventListener("click", e => this.onClickPlayButton()), this.$nickname.addEventListener("keydown", e => this.nameKeyDown(e));
    }
    onGameStart() {
      np.screens.get$Screens().style.backgroundImage = "none", this._firstPlay = false, np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => e.bgPlayer.stop());
    }
    onGameEnd() {}
    onGameOver() {
      np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.enable());
    }
    onSocketConnect() {
      np.connector.login();
    }
    onClickPlayButton() {
      np.device.isMobile() && np.canvas.enableFullScreen().then(() => np.canvas.lockScreenOrientation()).catch(e => console.log(e));
      const e = ChatColor_ChatColor.clearFromColors(this.$nickname.value);
      np.connector.connectionData.userName = e;
      try {
        np.connector.connectionData.userName = (null == e ? undefined : e.length) > 1 ? this._filter.clean(e) : e;
      } catch (e) {}
      np.events.emit("gamePlay");
    }
    onConnectorSetUserName() {
      this.$nickname.value = ChatColor_ChatColor.clearFromColors(np.connector.getUserName());
    }
    onWindowLoaded() {
      this._windowLoaded = true, np.screens.isActiveScreen(Vd.Main) && np.screens.isDisplaying() && this.tryPlayDeathRePlayer();
    }
    tryPlayDeathRePlayer() {
      np.started || np.modules.mod.get(DeathRePlayer_DeathRePlayer).ifPresent(e => {
        e.bgPlayer.play().then(() => np.canvas.startDraw()).catch(e => {});
      });
    }
    onShow() {
      super.onShow(), false === np.device.isMobile() && this.$nickname.focus(), np.screens.get$ScreensContainer().classList.add("dark"), np.connector.disconnect(), this._banner300x250.show(), this._banner300x250.reFresh(), np.modules.mod.get(Spectator_Spectator).ifPresent(e => e.enable()), MineEnergy_MineEnergy.isYandexGamesIframe() || np.modules.mod.get(ChangeLog_ChangeLog).ifPresent(e => this.$rightCol.appendChild(e.get$Container())), MineEnergy_MineEnergy.isStrictAggregator() || (this.$leftCol.appendChild(this.$pgi), np.modules.mod.get(GameAdsIo_GameAdsIo).ifPresent(e => {
        this.$leftCol.appendChild(e.getBanner().get$Element()), e.loadAd();
      })), false === this._firstPlay ? this.tryPlayDeathRePlayer() : this._windowLoaded && this.tryPlayDeathRePlayer(), this._leadersBoard.update(), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => e.startUpdating());
    }
    onHide() {
      super.onHide(), np.screens.get$ScreensContainer().classList.remove("dark"), np.modules.mod.get(ServerSelector_ServerSelector).ifPresent(e => e.stopUpdating());
    }
    nameKeyDown(e) {
      ad[e.code] === ad.Enter && this.$playButton.click();
    }
    addPartner(e, t, n = "") {
      if (window.location !== window.parent.location && !~document.referrer.indexOf(t)) return;
      n && n.length && (n += ":");
      const i = document.createElement("a");
      i.classList.add("partner"), i.innerText = e, i.href = `${n}//${t}`, i.target = "_blank", this.$partners.appendChild(i);
    }
  }
  class MineEnergy_MineEnergy extends Mod_Mod {
    constructor() {
      super(...arguments), this.name = "MineEnergy", this.apiHost = location.host, this.apiPath = "/api", this.resourceHost = location.host, this.gameDirectory = "/games/mineenergy", this.version = 0.045, this.defaultGeometry = kr, this.optimize2d = true;
    }
    beforeLoadCoreModules() {
      np.$container.classList.add("mineEnergy");
    }
    beforeInitializeCoreModules() {
      np.world.workerClass = n(210), np.textures.texturesFilter = fe, Object.assign(np.entities.entitiesMap, Zd), np.sounds.soundsMap = {}, Object.assign(np.fonts.fontsMap, {defaultFont: `${this.gameDirectory}/fonts/minecraft.ttf`}), np.input.keyBindings.defaultKeyBindings = Od;
    }
    afterInitializeCoreModules() {
      DomUtils_DomUtils.insertCss(n(211)), np.languages.mergeLanguage("en", n(43)), np.languages.mergeLanguage("ru", n(44)), np.canvas.getScene().background = utils_Color_Color.fromScalar(5940842).toThreeColor(), np.textures.preLoadTextures = Qd, this.loadModules(new Discord_Discord({url: "https://discord.gg/bRfaeTT"}), new DiscordBot_DiscordBot(`https://${this.apiHost}/api/discord-bot/`), new DevModeDetector_DevModeDetector, new BackgroundModule_BackgroundModule({backgrounds: [{textureName: "blocks/grass.png", cellSize: new vector_Vector2_Vector2(64, 64), renderOrder: -1}, {textureName: "blocks/liquid/lava_still.png", cellSize: new vector_Vector2_Vector2(64, 64), renderOrder: -2, tiles: new vector_Vector2_Vector2(1, 20), addSize: new vector_Vector2_Vector2(5e3, 5e3), animateEveryFrame: 8, animateLoopType: id.FORWARD_BACKWARD}], defaultWorldSize: new vector_Vector2_Vector2(2e3, 2e3)}), new WorldBorder_WorldBorder({width: 64, textureUrls: ["blocks/bedrock.png"]}), new FxParticles_FxParticles({map: {EXPLOSION: explosion_FxParticleExplosion_FxParticleExplosion}}), new GoogleAnalytics_GoogleAnalytics, MineEnergy_MineEnergy.isYandexGamesIframe() ? undefined : new Chat_Chat({serverLanguage: n(212)("./" + np.languages.activeLanguage + ".json"), mainScreenName: Vd.Main}), new GameFeedBack_GameFeedBack({channelId: "677786756157931521"}), new RayCastEntityProperties_RayCastEntityProperties, new GameMetrics_GameMetrics, new HasBlockAd_HasBlockAd, new Ads_Ads(MineEnergy_MineEnergy.isCrazyGamesIframe() ? new CrazyGamesAds_CrazyGamesAds({scriptUrl: "//sdk.crazygames.com/crazygames-sdk-v1.js", waitTimeBetweenShowPreRoll: MillisHelper.fromMinute(3)}) : MineEnergy_MineEnergy.isMyGamesIframe() ? new MyGamesAds_MyGamesAds({scriptUrl: "//store.my.games/app/18877/static/mailru.core.js", waitTimeBetweenShowPreRoll: MillisHelper.fromMinute(3)}) : MineEnergy_MineEnergy.isYandexGamesIframe() ? new YandexSDKAds_YandexSDKAds({scriptUrl: "//yandex.ru/games/sdk/v2", waitTimeBetweenShowPreRoll: MillisHelper.fromSecond(10)}) : new AdInPlayAds_AdInPlayAds({scriptUrl: "//api.adinplay.com/libs/aiptag/pub/MSK/mineenergy.fun/tag.min.js", waitTimeBetweenShowPreRoll: MillisHelper.fromMinute(3)})), new GameMonetize_GameMonetize("bs2466de0q7tdyhevlqw5djxerbabbzm"), new ChangeLog_ChangeLog({language: n(213)("./" + np.languages.activeLanguage + ".json")}), new ServerSelector_ServerSelector, new ClientVersionTracker_ClientVersionTracker, new VkApi_VkApi({apiId: 7403765}), new FacebookSdk_FacebookSdk({appId: "563111551004265"}), new ChatMessageAbovePlayer_ChatMessageAbovePlayer, new TestClients_TestClients, new GameAdsIo_GameAdsIo, new PlayGamesIo_PlayGamesIo), np.screens.add(new GameScreen_GameScreen(Vd.Game)), np.screens.add(new connect_ConnectScreen_ConnectScreen(Vd.Connect)), np.screens.add(new game_over_GameOverScreen_GameOverScreen(Vd.GameOver)), np.screens.add(new main_MainScreen_MainScreen(Vd.Main)), np.screens.add(new re_spawn_ReSpawnScreen_ReSpawnScreen(Vd.ReSpawn)), np.screens.show(Vd.Main), this.cursor = new Cursor_Cursor, np.canvas.startDraw();
    }
    static isCrazyGamesIframe() {
      return np.window.checkReferrer("crazygames.com");
    }
    static isMyGamesIframe() {
      return np.window.checkReferrer("my.games");
    }
    static isYandexGamesIframe() {
      return !!(location.pathname.includes("yandex") || np.window.checkReferrer("yandex") || UrlUtils_UrlUtils.hasParameter("ya_games"));
    }
    static isStrictAggregator() {
      return this.isCrazyGamesIframe() || this.isYandexGamesIframe();
    }
  }
  n.d(t, "GAME", function () {
    return np;
  }), window.THREE = ValueUtils.objectUnFreeze(n(0)), n(216), n(217), window.Zlib = n(219).Zlib, n(220), n(221), n(222), n(223), n(224), n(225), n(226), n(227), n(228), n(229), n(230);
  const np = new class {
    constructor() {
      this.myServerUuid = "", this.gameOver = false, this.started = false, this.focused = true, this.dev = false, this.logger = new LoggerModule_LoggerModule, this.events = new Events_Events, this.$container = document.createElement("div");
    }
    initialize(e) {
      this.dev = null !== UrlUtils_UrlUtils.getParameter("dev"), this.$container.classList.add("game-mod"), document.body.appendChild(this.$container), this.modules = new Modules_ModulesImpl(e), this.modules.initialize(), np.device.isMobile() && this.$container.classList.add("mobile-device"), this.setListeners();
    }
    get$Container() {
      return this.$container;
    }
    getMyPlayer() {
      return this.entities.getEntity(this.myUuid);
    }
    get myUuid() {
      return np.spawner.getGameUuid(this.myServerUuid);
    }
    setListeners() {
      this.socket.events.on("loginHandshake", e => this.onLoginHandshake(e)), this.socket.events.on("gameOver", e => this.onGameOver(e)), this.events.on("gameEnd", () => this.onGameEnd()), this.window.events.on("blur", () => this.onBlur()), this.window.events.on("focus", () => this.onFocus());
    }
    onLoginHandshake(e) {
      this.config.loadServerInfo(), this.destroyAllEntities(), e && (this.myServerUuid = e.uuid), this.started = true, this.events.getEvent("gameStart").execute();
    }
    destroyAllEntities() {
      this.spawner.destroyServerEntities(), this.particles.killAll(), this.entities.removeAll(), this.instancedEntities.removeAllItems();
    }
    onGameOver(e) {
      Logger_Logger.log("<b>[Game]</b> game_over", e), this.gameOver = true, this.events.getEvent("gameOver").execute(e), this.events.getEvent("gameEnd").execute();
    }
    onGameEnd() {
      this.started = false;
    }
    onBlur() {
      this.focused = false;
    }
    onFocus() {
      this.focused = true;
    }
  };
  window.GAME = np, np.initialize(new MineEnergy_MineEnergy);
}]);
